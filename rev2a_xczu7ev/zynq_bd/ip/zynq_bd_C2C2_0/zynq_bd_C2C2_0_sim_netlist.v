// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// --------------------------------------------------------------------------------
// Tool Version: Vivado v.2023.2 (lin64) Build 4029153 Fri Oct 13 20:13:54 MDT 2023
// Date        : Sat Apr 20 17:03:34 2024
// Host        : tesla.bu.edu running 64-bit AlmaLinux release 8.8 (Sapphire Caracal)
// Command     : write_verilog -force -mode funcsim -rename_top zynq_bd_C2C2_0 -prefix
//               zynq_bd_C2C2_0_ zynq_bd_C2C1_0_sim_netlist.v
// Design      : zynq_bd_C2C1_0
// Purpose     : This verilog netlist is a functional simulation representation of the design and should not be modified
//               or synthesized. This netlist cannot be used for SDF annotated simulation.
// Device      : xczu7ev-fbvb900-2-i
// --------------------------------------------------------------------------------
`timescale 1 ps / 1 ps

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* REG_OUTPUT = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) (* VERSION = "0" *) 
(* WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "GRAY" *) 
module zynq_bd_C2C2_0_xpm_cdc_gray
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [7:0]src_in_bin;
  input dest_clk;
  output [7:0]dest_out_bin;

  wire [7:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[2] ;
  wire [6:0]\^dest_out_bin ;
  wire [6:0]gray_enc;
  wire src_clk;
  wire [7:0]src_in_bin;

  assign dest_out_bin[7] = \dest_graysync_ff[2] [7];
  assign dest_out_bin[6:0] = \^dest_out_bin [6:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\^dest_out_bin [2]),
        .I2(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [2]),
        .O(\^dest_out_bin [1]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [4]),
        .I2(\dest_graysync_ff[2] [6]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .I5(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [6]),
        .I4(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  (* SOFT_HLUTNM = "soft_lutpair215" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair215" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair216" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair216" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair217" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair217" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[7]),
        .Q(async_path[7]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module zynq_bd_C2C2_0_xpm_cdc_gray__10
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [7:0]src_in_bin;
  input dest_clk;
  output [7:0]dest_out_bin;

  wire [7:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[2] ;
  wire [6:0]\^dest_out_bin ;
  wire [6:0]gray_enc;
  wire src_clk;
  wire [7:0]src_in_bin;

  assign dest_out_bin[7] = \dest_graysync_ff[2] [7];
  assign dest_out_bin[6:0] = \^dest_out_bin [6:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\^dest_out_bin [2]),
        .I2(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [2]),
        .O(\^dest_out_bin [1]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [4]),
        .I2(\dest_graysync_ff[2] [6]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .I5(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [6]),
        .I4(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  (* SOFT_HLUTNM = "soft_lutpair210" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair210" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair211" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair211" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair209" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair209" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[7]),
        .Q(async_path[7]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module zynq_bd_C2C2_0_xpm_cdc_gray__6
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [7:0]src_in_bin;
  input dest_clk;
  output [7:0]dest_out_bin;

  wire [7:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[2] ;
  wire [6:0]\^dest_out_bin ;
  wire [6:0]gray_enc;
  wire src_clk;
  wire [7:0]src_in_bin;

  assign dest_out_bin[7] = \dest_graysync_ff[2] [7];
  assign dest_out_bin[6:0] = \^dest_out_bin [6:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\^dest_out_bin [2]),
        .I2(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [2]),
        .O(\^dest_out_bin [1]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [4]),
        .I2(\dest_graysync_ff[2] [6]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .I5(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [6]),
        .I4(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  (* SOFT_HLUTNM = "soft_lutpair177" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair177" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair178" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair178" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair179" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair179" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[7]),
        .Q(async_path[7]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module zynq_bd_C2C2_0_xpm_cdc_gray__7
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [7:0]src_in_bin;
  input dest_clk;
  output [7:0]dest_out_bin;

  wire [7:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[2] ;
  wire [6:0]\^dest_out_bin ;
  wire [6:0]gray_enc;
  wire src_clk;
  wire [7:0]src_in_bin;

  assign dest_out_bin[7] = \dest_graysync_ff[2] [7];
  assign dest_out_bin[6:0] = \^dest_out_bin [6:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\^dest_out_bin [2]),
        .I2(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [2]),
        .O(\^dest_out_bin [1]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [4]),
        .I2(\dest_graysync_ff[2] [6]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .I5(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [6]),
        .I4(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  (* SOFT_HLUTNM = "soft_lutpair184" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair184" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair185" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair185" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair186" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair186" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[7]),
        .Q(async_path[7]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module zynq_bd_C2C2_0_xpm_cdc_gray__8
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [7:0]src_in_bin;
  input dest_clk;
  output [7:0]dest_out_bin;

  wire [7:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[2] ;
  wire [6:0]\^dest_out_bin ;
  wire [6:0]gray_enc;
  wire src_clk;
  wire [7:0]src_in_bin;

  assign dest_out_bin[7] = \dest_graysync_ff[2] [7];
  assign dest_out_bin[6:0] = \^dest_out_bin [6:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\^dest_out_bin [2]),
        .I2(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [2]),
        .O(\^dest_out_bin [1]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [4]),
        .I2(\dest_graysync_ff[2] [6]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .I5(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [6]),
        .I4(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  (* SOFT_HLUTNM = "soft_lutpair145" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair145" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair146" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair146" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair147" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair147" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[7]),
        .Q(async_path[7]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module zynq_bd_C2C2_0_xpm_cdc_gray__9
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [7:0]src_in_bin;
  input dest_clk;
  output [7:0]dest_out_bin;

  wire [7:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[2] ;
  wire [6:0]\^dest_out_bin ;
  wire [6:0]gray_enc;
  wire src_clk;
  wire [7:0]src_in_bin;

  assign dest_out_bin[7] = \dest_graysync_ff[2] [7];
  assign dest_out_bin[6:0] = \^dest_out_bin [6:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\^dest_out_bin [2]),
        .I2(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [2]),
        .O(\^dest_out_bin [1]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [4]),
        .I2(\dest_graysync_ff[2] [6]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .I5(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [6]),
        .I4(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  (* SOFT_HLUTNM = "soft_lutpair152" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair152" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair153" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair153" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair154" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair154" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[7]),
        .Q(async_path[7]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "5" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module zynq_bd_C2C2_0_xpm_cdc_gray__parameterized0
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[3] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[4] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[4] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [0]),
        .Q(\dest_graysync_ff[3] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [1]),
        .Q(\dest_graysync_ff[3] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [2]),
        .Q(\dest_graysync_ff[3] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [3]),
        .Q(\dest_graysync_ff[3] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [4]),
        .Q(\dest_graysync_ff[3] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [5]),
        .Q(\dest_graysync_ff[3] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [6]),
        .Q(\dest_graysync_ff[3] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [7]),
        .Q(\dest_graysync_ff[3] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [8]),
        .Q(\dest_graysync_ff[3] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [0]),
        .Q(\dest_graysync_ff[4] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [1]),
        .Q(\dest_graysync_ff[4] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [2]),
        .Q(\dest_graysync_ff[4] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [3]),
        .Q(\dest_graysync_ff[4] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [4]),
        .Q(\dest_graysync_ff[4] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [5]),
        .Q(\dest_graysync_ff[4] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [6]),
        .Q(\dest_graysync_ff[4] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [7]),
        .Q(\dest_graysync_ff[4] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [8]),
        .Q(\dest_graysync_ff[4] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[4] [0]),
        .I1(\dest_graysync_ff[4] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[4] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[4] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[4] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[4] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[4] [3]),
        .I1(\dest_graysync_ff[4] [5]),
        .I2(\dest_graysync_ff[4] [7]),
        .I3(\dest_graysync_ff[4] [8]),
        .I4(\dest_graysync_ff[4] [6]),
        .I5(\dest_graysync_ff[4] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[4] [4]),
        .I1(\dest_graysync_ff[4] [6]),
        .I2(\dest_graysync_ff[4] [8]),
        .I3(\dest_graysync_ff[4] [7]),
        .I4(\dest_graysync_ff[4] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[4] [5]),
        .I1(\dest_graysync_ff[4] [7]),
        .I2(\dest_graysync_ff[4] [8]),
        .I3(\dest_graysync_ff[4] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[4] [6]),
        .I1(\dest_graysync_ff[4] [8]),
        .I2(\dest_graysync_ff[4] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[4] [7]),
        .I1(\dest_graysync_ff[4] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair213" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair213" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair214" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair214" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair212" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair212" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "5" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module zynq_bd_C2C2_0_xpm_cdc_gray__parameterized0__3
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[3] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[4] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[4] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [0]),
        .Q(\dest_graysync_ff[3] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [1]),
        .Q(\dest_graysync_ff[3] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [2]),
        .Q(\dest_graysync_ff[3] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [3]),
        .Q(\dest_graysync_ff[3] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [4]),
        .Q(\dest_graysync_ff[3] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [5]),
        .Q(\dest_graysync_ff[3] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [6]),
        .Q(\dest_graysync_ff[3] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [7]),
        .Q(\dest_graysync_ff[3] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [8]),
        .Q(\dest_graysync_ff[3] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [0]),
        .Q(\dest_graysync_ff[4] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [1]),
        .Q(\dest_graysync_ff[4] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [2]),
        .Q(\dest_graysync_ff[4] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [3]),
        .Q(\dest_graysync_ff[4] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [4]),
        .Q(\dest_graysync_ff[4] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [5]),
        .Q(\dest_graysync_ff[4] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [6]),
        .Q(\dest_graysync_ff[4] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [7]),
        .Q(\dest_graysync_ff[4] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [8]),
        .Q(\dest_graysync_ff[4] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[4] [0]),
        .I1(\dest_graysync_ff[4] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[4] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[4] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[4] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[4] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[4] [3]),
        .I1(\dest_graysync_ff[4] [5]),
        .I2(\dest_graysync_ff[4] [7]),
        .I3(\dest_graysync_ff[4] [8]),
        .I4(\dest_graysync_ff[4] [6]),
        .I5(\dest_graysync_ff[4] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[4] [4]),
        .I1(\dest_graysync_ff[4] [6]),
        .I2(\dest_graysync_ff[4] [8]),
        .I3(\dest_graysync_ff[4] [7]),
        .I4(\dest_graysync_ff[4] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[4] [5]),
        .I1(\dest_graysync_ff[4] [7]),
        .I2(\dest_graysync_ff[4] [8]),
        .I3(\dest_graysync_ff[4] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[4] [6]),
        .I1(\dest_graysync_ff[4] [8]),
        .I2(\dest_graysync_ff[4] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[4] [7]),
        .I1(\dest_graysync_ff[4] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair180" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair180" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair181" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair181" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair182" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair182" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair183" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair183" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "5" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module zynq_bd_C2C2_0_xpm_cdc_gray__parameterized0__4
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[3] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[4] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[4] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [0]),
        .Q(\dest_graysync_ff[3] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [1]),
        .Q(\dest_graysync_ff[3] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [2]),
        .Q(\dest_graysync_ff[3] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [3]),
        .Q(\dest_graysync_ff[3] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [4]),
        .Q(\dest_graysync_ff[3] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [5]),
        .Q(\dest_graysync_ff[3] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [6]),
        .Q(\dest_graysync_ff[3] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [7]),
        .Q(\dest_graysync_ff[3] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [8]),
        .Q(\dest_graysync_ff[3] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [0]),
        .Q(\dest_graysync_ff[4] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [1]),
        .Q(\dest_graysync_ff[4] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [2]),
        .Q(\dest_graysync_ff[4] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [3]),
        .Q(\dest_graysync_ff[4] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [4]),
        .Q(\dest_graysync_ff[4] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [5]),
        .Q(\dest_graysync_ff[4] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [6]),
        .Q(\dest_graysync_ff[4] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [7]),
        .Q(\dest_graysync_ff[4] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [8]),
        .Q(\dest_graysync_ff[4] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[4] [0]),
        .I1(\dest_graysync_ff[4] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[4] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[4] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[4] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[4] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[4] [3]),
        .I1(\dest_graysync_ff[4] [5]),
        .I2(\dest_graysync_ff[4] [7]),
        .I3(\dest_graysync_ff[4] [8]),
        .I4(\dest_graysync_ff[4] [6]),
        .I5(\dest_graysync_ff[4] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[4] [4]),
        .I1(\dest_graysync_ff[4] [6]),
        .I2(\dest_graysync_ff[4] [8]),
        .I3(\dest_graysync_ff[4] [7]),
        .I4(\dest_graysync_ff[4] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[4] [5]),
        .I1(\dest_graysync_ff[4] [7]),
        .I2(\dest_graysync_ff[4] [8]),
        .I3(\dest_graysync_ff[4] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[4] [6]),
        .I1(\dest_graysync_ff[4] [8]),
        .I2(\dest_graysync_ff[4] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[4] [7]),
        .I1(\dest_graysync_ff[4] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair148" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair148" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair149" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair149" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair150" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair150" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair151" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair151" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module zynq_bd_C2C2_0_xpm_cdc_gray__parameterized1
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[2] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .I5(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair220" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair220" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair219" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair219" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair218" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair218" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module zynq_bd_C2C2_0_xpm_cdc_gray__parameterized1__10
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[2] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .I5(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair316" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair316" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair315" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair315" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair317" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair317" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair318" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair318" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module zynq_bd_C2C2_0_xpm_cdc_gray__parameterized1__11
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[2] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .I5(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair253" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair253" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair254" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair254" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair255" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair255" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair256" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair256" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module zynq_bd_C2C2_0_xpm_cdc_gray__parameterized1__12
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[2] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .I5(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair262" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair262" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair261" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair261" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair263" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair263" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair264" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair264" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module zynq_bd_C2C2_0_xpm_cdc_gray__parameterized1__7
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[2] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .I5(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair189" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair189" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair188" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair188" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair187" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair187" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module zynq_bd_C2C2_0_xpm_cdc_gray__parameterized1__8
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[2] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .I5(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair157" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair157" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair156" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair156" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair155" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair155" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module zynq_bd_C2C2_0_xpm_cdc_gray__parameterized1__9
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[2] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .I5(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair307" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair307" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair308" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair308" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair309" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair309" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair310" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair310" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "5" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "10" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module zynq_bd_C2C2_0_xpm_cdc_gray__parameterized2
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [9:0]src_in_bin;
  input dest_clk;
  output [9:0]dest_out_bin;

  wire [9:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[2] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[3] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[4] ;
  wire [8:0]\^dest_out_bin ;
  wire [8:0]gray_enc;
  wire src_clk;
  wire [9:0]src_in_bin;

  assign dest_out_bin[9] = \dest_graysync_ff[4] [9];
  assign dest_out_bin[8:0] = \^dest_out_bin [8:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[9]),
        .Q(\dest_graysync_ff[0] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [9]),
        .Q(\dest_graysync_ff[1] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [9]),
        .Q(\dest_graysync_ff[2] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [0]),
        .Q(\dest_graysync_ff[3] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [1]),
        .Q(\dest_graysync_ff[3] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [2]),
        .Q(\dest_graysync_ff[3] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [3]),
        .Q(\dest_graysync_ff[3] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [4]),
        .Q(\dest_graysync_ff[3] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [5]),
        .Q(\dest_graysync_ff[3] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [6]),
        .Q(\dest_graysync_ff[3] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [7]),
        .Q(\dest_graysync_ff[3] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [8]),
        .Q(\dest_graysync_ff[3] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [9]),
        .Q(\dest_graysync_ff[3] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [0]),
        .Q(\dest_graysync_ff[4] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [1]),
        .Q(\dest_graysync_ff[4] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [2]),
        .Q(\dest_graysync_ff[4] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [3]),
        .Q(\dest_graysync_ff[4] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [4]),
        .Q(\dest_graysync_ff[4] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [5]),
        .Q(\dest_graysync_ff[4] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [6]),
        .Q(\dest_graysync_ff[4] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [7]),
        .Q(\dest_graysync_ff[4] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [8]),
        .Q(\dest_graysync_ff[4] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [9]),
        .Q(\dest_graysync_ff[4] [9]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[4] [0]),
        .I1(\dest_graysync_ff[4] [2]),
        .I2(\^dest_out_bin [4]),
        .I3(\dest_graysync_ff[4] [3]),
        .I4(\dest_graysync_ff[4] [1]),
        .O(\^dest_out_bin [0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[4] [1]),
        .I1(\dest_graysync_ff[4] [3]),
        .I2(\^dest_out_bin [4]),
        .I3(\dest_graysync_ff[4] [2]),
        .O(\^dest_out_bin [1]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[4] [2]),
        .I1(\^dest_out_bin [4]),
        .I2(\dest_graysync_ff[4] [3]),
        .O(\^dest_out_bin [2]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[4] [3]),
        .I1(\^dest_out_bin [4]),
        .O(\^dest_out_bin [3]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[4] [4]),
        .I1(\dest_graysync_ff[4] [6]),
        .I2(\dest_graysync_ff[4] [8]),
        .I3(\dest_graysync_ff[4] [9]),
        .I4(\dest_graysync_ff[4] [7]),
        .I5(\dest_graysync_ff[4] [5]),
        .O(\^dest_out_bin [4]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[4] [5]),
        .I1(\dest_graysync_ff[4] [7]),
        .I2(\dest_graysync_ff[4] [9]),
        .I3(\dest_graysync_ff[4] [8]),
        .I4(\dest_graysync_ff[4] [6]),
        .O(\^dest_out_bin [5]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[4] [6]),
        .I1(\dest_graysync_ff[4] [8]),
        .I2(\dest_graysync_ff[4] [9]),
        .I3(\dest_graysync_ff[4] [7]),
        .O(\^dest_out_bin [6]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[4] [7]),
        .I1(\dest_graysync_ff[4] [9]),
        .I2(\dest_graysync_ff[4] [8]),
        .O(\^dest_out_bin [7]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[8]_INST_0 
       (.I0(\dest_graysync_ff[4] [8]),
        .I1(\dest_graysync_ff[4] [9]),
        .O(\^dest_out_bin [8]));
  (* SOFT_HLUTNM = "soft_lutpair257" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair257" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair258" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair258" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair259" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair259" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair260" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair260" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[8]_i_1 
       (.I0(src_in_bin[9]),
        .I1(src_in_bin[8]),
        .O(gray_enc[8]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[8]),
        .Q(async_path[8]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[9] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[9]),
        .Q(async_path[9]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "5" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "10" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module zynq_bd_C2C2_0_xpm_cdc_gray__parameterized2__2
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [9:0]src_in_bin;
  input dest_clk;
  output [9:0]dest_out_bin;

  wire [9:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[2] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[3] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[4] ;
  wire [8:0]\^dest_out_bin ;
  wire [8:0]gray_enc;
  wire src_clk;
  wire [9:0]src_in_bin;

  assign dest_out_bin[9] = \dest_graysync_ff[4] [9];
  assign dest_out_bin[8:0] = \^dest_out_bin [8:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[9]),
        .Q(\dest_graysync_ff[0] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [9]),
        .Q(\dest_graysync_ff[1] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [9]),
        .Q(\dest_graysync_ff[2] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [0]),
        .Q(\dest_graysync_ff[3] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [1]),
        .Q(\dest_graysync_ff[3] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [2]),
        .Q(\dest_graysync_ff[3] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [3]),
        .Q(\dest_graysync_ff[3] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [4]),
        .Q(\dest_graysync_ff[3] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [5]),
        .Q(\dest_graysync_ff[3] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [6]),
        .Q(\dest_graysync_ff[3] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [7]),
        .Q(\dest_graysync_ff[3] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [8]),
        .Q(\dest_graysync_ff[3] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [9]),
        .Q(\dest_graysync_ff[3] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [0]),
        .Q(\dest_graysync_ff[4] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [1]),
        .Q(\dest_graysync_ff[4] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [2]),
        .Q(\dest_graysync_ff[4] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [3]),
        .Q(\dest_graysync_ff[4] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [4]),
        .Q(\dest_graysync_ff[4] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [5]),
        .Q(\dest_graysync_ff[4] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [6]),
        .Q(\dest_graysync_ff[4] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [7]),
        .Q(\dest_graysync_ff[4] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [8]),
        .Q(\dest_graysync_ff[4] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [9]),
        .Q(\dest_graysync_ff[4] [9]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[4] [0]),
        .I1(\dest_graysync_ff[4] [2]),
        .I2(\^dest_out_bin [4]),
        .I3(\dest_graysync_ff[4] [3]),
        .I4(\dest_graysync_ff[4] [1]),
        .O(\^dest_out_bin [0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[4] [1]),
        .I1(\dest_graysync_ff[4] [3]),
        .I2(\^dest_out_bin [4]),
        .I3(\dest_graysync_ff[4] [2]),
        .O(\^dest_out_bin [1]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[4] [2]),
        .I1(\^dest_out_bin [4]),
        .I2(\dest_graysync_ff[4] [3]),
        .O(\^dest_out_bin [2]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[4] [3]),
        .I1(\^dest_out_bin [4]),
        .O(\^dest_out_bin [3]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[4] [4]),
        .I1(\dest_graysync_ff[4] [6]),
        .I2(\dest_graysync_ff[4] [8]),
        .I3(\dest_graysync_ff[4] [9]),
        .I4(\dest_graysync_ff[4] [7]),
        .I5(\dest_graysync_ff[4] [5]),
        .O(\^dest_out_bin [4]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[4] [5]),
        .I1(\dest_graysync_ff[4] [7]),
        .I2(\dest_graysync_ff[4] [9]),
        .I3(\dest_graysync_ff[4] [8]),
        .I4(\dest_graysync_ff[4] [6]),
        .O(\^dest_out_bin [5]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[4] [6]),
        .I1(\dest_graysync_ff[4] [8]),
        .I2(\dest_graysync_ff[4] [9]),
        .I3(\dest_graysync_ff[4] [7]),
        .O(\^dest_out_bin [6]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[4] [7]),
        .I1(\dest_graysync_ff[4] [9]),
        .I2(\dest_graysync_ff[4] [8]),
        .O(\^dest_out_bin [7]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[8]_INST_0 
       (.I0(\dest_graysync_ff[4] [8]),
        .I1(\dest_graysync_ff[4] [9]),
        .O(\^dest_out_bin [8]));
  (* SOFT_HLUTNM = "soft_lutpair311" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair311" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair312" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair312" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair313" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair313" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair314" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair314" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[8]_i_1 
       (.I0(src_in_bin[9]),
        .I1(src_in_bin[8]),
        .O(gray_enc[8]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[8]),
        .Q(async_path[8]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[9] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[9]),
        .Q(async_path[9]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "10" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module zynq_bd_C2C2_0_xpm_cdc_gray__parameterized3
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [9:0]src_in_bin;
  input dest_clk;
  output [9:0]dest_out_bin;

  wire [9:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[2] ;
  wire [8:0]\^dest_out_bin ;
  wire [8:0]gray_enc;
  wire src_clk;
  wire [9:0]src_in_bin;

  assign dest_out_bin[9] = \dest_graysync_ff[2] [9];
  assign dest_out_bin[8:0] = \^dest_out_bin [8:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[9]),
        .Q(\dest_graysync_ff[0] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [9]),
        .Q(\dest_graysync_ff[1] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [9]),
        .Q(\dest_graysync_ff[2] [9]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [4]),
        .I3(\dest_graysync_ff[2] [3]),
        .I4(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\dest_graysync_ff[2] [3]),
        .I2(\^dest_out_bin [4]),
        .I3(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [4]),
        .I2(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\^dest_out_bin [4]),
        .O(\^dest_out_bin [3]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [9]),
        .I4(\dest_graysync_ff[2] [7]),
        .I5(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [9]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [9]),
        .I3(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [9]),
        .I2(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[8]_INST_0 
       (.I0(\dest_graysync_ff[2] [8]),
        .I1(\dest_graysync_ff[2] [9]),
        .O(\^dest_out_bin [8]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair268" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair268" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair267" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair267" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair266" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair266" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair265" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  (* SOFT_HLUTNM = "soft_lutpair265" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[8]_i_1 
       (.I0(src_in_bin[9]),
        .I1(src_in_bin[8]),
        .O(gray_enc[8]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[8]),
        .Q(async_path[8]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[9] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[9]),
        .Q(async_path[9]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "10" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module zynq_bd_C2C2_0_xpm_cdc_gray__parameterized3__2
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [9:0]src_in_bin;
  input dest_clk;
  output [9:0]dest_out_bin;

  wire [9:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[2] ;
  wire [8:0]\^dest_out_bin ;
  wire [8:0]gray_enc;
  wire src_clk;
  wire [9:0]src_in_bin;

  assign dest_out_bin[9] = \dest_graysync_ff[2] [9];
  assign dest_out_bin[8:0] = \^dest_out_bin [8:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[9]),
        .Q(\dest_graysync_ff[0] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [9]),
        .Q(\dest_graysync_ff[1] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [9]),
        .Q(\dest_graysync_ff[2] [9]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [4]),
        .I3(\dest_graysync_ff[2] [3]),
        .I4(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\dest_graysync_ff[2] [3]),
        .I2(\^dest_out_bin [4]),
        .I3(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [4]),
        .I2(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\^dest_out_bin [4]),
        .O(\^dest_out_bin [3]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [9]),
        .I4(\dest_graysync_ff[2] [7]),
        .I5(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [9]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [9]),
        .I3(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [9]),
        .I2(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[8]_INST_0 
       (.I0(\dest_graysync_ff[2] [8]),
        .I1(\dest_graysync_ff[2] [9]),
        .O(\^dest_out_bin [8]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair322" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair322" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair321" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair321" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair320" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair320" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair319" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  (* SOFT_HLUTNM = "soft_lutpair319" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[8]_i_1 
       (.I0(src_in_bin[9]),
        .I1(src_in_bin[8]),
        .O(gray_enc[8]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[8]),
        .Q(async_path[8]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[9] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[9]),
        .Q(async_path[9]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "4" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module zynq_bd_C2C2_0_xpm_cdc_gray__parameterized4
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [3:0]src_in_bin;
  input dest_clk;
  output [3:0]dest_out_bin;

  wire [3:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[2] ;
  wire [2:0]\^dest_out_bin ;
  wire [2:0]gray_enc;
  wire src_clk;
  wire [3:0]src_in_bin;

  assign dest_out_bin[3] = \dest_graysync_ff[2] [3];
  assign dest_out_bin[2:0] = \^dest_out_bin [2:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\dest_graysync_ff[2] [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\dest_graysync_ff[2] [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[3]),
        .Q(async_path[3]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "4" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module zynq_bd_C2C2_0_xpm_cdc_gray__parameterized4__4
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [3:0]src_in_bin;
  input dest_clk;
  output [3:0]dest_out_bin;

  wire [3:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[2] ;
  wire [2:0]\^dest_out_bin ;
  wire [2:0]gray_enc;
  wire src_clk;
  wire [3:0]src_in_bin;

  assign dest_out_bin[3] = \dest_graysync_ff[2] [3];
  assign dest_out_bin[2:0] = \^dest_out_bin [2:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\dest_graysync_ff[2] [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\dest_graysync_ff[2] [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[3]),
        .Q(async_path[3]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "4" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module zynq_bd_C2C2_0_xpm_cdc_gray__parameterized4__5
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [3:0]src_in_bin;
  input dest_clk;
  output [3:0]dest_out_bin;

  wire [3:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[2] ;
  wire [2:0]\^dest_out_bin ;
  wire [2:0]gray_enc;
  wire src_clk;
  wire [3:0]src_in_bin;

  assign dest_out_bin[3] = \dest_graysync_ff[2] [3];
  assign dest_out_bin[2:0] = \^dest_out_bin [2:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\dest_graysync_ff[2] [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\dest_graysync_ff[2] [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[3]),
        .Q(async_path[3]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "4" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module zynq_bd_C2C2_0_xpm_cdc_gray__parameterized4__6
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [3:0]src_in_bin;
  input dest_clk;
  output [3:0]dest_out_bin;

  wire [3:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[2] ;
  wire [2:0]\^dest_out_bin ;
  wire [2:0]gray_enc;
  wire src_clk;
  wire [3:0]src_in_bin;

  assign dest_out_bin[3] = \dest_graysync_ff[2] [3];
  assign dest_out_bin[2:0] = \^dest_out_bin [2:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\dest_graysync_ff[2] [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\dest_graysync_ff[2] [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[3]),
        .Q(async_path[3]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "5" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "5" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module zynq_bd_C2C2_0_xpm_cdc_gray__parameterized5
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [4:0]src_in_bin;
  input dest_clk;
  output [4:0]dest_out_bin;

  wire [4:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[2] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[3] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[4] ;
  wire [3:0]\^dest_out_bin ;
  wire [3:0]gray_enc;
  wire src_clk;
  wire [4:0]src_in_bin;

  assign dest_out_bin[4] = \dest_graysync_ff[4] [4];
  assign dest_out_bin[3:0] = \^dest_out_bin [3:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [0]),
        .Q(\dest_graysync_ff[3] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [1]),
        .Q(\dest_graysync_ff[3] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [2]),
        .Q(\dest_graysync_ff[3] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [3]),
        .Q(\dest_graysync_ff[3] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [4]),
        .Q(\dest_graysync_ff[3] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [0]),
        .Q(\dest_graysync_ff[4] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [1]),
        .Q(\dest_graysync_ff[4] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [2]),
        .Q(\dest_graysync_ff[4] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [3]),
        .Q(\dest_graysync_ff[4] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [4]),
        .Q(\dest_graysync_ff[4] [4]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[4] [0]),
        .I1(\dest_graysync_ff[4] [2]),
        .I2(\dest_graysync_ff[4] [4]),
        .I3(\dest_graysync_ff[4] [3]),
        .I4(\dest_graysync_ff[4] [1]),
        .O(\^dest_out_bin [0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[4] [1]),
        .I1(\dest_graysync_ff[4] [3]),
        .I2(\dest_graysync_ff[4] [4]),
        .I3(\dest_graysync_ff[4] [2]),
        .O(\^dest_out_bin [1]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[4] [2]),
        .I1(\dest_graysync_ff[4] [4]),
        .I2(\dest_graysync_ff[4] [3]),
        .O(\^dest_out_bin [2]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[4] [3]),
        .I1(\dest_graysync_ff[4] [4]),
        .O(\^dest_out_bin [3]));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[4]),
        .Q(async_path[4]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "5" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "5" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module zynq_bd_C2C2_0_xpm_cdc_gray__parameterized5__2
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [4:0]src_in_bin;
  input dest_clk;
  output [4:0]dest_out_bin;

  wire [4:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[2] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[3] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[4] ;
  wire [3:0]\^dest_out_bin ;
  wire [3:0]gray_enc;
  wire src_clk;
  wire [4:0]src_in_bin;

  assign dest_out_bin[4] = \dest_graysync_ff[4] [4];
  assign dest_out_bin[3:0] = \^dest_out_bin [3:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [0]),
        .Q(\dest_graysync_ff[3] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [1]),
        .Q(\dest_graysync_ff[3] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [2]),
        .Q(\dest_graysync_ff[3] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [3]),
        .Q(\dest_graysync_ff[3] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [4]),
        .Q(\dest_graysync_ff[3] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [0]),
        .Q(\dest_graysync_ff[4] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [1]),
        .Q(\dest_graysync_ff[4] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [2]),
        .Q(\dest_graysync_ff[4] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [3]),
        .Q(\dest_graysync_ff[4] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [4]),
        .Q(\dest_graysync_ff[4] [4]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[4] [0]),
        .I1(\dest_graysync_ff[4] [2]),
        .I2(\dest_graysync_ff[4] [4]),
        .I3(\dest_graysync_ff[4] [3]),
        .I4(\dest_graysync_ff[4] [1]),
        .O(\^dest_out_bin [0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[4] [1]),
        .I1(\dest_graysync_ff[4] [3]),
        .I2(\dest_graysync_ff[4] [4]),
        .I3(\dest_graysync_ff[4] [2]),
        .O(\^dest_out_bin [1]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[4] [2]),
        .I1(\dest_graysync_ff[4] [4]),
        .I2(\dest_graysync_ff[4] [3]),
        .O(\^dest_out_bin [2]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[4] [3]),
        .I1(\dest_graysync_ff[4] [4]),
        .O(\^dest_out_bin [3]));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[4]),
        .Q(async_path[4]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "5" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module zynq_bd_C2C2_0_xpm_cdc_gray__parameterized6
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [4:0]src_in_bin;
  input dest_clk;
  output [4:0]dest_out_bin;

  wire [4:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[2] ;
  wire [3:0]\^dest_out_bin ;
  wire [3:0]gray_enc;
  wire src_clk;
  wire [4:0]src_in_bin;

  assign dest_out_bin[4] = \dest_graysync_ff[2] [4];
  assign dest_out_bin[3:0] = \^dest_out_bin [3:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\dest_graysync_ff[2] [4]),
        .I3(\dest_graysync_ff[2] [3]),
        .I4(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\dest_graysync_ff[2] [3]),
        .I2(\dest_graysync_ff[2] [4]),
        .I3(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [4]),
        .I2(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[4]),
        .Q(async_path[4]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "5" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module zynq_bd_C2C2_0_xpm_cdc_gray__parameterized6__2
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [4:0]src_in_bin;
  input dest_clk;
  output [4:0]dest_out_bin;

  wire [4:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[2] ;
  wire [3:0]\^dest_out_bin ;
  wire [3:0]gray_enc;
  wire src_clk;
  wire [4:0]src_in_bin;

  assign dest_out_bin[4] = \dest_graysync_ff[2] [4];
  assign dest_out_bin[3:0] = \^dest_out_bin [3:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\dest_graysync_ff[2] [4]),
        .I3(\dest_graysync_ff[2] [3]),
        .I4(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\dest_graysync_ff[2] [3]),
        .I2(\dest_graysync_ff[2] [4]),
        .I3(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [4]),
        .I2(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[4]),
        .Q(async_path[4]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* SIM_ASSERT_CHK = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SYNC_RST" *) 
module zynq_bd_C2C2_0_xpm_cdc_sync_rst
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module zynq_bd_C2C2_0_xpm_cdc_sync_rst__14
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module zynq_bd_C2C2_0_xpm_cdc_sync_rst__15
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module zynq_bd_C2C2_0_xpm_cdc_sync_rst__16
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module zynq_bd_C2C2_0_xpm_cdc_sync_rst__17
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module zynq_bd_C2C2_0_xpm_cdc_sync_rst__18
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module zynq_bd_C2C2_0_xpm_cdc_sync_rst__19
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module zynq_bd_C2C2_0_xpm_cdc_sync_rst__20
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module zynq_bd_C2C2_0_xpm_cdc_sync_rst__21
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module zynq_bd_C2C2_0_xpm_cdc_sync_rst__22
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module zynq_bd_C2C2_0_xpm_cdc_sync_rst__23
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module zynq_bd_C2C2_0_xpm_cdc_sync_rst__24
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module zynq_bd_C2C2_0_xpm_cdc_sync_rst__25
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module zynq_bd_C2C2_0_xpm_cdc_sync_rst__26
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

module zynq_bd_C2C2_0_xpm_counter_updn
   (Q,
    src_in_bin,
    DI,
    ram_empty_i,
    rd_en,
    \count_value_i_reg[0]_0 ,
    \src_gray_ff_reg[0] ,
    SR,
    rd_clk);
  output [1:0]Q;
  output [0:0]src_in_bin;
  output [1:0]DI;
  input ram_empty_i;
  input rd_en;
  input [1:0]\count_value_i_reg[0]_0 ;
  input [0:0]\src_gray_ff_reg[0] ;
  input [0:0]SR;
  input rd_clk;

  wire [1:0]DI;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i[0]_i_1__2_n_0 ;
  wire \count_value_i[1]_i_3_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \gen_fwft.count_en ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [0:0]\src_gray_ff_reg[0] ;
  wire [0:0]src_in_bin;

  LUT5 #(
    .INIT(32'h696A9999)) 
    \count_value_i[0]_i_1__2 
       (.I0(Q[0]),
        .I1(ram_empty_i),
        .I2(rd_en),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(\count_value_i_reg[0]_0 [1]),
        .O(\count_value_i[0]_i_1__2_n_0 ));
  LUT4 #(
    .INIT(16'h9855)) 
    \count_value_i[1]_i_2 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(\count_value_i_reg[0]_0 [1]),
        .O(\gen_fwft.count_en ));
  LUT6 #(
    .INIT(64'h9A9AAAAAA6A666A6)) 
    \count_value_i[1]_i_3 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(rd_en),
        .I5(ram_empty_i),
        .O(\count_value_i[1]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[0]_i_1__2_n_0 ),
        .Q(Q[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[1]_i_3_n_0 ),
        .Q(Q[1]),
        .R(SR));
  LUT2 #(
    .INIT(4'h6)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[0] ),
        .O(src_in_bin));
  LUT2 #(
    .INIT(4'hB)) 
    \grdc.rd_data_count_i[7]_i_8 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[0] ),
        .O(DI[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \grdc.rd_data_count_i[7]_i_9 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[0] ),
        .O(DI[0]));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn_21
   (Q,
    src_in_bin,
    S,
    DI,
    ram_empty_i,
    \count_value_i_reg[0]_0 ,
    rd_en,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[7]_0 ,
    SR,
    rd_clk);
  output [1:0]Q;
  output [0:0]src_in_bin;
  output [1:0]S;
  output [0:0]DI;
  input ram_empty_i;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input [1:0]\grdc.rd_data_count_i_reg[7] ;
  input [1:0]\grdc.rd_data_count_i_reg[7]_0 ;
  input [0:0]SR;
  input rd_clk;

  wire [0:0]DI;
  wire [1:0]Q;
  wire [1:0]S;
  wire [0:0]SR;
  wire \count_value_i[0]_i_1__3_n_0 ;
  wire \count_value_i[1]_i_3_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \gen_fwft.count_en ;
  wire [1:0]\grdc.rd_data_count_i_reg[7] ;
  wire [1:0]\grdc.rd_data_count_i_reg[7]_0 ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [0:0]src_in_bin;

  LUT5 #(
    .INIT(32'h5AAAA655)) 
    \count_value_i[0]_i_1__3 
       (.I0(Q[0]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(ram_empty_i),
        .O(\count_value_i[0]_i_1__3_n_0 ));
  LUT4 #(
    .INIT(16'hC02F)) 
    \count_value_i[1]_i_2 
       (.I0(\count_value_i_reg[0]_0 [0]),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(ram_empty_i),
        .O(\gen_fwft.count_en ));
  LUT6 #(
    .INIT(64'hA999A9A96AAA6AAA)) 
    \count_value_i[1]_i_3 
       (.I0(Q[1]),
        .I1(ram_empty_i),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(rd_en),
        .I4(\count_value_i_reg[0]_0 [0]),
        .I5(Q[0]),
        .O(\count_value_i[1]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[0]_i_1__3_n_0 ),
        .Q(Q[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[1]_i_3_n_0 ),
        .Q(Q[1]),
        .R(SR));
  LUT4 #(
    .INIT(16'h2DD2)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_8 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .O(src_in_bin));
  LUT4 #(
    .INIT(16'h9669)) 
    \grdc.rd_data_count_i[7]_i_15 
       (.I0(DI),
        .I1(Q[1]),
        .I2(\grdc.rd_data_count_i_reg[7] [1]),
        .I3(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .O(S[1]));
  (* HLUTNM = "lutpair2" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \grdc.rd_data_count_i[7]_i_16 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(\grdc.rd_data_count_i_reg[7]_0 [0]),
        .O(S[0]));
  (* HLUTNM = "lutpair2" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \grdc.rd_data_count_i[7]_i_8 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .O(DI));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn_29
   (Q,
    src_in_bin,
    S,
    DI,
    ram_empty_i,
    \count_value_i_reg[0]_0 ,
    rd_en,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[7]_0 ,
    SR,
    rd_clk);
  output [1:0]Q;
  output [0:0]src_in_bin;
  output [1:0]S;
  output [0:0]DI;
  input ram_empty_i;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input [1:0]\grdc.rd_data_count_i_reg[7] ;
  input [1:0]\grdc.rd_data_count_i_reg[7]_0 ;
  input [0:0]SR;
  input rd_clk;

  wire [0:0]DI;
  wire [1:0]Q;
  wire [1:0]S;
  wire [0:0]SR;
  wire \count_value_i[0]_i_1__3_n_0 ;
  wire \count_value_i[1]_i_3_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \gen_fwft.count_en ;
  wire [1:0]\grdc.rd_data_count_i_reg[7] ;
  wire [1:0]\grdc.rd_data_count_i_reg[7]_0 ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [0:0]src_in_bin;

  LUT5 #(
    .INIT(32'h5AAAA655)) 
    \count_value_i[0]_i_1__3 
       (.I0(Q[0]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(ram_empty_i),
        .O(\count_value_i[0]_i_1__3_n_0 ));
  LUT4 #(
    .INIT(16'hC02F)) 
    \count_value_i[1]_i_2 
       (.I0(\count_value_i_reg[0]_0 [0]),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(ram_empty_i),
        .O(\gen_fwft.count_en ));
  LUT6 #(
    .INIT(64'hA999A9A96AAA6AAA)) 
    \count_value_i[1]_i_3 
       (.I0(Q[1]),
        .I1(ram_empty_i),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(rd_en),
        .I4(\count_value_i_reg[0]_0 [0]),
        .I5(Q[0]),
        .O(\count_value_i[1]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[0]_i_1__3_n_0 ),
        .Q(Q[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[1]_i_3_n_0 ),
        .Q(Q[1]),
        .R(SR));
  LUT4 #(
    .INIT(16'h2DD2)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_8 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .O(src_in_bin));
  LUT4 #(
    .INIT(16'h9669)) 
    \grdc.rd_data_count_i[7]_i_15 
       (.I0(DI),
        .I1(Q[1]),
        .I2(\grdc.rd_data_count_i_reg[7] [1]),
        .I3(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .O(S[1]));
  (* HLUTNM = "lutpair0" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \grdc.rd_data_count_i[7]_i_16 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(\grdc.rd_data_count_i_reg[7]_0 [0]),
        .O(S[0]));
  (* HLUTNM = "lutpair0" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \grdc.rd_data_count_i[7]_i_8 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .O(DI));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn_40
   (Q,
    src_in_bin,
    S,
    DI,
    ram_empty_i,
    \count_value_i_reg[0]_0 ,
    rd_en,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[7]_0 ,
    SR,
    rd_clk);
  output [1:0]Q;
  output [0:0]src_in_bin;
  output [1:0]S;
  output [0:0]DI;
  input ram_empty_i;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input [1:0]\grdc.rd_data_count_i_reg[7] ;
  input [1:0]\grdc.rd_data_count_i_reg[7]_0 ;
  input [0:0]SR;
  input rd_clk;

  wire [0:0]DI;
  wire [1:0]Q;
  wire [1:0]S;
  wire [0:0]SR;
  wire \count_value_i[0]_i_1__3_n_0 ;
  wire \count_value_i[1]_i_3_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \gen_fwft.count_en ;
  wire [1:0]\grdc.rd_data_count_i_reg[7] ;
  wire [1:0]\grdc.rd_data_count_i_reg[7]_0 ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [0:0]src_in_bin;

  LUT5 #(
    .INIT(32'h5AAAA655)) 
    \count_value_i[0]_i_1__3 
       (.I0(Q[0]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(ram_empty_i),
        .O(\count_value_i[0]_i_1__3_n_0 ));
  LUT4 #(
    .INIT(16'hC02F)) 
    \count_value_i[1]_i_2 
       (.I0(\count_value_i_reg[0]_0 [0]),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(ram_empty_i),
        .O(\gen_fwft.count_en ));
  LUT6 #(
    .INIT(64'hA999A9A96AAA6AAA)) 
    \count_value_i[1]_i_3 
       (.I0(Q[1]),
        .I1(ram_empty_i),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(rd_en),
        .I4(\count_value_i_reg[0]_0 [0]),
        .I5(Q[0]),
        .O(\count_value_i[1]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[0]_i_1__3_n_0 ),
        .Q(Q[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[1]_i_3_n_0 ),
        .Q(Q[1]),
        .R(SR));
  LUT4 #(
    .INIT(16'h2DD2)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_8 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .O(src_in_bin));
  LUT4 #(
    .INIT(16'h9669)) 
    \grdc.rd_data_count_i[7]_i_15 
       (.I0(DI),
        .I1(Q[1]),
        .I2(\grdc.rd_data_count_i_reg[7] [1]),
        .I3(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .O(S[1]));
  (* HLUTNM = "lutpair1" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \grdc.rd_data_count_i[7]_i_16 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(\grdc.rd_data_count_i_reg[7]_0 [0]),
        .O(S[0]));
  (* HLUTNM = "lutpair1" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \grdc.rd_data_count_i[7]_i_8 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .O(DI));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn_50
   (Q,
    D,
    \count_value_i_reg[1]_0 ,
    src_in_bin,
    ram_empty_i,
    \count_value_i_reg[1]_1 ,
    rd_en,
    \grdc.rd_data_count_i_reg[2] ,
    \grdc.rd_data_count_i_reg[2]_0 ,
    SR,
    rd_clk);
  output [1:0]Q;
  output [0:0]D;
  output \count_value_i_reg[1]_0 ;
  output [0:0]src_in_bin;
  input ram_empty_i;
  input [1:0]\count_value_i_reg[1]_1 ;
  input rd_en;
  input [2:0]\grdc.rd_data_count_i_reg[2] ;
  input [2:0]\grdc.rd_data_count_i_reg[2]_0 ;
  input [0:0]SR;
  input rd_clk;

  wire [0:0]D;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i[0]_i_1__3_n_0 ;
  wire \count_value_i[1]_i_3_n_0 ;
  wire \count_value_i_reg[1]_0 ;
  wire [1:0]\count_value_i_reg[1]_1 ;
  wire \gen_fwft.count_en ;
  wire [2:0]\grdc.rd_data_count_i_reg[2] ;
  wire [2:0]\grdc.rd_data_count_i_reg[2]_0 ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [0:0]src_in_bin;

  LUT5 #(
    .INIT(32'h5AAAA655)) 
    \count_value_i[0]_i_1__3 
       (.I0(Q[0]),
        .I1(\count_value_i_reg[1]_1 [0]),
        .I2(rd_en),
        .I3(\count_value_i_reg[1]_1 [1]),
        .I4(ram_empty_i),
        .O(\count_value_i[0]_i_1__3_n_0 ));
  LUT4 #(
    .INIT(16'hC02F)) 
    \count_value_i[1]_i_2 
       (.I0(\count_value_i_reg[1]_1 [0]),
        .I1(rd_en),
        .I2(\count_value_i_reg[1]_1 [1]),
        .I3(ram_empty_i),
        .O(\gen_fwft.count_en ));
  LUT6 #(
    .INIT(64'hA999A9A96AAA6AAA)) 
    \count_value_i[1]_i_3 
       (.I0(Q[1]),
        .I1(ram_empty_i),
        .I2(\count_value_i_reg[1]_1 [1]),
        .I3(rd_en),
        .I4(\count_value_i_reg[1]_1 [0]),
        .I5(Q[0]),
        .O(\count_value_i[1]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[0]_i_1__3_n_0 ),
        .Q(Q[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[1]_i_3_n_0 ),
        .Q(Q[1]),
        .R(SR));
  LUT4 #(
    .INIT(16'h2DD2)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_4 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[2]_0 [0]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[2]_0 [1]),
        .O(src_in_bin));
  LUT6 #(
    .INIT(64'h9696699669966969)) 
    \grdc.rd_data_count_i[2]_i_1 
       (.I0(\count_value_i_reg[1]_0 ),
        .I1(\grdc.rd_data_count_i_reg[2] [2]),
        .I2(\grdc.rd_data_count_i_reg[2]_0 [2]),
        .I3(\grdc.rd_data_count_i_reg[2]_0 [1]),
        .I4(Q[1]),
        .I5(\grdc.rd_data_count_i_reg[2] [1]),
        .O(D));
  LUT6 #(
    .INIT(64'h69FF696969690069)) 
    \grdc.rd_data_count_i[4]_i_4 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[2]_0 [1]),
        .I2(\grdc.rd_data_count_i_reg[2] [1]),
        .I3(\grdc.rd_data_count_i_reg[2]_0 [0]),
        .I4(Q[0]),
        .I5(\grdc.rd_data_count_i_reg[2] [0]),
        .O(\count_value_i_reg[1]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn_58
   (Q,
    D,
    \count_value_i_reg[1]_0 ,
    src_in_bin,
    ram_empty_i,
    \count_value_i_reg[1]_1 ,
    rd_en,
    \grdc.rd_data_count_i_reg[2] ,
    \grdc.rd_data_count_i_reg[2]_0 ,
    SR,
    rd_clk);
  output [1:0]Q;
  output [0:0]D;
  output \count_value_i_reg[1]_0 ;
  output [0:0]src_in_bin;
  input ram_empty_i;
  input [1:0]\count_value_i_reg[1]_1 ;
  input rd_en;
  input [2:0]\grdc.rd_data_count_i_reg[2] ;
  input [2:0]\grdc.rd_data_count_i_reg[2]_0 ;
  input [0:0]SR;
  input rd_clk;

  wire [0:0]D;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i[0]_i_1__3_n_0 ;
  wire \count_value_i[1]_i_3_n_0 ;
  wire \count_value_i_reg[1]_0 ;
  wire [1:0]\count_value_i_reg[1]_1 ;
  wire \gen_fwft.count_en ;
  wire [2:0]\grdc.rd_data_count_i_reg[2] ;
  wire [2:0]\grdc.rd_data_count_i_reg[2]_0 ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [0:0]src_in_bin;

  LUT5 #(
    .INIT(32'h5AAAA655)) 
    \count_value_i[0]_i_1__3 
       (.I0(Q[0]),
        .I1(\count_value_i_reg[1]_1 [0]),
        .I2(rd_en),
        .I3(\count_value_i_reg[1]_1 [1]),
        .I4(ram_empty_i),
        .O(\count_value_i[0]_i_1__3_n_0 ));
  LUT4 #(
    .INIT(16'hC02F)) 
    \count_value_i[1]_i_2 
       (.I0(\count_value_i_reg[1]_1 [0]),
        .I1(rd_en),
        .I2(\count_value_i_reg[1]_1 [1]),
        .I3(ram_empty_i),
        .O(\gen_fwft.count_en ));
  LUT6 #(
    .INIT(64'hA999A9A96AAA6AAA)) 
    \count_value_i[1]_i_3 
       (.I0(Q[1]),
        .I1(ram_empty_i),
        .I2(\count_value_i_reg[1]_1 [1]),
        .I3(rd_en),
        .I4(\count_value_i_reg[1]_1 [0]),
        .I5(Q[0]),
        .O(\count_value_i[1]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[0]_i_1__3_n_0 ),
        .Q(Q[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[1]_i_3_n_0 ),
        .Q(Q[1]),
        .R(SR));
  LUT4 #(
    .INIT(16'h2DD2)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_4 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[2]_0 [0]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[2]_0 [1]),
        .O(src_in_bin));
  LUT6 #(
    .INIT(64'h9696699669966969)) 
    \grdc.rd_data_count_i[2]_i_1 
       (.I0(\count_value_i_reg[1]_0 ),
        .I1(\grdc.rd_data_count_i_reg[2] [2]),
        .I2(\grdc.rd_data_count_i_reg[2]_0 [2]),
        .I3(\grdc.rd_data_count_i_reg[2]_0 [1]),
        .I4(Q[1]),
        .I5(\grdc.rd_data_count_i_reg[2] [1]),
        .O(D));
  LUT6 #(
    .INIT(64'h69FF696969690069)) 
    \grdc.rd_data_count_i[4]_i_4 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[2]_0 [1]),
        .I2(\grdc.rd_data_count_i_reg[2] [1]),
        .I3(\grdc.rd_data_count_i_reg[2]_0 [0]),
        .I4(Q[0]),
        .I5(\grdc.rd_data_count_i_reg[2] [0]),
        .O(\count_value_i_reg[1]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn_9
   (Q,
    src_in_bin,
    DI,
    ram_empty_i,
    rd_en,
    \count_value_i_reg[0]_0 ,
    \src_gray_ff_reg[0] ,
    SR,
    rd_clk);
  output [1:0]Q;
  output [0:0]src_in_bin;
  output [1:0]DI;
  input ram_empty_i;
  input rd_en;
  input [1:0]\count_value_i_reg[0]_0 ;
  input [0:0]\src_gray_ff_reg[0] ;
  input [0:0]SR;
  input rd_clk;

  wire [1:0]DI;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i[0]_i_1__2_n_0 ;
  wire \count_value_i[1]_i_3_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \gen_fwft.count_en ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [0:0]\src_gray_ff_reg[0] ;
  wire [0:0]src_in_bin;

  LUT5 #(
    .INIT(32'h696A9999)) 
    \count_value_i[0]_i_1__2 
       (.I0(Q[0]),
        .I1(ram_empty_i),
        .I2(rd_en),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(\count_value_i_reg[0]_0 [1]),
        .O(\count_value_i[0]_i_1__2_n_0 ));
  LUT4 #(
    .INIT(16'h9855)) 
    \count_value_i[1]_i_2 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(\count_value_i_reg[0]_0 [1]),
        .O(\gen_fwft.count_en ));
  LUT6 #(
    .INIT(64'h9A9AAAAAA6A666A6)) 
    \count_value_i[1]_i_3 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(rd_en),
        .I5(ram_empty_i),
        .O(\count_value_i[1]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[0]_i_1__2_n_0 ),
        .Q(Q[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[1]_i_3_n_0 ),
        .Q(Q[1]),
        .R(SR));
  LUT2 #(
    .INIT(4'h6)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[0] ),
        .O(src_in_bin));
  LUT2 #(
    .INIT(4'hB)) 
    \grdc.rd_data_count_i[7]_i_8 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[0] ),
        .O(DI[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \grdc.rd_data_count_i[7]_i_9 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[0] ),
        .O(DI[0]));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn__parameterized0
   (Q,
    enb,
    DI,
    \count_value_i_reg[7]_0 ,
    D,
    S,
    src_in_bin,
    \count_value_i_reg[0]_0 ,
    rd_en,
    ram_empty_i,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[8] ,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ,
    \count_value_i_reg[8]_0 ,
    rd_clk);
  output [7:0]Q;
  output enb;
  output [0:0]DI;
  output [0:0]\count_value_i_reg[7]_0 ;
  output [7:0]D;
  output [4:0]S;
  output [7:0]src_in_bin;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input ram_empty_i;
  input [1:0]\grdc.rd_data_count_i_reg[7] ;
  input [7:0]\grdc.rd_data_count_i_reg[8] ;
  input [7:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ;
  input \count_value_i_reg[8]_0 ;
  input rd_clk;

  wire [7:0]D;
  wire [0:0]DI;
  wire [7:0]Q;
  wire [4:0]S;
  wire \count_value_i[0]_i_1__4_n_0 ;
  wire \count_value_i[1]_i_1__4_n_0 ;
  wire \count_value_i[2]_i_1__3_n_0 ;
  wire \count_value_i[3]_i_1__3_n_0 ;
  wire \count_value_i[4]_i_1__3_n_0 ;
  wire \count_value_i[5]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_2__2_n_0 ;
  wire \count_value_i[7]_i_1__2_n_0 ;
  wire \count_value_i[8]_i_1__0_n_0 ;
  wire \count_value_i[8]_i_2__0_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire [0:0]\count_value_i_reg[7]_0 ;
  wire \count_value_i_reg[8]_0 ;
  wire \count_value_i_reg_n_0_[8] ;
  wire enb;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 ;
  wire [1:0]\grdc.rd_data_count_i_reg[7] ;
  wire [7:0]\grdc.rd_data_count_i_reg[8] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [7:0]src_in_bin;
  wire [7:7]\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_CO_UNCONNECTED ;

  LUT5 #(
    .INIT(32'hABAA5455)) 
    \count_value_i[0]_i_1__4 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(Q[0]),
        .O(\count_value_i[0]_i_1__4_n_0 ));
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__4 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair223" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair224" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__3 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair224" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__3 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__3_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__2 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__2_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__2_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h0000AAA200000000)) 
    \count_value_i[6]_i_2__2 
       (.I0(Q[1]),
        .I1(\count_value_i_reg[0]_0 [1]),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair221" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__2 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair221" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1__0 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(\count_value_i_reg_n_0_[8] ),
        .O(\count_value_i[8]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(enb),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[0]_i_1__4_n_0 ),
        .Q(Q[0]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[1]_i_1__4_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[2]_i_1__3_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[3]_i_1__3_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[4]_i_1__3_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[5]_i_1__2_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[6]_i_1__2_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[7]_i_1__2_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[8]_i_1__0_n_0 ),
        .Q(\count_value_i_reg_n_0_[8] ),
        .R(\count_value_i_reg[8]_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFE00000001)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_1 
       (.I0(Q[7]),
        .I1(Q[5]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I3(Q[4]),
        .I4(Q[6]),
        .I5(\count_value_i_reg_n_0_[8] ),
        .O(src_in_bin[7]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFBFBBAFB)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [0]),
        .I4(Q[0]),
        .I5(Q[3]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair225" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair222" *) 
  LUT5 #(
    .INIT(32'hFFFE0001)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2 
       (.I0(Q[6]),
        .I1(Q[4]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I3(Q[5]),
        .I4(Q[7]),
        .O(src_in_bin[6]));
  (* SOFT_HLUTNM = "soft_lutpair222" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3 
       (.I0(Q[5]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I2(Q[4]),
        .I3(Q[6]),
        .O(src_in_bin[5]));
  LUT3 #(
    .INIT(8'hE1)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_4 
       (.I0(Q[4]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I2(Q[5]),
        .O(src_in_bin[4]));
  LUT6 #(
    .INIT(64'hFFFFEAFE00001501)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_5 
       (.I0(Q[3]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .I4(Q[2]),
        .I5(Q[4]),
        .O(src_in_bin[3]));
  LUT6 #(
    .INIT(64'hFBFBBAFB04044504)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [0]),
        .I4(Q[0]),
        .I5(Q[3]),
        .O(src_in_bin[2]));
  (* SOFT_HLUTNM = "soft_lutpair223" *) 
  LUT5 #(
    .INIT(32'hB0FB4F04)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_7 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .I4(Q[2]),
        .O(src_in_bin[1]));
  (* SOFT_HLUTNM = "soft_lutpair225" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_9 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .O(src_in_bin[0]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [6]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [5]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [4]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [3]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [2]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [1]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15_n_0 ));
  LUT5 #(
    .INIT(32'hABAA5455)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(Q[0]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2 
       (.I0(Q[6]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3 
       (.I0(Q[5]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4 
       (.I0(Q[4]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5 
       (.I0(Q[3]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6 
       (.I0(Q[2]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7 
       (.I0(Q[1]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8 
       (.I0(Q[0]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [7]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1 
       (.CI(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [0]),
        .CI_TOP(1'b0),
        .CO({\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_CO_UNCONNECTED [7],\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 }),
        .DI({1'b0,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 }),
        .O(D),
        .S({\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16_n_0 }));
  LUT4 #(
    .INIT(16'h00FD)) 
    \gen_sdpram.xpm_memory_base_inst_i_2 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .O(enb));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_10 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[8] [4]),
        .I2(Q[6]),
        .I3(\grdc.rd_data_count_i_reg[8] [5]),
        .O(S[3]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_11 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[8] [3]),
        .I2(Q[5]),
        .I3(\grdc.rd_data_count_i_reg[8] [4]),
        .O(S[2]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_12 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[8] [2]),
        .I2(Q[4]),
        .I3(\grdc.rd_data_count_i_reg[8] [3]),
        .O(S[1]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_13 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[8] [1]),
        .I2(Q[3]),
        .I3(\grdc.rd_data_count_i_reg[8] [2]),
        .O(S[0]));
  LUT3 #(
    .INIT(8'hD4)) 
    \grdc.rd_data_count_i[7]_i_7 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(\grdc.rd_data_count_i_reg[8] [0]),
        .O(DI));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_9 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[8] [5]),
        .I2(Q[7]),
        .I3(\grdc.rd_data_count_i_reg[8] [6]),
        .O(S[4]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[8]_i_3 
       (.I0(Q[7]),
        .I1(\grdc.rd_data_count_i_reg[8] [6]),
        .I2(\count_value_i_reg_n_0_[8] ),
        .I3(\grdc.rd_data_count_i_reg[8] [7]),
        .O(\count_value_i_reg[7]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn__parameterized0_23
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    \gwdc.wr_data_count_i_reg[8] ,
    wr_clk);
  output [8:0]Q;
  output [7:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input [8:0]\gwdc.wr_data_count_i_reg[8] ;
  input wr_clk;

  wire [7:0]D;
  wire [8:0]Q;
  wire \count_value_i[0]_i_1__1_n_0 ;
  wire \count_value_i[1]_i_1__1_n_0 ;
  wire \count_value_i[2]_i_1__1_n_0 ;
  wire \count_value_i[3]_i_1__1_n_0 ;
  wire \count_value_i[4]_i_1__1_n_0 ;
  wire \count_value_i[5]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_2__1_n_0 ;
  wire \count_value_i[7]_i_1__1_n_0 ;
  wire \count_value_i[8]_i_1_n_0 ;
  wire \count_value_i[8]_i_2_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire \gwdc.wr_data_count_i[7]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_3_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_4_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_5_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_6_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_7_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_8_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_9_n_0 ;
  wire \gwdc.wr_data_count_i[8]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_1 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_2 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_3 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_4 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_5 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_6 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_7 ;
  wire [8:0]\gwdc.wr_data_count_i_reg[8] ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [0:0]\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:0]\NLW_gwdc.wr_data_count_i_reg[8]_i_1_CO_UNCONNECTED ;
  wire [7:1]\NLW_gwdc.wr_data_count_i_reg[8]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair230" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair230" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair229" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair229" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__1_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__1_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__1 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair228" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__1 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair228" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__1_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_2 
       (.I0(Q[7]),
        .I1(\gwdc.wr_data_count_i_reg[8] [7]),
        .O(\gwdc.wr_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_3 
       (.I0(Q[6]),
        .I1(\gwdc.wr_data_count_i_reg[8] [6]),
        .O(\gwdc.wr_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_4 
       (.I0(Q[5]),
        .I1(\gwdc.wr_data_count_i_reg[8] [5]),
        .O(\gwdc.wr_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_5 
       (.I0(Q[4]),
        .I1(\gwdc.wr_data_count_i_reg[8] [4]),
        .O(\gwdc.wr_data_count_i[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_6 
       (.I0(Q[3]),
        .I1(\gwdc.wr_data_count_i_reg[8] [3]),
        .O(\gwdc.wr_data_count_i[7]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_7 
       (.I0(Q[2]),
        .I1(\gwdc.wr_data_count_i_reg[8] [2]),
        .O(\gwdc.wr_data_count_i[7]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_8 
       (.I0(Q[1]),
        .I1(\gwdc.wr_data_count_i_reg[8] [1]),
        .O(\gwdc.wr_data_count_i[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_9 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[8] [0]),
        .O(\gwdc.wr_data_count_i[7]_i_9_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[8]_i_2 
       (.I0(Q[8]),
        .I1(\gwdc.wr_data_count_i_reg[8] [8]),
        .O(\gwdc.wr_data_count_i[8]_i_2_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[7]_i_1 
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_1 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_2 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_3 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_4 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_5 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_6 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_7 }),
        .DI(Q[7:0]),
        .O({D[6:0],\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({\gwdc.wr_data_count_i[7]_i_2_n_0 ,\gwdc.wr_data_count_i[7]_i_3_n_0 ,\gwdc.wr_data_count_i[7]_i_4_n_0 ,\gwdc.wr_data_count_i[7]_i_5_n_0 ,\gwdc.wr_data_count_i[7]_i_6_n_0 ,\gwdc.wr_data_count_i[7]_i_7_n_0 ,\gwdc.wr_data_count_i[7]_i_8_n_0 ,\gwdc.wr_data_count_i[7]_i_9_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[8]_i_1 
       (.CI(\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_gwdc.wr_data_count_i_reg[8]_i_1_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_gwdc.wr_data_count_i_reg[8]_i_1_O_UNCONNECTED [7:1],D[7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gwdc.wr_data_count_i[8]_i_2_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn__parameterized0_30
   (Q,
    enb,
    DI,
    \count_value_i_reg[7]_0 ,
    D,
    S,
    src_in_bin,
    \count_value_i_reg[0]_0 ,
    rd_en,
    ram_empty_i,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[8] ,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ,
    \count_value_i_reg[8]_0 ,
    rd_clk);
  output [7:0]Q;
  output enb;
  output [0:0]DI;
  output [0:0]\count_value_i_reg[7]_0 ;
  output [7:0]D;
  output [4:0]S;
  output [7:0]src_in_bin;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input ram_empty_i;
  input [1:0]\grdc.rd_data_count_i_reg[7] ;
  input [7:0]\grdc.rd_data_count_i_reg[8] ;
  input [7:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ;
  input \count_value_i_reg[8]_0 ;
  input rd_clk;

  wire [7:0]D;
  wire [0:0]DI;
  wire [7:0]Q;
  wire [4:0]S;
  wire \count_value_i[0]_i_1__4_n_0 ;
  wire \count_value_i[1]_i_1__4_n_0 ;
  wire \count_value_i[2]_i_1__3_n_0 ;
  wire \count_value_i[3]_i_1__3_n_0 ;
  wire \count_value_i[4]_i_1__3_n_0 ;
  wire \count_value_i[5]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_2__2_n_0 ;
  wire \count_value_i[7]_i_1__2_n_0 ;
  wire \count_value_i[8]_i_1__0_n_0 ;
  wire \count_value_i[8]_i_2__0_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire [0:0]\count_value_i_reg[7]_0 ;
  wire \count_value_i_reg[8]_0 ;
  wire \count_value_i_reg_n_0_[8] ;
  wire enb;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 ;
  wire [1:0]\grdc.rd_data_count_i_reg[7] ;
  wire [7:0]\grdc.rd_data_count_i_reg[8] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [7:0]src_in_bin;
  wire [7:7]\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_CO_UNCONNECTED ;

  LUT5 #(
    .INIT(32'hABAA5455)) 
    \count_value_i[0]_i_1__4 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(Q[0]),
        .O(\count_value_i[0]_i_1__4_n_0 ));
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__4 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair192" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair193" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__3 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair193" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__3 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__3_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__2 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__2_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__2_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h0000AAA200000000)) 
    \count_value_i[6]_i_2__2 
       (.I0(Q[1]),
        .I1(\count_value_i_reg[0]_0 [1]),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair190" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__2 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair190" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1__0 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(\count_value_i_reg_n_0_[8] ),
        .O(\count_value_i[8]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(enb),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[0]_i_1__4_n_0 ),
        .Q(Q[0]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[1]_i_1__4_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[2]_i_1__3_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[3]_i_1__3_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[4]_i_1__3_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[5]_i_1__2_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[6]_i_1__2_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[7]_i_1__2_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[8]_i_1__0_n_0 ),
        .Q(\count_value_i_reg_n_0_[8] ),
        .R(\count_value_i_reg[8]_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFE00000001)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_1 
       (.I0(Q[7]),
        .I1(Q[5]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I3(Q[4]),
        .I4(Q[6]),
        .I5(\count_value_i_reg_n_0_[8] ),
        .O(src_in_bin[7]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFBFBBAFB)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [0]),
        .I4(Q[0]),
        .I5(Q[3]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair194" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair191" *) 
  LUT5 #(
    .INIT(32'hFFFE0001)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2 
       (.I0(Q[6]),
        .I1(Q[4]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I3(Q[5]),
        .I4(Q[7]),
        .O(src_in_bin[6]));
  (* SOFT_HLUTNM = "soft_lutpair191" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3 
       (.I0(Q[5]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I2(Q[4]),
        .I3(Q[6]),
        .O(src_in_bin[5]));
  LUT3 #(
    .INIT(8'hE1)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_4 
       (.I0(Q[4]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I2(Q[5]),
        .O(src_in_bin[4]));
  LUT6 #(
    .INIT(64'hFFFFEAFE00001501)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_5 
       (.I0(Q[3]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .I4(Q[2]),
        .I5(Q[4]),
        .O(src_in_bin[3]));
  LUT6 #(
    .INIT(64'hFBFBBAFB04044504)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [0]),
        .I4(Q[0]),
        .I5(Q[3]),
        .O(src_in_bin[2]));
  (* SOFT_HLUTNM = "soft_lutpair192" *) 
  LUT5 #(
    .INIT(32'hB0FB4F04)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_7 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .I4(Q[2]),
        .O(src_in_bin[1]));
  (* SOFT_HLUTNM = "soft_lutpair194" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_9 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .O(src_in_bin[0]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [6]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [5]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [4]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [3]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [2]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [1]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15_n_0 ));
  LUT5 #(
    .INIT(32'hABAA5455)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(Q[0]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2 
       (.I0(Q[6]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3 
       (.I0(Q[5]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4 
       (.I0(Q[4]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5 
       (.I0(Q[3]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6 
       (.I0(Q[2]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7 
       (.I0(Q[1]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8 
       (.I0(Q[0]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [7]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1 
       (.CI(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [0]),
        .CI_TOP(1'b0),
        .CO({\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_CO_UNCONNECTED [7],\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 }),
        .DI({1'b0,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 }),
        .O(D),
        .S({\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16_n_0 }));
  LUT4 #(
    .INIT(16'h00FD)) 
    \gen_sdpram.xpm_memory_base_inst_i_2 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .O(enb));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_10 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[8] [4]),
        .I2(Q[6]),
        .I3(\grdc.rd_data_count_i_reg[8] [5]),
        .O(S[3]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_11 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[8] [3]),
        .I2(Q[5]),
        .I3(\grdc.rd_data_count_i_reg[8] [4]),
        .O(S[2]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_12 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[8] [2]),
        .I2(Q[4]),
        .I3(\grdc.rd_data_count_i_reg[8] [3]),
        .O(S[1]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_13 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[8] [1]),
        .I2(Q[3]),
        .I3(\grdc.rd_data_count_i_reg[8] [2]),
        .O(S[0]));
  LUT3 #(
    .INIT(8'hD4)) 
    \grdc.rd_data_count_i[7]_i_7 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(\grdc.rd_data_count_i_reg[8] [0]),
        .O(DI));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_9 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[8] [5]),
        .I2(Q[7]),
        .I3(\grdc.rd_data_count_i_reg[8] [6]),
        .O(S[4]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[8]_i_3 
       (.I0(Q[7]),
        .I1(\grdc.rd_data_count_i_reg[8] [6]),
        .I2(\count_value_i_reg_n_0_[8] ),
        .I3(\grdc.rd_data_count_i_reg[8] [7]),
        .O(\count_value_i_reg[7]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn__parameterized0_33
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    \gwdc.wr_data_count_i_reg[8] ,
    wr_clk);
  output [8:0]Q;
  output [7:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input [8:0]\gwdc.wr_data_count_i_reg[8] ;
  input wr_clk;

  wire [7:0]D;
  wire [8:0]Q;
  wire \count_value_i[0]_i_1__1_n_0 ;
  wire \count_value_i[1]_i_1__1_n_0 ;
  wire \count_value_i[2]_i_1__1_n_0 ;
  wire \count_value_i[3]_i_1__1_n_0 ;
  wire \count_value_i[4]_i_1__1_n_0 ;
  wire \count_value_i[5]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_2__1_n_0 ;
  wire \count_value_i[7]_i_1__1_n_0 ;
  wire \count_value_i[8]_i_1_n_0 ;
  wire \count_value_i[8]_i_2_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire \gwdc.wr_data_count_i[7]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_3_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_4_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_5_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_6_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_7_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_8_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_9_n_0 ;
  wire \gwdc.wr_data_count_i[8]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_1 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_2 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_3 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_4 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_5 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_6 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_7 ;
  wire [8:0]\gwdc.wr_data_count_i_reg[8] ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [0:0]\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:0]\NLW_gwdc.wr_data_count_i_reg[8]_i_1_CO_UNCONNECTED ;
  wire [7:1]\NLW_gwdc.wr_data_count_i_reg[8]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair199" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair199" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair198" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair198" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__1_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__1_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__1 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair197" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__1 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair197" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__1_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_2 
       (.I0(Q[7]),
        .I1(\gwdc.wr_data_count_i_reg[8] [7]),
        .O(\gwdc.wr_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_3 
       (.I0(Q[6]),
        .I1(\gwdc.wr_data_count_i_reg[8] [6]),
        .O(\gwdc.wr_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_4 
       (.I0(Q[5]),
        .I1(\gwdc.wr_data_count_i_reg[8] [5]),
        .O(\gwdc.wr_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_5 
       (.I0(Q[4]),
        .I1(\gwdc.wr_data_count_i_reg[8] [4]),
        .O(\gwdc.wr_data_count_i[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_6 
       (.I0(Q[3]),
        .I1(\gwdc.wr_data_count_i_reg[8] [3]),
        .O(\gwdc.wr_data_count_i[7]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_7 
       (.I0(Q[2]),
        .I1(\gwdc.wr_data_count_i_reg[8] [2]),
        .O(\gwdc.wr_data_count_i[7]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_8 
       (.I0(Q[1]),
        .I1(\gwdc.wr_data_count_i_reg[8] [1]),
        .O(\gwdc.wr_data_count_i[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_9 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[8] [0]),
        .O(\gwdc.wr_data_count_i[7]_i_9_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[8]_i_2 
       (.I0(Q[8]),
        .I1(\gwdc.wr_data_count_i_reg[8] [8]),
        .O(\gwdc.wr_data_count_i[8]_i_2_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[7]_i_1 
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_1 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_2 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_3 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_4 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_5 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_6 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_7 }),
        .DI(Q[7:0]),
        .O({D[6:0],\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({\gwdc.wr_data_count_i[7]_i_2_n_0 ,\gwdc.wr_data_count_i[7]_i_3_n_0 ,\gwdc.wr_data_count_i[7]_i_4_n_0 ,\gwdc.wr_data_count_i[7]_i_5_n_0 ,\gwdc.wr_data_count_i[7]_i_6_n_0 ,\gwdc.wr_data_count_i[7]_i_7_n_0 ,\gwdc.wr_data_count_i[7]_i_8_n_0 ,\gwdc.wr_data_count_i[7]_i_9_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[8]_i_1 
       (.CI(\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_gwdc.wr_data_count_i_reg[8]_i_1_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_gwdc.wr_data_count_i_reg[8]_i_1_O_UNCONNECTED [7:1],D[7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gwdc.wr_data_count_i[8]_i_2_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn__parameterized0_41
   (Q,
    enb,
    DI,
    \count_value_i_reg[7]_0 ,
    D,
    S,
    src_in_bin,
    \count_value_i_reg[0]_0 ,
    rd_en,
    ram_empty_i,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[8] ,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ,
    \count_value_i_reg[8]_0 ,
    rd_clk);
  output [7:0]Q;
  output enb;
  output [0:0]DI;
  output [0:0]\count_value_i_reg[7]_0 ;
  output [7:0]D;
  output [4:0]S;
  output [7:0]src_in_bin;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input ram_empty_i;
  input [1:0]\grdc.rd_data_count_i_reg[7] ;
  input [7:0]\grdc.rd_data_count_i_reg[8] ;
  input [7:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ;
  input \count_value_i_reg[8]_0 ;
  input rd_clk;

  wire [7:0]D;
  wire [0:0]DI;
  wire [7:0]Q;
  wire [4:0]S;
  wire \count_value_i[0]_i_1__4_n_0 ;
  wire \count_value_i[1]_i_1__4_n_0 ;
  wire \count_value_i[2]_i_1__3_n_0 ;
  wire \count_value_i[3]_i_1__3_n_0 ;
  wire \count_value_i[4]_i_1__3_n_0 ;
  wire \count_value_i[5]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_2__2_n_0 ;
  wire \count_value_i[7]_i_1__2_n_0 ;
  wire \count_value_i[8]_i_1__0_n_0 ;
  wire \count_value_i[8]_i_2__0_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire [0:0]\count_value_i_reg[7]_0 ;
  wire \count_value_i_reg[8]_0 ;
  wire \count_value_i_reg_n_0_[8] ;
  wire enb;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 ;
  wire [1:0]\grdc.rd_data_count_i_reg[7] ;
  wire [7:0]\grdc.rd_data_count_i_reg[8] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [7:0]src_in_bin;
  wire [7:7]\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_CO_UNCONNECTED ;

  LUT5 #(
    .INIT(32'hABAA5455)) 
    \count_value_i[0]_i_1__4 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(Q[0]),
        .O(\count_value_i[0]_i_1__4_n_0 ));
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__4 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair160" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair161" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__3 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair161" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__3 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__3_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__2 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__2_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__2_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h0000AAA200000000)) 
    \count_value_i[6]_i_2__2 
       (.I0(Q[1]),
        .I1(\count_value_i_reg[0]_0 [1]),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair158" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__2 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair158" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1__0 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(\count_value_i_reg_n_0_[8] ),
        .O(\count_value_i[8]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(enb),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[0]_i_1__4_n_0 ),
        .Q(Q[0]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[1]_i_1__4_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[2]_i_1__3_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[3]_i_1__3_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[4]_i_1__3_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[5]_i_1__2_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[6]_i_1__2_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[7]_i_1__2_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[8]_i_1__0_n_0 ),
        .Q(\count_value_i_reg_n_0_[8] ),
        .R(\count_value_i_reg[8]_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFE00000001)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_1 
       (.I0(Q[7]),
        .I1(Q[5]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I3(Q[4]),
        .I4(Q[6]),
        .I5(\count_value_i_reg_n_0_[8] ),
        .O(src_in_bin[7]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFBFBBAFB)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [0]),
        .I4(Q[0]),
        .I5(Q[3]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair162" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair159" *) 
  LUT5 #(
    .INIT(32'hFFFE0001)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2 
       (.I0(Q[6]),
        .I1(Q[4]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I3(Q[5]),
        .I4(Q[7]),
        .O(src_in_bin[6]));
  (* SOFT_HLUTNM = "soft_lutpair159" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3 
       (.I0(Q[5]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I2(Q[4]),
        .I3(Q[6]),
        .O(src_in_bin[5]));
  LUT3 #(
    .INIT(8'hE1)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_4 
       (.I0(Q[4]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I2(Q[5]),
        .O(src_in_bin[4]));
  LUT6 #(
    .INIT(64'hFFFFEAFE00001501)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_5 
       (.I0(Q[3]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .I4(Q[2]),
        .I5(Q[4]),
        .O(src_in_bin[3]));
  LUT6 #(
    .INIT(64'hFBFBBAFB04044504)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [0]),
        .I4(Q[0]),
        .I5(Q[3]),
        .O(src_in_bin[2]));
  (* SOFT_HLUTNM = "soft_lutpair160" *) 
  LUT5 #(
    .INIT(32'hB0FB4F04)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_7 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .I4(Q[2]),
        .O(src_in_bin[1]));
  (* SOFT_HLUTNM = "soft_lutpair162" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_9 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .O(src_in_bin[0]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [6]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [5]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [4]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [3]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [2]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [1]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15_n_0 ));
  LUT5 #(
    .INIT(32'hABAA5455)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(Q[0]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2 
       (.I0(Q[6]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3 
       (.I0(Q[5]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4 
       (.I0(Q[4]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5 
       (.I0(Q[3]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6 
       (.I0(Q[2]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7 
       (.I0(Q[1]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8 
       (.I0(Q[0]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [7]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1 
       (.CI(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [0]),
        .CI_TOP(1'b0),
        .CO({\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_CO_UNCONNECTED [7],\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 }),
        .DI({1'b0,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 }),
        .O(D),
        .S({\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16_n_0 }));
  LUT4 #(
    .INIT(16'h00FD)) 
    \gen_sdpram.xpm_memory_base_inst_i_2 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .O(enb));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_10 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[8] [4]),
        .I2(Q[6]),
        .I3(\grdc.rd_data_count_i_reg[8] [5]),
        .O(S[3]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_11 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[8] [3]),
        .I2(Q[5]),
        .I3(\grdc.rd_data_count_i_reg[8] [4]),
        .O(S[2]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_12 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[8] [2]),
        .I2(Q[4]),
        .I3(\grdc.rd_data_count_i_reg[8] [3]),
        .O(S[1]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_13 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[8] [1]),
        .I2(Q[3]),
        .I3(\grdc.rd_data_count_i_reg[8] [2]),
        .O(S[0]));
  LUT3 #(
    .INIT(8'hD4)) 
    \grdc.rd_data_count_i[7]_i_7 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(\grdc.rd_data_count_i_reg[8] [0]),
        .O(DI));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_9 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[8] [5]),
        .I2(Q[7]),
        .I3(\grdc.rd_data_count_i_reg[8] [6]),
        .O(S[4]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[8]_i_3 
       (.I0(Q[7]),
        .I1(\grdc.rd_data_count_i_reg[8] [6]),
        .I2(\count_value_i_reg_n_0_[8] ),
        .I3(\grdc.rd_data_count_i_reg[8] [7]),
        .O(\count_value_i_reg[7]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn__parameterized0_44
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    \gwdc.wr_data_count_i_reg[8] ,
    wr_clk);
  output [8:0]Q;
  output [7:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input [8:0]\gwdc.wr_data_count_i_reg[8] ;
  input wr_clk;

  wire [7:0]D;
  wire [8:0]Q;
  wire \count_value_i[0]_i_1__1_n_0 ;
  wire \count_value_i[1]_i_1__1_n_0 ;
  wire \count_value_i[2]_i_1__1_n_0 ;
  wire \count_value_i[3]_i_1__1_n_0 ;
  wire \count_value_i[4]_i_1__1_n_0 ;
  wire \count_value_i[5]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_2__1_n_0 ;
  wire \count_value_i[7]_i_1__1_n_0 ;
  wire \count_value_i[8]_i_1_n_0 ;
  wire \count_value_i[8]_i_2_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire \gwdc.wr_data_count_i[7]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_3_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_4_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_5_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_6_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_7_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_8_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_9_n_0 ;
  wire \gwdc.wr_data_count_i[8]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_1 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_2 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_3 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_4 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_5 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_6 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_7 ;
  wire [8:0]\gwdc.wr_data_count_i_reg[8] ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [0:0]\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:0]\NLW_gwdc.wr_data_count_i_reg[8]_i_1_CO_UNCONNECTED ;
  wire [7:1]\NLW_gwdc.wr_data_count_i_reg[8]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair167" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair167" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair166" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair166" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__1_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__1_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__1 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair165" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__1 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair165" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__1_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_2 
       (.I0(Q[7]),
        .I1(\gwdc.wr_data_count_i_reg[8] [7]),
        .O(\gwdc.wr_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_3 
       (.I0(Q[6]),
        .I1(\gwdc.wr_data_count_i_reg[8] [6]),
        .O(\gwdc.wr_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_4 
       (.I0(Q[5]),
        .I1(\gwdc.wr_data_count_i_reg[8] [5]),
        .O(\gwdc.wr_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_5 
       (.I0(Q[4]),
        .I1(\gwdc.wr_data_count_i_reg[8] [4]),
        .O(\gwdc.wr_data_count_i[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_6 
       (.I0(Q[3]),
        .I1(\gwdc.wr_data_count_i_reg[8] [3]),
        .O(\gwdc.wr_data_count_i[7]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_7 
       (.I0(Q[2]),
        .I1(\gwdc.wr_data_count_i_reg[8] [2]),
        .O(\gwdc.wr_data_count_i[7]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_8 
       (.I0(Q[1]),
        .I1(\gwdc.wr_data_count_i_reg[8] [1]),
        .O(\gwdc.wr_data_count_i[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_9 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[8] [0]),
        .O(\gwdc.wr_data_count_i[7]_i_9_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[8]_i_2 
       (.I0(Q[8]),
        .I1(\gwdc.wr_data_count_i_reg[8] [8]),
        .O(\gwdc.wr_data_count_i[8]_i_2_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[7]_i_1 
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_1 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_2 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_3 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_4 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_5 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_6 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_7 }),
        .DI(Q[7:0]),
        .O({D[6:0],\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({\gwdc.wr_data_count_i[7]_i_2_n_0 ,\gwdc.wr_data_count_i[7]_i_3_n_0 ,\gwdc.wr_data_count_i[7]_i_4_n_0 ,\gwdc.wr_data_count_i[7]_i_5_n_0 ,\gwdc.wr_data_count_i[7]_i_6_n_0 ,\gwdc.wr_data_count_i[7]_i_7_n_0 ,\gwdc.wr_data_count_i[7]_i_8_n_0 ,\gwdc.wr_data_count_i[7]_i_9_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[8]_i_1 
       (.CI(\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_gwdc.wr_data_count_i_reg[8]_i_1_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_gwdc.wr_data_count_i_reg[8]_i_1_O_UNCONNECTED [7:1],D[7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gwdc.wr_data_count_i[8]_i_2_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn__parameterized1
   (Q,
    E,
    \count_value_i_reg[1]_0 ,
    rd_en,
    ram_empty_i,
    \count_value_i_reg[0]_0 ,
    rd_clk);
  output [7:0]Q;
  input [0:0]E;
  input [1:0]\count_value_i_reg[1]_0 ;
  input rd_en;
  input ram_empty_i;
  input \count_value_i_reg[0]_0 ;
  input rd_clk;

  wire [0:0]E;
  wire [7:0]Q;
  wire \count_value_i[0]_i_1__2_n_0 ;
  wire \count_value_i[1]_i_1__3_n_0 ;
  wire \count_value_i[2]_i_1__2_n_0 ;
  wire \count_value_i[3]_i_1__2_n_0 ;
  wire \count_value_i[4]_i_1__2_n_0 ;
  wire \count_value_i[5]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_2__3_n_0 ;
  wire \count_value_i[7]_i_1__3_n_0 ;
  wire \count_value_i[7]_i_2__1_n_0 ;
  wire \count_value_i_reg[0]_0 ;
  wire [1:0]\count_value_i_reg[1]_0 ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;

  LUT4 #(
    .INIT(16'h10EF)) 
    \count_value_i[0]_i_1__2 
       (.I0(rd_en),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(\count_value_i_reg[1]_0 [1]),
        .I3(Q[0]),
        .O(\count_value_i[0]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__3 
       (.I0(\count_value_i_reg[1]_0 [1]),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__3_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__2 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair226" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair226" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__2 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__3 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__3_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__3 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__3_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h0000AAA200000000)) 
    \count_value_i[6]_i_2__3 
       (.I0(Q[1]),
        .I1(\count_value_i_reg[1]_0 [1]),
        .I2(\count_value_i_reg[1]_0 [0]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__3_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__3 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2__1_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2__1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(E),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2__1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__2_n_0 ),
        .Q(Q[0]),
        .S(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__3_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__2_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__2_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1__2_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[5]_i_1__3_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[6]_i_1__3_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[7]_i_1__3_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn__parameterized1_24
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ,
    wr_clk);
  output [7:0]Q;
  output [6:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input [7:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  input wr_clk;

  wire [6:0]D;
  wire [7:0]Q;
  wire \count_value_i[0]_i_1__0_n_0 ;
  wire \count_value_i[1]_i_1__0_n_0 ;
  wire \count_value_i[2]_i_1__0_n_0 ;
  wire \count_value_i[3]_i_1__0_n_0 ;
  wire \count_value_i[4]_i_1__0_n_0 ;
  wire \count_value_i[5]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_2__0_n_0 ;
  wire \count_value_i[7]_i_1__0_n_0 ;
  wire \count_value_i[7]_i_2__0_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [7:7]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_CO_UNCONNECTED ;
  wire [0:0]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__0 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair232" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair232" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair231" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair231" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__0 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__0_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__0_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__0 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__0_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__0 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2__0_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__0_n_0 ),
        .Q(Q[0]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__0_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__0_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__0_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__0_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__0_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__0_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__0_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [7]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [6]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [5]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [4]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [3]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [2]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [1]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [0]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1 
       (.CI(wr_pntr_plus1_pf_carry),
        .CI_TOP(1'b0),
        .CO({\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_CO_UNCONNECTED [7],\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 }),
        .DI({1'b0,Q[6:0]}),
        .O({D,\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED [0]}),
        .S({\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn__parameterized1_31
   (Q,
    E,
    \count_value_i_reg[1]_0 ,
    rd_en,
    ram_empty_i,
    \count_value_i_reg[0]_0 ,
    rd_clk);
  output [7:0]Q;
  input [0:0]E;
  input [1:0]\count_value_i_reg[1]_0 ;
  input rd_en;
  input ram_empty_i;
  input \count_value_i_reg[0]_0 ;
  input rd_clk;

  wire [0:0]E;
  wire [7:0]Q;
  wire \count_value_i[0]_i_1__2_n_0 ;
  wire \count_value_i[1]_i_1__3_n_0 ;
  wire \count_value_i[2]_i_1__2_n_0 ;
  wire \count_value_i[3]_i_1__2_n_0 ;
  wire \count_value_i[4]_i_1__2_n_0 ;
  wire \count_value_i[5]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_2__3_n_0 ;
  wire \count_value_i[7]_i_1__3_n_0 ;
  wire \count_value_i[7]_i_2__1_n_0 ;
  wire \count_value_i_reg[0]_0 ;
  wire [1:0]\count_value_i_reg[1]_0 ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;

  LUT4 #(
    .INIT(16'h10EF)) 
    \count_value_i[0]_i_1__2 
       (.I0(rd_en),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(\count_value_i_reg[1]_0 [1]),
        .I3(Q[0]),
        .O(\count_value_i[0]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__3 
       (.I0(\count_value_i_reg[1]_0 [1]),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__3_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__2 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair195" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair195" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__2 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__3 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__3_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__3 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__3_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h0000AAA200000000)) 
    \count_value_i[6]_i_2__3 
       (.I0(Q[1]),
        .I1(\count_value_i_reg[1]_0 [1]),
        .I2(\count_value_i_reg[1]_0 [0]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__3_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__3 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2__1_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2__1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(E),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2__1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__2_n_0 ),
        .Q(Q[0]),
        .S(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__3_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__2_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__2_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1__2_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[5]_i_1__3_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[6]_i_1__3_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[7]_i_1__3_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn__parameterized1_34
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ,
    wr_clk);
  output [7:0]Q;
  output [6:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input [7:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  input wr_clk;

  wire [6:0]D;
  wire [7:0]Q;
  wire \count_value_i[0]_i_1__0_n_0 ;
  wire \count_value_i[1]_i_1__0_n_0 ;
  wire \count_value_i[2]_i_1__0_n_0 ;
  wire \count_value_i[3]_i_1__0_n_0 ;
  wire \count_value_i[4]_i_1__0_n_0 ;
  wire \count_value_i[5]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_2__0_n_0 ;
  wire \count_value_i[7]_i_1__0_n_0 ;
  wire \count_value_i[7]_i_2__0_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [7:7]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_CO_UNCONNECTED ;
  wire [0:0]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__0 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair201" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair201" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair200" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair200" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__0 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__0_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__0_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__0 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__0_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__0 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2__0_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__0_n_0 ),
        .Q(Q[0]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__0_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__0_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__0_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__0_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__0_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__0_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__0_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [7]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [6]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [5]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [4]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [3]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [2]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [1]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [0]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1 
       (.CI(wr_pntr_plus1_pf_carry),
        .CI_TOP(1'b0),
        .CO({\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_CO_UNCONNECTED [7],\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 }),
        .DI({1'b0,Q[6:0]}),
        .O({D,\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED [0]}),
        .S({\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn__parameterized1_42
   (Q,
    E,
    \count_value_i_reg[1]_0 ,
    rd_en,
    ram_empty_i,
    \count_value_i_reg[0]_0 ,
    rd_clk);
  output [7:0]Q;
  input [0:0]E;
  input [1:0]\count_value_i_reg[1]_0 ;
  input rd_en;
  input ram_empty_i;
  input \count_value_i_reg[0]_0 ;
  input rd_clk;

  wire [0:0]E;
  wire [7:0]Q;
  wire \count_value_i[0]_i_1__2_n_0 ;
  wire \count_value_i[1]_i_1__3_n_0 ;
  wire \count_value_i[2]_i_1__2_n_0 ;
  wire \count_value_i[3]_i_1__2_n_0 ;
  wire \count_value_i[4]_i_1__2_n_0 ;
  wire \count_value_i[5]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_2__3_n_0 ;
  wire \count_value_i[7]_i_1__3_n_0 ;
  wire \count_value_i[7]_i_2__1_n_0 ;
  wire \count_value_i_reg[0]_0 ;
  wire [1:0]\count_value_i_reg[1]_0 ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;

  LUT4 #(
    .INIT(16'h10EF)) 
    \count_value_i[0]_i_1__2 
       (.I0(rd_en),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(\count_value_i_reg[1]_0 [1]),
        .I3(Q[0]),
        .O(\count_value_i[0]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__3 
       (.I0(\count_value_i_reg[1]_0 [1]),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__3_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__2 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair163" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair163" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__2 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__3 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__3_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__3 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__3_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h0000AAA200000000)) 
    \count_value_i[6]_i_2__3 
       (.I0(Q[1]),
        .I1(\count_value_i_reg[1]_0 [1]),
        .I2(\count_value_i_reg[1]_0 [0]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__3_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__3 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2__1_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2__1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(E),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2__1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__2_n_0 ),
        .Q(Q[0]),
        .S(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__3_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__2_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__2_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1__2_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[5]_i_1__3_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[6]_i_1__3_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[7]_i_1__3_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn__parameterized1_45
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ,
    wr_clk);
  output [7:0]Q;
  output [6:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input [7:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  input wr_clk;

  wire [6:0]D;
  wire [7:0]Q;
  wire \count_value_i[0]_i_1__0_n_0 ;
  wire \count_value_i[1]_i_1__0_n_0 ;
  wire \count_value_i[2]_i_1__0_n_0 ;
  wire \count_value_i[3]_i_1__0_n_0 ;
  wire \count_value_i[4]_i_1__0_n_0 ;
  wire \count_value_i[5]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_2__0_n_0 ;
  wire \count_value_i[7]_i_1__0_n_0 ;
  wire \count_value_i[7]_i_2__0_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [7:7]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_CO_UNCONNECTED ;
  wire [0:0]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__0 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair169" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair169" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair168" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair168" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__0 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__0_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__0_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__0 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__0_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__0 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2__0_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__0_n_0 ),
        .Q(Q[0]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__0_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__0_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__0_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__0_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__0_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__0_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__0_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [7]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [6]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [5]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [4]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [3]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [2]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [1]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [0]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1 
       (.CI(wr_pntr_plus1_pf_carry),
        .CI_TOP(1'b0),
        .CO({\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_CO_UNCONNECTED [7],\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 }),
        .DI({1'b0,Q[6:0]}),
        .O({D,\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED [0]}),
        .S({\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn__parameterized2
   (Q,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    wr_clk);
  output [7:0]Q;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input wr_clk;

  wire [7:0]Q;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[2]_i_1_n_0 ;
  wire \count_value_i[3]_i_1_n_0 ;
  wire \count_value_i[4]_i_1_n_0 ;
  wire \count_value_i[5]_i_1_n_0 ;
  wire \count_value_i[6]_i_1_n_0 ;
  wire \count_value_i[6]_i_2_n_0 ;
  wire \count_value_i[7]_i_1_n_0 ;
  wire \count_value_i[7]_i_2_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  (* SOFT_HLUTNM = "soft_lutpair234" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair234" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair233" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair233" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(Q[1]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn__parameterized2_35
   (Q,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    wr_clk);
  output [7:0]Q;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input wr_clk;

  wire [7:0]Q;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[2]_i_1_n_0 ;
  wire \count_value_i[3]_i_1_n_0 ;
  wire \count_value_i[4]_i_1_n_0 ;
  wire \count_value_i[5]_i_1_n_0 ;
  wire \count_value_i[6]_i_1_n_0 ;
  wire \count_value_i[6]_i_2_n_0 ;
  wire \count_value_i[7]_i_1_n_0 ;
  wire \count_value_i[7]_i_2_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  (* SOFT_HLUTNM = "soft_lutpair203" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair203" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair202" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair202" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(Q[1]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn__parameterized2_46
   (Q,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    wr_clk);
  output [7:0]Q;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input wr_clk;

  wire [7:0]Q;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[2]_i_1_n_0 ;
  wire \count_value_i[3]_i_1_n_0 ;
  wire \count_value_i[4]_i_1_n_0 ;
  wire \count_value_i[5]_i_1_n_0 ;
  wire \count_value_i[6]_i_1_n_0 ;
  wire \count_value_i[6]_i_2_n_0 ;
  wire \count_value_i[7]_i_1_n_0 ;
  wire \count_value_i[7]_i_2_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  (* SOFT_HLUTNM = "soft_lutpair171" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair171" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair170" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair170" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(Q[1]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn__parameterized3
   (Q,
    ram_rd_en_i,
    \reg_out_i_reg[7] ,
    src_in_bin,
    \count_value_i_reg[1]_0 ,
    D,
    \count_value_i_reg[7]_0 ,
    \count_value_i_reg[0]_0 ,
    rd_en,
    ram_empty_i,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \grdc.rd_data_count_i_reg[7] ,
    DI,
    \grdc.rd_data_count_i_reg[9] ,
    S,
    \grdc.rd_data_count_i_reg[9]_0 ,
    \count_value_i_reg[9]_0 ,
    rd_clk);
  output [9:0]Q;
  output ram_rd_en_i;
  output \reg_out_i_reg[7] ;
  output [8:0]src_in_bin;
  output \count_value_i_reg[1]_0 ;
  output [8:0]D;
  output [7:0]\count_value_i_reg[7]_0 ;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input ram_empty_i;
  input [8:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  input [1:0]\grdc.rd_data_count_i_reg[7] ;
  input [7:0]DI;
  input [0:0]\grdc.rd_data_count_i_reg[9] ;
  input [0:0]S;
  input [8:0]\grdc.rd_data_count_i_reg[9]_0 ;
  input \count_value_i_reg[9]_0 ;
  input rd_clk;

  wire [8:0]D;
  wire [7:0]DI;
  wire [9:0]Q;
  wire [0:0]S;
  wire \count_value_i[0]_i_1__4_n_0 ;
  wire \count_value_i[1]_i_1__4_n_0 ;
  wire \count_value_i[2]_i_1__3_n_0 ;
  wire \count_value_i[3]_i_1__3_n_0 ;
  wire \count_value_i[4]_i_1__3_n_0 ;
  wire \count_value_i[5]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_2__3_n_0 ;
  wire \count_value_i[7]_i_1__3_n_0 ;
  wire \count_value_i[8]_i_1__3_n_0 ;
  wire \count_value_i[9]_i_1__0_n_0 ;
  wire \count_value_i[9]_i_2__0_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \count_value_i_reg[1]_0 ;
  wire [7:0]\count_value_i_reg[7]_0 ;
  wire \count_value_i_reg[9]_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_7_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_8_n_0 ;
  wire [8:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  wire \grdc.rd_data_count_i[7]_i_10_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_11_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_12_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_13_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_14_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_15_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_16_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_17_n_0 ;
  wire \grdc.rd_data_count_i[9]_i_5_n_0 ;
  wire [1:0]\grdc.rd_data_count_i_reg[7] ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_0 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_1 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_2 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_3 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_4 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_5 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_6 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_7 ;
  wire [0:0]\grdc.rd_data_count_i_reg[9] ;
  wire [8:0]\grdc.rd_data_count_i_reg[9]_0 ;
  wire \grdc.rd_data_count_i_reg[9]_i_2_n_7 ;
  wire ram_empty_i;
  wire ram_rd_en_i;
  wire rd_clk;
  wire rd_en;
  wire \reg_out_i_reg[7] ;
  wire [8:0]src_in_bin;
  wire [0:0]\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:1]\NLW_grdc.rd_data_count_i_reg[9]_i_2_CO_UNCONNECTED ;
  wire [7:2]\NLW_grdc.rd_data_count_i_reg[9]_i_2_O_UNCONNECTED ;

  LUT5 #(
    .INIT(32'hAABA5545)) 
    \count_value_i[0]_i_1__4 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(Q[0]),
        .O(\count_value_i[0]_i_1__4_n_0 ));
  LUT5 #(
    .INIT(32'h04FFFB00)) 
    \count_value_i[1]_i_1__4 
       (.I0(\count_value_i_reg[0]_0 [0]),
        .I1(\count_value_i_reg[0]_0 [1]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair329" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair326" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__3 
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair326" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__3_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__3 
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(Q[2]),
        .I3(\count_value_i[6]_i_2__3_n_0 ),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__3 
       (.I0(\count_value_i[6]_i_2__3_n_0 ),
        .I1(Q[2]),
        .I2(Q[3]),
        .I3(Q[4]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h0000AA8A00000000)) 
    \count_value_i[6]_i_2__3 
       (.I0(Q[1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair323" *) 
  LUT4 #(
    .INIT(16'hF708)) 
    \count_value_i[7]_i_1__3 
       (.I0(Q[6]),
        .I1(Q[5]),
        .I2(\count_value_i[9]_i_2__0_n_0 ),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair323" *) 
  LUT5 #(
    .INIT(32'hBFFF4000)) 
    \count_value_i[8]_i_1__3 
       (.I0(\count_value_i[9]_i_2__0_n_0 ),
        .I1(Q[5]),
        .I2(Q[6]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF7FFF00008000)) 
    \count_value_i[9]_i_1__0 
       (.I0(Q[8]),
        .I1(Q[7]),
        .I2(Q[6]),
        .I3(Q[5]),
        .I4(\count_value_i[9]_i_2__0_n_0 ),
        .I5(Q[9]),
        .O(\count_value_i[9]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \count_value_i[9]_i_2__0 
       (.I0(Q[0]),
        .I1(ram_rd_en_i),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(Q[3]),
        .I5(Q[4]),
        .O(\count_value_i[9]_i_2__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[0]_i_1__4_n_0 ),
        .Q(Q[0]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[1]_i_1__4_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[2]_i_1__3_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[3]_i_1__3_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[4]_i_1__3_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[5]_i_1__3_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[6]_i_1__3_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[7]_i_1__3_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[8]_i_1__3_n_0 ),
        .Q(Q[8]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[9] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[9]_i_1__0_n_0 ),
        .Q(Q[9]),
        .R(\count_value_i_reg[9]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair327" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_1 
       (.I0(Q[8]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ),
        .I2(Q[7]),
        .I3(Q[9]),
        .O(src_in_bin[8]));
  (* SOFT_HLUTNM = "soft_lutpair324" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11 
       (.I0(Q[5]),
        .I1(Q[3]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I3(Q[4]),
        .I4(Q[6]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair325" *) 
  LUT5 #(
    .INIT(32'hFFFFDD4D)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12 
       (.I0(\grdc.rd_data_count_i_reg[7] [1]),
        .I1(Q[1]),
        .I2(\grdc.rd_data_count_i_reg[7] [0]),
        .I3(Q[0]),
        .I4(Q[2]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair327" *) 
  LUT3 #(
    .INIT(8'hA9)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2 
       (.I0(Q[8]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ),
        .I2(Q[7]),
        .O(src_in_bin[7]));
  LUT6 #(
    .INIT(64'hFFFFFFFE00000001)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3 
       (.I0(Q[6]),
        .I1(Q[4]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[7]),
        .O(src_in_bin[6]));
  (* SOFT_HLUTNM = "soft_lutpair324" *) 
  LUT5 #(
    .INIT(32'hAAAAAAA9)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_4 
       (.I0(Q[6]),
        .I1(Q[4]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .O(src_in_bin[5]));
  (* SOFT_HLUTNM = "soft_lutpair328" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_5 
       (.I0(Q[4]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I2(Q[3]),
        .I3(Q[5]),
        .O(src_in_bin[4]));
  (* SOFT_HLUTNM = "soft_lutpair328" *) 
  LUT3 #(
    .INIT(8'hA9)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6 
       (.I0(Q[4]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I2(Q[3]),
        .O(src_in_bin[3]));
  LUT6 #(
    .INIT(64'hEFAAFFEF10550010)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_7 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(\grdc.rd_data_count_i_reg[7] [0]),
        .I3(Q[1]),
        .I4(\grdc.rd_data_count_i_reg[7] [1]),
        .I5(Q[3]),
        .O(src_in_bin[2]));
  (* SOFT_HLUTNM = "soft_lutpair325" *) 
  LUT5 #(
    .INIT(32'h9A55AA9A)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_8 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(\grdc.rd_data_count_i_reg[7] [0]),
        .I3(Q[1]),
        .I4(\grdc.rd_data_count_i_reg[7] [1]),
        .O(src_in_bin[1]));
  (* SOFT_HLUTNM = "soft_lutpair329" *) 
  LUT4 #(
    .INIT(16'h6696)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_9 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(\grdc.rd_data_count_i_reg[7] [0]),
        .I3(Q[0]),
        .O(src_in_bin[0]));
  LUT5 #(
    .INIT(32'hAABA5545)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(Q[0]),
        .O(\count_value_i_reg[7]_0 [0]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [7]),
        .O(\count_value_i_reg[7]_0 [7]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [6]),
        .O(\count_value_i_reg[7]_0 [6]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [5]),
        .O(\count_value_i_reg[7]_0 [5]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [4]),
        .O(\count_value_i_reg[7]_0 [4]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .O(\count_value_i_reg[7]_0 [3]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .O(\count_value_i_reg[7]_0 [2]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .O(\count_value_i_reg[7]_0 [1]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_5 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .I2(Q[0]),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I4(Q[2]),
        .I5(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .O(\count_value_i_reg[1]_0 ));
  LUT6 #(
    .INIT(64'h8200008200000000)) 
    \gen_pf_ic_rc.ram_empty_i_i_6 
       (.I0(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [7]),
        .I2(Q[7]),
        .I3(Q[8]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [8]),
        .I5(\gen_pf_ic_rc.ram_empty_i_i_8_n_0 ),
        .O(\reg_out_i_reg[7] ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.ram_empty_i_i_7 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [6]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_8 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [4]),
        .I2(Q[3]),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .I4(Q[5]),
        .I5(\gen_pf_ic_rc.ram_empty_i_reg [5]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_8_n_0 ));
  LUT4 #(
    .INIT(16'h00FB)) 
    \gen_sdpram.xpm_memory_base_inst_i_2 
       (.I0(\count_value_i_reg[0]_0 [0]),
        .I1(\count_value_i_reg[0]_0 [1]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .O(ram_rd_en_i));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_10 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [6]),
        .I2(Q[7]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [7]),
        .O(\grdc.rd_data_count_i[7]_i_10_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_11 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [5]),
        .I2(Q[6]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [6]),
        .O(\grdc.rd_data_count_i[7]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_12 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [4]),
        .I2(Q[5]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [5]),
        .O(\grdc.rd_data_count_i[7]_i_12_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_13 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [3]),
        .I2(Q[4]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [4]),
        .O(\grdc.rd_data_count_i[7]_i_13_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_14 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [2]),
        .I2(Q[3]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [3]),
        .O(\grdc.rd_data_count_i[7]_i_14_n_0 ));
  LUT5 #(
    .INIT(32'h2BD4D42B)) 
    \grdc.rd_data_count_i[7]_i_15 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(\grdc.rd_data_count_i_reg[9]_0 [1]),
        .I3(Q[2]),
        .I4(\grdc.rd_data_count_i_reg[9]_0 [2]),
        .O(\grdc.rd_data_count_i[7]_i_15_n_0 ));
  LUT5 #(
    .INIT(32'hD22D2DD2)) 
    \grdc.rd_data_count_i[7]_i_16 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(\grdc.rd_data_count_i_reg[9]_0 [1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .I4(Q[1]),
        .O(\grdc.rd_data_count_i[7]_i_16_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \grdc.rd_data_count_i[7]_i_17 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(\grdc.rd_data_count_i_reg[9]_0 [0]),
        .O(\grdc.rd_data_count_i[7]_i_17_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[9]_i_5 
       (.I0(Q[7]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [7]),
        .I2(Q[8]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [8]),
        .O(\grdc.rd_data_count_i[9]_i_5_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[7]_i_1 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\grdc.rd_data_count_i_reg[7]_i_1_n_0 ,\grdc.rd_data_count_i_reg[7]_i_1_n_1 ,\grdc.rd_data_count_i_reg[7]_i_1_n_2 ,\grdc.rd_data_count_i_reg[7]_i_1_n_3 ,\grdc.rd_data_count_i_reg[7]_i_1_n_4 ,\grdc.rd_data_count_i_reg[7]_i_1_n_5 ,\grdc.rd_data_count_i_reg[7]_i_1_n_6 ,\grdc.rd_data_count_i_reg[7]_i_1_n_7 }),
        .DI(DI),
        .O({D[6:0],\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({\grdc.rd_data_count_i[7]_i_10_n_0 ,\grdc.rd_data_count_i[7]_i_11_n_0 ,\grdc.rd_data_count_i[7]_i_12_n_0 ,\grdc.rd_data_count_i[7]_i_13_n_0 ,\grdc.rd_data_count_i[7]_i_14_n_0 ,\grdc.rd_data_count_i[7]_i_15_n_0 ,\grdc.rd_data_count_i[7]_i_16_n_0 ,\grdc.rd_data_count_i[7]_i_17_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[9]_i_2 
       (.CI(\grdc.rd_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_grdc.rd_data_count_i_reg[9]_i_2_CO_UNCONNECTED [7:1],\grdc.rd_data_count_i_reg[9]_i_2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\grdc.rd_data_count_i_reg[9] }),
        .O({\NLW_grdc.rd_data_count_i_reg[9]_i_2_O_UNCONNECTED [7:2],D[8:7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,S,\grdc.rd_data_count_i[9]_i_5_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn__parameterized3_10
   (Q,
    ram_rd_en_i,
    \reg_out_i_reg[7] ,
    src_in_bin,
    \count_value_i_reg[1]_0 ,
    D,
    \count_value_i_reg[7]_0 ,
    \count_value_i_reg[0]_0 ,
    rd_en,
    ram_empty_i,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \grdc.rd_data_count_i_reg[7] ,
    DI,
    \grdc.rd_data_count_i_reg[9] ,
    S,
    \grdc.rd_data_count_i_reg[9]_0 ,
    \count_value_i_reg[9]_0 ,
    rd_clk);
  output [9:0]Q;
  output ram_rd_en_i;
  output \reg_out_i_reg[7] ;
  output [8:0]src_in_bin;
  output \count_value_i_reg[1]_0 ;
  output [8:0]D;
  output [7:0]\count_value_i_reg[7]_0 ;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input ram_empty_i;
  input [8:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  input [1:0]\grdc.rd_data_count_i_reg[7] ;
  input [7:0]DI;
  input [0:0]\grdc.rd_data_count_i_reg[9] ;
  input [0:0]S;
  input [8:0]\grdc.rd_data_count_i_reg[9]_0 ;
  input \count_value_i_reg[9]_0 ;
  input rd_clk;

  wire [8:0]D;
  wire [7:0]DI;
  wire [9:0]Q;
  wire [0:0]S;
  wire \count_value_i[0]_i_1__4_n_0 ;
  wire \count_value_i[1]_i_1__4_n_0 ;
  wire \count_value_i[2]_i_1__3_n_0 ;
  wire \count_value_i[3]_i_1__3_n_0 ;
  wire \count_value_i[4]_i_1__3_n_0 ;
  wire \count_value_i[5]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_2__3_n_0 ;
  wire \count_value_i[7]_i_1__3_n_0 ;
  wire \count_value_i[8]_i_1__3_n_0 ;
  wire \count_value_i[9]_i_1__0_n_0 ;
  wire \count_value_i[9]_i_2__0_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \count_value_i_reg[1]_0 ;
  wire [7:0]\count_value_i_reg[7]_0 ;
  wire \count_value_i_reg[9]_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_7_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_8_n_0 ;
  wire [8:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  wire \grdc.rd_data_count_i[7]_i_10_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_11_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_12_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_13_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_14_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_15_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_16_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_17_n_0 ;
  wire \grdc.rd_data_count_i[9]_i_5_n_0 ;
  wire [1:0]\grdc.rd_data_count_i_reg[7] ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_0 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_1 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_2 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_3 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_4 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_5 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_6 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_7 ;
  wire [0:0]\grdc.rd_data_count_i_reg[9] ;
  wire [8:0]\grdc.rd_data_count_i_reg[9]_0 ;
  wire \grdc.rd_data_count_i_reg[9]_i_2_n_7 ;
  wire ram_empty_i;
  wire ram_rd_en_i;
  wire rd_clk;
  wire rd_en;
  wire \reg_out_i_reg[7] ;
  wire [8:0]src_in_bin;
  wire [0:0]\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:1]\NLW_grdc.rd_data_count_i_reg[9]_i_2_CO_UNCONNECTED ;
  wire [7:2]\NLW_grdc.rd_data_count_i_reg[9]_i_2_O_UNCONNECTED ;

  LUT5 #(
    .INIT(32'hAABA5545)) 
    \count_value_i[0]_i_1__4 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(Q[0]),
        .O(\count_value_i[0]_i_1__4_n_0 ));
  LUT5 #(
    .INIT(32'h04FFFB00)) 
    \count_value_i[1]_i_1__4 
       (.I0(\count_value_i_reg[0]_0 [0]),
        .I1(\count_value_i_reg[0]_0 [1]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair275" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair272" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__3 
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair272" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__3_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__3 
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(Q[2]),
        .I3(\count_value_i[6]_i_2__3_n_0 ),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__3 
       (.I0(\count_value_i[6]_i_2__3_n_0 ),
        .I1(Q[2]),
        .I2(Q[3]),
        .I3(Q[4]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h0000AA8A00000000)) 
    \count_value_i[6]_i_2__3 
       (.I0(Q[1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair269" *) 
  LUT4 #(
    .INIT(16'hF708)) 
    \count_value_i[7]_i_1__3 
       (.I0(Q[6]),
        .I1(Q[5]),
        .I2(\count_value_i[9]_i_2__0_n_0 ),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair269" *) 
  LUT5 #(
    .INIT(32'hBFFF4000)) 
    \count_value_i[8]_i_1__3 
       (.I0(\count_value_i[9]_i_2__0_n_0 ),
        .I1(Q[5]),
        .I2(Q[6]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF7FFF00008000)) 
    \count_value_i[9]_i_1__0 
       (.I0(Q[8]),
        .I1(Q[7]),
        .I2(Q[6]),
        .I3(Q[5]),
        .I4(\count_value_i[9]_i_2__0_n_0 ),
        .I5(Q[9]),
        .O(\count_value_i[9]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \count_value_i[9]_i_2__0 
       (.I0(Q[0]),
        .I1(ram_rd_en_i),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(Q[3]),
        .I5(Q[4]),
        .O(\count_value_i[9]_i_2__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[0]_i_1__4_n_0 ),
        .Q(Q[0]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[1]_i_1__4_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[2]_i_1__3_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[3]_i_1__3_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[4]_i_1__3_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[5]_i_1__3_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[6]_i_1__3_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[7]_i_1__3_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[8]_i_1__3_n_0 ),
        .Q(Q[8]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[9] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[9]_i_1__0_n_0 ),
        .Q(Q[9]),
        .R(\count_value_i_reg[9]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair273" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_1 
       (.I0(Q[8]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ),
        .I2(Q[7]),
        .I3(Q[9]),
        .O(src_in_bin[8]));
  (* SOFT_HLUTNM = "soft_lutpair270" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11 
       (.I0(Q[5]),
        .I1(Q[3]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I3(Q[4]),
        .I4(Q[6]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair271" *) 
  LUT5 #(
    .INIT(32'hFFFFDD4D)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12 
       (.I0(\grdc.rd_data_count_i_reg[7] [1]),
        .I1(Q[1]),
        .I2(\grdc.rd_data_count_i_reg[7] [0]),
        .I3(Q[0]),
        .I4(Q[2]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair273" *) 
  LUT3 #(
    .INIT(8'hA9)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2 
       (.I0(Q[8]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ),
        .I2(Q[7]),
        .O(src_in_bin[7]));
  LUT6 #(
    .INIT(64'hFFFFFFFE00000001)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3 
       (.I0(Q[6]),
        .I1(Q[4]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[7]),
        .O(src_in_bin[6]));
  (* SOFT_HLUTNM = "soft_lutpair270" *) 
  LUT5 #(
    .INIT(32'hAAAAAAA9)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_4 
       (.I0(Q[6]),
        .I1(Q[4]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .O(src_in_bin[5]));
  (* SOFT_HLUTNM = "soft_lutpair274" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_5 
       (.I0(Q[4]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I2(Q[3]),
        .I3(Q[5]),
        .O(src_in_bin[4]));
  (* SOFT_HLUTNM = "soft_lutpair274" *) 
  LUT3 #(
    .INIT(8'hA9)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6 
       (.I0(Q[4]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I2(Q[3]),
        .O(src_in_bin[3]));
  LUT6 #(
    .INIT(64'hEFAAFFEF10550010)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_7 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(\grdc.rd_data_count_i_reg[7] [0]),
        .I3(Q[1]),
        .I4(\grdc.rd_data_count_i_reg[7] [1]),
        .I5(Q[3]),
        .O(src_in_bin[2]));
  (* SOFT_HLUTNM = "soft_lutpair271" *) 
  LUT5 #(
    .INIT(32'h9A55AA9A)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_8 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(\grdc.rd_data_count_i_reg[7] [0]),
        .I3(Q[1]),
        .I4(\grdc.rd_data_count_i_reg[7] [1]),
        .O(src_in_bin[1]));
  (* SOFT_HLUTNM = "soft_lutpair275" *) 
  LUT4 #(
    .INIT(16'h6696)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_9 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(\grdc.rd_data_count_i_reg[7] [0]),
        .I3(Q[0]),
        .O(src_in_bin[0]));
  LUT5 #(
    .INIT(32'hAABA5545)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(Q[0]),
        .O(\count_value_i_reg[7]_0 [0]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [7]),
        .O(\count_value_i_reg[7]_0 [7]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [6]),
        .O(\count_value_i_reg[7]_0 [6]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [5]),
        .O(\count_value_i_reg[7]_0 [5]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [4]),
        .O(\count_value_i_reg[7]_0 [4]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .O(\count_value_i_reg[7]_0 [3]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .O(\count_value_i_reg[7]_0 [2]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .O(\count_value_i_reg[7]_0 [1]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_5 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .I2(Q[0]),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I4(Q[2]),
        .I5(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .O(\count_value_i_reg[1]_0 ));
  LUT6 #(
    .INIT(64'h8200008200000000)) 
    \gen_pf_ic_rc.ram_empty_i_i_6 
       (.I0(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [7]),
        .I2(Q[7]),
        .I3(Q[8]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [8]),
        .I5(\gen_pf_ic_rc.ram_empty_i_i_8_n_0 ),
        .O(\reg_out_i_reg[7] ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.ram_empty_i_i_7 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [6]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_8 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [4]),
        .I2(Q[3]),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .I4(Q[5]),
        .I5(\gen_pf_ic_rc.ram_empty_i_reg [5]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_8_n_0 ));
  LUT4 #(
    .INIT(16'h00FB)) 
    \gen_sdpram.xpm_memory_base_inst_i_2 
       (.I0(\count_value_i_reg[0]_0 [0]),
        .I1(\count_value_i_reg[0]_0 [1]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .O(ram_rd_en_i));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_10 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [6]),
        .I2(Q[7]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [7]),
        .O(\grdc.rd_data_count_i[7]_i_10_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_11 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [5]),
        .I2(Q[6]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [6]),
        .O(\grdc.rd_data_count_i[7]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_12 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [4]),
        .I2(Q[5]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [5]),
        .O(\grdc.rd_data_count_i[7]_i_12_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_13 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [3]),
        .I2(Q[4]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [4]),
        .O(\grdc.rd_data_count_i[7]_i_13_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_14 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [2]),
        .I2(Q[3]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [3]),
        .O(\grdc.rd_data_count_i[7]_i_14_n_0 ));
  LUT5 #(
    .INIT(32'h2BD4D42B)) 
    \grdc.rd_data_count_i[7]_i_15 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(\grdc.rd_data_count_i_reg[9]_0 [1]),
        .I3(Q[2]),
        .I4(\grdc.rd_data_count_i_reg[9]_0 [2]),
        .O(\grdc.rd_data_count_i[7]_i_15_n_0 ));
  LUT5 #(
    .INIT(32'hD22D2DD2)) 
    \grdc.rd_data_count_i[7]_i_16 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(\grdc.rd_data_count_i_reg[9]_0 [1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .I4(Q[1]),
        .O(\grdc.rd_data_count_i[7]_i_16_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \grdc.rd_data_count_i[7]_i_17 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(\grdc.rd_data_count_i_reg[9]_0 [0]),
        .O(\grdc.rd_data_count_i[7]_i_17_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[9]_i_5 
       (.I0(Q[7]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [7]),
        .I2(Q[8]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [8]),
        .O(\grdc.rd_data_count_i[9]_i_5_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[7]_i_1 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\grdc.rd_data_count_i_reg[7]_i_1_n_0 ,\grdc.rd_data_count_i_reg[7]_i_1_n_1 ,\grdc.rd_data_count_i_reg[7]_i_1_n_2 ,\grdc.rd_data_count_i_reg[7]_i_1_n_3 ,\grdc.rd_data_count_i_reg[7]_i_1_n_4 ,\grdc.rd_data_count_i_reg[7]_i_1_n_5 ,\grdc.rd_data_count_i_reg[7]_i_1_n_6 ,\grdc.rd_data_count_i_reg[7]_i_1_n_7 }),
        .DI(DI),
        .O({D[6:0],\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({\grdc.rd_data_count_i[7]_i_10_n_0 ,\grdc.rd_data_count_i[7]_i_11_n_0 ,\grdc.rd_data_count_i[7]_i_12_n_0 ,\grdc.rd_data_count_i[7]_i_13_n_0 ,\grdc.rd_data_count_i[7]_i_14_n_0 ,\grdc.rd_data_count_i[7]_i_15_n_0 ,\grdc.rd_data_count_i[7]_i_16_n_0 ,\grdc.rd_data_count_i[7]_i_17_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[9]_i_2 
       (.CI(\grdc.rd_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_grdc.rd_data_count_i_reg[9]_i_2_CO_UNCONNECTED [7:1],\grdc.rd_data_count_i_reg[9]_i_2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\grdc.rd_data_count_i_reg[9] }),
        .O({\NLW_grdc.rd_data_count_i_reg[9]_i_2_O_UNCONNECTED [7:2],D[8:7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,S,\grdc.rd_data_count_i[9]_i_5_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn__parameterized3_13
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[5]_0 ,
    wrst_busy,
    rst_d1,
    \gwdc.wr_data_count_i_reg[9] ,
    wr_clk);
  output [9:0]Q;
  output [8:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[5]_0 ;
  input wrst_busy;
  input rst_d1;
  input [9:0]\gwdc.wr_data_count_i_reg[9] ;
  input wr_clk;

  wire [8:0]D;
  wire [9:0]Q;
  wire \count_value_i[0]_i_1__1_n_0 ;
  wire \count_value_i[1]_i_1__1_n_0 ;
  wire \count_value_i[2]_i_1__1_n_0 ;
  wire \count_value_i[3]_i_1__1_n_0 ;
  wire \count_value_i[4]_i_1__1_n_0 ;
  wire \count_value_i[5]_i_1_n_0 ;
  wire \count_value_i[6]_i_1_n_0 ;
  wire \count_value_i[6]_i_2_n_0 ;
  wire \count_value_i[7]_i_1_n_0 ;
  wire \count_value_i[8]_i_1_n_0 ;
  wire \count_value_i[9]_i_1_n_0 ;
  wire \count_value_i[9]_i_2_n_0 ;
  wire \count_value_i_reg[5]_0 ;
  wire \gwdc.wr_data_count_i[7]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_3_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_4_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_5_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_6_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_7_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_8_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_9_n_0 ;
  wire \gwdc.wr_data_count_i[9]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[9]_i_3_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_1 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_2 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_3 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_4 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_5 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_6 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_7 ;
  wire [9:0]\gwdc.wr_data_count_i_reg[9] ;
  wire \gwdc.wr_data_count_i_reg[9]_i_1_n_7 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [0:0]\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:1]\NLW_gwdc.wr_data_count_i_reg[9]_i_1_CO_UNCONNECTED ;
  wire [7:2]\NLW_gwdc.wr_data_count_i_reg[9]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair281" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair281" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair280" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair280" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[5]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair279" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1 
       (.I0(Q[5]),
        .I1(\count_value_i[9]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair279" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1 
       (.I0(Q[6]),
        .I1(\count_value_i[9]_i_2_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[9]_i_1 
       (.I0(Q[7]),
        .I1(Q[5]),
        .I2(\count_value_i[9]_i_2_n_0 ),
        .I3(Q[6]),
        .I4(Q[8]),
        .I5(Q[9]),
        .O(\count_value_i[9]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[9]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[9]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__1_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[9] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[9]_i_1_n_0 ),
        .Q(Q[9]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_2 
       (.I0(Q[7]),
        .I1(\gwdc.wr_data_count_i_reg[9] [7]),
        .O(\gwdc.wr_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_3 
       (.I0(Q[6]),
        .I1(\gwdc.wr_data_count_i_reg[9] [6]),
        .O(\gwdc.wr_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_4 
       (.I0(Q[5]),
        .I1(\gwdc.wr_data_count_i_reg[9] [5]),
        .O(\gwdc.wr_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_5 
       (.I0(Q[4]),
        .I1(\gwdc.wr_data_count_i_reg[9] [4]),
        .O(\gwdc.wr_data_count_i[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_6 
       (.I0(Q[3]),
        .I1(\gwdc.wr_data_count_i_reg[9] [3]),
        .O(\gwdc.wr_data_count_i[7]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_7 
       (.I0(Q[2]),
        .I1(\gwdc.wr_data_count_i_reg[9] [2]),
        .O(\gwdc.wr_data_count_i[7]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_8 
       (.I0(Q[1]),
        .I1(\gwdc.wr_data_count_i_reg[9] [1]),
        .O(\gwdc.wr_data_count_i[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_9 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[9] [0]),
        .O(\gwdc.wr_data_count_i[7]_i_9_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[9]_i_2 
       (.I0(Q[9]),
        .I1(\gwdc.wr_data_count_i_reg[9] [9]),
        .O(\gwdc.wr_data_count_i[9]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[9]_i_3 
       (.I0(Q[8]),
        .I1(\gwdc.wr_data_count_i_reg[9] [8]),
        .O(\gwdc.wr_data_count_i[9]_i_3_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[7]_i_1 
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_1 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_2 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_3 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_4 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_5 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_6 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_7 }),
        .DI(Q[7:0]),
        .O({D[6:0],\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({\gwdc.wr_data_count_i[7]_i_2_n_0 ,\gwdc.wr_data_count_i[7]_i_3_n_0 ,\gwdc.wr_data_count_i[7]_i_4_n_0 ,\gwdc.wr_data_count_i[7]_i_5_n_0 ,\gwdc.wr_data_count_i[7]_i_6_n_0 ,\gwdc.wr_data_count_i[7]_i_7_n_0 ,\gwdc.wr_data_count_i[7]_i_8_n_0 ,\gwdc.wr_data_count_i[7]_i_9_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[9]_i_1 
       (.CI(\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_gwdc.wr_data_count_i_reg[9]_i_1_CO_UNCONNECTED [7:1],\gwdc.wr_data_count_i_reg[9]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,Q[8]}),
        .O({\NLW_gwdc.wr_data_count_i_reg[9]_i_1_O_UNCONNECTED [7:2],D[8:7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gwdc.wr_data_count_i[9]_i_2_n_0 ,\gwdc.wr_data_count_i[9]_i_3_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn__parameterized3_3
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[5]_0 ,
    wrst_busy,
    rst_d1,
    \gwdc.wr_data_count_i_reg[9] ,
    wr_clk);
  output [9:0]Q;
  output [8:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[5]_0 ;
  input wrst_busy;
  input rst_d1;
  input [9:0]\gwdc.wr_data_count_i_reg[9] ;
  input wr_clk;

  wire [8:0]D;
  wire [9:0]Q;
  wire \count_value_i[0]_i_1__1_n_0 ;
  wire \count_value_i[1]_i_1__1_n_0 ;
  wire \count_value_i[2]_i_1__1_n_0 ;
  wire \count_value_i[3]_i_1__1_n_0 ;
  wire \count_value_i[4]_i_1__1_n_0 ;
  wire \count_value_i[5]_i_1_n_0 ;
  wire \count_value_i[6]_i_1_n_0 ;
  wire \count_value_i[6]_i_2_n_0 ;
  wire \count_value_i[7]_i_1_n_0 ;
  wire \count_value_i[8]_i_1_n_0 ;
  wire \count_value_i[9]_i_1_n_0 ;
  wire \count_value_i[9]_i_2_n_0 ;
  wire \count_value_i_reg[5]_0 ;
  wire \gwdc.wr_data_count_i[7]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_3_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_4_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_5_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_6_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_7_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_8_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_9_n_0 ;
  wire \gwdc.wr_data_count_i[9]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[9]_i_3_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_1 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_2 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_3 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_4 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_5 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_6 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_7 ;
  wire [9:0]\gwdc.wr_data_count_i_reg[9] ;
  wire \gwdc.wr_data_count_i_reg[9]_i_1_n_7 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [0:0]\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:1]\NLW_gwdc.wr_data_count_i_reg[9]_i_1_CO_UNCONNECTED ;
  wire [7:2]\NLW_gwdc.wr_data_count_i_reg[9]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair335" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair335" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair334" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair334" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[5]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair333" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1 
       (.I0(Q[5]),
        .I1(\count_value_i[9]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair333" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1 
       (.I0(Q[6]),
        .I1(\count_value_i[9]_i_2_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[9]_i_1 
       (.I0(Q[7]),
        .I1(Q[5]),
        .I2(\count_value_i[9]_i_2_n_0 ),
        .I3(Q[6]),
        .I4(Q[8]),
        .I5(Q[9]),
        .O(\count_value_i[9]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[9]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[9]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__1_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[9] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[9]_i_1_n_0 ),
        .Q(Q[9]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_2 
       (.I0(Q[7]),
        .I1(\gwdc.wr_data_count_i_reg[9] [7]),
        .O(\gwdc.wr_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_3 
       (.I0(Q[6]),
        .I1(\gwdc.wr_data_count_i_reg[9] [6]),
        .O(\gwdc.wr_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_4 
       (.I0(Q[5]),
        .I1(\gwdc.wr_data_count_i_reg[9] [5]),
        .O(\gwdc.wr_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_5 
       (.I0(Q[4]),
        .I1(\gwdc.wr_data_count_i_reg[9] [4]),
        .O(\gwdc.wr_data_count_i[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_6 
       (.I0(Q[3]),
        .I1(\gwdc.wr_data_count_i_reg[9] [3]),
        .O(\gwdc.wr_data_count_i[7]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_7 
       (.I0(Q[2]),
        .I1(\gwdc.wr_data_count_i_reg[9] [2]),
        .O(\gwdc.wr_data_count_i[7]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_8 
       (.I0(Q[1]),
        .I1(\gwdc.wr_data_count_i_reg[9] [1]),
        .O(\gwdc.wr_data_count_i[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_9 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[9] [0]),
        .O(\gwdc.wr_data_count_i[7]_i_9_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[9]_i_2 
       (.I0(Q[9]),
        .I1(\gwdc.wr_data_count_i_reg[9] [9]),
        .O(\gwdc.wr_data_count_i[9]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[9]_i_3 
       (.I0(Q[8]),
        .I1(\gwdc.wr_data_count_i_reg[9] [8]),
        .O(\gwdc.wr_data_count_i[9]_i_3_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[7]_i_1 
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_1 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_2 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_3 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_4 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_5 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_6 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_7 }),
        .DI(Q[7:0]),
        .O({D[6:0],\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({\gwdc.wr_data_count_i[7]_i_2_n_0 ,\gwdc.wr_data_count_i[7]_i_3_n_0 ,\gwdc.wr_data_count_i[7]_i_4_n_0 ,\gwdc.wr_data_count_i[7]_i_5_n_0 ,\gwdc.wr_data_count_i[7]_i_6_n_0 ,\gwdc.wr_data_count_i[7]_i_7_n_0 ,\gwdc.wr_data_count_i[7]_i_8_n_0 ,\gwdc.wr_data_count_i[7]_i_9_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[9]_i_1 
       (.CI(\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_gwdc.wr_data_count_i_reg[9]_i_1_CO_UNCONNECTED [7:1],\gwdc.wr_data_count_i_reg[9]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,Q[8]}),
        .O({\NLW_gwdc.wr_data_count_i_reg[9]_i_1_O_UNCONNECTED [7:2],D[8:7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gwdc.wr_data_count_i[9]_i_2_n_0 ,\gwdc.wr_data_count_i[9]_i_3_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn__parameterized4
   (ram_empty_i0,
    E,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \gen_pf_ic_rc.ram_empty_i_reg_0 ,
    Q,
    rd_en,
    ram_empty_i,
    \gen_pf_ic_rc.ram_empty_i_reg_1 ,
    \count_value_i_reg[0]_0 ,
    rd_clk);
  output ram_empty_i0;
  input [0:0]E;
  input \gen_pf_ic_rc.ram_empty_i_reg ;
  input \gen_pf_ic_rc.ram_empty_i_reg_0 ;
  input [1:0]Q;
  input rd_en;
  input ram_empty_i;
  input [8:0]\gen_pf_ic_rc.ram_empty_i_reg_1 ;
  input \count_value_i_reg[0]_0 ;
  input rd_clk;

  wire [0:0]E;
  wire [1:0]Q;
  wire \count_value_i[0]_i_1__3_n_0 ;
  wire \count_value_i[1]_i_1__3_n_0 ;
  wire \count_value_i[2]_i_1__2_n_0 ;
  wire \count_value_i[3]_i_1__2_n_0 ;
  wire \count_value_i[4]_i_1__2_n_0 ;
  wire \count_value_i[5]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_2__2_n_0 ;
  wire \count_value_i[7]_i_1__2_n_0 ;
  wire \count_value_i[8]_i_1__2_n_0 ;
  wire \count_value_i[8]_i_2__1_n_0 ;
  wire \count_value_i_reg[0]_0 ;
  wire \count_value_i_reg_n_0_[0] ;
  wire \count_value_i_reg_n_0_[1] ;
  wire \count_value_i_reg_n_0_[2] ;
  wire \count_value_i_reg_n_0_[3] ;
  wire \count_value_i_reg_n_0_[4] ;
  wire \count_value_i_reg_n_0_[5] ;
  wire \count_value_i_reg_n_0_[6] ;
  wire \count_value_i_reg_n_0_[7] ;
  wire \count_value_i_reg_n_0_[8] ;
  wire \gen_pf_ic_rc.ram_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_3_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_reg ;
  wire \gen_pf_ic_rc.ram_empty_i_reg_0 ;
  wire [8:0]\gen_pf_ic_rc.ram_empty_i_reg_1 ;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire rd_en;

  LUT4 #(
    .INIT(16'h04FB)) 
    \count_value_i[0]_i_1__3 
       (.I0(rd_en),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(\count_value_i_reg_n_0_[0] ),
        .O(\count_value_i[0]_i_1__3_n_0 ));
  LUT5 #(
    .INIT(32'h04FFFB00)) 
    \count_value_i[1]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(rd_en),
        .I3(\count_value_i_reg_n_0_[0] ),
        .I4(\count_value_i_reg_n_0_[1] ),
        .O(\count_value_i[1]_i_1__3_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(\count_value_i_reg_n_0_[1] ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .O(\count_value_i[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair331" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[2] ),
        .I1(\count_value_i_reg_n_0_[1] ),
        .I2(\count_value_i_reg_n_0_[0] ),
        .I3(\count_value_i_reg_n_0_[3] ),
        .O(\count_value_i[3]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair331" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(\count_value_i_reg_n_0_[1] ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .I3(\count_value_i_reg_n_0_[3] ),
        .I4(\count_value_i_reg_n_0_[4] ),
        .O(\count_value_i[4]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[4] ),
        .I1(\count_value_i_reg_n_0_[3] ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .I3(\count_value_i[6]_i_2__2_n_0 ),
        .I4(\count_value_i_reg_n_0_[5] ),
        .O(\count_value_i[5]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__2 
       (.I0(\count_value_i[6]_i_2__2_n_0 ),
        .I1(\count_value_i_reg_n_0_[2] ),
        .I2(\count_value_i_reg_n_0_[3] ),
        .I3(\count_value_i_reg_n_0_[4] ),
        .I4(\count_value_i_reg_n_0_[5] ),
        .I5(\count_value_i_reg_n_0_[6] ),
        .O(\count_value_i[6]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h0000AA8A00000000)) 
    \count_value_i[6]_i_2__2 
       (.I0(\count_value_i_reg_n_0_[1] ),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(\count_value_i_reg_n_0_[0] ),
        .O(\count_value_i[6]_i_2__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair330" *) 
  LUT4 #(
    .INIT(16'hF708)) 
    \count_value_i[7]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[6] ),
        .I1(\count_value_i_reg_n_0_[5] ),
        .I2(\count_value_i[8]_i_2__1_n_0 ),
        .I3(\count_value_i_reg_n_0_[7] ),
        .O(\count_value_i[7]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair330" *) 
  LUT5 #(
    .INIT(32'hDFFF2000)) 
    \count_value_i[8]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[7] ),
        .I1(\count_value_i[8]_i_2__1_n_0 ),
        .I2(\count_value_i_reg_n_0_[5] ),
        .I3(\count_value_i_reg_n_0_[6] ),
        .I4(\count_value_i_reg_n_0_[8] ),
        .O(\count_value_i[8]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \count_value_i[8]_i_2__1 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(E),
        .I2(\count_value_i_reg_n_0_[1] ),
        .I3(\count_value_i_reg_n_0_[2] ),
        .I4(\count_value_i_reg_n_0_[3] ),
        .I5(\count_value_i_reg_n_0_[4] ),
        .O(\count_value_i[8]_i_2__1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__3_n_0 ),
        .Q(\count_value_i_reg_n_0_[0] ),
        .S(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__3_n_0 ),
        .Q(\count_value_i_reg_n_0_[1] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[2] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[3] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[4] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[5]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[5] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[6]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[6] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[7]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[7] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[8]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[8] ),
        .R(\count_value_i_reg[0]_0 ));
  LUT6 #(
    .INIT(64'hFFFF800080008000)) 
    \gen_pf_ic_rc.ram_empty_i_i_1 
       (.I0(\gen_pf_ic_rc.ram_empty_i_i_2_n_0 ),
        .I1(E),
        .I2(\gen_pf_ic_rc.ram_empty_i_i_3_n_0 ),
        .I3(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg ),
        .I5(\gen_pf_ic_rc.ram_empty_i_reg_0 ),
        .O(ram_empty_i0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_2 
       (.I0(\count_value_i_reg_n_0_[7] ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_1 [7]),
        .I2(\count_value_i_reg_n_0_[6] ),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg_1 [6]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_1 [8]),
        .I5(\count_value_i_reg_n_0_[8] ),
        .O(\gen_pf_ic_rc.ram_empty_i_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_3 
       (.I0(\count_value_i_reg_n_0_[1] ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_1 [1]),
        .I2(\count_value_i_reg_n_0_[0] ),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg_1 [0]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_1 [2]),
        .I5(\count_value_i_reg_n_0_[2] ),
        .O(\gen_pf_ic_rc.ram_empty_i_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_4 
       (.I0(\count_value_i_reg_n_0_[4] ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_1 [4]),
        .I2(\count_value_i_reg_n_0_[3] ),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg_1 [3]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_1 [5]),
        .I5(\count_value_i_reg_n_0_[5] ),
        .O(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn__parameterized4_11
   (ram_empty_i0,
    E,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \gen_pf_ic_rc.ram_empty_i_reg_0 ,
    Q,
    rd_en,
    ram_empty_i,
    \gen_pf_ic_rc.ram_empty_i_reg_1 ,
    \count_value_i_reg[0]_0 ,
    rd_clk);
  output ram_empty_i0;
  input [0:0]E;
  input \gen_pf_ic_rc.ram_empty_i_reg ;
  input \gen_pf_ic_rc.ram_empty_i_reg_0 ;
  input [1:0]Q;
  input rd_en;
  input ram_empty_i;
  input [8:0]\gen_pf_ic_rc.ram_empty_i_reg_1 ;
  input \count_value_i_reg[0]_0 ;
  input rd_clk;

  wire [0:0]E;
  wire [1:0]Q;
  wire \count_value_i[0]_i_1__3_n_0 ;
  wire \count_value_i[1]_i_1__3_n_0 ;
  wire \count_value_i[2]_i_1__2_n_0 ;
  wire \count_value_i[3]_i_1__2_n_0 ;
  wire \count_value_i[4]_i_1__2_n_0 ;
  wire \count_value_i[5]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_2__2_n_0 ;
  wire \count_value_i[7]_i_1__2_n_0 ;
  wire \count_value_i[8]_i_1__2_n_0 ;
  wire \count_value_i[8]_i_2__1_n_0 ;
  wire \count_value_i_reg[0]_0 ;
  wire \count_value_i_reg_n_0_[0] ;
  wire \count_value_i_reg_n_0_[1] ;
  wire \count_value_i_reg_n_0_[2] ;
  wire \count_value_i_reg_n_0_[3] ;
  wire \count_value_i_reg_n_0_[4] ;
  wire \count_value_i_reg_n_0_[5] ;
  wire \count_value_i_reg_n_0_[6] ;
  wire \count_value_i_reg_n_0_[7] ;
  wire \count_value_i_reg_n_0_[8] ;
  wire \gen_pf_ic_rc.ram_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_3_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_reg ;
  wire \gen_pf_ic_rc.ram_empty_i_reg_0 ;
  wire [8:0]\gen_pf_ic_rc.ram_empty_i_reg_1 ;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire rd_en;

  LUT4 #(
    .INIT(16'h04FB)) 
    \count_value_i[0]_i_1__3 
       (.I0(rd_en),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(\count_value_i_reg_n_0_[0] ),
        .O(\count_value_i[0]_i_1__3_n_0 ));
  LUT5 #(
    .INIT(32'h04FFFB00)) 
    \count_value_i[1]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(rd_en),
        .I3(\count_value_i_reg_n_0_[0] ),
        .I4(\count_value_i_reg_n_0_[1] ),
        .O(\count_value_i[1]_i_1__3_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(\count_value_i_reg_n_0_[1] ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .O(\count_value_i[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair277" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[2] ),
        .I1(\count_value_i_reg_n_0_[1] ),
        .I2(\count_value_i_reg_n_0_[0] ),
        .I3(\count_value_i_reg_n_0_[3] ),
        .O(\count_value_i[3]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair277" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(\count_value_i_reg_n_0_[1] ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .I3(\count_value_i_reg_n_0_[3] ),
        .I4(\count_value_i_reg_n_0_[4] ),
        .O(\count_value_i[4]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[4] ),
        .I1(\count_value_i_reg_n_0_[3] ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .I3(\count_value_i[6]_i_2__2_n_0 ),
        .I4(\count_value_i_reg_n_0_[5] ),
        .O(\count_value_i[5]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__2 
       (.I0(\count_value_i[6]_i_2__2_n_0 ),
        .I1(\count_value_i_reg_n_0_[2] ),
        .I2(\count_value_i_reg_n_0_[3] ),
        .I3(\count_value_i_reg_n_0_[4] ),
        .I4(\count_value_i_reg_n_0_[5] ),
        .I5(\count_value_i_reg_n_0_[6] ),
        .O(\count_value_i[6]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h0000AA8A00000000)) 
    \count_value_i[6]_i_2__2 
       (.I0(\count_value_i_reg_n_0_[1] ),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(\count_value_i_reg_n_0_[0] ),
        .O(\count_value_i[6]_i_2__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair276" *) 
  LUT4 #(
    .INIT(16'hF708)) 
    \count_value_i[7]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[6] ),
        .I1(\count_value_i_reg_n_0_[5] ),
        .I2(\count_value_i[8]_i_2__1_n_0 ),
        .I3(\count_value_i_reg_n_0_[7] ),
        .O(\count_value_i[7]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair276" *) 
  LUT5 #(
    .INIT(32'hDFFF2000)) 
    \count_value_i[8]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[7] ),
        .I1(\count_value_i[8]_i_2__1_n_0 ),
        .I2(\count_value_i_reg_n_0_[5] ),
        .I3(\count_value_i_reg_n_0_[6] ),
        .I4(\count_value_i_reg_n_0_[8] ),
        .O(\count_value_i[8]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \count_value_i[8]_i_2__1 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(E),
        .I2(\count_value_i_reg_n_0_[1] ),
        .I3(\count_value_i_reg_n_0_[2] ),
        .I4(\count_value_i_reg_n_0_[3] ),
        .I5(\count_value_i_reg_n_0_[4] ),
        .O(\count_value_i[8]_i_2__1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__3_n_0 ),
        .Q(\count_value_i_reg_n_0_[0] ),
        .S(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__3_n_0 ),
        .Q(\count_value_i_reg_n_0_[1] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[2] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[3] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[4] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[5]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[5] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[6]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[6] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[7]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[7] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[8]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[8] ),
        .R(\count_value_i_reg[0]_0 ));
  LUT6 #(
    .INIT(64'hFFFF800080008000)) 
    \gen_pf_ic_rc.ram_empty_i_i_1 
       (.I0(\gen_pf_ic_rc.ram_empty_i_i_2_n_0 ),
        .I1(E),
        .I2(\gen_pf_ic_rc.ram_empty_i_i_3_n_0 ),
        .I3(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg ),
        .I5(\gen_pf_ic_rc.ram_empty_i_reg_0 ),
        .O(ram_empty_i0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_2 
       (.I0(\count_value_i_reg_n_0_[7] ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_1 [7]),
        .I2(\count_value_i_reg_n_0_[6] ),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg_1 [6]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_1 [8]),
        .I5(\count_value_i_reg_n_0_[8] ),
        .O(\gen_pf_ic_rc.ram_empty_i_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_3 
       (.I0(\count_value_i_reg_n_0_[1] ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_1 [1]),
        .I2(\count_value_i_reg_n_0_[0] ),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg_1 [0]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_1 [2]),
        .I5(\count_value_i_reg_n_0_[2] ),
        .O(\gen_pf_ic_rc.ram_empty_i_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_4 
       (.I0(\count_value_i_reg_n_0_[4] ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_1 [4]),
        .I2(\count_value_i_reg_n_0_[3] ),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg_1 [3]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_1 [5]),
        .I5(\count_value_i_reg_n_0_[5] ),
        .O(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn__parameterized4_14
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[5]_0 ,
    wrst_busy,
    rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] ,
    wr_clk);
  output [8:0]Q;
  output [7:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[5]_0 ;
  input wrst_busy;
  input rst_d1;
  input [8:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] ;
  input wr_clk;

  wire [7:0]D;
  wire [8:0]Q;
  wire \count_value_i[0]_i_1__0_n_0 ;
  wire \count_value_i[1]_i_1__0_n_0 ;
  wire \count_value_i[2]_i_1__0_n_0 ;
  wire \count_value_i[3]_i_1__0_n_0 ;
  wire \count_value_i[4]_i_1__0_n_0 ;
  wire \count_value_i[5]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_2__0_n_0 ;
  wire \count_value_i[7]_i_1__0_n_0 ;
  wire \count_value_i[8]_i_1__0_n_0 ;
  wire \count_value_i[8]_i_2_n_0 ;
  wire \count_value_i_reg[5]_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[9]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 ;
  wire [8:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [0:0]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED ;
  wire [7:0]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1_CO_UNCONNECTED ;
  wire [7:1]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__0 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair284" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair284" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair283" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair283" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__0 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__0_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__0_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__0 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[5]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair282" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__0 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair282" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1__0 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__0_n_0 ),
        .Q(Q[0]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__0_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__0_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__0_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__0_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__0_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__0_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__0_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1__0_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [7]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [6]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [5]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [4]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [3]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [2]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [1]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [0]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[9]_i_2 
       (.I0(Q[8]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [8]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[9]_i_2_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1 
       (.CI(wr_pntr_plus1_pf_carry),
        .CI_TOP(1'b0),
        .CO({\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 }),
        .DI(Q[7:0]),
        .O({D[6:0],\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED [0]}),
        .S({\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1 
       (.CI(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1_O_UNCONNECTED [7:1],D[7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[9]_i_2_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn__parameterized4_4
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[5]_0 ,
    wrst_busy,
    rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] ,
    wr_clk);
  output [8:0]Q;
  output [7:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[5]_0 ;
  input wrst_busy;
  input rst_d1;
  input [8:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] ;
  input wr_clk;

  wire [7:0]D;
  wire [8:0]Q;
  wire \count_value_i[0]_i_1__0_n_0 ;
  wire \count_value_i[1]_i_1__0_n_0 ;
  wire \count_value_i[2]_i_1__0_n_0 ;
  wire \count_value_i[3]_i_1__0_n_0 ;
  wire \count_value_i[4]_i_1__0_n_0 ;
  wire \count_value_i[5]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_2__0_n_0 ;
  wire \count_value_i[7]_i_1__0_n_0 ;
  wire \count_value_i[8]_i_1__0_n_0 ;
  wire \count_value_i[8]_i_2_n_0 ;
  wire \count_value_i_reg[5]_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[9]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 ;
  wire [8:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [0:0]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED ;
  wire [7:0]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1_CO_UNCONNECTED ;
  wire [7:1]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__0 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair338" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair338" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair337" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair337" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__0 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__0_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__0_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__0 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[5]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair336" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__0 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair336" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1__0 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__0_n_0 ),
        .Q(Q[0]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__0_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__0_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__0_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__0_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__0_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__0_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__0_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1__0_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [7]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [6]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [5]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [4]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [3]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [2]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [1]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [0]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[9]_i_2 
       (.I0(Q[8]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [8]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[9]_i_2_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1 
       (.CI(wr_pntr_plus1_pf_carry),
        .CI_TOP(1'b0),
        .CO({\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 }),
        .DI(Q[7:0]),
        .O({D[6:0],\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED [0]}),
        .S({\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1 
       (.CI(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1_O_UNCONNECTED [7:1],D[7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[9]_i_2_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn__parameterized5
   (Q,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[5]_0 ,
    wrst_busy,
    rst_d1,
    wr_clk);
  output [8:0]Q;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[5]_0 ;
  input wrst_busy;
  input rst_d1;
  input wr_clk;

  wire [8:0]Q;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[2]_i_1_n_0 ;
  wire \count_value_i[3]_i_1_n_0 ;
  wire \count_value_i[4]_i_1_n_0 ;
  wire \count_value_i[5]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_2__1_n_0 ;
  wire \count_value_i[7]_i_1__1_n_0 ;
  wire \count_value_i[8]_i_1__1_n_0 ;
  wire \count_value_i[8]_i_2__0_n_0 ;
  wire \count_value_i_reg[5]_0 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  (* SOFT_HLUTNM = "soft_lutpair341" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair341" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair340" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair340" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__1_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__1_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__1 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[5]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair339" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__1 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair339" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1__1 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(Q[1]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1__1_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn__parameterized5_15
   (Q,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[5]_0 ,
    wrst_busy,
    rst_d1,
    wr_clk);
  output [8:0]Q;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[5]_0 ;
  input wrst_busy;
  input rst_d1;
  input wr_clk;

  wire [8:0]Q;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[2]_i_1_n_0 ;
  wire \count_value_i[3]_i_1_n_0 ;
  wire \count_value_i[4]_i_1_n_0 ;
  wire \count_value_i[5]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_2__1_n_0 ;
  wire \count_value_i[7]_i_1__1_n_0 ;
  wire \count_value_i[8]_i_1__1_n_0 ;
  wire \count_value_i[8]_i_2__0_n_0 ;
  wire \count_value_i_reg[5]_0 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  (* SOFT_HLUTNM = "soft_lutpair287" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair287" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair286" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair286" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__1_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__1_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__1 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[5]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair285" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__1 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair285" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1__1 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(Q[1]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1__1_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn__parameterized6
   (D,
    Q,
    \reg_out_i_reg[2] ,
    E,
    src_in_bin,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] ,
    ram_empty_i,
    rd_en,
    \count_value_i_reg[0]_0 ,
    \grdc.rd_data_count_i_reg[4] ,
    \grdc.rd_data_count_i_reg[4]_0 ,
    \grdc.rd_data_count_i_reg[4]_1 ,
    \src_gray_ff_reg[4] ,
    \count_value_i_reg[4]_0 ,
    rd_clk);
  output [1:0]D;
  output [3:0]Q;
  output [1:0]\reg_out_i_reg[2] ;
  output [0:0]E;
  output [3:0]src_in_bin;
  input [3:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] ;
  input ram_empty_i;
  input rd_en;
  input [1:0]\count_value_i_reg[0]_0 ;
  input \grdc.rd_data_count_i_reg[4] ;
  input [3:0]\grdc.rd_data_count_i_reg[4]_0 ;
  input \grdc.rd_data_count_i_reg[4]_1 ;
  input [1:0]\src_gray_ff_reg[4] ;
  input \count_value_i_reg[4]_0 ;
  input rd_clk;

  wire [1:0]D;
  wire [0:0]E;
  wire [3:0]Q;
  wire \count_value_i[0]_i_1__4_n_0 ;
  wire \count_value_i[1]_i_1__4_n_0 ;
  wire \count_value_i[2]_i_1__3_n_0 ;
  wire \count_value_i[3]_i_1__3_n_0 ;
  wire \count_value_i[4]_i_1__0_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \count_value_i_reg[4]_0 ;
  wire \count_value_i_reg_n_0_[4] ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_3_n_0 ;
  wire [3:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] ;
  wire \grdc.rd_data_count_i[4]_i_3_n_0 ;
  wire \grdc.rd_data_count_i[4]_i_6_n_0 ;
  wire \grdc.rd_data_count_i_reg[4] ;
  wire [3:0]\grdc.rd_data_count_i_reg[4]_0 ;
  wire \grdc.rd_data_count_i_reg[4]_1 ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [1:0]\reg_out_i_reg[2] ;
  wire [1:0]\src_gray_ff_reg[4] ;
  wire [3:0]src_in_bin;

  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT4 #(
    .INIT(16'h10EF)) 
    \count_value_i[0]_i_1__4 
       (.I0(rd_en),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(Q[0]),
        .O(\count_value_i[0]_i_1__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__4 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__3 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(\count_value_i_reg_n_0_[4] ),
        .O(\count_value_i[4]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__4_n_0 ),
        .Q(Q[0]),
        .R(\count_value_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__4_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__3_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__3_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1__0_n_0 ),
        .Q(\count_value_i_reg_n_0_[4] ),
        .R(\count_value_i_reg[4]_0 ));
  LUT6 #(
    .INIT(64'hFFFFEAFE00001501)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_1 
       (.I0(Q[3]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6_n_0 ),
        .I2(Q[1]),
        .I3(\src_gray_ff_reg[4] [1]),
        .I4(Q[2]),
        .I5(\count_value_i_reg_n_0_[4] ),
        .O(src_in_bin[3]));
  LUT6 #(
    .INIT(64'hFBFBBAFB04044504)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2 
       (.I0(Q[2]),
        .I1(\src_gray_ff_reg[4] [1]),
        .I2(Q[1]),
        .I3(\src_gray_ff_reg[4] [0]),
        .I4(Q[0]),
        .I5(Q[3]),
        .O(src_in_bin[2]));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT5 #(
    .INIT(32'hB0FB4F04)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[4] [0]),
        .I2(Q[1]),
        .I3(\src_gray_ff_reg[4] [1]),
        .I4(Q[2]),
        .O(src_in_bin[1]));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_5 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[4] [0]),
        .O(src_in_bin[0]));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[4] [0]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6_n_0 ));
  LUT5 #(
    .INIT(32'h718E8E71)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[2]_i_1 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2_n_0 ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [1]),
        .I2(Q[1]),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [2]),
        .I4(Q[2]),
        .O(D[0]));
  LUT6 #(
    .INIT(64'h2BFF002BD400FFD4)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_1 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [1]),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [2]),
        .I4(Q[2]),
        .I5(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_3_n_0 ),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hDDDFDDDD44454444)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2 
       (.I0(Q[0]),
        .I1(ram_empty_i),
        .I2(rd_en),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(\count_value_i_reg[0]_0 [1]),
        .I5(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [0]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_3 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [3]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h00FD)) 
    \gen_sdpram.xpm_memory_base_inst_i_2 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .O(E));
  LUT6 #(
    .INIT(64'h1EE1788787781EE1)) 
    \grdc.rd_data_count_i[3]_i_1 
       (.I0(\grdc.rd_data_count_i_reg[4] ),
        .I1(\grdc.rd_data_count_i[4]_i_3_n_0 ),
        .I2(\grdc.rd_data_count_i_reg[4]_0 [2]),
        .I3(Q[3]),
        .I4(\grdc.rd_data_count_i_reg[4]_0 [1]),
        .I5(Q[2]),
        .O(\reg_out_i_reg[2] [0]));
  LUT6 #(
    .INIT(64'h1701FF7FE8FE0080)) 
    \grdc.rd_data_count_i[4]_i_2 
       (.I0(\grdc.rd_data_count_i[4]_i_3_n_0 ),
        .I1(\grdc.rd_data_count_i_reg[4] ),
        .I2(\grdc.rd_data_count_i_reg[4]_0 [1]),
        .I3(Q[2]),
        .I4(\grdc.rd_data_count_i_reg[4]_1 ),
        .I5(\grdc.rd_data_count_i[4]_i_6_n_0 ),
        .O(\reg_out_i_reg[2] [1]));
  LUT3 #(
    .INIT(8'hD4)) 
    \grdc.rd_data_count_i[4]_i_3 
       (.I0(Q[1]),
        .I1(\src_gray_ff_reg[4] [1]),
        .I2(\grdc.rd_data_count_i_reg[4]_0 [0]),
        .O(\grdc.rd_data_count_i[4]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[4]_i_6 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[4]_0 [2]),
        .I2(\count_value_i_reg_n_0_[4] ),
        .I3(\grdc.rd_data_count_i_reg[4]_0 [3]),
        .O(\grdc.rd_data_count_i[4]_i_6_n_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn__parameterized6_52
   (D,
    Q,
    \gwdc.wr_data_count_i_reg[2] ,
    wrst_busy,
    E,
    wr_clk);
  output [0:0]D;
  output [4:0]Q;
  input [2:0]\gwdc.wr_data_count_i_reg[2] ;
  input wrst_busy;
  input [0:0]E;
  input wr_clk;

  wire [0:0]D;
  wire [0:0]E;
  wire [4:0]Q;
  wire \count_value_i[0]_i_1__1_n_0 ;
  wire \count_value_i[1]_i_1__1_n_0 ;
  wire \count_value_i[2]_i_1__1_n_0 ;
  wire \count_value_i[3]_i_1__1_n_0 ;
  wire \count_value_i[4]_i_1_n_0 ;
  wire [2:0]\gwdc.wr_data_count_i_reg[2] ;
  wire wr_clk;
  wire wrst_busy;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__1_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  LUT6 #(
    .INIT(64'h4F04B0FBB0FB4F04)) 
    \gwdc.wr_data_count_i[2]_i_1 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[2] [0]),
        .I2(Q[1]),
        .I3(\gwdc.wr_data_count_i_reg[2] [1]),
        .I4(\gwdc.wr_data_count_i_reg[2] [2]),
        .I5(Q[2]),
        .O(D));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn__parameterized6_59
   (D,
    Q,
    \reg_out_i_reg[2] ,
    E,
    src_in_bin,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] ,
    ram_empty_i,
    rd_en,
    \count_value_i_reg[0]_0 ,
    \grdc.rd_data_count_i_reg[4] ,
    \grdc.rd_data_count_i_reg[4]_0 ,
    \grdc.rd_data_count_i_reg[4]_1 ,
    \src_gray_ff_reg[4] ,
    \count_value_i_reg[4]_0 ,
    rd_clk);
  output [1:0]D;
  output [3:0]Q;
  output [1:0]\reg_out_i_reg[2] ;
  output [0:0]E;
  output [3:0]src_in_bin;
  input [3:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] ;
  input ram_empty_i;
  input rd_en;
  input [1:0]\count_value_i_reg[0]_0 ;
  input \grdc.rd_data_count_i_reg[4] ;
  input [3:0]\grdc.rd_data_count_i_reg[4]_0 ;
  input \grdc.rd_data_count_i_reg[4]_1 ;
  input [1:0]\src_gray_ff_reg[4] ;
  input \count_value_i_reg[4]_0 ;
  input rd_clk;

  wire [1:0]D;
  wire [0:0]E;
  wire [3:0]Q;
  wire \count_value_i[0]_i_1__4_n_0 ;
  wire \count_value_i[1]_i_1__4_n_0 ;
  wire \count_value_i[2]_i_1__3_n_0 ;
  wire \count_value_i[3]_i_1__3_n_0 ;
  wire \count_value_i[4]_i_1__0_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \count_value_i_reg[4]_0 ;
  wire \count_value_i_reg_n_0_[4] ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_3_n_0 ;
  wire [3:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] ;
  wire \grdc.rd_data_count_i[4]_i_3_n_0 ;
  wire \grdc.rd_data_count_i[4]_i_6_n_0 ;
  wire \grdc.rd_data_count_i_reg[4] ;
  wire [3:0]\grdc.rd_data_count_i_reg[4]_0 ;
  wire \grdc.rd_data_count_i_reg[4]_1 ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [1:0]\reg_out_i_reg[2] ;
  wire [1:0]\src_gray_ff_reg[4] ;
  wire [3:0]src_in_bin;

  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT4 #(
    .INIT(16'h10EF)) 
    \count_value_i[0]_i_1__4 
       (.I0(rd_en),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(Q[0]),
        .O(\count_value_i[0]_i_1__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__4 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__3 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(\count_value_i_reg_n_0_[4] ),
        .O(\count_value_i[4]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__4_n_0 ),
        .Q(Q[0]),
        .R(\count_value_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__4_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__3_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__3_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1__0_n_0 ),
        .Q(\count_value_i_reg_n_0_[4] ),
        .R(\count_value_i_reg[4]_0 ));
  LUT6 #(
    .INIT(64'hFFFFEAFE00001501)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_1 
       (.I0(Q[3]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6_n_0 ),
        .I2(Q[1]),
        .I3(\src_gray_ff_reg[4] [1]),
        .I4(Q[2]),
        .I5(\count_value_i_reg_n_0_[4] ),
        .O(src_in_bin[3]));
  LUT6 #(
    .INIT(64'hFBFBBAFB04044504)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2 
       (.I0(Q[2]),
        .I1(\src_gray_ff_reg[4] [1]),
        .I2(Q[1]),
        .I3(\src_gray_ff_reg[4] [0]),
        .I4(Q[0]),
        .I5(Q[3]),
        .O(src_in_bin[2]));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT5 #(
    .INIT(32'hB0FB4F04)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[4] [0]),
        .I2(Q[1]),
        .I3(\src_gray_ff_reg[4] [1]),
        .I4(Q[2]),
        .O(src_in_bin[1]));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_5 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[4] [0]),
        .O(src_in_bin[0]));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[4] [0]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6_n_0 ));
  LUT5 #(
    .INIT(32'h718E8E71)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[2]_i_1 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2_n_0 ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [1]),
        .I2(Q[1]),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [2]),
        .I4(Q[2]),
        .O(D[0]));
  LUT6 #(
    .INIT(64'h2BFF002BD400FFD4)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_1 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [1]),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [2]),
        .I4(Q[2]),
        .I5(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_3_n_0 ),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hDDDFDDDD44454444)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2 
       (.I0(Q[0]),
        .I1(ram_empty_i),
        .I2(rd_en),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(\count_value_i_reg[0]_0 [1]),
        .I5(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [0]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_3 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [3]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h00FD)) 
    \gen_sdpram.xpm_memory_base_inst_i_2 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .O(E));
  LUT6 #(
    .INIT(64'h1EE1788787781EE1)) 
    \grdc.rd_data_count_i[3]_i_1 
       (.I0(\grdc.rd_data_count_i_reg[4] ),
        .I1(\grdc.rd_data_count_i[4]_i_3_n_0 ),
        .I2(\grdc.rd_data_count_i_reg[4]_0 [2]),
        .I3(Q[3]),
        .I4(\grdc.rd_data_count_i_reg[4]_0 [1]),
        .I5(Q[2]),
        .O(\reg_out_i_reg[2] [0]));
  LUT6 #(
    .INIT(64'h1701FF7FE8FE0080)) 
    \grdc.rd_data_count_i[4]_i_2 
       (.I0(\grdc.rd_data_count_i[4]_i_3_n_0 ),
        .I1(\grdc.rd_data_count_i_reg[4] ),
        .I2(\grdc.rd_data_count_i_reg[4]_0 [1]),
        .I3(Q[2]),
        .I4(\grdc.rd_data_count_i_reg[4]_1 ),
        .I5(\grdc.rd_data_count_i[4]_i_6_n_0 ),
        .O(\reg_out_i_reg[2] [1]));
  LUT3 #(
    .INIT(8'hD4)) 
    \grdc.rd_data_count_i[4]_i_3 
       (.I0(Q[1]),
        .I1(\src_gray_ff_reg[4] [1]),
        .I2(\grdc.rd_data_count_i_reg[4]_0 [0]),
        .O(\grdc.rd_data_count_i[4]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[4]_i_6 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[4]_0 [2]),
        .I2(\count_value_i_reg_n_0_[4] ),
        .I3(\grdc.rd_data_count_i_reg[4]_0 [3]),
        .O(\grdc.rd_data_count_i[4]_i_6_n_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn__parameterized6_62
   (D,
    Q,
    \gwdc.wr_data_count_i_reg[2] ,
    wrst_busy,
    E,
    wr_clk);
  output [0:0]D;
  output [4:0]Q;
  input [2:0]\gwdc.wr_data_count_i_reg[2] ;
  input wrst_busy;
  input [0:0]E;
  input wr_clk;

  wire [0:0]D;
  wire [0:0]E;
  wire [4:0]Q;
  wire \count_value_i[0]_i_1__1_n_0 ;
  wire \count_value_i[1]_i_1__1_n_0 ;
  wire \count_value_i[2]_i_1__1_n_0 ;
  wire \count_value_i[3]_i_1__1_n_0 ;
  wire \count_value_i[4]_i_1_n_0 ;
  wire [2:0]\gwdc.wr_data_count_i_reg[2] ;
  wire wr_clk;
  wire wrst_busy;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__1_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  LUT6 #(
    .INIT(64'h4F04B0FBB0FB4F04)) 
    \gwdc.wr_data_count_i[2]_i_1 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[2] [0]),
        .I2(Q[1]),
        .I3(\gwdc.wr_data_count_i_reg[2] [1]),
        .I4(\gwdc.wr_data_count_i_reg[2] [2]),
        .I5(Q[2]),
        .O(D));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn__parameterized7
   (Q,
    \count_value_i_reg[1]_0 ,
    rd_en,
    \count_value_i_reg[0]_0 ,
    E,
    rd_clk);
  output [3:0]Q;
  input [1:0]\count_value_i_reg[1]_0 ;
  input rd_en;
  input \count_value_i_reg[0]_0 ;
  input [0:0]E;
  input rd_clk;

  wire [0:0]E;
  wire [3:0]Q;
  wire \count_value_i[0]_i_1__2_n_0 ;
  wire \count_value_i[1]_i_1__3_n_0 ;
  wire \count_value_i[2]_i_1__2_n_0 ;
  wire \count_value_i[3]_i_1__2_n_0 ;
  wire \count_value_i_reg[0]_0 ;
  wire [1:0]\count_value_i_reg[1]_0 ;
  wire rd_clk;
  wire rd_en;

  LUT4 #(
    .INIT(16'h10EF)) 
    \count_value_i[0]_i_1__2 
       (.I0(rd_en),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(\count_value_i_reg[1]_0 [1]),
        .I3(Q[0]),
        .O(\count_value_i[0]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__3 
       (.I0(\count_value_i_reg[1]_0 [1]),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__2 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__2_n_0 ),
        .Q(Q[0]),
        .S(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__3_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__2_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__2_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn__parameterized7_53
   (D,
    Q,
    \count_value_i_reg[3]_0 ,
    E,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ,
    wrst_busy,
    wr_clk);
  output [0:0]D;
  output [2:0]Q;
  output \count_value_i_reg[3]_0 ;
  input [0:0]E;
  input [2:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ;
  input wrst_busy;
  input wr_clk;

  wire [0:0]D;
  wire [0:0]E;
  wire [2:0]Q;
  wire \count_value_i[0]_i_1__0_n_0 ;
  wire \count_value_i[1]_i_1__0_n_0 ;
  wire \count_value_i[2]_i_1__0_n_0 ;
  wire \count_value_i[3]_i_1__0_n_0 ;
  wire \count_value_i_reg[3]_0 ;
  wire [2:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ;
  wire wr_clk;
  wire [4:4]wr_pntr_plus1_pf;
  wire wrst_busy;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__0 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(wr_pntr_plus1_pf),
        .O(\count_value_i[3]_i_1__0_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__0_n_0 ),
        .Q(Q[0]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__0_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__0_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__0_n_0 ),
        .Q(wr_pntr_plus1_pf),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2 
       (.I0(wr_pntr_plus1_pf),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [2]),
        .O(\count_value_i_reg[3]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT5 #(
    .INIT(32'h718E8E71)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[2]_i_1 
       (.I0(E),
        .I1(Q[0]),
        .I2(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [0]),
        .I3(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [1]),
        .I4(Q[1]),
        .O(D));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn__parameterized7_60
   (Q,
    \count_value_i_reg[1]_0 ,
    rd_en,
    \count_value_i_reg[0]_0 ,
    E,
    rd_clk);
  output [3:0]Q;
  input [1:0]\count_value_i_reg[1]_0 ;
  input rd_en;
  input \count_value_i_reg[0]_0 ;
  input [0:0]E;
  input rd_clk;

  wire [0:0]E;
  wire [3:0]Q;
  wire \count_value_i[0]_i_1__2_n_0 ;
  wire \count_value_i[1]_i_1__3_n_0 ;
  wire \count_value_i[2]_i_1__2_n_0 ;
  wire \count_value_i[3]_i_1__2_n_0 ;
  wire \count_value_i_reg[0]_0 ;
  wire [1:0]\count_value_i_reg[1]_0 ;
  wire rd_clk;
  wire rd_en;

  LUT4 #(
    .INIT(16'h10EF)) 
    \count_value_i[0]_i_1__2 
       (.I0(rd_en),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(\count_value_i_reg[1]_0 [1]),
        .I3(Q[0]),
        .O(\count_value_i[0]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__3 
       (.I0(\count_value_i_reg[1]_0 [1]),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__2 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__2_n_0 ),
        .Q(Q[0]),
        .S(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__3_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__2_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__2_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn__parameterized7_63
   (D,
    Q,
    \count_value_i_reg[3]_0 ,
    E,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ,
    wrst_busy,
    wr_clk);
  output [0:0]D;
  output [2:0]Q;
  output \count_value_i_reg[3]_0 ;
  input [0:0]E;
  input [2:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ;
  input wrst_busy;
  input wr_clk;

  wire [0:0]D;
  wire [0:0]E;
  wire [2:0]Q;
  wire \count_value_i[0]_i_1__0_n_0 ;
  wire \count_value_i[1]_i_1__0_n_0 ;
  wire \count_value_i[2]_i_1__0_n_0 ;
  wire \count_value_i[3]_i_1__0_n_0 ;
  wire \count_value_i_reg[3]_0 ;
  wire [2:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ;
  wire wr_clk;
  wire [4:4]wr_pntr_plus1_pf;
  wire wrst_busy;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__0 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(wr_pntr_plus1_pf),
        .O(\count_value_i[3]_i_1__0_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__0_n_0 ),
        .Q(Q[0]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__0_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__0_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__0_n_0 ),
        .Q(wr_pntr_plus1_pf),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2 
       (.I0(wr_pntr_plus1_pf),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [2]),
        .O(\count_value_i_reg[3]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT5 #(
    .INIT(32'h718E8E71)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[2]_i_1 
       (.I0(E),
        .I1(Q[0]),
        .I2(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [0]),
        .I3(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [1]),
        .I4(Q[1]),
        .O(D));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn__parameterized8
   (\count_value_i_reg[3]_0 ,
    \count_value_i_reg[2]_0 ,
    Q,
    wrst_busy,
    E,
    wr_clk);
  output \count_value_i_reg[3]_0 ;
  output [2:0]\count_value_i_reg[2]_0 ;
  input [0:0]Q;
  input wrst_busy;
  input [0:0]E;
  input wr_clk;

  wire [0:0]E;
  wire [0:0]Q;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[2]_i_1_n_0 ;
  wire \count_value_i[3]_i_1_n_0 ;
  wire [2:0]\count_value_i_reg[2]_0 ;
  wire \count_value_i_reg[3]_0 ;
  wire \count_value_i_reg_n_0_[3] ;
  wire wr_clk;
  wire wrst_busy;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1 
       (.I0(\count_value_i_reg[2]_0 [0]),
        .O(\count_value_i[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1 
       (.I0(\count_value_i_reg[2]_0 [0]),
        .I1(\count_value_i_reg[2]_0 [1]),
        .O(\count_value_i[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1 
       (.I0(\count_value_i_reg[2]_0 [0]),
        .I1(\count_value_i_reg[2]_0 [1]),
        .I2(\count_value_i_reg[2]_0 [2]),
        .O(\count_value_i[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1 
       (.I0(\count_value_i_reg[2]_0 [1]),
        .I1(\count_value_i_reg[2]_0 [0]),
        .I2(\count_value_i_reg[2]_0 [2]),
        .I3(\count_value_i_reg_n_0_[3] ),
        .O(\count_value_i[3]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(\count_value_i_reg[2]_0 [0]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(\count_value_i_reg[2]_0 [1]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1_n_0 ),
        .Q(\count_value_i_reg[2]_0 [2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1_n_0 ),
        .Q(\count_value_i_reg_n_0_[3] ),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5 
       (.I0(\count_value_i_reg_n_0_[3] ),
        .I1(Q),
        .O(\count_value_i_reg[3]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn__parameterized8_64
   (\count_value_i_reg[3]_0 ,
    \count_value_i_reg[2]_0 ,
    Q,
    wrst_busy,
    E,
    wr_clk);
  output \count_value_i_reg[3]_0 ;
  output [2:0]\count_value_i_reg[2]_0 ;
  input [0:0]Q;
  input wrst_busy;
  input [0:0]E;
  input wr_clk;

  wire [0:0]E;
  wire [0:0]Q;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[2]_i_1_n_0 ;
  wire \count_value_i[3]_i_1_n_0 ;
  wire [2:0]\count_value_i_reg[2]_0 ;
  wire \count_value_i_reg[3]_0 ;
  wire \count_value_i_reg_n_0_[3] ;
  wire wr_clk;
  wire wrst_busy;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1 
       (.I0(\count_value_i_reg[2]_0 [0]),
        .O(\count_value_i[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1 
       (.I0(\count_value_i_reg[2]_0 [0]),
        .I1(\count_value_i_reg[2]_0 [1]),
        .O(\count_value_i[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1 
       (.I0(\count_value_i_reg[2]_0 [0]),
        .I1(\count_value_i_reg[2]_0 [1]),
        .I2(\count_value_i_reg[2]_0 [2]),
        .O(\count_value_i[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1 
       (.I0(\count_value_i_reg[2]_0 [1]),
        .I1(\count_value_i_reg[2]_0 [0]),
        .I2(\count_value_i_reg[2]_0 [2]),
        .I3(\count_value_i_reg_n_0_[3] ),
        .O(\count_value_i[3]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(\count_value_i_reg[2]_0 [0]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(\count_value_i_reg[2]_0 [1]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1_n_0 ),
        .Q(\count_value_i_reg[2]_0 [2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1_n_0 ),
        .Q(\count_value_i_reg_n_0_[3] ),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5 
       (.I0(\count_value_i_reg_n_0_[3] ),
        .I1(Q),
        .O(\count_value_i_reg[3]_0 ));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_SYNC_STAGES = "3" *) (* DOUT_RESET_VALUE = "0" *) 
(* ECC_MODE = "no_ecc" *) (* EN_ADV_FEATURE_ASYNC = "16'b0000011100000111" *) (* FIFO_MEMORY_TYPE = "block" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_WRITE_DEPTH = "256" *) (* FULL_RESET_VALUE = "1" *) 
(* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "128" *) (* P_COMMON_CLOCK = "0" *) 
(* P_ECC_MODE = "0" *) (* P_FIFO_MEMORY_TYPE = "2" *) (* P_READ_MODE = "1" *) 
(* P_WAKEUP_TIME = "2" *) (* RD_DATA_COUNT_WIDTH = "8" *) (* READ_DATA_WIDTH = "45" *) 
(* READ_MODE = "fwft" *) (* RELATED_CLOCKS = "0" *) (* SIM_ASSERT_CHK = "0" *) 
(* USE_ADV_FEATURES = "0707" *) (* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH = "45" *) 
(* WR_DATA_COUNT_WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) (* dont_touch = "true" *) 
(* is_du_within_envelope = "true" *) 
module zynq_bd_C2C2_0_xpm_fifo_async
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [44:0]din;
  output full;
  output prog_full;
  output [7:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [44:0]dout;
  output empty;
  output prog_empty;
  output [7:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [44:0]din;
  wire [44:0]dout;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire prog_full;
  wire rd_clk;
  wire [7:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire sleep;
  wire underflow;
  wire wr_clk;
  wire [7:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* CASCADE_HEIGHT = "0" *) 
  (* CDC_DEST_SYNC_FF = "3" *) 
  (* COMMON_CLOCK = "0" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "0" *) 
  (* ENABLE_ECC = "0" *) 
  (* EN_ADV_FEATURE = "16'b0000011100000111" *) 
  (* EN_AE = "1'b0" *) 
  (* EN_AF = "1'b0" *) 
  (* EN_DVLD = "1'b0" *) 
  (* EN_OF = "1'b1" *) 
  (* EN_PE = "1'b1" *) 
  (* EN_PF = "1'b1" *) 
  (* EN_RDC = "1'b1" *) 
  (* EN_UF = "1'b1" *) 
  (* EN_WACK = "1'b0" *) 
  (* EN_WDC = "1'b1" *) 
  (* FG_EQ_ASYM_DOUT = "1'b0" *) 
  (* FIFO_MEMORY_TYPE = "2" *) 
  (* FIFO_MEM_TYPE = "2" *) 
  (* FIFO_READ_DEPTH = "256" *) 
  (* FIFO_READ_LATENCY = "0" *) 
  (* FIFO_SIZE = "11520" *) 
  (* FIFO_WRITE_DEPTH = "256" *) 
  (* FULL_RESET_VALUE = "1" *) 
  (* FULL_RST_VAL = "1'b1" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* PE_THRESH_ADJ = "8" *) 
  (* PE_THRESH_MAX = "251" *) 
  (* PE_THRESH_MIN = "5" *) 
  (* PF_THRESH_ADJ = "126" *) 
  (* PF_THRESH_MAX = "251" *) 
  (* PF_THRESH_MIN = "8" *) 
  (* PROG_EMPTY_THRESH = "10" *) 
  (* PROG_FULL_THRESH = "128" *) 
  (* RD_DATA_COUNT_WIDTH = "8" *) 
  (* RD_DC_WIDTH_EXT = "9" *) 
  (* RD_LATENCY = "2" *) 
  (* RD_MODE = "1" *) 
  (* RD_PNTR_WIDTH = "8" *) 
  (* READ_DATA_WIDTH = "45" *) 
  (* READ_MODE = "1" *) 
  (* READ_MODE_LL = "1" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WIDTH_RATIO = "1" *) 
  (* WRITE_DATA_WIDTH = "45" *) 
  (* WR_DATA_COUNT_WIDTH = "8" *) 
  (* WR_DC_WIDTH_EXT = "9" *) 
  (* WR_DEPTH_LOG = "8" *) 
  (* WR_PNTR_WIDTH = "8" *) 
  (* WR_RD_RATIO = "0" *) 
  (* WR_WIDTH_LOG = "6" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* both_stages_valid = "3" *) 
  (* invalid = "0" *) 
  (* stage1_valid = "2" *) 
  (* stage2_valid = "1" *) 
  zynq_bd_C2C2_0_xpm_fifo_base \gnuram_async_fifo.xpm_fifo_base_inst 
       (.almost_empty(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ),
        .almost_full(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ),
        .data_valid(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ),
        .dbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .full_n(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_full(prog_full),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .rst(rst),
        .sbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ),
        .sleep(sleep),
        .underflow(underflow),
        .wr_ack(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_SYNC_STAGES = "3" *) (* DOUT_RESET_VALUE = "0" *) 
(* ECC_MODE = "no_ecc" *) (* EN_ADV_FEATURE_ASYNC = "16'b0000011100000111" *) (* FIFO_MEMORY_TYPE = "block" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_WRITE_DEPTH = "512" *) (* FULL_RESET_VALUE = "1" *) 
(* ORIG_REF_NAME = "xpm_fifo_async" *) (* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "384" *) 
(* P_COMMON_CLOCK = "0" *) (* P_ECC_MODE = "0" *) (* P_FIFO_MEMORY_TYPE = "2" *) 
(* P_READ_MODE = "1" *) (* P_WAKEUP_TIME = "2" *) (* RD_DATA_COUNT_WIDTH = "9" *) 
(* READ_DATA_WIDTH = "38" *) (* READ_MODE = "fwft" *) (* RELATED_CLOCKS = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* WAKEUP_TIME = "0" *) 
(* WRITE_DATA_WIDTH = "38" *) (* WR_DATA_COUNT_WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* dont_touch = "true" *) (* is_du_within_envelope = "true" *) 
module zynq_bd_C2C2_0_xpm_fifo_async__parameterized0
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [37:0]din;
  output full;
  output prog_full;
  output [8:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [37:0]dout;
  output empty;
  output prog_empty;
  output [8:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [37:0]din;
  wire [37:1]\^dout ;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire prog_full;
  wire rd_clk;
  wire [8:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire sleep;
  wire underflow;
  wire wr_clk;
  wire [8:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ;
  wire [0:0]\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dout_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign dout[37:1] = \^dout [37:1];
  assign dout[0] = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* CASCADE_HEIGHT = "0" *) 
  (* CDC_DEST_SYNC_FF = "3" *) 
  (* COMMON_CLOCK = "0" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "0" *) 
  (* ENABLE_ECC = "0" *) 
  (* EN_ADV_FEATURE = "16'b0000011100000111" *) 
  (* EN_AE = "1'b0" *) 
  (* EN_AF = "1'b0" *) 
  (* EN_DVLD = "1'b0" *) 
  (* EN_OF = "1'b1" *) 
  (* EN_PE = "1'b1" *) 
  (* EN_PF = "1'b1" *) 
  (* EN_RDC = "1'b1" *) 
  (* EN_UF = "1'b1" *) 
  (* EN_WACK = "1'b0" *) 
  (* EN_WDC = "1'b1" *) 
  (* FG_EQ_ASYM_DOUT = "1'b0" *) 
  (* FIFO_MEMORY_TYPE = "2" *) 
  (* FIFO_MEM_TYPE = "2" *) 
  (* FIFO_READ_DEPTH = "512" *) 
  (* FIFO_READ_LATENCY = "0" *) 
  (* FIFO_SIZE = "19456" *) 
  (* FIFO_WRITE_DEPTH = "512" *) 
  (* FULL_RESET_VALUE = "1" *) 
  (* FULL_RST_VAL = "1'b1" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* PE_THRESH_ADJ = "8" *) 
  (* PE_THRESH_MAX = "507" *) 
  (* PE_THRESH_MIN = "5" *) 
  (* PF_THRESH_ADJ = "382" *) 
  (* PF_THRESH_MAX = "507" *) 
  (* PF_THRESH_MIN = "8" *) 
  (* PROG_EMPTY_THRESH = "10" *) 
  (* PROG_FULL_THRESH = "384" *) 
  (* RD_DATA_COUNT_WIDTH = "9" *) 
  (* RD_DC_WIDTH_EXT = "10" *) 
  (* RD_LATENCY = "2" *) 
  (* RD_MODE = "1" *) 
  (* RD_PNTR_WIDTH = "9" *) 
  (* READ_DATA_WIDTH = "38" *) 
  (* READ_MODE = "1" *) 
  (* READ_MODE_LL = "1" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WIDTH_RATIO = "1" *) 
  (* WRITE_DATA_WIDTH = "38" *) 
  (* WR_DATA_COUNT_WIDTH = "9" *) 
  (* WR_DC_WIDTH_EXT = "10" *) 
  (* WR_DEPTH_LOG = "9" *) 
  (* WR_PNTR_WIDTH = "9" *) 
  (* WR_RD_RATIO = "0" *) 
  (* WR_WIDTH_LOG = "6" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* both_stages_valid = "3" *) 
  (* invalid = "0" *) 
  (* stage1_valid = "2" *) 
  (* stage2_valid = "1" *) 
  zynq_bd_C2C2_0_xpm_fifo_base__parameterized0 \gnuram_async_fifo.xpm_fifo_base_inst 
       (.almost_empty(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ),
        .almost_full(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ),
        .data_valid(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ),
        .dbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ),
        .din({din[37:1],1'b0}),
        .dout({\^dout ,\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dout_UNCONNECTED [0]}),
        .empty(empty),
        .full(full),
        .full_n(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_full(prog_full),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .rst(rst),
        .sbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ),
        .sleep(sleep),
        .underflow(underflow),
        .wr_ack(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_SYNC_STAGES = "3" *) (* DOUT_RESET_VALUE = "0" *) 
(* ECC_MODE = "no_ecc" *) (* EN_ADV_FEATURE_ASYNC = "16'b0000011100000111" *) (* FIFO_MEMORY_TYPE = "block" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_WRITE_DEPTH = "512" *) (* FULL_RESET_VALUE = "1" *) 
(* ORIG_REF_NAME = "xpm_fifo_async" *) (* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "384" *) 
(* P_COMMON_CLOCK = "0" *) (* P_ECC_MODE = "0" *) (* P_FIFO_MEMORY_TYPE = "2" *) 
(* P_READ_MODE = "1" *) (* P_WAKEUP_TIME = "2" *) (* RD_DATA_COUNT_WIDTH = "9" *) 
(* READ_DATA_WIDTH = "36" *) (* READ_MODE = "fwft" *) (* RELATED_CLOCKS = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* WAKEUP_TIME = "0" *) 
(* WRITE_DATA_WIDTH = "36" *) (* WR_DATA_COUNT_WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* dont_touch = "true" *) (* is_du_within_envelope = "true" *) 
module zynq_bd_C2C2_0_xpm_fifo_async__parameterized1
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [35:0]din;
  output full;
  output prog_full;
  output [8:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [35:0]dout;
  output empty;
  output prog_empty;
  output [8:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [35:0]din;
  wire [35:0]dout;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire prog_full;
  wire rd_clk;
  wire [8:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire sleep;
  wire underflow;
  wire wr_clk;
  wire [8:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* CASCADE_HEIGHT = "0" *) 
  (* CDC_DEST_SYNC_FF = "3" *) 
  (* COMMON_CLOCK = "0" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "0" *) 
  (* ENABLE_ECC = "0" *) 
  (* EN_ADV_FEATURE = "16'b0000011100000111" *) 
  (* EN_AE = "1'b0" *) 
  (* EN_AF = "1'b0" *) 
  (* EN_DVLD = "1'b0" *) 
  (* EN_OF = "1'b1" *) 
  (* EN_PE = "1'b1" *) 
  (* EN_PF = "1'b1" *) 
  (* EN_RDC = "1'b1" *) 
  (* EN_UF = "1'b1" *) 
  (* EN_WACK = "1'b0" *) 
  (* EN_WDC = "1'b1" *) 
  (* FG_EQ_ASYM_DOUT = "1'b0" *) 
  (* FIFO_MEMORY_TYPE = "2" *) 
  (* FIFO_MEM_TYPE = "2" *) 
  (* FIFO_READ_DEPTH = "512" *) 
  (* FIFO_READ_LATENCY = "0" *) 
  (* FIFO_SIZE = "18432" *) 
  (* FIFO_WRITE_DEPTH = "512" *) 
  (* FULL_RESET_VALUE = "1" *) 
  (* FULL_RST_VAL = "1'b1" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* PE_THRESH_ADJ = "8" *) 
  (* PE_THRESH_MAX = "507" *) 
  (* PE_THRESH_MIN = "5" *) 
  (* PF_THRESH_ADJ = "382" *) 
  (* PF_THRESH_MAX = "507" *) 
  (* PF_THRESH_MIN = "8" *) 
  (* PROG_EMPTY_THRESH = "10" *) 
  (* PROG_FULL_THRESH = "384" *) 
  (* RD_DATA_COUNT_WIDTH = "9" *) 
  (* RD_DC_WIDTH_EXT = "10" *) 
  (* RD_LATENCY = "2" *) 
  (* RD_MODE = "1" *) 
  (* RD_PNTR_WIDTH = "9" *) 
  (* READ_DATA_WIDTH = "36" *) 
  (* READ_MODE = "1" *) 
  (* READ_MODE_LL = "1" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WIDTH_RATIO = "1" *) 
  (* WRITE_DATA_WIDTH = "36" *) 
  (* WR_DATA_COUNT_WIDTH = "9" *) 
  (* WR_DC_WIDTH_EXT = "10" *) 
  (* WR_DEPTH_LOG = "9" *) 
  (* WR_PNTR_WIDTH = "9" *) 
  (* WR_RD_RATIO = "0" *) 
  (* WR_WIDTH_LOG = "6" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* both_stages_valid = "3" *) 
  (* invalid = "0" *) 
  (* stage1_valid = "2" *) 
  (* stage2_valid = "1" *) 
  zynq_bd_C2C2_0_xpm_fifo_base__parameterized1 \gnuram_async_fifo.xpm_fifo_base_inst 
       (.almost_empty(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ),
        .almost_full(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ),
        .data_valid(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ),
        .dbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .full_n(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_full(prog_full),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .rst(rst),
        .sbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ),
        .sleep(sleep),
        .underflow(underflow),
        .wr_ack(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_SYNC_STAGES = "3" *) (* DOUT_RESET_VALUE = "0" *) 
(* ECC_MODE = "no_ecc" *) (* EN_ADV_FEATURE_ASYNC = "16'b0000011100000111" *) (* FIFO_MEMORY_TYPE = "distributed" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_WRITE_DEPTH = "256" *) (* FULL_RESET_VALUE = "1" *) 
(* ORIG_REF_NAME = "xpm_fifo_async" *) (* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "128" *) 
(* P_COMMON_CLOCK = "0" *) (* P_ECC_MODE = "0" *) (* P_FIFO_MEMORY_TYPE = "1" *) 
(* P_READ_MODE = "1" *) (* P_WAKEUP_TIME = "2" *) (* RD_DATA_COUNT_WIDTH = "8" *) 
(* READ_DATA_WIDTH = "3" *) (* READ_MODE = "fwft" *) (* RELATED_CLOCKS = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* WAKEUP_TIME = "0" *) 
(* WRITE_DATA_WIDTH = "3" *) (* WR_DATA_COUNT_WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) 
(* dont_touch = "true" *) (* is_du_within_envelope = "true" *) 
module zynq_bd_C2C2_0_xpm_fifo_async__parameterized2
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [2:0]din;
  output full;
  output prog_full;
  output [7:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [2:0]dout;
  output empty;
  output prog_empty;
  output [7:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [2:0]din;
  wire [2:0]dout;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire prog_full;
  wire rd_clk;
  wire [7:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire sleep;
  wire underflow;
  wire wr_clk;
  wire [7:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* CASCADE_HEIGHT = "0" *) 
  (* CDC_DEST_SYNC_FF = "3" *) 
  (* COMMON_CLOCK = "0" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "0" *) 
  (* ENABLE_ECC = "0" *) 
  (* EN_ADV_FEATURE = "16'b0000011100000111" *) 
  (* EN_AE = "1'b0" *) 
  (* EN_AF = "1'b0" *) 
  (* EN_DVLD = "1'b0" *) 
  (* EN_OF = "1'b1" *) 
  (* EN_PE = "1'b1" *) 
  (* EN_PF = "1'b1" *) 
  (* EN_RDC = "1'b1" *) 
  (* EN_UF = "1'b1" *) 
  (* EN_WACK = "1'b0" *) 
  (* EN_WDC = "1'b1" *) 
  (* FG_EQ_ASYM_DOUT = "1'b0" *) 
  (* FIFO_MEMORY_TYPE = "1" *) 
  (* FIFO_MEM_TYPE = "1" *) 
  (* FIFO_READ_DEPTH = "256" *) 
  (* FIFO_READ_LATENCY = "0" *) 
  (* FIFO_SIZE = "768" *) 
  (* FIFO_WRITE_DEPTH = "256" *) 
  (* FULL_RESET_VALUE = "1" *) 
  (* FULL_RST_VAL = "1'b1" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* PE_THRESH_ADJ = "8" *) 
  (* PE_THRESH_MAX = "251" *) 
  (* PE_THRESH_MIN = "5" *) 
  (* PF_THRESH_ADJ = "126" *) 
  (* PF_THRESH_MAX = "251" *) 
  (* PF_THRESH_MIN = "8" *) 
  (* PROG_EMPTY_THRESH = "10" *) 
  (* PROG_FULL_THRESH = "128" *) 
  (* RD_DATA_COUNT_WIDTH = "8" *) 
  (* RD_DC_WIDTH_EXT = "9" *) 
  (* RD_LATENCY = "2" *) 
  (* RD_MODE = "1" *) 
  (* RD_PNTR_WIDTH = "8" *) 
  (* READ_DATA_WIDTH = "3" *) 
  (* READ_MODE = "1" *) 
  (* READ_MODE_LL = "1" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WIDTH_RATIO = "1" *) 
  (* WRITE_DATA_WIDTH = "3" *) 
  (* WR_DATA_COUNT_WIDTH = "8" *) 
  (* WR_DC_WIDTH_EXT = "9" *) 
  (* WR_DEPTH_LOG = "8" *) 
  (* WR_PNTR_WIDTH = "8" *) 
  (* WR_RD_RATIO = "0" *) 
  (* WR_WIDTH_LOG = "2" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* both_stages_valid = "3" *) 
  (* invalid = "0" *) 
  (* stage1_valid = "2" *) 
  (* stage2_valid = "1" *) 
  zynq_bd_C2C2_0_xpm_fifo_base__parameterized2 \gnuram_async_fifo.xpm_fifo_base_inst 
       (.almost_empty(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ),
        .almost_full(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ),
        .data_valid(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ),
        .dbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .full_n(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_full(prog_full),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .rst(rst),
        .sbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ),
        .sleep(sleep),
        .underflow(underflow),
        .wr_ack(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_SYNC_STAGES = "3" *) (* DOUT_RESET_VALUE = "0" *) 
(* ECC_MODE = "no_ecc" *) (* EN_ADV_FEATURE_ASYNC = "16'b0000011100000111" *) (* FIFO_MEMORY_TYPE = "distributed" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_WRITE_DEPTH = "16" *) (* FULL_RESET_VALUE = "1" *) 
(* ORIG_REF_NAME = "xpm_fifo_async" *) (* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "11" *) 
(* P_COMMON_CLOCK = "0" *) (* P_ECC_MODE = "0" *) (* P_FIFO_MEMORY_TYPE = "1" *) 
(* P_READ_MODE = "1" *) (* P_WAKEUP_TIME = "2" *) (* RD_DATA_COUNT_WIDTH = "4" *) 
(* READ_DATA_WIDTH = "20" *) (* READ_MODE = "fwft" *) (* RELATED_CLOCKS = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* WAKEUP_TIME = "0" *) 
(* WRITE_DATA_WIDTH = "20" *) (* WR_DATA_COUNT_WIDTH = "4" *) (* XPM_MODULE = "TRUE" *) 
(* dont_touch = "true" *) (* is_du_within_envelope = "true" *) 
module zynq_bd_C2C2_0_xpm_fifo_async__parameterized3
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [19:0]din;
  output full;
  output prog_full;
  output [3:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [19:0]dout;
  output empty;
  output prog_empty;
  output [3:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [19:0]din;
  wire [19:0]dout;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire prog_full;
  wire rd_clk;
  wire [3:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire sleep;
  wire underflow;
  wire wr_clk;
  wire [3:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* CASCADE_HEIGHT = "0" *) 
  (* CDC_DEST_SYNC_FF = "3" *) 
  (* COMMON_CLOCK = "0" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "0" *) 
  (* ENABLE_ECC = "0" *) 
  (* EN_ADV_FEATURE = "16'b0000011100000111" *) 
  (* EN_AE = "1'b0" *) 
  (* EN_AF = "1'b0" *) 
  (* EN_DVLD = "1'b0" *) 
  (* EN_OF = "1'b1" *) 
  (* EN_PE = "1'b1" *) 
  (* EN_PF = "1'b1" *) 
  (* EN_RDC = "1'b1" *) 
  (* EN_UF = "1'b1" *) 
  (* EN_WACK = "1'b0" *) 
  (* EN_WDC = "1'b1" *) 
  (* FG_EQ_ASYM_DOUT = "1'b0" *) 
  (* FIFO_MEMORY_TYPE = "1" *) 
  (* FIFO_MEM_TYPE = "1" *) 
  (* FIFO_READ_DEPTH = "16" *) 
  (* FIFO_READ_LATENCY = "0" *) 
  (* FIFO_SIZE = "320" *) 
  (* FIFO_WRITE_DEPTH = "16" *) 
  (* FULL_RESET_VALUE = "1" *) 
  (* FULL_RST_VAL = "1'b1" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* PE_THRESH_ADJ = "8" *) 
  (* PE_THRESH_MAX = "11" *) 
  (* PE_THRESH_MIN = "5" *) 
  (* PF_THRESH_ADJ = "9" *) 
  (* PF_THRESH_MAX = "11" *) 
  (* PF_THRESH_MIN = "8" *) 
  (* PROG_EMPTY_THRESH = "10" *) 
  (* PROG_FULL_THRESH = "11" *) 
  (* RD_DATA_COUNT_WIDTH = "4" *) 
  (* RD_DC_WIDTH_EXT = "5" *) 
  (* RD_LATENCY = "2" *) 
  (* RD_MODE = "1" *) 
  (* RD_PNTR_WIDTH = "4" *) 
  (* READ_DATA_WIDTH = "20" *) 
  (* READ_MODE = "1" *) 
  (* READ_MODE_LL = "1" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WIDTH_RATIO = "1" *) 
  (* WRITE_DATA_WIDTH = "20" *) 
  (* WR_DATA_COUNT_WIDTH = "4" *) 
  (* WR_DC_WIDTH_EXT = "5" *) 
  (* WR_DEPTH_LOG = "4" *) 
  (* WR_PNTR_WIDTH = "4" *) 
  (* WR_RD_RATIO = "0" *) 
  (* WR_WIDTH_LOG = "5" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* both_stages_valid = "3" *) 
  (* invalid = "0" *) 
  (* stage1_valid = "2" *) 
  (* stage2_valid = "1" *) 
  zynq_bd_C2C2_0_xpm_fifo_base__parameterized3 \gnuram_async_fifo.xpm_fifo_base_inst 
       (.almost_empty(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ),
        .almost_full(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ),
        .data_valid(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ),
        .dbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .full_n(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_full(prog_full),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .rst(rst),
        .sbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ),
        .sleep(sleep),
        .underflow(underflow),
        .wr_ack(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_SYNC_STAGES = "3" *) (* DOUT_RESET_VALUE = "0" *) 
(* ECC_MODE = "no_ecc" *) (* EN_ADV_FEATURE_ASYNC = "16'b0000011100000111" *) (* FIFO_MEMORY_TYPE = "distributed" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_WRITE_DEPTH = "16" *) (* FULL_RESET_VALUE = "1" *) 
(* ORIG_REF_NAME = "xpm_fifo_async" *) (* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "11" *) 
(* P_COMMON_CLOCK = "0" *) (* P_ECC_MODE = "0" *) (* P_FIFO_MEMORY_TYPE = "1" *) 
(* P_READ_MODE = "1" *) (* P_WAKEUP_TIME = "2" *) (* RD_DATA_COUNT_WIDTH = "4" *) 
(* READ_DATA_WIDTH = "20" *) (* READ_MODE = "fwft" *) (* RELATED_CLOCKS = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* WAKEUP_TIME = "0" *) 
(* WRITE_DATA_WIDTH = "20" *) (* WR_DATA_COUNT_WIDTH = "4" *) (* XPM_MODULE = "TRUE" *) 
(* dont_touch = "true" *) (* is_du_within_envelope = "true" *) 
module zynq_bd_C2C2_0_xpm_fifo_async__parameterized3__xdcDup__1
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [19:0]din;
  output full;
  output prog_full;
  output [3:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [19:0]dout;
  output empty;
  output prog_empty;
  output [3:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [19:0]din;
  wire [19:0]dout;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire prog_full;
  wire rd_clk;
  wire [3:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire sleep;
  wire underflow;
  wire wr_clk;
  wire [3:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* CASCADE_HEIGHT = "0" *) 
  (* CDC_DEST_SYNC_FF = "3" *) 
  (* COMMON_CLOCK = "0" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "0" *) 
  (* ENABLE_ECC = "0" *) 
  (* EN_ADV_FEATURE = "16'b0000011100000111" *) 
  (* EN_AE = "1'b0" *) 
  (* EN_AF = "1'b0" *) 
  (* EN_DVLD = "1'b0" *) 
  (* EN_OF = "1'b1" *) 
  (* EN_PE = "1'b1" *) 
  (* EN_PF = "1'b1" *) 
  (* EN_RDC = "1'b1" *) 
  (* EN_UF = "1'b1" *) 
  (* EN_WACK = "1'b0" *) 
  (* EN_WDC = "1'b1" *) 
  (* FG_EQ_ASYM_DOUT = "1'b0" *) 
  (* FIFO_MEMORY_TYPE = "1" *) 
  (* FIFO_MEM_TYPE = "1" *) 
  (* FIFO_READ_DEPTH = "16" *) 
  (* FIFO_READ_LATENCY = "0" *) 
  (* FIFO_SIZE = "320" *) 
  (* FIFO_WRITE_DEPTH = "16" *) 
  (* FULL_RESET_VALUE = "1" *) 
  (* FULL_RST_VAL = "1'b1" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* PE_THRESH_ADJ = "8" *) 
  (* PE_THRESH_MAX = "11" *) 
  (* PE_THRESH_MIN = "5" *) 
  (* PF_THRESH_ADJ = "9" *) 
  (* PF_THRESH_MAX = "11" *) 
  (* PF_THRESH_MIN = "8" *) 
  (* PROG_EMPTY_THRESH = "10" *) 
  (* PROG_FULL_THRESH = "11" *) 
  (* RD_DATA_COUNT_WIDTH = "4" *) 
  (* RD_DC_WIDTH_EXT = "5" *) 
  (* RD_LATENCY = "2" *) 
  (* RD_MODE = "1" *) 
  (* RD_PNTR_WIDTH = "4" *) 
  (* READ_DATA_WIDTH = "20" *) 
  (* READ_MODE = "1" *) 
  (* READ_MODE_LL = "1" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WIDTH_RATIO = "1" *) 
  (* WRITE_DATA_WIDTH = "20" *) 
  (* WR_DATA_COUNT_WIDTH = "4" *) 
  (* WR_DC_WIDTH_EXT = "5" *) 
  (* WR_DEPTH_LOG = "4" *) 
  (* WR_PNTR_WIDTH = "4" *) 
  (* WR_RD_RATIO = "0" *) 
  (* WR_WIDTH_LOG = "5" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* both_stages_valid = "3" *) 
  (* invalid = "0" *) 
  (* stage1_valid = "2" *) 
  (* stage2_valid = "1" *) 
  zynq_bd_C2C2_0_xpm_fifo_base__parameterized3__xdcDup__1 \gnuram_async_fifo.xpm_fifo_base_inst 
       (.almost_empty(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ),
        .almost_full(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ),
        .data_valid(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ),
        .dbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .full_n(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_full(prog_full),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .rst(rst),
        .sbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ),
        .sleep(sleep),
        .underflow(underflow),
        .wr_ack(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_SYNC_STAGES = "3" *) (* DOUT_RESET_VALUE = "0" *) 
(* ECC_MODE = "no_ecc" *) (* EN_ADV_FEATURE_ASYNC = "16'b0000011100000111" *) (* FIFO_MEMORY_TYPE = "block" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_WRITE_DEPTH = "256" *) (* FULL_RESET_VALUE = "1" *) 
(* ORIG_REF_NAME = "xpm_fifo_async" *) (* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "128" *) 
(* P_COMMON_CLOCK = "0" *) (* P_ECC_MODE = "0" *) (* P_FIFO_MEMORY_TYPE = "2" *) 
(* P_READ_MODE = "1" *) (* P_WAKEUP_TIME = "2" *) (* RD_DATA_COUNT_WIDTH = "8" *) 
(* READ_DATA_WIDTH = "45" *) (* READ_MODE = "fwft" *) (* RELATED_CLOCKS = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* WAKEUP_TIME = "0" *) 
(* WRITE_DATA_WIDTH = "45" *) (* WR_DATA_COUNT_WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) 
(* dont_touch = "true" *) (* is_du_within_envelope = "true" *) 
module zynq_bd_C2C2_0_xpm_fifo_async__xdcDup__1
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [44:0]din;
  output full;
  output prog_full;
  output [7:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [44:0]dout;
  output empty;
  output prog_empty;
  output [7:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [44:0]din;
  wire [44:0]dout;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire prog_full;
  wire rd_clk;
  wire [7:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire sleep;
  wire underflow;
  wire wr_clk;
  wire [7:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* CASCADE_HEIGHT = "0" *) 
  (* CDC_DEST_SYNC_FF = "3" *) 
  (* COMMON_CLOCK = "0" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "0" *) 
  (* ENABLE_ECC = "0" *) 
  (* EN_ADV_FEATURE = "16'b0000011100000111" *) 
  (* EN_AE = "1'b0" *) 
  (* EN_AF = "1'b0" *) 
  (* EN_DVLD = "1'b0" *) 
  (* EN_OF = "1'b1" *) 
  (* EN_PE = "1'b1" *) 
  (* EN_PF = "1'b1" *) 
  (* EN_RDC = "1'b1" *) 
  (* EN_UF = "1'b1" *) 
  (* EN_WACK = "1'b0" *) 
  (* EN_WDC = "1'b1" *) 
  (* FG_EQ_ASYM_DOUT = "1'b0" *) 
  (* FIFO_MEMORY_TYPE = "2" *) 
  (* FIFO_MEM_TYPE = "2" *) 
  (* FIFO_READ_DEPTH = "256" *) 
  (* FIFO_READ_LATENCY = "0" *) 
  (* FIFO_SIZE = "11520" *) 
  (* FIFO_WRITE_DEPTH = "256" *) 
  (* FULL_RESET_VALUE = "1" *) 
  (* FULL_RST_VAL = "1'b1" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* PE_THRESH_ADJ = "8" *) 
  (* PE_THRESH_MAX = "251" *) 
  (* PE_THRESH_MIN = "5" *) 
  (* PF_THRESH_ADJ = "126" *) 
  (* PF_THRESH_MAX = "251" *) 
  (* PF_THRESH_MIN = "8" *) 
  (* PROG_EMPTY_THRESH = "10" *) 
  (* PROG_FULL_THRESH = "128" *) 
  (* RD_DATA_COUNT_WIDTH = "8" *) 
  (* RD_DC_WIDTH_EXT = "9" *) 
  (* RD_LATENCY = "2" *) 
  (* RD_MODE = "1" *) 
  (* RD_PNTR_WIDTH = "8" *) 
  (* READ_DATA_WIDTH = "45" *) 
  (* READ_MODE = "1" *) 
  (* READ_MODE_LL = "1" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WIDTH_RATIO = "1" *) 
  (* WRITE_DATA_WIDTH = "45" *) 
  (* WR_DATA_COUNT_WIDTH = "8" *) 
  (* WR_DC_WIDTH_EXT = "9" *) 
  (* WR_DEPTH_LOG = "8" *) 
  (* WR_PNTR_WIDTH = "8" *) 
  (* WR_RD_RATIO = "0" *) 
  (* WR_WIDTH_LOG = "6" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* both_stages_valid = "3" *) 
  (* invalid = "0" *) 
  (* stage1_valid = "2" *) 
  (* stage2_valid = "1" *) 
  zynq_bd_C2C2_0_xpm_fifo_base__xdcDup__1 \gnuram_async_fifo.xpm_fifo_base_inst 
       (.almost_empty(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ),
        .almost_full(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ),
        .data_valid(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ),
        .dbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .full_n(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_full(prog_full),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .rst(rst),
        .sbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ),
        .sleep(sleep),
        .underflow(underflow),
        .wr_ack(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_DEST_SYNC_FF = "3" *) (* COMMON_CLOCK = "0" *) 
(* DOUT_RESET_VALUE = "0" *) (* ECC_MODE = "0" *) (* ENABLE_ECC = "0" *) 
(* EN_ADV_FEATURE = "16'b0000011100000111" *) (* EN_AE = "1'b0" *) (* EN_AF = "1'b0" *) 
(* EN_DVLD = "1'b0" *) (* EN_OF = "1'b1" *) (* EN_PE = "1'b1" *) 
(* EN_PF = "1'b1" *) (* EN_RDC = "1'b1" *) (* EN_UF = "1'b1" *) 
(* EN_WACK = "1'b0" *) (* EN_WDC = "1'b1" *) (* FG_EQ_ASYM_DOUT = "1'b0" *) 
(* FIFO_MEMORY_TYPE = "2" *) (* FIFO_MEM_TYPE = "2" *) (* FIFO_READ_DEPTH = "256" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_SIZE = "11520" *) (* FIFO_WRITE_DEPTH = "256" *) 
(* FULL_RESET_VALUE = "1" *) (* FULL_RST_VAL = "1'b1" *) (* PE_THRESH_ADJ = "8" *) 
(* PE_THRESH_MAX = "251" *) (* PE_THRESH_MIN = "5" *) (* PF_THRESH_ADJ = "126" *) 
(* PF_THRESH_MAX = "251" *) (* PF_THRESH_MIN = "8" *) (* PROG_EMPTY_THRESH = "10" *) 
(* PROG_FULL_THRESH = "128" *) (* RD_DATA_COUNT_WIDTH = "8" *) (* RD_DC_WIDTH_EXT = "9" *) 
(* RD_LATENCY = "2" *) (* RD_MODE = "1" *) (* RD_PNTR_WIDTH = "8" *) 
(* READ_DATA_WIDTH = "45" *) (* READ_MODE = "1" *) (* READ_MODE_LL = "1" *) 
(* RELATED_CLOCKS = "0" *) (* REMOVE_WR_RD_PROT_LOGIC = "0" *) (* SIM_ASSERT_CHK = "0" *) 
(* USE_ADV_FEATURES = "0707" *) (* VERSION = "0" *) (* WAKEUP_TIME = "0" *) 
(* WIDTH_RATIO = "1" *) (* WRITE_DATA_WIDTH = "45" *) (* WR_DATA_COUNT_WIDTH = "8" *) 
(* WR_DC_WIDTH_EXT = "9" *) (* WR_DEPTH_LOG = "8" *) (* WR_PNTR_WIDTH = "8" *) 
(* WR_RD_RATIO = "0" *) (* WR_WIDTH_LOG = "6" *) (* XPM_MODULE = "TRUE" *) 
(* both_stages_valid = "3" *) (* invalid = "0" *) (* keep_hierarchy = "soft" *) 
(* stage1_valid = "2" *) (* stage2_valid = "1" *) 
module zynq_bd_C2C2_0_xpm_fifo_base
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    full_n,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [44:0]din;
  output full;
  output full_n;
  output prog_full;
  output [7:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [44:0]dout;
  output empty;
  output prog_empty;
  output [7:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [1:0]count_value_i;
  wire [1:0]curr_fwft_state;
  wire [7:0]diff_pntr_pe;
  wire [8:2]diff_pntr_pf_q;
  wire [8:2]diff_pntr_pf_q0;
  wire [44:0]din;
  wire [44:0]dout;
  wire empty;
  wire empty_fwft_i0;
  wire full;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_0 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_7 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_10 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_11 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_12 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_13 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_14 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_15 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_16 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_9 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_7 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_8 ;
  wire \gen_fwft.count_rst ;
  wire \gen_fwft.ram_regout_en ;
  wire \gen_fwft.rdpp1_inst_n_3 ;
  wire \gen_fwft.rdpp1_inst_n_4 ;
  wire \gen_fwft.rdpp1_inst_n_5 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ;
  wire [8:1]\grdc.diff_wr_rd_pntr_rdc ;
  wire \grdc.rd_data_count_i0 ;
  wire [8:1]\gwdc.diff_wr_rd_pntr1_out ;
  wire [1:0]next_fwft_state__0;
  wire overflow;
  wire overflow_i0;
  wire prog_empty;
  wire prog_full;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire [7:0]rd_data_count;
  wire rd_en;
  wire [7:0]rd_pntr_ext;
  wire [7:0]rd_pntr_wr;
  wire [7:0]rd_pntr_wr_cdc;
  wire [8:0]rd_pntr_wr_cdc_dc;
  wire rd_rst_busy;
  wire rdp_inst_n_10;
  wire rdp_inst_n_19;
  wire rdp_inst_n_20;
  wire rdp_inst_n_21;
  wire rdp_inst_n_22;
  wire rdp_inst_n_23;
  wire rdp_inst_n_24;
  wire rdp_inst_n_25;
  wire rdp_inst_n_26;
  wire rdp_inst_n_27;
  wire rdp_inst_n_28;
  wire rdp_inst_n_29;
  wire rdp_inst_n_30;
  wire rdp_inst_n_31;
  wire rdp_inst_n_8;
  wire rdp_inst_n_9;
  wire rdpp1_inst_n_0;
  wire rdpp1_inst_n_1;
  wire rdpp1_inst_n_2;
  wire rdpp1_inst_n_3;
  wire rdpp1_inst_n_4;
  wire rdpp1_inst_n_5;
  wire rdpp1_inst_n_6;
  wire rdpp1_inst_n_7;
  wire rst;
  wire rst_d1;
  wire rst_d1_inst_n_1;
  wire sleep;
  wire [1:1]src_in_bin00_out;
  wire underflow;
  wire underflow_i0;
  wire wr_clk;
  wire [7:0]wr_data_count;
  wire wr_en;
  wire [8:0]wr_pntr_ext;
  wire [8:1]wr_pntr_plus1_pf;
  wire wr_pntr_plus1_pf_carry;
  wire [7:0]wr_pntr_rd_cdc;
  wire [8:0]wr_pntr_rd_cdc_dc;
  wire wr_rst_busy;
  wire wrpp2_inst_n_0;
  wire wrpp2_inst_n_1;
  wire wrpp2_inst_n_2;
  wire wrpp2_inst_n_3;
  wire wrpp2_inst_n_4;
  wire wrpp2_inst_n_5;
  wire wrpp2_inst_n_6;
  wire wrpp2_inst_n_7;
  wire wrst_busy;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ;
  wire [44:0]\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign full_n = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  (* SOFT_HLUTNM = "soft_lutpair175" *) 
  LUT4 #(
    .INIT(16'h6A85)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[0]_i_1 
       (.I0(curr_fwft_state[0]),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(ram_empty_i),
        .O(next_fwft_state__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair175" *) 
  LUT4 #(
    .INIT(16'h3FF0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[1]_i_1 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(curr_fwft_state[0]),
        .O(next_fwft_state__0[1]));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[0]),
        .Q(curr_fwft_state[0]),
        .R(rd_rst_busy));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[1]),
        .Q(curr_fwft_state[1]),
        .R(rd_rst_busy));
  GND GND
       (.G(\<const0> ));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_gray__parameterized1__8 \gen_cdc_pntr.rd_pntr_cdc_dc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc_dc),
        .src_clk(rd_clk),
        .src_in_bin({rdp_inst_n_24,rdp_inst_n_25,rdp_inst_n_26,rdp_inst_n_27,rdp_inst_n_28,rdp_inst_n_29,rdp_inst_n_30,src_in_bin00_out,rdp_inst_n_31}));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "8" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_gray__9 \gen_cdc_pntr.rd_pntr_cdc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc),
        .src_clk(rd_clk),
        .src_in_bin(rd_pntr_ext));
  zynq_bd_C2C2_0_xpm_fifo_reg_vec_36 \gen_cdc_pntr.rpw_gray_reg 
       (.D(rd_pntr_wr_cdc),
        .Q(wr_pntr_plus1_pf),
        .d_out_int_reg(\gen_cdc_pntr.rpw_gray_reg_n_8 ),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7}),
        .\reg_out_i_reg[7]_0 (rd_pntr_wr),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized0_37 \gen_cdc_pntr.rpw_gray_reg_dc 
       (.D(rd_pntr_wr_cdc_dc),
        .Q({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 }),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_fifo_reg_vec_38 \gen_cdc_pntr.wpr_gray_reg 
       (.D(wr_pntr_rd_cdc),
        .Q(curr_fwft_state),
        .\gen_pf_ic_rc.ram_empty_i_reg (rd_pntr_ext),
        .\gen_pf_ic_rc.ram_empty_i_reg_0 ({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3,rdpp1_inst_n_4,rdpp1_inst_n_5,rdpp1_inst_n_6,rdpp1_inst_n_7}),
        .ram_empty_i(ram_empty_i),
        .ram_empty_i0(ram_empty_i0),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[0]_0 (rd_rst_busy),
        .\reg_out_i_reg[7]_0 ({\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }));
  zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized0_39 \gen_cdc_pntr.wpr_gray_reg_dc 
       (.D(\grdc.diff_wr_rd_pntr_rdc ),
        .DI({rdp_inst_n_9,\gen_fwft.rdpp1_inst_n_5 }),
        .Q({\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_16 }),
        .S({rdp_inst_n_19,rdp_inst_n_20,rdp_inst_n_21,rdp_inst_n_22,rdp_inst_n_23,\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .\grdc.rd_data_count_i_reg[7] (count_value_i[1]),
        .\grdc.rd_data_count_i_reg[7]_0 (rd_pntr_ext[6:1]),
        .\grdc.rd_data_count_i_reg[8] (rdp_inst_n_10),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[8]_0 (rd_rst_busy),
        .\reg_out_i_reg[8]_1 (wr_pntr_rd_cdc_dc));
  (* DEST_SYNC_FF = "5" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_gray__parameterized0__4 \gen_cdc_pntr.wr_pntr_cdc_dc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc_dc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "8" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_gray__8 \gen_cdc_pntr.wr_pntr_cdc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext[7:0]));
  (* SOFT_HLUTNM = "soft_lutpair174" *) 
  LUT4 #(
    .INIT(16'hF380)) 
    \gen_fwft.empty_fwft_i_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .I3(empty),
        .O(empty_fwft_i0));
  FDSE #(
    .INIT(1'b1)) 
    \gen_fwft.empty_fwft_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .Q(empty),
        .S(rd_rst_busy));
  zynq_bd_C2C2_0_xpm_counter_updn_40 \gen_fwft.rdpp1_inst 
       (.DI(\gen_fwft.rdpp1_inst_n_5 ),
        .Q(count_value_i),
        .S({\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\grdc.rd_data_count_i_reg[7] (rd_pntr_ext[1:0]),
        .\grdc.rd_data_count_i_reg[7]_0 ({\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_16 }),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .src_in_bin(src_in_bin00_out));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_cdc_pntr.rpw_gray_reg_n_8 ),
        .Q(full),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[0]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[1]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[2]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[3]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[4]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[5]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[6]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[7]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .R(rd_rst_busy));
  LUT4 #(
    .INIT(16'h88B8)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1 
       (.I0(prog_empty),
        .I1(empty),
        .I2(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h01FF)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ),
        .Q(prog_empty),
        .S(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[2]),
        .Q(diff_pntr_pf_q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[3]),
        .Q(diff_pntr_pf_q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[4]),
        .Q(diff_pntr_pf_q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[5]),
        .Q(diff_pntr_pf_q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[6]),
        .Q(diff_pntr_pf_q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[7]),
        .Q(diff_pntr_pf_q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[8]),
        .Q(diff_pntr_pf_q[8]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1_inst_n_1),
        .Q(prog_full),
        .S(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.ram_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i0),
        .Q(ram_empty_i),
        .S(rd_rst_busy));
  (* ADDR_WIDTH_A = "8" *) 
  (* ADDR_WIDTH_B = "8" *) 
  (* AUTO_SLEEP_TIME = "0" *) 
  (* BYTE_WRITE_WIDTH_A = "45" *) 
  (* BYTE_WRITE_WIDTH_B = "45" *) 
  (* CASCADE_HEIGHT = "0" *) 
  (* CLOCKING_MODE = "1" *) 
  (* ECC_BIT_RANGE = "[7:0]" *) 
  (* ECC_MODE = "0" *) 
  (* ECC_TYPE = "NONE" *) 
  (* IGNORE_INIT_SYNTH = "0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* MAX_NUM_CHAR = "0" *) 
  (* \MEM.ADDRESS_SPACE  *) 
  (* \MEM.ADDRESS_SPACE_BEGIN  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_LSB  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_MSB  = "44" *) 
  (* \MEM.ADDRESS_SPACE_END  = "511" *) 
  (* \MEM.CORE_MEMORY_WIDTH  = "45" *) 
  (* MEMORY_INIT_FILE = "none" *) 
  (* MEMORY_INIT_PARAM = "" *) 
  (* MEMORY_OPTIMIZATION = "true" *) 
  (* MEMORY_PRIMITIVE = "2" *) 
  (* MEMORY_SIZE = "11520" *) 
  (* MEMORY_TYPE = "1" *) 
  (* MESSAGE_CONTROL = "0" *) 
  (* NUM_CHAR_LOC = "0" *) 
  (* P_ECC_MODE = "no_ecc" *) 
  (* P_ENABLE_BYTE_WRITE_A = "0" *) 
  (* P_ENABLE_BYTE_WRITE_B = "0" *) 
  (* P_MAX_DEPTH_DATA = "256" *) 
  (* P_MEMORY_OPT = "yes" *) 
  (* P_MEMORY_PRIMITIVE = "block" *) 
  (* P_MIN_WIDTH_DATA = "45" *) 
  (* P_MIN_WIDTH_DATA_A = "45" *) 
  (* P_MIN_WIDTH_DATA_B = "45" *) 
  (* P_MIN_WIDTH_DATA_ECC = "45" *) 
  (* P_MIN_WIDTH_DATA_LDW = "4" *) 
  (* P_MIN_WIDTH_DATA_SHFT = "45" *) 
  (* P_NUM_COLS_WRITE_A = "1" *) 
  (* P_NUM_COLS_WRITE_B = "1" *) 
  (* P_NUM_ROWS_READ_A = "1" *) 
  (* P_NUM_ROWS_READ_B = "1" *) 
  (* P_NUM_ROWS_WRITE_A = "1" *) 
  (* P_NUM_ROWS_WRITE_B = "1" *) 
  (* P_SDP_WRITE_MODE = "no" *) 
  (* P_WIDTH_ADDR_LSB_READ_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) 
  (* P_WIDTH_ADDR_READ_A = "8" *) 
  (* P_WIDTH_ADDR_READ_B = "8" *) 
  (* P_WIDTH_ADDR_WRITE_A = "8" *) 
  (* P_WIDTH_ADDR_WRITE_B = "8" *) 
  (* P_WIDTH_COL_WRITE_A = "45" *) 
  (* P_WIDTH_COL_WRITE_B = "45" *) 
  (* RAM_DECOMP = "auto" *) 
  (* READ_DATA_WIDTH_A = "45" *) 
  (* READ_DATA_WIDTH_B = "45" *) 
  (* READ_LATENCY_A = "2" *) 
  (* READ_LATENCY_B = "2" *) 
  (* READ_RESET_VALUE_A = "0" *) 
  (* READ_RESET_VALUE_B = "0" *) 
  (* RST_MODE_A = "SYNC" *) 
  (* RST_MODE_B = "SYNC" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_EMBEDDED_CONSTRAINT = "0" *) 
  (* USE_MEM_INIT = "0" *) 
  (* USE_MEM_INIT_MMI = "0" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH_A = "45" *) 
  (* WRITE_DATA_WIDTH_B = "45" *) 
  (* WRITE_MODE_A = "2" *) 
  (* WRITE_MODE_B = "2" *) 
  (* WRITE_PROTECT = "1" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* rsta_loop_iter = "48" *) 
  (* rstb_loop_iter = "48" *) 
  zynq_bd_C2C2_0_xpm_memory_base \gen_sdpram.xpm_memory_base_inst 
       (.addra(wr_pntr_ext[7:0]),
        .addrb(rd_pntr_ext),
        .clka(wr_clk),
        .clkb(rd_clk),
        .dbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ),
        .dbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ),
        .dina(din),
        .dinb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .douta(\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED [44:0]),
        .doutb(dout),
        .ena(wr_pntr_plus1_pf_carry),
        .enb(rdp_inst_n_8),
        .injectdbiterra(1'b0),
        .injectdbiterrb(1'b0),
        .injectsbiterra(1'b0),
        .injectsbiterrb(1'b0),
        .regcea(1'b0),
        .regceb(\gen_fwft.ram_regout_en ),
        .rsta(1'b0),
        .rstb(rd_rst_busy),
        .sbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ),
        .sbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ),
        .sleep(sleep),
        .wea(1'b0),
        .web(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair174" *) 
  LUT3 #(
    .INIT(8'h62)) 
    \gen_sdpram.xpm_memory_base_inst_i_3 
       (.I0(curr_fwft_state[0]),
        .I1(curr_fwft_state[1]),
        .I2(rd_en),
        .O(\gen_fwft.ram_regout_en ));
  FDRE #(
    .INIT(1'b0)) 
    \gof.overflow_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(overflow_i0),
        .Q(overflow),
        .R(1'b0));
  FDRE \grdc.rd_data_count_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q(rd_data_count[0]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(rd_data_count[1]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [3]),
        .Q(rd_data_count[2]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [4]),
        .Q(rd_data_count[3]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [5]),
        .Q(rd_data_count[4]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [6]),
        .Q(rd_data_count[5]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [7]),
        .Q(rd_data_count[6]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [8]),
        .Q(rd_data_count[7]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \guf.underflow_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(underflow_i0),
        .Q(underflow),
        .R(1'b0));
  FDRE \gwdc.wr_data_count_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [1]),
        .Q(wr_data_count[0]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [2]),
        .Q(wr_data_count[1]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [3]),
        .Q(wr_data_count[2]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [4]),
        .Q(wr_data_count[3]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [5]),
        .Q(wr_data_count[4]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [6]),
        .Q(wr_data_count[5]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [7]),
        .Q(wr_data_count[6]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [8]),
        .Q(wr_data_count[7]),
        .R(wrst_busy));
  zynq_bd_C2C2_0_xpm_counter_updn__parameterized0_41 rdp_inst
       (.D(diff_pntr_pe),
        .DI(rdp_inst_n_9),
        .Q(rd_pntr_ext),
        .S({rdp_inst_n_19,rdp_inst_n_20,rdp_inst_n_21,rdp_inst_n_22,rdp_inst_n_23}),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\count_value_i_reg[7]_0 (rdp_inst_n_10),
        .\count_value_i_reg[8]_0 (rd_rst_busy),
        .enb(rdp_inst_n_8),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ({\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .\grdc.rd_data_count_i_reg[7] (count_value_i),
        .\grdc.rd_data_count_i_reg[8] ({\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_15 }),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .src_in_bin({rdp_inst_n_24,rdp_inst_n_25,rdp_inst_n_26,rdp_inst_n_27,rdp_inst_n_28,rdp_inst_n_29,rdp_inst_n_30,rdp_inst_n_31}));
  zynq_bd_C2C2_0_xpm_counter_updn__parameterized1_42 rdpp1_inst
       (.E(rdp_inst_n_8),
        .Q({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3,rdpp1_inst_n_4,rdpp1_inst_n_5,rdpp1_inst_n_6,rdpp1_inst_n_7}),
        .\count_value_i_reg[0]_0 (rd_rst_busy),
        .\count_value_i_reg[1]_0 (curr_fwft_state),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  zynq_bd_C2C2_0_xpm_fifo_reg_bit_43 rst_d1_inst
       (.Q(diff_pntr_pf_q),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] (rst_d1_inst_n_1),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg (full),
        .overflow_i0(overflow_i0),
        .prog_full(prog_full),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_counter_updn__parameterized0_44 wrp_inst
       (.D(\gwdc.diff_wr_rd_pntr1_out ),
        .Q(wr_pntr_ext),
        .\count_value_i_reg[6]_0 (full),
        .\gwdc.wr_data_count_i_reg[8] ({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 }),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_counter_updn__parameterized1_45 wrpp1_inst
       (.D(diff_pntr_pf_q0),
        .Q(wr_pntr_plus1_pf),
        .\count_value_i_reg[6]_0 (full),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] (rd_pntr_wr),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_counter_updn__parameterized2_46 wrpp2_inst
       (.Q({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7}),
        .\count_value_i_reg[6]_0 (full),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_fifo_rst__xdcDup__2 xpm_fifo_rst_inst
       (.Q(curr_fwft_state),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[7] (full),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_0 (rd_rst_busy),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_1 (\grdc.rd_data_count_i0 ),
        .\guf.underflow_i_reg (empty),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .rst_d1(rst_d1),
        .underflow_i0(underflow_i0),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wr_rst_busy(wr_rst_busy),
        .wrst_busy(wrst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_DEST_SYNC_FF = "3" *) (* COMMON_CLOCK = "0" *) 
(* DOUT_RESET_VALUE = "0" *) (* ECC_MODE = "0" *) (* ENABLE_ECC = "0" *) 
(* EN_ADV_FEATURE = "16'b0000011100000111" *) (* EN_AE = "1'b0" *) (* EN_AF = "1'b0" *) 
(* EN_DVLD = "1'b0" *) (* EN_OF = "1'b1" *) (* EN_PE = "1'b1" *) 
(* EN_PF = "1'b1" *) (* EN_RDC = "1'b1" *) (* EN_UF = "1'b1" *) 
(* EN_WACK = "1'b0" *) (* EN_WDC = "1'b1" *) (* FG_EQ_ASYM_DOUT = "1'b0" *) 
(* FIFO_MEMORY_TYPE = "2" *) (* FIFO_MEM_TYPE = "2" *) (* FIFO_READ_DEPTH = "512" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_SIZE = "19456" *) (* FIFO_WRITE_DEPTH = "512" *) 
(* FULL_RESET_VALUE = "1" *) (* FULL_RST_VAL = "1'b1" *) (* ORIG_REF_NAME = "xpm_fifo_base" *) 
(* PE_THRESH_ADJ = "8" *) (* PE_THRESH_MAX = "507" *) (* PE_THRESH_MIN = "5" *) 
(* PF_THRESH_ADJ = "382" *) (* PF_THRESH_MAX = "507" *) (* PF_THRESH_MIN = "8" *) 
(* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "384" *) (* RD_DATA_COUNT_WIDTH = "9" *) 
(* RD_DC_WIDTH_EXT = "10" *) (* RD_LATENCY = "2" *) (* RD_MODE = "1" *) 
(* RD_PNTR_WIDTH = "9" *) (* READ_DATA_WIDTH = "38" *) (* READ_MODE = "1" *) 
(* READ_MODE_LL = "1" *) (* RELATED_CLOCKS = "0" *) (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WIDTH_RATIO = "1" *) (* WRITE_DATA_WIDTH = "38" *) 
(* WR_DATA_COUNT_WIDTH = "9" *) (* WR_DC_WIDTH_EXT = "10" *) (* WR_DEPTH_LOG = "9" *) 
(* WR_PNTR_WIDTH = "9" *) (* WR_RD_RATIO = "0" *) (* WR_WIDTH_LOG = "6" *) 
(* XPM_MODULE = "TRUE" *) (* both_stages_valid = "3" *) (* invalid = "0" *) 
(* keep_hierarchy = "soft" *) (* stage1_valid = "2" *) (* stage2_valid = "1" *) 
module zynq_bd_C2C2_0_xpm_fifo_base__parameterized0
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    full_n,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [37:0]din;
  output full;
  output full_n;
  output prog_full;
  output [8:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [37:0]dout;
  output empty;
  output prog_empty;
  output [8:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire clr_full;
  wire [1:0]count_value_i;
  wire [1:0]curr_fwft_state;
  wire [8:0]diff_pntr_pe;
  wire [9:2]diff_pntr_pf_q;
  wire [9:2]diff_pntr_pf_q0;
  wire [37:0]din;
  wire [37:1]\^dout ;
  wire empty;
  wire empty_fwft_i0;
  wire full;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_0 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_7 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_9 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_9 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_0 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_10 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_11 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_12 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_13 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_14 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_15 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_16 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_7 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_9 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_0 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_7 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_8 ;
  wire \gen_fwft.count_rst ;
  wire \gen_fwft.ram_regout_en ;
  wire \gen_fwft.rdpp1_inst_n_3 ;
  wire \gen_fwft.rdpp1_inst_n_4 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[8] ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ;
  wire [9:1]\grdc.diff_wr_rd_pntr_rdc ;
  wire \grdc.rd_data_count_i0 ;
  wire [9:1]\gwdc.diff_wr_rd_pntr1_out ;
  wire [1:0]next_fwft_state__0;
  wire overflow;
  wire overflow_i0;
  wire prog_empty;
  wire prog_full;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire ram_rd_en_i;
  wire rd_clk;
  wire [8:0]rd_data_count;
  wire rd_en;
  wire [8:0]rd_pntr_ext;
  wire [8:0]rd_pntr_wr;
  wire [8:0]rd_pntr_wr_cdc;
  wire [9:0]rd_pntr_wr_cdc_dc;
  wire rd_rst_busy;
  wire rdp_inst_n_0;
  wire rdp_inst_n_11;
  wire rdp_inst_n_21;
  wire rdp_inst_n_31;
  wire rdp_inst_n_32;
  wire rdp_inst_n_33;
  wire rdp_inst_n_34;
  wire rdp_inst_n_35;
  wire rdp_inst_n_36;
  wire rdp_inst_n_37;
  wire rdp_inst_n_38;
  wire rst;
  wire rst_d1;
  wire rst_d1_inst_n_1;
  wire sleep;
  wire [9:0]src_in_bin00_out;
  wire underflow;
  wire underflow_i0;
  wire wr_clk;
  wire [8:0]wr_data_count;
  wire wr_en;
  wire [9:0]wr_pntr_ext;
  wire [9:1]wr_pntr_plus1_pf;
  wire wr_pntr_plus1_pf_carry;
  wire [8:0]wr_pntr_rd_cdc;
  wire [9:0]wr_pntr_rd_cdc_dc;
  wire wr_rst_busy;
  wire wrpp2_inst_n_0;
  wire wrpp2_inst_n_1;
  wire wrpp2_inst_n_2;
  wire wrpp2_inst_n_3;
  wire wrpp2_inst_n_4;
  wire wrpp2_inst_n_5;
  wire wrpp2_inst_n_6;
  wire wrpp2_inst_n_7;
  wire wrpp2_inst_n_8;
  wire wrst_busy;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ;
  wire [37:0]\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED ;
  wire [0:0]\NLW_gen_sdpram.xpm_memory_base_inst_doutb_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign dout[37:1] = \^dout [37:1];
  assign dout[0] = \<const0> ;
  assign full_n = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  (* SOFT_HLUTNM = "soft_lutpair345" *) 
  LUT4 #(
    .INIT(16'h69A1)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[0]_i_1 
       (.I0(ram_empty_i),
        .I1(curr_fwft_state[1]),
        .I2(curr_fwft_state[0]),
        .I3(rd_en),
        .O(next_fwft_state__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair345" *) 
  LUT4 #(
    .INIT(16'h3FF0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[1]_i_1 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(curr_fwft_state[0]),
        .I3(curr_fwft_state[1]),
        .O(next_fwft_state__0[1]));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[0]),
        .Q(curr_fwft_state[0]),
        .R(rd_rst_busy));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[1]),
        .Q(curr_fwft_state[1]),
        .R(rd_rst_busy));
  GND GND
       (.G(\<const0> ));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "10" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_gray__parameterized3__2 \gen_cdc_pntr.rd_pntr_cdc_dc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc_dc),
        .src_clk(rd_clk),
        .src_in_bin(src_in_bin00_out));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_gray__parameterized1__10 \gen_cdc_pntr.rd_pntr_cdc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc),
        .src_clk(rd_clk),
        .src_in_bin(rd_pntr_ext));
  zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized0 \gen_cdc_pntr.rpw_gray_reg 
       (.D(rd_pntr_wr_cdc),
        .Q(rd_pntr_wr),
        .clr_full(clr_full),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 ({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7,wrpp2_inst_n_8}),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg (wr_pntr_plus1_pf),
        .\reg_out_i_reg[0]_0 (\gen_cdc_pntr.rpw_gray_reg_n_9 ),
        .wr_clk(wr_clk),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized1 \gen_cdc_pntr.rpw_gray_reg_dc 
       (.D(rd_pntr_wr_cdc_dc),
        .Q({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_9 }),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized0_1 \gen_cdc_pntr.wpr_gray_reg 
       (.D(diff_pntr_pe),
        .Q(curr_fwft_state),
        .S({rdp_inst_n_31,rdp_inst_n_32,rdp_inst_n_33,rdp_inst_n_34,rdp_inst_n_35,rdp_inst_n_36,rdp_inst_n_37,rdp_inst_n_38}),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] (rd_pntr_ext[8]),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[0]_0 (rd_rst_busy),
        .\reg_out_i_reg[8]_0 ({\gen_cdc_pntr.wpr_gray_reg_n_0 ,\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .\reg_out_i_reg[8]_1 (wr_pntr_rd_cdc));
  zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized1_2 \gen_cdc_pntr.wpr_gray_reg_dc 
       (.D(wr_pntr_rd_cdc_dc),
        .DI({\gen_cdc_pntr.wpr_gray_reg_dc_n_0 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_1 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_2 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_5 }),
        .Q({\gen_cdc_pntr.wpr_gray_reg_dc_n_6 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_7 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 }),
        .S(\gen_cdc_pntr.wpr_gray_reg_dc_n_16 ),
        .\grdc.rd_data_count_i_reg[7] (count_value_i[1]),
        .\grdc.rd_data_count_i_reg[9] ({rdp_inst_n_0,rd_pntr_ext[8:1]}),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[7]_0 (\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ),
        .\reg_out_i_reg[9]_0 (rd_rst_busy));
  (* DEST_SYNC_FF = "5" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "10" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_gray__parameterized2__2 \gen_cdc_pntr.wr_pntr_cdc_dc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc_dc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_gray__parameterized1__9 \gen_cdc_pntr.wr_pntr_cdc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext[8:0]));
  (* SOFT_HLUTNM = "soft_lutpair344" *) 
  LUT4 #(
    .INIT(16'hE0CC)) 
    \gen_fwft.empty_fwft_i_i_1 
       (.I0(rd_en),
        .I1(empty),
        .I2(curr_fwft_state[1]),
        .I3(curr_fwft_state[0]),
        .O(empty_fwft_i0));
  FDSE #(
    .INIT(1'b1)) 
    \gen_fwft.empty_fwft_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .Q(empty),
        .S(rd_rst_busy));
  zynq_bd_C2C2_0_xpm_counter_updn \gen_fwft.rdpp1_inst 
       (.DI({\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .Q(count_value_i),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\src_gray_ff_reg[0] (rd_pntr_ext[0]),
        .src_in_bin(src_in_bin00_out[0]));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_cdc_pntr.rpw_gray_reg_n_9 ),
        .Q(full),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[0]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[1]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[2]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[3]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[4]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[5]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[6]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[7]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[8]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[8] ),
        .R(rd_rst_busy));
  LUT4 #(
    .INIT(16'h88B8)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1 
       (.I0(prog_empty),
        .I1(empty),
        .I2(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h01FF)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[8] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .I4(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ),
        .Q(prog_empty),
        .S(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[2]),
        .Q(diff_pntr_pf_q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[3]),
        .Q(diff_pntr_pf_q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[4]),
        .Q(diff_pntr_pf_q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[5]),
        .Q(diff_pntr_pf_q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[6]),
        .Q(diff_pntr_pf_q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[7]),
        .Q(diff_pntr_pf_q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[8]),
        .Q(diff_pntr_pf_q[8]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[9]),
        .Q(diff_pntr_pf_q[9]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1_inst_n_1),
        .Q(prog_full),
        .S(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.ram_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i0),
        .Q(ram_empty_i),
        .S(rd_rst_busy));
  (* ADDR_WIDTH_A = "9" *) 
  (* ADDR_WIDTH_B = "9" *) 
  (* AUTO_SLEEP_TIME = "0" *) 
  (* BYTE_WRITE_WIDTH_A = "38" *) 
  (* BYTE_WRITE_WIDTH_B = "38" *) 
  (* CASCADE_HEIGHT = "0" *) 
  (* CLOCKING_MODE = "1" *) 
  (* ECC_BIT_RANGE = "[7:0]" *) 
  (* ECC_MODE = "0" *) 
  (* ECC_TYPE = "NONE" *) 
  (* IGNORE_INIT_SYNTH = "0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* MAX_NUM_CHAR = "0" *) 
  (* \MEM.ADDRESS_SPACE  *) 
  (* \MEM.ADDRESS_SPACE_BEGIN  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_LSB  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_MSB  = "36" *) 
  (* \MEM.ADDRESS_SPACE_END  = "511" *) 
  (* \MEM.CORE_MEMORY_WIDTH  = "37" *) 
  (* MEMORY_INIT_FILE = "none" *) 
  (* MEMORY_INIT_PARAM = "" *) 
  (* MEMORY_OPTIMIZATION = "true" *) 
  (* MEMORY_PRIMITIVE = "2" *) 
  (* MEMORY_SIZE = "19456" *) 
  (* MEMORY_TYPE = "1" *) 
  (* MESSAGE_CONTROL = "0" *) 
  (* NUM_CHAR_LOC = "0" *) 
  (* P_ECC_MODE = "no_ecc" *) 
  (* P_ENABLE_BYTE_WRITE_A = "0" *) 
  (* P_ENABLE_BYTE_WRITE_B = "0" *) 
  (* P_MAX_DEPTH_DATA = "512" *) 
  (* P_MEMORY_OPT = "yes" *) 
  (* P_MEMORY_PRIMITIVE = "block" *) 
  (* P_MIN_WIDTH_DATA = "38" *) 
  (* P_MIN_WIDTH_DATA_A = "38" *) 
  (* P_MIN_WIDTH_DATA_B = "38" *) 
  (* P_MIN_WIDTH_DATA_ECC = "38" *) 
  (* P_MIN_WIDTH_DATA_LDW = "4" *) 
  (* P_MIN_WIDTH_DATA_SHFT = "38" *) 
  (* P_NUM_COLS_WRITE_A = "1" *) 
  (* P_NUM_COLS_WRITE_B = "1" *) 
  (* P_NUM_ROWS_READ_A = "1" *) 
  (* P_NUM_ROWS_READ_B = "1" *) 
  (* P_NUM_ROWS_WRITE_A = "1" *) 
  (* P_NUM_ROWS_WRITE_B = "1" *) 
  (* P_SDP_WRITE_MODE = "no" *) 
  (* P_WIDTH_ADDR_LSB_READ_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) 
  (* P_WIDTH_ADDR_READ_A = "9" *) 
  (* P_WIDTH_ADDR_READ_B = "9" *) 
  (* P_WIDTH_ADDR_WRITE_A = "9" *) 
  (* P_WIDTH_ADDR_WRITE_B = "9" *) 
  (* P_WIDTH_COL_WRITE_A = "38" *) 
  (* P_WIDTH_COL_WRITE_B = "38" *) 
  (* RAM_DECOMP = "auto" *) 
  (* READ_DATA_WIDTH_A = "38" *) 
  (* READ_DATA_WIDTH_B = "38" *) 
  (* READ_LATENCY_A = "2" *) 
  (* READ_LATENCY_B = "2" *) 
  (* READ_RESET_VALUE_A = "0" *) 
  (* READ_RESET_VALUE_B = "0" *) 
  (* RST_MODE_A = "SYNC" *) 
  (* RST_MODE_B = "SYNC" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_EMBEDDED_CONSTRAINT = "0" *) 
  (* USE_MEM_INIT = "0" *) 
  (* USE_MEM_INIT_MMI = "0" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH_A = "38" *) 
  (* WRITE_DATA_WIDTH_B = "38" *) 
  (* WRITE_MODE_A = "2" *) 
  (* WRITE_MODE_B = "2" *) 
  (* WRITE_PROTECT = "1" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* rsta_loop_iter = "40" *) 
  (* rstb_loop_iter = "40" *) 
  zynq_bd_C2C2_0_xpm_memory_base__parameterized0 \gen_sdpram.xpm_memory_base_inst 
       (.addra(wr_pntr_ext[8:0]),
        .addrb(rd_pntr_ext),
        .clka(wr_clk),
        .clkb(rd_clk),
        .dbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ),
        .dbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ),
        .dina({din[37:1],1'b0}),
        .dinb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .douta(\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED [37:0]),
        .doutb({\^dout ,\NLW_gen_sdpram.xpm_memory_base_inst_doutb_UNCONNECTED [0]}),
        .ena(1'b0),
        .enb(ram_rd_en_i),
        .injectdbiterra(1'b0),
        .injectdbiterrb(1'b0),
        .injectsbiterra(1'b0),
        .injectsbiterrb(1'b0),
        .regcea(1'b0),
        .regceb(\gen_fwft.ram_regout_en ),
        .rsta(1'b0),
        .rstb(rd_rst_busy),
        .sbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ),
        .sbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ),
        .sleep(sleep),
        .wea(wr_pntr_plus1_pf_carry),
        .web(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair344" *) 
  LUT3 #(
    .INIT(8'h2C)) 
    \gen_sdpram.xpm_memory_base_inst_i_3 
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .O(\gen_fwft.ram_regout_en ));
  FDRE #(
    .INIT(1'b0)) 
    \gof.overflow_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(overflow_i0),
        .Q(overflow),
        .R(1'b0));
  FDRE \grdc.rd_data_count_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q(rd_data_count[0]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(rd_data_count[1]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [3]),
        .Q(rd_data_count[2]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [4]),
        .Q(rd_data_count[3]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [5]),
        .Q(rd_data_count[4]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [6]),
        .Q(rd_data_count[5]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [7]),
        .Q(rd_data_count[6]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [8]),
        .Q(rd_data_count[7]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[9] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [9]),
        .Q(rd_data_count[8]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \guf.underflow_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(underflow_i0),
        .Q(underflow),
        .R(1'b0));
  FDRE \gwdc.wr_data_count_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [1]),
        .Q(wr_data_count[0]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [2]),
        .Q(wr_data_count[1]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [3]),
        .Q(wr_data_count[2]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [4]),
        .Q(wr_data_count[3]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [5]),
        .Q(wr_data_count[4]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [6]),
        .Q(wr_data_count[5]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [7]),
        .Q(wr_data_count[6]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [8]),
        .Q(wr_data_count[7]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[9] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [9]),
        .Q(wr_data_count[8]),
        .R(wrst_busy));
  zynq_bd_C2C2_0_xpm_counter_updn__parameterized3 rdp_inst
       (.D(\grdc.diff_wr_rd_pntr_rdc ),
        .DI({\gen_cdc_pntr.wpr_gray_reg_dc_n_0 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_1 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_2 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_5 ,\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .Q({rdp_inst_n_0,rd_pntr_ext}),
        .S(\gen_cdc_pntr.wpr_gray_reg_dc_n_16 ),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\count_value_i_reg[1]_0 (rdp_inst_n_21),
        .\count_value_i_reg[7]_0 ({rdp_inst_n_31,rdp_inst_n_32,rdp_inst_n_33,rdp_inst_n_34,rdp_inst_n_35,rdp_inst_n_36,rdp_inst_n_37,rdp_inst_n_38}),
        .\count_value_i_reg[9]_0 (rd_rst_busy),
        .\gen_pf_ic_rc.ram_empty_i_reg ({\gen_cdc_pntr.wpr_gray_reg_n_0 ,\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .\grdc.rd_data_count_i_reg[7] (count_value_i),
        .\grdc.rd_data_count_i_reg[9] (\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ),
        .\grdc.rd_data_count_i_reg[9]_0 ({\gen_cdc_pntr.wpr_gray_reg_dc_n_6 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_7 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 }),
        .ram_empty_i(ram_empty_i),
        .ram_rd_en_i(ram_rd_en_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[7] (rdp_inst_n_11),
        .src_in_bin(src_in_bin00_out[9:1]));
  zynq_bd_C2C2_0_xpm_counter_updn__parameterized4 rdpp1_inst
       (.E(ram_rd_en_i),
        .Q(curr_fwft_state),
        .\count_value_i_reg[0]_0 (rd_rst_busy),
        .\gen_pf_ic_rc.ram_empty_i_reg (rdp_inst_n_21),
        .\gen_pf_ic_rc.ram_empty_i_reg_0 (rdp_inst_n_11),
        .\gen_pf_ic_rc.ram_empty_i_reg_1 ({\gen_cdc_pntr.wpr_gray_reg_n_0 ,\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .ram_empty_i(ram_empty_i),
        .ram_empty_i0(ram_empty_i0),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  zynq_bd_C2C2_0_xpm_fifo_reg_bit rst_d1_inst
       (.Q(diff_pntr_pf_q),
        .clr_full(clr_full),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] (rst_d1_inst_n_1),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg (full),
        .overflow_i0(overflow_i0),
        .prog_full(prog_full),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_counter_updn__parameterized3_3 wrp_inst
       (.D(\gwdc.diff_wr_rd_pntr1_out ),
        .Q(wr_pntr_ext),
        .\count_value_i_reg[5]_0 (full),
        .\gwdc.wr_data_count_i_reg[9] ({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_9 }),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_counter_updn__parameterized4_4 wrpp1_inst
       (.D(diff_pntr_pf_q0),
        .Q(wr_pntr_plus1_pf),
        .\count_value_i_reg[5]_0 (full),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] (rd_pntr_wr),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_counter_updn__parameterized5 wrpp2_inst
       (.Q({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7,wrpp2_inst_n_8}),
        .\count_value_i_reg[5]_0 (full),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_fifo_rst__xdcDup__3 xpm_fifo_rst_inst
       (.\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] (\grdc.rd_data_count_i0 ),
        .Q(curr_fwft_state),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[8] (full),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_0 (rd_rst_busy),
        .\guf.underflow_i_reg (empty),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .rst_d1(rst_d1),
        .underflow_i0(underflow_i0),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wr_rst_busy(wr_rst_busy),
        .wrst_busy(wrst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_DEST_SYNC_FF = "3" *) (* COMMON_CLOCK = "0" *) 
(* DOUT_RESET_VALUE = "0" *) (* ECC_MODE = "0" *) (* ENABLE_ECC = "0" *) 
(* EN_ADV_FEATURE = "16'b0000011100000111" *) (* EN_AE = "1'b0" *) (* EN_AF = "1'b0" *) 
(* EN_DVLD = "1'b0" *) (* EN_OF = "1'b1" *) (* EN_PE = "1'b1" *) 
(* EN_PF = "1'b1" *) (* EN_RDC = "1'b1" *) (* EN_UF = "1'b1" *) 
(* EN_WACK = "1'b0" *) (* EN_WDC = "1'b1" *) (* FG_EQ_ASYM_DOUT = "1'b0" *) 
(* FIFO_MEMORY_TYPE = "2" *) (* FIFO_MEM_TYPE = "2" *) (* FIFO_READ_DEPTH = "512" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_SIZE = "18432" *) (* FIFO_WRITE_DEPTH = "512" *) 
(* FULL_RESET_VALUE = "1" *) (* FULL_RST_VAL = "1'b1" *) (* ORIG_REF_NAME = "xpm_fifo_base" *) 
(* PE_THRESH_ADJ = "8" *) (* PE_THRESH_MAX = "507" *) (* PE_THRESH_MIN = "5" *) 
(* PF_THRESH_ADJ = "382" *) (* PF_THRESH_MAX = "507" *) (* PF_THRESH_MIN = "8" *) 
(* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "384" *) (* RD_DATA_COUNT_WIDTH = "9" *) 
(* RD_DC_WIDTH_EXT = "10" *) (* RD_LATENCY = "2" *) (* RD_MODE = "1" *) 
(* RD_PNTR_WIDTH = "9" *) (* READ_DATA_WIDTH = "36" *) (* READ_MODE = "1" *) 
(* READ_MODE_LL = "1" *) (* RELATED_CLOCKS = "0" *) (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WIDTH_RATIO = "1" *) (* WRITE_DATA_WIDTH = "36" *) 
(* WR_DATA_COUNT_WIDTH = "9" *) (* WR_DC_WIDTH_EXT = "10" *) (* WR_DEPTH_LOG = "9" *) 
(* WR_PNTR_WIDTH = "9" *) (* WR_RD_RATIO = "0" *) (* WR_WIDTH_LOG = "6" *) 
(* XPM_MODULE = "TRUE" *) (* both_stages_valid = "3" *) (* invalid = "0" *) 
(* keep_hierarchy = "soft" *) (* stage1_valid = "2" *) (* stage2_valid = "1" *) 
module zynq_bd_C2C2_0_xpm_fifo_base__parameterized1
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    full_n,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [35:0]din;
  output full;
  output full_n;
  output prog_full;
  output [8:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [35:0]dout;
  output empty;
  output prog_empty;
  output [8:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire clr_full;
  wire [1:0]count_value_i;
  wire [1:0]curr_fwft_state;
  wire [8:0]diff_pntr_pe;
  wire [9:2]diff_pntr_pf_q;
  wire [9:2]diff_pntr_pf_q0;
  wire [35:0]din;
  wire [35:0]dout;
  wire empty;
  wire empty_fwft_i0;
  wire full;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_0 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_7 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_9 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_9 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_0 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_10 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_11 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_12 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_13 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_14 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_15 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_16 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_7 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_9 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_0 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_7 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_8 ;
  wire \gen_fwft.count_rst ;
  wire \gen_fwft.ram_regout_en ;
  wire \gen_fwft.rdpp1_inst_n_3 ;
  wire \gen_fwft.rdpp1_inst_n_4 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[8] ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ;
  wire [9:1]\grdc.diff_wr_rd_pntr_rdc ;
  wire \grdc.rd_data_count_i0 ;
  wire [9:1]\gwdc.diff_wr_rd_pntr1_out ;
  wire [1:0]next_fwft_state__0;
  wire overflow;
  wire overflow_i0;
  wire prog_empty;
  wire prog_full;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire ram_rd_en_i;
  wire rd_clk;
  wire [8:0]rd_data_count;
  wire rd_en;
  wire [8:0]rd_pntr_ext;
  wire [8:0]rd_pntr_wr;
  wire [8:0]rd_pntr_wr_cdc;
  wire [9:0]rd_pntr_wr_cdc_dc;
  wire rd_rst_busy;
  wire rdp_inst_n_0;
  wire rdp_inst_n_11;
  wire rdp_inst_n_21;
  wire rdp_inst_n_31;
  wire rdp_inst_n_32;
  wire rdp_inst_n_33;
  wire rdp_inst_n_34;
  wire rdp_inst_n_35;
  wire rdp_inst_n_36;
  wire rdp_inst_n_37;
  wire rdp_inst_n_38;
  wire rst;
  wire rst_d1;
  wire rst_d1_inst_n_1;
  wire sleep;
  wire [9:0]src_in_bin00_out;
  wire underflow;
  wire underflow_i0;
  wire wr_clk;
  wire [8:0]wr_data_count;
  wire wr_en;
  wire [9:0]wr_pntr_ext;
  wire [9:1]wr_pntr_plus1_pf;
  wire wr_pntr_plus1_pf_carry;
  wire [8:0]wr_pntr_rd_cdc;
  wire [9:0]wr_pntr_rd_cdc_dc;
  wire wr_rst_busy;
  wire wrpp2_inst_n_0;
  wire wrpp2_inst_n_1;
  wire wrpp2_inst_n_2;
  wire wrpp2_inst_n_3;
  wire wrpp2_inst_n_4;
  wire wrpp2_inst_n_5;
  wire wrpp2_inst_n_6;
  wire wrpp2_inst_n_7;
  wire wrpp2_inst_n_8;
  wire wrst_busy;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ;
  wire [35:0]\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign full_n = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  (* SOFT_HLUTNM = "soft_lutpair291" *) 
  LUT4 #(
    .INIT(16'h69A1)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[0]_i_1 
       (.I0(ram_empty_i),
        .I1(curr_fwft_state[1]),
        .I2(curr_fwft_state[0]),
        .I3(rd_en),
        .O(next_fwft_state__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair291" *) 
  LUT4 #(
    .INIT(16'h3FF0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[1]_i_1 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(curr_fwft_state[0]),
        .I3(curr_fwft_state[1]),
        .O(next_fwft_state__0[1]));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[0]),
        .Q(curr_fwft_state[0]),
        .R(rd_rst_busy));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[1]),
        .Q(curr_fwft_state[1]),
        .R(rd_rst_busy));
  GND GND
       (.G(\<const0> ));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "10" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_gray__parameterized3 \gen_cdc_pntr.rd_pntr_cdc_dc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc_dc),
        .src_clk(rd_clk),
        .src_in_bin(src_in_bin00_out));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_gray__parameterized1__12 \gen_cdc_pntr.rd_pntr_cdc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc),
        .src_clk(rd_clk),
        .src_in_bin(rd_pntr_ext));
  zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized0_5 \gen_cdc_pntr.rpw_gray_reg 
       (.D(rd_pntr_wr_cdc),
        .Q(rd_pntr_wr),
        .clr_full(clr_full),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 ({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7,wrpp2_inst_n_8}),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg (wr_pntr_plus1_pf),
        .\reg_out_i_reg[0]_0 (\gen_cdc_pntr.rpw_gray_reg_n_9 ),
        .wr_clk(wr_clk),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized1_6 \gen_cdc_pntr.rpw_gray_reg_dc 
       (.D(rd_pntr_wr_cdc_dc),
        .Q({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_9 }),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized0_7 \gen_cdc_pntr.wpr_gray_reg 
       (.D(diff_pntr_pe),
        .Q(curr_fwft_state),
        .S({rdp_inst_n_31,rdp_inst_n_32,rdp_inst_n_33,rdp_inst_n_34,rdp_inst_n_35,rdp_inst_n_36,rdp_inst_n_37,rdp_inst_n_38}),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] (rd_pntr_ext[8]),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[0]_0 (rd_rst_busy),
        .\reg_out_i_reg[8]_0 ({\gen_cdc_pntr.wpr_gray_reg_n_0 ,\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .\reg_out_i_reg[8]_1 (wr_pntr_rd_cdc));
  zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized1_8 \gen_cdc_pntr.wpr_gray_reg_dc 
       (.D(wr_pntr_rd_cdc_dc),
        .DI({\gen_cdc_pntr.wpr_gray_reg_dc_n_0 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_1 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_2 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_5 }),
        .Q({\gen_cdc_pntr.wpr_gray_reg_dc_n_6 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_7 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 }),
        .S(\gen_cdc_pntr.wpr_gray_reg_dc_n_16 ),
        .\grdc.rd_data_count_i_reg[7] (count_value_i[1]),
        .\grdc.rd_data_count_i_reg[9] ({rdp_inst_n_0,rd_pntr_ext[8:1]}),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[7]_0 (\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ),
        .\reg_out_i_reg[9]_0 (rd_rst_busy));
  (* DEST_SYNC_FF = "5" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "10" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_gray__parameterized2 \gen_cdc_pntr.wr_pntr_cdc_dc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc_dc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_gray__parameterized1__11 \gen_cdc_pntr.wr_pntr_cdc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext[8:0]));
  (* SOFT_HLUTNM = "soft_lutpair290" *) 
  LUT4 #(
    .INIT(16'hE0CC)) 
    \gen_fwft.empty_fwft_i_i_1 
       (.I0(rd_en),
        .I1(empty),
        .I2(curr_fwft_state[1]),
        .I3(curr_fwft_state[0]),
        .O(empty_fwft_i0));
  FDSE #(
    .INIT(1'b1)) 
    \gen_fwft.empty_fwft_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .Q(empty),
        .S(rd_rst_busy));
  zynq_bd_C2C2_0_xpm_counter_updn_9 \gen_fwft.rdpp1_inst 
       (.DI({\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .Q(count_value_i),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\src_gray_ff_reg[0] (rd_pntr_ext[0]),
        .src_in_bin(src_in_bin00_out[0]));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_cdc_pntr.rpw_gray_reg_n_9 ),
        .Q(full),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[0]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[1]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[2]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[3]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[4]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[5]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[6]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[7]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[8]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[8] ),
        .R(rd_rst_busy));
  LUT4 #(
    .INIT(16'h88B8)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1 
       (.I0(prog_empty),
        .I1(empty),
        .I2(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h01FF)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[8] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .I4(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ),
        .Q(prog_empty),
        .S(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[2]),
        .Q(diff_pntr_pf_q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[3]),
        .Q(diff_pntr_pf_q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[4]),
        .Q(diff_pntr_pf_q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[5]),
        .Q(diff_pntr_pf_q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[6]),
        .Q(diff_pntr_pf_q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[7]),
        .Q(diff_pntr_pf_q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[8]),
        .Q(diff_pntr_pf_q[8]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[9]),
        .Q(diff_pntr_pf_q[9]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1_inst_n_1),
        .Q(prog_full),
        .S(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.ram_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i0),
        .Q(ram_empty_i),
        .S(rd_rst_busy));
  (* ADDR_WIDTH_A = "9" *) 
  (* ADDR_WIDTH_B = "9" *) 
  (* AUTO_SLEEP_TIME = "0" *) 
  (* BYTE_WRITE_WIDTH_A = "36" *) 
  (* BYTE_WRITE_WIDTH_B = "36" *) 
  (* CASCADE_HEIGHT = "0" *) 
  (* CLOCKING_MODE = "1" *) 
  (* ECC_BIT_RANGE = "[7:0]" *) 
  (* ECC_MODE = "0" *) 
  (* ECC_TYPE = "NONE" *) 
  (* IGNORE_INIT_SYNTH = "0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* MAX_NUM_CHAR = "0" *) 
  (* \MEM.ADDRESS_SPACE  *) 
  (* \MEM.ADDRESS_SPACE_BEGIN  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_LSB  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_MSB  = "35" *) 
  (* \MEM.ADDRESS_SPACE_END  = "511" *) 
  (* \MEM.CORE_MEMORY_WIDTH  = "36" *) 
  (* MEMORY_INIT_FILE = "none" *) 
  (* MEMORY_INIT_PARAM = "" *) 
  (* MEMORY_OPTIMIZATION = "true" *) 
  (* MEMORY_PRIMITIVE = "2" *) 
  (* MEMORY_SIZE = "18432" *) 
  (* MEMORY_TYPE = "1" *) 
  (* MESSAGE_CONTROL = "0" *) 
  (* NUM_CHAR_LOC = "0" *) 
  (* P_ECC_MODE = "no_ecc" *) 
  (* P_ENABLE_BYTE_WRITE_A = "0" *) 
  (* P_ENABLE_BYTE_WRITE_B = "0" *) 
  (* P_MAX_DEPTH_DATA = "512" *) 
  (* P_MEMORY_OPT = "yes" *) 
  (* P_MEMORY_PRIMITIVE = "block" *) 
  (* P_MIN_WIDTH_DATA = "36" *) 
  (* P_MIN_WIDTH_DATA_A = "36" *) 
  (* P_MIN_WIDTH_DATA_B = "36" *) 
  (* P_MIN_WIDTH_DATA_ECC = "36" *) 
  (* P_MIN_WIDTH_DATA_LDW = "4" *) 
  (* P_MIN_WIDTH_DATA_SHFT = "36" *) 
  (* P_NUM_COLS_WRITE_A = "1" *) 
  (* P_NUM_COLS_WRITE_B = "1" *) 
  (* P_NUM_ROWS_READ_A = "1" *) 
  (* P_NUM_ROWS_READ_B = "1" *) 
  (* P_NUM_ROWS_WRITE_A = "1" *) 
  (* P_NUM_ROWS_WRITE_B = "1" *) 
  (* P_SDP_WRITE_MODE = "no" *) 
  (* P_WIDTH_ADDR_LSB_READ_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) 
  (* P_WIDTH_ADDR_READ_A = "9" *) 
  (* P_WIDTH_ADDR_READ_B = "9" *) 
  (* P_WIDTH_ADDR_WRITE_A = "9" *) 
  (* P_WIDTH_ADDR_WRITE_B = "9" *) 
  (* P_WIDTH_COL_WRITE_A = "36" *) 
  (* P_WIDTH_COL_WRITE_B = "36" *) 
  (* RAM_DECOMP = "auto" *) 
  (* READ_DATA_WIDTH_A = "36" *) 
  (* READ_DATA_WIDTH_B = "36" *) 
  (* READ_LATENCY_A = "2" *) 
  (* READ_LATENCY_B = "2" *) 
  (* READ_RESET_VALUE_A = "0" *) 
  (* READ_RESET_VALUE_B = "0" *) 
  (* RST_MODE_A = "SYNC" *) 
  (* RST_MODE_B = "SYNC" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_EMBEDDED_CONSTRAINT = "0" *) 
  (* USE_MEM_INIT = "0" *) 
  (* USE_MEM_INIT_MMI = "0" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH_A = "36" *) 
  (* WRITE_DATA_WIDTH_B = "36" *) 
  (* WRITE_MODE_A = "2" *) 
  (* WRITE_MODE_B = "2" *) 
  (* WRITE_PROTECT = "1" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* rsta_loop_iter = "36" *) 
  (* rstb_loop_iter = "36" *) 
  zynq_bd_C2C2_0_xpm_memory_base__parameterized1 \gen_sdpram.xpm_memory_base_inst 
       (.addra(wr_pntr_ext[8:0]),
        .addrb(rd_pntr_ext),
        .clka(wr_clk),
        .clkb(rd_clk),
        .dbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ),
        .dbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ),
        .dina(din),
        .dinb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .douta(\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED [35:0]),
        .doutb(dout),
        .ena(1'b0),
        .enb(ram_rd_en_i),
        .injectdbiterra(1'b0),
        .injectdbiterrb(1'b0),
        .injectsbiterra(1'b0),
        .injectsbiterrb(1'b0),
        .regcea(1'b0),
        .regceb(\gen_fwft.ram_regout_en ),
        .rsta(1'b0),
        .rstb(rd_rst_busy),
        .sbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ),
        .sbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ),
        .sleep(sleep),
        .wea(wr_pntr_plus1_pf_carry),
        .web(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair290" *) 
  LUT3 #(
    .INIT(8'h2C)) 
    \gen_sdpram.xpm_memory_base_inst_i_3 
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .O(\gen_fwft.ram_regout_en ));
  FDRE #(
    .INIT(1'b0)) 
    \gof.overflow_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(overflow_i0),
        .Q(overflow),
        .R(1'b0));
  FDRE \grdc.rd_data_count_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q(rd_data_count[0]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(rd_data_count[1]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [3]),
        .Q(rd_data_count[2]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [4]),
        .Q(rd_data_count[3]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [5]),
        .Q(rd_data_count[4]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [6]),
        .Q(rd_data_count[5]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [7]),
        .Q(rd_data_count[6]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [8]),
        .Q(rd_data_count[7]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[9] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [9]),
        .Q(rd_data_count[8]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \guf.underflow_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(underflow_i0),
        .Q(underflow),
        .R(1'b0));
  FDRE \gwdc.wr_data_count_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [1]),
        .Q(wr_data_count[0]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [2]),
        .Q(wr_data_count[1]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [3]),
        .Q(wr_data_count[2]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [4]),
        .Q(wr_data_count[3]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [5]),
        .Q(wr_data_count[4]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [6]),
        .Q(wr_data_count[5]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [7]),
        .Q(wr_data_count[6]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [8]),
        .Q(wr_data_count[7]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[9] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [9]),
        .Q(wr_data_count[8]),
        .R(wrst_busy));
  zynq_bd_C2C2_0_xpm_counter_updn__parameterized3_10 rdp_inst
       (.D(\grdc.diff_wr_rd_pntr_rdc ),
        .DI({\gen_cdc_pntr.wpr_gray_reg_dc_n_0 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_1 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_2 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_5 ,\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .Q({rdp_inst_n_0,rd_pntr_ext}),
        .S(\gen_cdc_pntr.wpr_gray_reg_dc_n_16 ),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\count_value_i_reg[1]_0 (rdp_inst_n_21),
        .\count_value_i_reg[7]_0 ({rdp_inst_n_31,rdp_inst_n_32,rdp_inst_n_33,rdp_inst_n_34,rdp_inst_n_35,rdp_inst_n_36,rdp_inst_n_37,rdp_inst_n_38}),
        .\count_value_i_reg[9]_0 (rd_rst_busy),
        .\gen_pf_ic_rc.ram_empty_i_reg ({\gen_cdc_pntr.wpr_gray_reg_n_0 ,\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .\grdc.rd_data_count_i_reg[7] (count_value_i),
        .\grdc.rd_data_count_i_reg[9] (\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ),
        .\grdc.rd_data_count_i_reg[9]_0 ({\gen_cdc_pntr.wpr_gray_reg_dc_n_6 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_7 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 }),
        .ram_empty_i(ram_empty_i),
        .ram_rd_en_i(ram_rd_en_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[7] (rdp_inst_n_11),
        .src_in_bin(src_in_bin00_out[9:1]));
  zynq_bd_C2C2_0_xpm_counter_updn__parameterized4_11 rdpp1_inst
       (.E(ram_rd_en_i),
        .Q(curr_fwft_state),
        .\count_value_i_reg[0]_0 (rd_rst_busy),
        .\gen_pf_ic_rc.ram_empty_i_reg (rdp_inst_n_21),
        .\gen_pf_ic_rc.ram_empty_i_reg_0 (rdp_inst_n_11),
        .\gen_pf_ic_rc.ram_empty_i_reg_1 ({\gen_cdc_pntr.wpr_gray_reg_n_0 ,\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .ram_empty_i(ram_empty_i),
        .ram_empty_i0(ram_empty_i0),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  zynq_bd_C2C2_0_xpm_fifo_reg_bit_12 rst_d1_inst
       (.Q(diff_pntr_pf_q),
        .clr_full(clr_full),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] (rst_d1_inst_n_1),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg (full),
        .overflow_i0(overflow_i0),
        .prog_full(prog_full),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_counter_updn__parameterized3_13 wrp_inst
       (.D(\gwdc.diff_wr_rd_pntr1_out ),
        .Q(wr_pntr_ext),
        .\count_value_i_reg[5]_0 (full),
        .\gwdc.wr_data_count_i_reg[9] ({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_9 }),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_counter_updn__parameterized4_14 wrpp1_inst
       (.D(diff_pntr_pf_q0),
        .Q(wr_pntr_plus1_pf),
        .\count_value_i_reg[5]_0 (full),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] (rd_pntr_wr),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_counter_updn__parameterized5_15 wrpp2_inst
       (.Q({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7,wrpp2_inst_n_8}),
        .\count_value_i_reg[5]_0 (full),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_fifo_rst__xdcDup__4 xpm_fifo_rst_inst
       (.\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] (\grdc.rd_data_count_i0 ),
        .Q(curr_fwft_state),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[8] (full),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_0 (rd_rst_busy),
        .\guf.underflow_i_reg (empty),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .rst_d1(rst_d1),
        .underflow_i0(underflow_i0),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wr_rst_busy(wr_rst_busy),
        .wrst_busy(wrst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_DEST_SYNC_FF = "3" *) (* COMMON_CLOCK = "0" *) 
(* DOUT_RESET_VALUE = "0" *) (* ECC_MODE = "0" *) (* ENABLE_ECC = "0" *) 
(* EN_ADV_FEATURE = "16'b0000011100000111" *) (* EN_AE = "1'b0" *) (* EN_AF = "1'b0" *) 
(* EN_DVLD = "1'b0" *) (* EN_OF = "1'b1" *) (* EN_PE = "1'b1" *) 
(* EN_PF = "1'b1" *) (* EN_RDC = "1'b1" *) (* EN_UF = "1'b1" *) 
(* EN_WACK = "1'b0" *) (* EN_WDC = "1'b1" *) (* FG_EQ_ASYM_DOUT = "1'b0" *) 
(* FIFO_MEMORY_TYPE = "1" *) (* FIFO_MEM_TYPE = "1" *) (* FIFO_READ_DEPTH = "256" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_SIZE = "768" *) (* FIFO_WRITE_DEPTH = "256" *) 
(* FULL_RESET_VALUE = "1" *) (* FULL_RST_VAL = "1'b1" *) (* ORIG_REF_NAME = "xpm_fifo_base" *) 
(* PE_THRESH_ADJ = "8" *) (* PE_THRESH_MAX = "251" *) (* PE_THRESH_MIN = "5" *) 
(* PF_THRESH_ADJ = "126" *) (* PF_THRESH_MAX = "251" *) (* PF_THRESH_MIN = "8" *) 
(* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "128" *) (* RD_DATA_COUNT_WIDTH = "8" *) 
(* RD_DC_WIDTH_EXT = "9" *) (* RD_LATENCY = "2" *) (* RD_MODE = "1" *) 
(* RD_PNTR_WIDTH = "8" *) (* READ_DATA_WIDTH = "3" *) (* READ_MODE = "1" *) 
(* READ_MODE_LL = "1" *) (* RELATED_CLOCKS = "0" *) (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WIDTH_RATIO = "1" *) (* WRITE_DATA_WIDTH = "3" *) 
(* WR_DATA_COUNT_WIDTH = "8" *) (* WR_DC_WIDTH_EXT = "9" *) (* WR_DEPTH_LOG = "8" *) 
(* WR_PNTR_WIDTH = "8" *) (* WR_RD_RATIO = "0" *) (* WR_WIDTH_LOG = "2" *) 
(* XPM_MODULE = "TRUE" *) (* both_stages_valid = "3" *) (* invalid = "0" *) 
(* keep_hierarchy = "soft" *) (* stage1_valid = "2" *) (* stage2_valid = "1" *) 
module zynq_bd_C2C2_0_xpm_fifo_base__parameterized2
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    full_n,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [2:0]din;
  output full;
  output full_n;
  output prog_full;
  output [7:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [2:0]dout;
  output empty;
  output prog_empty;
  output [7:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [1:0]count_value_i;
  wire [1:0]curr_fwft_state;
  wire [7:0]diff_pntr_pe;
  wire [8:2]diff_pntr_pf_q;
  wire [8:2]diff_pntr_pf_q0;
  wire [2:0]din;
  wire [2:0]dout;
  wire empty;
  wire empty_fwft_i0;
  wire full;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_0 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_7 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_10 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_11 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_12 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_13 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_14 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_15 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_16 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_9 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_7 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_8 ;
  wire \gen_fwft.count_rst ;
  wire \gen_fwft.ram_regout_en ;
  wire \gen_fwft.rdpp1_inst_n_3 ;
  wire \gen_fwft.rdpp1_inst_n_4 ;
  wire \gen_fwft.rdpp1_inst_n_5 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ;
  wire [8:1]\grdc.diff_wr_rd_pntr_rdc ;
  wire \grdc.rd_data_count_i0 ;
  wire [8:1]\gwdc.diff_wr_rd_pntr1_out ;
  wire [1:0]next_fwft_state__0;
  wire overflow;
  wire overflow_i0;
  wire prog_empty;
  wire prog_full;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire [7:0]rd_data_count;
  wire rd_en;
  wire [7:0]rd_pntr_ext;
  wire [7:0]rd_pntr_wr;
  wire [7:0]rd_pntr_wr_cdc;
  wire [8:0]rd_pntr_wr_cdc_dc;
  wire rd_rst_busy;
  wire rdp_inst_n_10;
  wire rdp_inst_n_19;
  wire rdp_inst_n_20;
  wire rdp_inst_n_21;
  wire rdp_inst_n_22;
  wire rdp_inst_n_23;
  wire rdp_inst_n_24;
  wire rdp_inst_n_25;
  wire rdp_inst_n_26;
  wire rdp_inst_n_27;
  wire rdp_inst_n_28;
  wire rdp_inst_n_29;
  wire rdp_inst_n_30;
  wire rdp_inst_n_31;
  wire rdp_inst_n_8;
  wire rdp_inst_n_9;
  wire rdpp1_inst_n_0;
  wire rdpp1_inst_n_1;
  wire rdpp1_inst_n_2;
  wire rdpp1_inst_n_3;
  wire rdpp1_inst_n_4;
  wire rdpp1_inst_n_5;
  wire rdpp1_inst_n_6;
  wire rdpp1_inst_n_7;
  wire rst;
  wire rst_d1;
  wire rst_d1_inst_n_1;
  wire sleep;
  wire [1:1]src_in_bin00_out;
  wire underflow;
  wire underflow_i0;
  wire wr_clk;
  wire [7:0]wr_data_count;
  wire wr_en;
  wire [8:0]wr_pntr_ext;
  wire [8:1]wr_pntr_plus1_pf;
  wire wr_pntr_plus1_pf_carry;
  wire [7:0]wr_pntr_rd_cdc;
  wire [8:0]wr_pntr_rd_cdc_dc;
  wire wr_rst_busy;
  wire wrpp2_inst_n_0;
  wire wrpp2_inst_n_1;
  wire wrpp2_inst_n_2;
  wire wrpp2_inst_n_3;
  wire wrpp2_inst_n_4;
  wire wrpp2_inst_n_5;
  wire wrpp2_inst_n_6;
  wire wrpp2_inst_n_7;
  wire wrst_busy;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ;
  wire [2:0]\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign full_n = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  (* SOFT_HLUTNM = "soft_lutpair238" *) 
  LUT4 #(
    .INIT(16'h6A85)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[0]_i_1 
       (.I0(curr_fwft_state[0]),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(ram_empty_i),
        .O(next_fwft_state__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair238" *) 
  LUT4 #(
    .INIT(16'h3FF0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[1]_i_1 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(curr_fwft_state[0]),
        .O(next_fwft_state__0[1]));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[0]),
        .Q(curr_fwft_state[0]),
        .R(rd_rst_busy));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[1]),
        .Q(curr_fwft_state[1]),
        .R(rd_rst_busy));
  GND GND
       (.G(\<const0> ));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_gray__parameterized1 \gen_cdc_pntr.rd_pntr_cdc_dc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc_dc),
        .src_clk(rd_clk),
        .src_in_bin({rdp_inst_n_24,rdp_inst_n_25,rdp_inst_n_26,rdp_inst_n_27,rdp_inst_n_28,rdp_inst_n_29,rdp_inst_n_30,src_in_bin00_out,rdp_inst_n_31}));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "8" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_gray \gen_cdc_pntr.rd_pntr_cdc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc),
        .src_clk(rd_clk),
        .src_in_bin(rd_pntr_ext));
  zynq_bd_C2C2_0_xpm_fifo_reg_vec \gen_cdc_pntr.rpw_gray_reg 
       (.D(rd_pntr_wr_cdc),
        .Q(wr_pntr_plus1_pf),
        .d_out_int_reg(\gen_cdc_pntr.rpw_gray_reg_n_8 ),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7}),
        .\reg_out_i_reg[7]_0 (rd_pntr_wr),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized0_18 \gen_cdc_pntr.rpw_gray_reg_dc 
       (.D(rd_pntr_wr_cdc_dc),
        .Q({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 }),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_fifo_reg_vec_19 \gen_cdc_pntr.wpr_gray_reg 
       (.D(wr_pntr_rd_cdc),
        .Q(curr_fwft_state),
        .\gen_pf_ic_rc.ram_empty_i_reg (rd_pntr_ext),
        .\gen_pf_ic_rc.ram_empty_i_reg_0 ({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3,rdpp1_inst_n_4,rdpp1_inst_n_5,rdpp1_inst_n_6,rdpp1_inst_n_7}),
        .ram_empty_i(ram_empty_i),
        .ram_empty_i0(ram_empty_i0),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[0]_0 (rd_rst_busy),
        .\reg_out_i_reg[7]_0 ({\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }));
  zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized0_20 \gen_cdc_pntr.wpr_gray_reg_dc 
       (.D(\grdc.diff_wr_rd_pntr_rdc ),
        .DI({rdp_inst_n_9,\gen_fwft.rdpp1_inst_n_5 }),
        .Q({\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_16 }),
        .S({rdp_inst_n_19,rdp_inst_n_20,rdp_inst_n_21,rdp_inst_n_22,rdp_inst_n_23,\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .\grdc.rd_data_count_i_reg[7] (count_value_i[1]),
        .\grdc.rd_data_count_i_reg[7]_0 (rd_pntr_ext[6:1]),
        .\grdc.rd_data_count_i_reg[8] (rdp_inst_n_10),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[8]_0 (rd_rst_busy),
        .\reg_out_i_reg[8]_1 (wr_pntr_rd_cdc_dc));
  (* DEST_SYNC_FF = "5" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_gray__parameterized0 \gen_cdc_pntr.wr_pntr_cdc_dc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc_dc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "8" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_gray__10 \gen_cdc_pntr.wr_pntr_cdc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext[7:0]));
  (* SOFT_HLUTNM = "soft_lutpair237" *) 
  LUT4 #(
    .INIT(16'hF380)) 
    \gen_fwft.empty_fwft_i_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .I3(empty),
        .O(empty_fwft_i0));
  FDSE #(
    .INIT(1'b1)) 
    \gen_fwft.empty_fwft_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .Q(empty),
        .S(rd_rst_busy));
  zynq_bd_C2C2_0_xpm_counter_updn_21 \gen_fwft.rdpp1_inst 
       (.DI(\gen_fwft.rdpp1_inst_n_5 ),
        .Q(count_value_i),
        .S({\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\grdc.rd_data_count_i_reg[7] (rd_pntr_ext[1:0]),
        .\grdc.rd_data_count_i_reg[7]_0 ({\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_16 }),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .src_in_bin(src_in_bin00_out));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_cdc_pntr.rpw_gray_reg_n_8 ),
        .Q(full),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[0]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[1]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[2]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[3]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[4]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[5]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[6]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[7]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .R(rd_rst_busy));
  LUT4 #(
    .INIT(16'h88B8)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1 
       (.I0(prog_empty),
        .I1(empty),
        .I2(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h01FF)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ),
        .Q(prog_empty),
        .S(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[2]),
        .Q(diff_pntr_pf_q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[3]),
        .Q(diff_pntr_pf_q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[4]),
        .Q(diff_pntr_pf_q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[5]),
        .Q(diff_pntr_pf_q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[6]),
        .Q(diff_pntr_pf_q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[7]),
        .Q(diff_pntr_pf_q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[8]),
        .Q(diff_pntr_pf_q[8]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1_inst_n_1),
        .Q(prog_full),
        .S(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.ram_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i0),
        .Q(ram_empty_i),
        .S(rd_rst_busy));
  (* ADDR_WIDTH_A = "8" *) 
  (* ADDR_WIDTH_B = "8" *) 
  (* AUTO_SLEEP_TIME = "0" *) 
  (* BYTE_WRITE_WIDTH_A = "3" *) 
  (* BYTE_WRITE_WIDTH_B = "3" *) 
  (* CASCADE_HEIGHT = "0" *) 
  (* CLOCKING_MODE = "1" *) 
  (* ECC_BIT_RANGE = "[7:0]" *) 
  (* ECC_MODE = "0" *) 
  (* ECC_TYPE = "NONE" *) 
  (* IGNORE_INIT_SYNTH = "0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* MAX_NUM_CHAR = "0" *) 
  (* MEMORY_INIT_FILE = "none" *) 
  (* MEMORY_INIT_PARAM = "" *) 
  (* MEMORY_OPTIMIZATION = "true" *) 
  (* MEMORY_PRIMITIVE = "1" *) 
  (* MEMORY_SIZE = "768" *) 
  (* MEMORY_TYPE = "1" *) 
  (* MESSAGE_CONTROL = "0" *) 
  (* NUM_CHAR_LOC = "0" *) 
  (* P_ECC_MODE = "no_ecc" *) 
  (* P_ENABLE_BYTE_WRITE_A = "0" *) 
  (* P_ENABLE_BYTE_WRITE_B = "0" *) 
  (* P_MAX_DEPTH_DATA = "256" *) 
  (* P_MEMORY_OPT = "yes" *) 
  (* P_MEMORY_PRIMITIVE = "distributed" *) 
  (* P_MIN_WIDTH_DATA = "3" *) 
  (* P_MIN_WIDTH_DATA_A = "3" *) 
  (* P_MIN_WIDTH_DATA_B = "3" *) 
  (* P_MIN_WIDTH_DATA_ECC = "3" *) 
  (* P_MIN_WIDTH_DATA_LDW = "3" *) 
  (* P_MIN_WIDTH_DATA_SHFT = "5" *) 
  (* P_NUM_COLS_WRITE_A = "1" *) 
  (* P_NUM_COLS_WRITE_B = "1" *) 
  (* P_NUM_ROWS_READ_A = "1" *) 
  (* P_NUM_ROWS_READ_B = "1" *) 
  (* P_NUM_ROWS_WRITE_A = "1" *) 
  (* P_NUM_ROWS_WRITE_B = "1" *) 
  (* P_SDP_WRITE_MODE = "yes" *) 
  (* P_WIDTH_ADDR_LSB_READ_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) 
  (* P_WIDTH_ADDR_READ_A = "8" *) 
  (* P_WIDTH_ADDR_READ_B = "8" *) 
  (* P_WIDTH_ADDR_WRITE_A = "8" *) 
  (* P_WIDTH_ADDR_WRITE_B = "8" *) 
  (* P_WIDTH_COL_WRITE_A = "3" *) 
  (* P_WIDTH_COL_WRITE_B = "3" *) 
  (* RAM_DECOMP = "auto" *) 
  (* READ_DATA_WIDTH_A = "3" *) 
  (* READ_DATA_WIDTH_B = "3" *) 
  (* READ_LATENCY_A = "2" *) 
  (* READ_LATENCY_B = "2" *) 
  (* READ_RESET_VALUE_A = "0" *) 
  (* READ_RESET_VALUE_B = "0" *) 
  (* RST_MODE_A = "SYNC" *) 
  (* RST_MODE_B = "SYNC" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_EMBEDDED_CONSTRAINT = "1" *) 
  (* USE_MEM_INIT = "0" *) 
  (* USE_MEM_INIT_MMI = "0" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH_A = "3" *) 
  (* WRITE_DATA_WIDTH_B = "3" *) 
  (* WRITE_MODE_A = "2" *) 
  (* WRITE_MODE_B = "1" *) 
  (* WRITE_PROTECT = "1" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* rsta_loop_iter = "4" *) 
  (* rstb_loop_iter = "4" *) 
  zynq_bd_C2C2_0_xpm_memory_base__parameterized2 \gen_sdpram.xpm_memory_base_inst 
       (.addra(wr_pntr_ext[7:0]),
        .addrb(rd_pntr_ext),
        .clka(wr_clk),
        .clkb(rd_clk),
        .dbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ),
        .dbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ),
        .dina(din),
        .dinb({1'b0,1'b0,1'b0}),
        .douta(\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED [2:0]),
        .doutb(dout),
        .ena(wr_pntr_plus1_pf_carry),
        .enb(rdp_inst_n_8),
        .injectdbiterra(1'b0),
        .injectdbiterrb(1'b0),
        .injectsbiterra(1'b0),
        .injectsbiterrb(1'b0),
        .regcea(1'b0),
        .regceb(\gen_fwft.ram_regout_en ),
        .rsta(1'b0),
        .rstb(rd_rst_busy),
        .sbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ),
        .sbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ),
        .sleep(sleep),
        .wea(1'b0),
        .web(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair237" *) 
  LUT3 #(
    .INIT(8'h62)) 
    \gen_sdpram.xpm_memory_base_inst_i_3 
       (.I0(curr_fwft_state[0]),
        .I1(curr_fwft_state[1]),
        .I2(rd_en),
        .O(\gen_fwft.ram_regout_en ));
  FDRE #(
    .INIT(1'b0)) 
    \gof.overflow_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(overflow_i0),
        .Q(overflow),
        .R(1'b0));
  FDRE \grdc.rd_data_count_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q(rd_data_count[0]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(rd_data_count[1]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [3]),
        .Q(rd_data_count[2]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [4]),
        .Q(rd_data_count[3]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [5]),
        .Q(rd_data_count[4]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [6]),
        .Q(rd_data_count[5]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [7]),
        .Q(rd_data_count[6]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [8]),
        .Q(rd_data_count[7]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \guf.underflow_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(underflow_i0),
        .Q(underflow),
        .R(1'b0));
  FDRE \gwdc.wr_data_count_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [1]),
        .Q(wr_data_count[0]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [2]),
        .Q(wr_data_count[1]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [3]),
        .Q(wr_data_count[2]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [4]),
        .Q(wr_data_count[3]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [5]),
        .Q(wr_data_count[4]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [6]),
        .Q(wr_data_count[5]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [7]),
        .Q(wr_data_count[6]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [8]),
        .Q(wr_data_count[7]),
        .R(wrst_busy));
  zynq_bd_C2C2_0_xpm_counter_updn__parameterized0 rdp_inst
       (.D(diff_pntr_pe),
        .DI(rdp_inst_n_9),
        .Q(rd_pntr_ext),
        .S({rdp_inst_n_19,rdp_inst_n_20,rdp_inst_n_21,rdp_inst_n_22,rdp_inst_n_23}),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\count_value_i_reg[7]_0 (rdp_inst_n_10),
        .\count_value_i_reg[8]_0 (rd_rst_busy),
        .enb(rdp_inst_n_8),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ({\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .\grdc.rd_data_count_i_reg[7] (count_value_i),
        .\grdc.rd_data_count_i_reg[8] ({\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_15 }),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .src_in_bin({rdp_inst_n_24,rdp_inst_n_25,rdp_inst_n_26,rdp_inst_n_27,rdp_inst_n_28,rdp_inst_n_29,rdp_inst_n_30,rdp_inst_n_31}));
  zynq_bd_C2C2_0_xpm_counter_updn__parameterized1 rdpp1_inst
       (.E(rdp_inst_n_8),
        .Q({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3,rdpp1_inst_n_4,rdpp1_inst_n_5,rdpp1_inst_n_6,rdpp1_inst_n_7}),
        .\count_value_i_reg[0]_0 (rd_rst_busy),
        .\count_value_i_reg[1]_0 (curr_fwft_state),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  zynq_bd_C2C2_0_xpm_fifo_reg_bit_22 rst_d1_inst
       (.Q(diff_pntr_pf_q),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] (rst_d1_inst_n_1),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg (full),
        .overflow_i0(overflow_i0),
        .prog_full(prog_full),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_counter_updn__parameterized0_23 wrp_inst
       (.D(\gwdc.diff_wr_rd_pntr1_out ),
        .Q(wr_pntr_ext),
        .\count_value_i_reg[6]_0 (full),
        .\gwdc.wr_data_count_i_reg[8] ({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 }),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_counter_updn__parameterized1_24 wrpp1_inst
       (.D(diff_pntr_pf_q0),
        .Q(wr_pntr_plus1_pf),
        .\count_value_i_reg[6]_0 (full),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] (rd_pntr_wr),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_counter_updn__parameterized2 wrpp2_inst
       (.Q({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7}),
        .\count_value_i_reg[6]_0 (full),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_fifo_rst__xdcDup__5 xpm_fifo_rst_inst
       (.Q(curr_fwft_state),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[7] (full),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_0 (rd_rst_busy),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_1 (\grdc.rd_data_count_i0 ),
        .\guf.underflow_i_reg (empty),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .rst_d1(rst_d1),
        .underflow_i0(underflow_i0),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wr_rst_busy(wr_rst_busy),
        .wrst_busy(wrst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_DEST_SYNC_FF = "3" *) (* COMMON_CLOCK = "0" *) 
(* DOUT_RESET_VALUE = "0" *) (* ECC_MODE = "0" *) (* ENABLE_ECC = "0" *) 
(* EN_ADV_FEATURE = "16'b0000011100000111" *) (* EN_AE = "1'b0" *) (* EN_AF = "1'b0" *) 
(* EN_DVLD = "1'b0" *) (* EN_OF = "1'b1" *) (* EN_PE = "1'b1" *) 
(* EN_PF = "1'b1" *) (* EN_RDC = "1'b1" *) (* EN_UF = "1'b1" *) 
(* EN_WACK = "1'b0" *) (* EN_WDC = "1'b1" *) (* FG_EQ_ASYM_DOUT = "1'b0" *) 
(* FIFO_MEMORY_TYPE = "1" *) (* FIFO_MEM_TYPE = "1" *) (* FIFO_READ_DEPTH = "16" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_SIZE = "320" *) (* FIFO_WRITE_DEPTH = "16" *) 
(* FULL_RESET_VALUE = "1" *) (* FULL_RST_VAL = "1'b1" *) (* ORIG_REF_NAME = "xpm_fifo_base" *) 
(* PE_THRESH_ADJ = "8" *) (* PE_THRESH_MAX = "11" *) (* PE_THRESH_MIN = "5" *) 
(* PF_THRESH_ADJ = "9" *) (* PF_THRESH_MAX = "11" *) (* PF_THRESH_MIN = "8" *) 
(* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "11" *) (* RD_DATA_COUNT_WIDTH = "4" *) 
(* RD_DC_WIDTH_EXT = "5" *) (* RD_LATENCY = "2" *) (* RD_MODE = "1" *) 
(* RD_PNTR_WIDTH = "4" *) (* READ_DATA_WIDTH = "20" *) (* READ_MODE = "1" *) 
(* READ_MODE_LL = "1" *) (* RELATED_CLOCKS = "0" *) (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WIDTH_RATIO = "1" *) (* WRITE_DATA_WIDTH = "20" *) 
(* WR_DATA_COUNT_WIDTH = "4" *) (* WR_DC_WIDTH_EXT = "5" *) (* WR_DEPTH_LOG = "4" *) 
(* WR_PNTR_WIDTH = "4" *) (* WR_RD_RATIO = "0" *) (* WR_WIDTH_LOG = "5" *) 
(* XPM_MODULE = "TRUE" *) (* both_stages_valid = "3" *) (* invalid = "0" *) 
(* keep_hierarchy = "soft" *) (* stage1_valid = "2" *) (* stage2_valid = "1" *) 
module zynq_bd_C2C2_0_xpm_fifo_base__parameterized3
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    full_n,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [19:0]din;
  output full;
  output full_n;
  output prog_full;
  output [3:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [19:0]dout;
  output empty;
  output prog_empty;
  output [3:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire clr_full;
  wire [1:0]count_value_i;
  wire [1:0]curr_fwft_state;
  wire [3:0]diff_pntr_pe;
  wire [4:1]diff_pntr_pf_q;
  wire [4:1]diff_pntr_pf_q0;
  wire [19:0]din;
  wire [19:0]dout;
  wire empty;
  wire empty_fwft_i0;
  wire full;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_5 ;
  wire \gen_fwft.count_rst ;
  wire \gen_fwft.ram_regout_en ;
  wire \gen_fwft.rdpp1_inst_n_3 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ;
  wire [4:1]\grdc.diff_wr_rd_pntr_rdc ;
  wire \grdc.rd_data_count_i0 ;
  wire [4:1]\gwdc.diff_wr_rd_pntr1_out ;
  wire [1:0]next_fwft_state__0;
  wire overflow;
  wire overflow_i0;
  wire prog_empty;
  wire prog_full;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire [3:0]rd_data_count;
  wire rd_en;
  wire [3:0]rd_pntr_ext;
  wire [3:0]rd_pntr_wr;
  wire [3:0]rd_pntr_wr_cdc;
  wire [4:0]rd_pntr_wr_cdc_dc;
  wire rd_rst_busy;
  wire rdp_inst_n_10;
  wire rdp_inst_n_11;
  wire rdp_inst_n_12;
  wire rdp_inst_n_8;
  wire rdp_inst_n_9;
  wire rdpp1_inst_n_0;
  wire rdpp1_inst_n_1;
  wire rdpp1_inst_n_2;
  wire rdpp1_inst_n_3;
  wire rst;
  wire rst_d1;
  wire rst_d1_inst_n_1;
  wire sleep;
  wire [1:1]src_in_bin00_out;
  wire underflow;
  wire underflow_i0;
  wire wr_clk;
  wire [3:0]wr_data_count;
  wire wr_en;
  wire [4:0]wr_pntr_ext;
  wire [3:1]wr_pntr_plus1_pf;
  wire wr_pntr_plus1_pf_carry;
  wire [3:0]wr_pntr_rd_cdc;
  wire [4:0]wr_pntr_rd_cdc_dc;
  wire wr_rst_busy;
  wire wrpp1_inst_n_4;
  wire wrpp2_inst_n_0;
  wire wrpp2_inst_n_1;
  wire wrpp2_inst_n_2;
  wire wrpp2_inst_n_3;
  wire wrst_busy;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ;
  wire [19:0]\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign full_n = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT4 #(
    .INIT(16'h6A85)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[0]_i_1 
       (.I0(curr_fwft_state[0]),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(ram_empty_i),
        .O(next_fwft_state__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT4 #(
    .INIT(16'h3FF0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[1]_i_1 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(curr_fwft_state[0]),
        .O(next_fwft_state__0[1]));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[0]),
        .Q(curr_fwft_state[0]),
        .R(rd_rst_busy));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[1]),
        .Q(curr_fwft_state[1]),
        .R(rd_rst_busy));
  GND GND
       (.G(\<const0> ));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "5" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_gray__parameterized6 \gen_cdc_pntr.rd_pntr_cdc_dc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc_dc),
        .src_clk(rd_clk),
        .src_in_bin({rdp_inst_n_9,rdp_inst_n_10,rdp_inst_n_11,src_in_bin00_out,rdp_inst_n_12}));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "4" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_gray__parameterized4 \gen_cdc_pntr.rd_pntr_cdc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc),
        .src_clk(rd_clk),
        .src_in_bin(rd_pntr_ext));
  zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized2_54 \gen_cdc_pntr.rpw_gray_reg 
       (.D(diff_pntr_pf_q0[4:3]),
        .E(wr_pntr_plus1_pf_carry),
        .Q({rd_pntr_wr[3],rd_pntr_wr[1:0]}),
        .clr_full(clr_full),
        .\count_value_i_reg[3] (\gen_cdc_pntr.rpw_gray_reg_n_5 ),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ({wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3}),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_0 (wrpp2_inst_n_0),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] (full),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] (wr_pntr_plus1_pf),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 (wrpp1_inst_n_4),
        .\reg_out_i_reg[3]_0 (rd_pntr_wr_cdc),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized3_55 \gen_cdc_pntr.rpw_gray_reg_dc 
       (.D({\gwdc.diff_wr_rd_pntr1_out [4:3],\gwdc.diff_wr_rd_pntr1_out [1]}),
        .Q({\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 }),
        .\gwdc.wr_data_count_i_reg[4] (wr_pntr_ext),
        .\reg_out_i_reg[4]_0 (rd_pntr_wr_cdc_dc),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized2_56 \gen_cdc_pntr.wpr_gray_reg 
       (.D(diff_pntr_pe[1:0]),
        .Q({\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 }),
        .enb(rdp_inst_n_8),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] (curr_fwft_state),
        .\gen_pf_ic_rc.ram_empty_i_reg (rd_pntr_ext),
        .\gen_pf_ic_rc.ram_empty_i_reg_0 ({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3}),
        .ram_empty_i(ram_empty_i),
        .ram_empty_i0(ram_empty_i0),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[0]_0 (rd_rst_busy),
        .\reg_out_i_reg[3]_0 (wr_pntr_rd_cdc));
  zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized3_57 \gen_cdc_pntr.wpr_gray_reg_dc 
       (.D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q({\gen_cdc_pntr.wpr_gray_reg_dc_n_1 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_2 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_5 }),
        .\grdc.rd_data_count_i_reg[1] (count_value_i),
        .\grdc.rd_data_count_i_reg[4] ({rd_pntr_ext[3],rd_pntr_ext[1:0]}),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[3]_0 (\gen_cdc_pntr.wpr_gray_reg_dc_n_6 ),
        .\reg_out_i_reg[4]_0 (rd_rst_busy),
        .\reg_out_i_reg[4]_1 (wr_pntr_rd_cdc_dc));
  (* DEST_SYNC_FF = "5" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "5" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_gray__parameterized5 \gen_cdc_pntr.wr_pntr_cdc_dc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc_dc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "4" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_gray__parameterized4__6 \gen_cdc_pntr.wr_pntr_cdc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext[3:0]));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT4 #(
    .INIT(16'hF380)) 
    \gen_fwft.empty_fwft_i_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .I3(empty),
        .O(empty_fwft_i0));
  FDSE #(
    .INIT(1'b1)) 
    \gen_fwft.empty_fwft_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .Q(empty),
        .S(rd_rst_busy));
  zynq_bd_C2C2_0_xpm_counter_updn_58 \gen_fwft.rdpp1_inst 
       (.D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(count_value_i),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[1]_0 (\gen_fwft.rdpp1_inst_n_3 ),
        .\count_value_i_reg[1]_1 (curr_fwft_state),
        .\grdc.rd_data_count_i_reg[2] ({\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_5 }),
        .\grdc.rd_data_count_i_reg[2]_0 (rd_pntr_ext[2:0]),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .src_in_bin(src_in_bin00_out));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_cdc_pntr.rpw_gray_reg_n_5 ),
        .Q(full),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[0]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[1]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[2]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[3]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .R(rd_rst_busy));
  LUT6 #(
    .INIT(64'h8888888BBBBBBBBB)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1 
       (.I0(prog_empty),
        .I1(empty),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .I4(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .I5(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ),
        .Q(prog_empty),
        .S(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[1]),
        .Q(diff_pntr_pf_q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[2]),
        .Q(diff_pntr_pf_q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[3]),
        .Q(diff_pntr_pf_q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[4]),
        .Q(diff_pntr_pf_q[4]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1_inst_n_1),
        .Q(prog_full),
        .S(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.ram_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i0),
        .Q(ram_empty_i),
        .S(rd_rst_busy));
  (* ADDR_WIDTH_A = "4" *) 
  (* ADDR_WIDTH_B = "4" *) 
  (* AUTO_SLEEP_TIME = "0" *) 
  (* BYTE_WRITE_WIDTH_A = "20" *) 
  (* BYTE_WRITE_WIDTH_B = "20" *) 
  (* CASCADE_HEIGHT = "0" *) 
  (* CLOCKING_MODE = "1" *) 
  (* ECC_BIT_RANGE = "[7:0]" *) 
  (* ECC_MODE = "0" *) 
  (* ECC_TYPE = "NONE" *) 
  (* IGNORE_INIT_SYNTH = "0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* MAX_NUM_CHAR = "0" *) 
  (* MEMORY_INIT_FILE = "none" *) 
  (* MEMORY_INIT_PARAM = "" *) 
  (* MEMORY_OPTIMIZATION = "true" *) 
  (* MEMORY_PRIMITIVE = "1" *) 
  (* MEMORY_SIZE = "320" *) 
  (* MEMORY_TYPE = "1" *) 
  (* MESSAGE_CONTROL = "0" *) 
  (* NUM_CHAR_LOC = "0" *) 
  (* P_ECC_MODE = "no_ecc" *) 
  (* P_ENABLE_BYTE_WRITE_A = "0" *) 
  (* P_ENABLE_BYTE_WRITE_B = "0" *) 
  (* P_MAX_DEPTH_DATA = "16" *) 
  (* P_MEMORY_OPT = "yes" *) 
  (* P_MEMORY_PRIMITIVE = "distributed" *) 
  (* P_MIN_WIDTH_DATA = "20" *) 
  (* P_MIN_WIDTH_DATA_A = "20" *) 
  (* P_MIN_WIDTH_DATA_B = "20" *) 
  (* P_MIN_WIDTH_DATA_ECC = "20" *) 
  (* P_MIN_WIDTH_DATA_LDW = "4" *) 
  (* P_MIN_WIDTH_DATA_SHFT = "20" *) 
  (* P_NUM_COLS_WRITE_A = "1" *) 
  (* P_NUM_COLS_WRITE_B = "1" *) 
  (* P_NUM_ROWS_READ_A = "1" *) 
  (* P_NUM_ROWS_READ_B = "1" *) 
  (* P_NUM_ROWS_WRITE_A = "1" *) 
  (* P_NUM_ROWS_WRITE_B = "1" *) 
  (* P_SDP_WRITE_MODE = "yes" *) 
  (* P_WIDTH_ADDR_LSB_READ_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) 
  (* P_WIDTH_ADDR_READ_A = "4" *) 
  (* P_WIDTH_ADDR_READ_B = "4" *) 
  (* P_WIDTH_ADDR_WRITE_A = "4" *) 
  (* P_WIDTH_ADDR_WRITE_B = "4" *) 
  (* P_WIDTH_COL_WRITE_A = "20" *) 
  (* P_WIDTH_COL_WRITE_B = "20" *) 
  (* RAM_DECOMP = "auto" *) 
  (* READ_DATA_WIDTH_A = "20" *) 
  (* READ_DATA_WIDTH_B = "20" *) 
  (* READ_LATENCY_A = "2" *) 
  (* READ_LATENCY_B = "2" *) 
  (* READ_RESET_VALUE_A = "0" *) 
  (* READ_RESET_VALUE_B = "0" *) 
  (* RST_MODE_A = "SYNC" *) 
  (* RST_MODE_B = "SYNC" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_EMBEDDED_CONSTRAINT = "1" *) 
  (* USE_MEM_INIT = "0" *) 
  (* USE_MEM_INIT_MMI = "0" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH_A = "20" *) 
  (* WRITE_DATA_WIDTH_B = "20" *) 
  (* WRITE_MODE_A = "2" *) 
  (* WRITE_MODE_B = "1" *) 
  (* WRITE_PROTECT = "1" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* rsta_loop_iter = "20" *) 
  (* rstb_loop_iter = "20" *) 
  zynq_bd_C2C2_0_xpm_memory_base__parameterized3 \gen_sdpram.xpm_memory_base_inst 
       (.addra(wr_pntr_ext[3:0]),
        .addrb(rd_pntr_ext),
        .clka(wr_clk),
        .clkb(rd_clk),
        .dbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ),
        .dbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ),
        .dina(din),
        .dinb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .douta(\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED [19:0]),
        .doutb(dout),
        .ena(wr_pntr_plus1_pf_carry),
        .enb(rdp_inst_n_8),
        .injectdbiterra(1'b0),
        .injectdbiterrb(1'b0),
        .injectsbiterra(1'b0),
        .injectsbiterrb(1'b0),
        .regcea(1'b0),
        .regceb(\gen_fwft.ram_regout_en ),
        .rsta(1'b0),
        .rstb(rd_rst_busy),
        .sbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ),
        .sbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ),
        .sleep(sleep),
        .wea(1'b0),
        .web(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT3 #(
    .INIT(8'h62)) 
    \gen_sdpram.xpm_memory_base_inst_i_3 
       (.I0(curr_fwft_state[0]),
        .I1(curr_fwft_state[1]),
        .I2(rd_en),
        .O(\gen_fwft.ram_regout_en ));
  FDRE #(
    .INIT(1'b0)) 
    \gof.overflow_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(overflow_i0),
        .Q(overflow),
        .R(1'b0));
  FDRE \grdc.rd_data_count_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q(rd_data_count[0]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(rd_data_count[1]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [3]),
        .Q(rd_data_count[2]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [4]),
        .Q(rd_data_count[3]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \guf.underflow_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(underflow_i0),
        .Q(underflow),
        .R(1'b0));
  FDRE \gwdc.wr_data_count_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [1]),
        .Q(wr_data_count[0]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [2]),
        .Q(wr_data_count[1]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [3]),
        .Q(wr_data_count[2]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [4]),
        .Q(wr_data_count[3]),
        .R(wrst_busy));
  zynq_bd_C2C2_0_xpm_counter_updn__parameterized6_59 rdp_inst
       (.D(diff_pntr_pe[3:2]),
        .E(rdp_inst_n_8),
        .Q(rd_pntr_ext),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\count_value_i_reg[4]_0 (rd_rst_busy),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] ({\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 }),
        .\grdc.rd_data_count_i_reg[4] (\gen_fwft.rdpp1_inst_n_3 ),
        .\grdc.rd_data_count_i_reg[4]_0 ({\gen_cdc_pntr.wpr_gray_reg_dc_n_1 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_2 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 }),
        .\grdc.rd_data_count_i_reg[4]_1 (\gen_cdc_pntr.wpr_gray_reg_dc_n_6 ),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[2] (\grdc.diff_wr_rd_pntr_rdc [4:3]),
        .\src_gray_ff_reg[4] (count_value_i),
        .src_in_bin({rdp_inst_n_9,rdp_inst_n_10,rdp_inst_n_11,rdp_inst_n_12}));
  zynq_bd_C2C2_0_xpm_counter_updn__parameterized7_60 rdpp1_inst
       (.E(rdp_inst_n_8),
        .Q({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3}),
        .\count_value_i_reg[0]_0 (rd_rst_busy),
        .\count_value_i_reg[1]_0 (curr_fwft_state),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  zynq_bd_C2C2_0_xpm_fifo_reg_bit_61 rst_d1_inst
       (.D(diff_pntr_pf_q0[1]),
        .Q(diff_pntr_pf_q),
        .clr_full(clr_full),
        .d_out_int_reg_0(rst_d1_inst_n_1),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] (rd_pntr_wr[0]),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1]_0 (wr_pntr_plus1_pf[1]),
        .\gof.overflow_i_reg (full),
        .overflow_i0(overflow_i0),
        .prog_full(prog_full),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_counter_updn__parameterized6_62 wrp_inst
       (.D(\gwdc.diff_wr_rd_pntr1_out [2]),
        .E(wr_pntr_plus1_pf_carry),
        .Q(wr_pntr_ext),
        .\gwdc.wr_data_count_i_reg[2] ({\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 }),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_counter_updn__parameterized7_63 wrpp1_inst
       (.D(diff_pntr_pf_q0[2]),
        .E(wr_pntr_plus1_pf_carry),
        .Q(wr_pntr_plus1_pf),
        .\count_value_i_reg[3]_0 (wrpp1_inst_n_4),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ({rd_pntr_wr[3],rd_pntr_wr[1:0]}),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_counter_updn__parameterized8_64 wrpp2_inst
       (.E(wr_pntr_plus1_pf_carry),
        .Q(rd_pntr_wr[3]),
        .\count_value_i_reg[2]_0 ({wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3}),
        .\count_value_i_reg[3]_0 (wrpp2_inst_n_0),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_fifo_rst xpm_fifo_rst_inst
       (.E(wr_pntr_plus1_pf_carry),
        .Q(curr_fwft_state),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[3] (full),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_0 (rd_rst_busy),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_1 (\grdc.rd_data_count_i0 ),
        .\guf.underflow_i_reg (empty),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .rst_d1(rst_d1),
        .underflow_i0(underflow_i0),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy),
        .wrst_busy(wrst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_DEST_SYNC_FF = "3" *) (* COMMON_CLOCK = "0" *) 
(* DOUT_RESET_VALUE = "0" *) (* ECC_MODE = "0" *) (* ENABLE_ECC = "0" *) 
(* EN_ADV_FEATURE = "16'b0000011100000111" *) (* EN_AE = "1'b0" *) (* EN_AF = "1'b0" *) 
(* EN_DVLD = "1'b0" *) (* EN_OF = "1'b1" *) (* EN_PE = "1'b1" *) 
(* EN_PF = "1'b1" *) (* EN_RDC = "1'b1" *) (* EN_UF = "1'b1" *) 
(* EN_WACK = "1'b0" *) (* EN_WDC = "1'b1" *) (* FG_EQ_ASYM_DOUT = "1'b0" *) 
(* FIFO_MEMORY_TYPE = "1" *) (* FIFO_MEM_TYPE = "1" *) (* FIFO_READ_DEPTH = "16" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_SIZE = "320" *) (* FIFO_WRITE_DEPTH = "16" *) 
(* FULL_RESET_VALUE = "1" *) (* FULL_RST_VAL = "1'b1" *) (* ORIG_REF_NAME = "xpm_fifo_base" *) 
(* PE_THRESH_ADJ = "8" *) (* PE_THRESH_MAX = "11" *) (* PE_THRESH_MIN = "5" *) 
(* PF_THRESH_ADJ = "9" *) (* PF_THRESH_MAX = "11" *) (* PF_THRESH_MIN = "8" *) 
(* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "11" *) (* RD_DATA_COUNT_WIDTH = "4" *) 
(* RD_DC_WIDTH_EXT = "5" *) (* RD_LATENCY = "2" *) (* RD_MODE = "1" *) 
(* RD_PNTR_WIDTH = "4" *) (* READ_DATA_WIDTH = "20" *) (* READ_MODE = "1" *) 
(* READ_MODE_LL = "1" *) (* RELATED_CLOCKS = "0" *) (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WIDTH_RATIO = "1" *) (* WRITE_DATA_WIDTH = "20" *) 
(* WR_DATA_COUNT_WIDTH = "4" *) (* WR_DC_WIDTH_EXT = "5" *) (* WR_DEPTH_LOG = "4" *) 
(* WR_PNTR_WIDTH = "4" *) (* WR_RD_RATIO = "0" *) (* WR_WIDTH_LOG = "5" *) 
(* XPM_MODULE = "TRUE" *) (* both_stages_valid = "3" *) (* invalid = "0" *) 
(* keep_hierarchy = "soft" *) (* stage1_valid = "2" *) (* stage2_valid = "1" *) 
module zynq_bd_C2C2_0_xpm_fifo_base__parameterized3__xdcDup__1
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    full_n,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [19:0]din;
  output full;
  output full_n;
  output prog_full;
  output [3:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [19:0]dout;
  output empty;
  output prog_empty;
  output [3:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire clr_full;
  wire [1:0]count_value_i;
  wire [1:0]curr_fwft_state;
  wire [3:0]diff_pntr_pe;
  wire [4:1]diff_pntr_pf_q;
  wire [4:1]diff_pntr_pf_q0;
  wire [19:0]din;
  wire [19:0]dout;
  wire empty;
  wire empty_fwft_i0;
  wire full;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_5 ;
  wire \gen_fwft.count_rst ;
  wire \gen_fwft.ram_regout_en ;
  wire \gen_fwft.rdpp1_inst_n_3 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ;
  wire [4:1]\grdc.diff_wr_rd_pntr_rdc ;
  wire \grdc.rd_data_count_i0 ;
  wire [4:1]\gwdc.diff_wr_rd_pntr1_out ;
  wire [1:0]next_fwft_state__0;
  wire overflow;
  wire overflow_i0;
  wire prog_empty;
  wire prog_full;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire [3:0]rd_data_count;
  wire rd_en;
  wire [3:0]rd_pntr_ext;
  wire [3:0]rd_pntr_wr;
  wire [3:0]rd_pntr_wr_cdc;
  wire [4:0]rd_pntr_wr_cdc_dc;
  wire rd_rst_busy;
  wire rdp_inst_n_10;
  wire rdp_inst_n_11;
  wire rdp_inst_n_12;
  wire rdp_inst_n_8;
  wire rdp_inst_n_9;
  wire rdpp1_inst_n_0;
  wire rdpp1_inst_n_1;
  wire rdpp1_inst_n_2;
  wire rdpp1_inst_n_3;
  wire rst;
  wire rst_d1;
  wire rst_d1_inst_n_1;
  wire sleep;
  wire [1:1]src_in_bin00_out;
  wire underflow;
  wire underflow_i0;
  wire wr_clk;
  wire [3:0]wr_data_count;
  wire wr_en;
  wire [4:0]wr_pntr_ext;
  wire [3:1]wr_pntr_plus1_pf;
  wire wr_pntr_plus1_pf_carry;
  wire [3:0]wr_pntr_rd_cdc;
  wire [4:0]wr_pntr_rd_cdc_dc;
  wire wr_rst_busy;
  wire wrpp1_inst_n_4;
  wire wrpp2_inst_n_0;
  wire wrpp2_inst_n_1;
  wire wrpp2_inst_n_2;
  wire wrpp2_inst_n_3;
  wire wrst_busy;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ;
  wire [19:0]\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign full_n = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT4 #(
    .INIT(16'h6A85)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[0]_i_1 
       (.I0(curr_fwft_state[0]),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(ram_empty_i),
        .O(next_fwft_state__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT4 #(
    .INIT(16'h3FF0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[1]_i_1 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(curr_fwft_state[0]),
        .O(next_fwft_state__0[1]));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[0]),
        .Q(curr_fwft_state[0]),
        .R(rd_rst_busy));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[1]),
        .Q(curr_fwft_state[1]),
        .R(rd_rst_busy));
  GND GND
       (.G(\<const0> ));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "5" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_gray__parameterized6__2 \gen_cdc_pntr.rd_pntr_cdc_dc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc_dc),
        .src_clk(rd_clk),
        .src_in_bin({rdp_inst_n_9,rdp_inst_n_10,rdp_inst_n_11,src_in_bin00_out,rdp_inst_n_12}));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "4" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_gray__parameterized4__5 \gen_cdc_pntr.rd_pntr_cdc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc),
        .src_clk(rd_clk),
        .src_in_bin(rd_pntr_ext));
  zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized2 \gen_cdc_pntr.rpw_gray_reg 
       (.D(diff_pntr_pf_q0[4:3]),
        .E(wr_pntr_plus1_pf_carry),
        .Q({rd_pntr_wr[3],rd_pntr_wr[1:0]}),
        .clr_full(clr_full),
        .\count_value_i_reg[3] (\gen_cdc_pntr.rpw_gray_reg_n_5 ),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ({wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3}),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_0 (wrpp2_inst_n_0),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] (full),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] (wr_pntr_plus1_pf),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 (wrpp1_inst_n_4),
        .\reg_out_i_reg[3]_0 (rd_pntr_wr_cdc),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized3 \gen_cdc_pntr.rpw_gray_reg_dc 
       (.D({\gwdc.diff_wr_rd_pntr1_out [4:3],\gwdc.diff_wr_rd_pntr1_out [1]}),
        .Q({\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 }),
        .\gwdc.wr_data_count_i_reg[4] (wr_pntr_ext),
        .\reg_out_i_reg[4]_0 (rd_pntr_wr_cdc_dc),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized2_48 \gen_cdc_pntr.wpr_gray_reg 
       (.D(diff_pntr_pe[1:0]),
        .Q({\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 }),
        .enb(rdp_inst_n_8),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] (curr_fwft_state),
        .\gen_pf_ic_rc.ram_empty_i_reg (rd_pntr_ext),
        .\gen_pf_ic_rc.ram_empty_i_reg_0 ({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3}),
        .ram_empty_i(ram_empty_i),
        .ram_empty_i0(ram_empty_i0),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[0]_0 (rd_rst_busy),
        .\reg_out_i_reg[3]_0 (wr_pntr_rd_cdc));
  zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized3_49 \gen_cdc_pntr.wpr_gray_reg_dc 
       (.D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q({\gen_cdc_pntr.wpr_gray_reg_dc_n_1 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_2 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_5 }),
        .\grdc.rd_data_count_i_reg[1] (count_value_i),
        .\grdc.rd_data_count_i_reg[4] ({rd_pntr_ext[3],rd_pntr_ext[1:0]}),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[3]_0 (\gen_cdc_pntr.wpr_gray_reg_dc_n_6 ),
        .\reg_out_i_reg[4]_0 (rd_rst_busy),
        .\reg_out_i_reg[4]_1 (wr_pntr_rd_cdc_dc));
  (* DEST_SYNC_FF = "5" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "5" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_gray__parameterized5__2 \gen_cdc_pntr.wr_pntr_cdc_dc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc_dc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "4" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_gray__parameterized4__4 \gen_cdc_pntr.wr_pntr_cdc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext[3:0]));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT4 #(
    .INIT(16'hF380)) 
    \gen_fwft.empty_fwft_i_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .I3(empty),
        .O(empty_fwft_i0));
  FDSE #(
    .INIT(1'b1)) 
    \gen_fwft.empty_fwft_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .Q(empty),
        .S(rd_rst_busy));
  zynq_bd_C2C2_0_xpm_counter_updn_50 \gen_fwft.rdpp1_inst 
       (.D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(count_value_i),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[1]_0 (\gen_fwft.rdpp1_inst_n_3 ),
        .\count_value_i_reg[1]_1 (curr_fwft_state),
        .\grdc.rd_data_count_i_reg[2] ({\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_5 }),
        .\grdc.rd_data_count_i_reg[2]_0 (rd_pntr_ext[2:0]),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .src_in_bin(src_in_bin00_out));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_cdc_pntr.rpw_gray_reg_n_5 ),
        .Q(full),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[0]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[1]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[2]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[3]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .R(rd_rst_busy));
  LUT6 #(
    .INIT(64'h8888888BBBBBBBBB)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1 
       (.I0(prog_empty),
        .I1(empty),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .I4(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .I5(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ),
        .Q(prog_empty),
        .S(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[1]),
        .Q(diff_pntr_pf_q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[2]),
        .Q(diff_pntr_pf_q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[3]),
        .Q(diff_pntr_pf_q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[4]),
        .Q(diff_pntr_pf_q[4]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1_inst_n_1),
        .Q(prog_full),
        .S(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.ram_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i0),
        .Q(ram_empty_i),
        .S(rd_rst_busy));
  (* ADDR_WIDTH_A = "4" *) 
  (* ADDR_WIDTH_B = "4" *) 
  (* AUTO_SLEEP_TIME = "0" *) 
  (* BYTE_WRITE_WIDTH_A = "20" *) 
  (* BYTE_WRITE_WIDTH_B = "20" *) 
  (* CASCADE_HEIGHT = "0" *) 
  (* CLOCKING_MODE = "1" *) 
  (* ECC_BIT_RANGE = "[7:0]" *) 
  (* ECC_MODE = "0" *) 
  (* ECC_TYPE = "NONE" *) 
  (* IGNORE_INIT_SYNTH = "0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* MAX_NUM_CHAR = "0" *) 
  (* MEMORY_INIT_FILE = "none" *) 
  (* MEMORY_INIT_PARAM = "" *) 
  (* MEMORY_OPTIMIZATION = "true" *) 
  (* MEMORY_PRIMITIVE = "1" *) 
  (* MEMORY_SIZE = "320" *) 
  (* MEMORY_TYPE = "1" *) 
  (* MESSAGE_CONTROL = "0" *) 
  (* NUM_CHAR_LOC = "0" *) 
  (* P_ECC_MODE = "no_ecc" *) 
  (* P_ENABLE_BYTE_WRITE_A = "0" *) 
  (* P_ENABLE_BYTE_WRITE_B = "0" *) 
  (* P_MAX_DEPTH_DATA = "16" *) 
  (* P_MEMORY_OPT = "yes" *) 
  (* P_MEMORY_PRIMITIVE = "distributed" *) 
  (* P_MIN_WIDTH_DATA = "20" *) 
  (* P_MIN_WIDTH_DATA_A = "20" *) 
  (* P_MIN_WIDTH_DATA_B = "20" *) 
  (* P_MIN_WIDTH_DATA_ECC = "20" *) 
  (* P_MIN_WIDTH_DATA_LDW = "4" *) 
  (* P_MIN_WIDTH_DATA_SHFT = "20" *) 
  (* P_NUM_COLS_WRITE_A = "1" *) 
  (* P_NUM_COLS_WRITE_B = "1" *) 
  (* P_NUM_ROWS_READ_A = "1" *) 
  (* P_NUM_ROWS_READ_B = "1" *) 
  (* P_NUM_ROWS_WRITE_A = "1" *) 
  (* P_NUM_ROWS_WRITE_B = "1" *) 
  (* P_SDP_WRITE_MODE = "yes" *) 
  (* P_WIDTH_ADDR_LSB_READ_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) 
  (* P_WIDTH_ADDR_READ_A = "4" *) 
  (* P_WIDTH_ADDR_READ_B = "4" *) 
  (* P_WIDTH_ADDR_WRITE_A = "4" *) 
  (* P_WIDTH_ADDR_WRITE_B = "4" *) 
  (* P_WIDTH_COL_WRITE_A = "20" *) 
  (* P_WIDTH_COL_WRITE_B = "20" *) 
  (* RAM_DECOMP = "auto" *) 
  (* READ_DATA_WIDTH_A = "20" *) 
  (* READ_DATA_WIDTH_B = "20" *) 
  (* READ_LATENCY_A = "2" *) 
  (* READ_LATENCY_B = "2" *) 
  (* READ_RESET_VALUE_A = "0" *) 
  (* READ_RESET_VALUE_B = "0" *) 
  (* RST_MODE_A = "SYNC" *) 
  (* RST_MODE_B = "SYNC" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_EMBEDDED_CONSTRAINT = "1" *) 
  (* USE_MEM_INIT = "0" *) 
  (* USE_MEM_INIT_MMI = "0" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH_A = "20" *) 
  (* WRITE_DATA_WIDTH_B = "20" *) 
  (* WRITE_MODE_A = "2" *) 
  (* WRITE_MODE_B = "1" *) 
  (* WRITE_PROTECT = "1" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* rsta_loop_iter = "20" *) 
  (* rstb_loop_iter = "20" *) 
  zynq_bd_C2C2_0_xpm_memory_base__parameterized3__2 \gen_sdpram.xpm_memory_base_inst 
       (.addra(wr_pntr_ext[3:0]),
        .addrb(rd_pntr_ext),
        .clka(wr_clk),
        .clkb(rd_clk),
        .dbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ),
        .dbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ),
        .dina(din),
        .dinb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .douta(\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED [19:0]),
        .doutb(dout),
        .ena(wr_pntr_plus1_pf_carry),
        .enb(rdp_inst_n_8),
        .injectdbiterra(1'b0),
        .injectdbiterrb(1'b0),
        .injectsbiterra(1'b0),
        .injectsbiterrb(1'b0),
        .regcea(1'b0),
        .regceb(\gen_fwft.ram_regout_en ),
        .rsta(1'b0),
        .rstb(rd_rst_busy),
        .sbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ),
        .sbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ),
        .sleep(sleep),
        .wea(1'b0),
        .web(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT3 #(
    .INIT(8'h62)) 
    \gen_sdpram.xpm_memory_base_inst_i_3 
       (.I0(curr_fwft_state[0]),
        .I1(curr_fwft_state[1]),
        .I2(rd_en),
        .O(\gen_fwft.ram_regout_en ));
  FDRE #(
    .INIT(1'b0)) 
    \gof.overflow_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(overflow_i0),
        .Q(overflow),
        .R(1'b0));
  FDRE \grdc.rd_data_count_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q(rd_data_count[0]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(rd_data_count[1]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [3]),
        .Q(rd_data_count[2]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [4]),
        .Q(rd_data_count[3]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \guf.underflow_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(underflow_i0),
        .Q(underflow),
        .R(1'b0));
  FDRE \gwdc.wr_data_count_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [1]),
        .Q(wr_data_count[0]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [2]),
        .Q(wr_data_count[1]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [3]),
        .Q(wr_data_count[2]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [4]),
        .Q(wr_data_count[3]),
        .R(wrst_busy));
  zynq_bd_C2C2_0_xpm_counter_updn__parameterized6 rdp_inst
       (.D(diff_pntr_pe[3:2]),
        .E(rdp_inst_n_8),
        .Q(rd_pntr_ext),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\count_value_i_reg[4]_0 (rd_rst_busy),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] ({\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 }),
        .\grdc.rd_data_count_i_reg[4] (\gen_fwft.rdpp1_inst_n_3 ),
        .\grdc.rd_data_count_i_reg[4]_0 ({\gen_cdc_pntr.wpr_gray_reg_dc_n_1 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_2 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 }),
        .\grdc.rd_data_count_i_reg[4]_1 (\gen_cdc_pntr.wpr_gray_reg_dc_n_6 ),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[2] (\grdc.diff_wr_rd_pntr_rdc [4:3]),
        .\src_gray_ff_reg[4] (count_value_i),
        .src_in_bin({rdp_inst_n_9,rdp_inst_n_10,rdp_inst_n_11,rdp_inst_n_12}));
  zynq_bd_C2C2_0_xpm_counter_updn__parameterized7 rdpp1_inst
       (.E(rdp_inst_n_8),
        .Q({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3}),
        .\count_value_i_reg[0]_0 (rd_rst_busy),
        .\count_value_i_reg[1]_0 (curr_fwft_state),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  zynq_bd_C2C2_0_xpm_fifo_reg_bit_51 rst_d1_inst
       (.D(diff_pntr_pf_q0[1]),
        .Q(diff_pntr_pf_q),
        .clr_full(clr_full),
        .d_out_int_reg_0(rst_d1_inst_n_1),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] (rd_pntr_wr[0]),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1]_0 (wr_pntr_plus1_pf[1]),
        .\gof.overflow_i_reg (full),
        .overflow_i0(overflow_i0),
        .prog_full(prog_full),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_counter_updn__parameterized6_52 wrp_inst
       (.D(\gwdc.diff_wr_rd_pntr1_out [2]),
        .E(wr_pntr_plus1_pf_carry),
        .Q(wr_pntr_ext),
        .\gwdc.wr_data_count_i_reg[2] ({\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 }),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_counter_updn__parameterized7_53 wrpp1_inst
       (.D(diff_pntr_pf_q0[2]),
        .E(wr_pntr_plus1_pf_carry),
        .Q(wr_pntr_plus1_pf),
        .\count_value_i_reg[3]_0 (wrpp1_inst_n_4),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ({rd_pntr_wr[3],rd_pntr_wr[1:0]}),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_counter_updn__parameterized8 wrpp2_inst
       (.E(wr_pntr_plus1_pf_carry),
        .Q(rd_pntr_wr[3]),
        .\count_value_i_reg[2]_0 ({wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3}),
        .\count_value_i_reg[3]_0 (wrpp2_inst_n_0),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_fifo_rst__xdcDup__6 xpm_fifo_rst_inst
       (.E(wr_pntr_plus1_pf_carry),
        .Q(curr_fwft_state),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[3] (full),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_0 (rd_rst_busy),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_1 (\grdc.rd_data_count_i0 ),
        .\guf.underflow_i_reg (empty),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .rst_d1(rst_d1),
        .underflow_i0(underflow_i0),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy),
        .wrst_busy(wrst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_DEST_SYNC_FF = "3" *) (* COMMON_CLOCK = "0" *) 
(* DOUT_RESET_VALUE = "0" *) (* ECC_MODE = "0" *) (* ENABLE_ECC = "0" *) 
(* EN_ADV_FEATURE = "16'b0000011100000111" *) (* EN_AE = "1'b0" *) (* EN_AF = "1'b0" *) 
(* EN_DVLD = "1'b0" *) (* EN_OF = "1'b1" *) (* EN_PE = "1'b1" *) 
(* EN_PF = "1'b1" *) (* EN_RDC = "1'b1" *) (* EN_UF = "1'b1" *) 
(* EN_WACK = "1'b0" *) (* EN_WDC = "1'b1" *) (* FG_EQ_ASYM_DOUT = "1'b0" *) 
(* FIFO_MEMORY_TYPE = "2" *) (* FIFO_MEM_TYPE = "2" *) (* FIFO_READ_DEPTH = "256" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_SIZE = "11520" *) (* FIFO_WRITE_DEPTH = "256" *) 
(* FULL_RESET_VALUE = "1" *) (* FULL_RST_VAL = "1'b1" *) (* ORIG_REF_NAME = "xpm_fifo_base" *) 
(* PE_THRESH_ADJ = "8" *) (* PE_THRESH_MAX = "251" *) (* PE_THRESH_MIN = "5" *) 
(* PF_THRESH_ADJ = "126" *) (* PF_THRESH_MAX = "251" *) (* PF_THRESH_MIN = "8" *) 
(* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "128" *) (* RD_DATA_COUNT_WIDTH = "8" *) 
(* RD_DC_WIDTH_EXT = "9" *) (* RD_LATENCY = "2" *) (* RD_MODE = "1" *) 
(* RD_PNTR_WIDTH = "8" *) (* READ_DATA_WIDTH = "45" *) (* READ_MODE = "1" *) 
(* READ_MODE_LL = "1" *) (* RELATED_CLOCKS = "0" *) (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WIDTH_RATIO = "1" *) (* WRITE_DATA_WIDTH = "45" *) 
(* WR_DATA_COUNT_WIDTH = "8" *) (* WR_DC_WIDTH_EXT = "9" *) (* WR_DEPTH_LOG = "8" *) 
(* WR_PNTR_WIDTH = "8" *) (* WR_RD_RATIO = "0" *) (* WR_WIDTH_LOG = "6" *) 
(* XPM_MODULE = "TRUE" *) (* both_stages_valid = "3" *) (* invalid = "0" *) 
(* keep_hierarchy = "soft" *) (* stage1_valid = "2" *) (* stage2_valid = "1" *) 
module zynq_bd_C2C2_0_xpm_fifo_base__xdcDup__1
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    full_n,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [44:0]din;
  output full;
  output full_n;
  output prog_full;
  output [7:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [44:0]dout;
  output empty;
  output prog_empty;
  output [7:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [1:0]count_value_i;
  wire [1:0]curr_fwft_state;
  wire [7:0]diff_pntr_pe;
  wire [8:2]diff_pntr_pf_q;
  wire [8:2]diff_pntr_pf_q0;
  wire [44:0]din;
  wire [44:0]dout;
  wire empty;
  wire empty_fwft_i0;
  wire full;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_0 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_7 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_10 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_11 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_12 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_13 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_14 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_15 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_16 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_9 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_7 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_8 ;
  wire \gen_fwft.count_rst ;
  wire \gen_fwft.ram_regout_en ;
  wire \gen_fwft.rdpp1_inst_n_3 ;
  wire \gen_fwft.rdpp1_inst_n_4 ;
  wire \gen_fwft.rdpp1_inst_n_5 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ;
  wire [8:1]\grdc.diff_wr_rd_pntr_rdc ;
  wire \grdc.rd_data_count_i0 ;
  wire [8:1]\gwdc.diff_wr_rd_pntr1_out ;
  wire [1:0]next_fwft_state__0;
  wire overflow;
  wire overflow_i0;
  wire prog_empty;
  wire prog_full;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire [7:0]rd_data_count;
  wire rd_en;
  wire [7:0]rd_pntr_ext;
  wire [7:0]rd_pntr_wr;
  wire [7:0]rd_pntr_wr_cdc;
  wire [8:0]rd_pntr_wr_cdc_dc;
  wire rd_rst_busy;
  wire rdp_inst_n_10;
  wire rdp_inst_n_19;
  wire rdp_inst_n_20;
  wire rdp_inst_n_21;
  wire rdp_inst_n_22;
  wire rdp_inst_n_23;
  wire rdp_inst_n_24;
  wire rdp_inst_n_25;
  wire rdp_inst_n_26;
  wire rdp_inst_n_27;
  wire rdp_inst_n_28;
  wire rdp_inst_n_29;
  wire rdp_inst_n_30;
  wire rdp_inst_n_31;
  wire rdp_inst_n_8;
  wire rdp_inst_n_9;
  wire rdpp1_inst_n_0;
  wire rdpp1_inst_n_1;
  wire rdpp1_inst_n_2;
  wire rdpp1_inst_n_3;
  wire rdpp1_inst_n_4;
  wire rdpp1_inst_n_5;
  wire rdpp1_inst_n_6;
  wire rdpp1_inst_n_7;
  wire rst;
  wire rst_d1;
  wire rst_d1_inst_n_1;
  wire sleep;
  wire [1:1]src_in_bin00_out;
  wire underflow;
  wire underflow_i0;
  wire wr_clk;
  wire [7:0]wr_data_count;
  wire wr_en;
  wire [8:0]wr_pntr_ext;
  wire [8:1]wr_pntr_plus1_pf;
  wire wr_pntr_plus1_pf_carry;
  wire [7:0]wr_pntr_rd_cdc;
  wire [8:0]wr_pntr_rd_cdc_dc;
  wire wr_rst_busy;
  wire wrpp2_inst_n_0;
  wire wrpp2_inst_n_1;
  wire wrpp2_inst_n_2;
  wire wrpp2_inst_n_3;
  wire wrpp2_inst_n_4;
  wire wrpp2_inst_n_5;
  wire wrpp2_inst_n_6;
  wire wrpp2_inst_n_7;
  wire wrst_busy;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ;
  wire [44:0]\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign full_n = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  (* SOFT_HLUTNM = "soft_lutpair207" *) 
  LUT4 #(
    .INIT(16'h6A85)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[0]_i_1 
       (.I0(curr_fwft_state[0]),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(ram_empty_i),
        .O(next_fwft_state__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair207" *) 
  LUT4 #(
    .INIT(16'h3FF0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[1]_i_1 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(curr_fwft_state[0]),
        .O(next_fwft_state__0[1]));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[0]),
        .Q(curr_fwft_state[0]),
        .R(rd_rst_busy));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[1]),
        .Q(curr_fwft_state[1]),
        .R(rd_rst_busy));
  GND GND
       (.G(\<const0> ));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_gray__parameterized1__7 \gen_cdc_pntr.rd_pntr_cdc_dc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc_dc),
        .src_clk(rd_clk),
        .src_in_bin({rdp_inst_n_24,rdp_inst_n_25,rdp_inst_n_26,rdp_inst_n_27,rdp_inst_n_28,rdp_inst_n_29,rdp_inst_n_30,src_in_bin00_out,rdp_inst_n_31}));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "8" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_gray__7 \gen_cdc_pntr.rd_pntr_cdc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc),
        .src_clk(rd_clk),
        .src_in_bin(rd_pntr_ext));
  zynq_bd_C2C2_0_xpm_fifo_reg_vec_25 \gen_cdc_pntr.rpw_gray_reg 
       (.D(rd_pntr_wr_cdc),
        .Q(wr_pntr_plus1_pf),
        .d_out_int_reg(\gen_cdc_pntr.rpw_gray_reg_n_8 ),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7}),
        .\reg_out_i_reg[7]_0 (rd_pntr_wr),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized0_26 \gen_cdc_pntr.rpw_gray_reg_dc 
       (.D(rd_pntr_wr_cdc_dc),
        .Q({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 }),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_fifo_reg_vec_27 \gen_cdc_pntr.wpr_gray_reg 
       (.D(wr_pntr_rd_cdc),
        .Q(curr_fwft_state),
        .\gen_pf_ic_rc.ram_empty_i_reg (rd_pntr_ext),
        .\gen_pf_ic_rc.ram_empty_i_reg_0 ({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3,rdpp1_inst_n_4,rdpp1_inst_n_5,rdpp1_inst_n_6,rdpp1_inst_n_7}),
        .ram_empty_i(ram_empty_i),
        .ram_empty_i0(ram_empty_i0),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[0]_0 (rd_rst_busy),
        .\reg_out_i_reg[7]_0 ({\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }));
  zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized0_28 \gen_cdc_pntr.wpr_gray_reg_dc 
       (.D(\grdc.diff_wr_rd_pntr_rdc ),
        .DI({rdp_inst_n_9,\gen_fwft.rdpp1_inst_n_5 }),
        .Q({\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_16 }),
        .S({rdp_inst_n_19,rdp_inst_n_20,rdp_inst_n_21,rdp_inst_n_22,rdp_inst_n_23,\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .\grdc.rd_data_count_i_reg[7] (count_value_i[1]),
        .\grdc.rd_data_count_i_reg[7]_0 (rd_pntr_ext[6:1]),
        .\grdc.rd_data_count_i_reg[8] (rdp_inst_n_10),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[8]_0 (rd_rst_busy),
        .\reg_out_i_reg[8]_1 (wr_pntr_rd_cdc_dc));
  (* DEST_SYNC_FF = "5" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_gray__parameterized0__3 \gen_cdc_pntr.wr_pntr_cdc_dc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc_dc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "8" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_gray__6 \gen_cdc_pntr.wr_pntr_cdc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext[7:0]));
  (* SOFT_HLUTNM = "soft_lutpair206" *) 
  LUT4 #(
    .INIT(16'hF380)) 
    \gen_fwft.empty_fwft_i_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .I3(empty),
        .O(empty_fwft_i0));
  FDSE #(
    .INIT(1'b1)) 
    \gen_fwft.empty_fwft_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .Q(empty),
        .S(rd_rst_busy));
  zynq_bd_C2C2_0_xpm_counter_updn_29 \gen_fwft.rdpp1_inst 
       (.DI(\gen_fwft.rdpp1_inst_n_5 ),
        .Q(count_value_i),
        .S({\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\grdc.rd_data_count_i_reg[7] (rd_pntr_ext[1:0]),
        .\grdc.rd_data_count_i_reg[7]_0 ({\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_16 }),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .src_in_bin(src_in_bin00_out));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_cdc_pntr.rpw_gray_reg_n_8 ),
        .Q(full),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[0]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[1]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[2]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[3]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[4]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[5]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[6]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[7]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .R(rd_rst_busy));
  LUT4 #(
    .INIT(16'h88B8)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1 
       (.I0(prog_empty),
        .I1(empty),
        .I2(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h01FF)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ),
        .Q(prog_empty),
        .S(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[2]),
        .Q(diff_pntr_pf_q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[3]),
        .Q(diff_pntr_pf_q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[4]),
        .Q(diff_pntr_pf_q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[5]),
        .Q(diff_pntr_pf_q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[6]),
        .Q(diff_pntr_pf_q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[7]),
        .Q(diff_pntr_pf_q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[8]),
        .Q(diff_pntr_pf_q[8]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1_inst_n_1),
        .Q(prog_full),
        .S(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.ram_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i0),
        .Q(ram_empty_i),
        .S(rd_rst_busy));
  (* ADDR_WIDTH_A = "8" *) 
  (* ADDR_WIDTH_B = "8" *) 
  (* AUTO_SLEEP_TIME = "0" *) 
  (* BYTE_WRITE_WIDTH_A = "45" *) 
  (* BYTE_WRITE_WIDTH_B = "45" *) 
  (* CASCADE_HEIGHT = "0" *) 
  (* CLOCKING_MODE = "1" *) 
  (* ECC_BIT_RANGE = "[7:0]" *) 
  (* ECC_MODE = "0" *) 
  (* ECC_TYPE = "NONE" *) 
  (* IGNORE_INIT_SYNTH = "0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* MAX_NUM_CHAR = "0" *) 
  (* \MEM.ADDRESS_SPACE  *) 
  (* \MEM.ADDRESS_SPACE_BEGIN  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_LSB  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_MSB  = "44" *) 
  (* \MEM.ADDRESS_SPACE_END  = "511" *) 
  (* \MEM.CORE_MEMORY_WIDTH  = "45" *) 
  (* MEMORY_INIT_FILE = "none" *) 
  (* MEMORY_INIT_PARAM = "" *) 
  (* MEMORY_OPTIMIZATION = "true" *) 
  (* MEMORY_PRIMITIVE = "2" *) 
  (* MEMORY_SIZE = "11520" *) 
  (* MEMORY_TYPE = "1" *) 
  (* MESSAGE_CONTROL = "0" *) 
  (* NUM_CHAR_LOC = "0" *) 
  (* P_ECC_MODE = "no_ecc" *) 
  (* P_ENABLE_BYTE_WRITE_A = "0" *) 
  (* P_ENABLE_BYTE_WRITE_B = "0" *) 
  (* P_MAX_DEPTH_DATA = "256" *) 
  (* P_MEMORY_OPT = "yes" *) 
  (* P_MEMORY_PRIMITIVE = "block" *) 
  (* P_MIN_WIDTH_DATA = "45" *) 
  (* P_MIN_WIDTH_DATA_A = "45" *) 
  (* P_MIN_WIDTH_DATA_B = "45" *) 
  (* P_MIN_WIDTH_DATA_ECC = "45" *) 
  (* P_MIN_WIDTH_DATA_LDW = "4" *) 
  (* P_MIN_WIDTH_DATA_SHFT = "45" *) 
  (* P_NUM_COLS_WRITE_A = "1" *) 
  (* P_NUM_COLS_WRITE_B = "1" *) 
  (* P_NUM_ROWS_READ_A = "1" *) 
  (* P_NUM_ROWS_READ_B = "1" *) 
  (* P_NUM_ROWS_WRITE_A = "1" *) 
  (* P_NUM_ROWS_WRITE_B = "1" *) 
  (* P_SDP_WRITE_MODE = "no" *) 
  (* P_WIDTH_ADDR_LSB_READ_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) 
  (* P_WIDTH_ADDR_READ_A = "8" *) 
  (* P_WIDTH_ADDR_READ_B = "8" *) 
  (* P_WIDTH_ADDR_WRITE_A = "8" *) 
  (* P_WIDTH_ADDR_WRITE_B = "8" *) 
  (* P_WIDTH_COL_WRITE_A = "45" *) 
  (* P_WIDTH_COL_WRITE_B = "45" *) 
  (* RAM_DECOMP = "auto" *) 
  (* READ_DATA_WIDTH_A = "45" *) 
  (* READ_DATA_WIDTH_B = "45" *) 
  (* READ_LATENCY_A = "2" *) 
  (* READ_LATENCY_B = "2" *) 
  (* READ_RESET_VALUE_A = "0" *) 
  (* READ_RESET_VALUE_B = "0" *) 
  (* RST_MODE_A = "SYNC" *) 
  (* RST_MODE_B = "SYNC" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_EMBEDDED_CONSTRAINT = "0" *) 
  (* USE_MEM_INIT = "0" *) 
  (* USE_MEM_INIT_MMI = "0" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH_A = "45" *) 
  (* WRITE_DATA_WIDTH_B = "45" *) 
  (* WRITE_MODE_A = "2" *) 
  (* WRITE_MODE_B = "2" *) 
  (* WRITE_PROTECT = "1" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* rsta_loop_iter = "48" *) 
  (* rstb_loop_iter = "48" *) 
  zynq_bd_C2C2_0_xpm_memory_base__2 \gen_sdpram.xpm_memory_base_inst 
       (.addra(wr_pntr_ext[7:0]),
        .addrb(rd_pntr_ext),
        .clka(wr_clk),
        .clkb(rd_clk),
        .dbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ),
        .dbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ),
        .dina(din),
        .dinb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .douta(\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED [44:0]),
        .doutb(dout),
        .ena(wr_pntr_plus1_pf_carry),
        .enb(rdp_inst_n_8),
        .injectdbiterra(1'b0),
        .injectdbiterrb(1'b0),
        .injectsbiterra(1'b0),
        .injectsbiterrb(1'b0),
        .regcea(1'b0),
        .regceb(\gen_fwft.ram_regout_en ),
        .rsta(1'b0),
        .rstb(rd_rst_busy),
        .sbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ),
        .sbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ),
        .sleep(sleep),
        .wea(1'b0),
        .web(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair206" *) 
  LUT3 #(
    .INIT(8'h62)) 
    \gen_sdpram.xpm_memory_base_inst_i_3 
       (.I0(curr_fwft_state[0]),
        .I1(curr_fwft_state[1]),
        .I2(rd_en),
        .O(\gen_fwft.ram_regout_en ));
  FDRE #(
    .INIT(1'b0)) 
    \gof.overflow_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(overflow_i0),
        .Q(overflow),
        .R(1'b0));
  FDRE \grdc.rd_data_count_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q(rd_data_count[0]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(rd_data_count[1]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [3]),
        .Q(rd_data_count[2]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [4]),
        .Q(rd_data_count[3]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [5]),
        .Q(rd_data_count[4]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [6]),
        .Q(rd_data_count[5]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [7]),
        .Q(rd_data_count[6]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [8]),
        .Q(rd_data_count[7]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \guf.underflow_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(underflow_i0),
        .Q(underflow),
        .R(1'b0));
  FDRE \gwdc.wr_data_count_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [1]),
        .Q(wr_data_count[0]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [2]),
        .Q(wr_data_count[1]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [3]),
        .Q(wr_data_count[2]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [4]),
        .Q(wr_data_count[3]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [5]),
        .Q(wr_data_count[4]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [6]),
        .Q(wr_data_count[5]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [7]),
        .Q(wr_data_count[6]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [8]),
        .Q(wr_data_count[7]),
        .R(wrst_busy));
  zynq_bd_C2C2_0_xpm_counter_updn__parameterized0_30 rdp_inst
       (.D(diff_pntr_pe),
        .DI(rdp_inst_n_9),
        .Q(rd_pntr_ext),
        .S({rdp_inst_n_19,rdp_inst_n_20,rdp_inst_n_21,rdp_inst_n_22,rdp_inst_n_23}),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\count_value_i_reg[7]_0 (rdp_inst_n_10),
        .\count_value_i_reg[8]_0 (rd_rst_busy),
        .enb(rdp_inst_n_8),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ({\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .\grdc.rd_data_count_i_reg[7] (count_value_i),
        .\grdc.rd_data_count_i_reg[8] ({\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_15 }),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .src_in_bin({rdp_inst_n_24,rdp_inst_n_25,rdp_inst_n_26,rdp_inst_n_27,rdp_inst_n_28,rdp_inst_n_29,rdp_inst_n_30,rdp_inst_n_31}));
  zynq_bd_C2C2_0_xpm_counter_updn__parameterized1_31 rdpp1_inst
       (.E(rdp_inst_n_8),
        .Q({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3,rdpp1_inst_n_4,rdpp1_inst_n_5,rdpp1_inst_n_6,rdpp1_inst_n_7}),
        .\count_value_i_reg[0]_0 (rd_rst_busy),
        .\count_value_i_reg[1]_0 (curr_fwft_state),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  zynq_bd_C2C2_0_xpm_fifo_reg_bit_32 rst_d1_inst
       (.Q(diff_pntr_pf_q),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] (rst_d1_inst_n_1),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg (full),
        .overflow_i0(overflow_i0),
        .prog_full(prog_full),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_counter_updn__parameterized0_33 wrp_inst
       (.D(\gwdc.diff_wr_rd_pntr1_out ),
        .Q(wr_pntr_ext),
        .\count_value_i_reg[6]_0 (full),
        .\gwdc.wr_data_count_i_reg[8] ({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 }),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_counter_updn__parameterized1_34 wrpp1_inst
       (.D(diff_pntr_pf_q0),
        .Q(wr_pntr_plus1_pf),
        .\count_value_i_reg[6]_0 (full),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] (rd_pntr_wr),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_counter_updn__parameterized2_35 wrpp2_inst
       (.Q({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7}),
        .\count_value_i_reg[6]_0 (full),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_fifo_rst__xdcDup__1 xpm_fifo_rst_inst
       (.Q(curr_fwft_state),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[7] (full),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_0 (rd_rst_busy),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_1 (\grdc.rd_data_count_i0 ),
        .\guf.underflow_i_reg (empty),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .rst_d1(rst_d1),
        .underflow_i0(underflow_i0),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wr_rst_busy(wr_rst_busy),
        .wrst_busy(wrst_busy));
endmodule

module zynq_bd_C2C2_0_xpm_fifo_reg_bit
   (rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ,
    clr_full,
    overflow_i0,
    wrst_busy,
    wr_clk,
    Q,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ,
    prog_full,
    wr_en,
    rst);
  output rst_d1;
  output \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  output clr_full;
  output overflow_i0;
  input wrst_busy;
  input wr_clk;
  input [7:0]Q;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  input prog_full;
  input wr_en;
  input rst;

  wire [7:0]Q;
  wire clr_full;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  wire overflow_i0;
  wire prog_full;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    d_out_int_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(wrst_busy),
        .Q(rst_d1),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair332" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6 
       (.I0(rst),
        .I1(rst_d1),
        .I2(wrst_busy),
        .O(clr_full));
  LUT6 #(
    .INIT(64'h00FF00E0000000E0)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_1 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ),
        .I2(Q[7]),
        .I3(clr_full),
        .I4(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg ),
        .I5(prog_full),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[4]),
        .I3(Q[5]),
        .I4(Q[2]),
        .I5(Q[3]),
        .O(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair332" *) 
  LUT4 #(
    .INIT(16'hFE00)) 
    \gof.overflow_i_i_1 
       (.I0(rst_d1),
        .I1(wrst_busy),
        .I2(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg ),
        .I3(wr_en),
        .O(overflow_i0));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_bit" *) 
module zynq_bd_C2C2_0_xpm_fifo_reg_bit_12
   (rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ,
    clr_full,
    overflow_i0,
    wrst_busy,
    wr_clk,
    Q,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ,
    prog_full,
    wr_en,
    rst);
  output rst_d1;
  output \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  output clr_full;
  output overflow_i0;
  input wrst_busy;
  input wr_clk;
  input [7:0]Q;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  input prog_full;
  input wr_en;
  input rst;

  wire [7:0]Q;
  wire clr_full;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  wire overflow_i0;
  wire prog_full;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    d_out_int_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(wrst_busy),
        .Q(rst_d1),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair278" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6 
       (.I0(rst),
        .I1(rst_d1),
        .I2(wrst_busy),
        .O(clr_full));
  LUT6 #(
    .INIT(64'h00FF00E0000000E0)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_1 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ),
        .I2(Q[7]),
        .I3(clr_full),
        .I4(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg ),
        .I5(prog_full),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[4]),
        .I3(Q[5]),
        .I4(Q[2]),
        .I5(Q[3]),
        .O(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair278" *) 
  LUT4 #(
    .INIT(16'hFE00)) 
    \gof.overflow_i_i_1 
       (.I0(rst_d1),
        .I1(wrst_busy),
        .I2(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg ),
        .I3(wr_en),
        .O(overflow_i0));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_bit" *) 
module zynq_bd_C2C2_0_xpm_fifo_reg_bit_22
   (rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ,
    overflow_i0,
    wrst_busy,
    wr_clk,
    Q,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ,
    prog_full,
    wr_en,
    rst);
  output rst_d1;
  output \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  output overflow_i0;
  input wrst_busy;
  input wr_clk;
  input [6:0]Q;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  input prog_full;
  input wr_en;
  input rst;

  wire [6:0]Q;
  wire clr_full;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  wire overflow_i0;
  wire prog_full;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    d_out_int_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(wrst_busy),
        .Q(rst_d1),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h0F0E000E)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_1 
       (.I0(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ),
        .I1(Q[6]),
        .I2(clr_full),
        .I3(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg ),
        .I4(prog_full),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[4]),
        .I3(Q[5]),
        .I4(Q[2]),
        .I5(Q[3]),
        .O(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair227" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_3 
       (.I0(rst),
        .I1(rst_d1),
        .I2(wrst_busy),
        .O(clr_full));
  (* SOFT_HLUTNM = "soft_lutpair227" *) 
  LUT4 #(
    .INIT(16'hFE00)) 
    \gof.overflow_i_i_1 
       (.I0(rst_d1),
        .I1(wrst_busy),
        .I2(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg ),
        .I3(wr_en),
        .O(overflow_i0));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_bit" *) 
module zynq_bd_C2C2_0_xpm_fifo_reg_bit_32
   (rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ,
    overflow_i0,
    wrst_busy,
    wr_clk,
    Q,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ,
    prog_full,
    wr_en,
    rst);
  output rst_d1;
  output \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  output overflow_i0;
  input wrst_busy;
  input wr_clk;
  input [6:0]Q;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  input prog_full;
  input wr_en;
  input rst;

  wire [6:0]Q;
  wire clr_full;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  wire overflow_i0;
  wire prog_full;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    d_out_int_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(wrst_busy),
        .Q(rst_d1),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h0F0E000E)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_1 
       (.I0(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ),
        .I1(Q[6]),
        .I2(clr_full),
        .I3(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg ),
        .I4(prog_full),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[4]),
        .I3(Q[5]),
        .I4(Q[2]),
        .I5(Q[3]),
        .O(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair196" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_3 
       (.I0(rst),
        .I1(rst_d1),
        .I2(wrst_busy),
        .O(clr_full));
  (* SOFT_HLUTNM = "soft_lutpair196" *) 
  LUT4 #(
    .INIT(16'hFE00)) 
    \gof.overflow_i_i_1 
       (.I0(rst_d1),
        .I1(wrst_busy),
        .I2(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg ),
        .I3(wr_en),
        .O(overflow_i0));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_bit" *) 
module zynq_bd_C2C2_0_xpm_fifo_reg_bit_43
   (rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ,
    overflow_i0,
    wrst_busy,
    wr_clk,
    Q,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ,
    prog_full,
    wr_en,
    rst);
  output rst_d1;
  output \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  output overflow_i0;
  input wrst_busy;
  input wr_clk;
  input [6:0]Q;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  input prog_full;
  input wr_en;
  input rst;

  wire [6:0]Q;
  wire clr_full;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  wire overflow_i0;
  wire prog_full;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    d_out_int_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(wrst_busy),
        .Q(rst_d1),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h0F0E000E)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_1 
       (.I0(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ),
        .I1(Q[6]),
        .I2(clr_full),
        .I3(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg ),
        .I4(prog_full),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[4]),
        .I3(Q[5]),
        .I4(Q[2]),
        .I5(Q[3]),
        .O(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair164" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_3 
       (.I0(rst),
        .I1(rst_d1),
        .I2(wrst_busy),
        .O(clr_full));
  (* SOFT_HLUTNM = "soft_lutpair164" *) 
  LUT4 #(
    .INIT(16'hFE00)) 
    \gof.overflow_i_i_1 
       (.I0(rst_d1),
        .I1(wrst_busy),
        .I2(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg ),
        .I3(wr_en),
        .O(overflow_i0));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_bit" *) 
module zynq_bd_C2C2_0_xpm_fifo_reg_bit_51
   (rst_d1,
    d_out_int_reg_0,
    overflow_i0,
    clr_full,
    D,
    wrst_busy,
    wr_clk,
    Q,
    rst,
    \gof.overflow_i_reg ,
    prog_full,
    wr_en,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] ,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1]_0 );
  output rst_d1;
  output d_out_int_reg_0;
  output overflow_i0;
  output clr_full;
  output [0:0]D;
  input wrst_busy;
  input wr_clk;
  input [3:0]Q;
  input rst;
  input \gof.overflow_i_reg ;
  input prog_full;
  input wr_en;
  input [0:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] ;
  input [0:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1]_0 ;

  wire [0:0]D;
  wire [3:0]Q;
  wire clr_full;
  wire d_out_int_reg_0;
  wire [0:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] ;
  wire [0:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1]_0 ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ;
  wire \gof.overflow_i_reg ;
  wire overflow_i0;
  wire prog_full;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    d_out_int_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(wrst_busy),
        .Q(rst_d1),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6 
       (.I0(rst),
        .I1(rst_d1),
        .I2(wrst_busy),
        .O(clr_full));
  LUT5 #(
    .INIT(32'hEF1010EF)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[1]_i_1 
       (.I0(rst_d1),
        .I1(\gof.overflow_i_reg ),
        .I2(wr_en),
        .I3(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] ),
        .I4(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1]_0 ),
        .O(D));
  LUT5 #(
    .INIT(32'hF3A200A2)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_1 
       (.I0(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ),
        .I1(rst_d1),
        .I2(rst),
        .I3(\gof.overflow_i_reg ),
        .I4(prog_full),
        .O(d_out_int_reg_0));
  LUT4 #(
    .INIT(16'hAAA8)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2 
       (.I0(Q[3]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(Q[1]),
        .O(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT4 #(
    .INIT(16'hFE00)) 
    \gof.overflow_i_i_1 
       (.I0(rst_d1),
        .I1(wrst_busy),
        .I2(\gof.overflow_i_reg ),
        .I3(wr_en),
        .O(overflow_i0));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_bit" *) 
module zynq_bd_C2C2_0_xpm_fifo_reg_bit_61
   (rst_d1,
    d_out_int_reg_0,
    overflow_i0,
    clr_full,
    D,
    wrst_busy,
    wr_clk,
    Q,
    rst,
    \gof.overflow_i_reg ,
    prog_full,
    wr_en,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] ,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1]_0 );
  output rst_d1;
  output d_out_int_reg_0;
  output overflow_i0;
  output clr_full;
  output [0:0]D;
  input wrst_busy;
  input wr_clk;
  input [3:0]Q;
  input rst;
  input \gof.overflow_i_reg ;
  input prog_full;
  input wr_en;
  input [0:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] ;
  input [0:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1]_0 ;

  wire [0:0]D;
  wire [3:0]Q;
  wire clr_full;
  wire d_out_int_reg_0;
  wire [0:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] ;
  wire [0:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1]_0 ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ;
  wire \gof.overflow_i_reg ;
  wire overflow_i0;
  wire prog_full;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    d_out_int_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(wrst_busy),
        .Q(rst_d1),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6 
       (.I0(rst),
        .I1(rst_d1),
        .I2(wrst_busy),
        .O(clr_full));
  LUT5 #(
    .INIT(32'hEF1010EF)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[1]_i_1 
       (.I0(rst_d1),
        .I1(\gof.overflow_i_reg ),
        .I2(wr_en),
        .I3(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] ),
        .I4(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1]_0 ),
        .O(D));
  LUT5 #(
    .INIT(32'hF3A200A2)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_1 
       (.I0(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ),
        .I1(rst_d1),
        .I2(rst),
        .I3(\gof.overflow_i_reg ),
        .I4(prog_full),
        .O(d_out_int_reg_0));
  LUT4 #(
    .INIT(16'hAAA8)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2 
       (.I0(Q[3]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(Q[1]),
        .O(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT4 #(
    .INIT(16'hFE00)) 
    \gof.overflow_i_i_1 
       (.I0(rst_d1),
        .I1(wrst_busy),
        .I2(\gof.overflow_i_reg ),
        .I3(wr_en),
        .O(overflow_i0));
endmodule

module zynq_bd_C2C2_0_xpm_fifo_reg_vec
   (\reg_out_i_reg[7]_0 ,
    d_out_int_reg,
    Q,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ,
    wr_pntr_plus1_pf_carry,
    rst_d1,
    rst,
    wrst_busy,
    D,
    wr_clk);
  output [7:0]\reg_out_i_reg[7]_0 ;
  output d_out_int_reg;
  input [7:0]Q;
  input [7:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  input wr_pntr_plus1_pf_carry;
  input rst_d1;
  input rst;
  input wrst_busy;
  input [7:0]D;
  input wr_clk;

  wire [7:0]D;
  wire [7:0]Q;
  wire d_out_int_reg;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  wire going_full0;
  wire leaving_full;
  wire [7:0]\reg_out_i_reg[7]_0 ;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'hEAEA00EA)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_1 
       (.I0(leaving_full),
        .I1(going_full0),
        .I2(wr_pntr_plus1_pf_carry),
        .I3(rst_d1),
        .I4(rst),
        .O(d_out_int_reg));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2 
       (.I0(Q[7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(Q[6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ),
        .I5(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ),
        .O(leaving_full));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3 
       (.I0(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ),
        .I5(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ),
        .O(going_full0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(Q[3]),
        .I2(Q[5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(Q[4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(Q[1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [3]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [0]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(\reg_out_i_reg[7]_0 [0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(\reg_out_i_reg[7]_0 [1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(\reg_out_i_reg[7]_0 [2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(\reg_out_i_reg[7]_0 [3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(\reg_out_i_reg[7]_0 [4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(\reg_out_i_reg[7]_0 [5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(\reg_out_i_reg[7]_0 [6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(\reg_out_i_reg[7]_0 [7]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module zynq_bd_C2C2_0_xpm_fifo_reg_vec_19
   (ram_empty_i0,
    \reg_out_i_reg[7]_0 ,
    Q,
    rd_en,
    ram_empty_i,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \gen_pf_ic_rc.ram_empty_i_reg_0 ,
    \reg_out_i_reg[0]_0 ,
    D,
    rd_clk);
  output ram_empty_i0;
  output [7:0]\reg_out_i_reg[7]_0 ;
  input [1:0]Q;
  input rd_en;
  input ram_empty_i;
  input [7:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  input [7:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  input \reg_out_i_reg[0]_0 ;
  input [7:0]D;
  input rd_clk;

  wire [7:0]D;
  wire [1:0]Q;
  wire \gen_pf_ic_rc.ram_empty_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_5_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_6_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_7_n_0 ;
  wire [7:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  wire [7:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  wire going_empty0;
  wire leaving_empty;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire rd_en;
  wire \reg_out_i_reg[0]_0 ;
  wire [7:0]\reg_out_i_reg[7]_0 ;

  LUT6 #(
    .INIT(64'hFFFFFFFF00FD0000)) 
    \gen_pf_ic_rc.ram_empty_i_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .I4(going_empty0),
        .I5(leaving_empty),
        .O(ram_empty_i0));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.ram_empty_i_i_2 
       (.I0(\gen_pf_ic_rc.ram_empty_i_reg_0 [7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ),
        .I5(\gen_pf_ic_rc.ram_empty_i_i_5_n_0 ),
        .O(going_empty0));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.ram_empty_i_i_3 
       (.I0(\gen_pf_ic_rc.ram_empty_i_reg [7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.ram_empty_i_i_6_n_0 ),
        .I5(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ),
        .O(leaving_empty));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_4 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [3]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_0 [4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_5 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_0 [1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_6 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_7 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(\reg_out_i_reg[7]_0 [0]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(\reg_out_i_reg[7]_0 [1]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(\reg_out_i_reg[7]_0 [2]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(\reg_out_i_reg[7]_0 [3]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(\reg_out_i_reg[7]_0 [4]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(\reg_out_i_reg[7]_0 [5]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(\reg_out_i_reg[7]_0 [6]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(\reg_out_i_reg[7]_0 [7]),
        .R(\reg_out_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module zynq_bd_C2C2_0_xpm_fifo_reg_vec_25
   (\reg_out_i_reg[7]_0 ,
    d_out_int_reg,
    Q,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ,
    wr_pntr_plus1_pf_carry,
    rst_d1,
    rst,
    wrst_busy,
    D,
    wr_clk);
  output [7:0]\reg_out_i_reg[7]_0 ;
  output d_out_int_reg;
  input [7:0]Q;
  input [7:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  input wr_pntr_plus1_pf_carry;
  input rst_d1;
  input rst;
  input wrst_busy;
  input [7:0]D;
  input wr_clk;

  wire [7:0]D;
  wire [7:0]Q;
  wire d_out_int_reg;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  wire going_full0;
  wire leaving_full;
  wire [7:0]\reg_out_i_reg[7]_0 ;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'hEAEA00EA)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_1 
       (.I0(leaving_full),
        .I1(going_full0),
        .I2(wr_pntr_plus1_pf_carry),
        .I3(rst_d1),
        .I4(rst),
        .O(d_out_int_reg));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2 
       (.I0(Q[7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(Q[6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ),
        .I5(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ),
        .O(leaving_full));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3 
       (.I0(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ),
        .I5(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ),
        .O(going_full0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(Q[3]),
        .I2(Q[5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(Q[4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(Q[1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [3]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [0]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(\reg_out_i_reg[7]_0 [0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(\reg_out_i_reg[7]_0 [1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(\reg_out_i_reg[7]_0 [2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(\reg_out_i_reg[7]_0 [3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(\reg_out_i_reg[7]_0 [4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(\reg_out_i_reg[7]_0 [5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(\reg_out_i_reg[7]_0 [6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(\reg_out_i_reg[7]_0 [7]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module zynq_bd_C2C2_0_xpm_fifo_reg_vec_27
   (ram_empty_i0,
    \reg_out_i_reg[7]_0 ,
    Q,
    rd_en,
    ram_empty_i,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \gen_pf_ic_rc.ram_empty_i_reg_0 ,
    \reg_out_i_reg[0]_0 ,
    D,
    rd_clk);
  output ram_empty_i0;
  output [7:0]\reg_out_i_reg[7]_0 ;
  input [1:0]Q;
  input rd_en;
  input ram_empty_i;
  input [7:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  input [7:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  input \reg_out_i_reg[0]_0 ;
  input [7:0]D;
  input rd_clk;

  wire [7:0]D;
  wire [1:0]Q;
  wire \gen_pf_ic_rc.ram_empty_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_5_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_6_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_7_n_0 ;
  wire [7:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  wire [7:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  wire going_empty0;
  wire leaving_empty;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire rd_en;
  wire \reg_out_i_reg[0]_0 ;
  wire [7:0]\reg_out_i_reg[7]_0 ;

  LUT6 #(
    .INIT(64'hFFFFFFFF00FD0000)) 
    \gen_pf_ic_rc.ram_empty_i_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .I4(going_empty0),
        .I5(leaving_empty),
        .O(ram_empty_i0));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.ram_empty_i_i_2 
       (.I0(\gen_pf_ic_rc.ram_empty_i_reg_0 [7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ),
        .I5(\gen_pf_ic_rc.ram_empty_i_i_5_n_0 ),
        .O(going_empty0));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.ram_empty_i_i_3 
       (.I0(\gen_pf_ic_rc.ram_empty_i_reg [7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.ram_empty_i_i_6_n_0 ),
        .I5(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ),
        .O(leaving_empty));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_4 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [3]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_0 [4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_5 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_0 [1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_6 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_7 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(\reg_out_i_reg[7]_0 [0]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(\reg_out_i_reg[7]_0 [1]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(\reg_out_i_reg[7]_0 [2]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(\reg_out_i_reg[7]_0 [3]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(\reg_out_i_reg[7]_0 [4]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(\reg_out_i_reg[7]_0 [5]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(\reg_out_i_reg[7]_0 [6]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(\reg_out_i_reg[7]_0 [7]),
        .R(\reg_out_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module zynq_bd_C2C2_0_xpm_fifo_reg_vec_36
   (\reg_out_i_reg[7]_0 ,
    d_out_int_reg,
    Q,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ,
    wr_pntr_plus1_pf_carry,
    rst_d1,
    rst,
    wrst_busy,
    D,
    wr_clk);
  output [7:0]\reg_out_i_reg[7]_0 ;
  output d_out_int_reg;
  input [7:0]Q;
  input [7:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  input wr_pntr_plus1_pf_carry;
  input rst_d1;
  input rst;
  input wrst_busy;
  input [7:0]D;
  input wr_clk;

  wire [7:0]D;
  wire [7:0]Q;
  wire d_out_int_reg;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  wire going_full0;
  wire leaving_full;
  wire [7:0]\reg_out_i_reg[7]_0 ;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'hEAEA00EA)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_1 
       (.I0(leaving_full),
        .I1(going_full0),
        .I2(wr_pntr_plus1_pf_carry),
        .I3(rst_d1),
        .I4(rst),
        .O(d_out_int_reg));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2 
       (.I0(Q[7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(Q[6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ),
        .I5(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ),
        .O(leaving_full));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3 
       (.I0(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ),
        .I5(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ),
        .O(going_full0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(Q[3]),
        .I2(Q[5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(Q[4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(Q[1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [3]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [0]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(\reg_out_i_reg[7]_0 [0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(\reg_out_i_reg[7]_0 [1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(\reg_out_i_reg[7]_0 [2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(\reg_out_i_reg[7]_0 [3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(\reg_out_i_reg[7]_0 [4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(\reg_out_i_reg[7]_0 [5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(\reg_out_i_reg[7]_0 [6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(\reg_out_i_reg[7]_0 [7]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module zynq_bd_C2C2_0_xpm_fifo_reg_vec_38
   (ram_empty_i0,
    \reg_out_i_reg[7]_0 ,
    Q,
    rd_en,
    ram_empty_i,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \gen_pf_ic_rc.ram_empty_i_reg_0 ,
    \reg_out_i_reg[0]_0 ,
    D,
    rd_clk);
  output ram_empty_i0;
  output [7:0]\reg_out_i_reg[7]_0 ;
  input [1:0]Q;
  input rd_en;
  input ram_empty_i;
  input [7:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  input [7:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  input \reg_out_i_reg[0]_0 ;
  input [7:0]D;
  input rd_clk;

  wire [7:0]D;
  wire [1:0]Q;
  wire \gen_pf_ic_rc.ram_empty_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_5_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_6_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_7_n_0 ;
  wire [7:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  wire [7:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  wire going_empty0;
  wire leaving_empty;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire rd_en;
  wire \reg_out_i_reg[0]_0 ;
  wire [7:0]\reg_out_i_reg[7]_0 ;

  LUT6 #(
    .INIT(64'hFFFFFFFF00FD0000)) 
    \gen_pf_ic_rc.ram_empty_i_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .I4(going_empty0),
        .I5(leaving_empty),
        .O(ram_empty_i0));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.ram_empty_i_i_2 
       (.I0(\gen_pf_ic_rc.ram_empty_i_reg_0 [7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ),
        .I5(\gen_pf_ic_rc.ram_empty_i_i_5_n_0 ),
        .O(going_empty0));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.ram_empty_i_i_3 
       (.I0(\gen_pf_ic_rc.ram_empty_i_reg [7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.ram_empty_i_i_6_n_0 ),
        .I5(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ),
        .O(leaving_empty));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_4 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [3]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_0 [4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_5 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_0 [1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_6 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_7 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(\reg_out_i_reg[7]_0 [0]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(\reg_out_i_reg[7]_0 [1]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(\reg_out_i_reg[7]_0 [2]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(\reg_out_i_reg[7]_0 [3]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(\reg_out_i_reg[7]_0 [4]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(\reg_out_i_reg[7]_0 [5]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(\reg_out_i_reg[7]_0 [6]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(\reg_out_i_reg[7]_0 [7]),
        .R(\reg_out_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized0
   (Q,
    \reg_out_i_reg[0]_0 ,
    wr_pntr_plus1_pf_carry,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 ,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ,
    clr_full,
    wrst_busy,
    D,
    wr_clk);
  output [8:0]Q;
  output \reg_out_i_reg[0]_0 ;
  input wr_pntr_plus1_pf_carry;
  input [8:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 ;
  input [8:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  input clr_full;
  input wrst_busy;
  input [8:0]D;
  input wr_clk;

  wire [8:0]D;
  wire [8:0]Q;
  wire clr_full;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ;
  wire [8:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_8_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_9_n_0 ;
  wire [8:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  wire going_full;
  wire \reg_out_i_reg[0]_0 ;
  wire wr_clk;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'h0000FF80)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_1 
       (.I0(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2_n_0 ),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ),
        .I3(going_full),
        .I4(clr_full),
        .O(\reg_out_i_reg[0]_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [0]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [2]),
        .I3(Q[2]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [6]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [8]),
        .I3(Q[8]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [7]),
        .I5(Q[7]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [3]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [5]),
        .I3(Q[5]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [4]),
        .I5(Q[4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h8000)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5 
       (.I0(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_8_n_0 ),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_9_n_0 ),
        .I3(wr_pntr_plus1_pf_carry),
        .O(going_full));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [3]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [5]),
        .I3(Q[5]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [4]),
        .I5(Q[4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_8 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [6]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [8]),
        .I3(Q[8]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [7]),
        .I5(Q[7]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_9 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [0]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [2]),
        .I3(Q[2]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_9_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized0_1
   (\reg_out_i_reg[8]_0 ,
    D,
    ram_empty_i,
    rd_en,
    Q,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ,
    S,
    \reg_out_i_reg[0]_0 ,
    \reg_out_i_reg[8]_1 ,
    rd_clk);
  output [8:0]\reg_out_i_reg[8]_0 ;
  output [8:0]D;
  input ram_empty_i;
  input rd_en;
  input [1:0]Q;
  input [0:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ;
  input [7:0]S;
  input \reg_out_i_reg[0]_0 ;
  input [8:0]\reg_out_i_reg[8]_1 ;
  input rd_clk;

  wire [8:0]D;
  wire [1:0]Q;
  wire [7:0]S;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[8]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 ;
  wire [0:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ;
  wire p_1_in;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire \reg_out_i_reg[0]_0 ;
  wire [8:0]\reg_out_i_reg[8]_0 ;
  wire [8:0]\reg_out_i_reg[8]_1 ;
  wire [7:0]\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1_CO_UNCONNECTED ;
  wire [7:1]\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1_O_UNCONNECTED ;

  LUT4 #(
    .INIT(16'hAABA)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(Q[1]),
        .I3(Q[0]),
        .O(p_1_in));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[8]_i_2 
       (.I0(\reg_out_i_reg[8]_0 [8]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[8]_i_2_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1 
       (.CI(\reg_out_i_reg[8]_0 [0]),
        .CI_TOP(1'b0),
        .CO({\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 }),
        .DI({\reg_out_i_reg[8]_0 [7:1],p_1_in}),
        .O(D[7:0]),
        .S(S));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1 
       (.CI(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1_O_UNCONNECTED [7:1],D[8]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[8]_i_2_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [0]),
        .Q(\reg_out_i_reg[8]_0 [0]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [1]),
        .Q(\reg_out_i_reg[8]_0 [1]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [2]),
        .Q(\reg_out_i_reg[8]_0 [2]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [3]),
        .Q(\reg_out_i_reg[8]_0 [3]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [4]),
        .Q(\reg_out_i_reg[8]_0 [4]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [5]),
        .Q(\reg_out_i_reg[8]_0 [5]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [6]),
        .Q(\reg_out_i_reg[8]_0 [6]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [7]),
        .Q(\reg_out_i_reg[8]_0 [7]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [8]),
        .Q(\reg_out_i_reg[8]_0 [8]),
        .R(\reg_out_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized0_18
   (Q,
    wrst_busy,
    D,
    wr_clk);
  output [8:0]Q;
  input wrst_busy;
  input [8:0]D;
  input wr_clk;

  wire [8:0]D;
  wire [8:0]Q;
  wire wr_clk;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized0_20
   (D,
    Q,
    DI,
    S,
    \grdc.rd_data_count_i_reg[8] ,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[7]_0 ,
    \reg_out_i_reg[8]_0 ,
    \reg_out_i_reg[8]_1 ,
    rd_clk);
  output [7:0]D;
  output [8:0]Q;
  input [1:0]DI;
  input [6:0]S;
  input [0:0]\grdc.rd_data_count_i_reg[8] ;
  input [0:0]\grdc.rd_data_count_i_reg[7] ;
  input [5:0]\grdc.rd_data_count_i_reg[7]_0 ;
  input \reg_out_i_reg[8]_0 ;
  input [8:0]\reg_out_i_reg[8]_1 ;
  input rd_clk;

  wire [7:0]D;
  wire [1:0]DI;
  wire [8:0]Q;
  wire [6:0]S;
  wire \grdc.rd_data_count_i[7]_i_14_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_2_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_3_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_4_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_5_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_6_n_0 ;
  wire [0:0]\grdc.rd_data_count_i_reg[7] ;
  wire [5:0]\grdc.rd_data_count_i_reg[7]_0 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_0 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_1 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_2 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_3 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_4 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_5 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_6 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_7 ;
  wire [0:0]\grdc.rd_data_count_i_reg[8] ;
  wire rd_clk;
  wire \reg_out_i_reg[8]_0 ;
  wire [8:0]\reg_out_i_reg[8]_1 ;
  wire [0:0]\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:0]\NLW_grdc.rd_data_count_i_reg[8]_i_2_CO_UNCONNECTED ;
  wire [7:1]\NLW_grdc.rd_data_count_i_reg[8]_i_2_O_UNCONNECTED ;

  LUT5 #(
    .INIT(32'h718E8E71)) 
    \grdc.rd_data_count_i[7]_i_14 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] ),
        .I2(\grdc.rd_data_count_i_reg[7]_0 [0]),
        .I3(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .I4(Q[2]),
        .O(\grdc.rd_data_count_i[7]_i_14_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_2 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [5]),
        .O(\grdc.rd_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_3 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [4]),
        .O(\grdc.rd_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_4 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [3]),
        .O(\grdc.rd_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_5 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [2]),
        .O(\grdc.rd_data_count_i[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_6 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .O(\grdc.rd_data_count_i[7]_i_6_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[7]_i_1 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\grdc.rd_data_count_i_reg[7]_i_1_n_0 ,\grdc.rd_data_count_i_reg[7]_i_1_n_1 ,\grdc.rd_data_count_i_reg[7]_i_1_n_2 ,\grdc.rd_data_count_i_reg[7]_i_1_n_3 ,\grdc.rd_data_count_i_reg[7]_i_1_n_4 ,\grdc.rd_data_count_i_reg[7]_i_1_n_5 ,\grdc.rd_data_count_i_reg[7]_i_1_n_6 ,\grdc.rd_data_count_i_reg[7]_i_1_n_7 }),
        .DI({\grdc.rd_data_count_i[7]_i_2_n_0 ,\grdc.rd_data_count_i[7]_i_3_n_0 ,\grdc.rd_data_count_i[7]_i_4_n_0 ,\grdc.rd_data_count_i[7]_i_5_n_0 ,\grdc.rd_data_count_i[7]_i_6_n_0 ,DI,Q[0]}),
        .O({D[6:0],\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({S[6:2],\grdc.rd_data_count_i[7]_i_14_n_0 ,S[1:0]}));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[8]_i_2 
       (.CI(\grdc.rd_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_grdc.rd_data_count_i_reg[8]_i_2_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_grdc.rd_data_count_i_reg[8]_i_2_O_UNCONNECTED [7:1],D[7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\grdc.rd_data_count_i_reg[8] }));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [4]),
        .Q(Q[4]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [5]),
        .Q(Q[5]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [6]),
        .Q(Q[6]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [7]),
        .Q(Q[7]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [8]),
        .Q(Q[8]),
        .R(\reg_out_i_reg[8]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized0_26
   (Q,
    wrst_busy,
    D,
    wr_clk);
  output [8:0]Q;
  input wrst_busy;
  input [8:0]D;
  input wr_clk;

  wire [8:0]D;
  wire [8:0]Q;
  wire wr_clk;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized0_28
   (D,
    Q,
    DI,
    S,
    \grdc.rd_data_count_i_reg[8] ,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[7]_0 ,
    \reg_out_i_reg[8]_0 ,
    \reg_out_i_reg[8]_1 ,
    rd_clk);
  output [7:0]D;
  output [8:0]Q;
  input [1:0]DI;
  input [6:0]S;
  input [0:0]\grdc.rd_data_count_i_reg[8] ;
  input [0:0]\grdc.rd_data_count_i_reg[7] ;
  input [5:0]\grdc.rd_data_count_i_reg[7]_0 ;
  input \reg_out_i_reg[8]_0 ;
  input [8:0]\reg_out_i_reg[8]_1 ;
  input rd_clk;

  wire [7:0]D;
  wire [1:0]DI;
  wire [8:0]Q;
  wire [6:0]S;
  wire \grdc.rd_data_count_i[7]_i_14_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_2_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_3_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_4_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_5_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_6_n_0 ;
  wire [0:0]\grdc.rd_data_count_i_reg[7] ;
  wire [5:0]\grdc.rd_data_count_i_reg[7]_0 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_0 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_1 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_2 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_3 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_4 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_5 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_6 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_7 ;
  wire [0:0]\grdc.rd_data_count_i_reg[8] ;
  wire rd_clk;
  wire \reg_out_i_reg[8]_0 ;
  wire [8:0]\reg_out_i_reg[8]_1 ;
  wire [0:0]\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:0]\NLW_grdc.rd_data_count_i_reg[8]_i_2_CO_UNCONNECTED ;
  wire [7:1]\NLW_grdc.rd_data_count_i_reg[8]_i_2_O_UNCONNECTED ;

  LUT5 #(
    .INIT(32'h718E8E71)) 
    \grdc.rd_data_count_i[7]_i_14 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] ),
        .I2(\grdc.rd_data_count_i_reg[7]_0 [0]),
        .I3(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .I4(Q[2]),
        .O(\grdc.rd_data_count_i[7]_i_14_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_2 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [5]),
        .O(\grdc.rd_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_3 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [4]),
        .O(\grdc.rd_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_4 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [3]),
        .O(\grdc.rd_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_5 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [2]),
        .O(\grdc.rd_data_count_i[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_6 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .O(\grdc.rd_data_count_i[7]_i_6_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[7]_i_1 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\grdc.rd_data_count_i_reg[7]_i_1_n_0 ,\grdc.rd_data_count_i_reg[7]_i_1_n_1 ,\grdc.rd_data_count_i_reg[7]_i_1_n_2 ,\grdc.rd_data_count_i_reg[7]_i_1_n_3 ,\grdc.rd_data_count_i_reg[7]_i_1_n_4 ,\grdc.rd_data_count_i_reg[7]_i_1_n_5 ,\grdc.rd_data_count_i_reg[7]_i_1_n_6 ,\grdc.rd_data_count_i_reg[7]_i_1_n_7 }),
        .DI({\grdc.rd_data_count_i[7]_i_2_n_0 ,\grdc.rd_data_count_i[7]_i_3_n_0 ,\grdc.rd_data_count_i[7]_i_4_n_0 ,\grdc.rd_data_count_i[7]_i_5_n_0 ,\grdc.rd_data_count_i[7]_i_6_n_0 ,DI,Q[0]}),
        .O({D[6:0],\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({S[6:2],\grdc.rd_data_count_i[7]_i_14_n_0 ,S[1:0]}));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[8]_i_2 
       (.CI(\grdc.rd_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_grdc.rd_data_count_i_reg[8]_i_2_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_grdc.rd_data_count_i_reg[8]_i_2_O_UNCONNECTED [7:1],D[7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\grdc.rd_data_count_i_reg[8] }));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [4]),
        .Q(Q[4]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [5]),
        .Q(Q[5]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [6]),
        .Q(Q[6]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [7]),
        .Q(Q[7]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [8]),
        .Q(Q[8]),
        .R(\reg_out_i_reg[8]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized0_37
   (Q,
    wrst_busy,
    D,
    wr_clk);
  output [8:0]Q;
  input wrst_busy;
  input [8:0]D;
  input wr_clk;

  wire [8:0]D;
  wire [8:0]Q;
  wire wr_clk;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized0_39
   (D,
    Q,
    DI,
    S,
    \grdc.rd_data_count_i_reg[8] ,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[7]_0 ,
    \reg_out_i_reg[8]_0 ,
    \reg_out_i_reg[8]_1 ,
    rd_clk);
  output [7:0]D;
  output [8:0]Q;
  input [1:0]DI;
  input [6:0]S;
  input [0:0]\grdc.rd_data_count_i_reg[8] ;
  input [0:0]\grdc.rd_data_count_i_reg[7] ;
  input [5:0]\grdc.rd_data_count_i_reg[7]_0 ;
  input \reg_out_i_reg[8]_0 ;
  input [8:0]\reg_out_i_reg[8]_1 ;
  input rd_clk;

  wire [7:0]D;
  wire [1:0]DI;
  wire [8:0]Q;
  wire [6:0]S;
  wire \grdc.rd_data_count_i[7]_i_14_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_2_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_3_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_4_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_5_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_6_n_0 ;
  wire [0:0]\grdc.rd_data_count_i_reg[7] ;
  wire [5:0]\grdc.rd_data_count_i_reg[7]_0 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_0 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_1 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_2 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_3 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_4 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_5 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_6 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_7 ;
  wire [0:0]\grdc.rd_data_count_i_reg[8] ;
  wire rd_clk;
  wire \reg_out_i_reg[8]_0 ;
  wire [8:0]\reg_out_i_reg[8]_1 ;
  wire [0:0]\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:0]\NLW_grdc.rd_data_count_i_reg[8]_i_2_CO_UNCONNECTED ;
  wire [7:1]\NLW_grdc.rd_data_count_i_reg[8]_i_2_O_UNCONNECTED ;

  LUT5 #(
    .INIT(32'h718E8E71)) 
    \grdc.rd_data_count_i[7]_i_14 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] ),
        .I2(\grdc.rd_data_count_i_reg[7]_0 [0]),
        .I3(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .I4(Q[2]),
        .O(\grdc.rd_data_count_i[7]_i_14_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_2 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [5]),
        .O(\grdc.rd_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_3 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [4]),
        .O(\grdc.rd_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_4 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [3]),
        .O(\grdc.rd_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_5 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [2]),
        .O(\grdc.rd_data_count_i[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_6 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .O(\grdc.rd_data_count_i[7]_i_6_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[7]_i_1 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\grdc.rd_data_count_i_reg[7]_i_1_n_0 ,\grdc.rd_data_count_i_reg[7]_i_1_n_1 ,\grdc.rd_data_count_i_reg[7]_i_1_n_2 ,\grdc.rd_data_count_i_reg[7]_i_1_n_3 ,\grdc.rd_data_count_i_reg[7]_i_1_n_4 ,\grdc.rd_data_count_i_reg[7]_i_1_n_5 ,\grdc.rd_data_count_i_reg[7]_i_1_n_6 ,\grdc.rd_data_count_i_reg[7]_i_1_n_7 }),
        .DI({\grdc.rd_data_count_i[7]_i_2_n_0 ,\grdc.rd_data_count_i[7]_i_3_n_0 ,\grdc.rd_data_count_i[7]_i_4_n_0 ,\grdc.rd_data_count_i[7]_i_5_n_0 ,\grdc.rd_data_count_i[7]_i_6_n_0 ,DI,Q[0]}),
        .O({D[6:0],\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({S[6:2],\grdc.rd_data_count_i[7]_i_14_n_0 ,S[1:0]}));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[8]_i_2 
       (.CI(\grdc.rd_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_grdc.rd_data_count_i_reg[8]_i_2_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_grdc.rd_data_count_i_reg[8]_i_2_O_UNCONNECTED [7:1],D[7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\grdc.rd_data_count_i_reg[8] }));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [4]),
        .Q(Q[4]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [5]),
        .Q(Q[5]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [6]),
        .Q(Q[6]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [7]),
        .Q(Q[7]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [8]),
        .Q(Q[8]),
        .R(\reg_out_i_reg[8]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized0_5
   (Q,
    \reg_out_i_reg[0]_0 ,
    wr_pntr_plus1_pf_carry,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 ,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ,
    clr_full,
    wrst_busy,
    D,
    wr_clk);
  output [8:0]Q;
  output \reg_out_i_reg[0]_0 ;
  input wr_pntr_plus1_pf_carry;
  input [8:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 ;
  input [8:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  input clr_full;
  input wrst_busy;
  input [8:0]D;
  input wr_clk;

  wire [8:0]D;
  wire [8:0]Q;
  wire clr_full;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ;
  wire [8:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_8_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_9_n_0 ;
  wire [8:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  wire going_full;
  wire \reg_out_i_reg[0]_0 ;
  wire wr_clk;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'h0000FF80)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_1 
       (.I0(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2_n_0 ),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ),
        .I3(going_full),
        .I4(clr_full),
        .O(\reg_out_i_reg[0]_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [0]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [2]),
        .I3(Q[2]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [6]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [8]),
        .I3(Q[8]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [7]),
        .I5(Q[7]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [3]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [5]),
        .I3(Q[5]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [4]),
        .I5(Q[4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h8000)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5 
       (.I0(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_8_n_0 ),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_9_n_0 ),
        .I3(wr_pntr_plus1_pf_carry),
        .O(going_full));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [3]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [5]),
        .I3(Q[5]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [4]),
        .I5(Q[4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_8 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [6]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [8]),
        .I3(Q[8]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [7]),
        .I5(Q[7]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_9 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [0]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [2]),
        .I3(Q[2]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_9_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized0_7
   (\reg_out_i_reg[8]_0 ,
    D,
    ram_empty_i,
    rd_en,
    Q,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ,
    S,
    \reg_out_i_reg[0]_0 ,
    \reg_out_i_reg[8]_1 ,
    rd_clk);
  output [8:0]\reg_out_i_reg[8]_0 ;
  output [8:0]D;
  input ram_empty_i;
  input rd_en;
  input [1:0]Q;
  input [0:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ;
  input [7:0]S;
  input \reg_out_i_reg[0]_0 ;
  input [8:0]\reg_out_i_reg[8]_1 ;
  input rd_clk;

  wire [8:0]D;
  wire [1:0]Q;
  wire [7:0]S;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[8]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 ;
  wire [0:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ;
  wire p_1_in;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire \reg_out_i_reg[0]_0 ;
  wire [8:0]\reg_out_i_reg[8]_0 ;
  wire [8:0]\reg_out_i_reg[8]_1 ;
  wire [7:0]\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1_CO_UNCONNECTED ;
  wire [7:1]\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1_O_UNCONNECTED ;

  LUT4 #(
    .INIT(16'hAABA)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(Q[1]),
        .I3(Q[0]),
        .O(p_1_in));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[8]_i_2 
       (.I0(\reg_out_i_reg[8]_0 [8]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[8]_i_2_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1 
       (.CI(\reg_out_i_reg[8]_0 [0]),
        .CI_TOP(1'b0),
        .CO({\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 }),
        .DI({\reg_out_i_reg[8]_0 [7:1],p_1_in}),
        .O(D[7:0]),
        .S(S));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1 
       (.CI(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1_O_UNCONNECTED [7:1],D[8]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[8]_i_2_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [0]),
        .Q(\reg_out_i_reg[8]_0 [0]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [1]),
        .Q(\reg_out_i_reg[8]_0 [1]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [2]),
        .Q(\reg_out_i_reg[8]_0 [2]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [3]),
        .Q(\reg_out_i_reg[8]_0 [3]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [4]),
        .Q(\reg_out_i_reg[8]_0 [4]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [5]),
        .Q(\reg_out_i_reg[8]_0 [5]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [6]),
        .Q(\reg_out_i_reg[8]_0 [6]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [7]),
        .Q(\reg_out_i_reg[8]_0 [7]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [8]),
        .Q(\reg_out_i_reg[8]_0 [8]),
        .R(\reg_out_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized1
   (Q,
    wrst_busy,
    D,
    wr_clk);
  output [9:0]Q;
  input wrst_busy;
  input [9:0]D;
  input wr_clk;

  wire [9:0]D;
  wire [9:0]Q;
  wire wr_clk;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[9] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[9]),
        .Q(Q[9]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized1_2
   (DI,
    Q,
    \reg_out_i_reg[7]_0 ,
    S,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[9] ,
    \reg_out_i_reg[9]_0 ,
    D,
    rd_clk);
  output [5:0]DI;
  output [8:0]Q;
  output [0:0]\reg_out_i_reg[7]_0 ;
  output [0:0]S;
  input [0:0]\grdc.rd_data_count_i_reg[7] ;
  input [8:0]\grdc.rd_data_count_i_reg[9] ;
  input \reg_out_i_reg[9]_0 ;
  input [9:0]D;
  input rd_clk;

  wire [9:0]D;
  wire [5:0]DI;
  wire [8:0]Q;
  wire [0:0]S;
  wire [0:0]\grdc.rd_data_count_i_reg[7] ;
  wire [8:0]\grdc.rd_data_count_i_reg[9] ;
  wire rd_clk;
  wire [0:0]\reg_out_i_reg[7]_0 ;
  wire \reg_out_i_reg[9]_0 ;
  wire \reg_out_i_reg_n_0_[9] ;

  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_2 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[9] [5]),
        .O(DI[5]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_3 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[9] [4]),
        .O(DI[4]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_4 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[9] [3]),
        .O(DI[3]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_5 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[9] [2]),
        .O(DI[2]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_6 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[9] [1]),
        .O(DI[1]));
  LUT3 #(
    .INIT(8'h8E)) 
    \grdc.rd_data_count_i[7]_i_7 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] ),
        .I2(\grdc.rd_data_count_i_reg[9] [0]),
        .O(DI[0]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[9]_i_3 
       (.I0(Q[7]),
        .I1(\grdc.rd_data_count_i_reg[9] [6]),
        .O(\reg_out_i_reg[7]_0 ));
  LUT4 #(
    .INIT(16'hD22D)) 
    \grdc.rd_data_count_i[9]_i_4 
       (.I0(Q[8]),
        .I1(\grdc.rd_data_count_i_reg[9] [7]),
        .I2(\grdc.rd_data_count_i_reg[9] [8]),
        .I3(\reg_out_i_reg_n_0_[9] ),
        .O(S));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[9] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[9]),
        .Q(\reg_out_i_reg_n_0_[9] ),
        .R(\reg_out_i_reg[9]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized1_6
   (Q,
    wrst_busy,
    D,
    wr_clk);
  output [9:0]Q;
  input wrst_busy;
  input [9:0]D;
  input wr_clk;

  wire [9:0]D;
  wire [9:0]Q;
  wire wr_clk;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[9] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[9]),
        .Q(Q[9]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized1_8
   (DI,
    Q,
    \reg_out_i_reg[7]_0 ,
    S,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[9] ,
    \reg_out_i_reg[9]_0 ,
    D,
    rd_clk);
  output [5:0]DI;
  output [8:0]Q;
  output [0:0]\reg_out_i_reg[7]_0 ;
  output [0:0]S;
  input [0:0]\grdc.rd_data_count_i_reg[7] ;
  input [8:0]\grdc.rd_data_count_i_reg[9] ;
  input \reg_out_i_reg[9]_0 ;
  input [9:0]D;
  input rd_clk;

  wire [9:0]D;
  wire [5:0]DI;
  wire [8:0]Q;
  wire [0:0]S;
  wire [0:0]\grdc.rd_data_count_i_reg[7] ;
  wire [8:0]\grdc.rd_data_count_i_reg[9] ;
  wire rd_clk;
  wire [0:0]\reg_out_i_reg[7]_0 ;
  wire \reg_out_i_reg[9]_0 ;
  wire \reg_out_i_reg_n_0_[9] ;

  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_2 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[9] [5]),
        .O(DI[5]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_3 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[9] [4]),
        .O(DI[4]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_4 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[9] [3]),
        .O(DI[3]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_5 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[9] [2]),
        .O(DI[2]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_6 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[9] [1]),
        .O(DI[1]));
  LUT3 #(
    .INIT(8'h8E)) 
    \grdc.rd_data_count_i[7]_i_7 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] ),
        .I2(\grdc.rd_data_count_i_reg[9] [0]),
        .O(DI[0]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[9]_i_3 
       (.I0(Q[7]),
        .I1(\grdc.rd_data_count_i_reg[9] [6]),
        .O(\reg_out_i_reg[7]_0 ));
  LUT4 #(
    .INIT(16'hD22D)) 
    \grdc.rd_data_count_i[9]_i_4 
       (.I0(Q[8]),
        .I1(\grdc.rd_data_count_i_reg[9] [7]),
        .I2(\grdc.rd_data_count_i_reg[9] [8]),
        .I3(\reg_out_i_reg_n_0_[9] ),
        .O(S));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[9] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[9]),
        .Q(\reg_out_i_reg_n_0_[9] ),
        .R(\reg_out_i_reg[9]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized2
   (D,
    Q,
    \count_value_i_reg[3] ,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 ,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ,
    rst_d1,
    wrst_busy,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] ,
    wr_en,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_0 ,
    E,
    clr_full,
    \reg_out_i_reg[3]_0 ,
    wr_clk);
  output [1:0]D;
  output [2:0]Q;
  output \count_value_i_reg[3] ;
  input [2:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ;
  input \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 ;
  input [2:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  input rst_d1;
  input wrst_busy;
  input \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] ;
  input wr_en;
  input \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_0 ;
  input [0:0]E;
  input clr_full;
  input [3:0]\reg_out_i_reg[3]_0 ;
  input wr_clk;

  wire [1:0]D;
  wire [0:0]E;
  wire [2:0]Q;
  wire clr_full;
  wire \count_value_i_reg[3] ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ;
  wire [2:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] ;
  wire [2:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 ;
  wire [2:2]rd_pntr_wr;
  wire [3:0]\reg_out_i_reg[3]_0 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wrst_busy;

  LUT6 #(
    .INIT(64'h00000000F8888888)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_1 
       (.I0(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 ),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ),
        .I3(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_0 ),
        .I4(E),
        .I5(clr_full),
        .O(\count_value_i_reg[3] ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [0]),
        .I2(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [2]),
        .I3(rd_pntr_wr),
        .I4(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [0]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [2]),
        .I3(rd_pntr_wr),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h718E8E71)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[3]_i_1 
       (.I0(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2_n_0 ),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [1]),
        .I2(Q[1]),
        .I3(rd_pntr_wr),
        .I4(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [2]),
        .O(D[0]));
  LUT6 #(
    .INIT(64'h2BFF002BD400FFD4)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_1 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [1]),
        .I2(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [2]),
        .I4(rd_pntr_wr),
        .I5(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 ),
        .O(D[1]));
  LUT6 #(
    .INIT(64'h4444444D44444444)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [0]),
        .I2(rst_d1),
        .I3(wrst_busy),
        .I4(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] ),
        .I5(wr_en),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [2]),
        .Q(rd_pntr_wr),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [3]),
        .Q(Q[2]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized2_48
   (D,
    Q,
    ram_empty_i0,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] ,
    rd_en,
    ram_empty_i,
    enb,
    \gen_pf_ic_rc.ram_empty_i_reg_0 ,
    \reg_out_i_reg[0]_0 ,
    \reg_out_i_reg[3]_0 ,
    rd_clk);
  output [1:0]D;
  output [3:0]Q;
  output ram_empty_i0;
  input [3:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  input [1:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] ;
  input rd_en;
  input ram_empty_i;
  input enb;
  input [3:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  input \reg_out_i_reg[0]_0 ;
  input [3:0]\reg_out_i_reg[3]_0 ;
  input rd_clk;

  wire [1:0]D;
  wire [3:0]Q;
  wire enb;
  wire [1:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] ;
  wire \gen_pf_ic_rc.ram_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_3_n_0 ;
  wire [3:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  wire [3:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire rd_en;
  wire \reg_out_i_reg[0]_0 ;
  wire [3:0]\reg_out_i_reg[3]_0 ;

  LUT6 #(
    .INIT(64'h6666666699999969)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[0]_i_1 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] [1]),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] [0]),
        .I4(rd_en),
        .I5(ram_empty_i),
        .O(D[0]));
  LUT5 #(
    .INIT(32'hD42B2BD4)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[1]_i_1 
       (.I0(Q[0]),
        .I1(enb),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I3(Q[1]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hFF8080802020FF20)) 
    \gen_pf_ic_rc.ram_empty_i_i_1 
       (.I0(enb),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [3]),
        .I2(\gen_pf_ic_rc.ram_empty_i_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.ram_empty_i_i_3_n_0 ),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .I5(Q[3]),
        .O(ram_empty_i0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_2 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [2]),
        .I3(Q[2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_0 [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_3 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .I3(Q[2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized2_54
   (D,
    Q,
    \count_value_i_reg[3] ,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 ,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ,
    rst_d1,
    wrst_busy,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] ,
    wr_en,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_0 ,
    E,
    clr_full,
    \reg_out_i_reg[3]_0 ,
    wr_clk);
  output [1:0]D;
  output [2:0]Q;
  output \count_value_i_reg[3] ;
  input [2:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ;
  input \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 ;
  input [2:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  input rst_d1;
  input wrst_busy;
  input \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] ;
  input wr_en;
  input \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_0 ;
  input [0:0]E;
  input clr_full;
  input [3:0]\reg_out_i_reg[3]_0 ;
  input wr_clk;

  wire [1:0]D;
  wire [0:0]E;
  wire [2:0]Q;
  wire clr_full;
  wire \count_value_i_reg[3] ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ;
  wire [2:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] ;
  wire [2:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 ;
  wire [2:2]rd_pntr_wr;
  wire [3:0]\reg_out_i_reg[3]_0 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wrst_busy;

  LUT6 #(
    .INIT(64'h00000000F8888888)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_1 
       (.I0(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 ),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ),
        .I3(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_0 ),
        .I4(E),
        .I5(clr_full),
        .O(\count_value_i_reg[3] ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [0]),
        .I2(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [2]),
        .I3(rd_pntr_wr),
        .I4(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [0]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [2]),
        .I3(rd_pntr_wr),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h718E8E71)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[3]_i_1 
       (.I0(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2_n_0 ),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [1]),
        .I2(Q[1]),
        .I3(rd_pntr_wr),
        .I4(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [2]),
        .O(D[0]));
  LUT6 #(
    .INIT(64'h2BFF002BD400FFD4)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_1 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [1]),
        .I2(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [2]),
        .I4(rd_pntr_wr),
        .I5(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 ),
        .O(D[1]));
  LUT6 #(
    .INIT(64'h4444444D44444444)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [0]),
        .I2(rst_d1),
        .I3(wrst_busy),
        .I4(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] ),
        .I5(wr_en),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [2]),
        .Q(rd_pntr_wr),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [3]),
        .Q(Q[2]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized2_56
   (D,
    Q,
    ram_empty_i0,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] ,
    rd_en,
    ram_empty_i,
    enb,
    \gen_pf_ic_rc.ram_empty_i_reg_0 ,
    \reg_out_i_reg[0]_0 ,
    \reg_out_i_reg[3]_0 ,
    rd_clk);
  output [1:0]D;
  output [3:0]Q;
  output ram_empty_i0;
  input [3:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  input [1:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] ;
  input rd_en;
  input ram_empty_i;
  input enb;
  input [3:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  input \reg_out_i_reg[0]_0 ;
  input [3:0]\reg_out_i_reg[3]_0 ;
  input rd_clk;

  wire [1:0]D;
  wire [3:0]Q;
  wire enb;
  wire [1:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] ;
  wire \gen_pf_ic_rc.ram_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_3_n_0 ;
  wire [3:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  wire [3:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire rd_en;
  wire \reg_out_i_reg[0]_0 ;
  wire [3:0]\reg_out_i_reg[3]_0 ;

  LUT6 #(
    .INIT(64'h6666666699999969)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[0]_i_1 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] [1]),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] [0]),
        .I4(rd_en),
        .I5(ram_empty_i),
        .O(D[0]));
  LUT5 #(
    .INIT(32'hD42B2BD4)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[1]_i_1 
       (.I0(Q[0]),
        .I1(enb),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I3(Q[1]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hFF8080802020FF20)) 
    \gen_pf_ic_rc.ram_empty_i_i_1 
       (.I0(enb),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [3]),
        .I2(\gen_pf_ic_rc.ram_empty_i_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.ram_empty_i_i_3_n_0 ),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .I5(Q[3]),
        .O(ram_empty_i0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_2 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [2]),
        .I3(Q[2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_0 [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_3 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .I3(Q[2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized3
   (D,
    Q,
    \gwdc.wr_data_count_i_reg[4] ,
    wrst_busy,
    \reg_out_i_reg[4]_0 ,
    wr_clk);
  output [2:0]D;
  output [2:0]Q;
  input [4:0]\gwdc.wr_data_count_i_reg[4] ;
  input wrst_busy;
  input [4:0]\reg_out_i_reg[4]_0 ;
  input wr_clk;

  wire [2:0]D;
  wire [2:0]Q;
  wire \gwdc.wr_data_count_i[4]_i_2_n_0 ;
  wire [4:0]\gwdc.wr_data_count_i_reg[4] ;
  wire [4:0]\reg_out_i_reg[4]_0 ;
  wire \reg_out_i_reg_n_0_[3] ;
  wire \reg_out_i_reg_n_0_[4] ;
  wire wr_clk;
  wire wrst_busy;

  LUT4 #(
    .INIT(16'h2DD2)) 
    \gwdc.wr_data_count_i[1]_i_1 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[4] [0]),
        .I2(Q[1]),
        .I3(\gwdc.wr_data_count_i_reg[4] [1]),
        .O(D[0]));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT3 #(
    .INIT(8'h69)) 
    \gwdc.wr_data_count_i[3]_i_1 
       (.I0(\gwdc.wr_data_count_i[4]_i_2_n_0 ),
        .I1(\reg_out_i_reg_n_0_[3] ),
        .I2(\gwdc.wr_data_count_i_reg[4] [3]),
        .O(D[1]));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT5 #(
    .INIT(32'h718E8E71)) 
    \gwdc.wr_data_count_i[4]_i_1 
       (.I0(\gwdc.wr_data_count_i[4]_i_2_n_0 ),
        .I1(\gwdc.wr_data_count_i_reg[4] [3]),
        .I2(\reg_out_i_reg_n_0_[3] ),
        .I3(\reg_out_i_reg_n_0_[4] ),
        .I4(\gwdc.wr_data_count_i_reg[4] [4]),
        .O(D[2]));
  LUT6 #(
    .INIT(64'hD4DD4444DDDDD4DD)) 
    \gwdc.wr_data_count_i[4]_i_2 
       (.I0(Q[2]),
        .I1(\gwdc.wr_data_count_i_reg[4] [2]),
        .I2(\gwdc.wr_data_count_i_reg[4] [0]),
        .I3(Q[0]),
        .I4(\gwdc.wr_data_count_i_reg[4] [1]),
        .I5(Q[1]),
        .O(\gwdc.wr_data_count_i[4]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [3]),
        .Q(\reg_out_i_reg_n_0_[3] ),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [4]),
        .Q(\reg_out_i_reg_n_0_[4] ),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized3_49
   (D,
    Q,
    \reg_out_i_reg[3]_0 ,
    \grdc.rd_data_count_i_reg[4] ,
    \grdc.rd_data_count_i_reg[1] ,
    \reg_out_i_reg[4]_0 ,
    \reg_out_i_reg[4]_1 ,
    rd_clk);
  output [0:0]D;
  output [4:0]Q;
  output \reg_out_i_reg[3]_0 ;
  input [2:0]\grdc.rd_data_count_i_reg[4] ;
  input [1:0]\grdc.rd_data_count_i_reg[1] ;
  input \reg_out_i_reg[4]_0 ;
  input [4:0]\reg_out_i_reg[4]_1 ;
  input rd_clk;

  wire [0:0]D;
  wire [4:0]Q;
  wire [1:0]\grdc.rd_data_count_i_reg[1] ;
  wire [2:0]\grdc.rd_data_count_i_reg[4] ;
  wire rd_clk;
  wire \reg_out_i_reg[3]_0 ;
  wire \reg_out_i_reg[4]_0 ;
  wire [4:0]\reg_out_i_reg[4]_1 ;

  LUT6 #(
    .INIT(64'hC33C96696996C33C)) 
    \grdc.rd_data_count_i[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(\grdc.rd_data_count_i_reg[4] [1]),
        .I3(\grdc.rd_data_count_i_reg[1] [1]),
        .I4(\grdc.rd_data_count_i_reg[1] [0]),
        .I5(\grdc.rd_data_count_i_reg[4] [0]),
        .O(D));
  LUT2 #(
    .INIT(4'h9)) 
    \grdc.rd_data_count_i[4]_i_5 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[4] [2]),
        .O(\reg_out_i_reg[3]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_1 [0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_1 [1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_1 [2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_1 [3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_1 [4]),
        .Q(Q[4]),
        .R(\reg_out_i_reg[4]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized3_55
   (D,
    Q,
    \gwdc.wr_data_count_i_reg[4] ,
    wrst_busy,
    \reg_out_i_reg[4]_0 ,
    wr_clk);
  output [2:0]D;
  output [2:0]Q;
  input [4:0]\gwdc.wr_data_count_i_reg[4] ;
  input wrst_busy;
  input [4:0]\reg_out_i_reg[4]_0 ;
  input wr_clk;

  wire [2:0]D;
  wire [2:0]Q;
  wire \gwdc.wr_data_count_i[4]_i_2_n_0 ;
  wire [4:0]\gwdc.wr_data_count_i_reg[4] ;
  wire [4:0]\reg_out_i_reg[4]_0 ;
  wire \reg_out_i_reg_n_0_[3] ;
  wire \reg_out_i_reg_n_0_[4] ;
  wire wr_clk;
  wire wrst_busy;

  LUT4 #(
    .INIT(16'h2DD2)) 
    \gwdc.wr_data_count_i[1]_i_1 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[4] [0]),
        .I2(Q[1]),
        .I3(\gwdc.wr_data_count_i_reg[4] [1]),
        .O(D[0]));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT3 #(
    .INIT(8'h69)) 
    \gwdc.wr_data_count_i[3]_i_1 
       (.I0(\gwdc.wr_data_count_i[4]_i_2_n_0 ),
        .I1(\reg_out_i_reg_n_0_[3] ),
        .I2(\gwdc.wr_data_count_i_reg[4] [3]),
        .O(D[1]));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT5 #(
    .INIT(32'h718E8E71)) 
    \gwdc.wr_data_count_i[4]_i_1 
       (.I0(\gwdc.wr_data_count_i[4]_i_2_n_0 ),
        .I1(\gwdc.wr_data_count_i_reg[4] [3]),
        .I2(\reg_out_i_reg_n_0_[3] ),
        .I3(\reg_out_i_reg_n_0_[4] ),
        .I4(\gwdc.wr_data_count_i_reg[4] [4]),
        .O(D[2]));
  LUT6 #(
    .INIT(64'hD4DD4444DDDDD4DD)) 
    \gwdc.wr_data_count_i[4]_i_2 
       (.I0(Q[2]),
        .I1(\gwdc.wr_data_count_i_reg[4] [2]),
        .I2(\gwdc.wr_data_count_i_reg[4] [0]),
        .I3(Q[0]),
        .I4(\gwdc.wr_data_count_i_reg[4] [1]),
        .I5(Q[1]),
        .O(\gwdc.wr_data_count_i[4]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [3]),
        .Q(\reg_out_i_reg_n_0_[3] ),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [4]),
        .Q(\reg_out_i_reg_n_0_[4] ),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized3_57
   (D,
    Q,
    \reg_out_i_reg[3]_0 ,
    \grdc.rd_data_count_i_reg[4] ,
    \grdc.rd_data_count_i_reg[1] ,
    \reg_out_i_reg[4]_0 ,
    \reg_out_i_reg[4]_1 ,
    rd_clk);
  output [0:0]D;
  output [4:0]Q;
  output \reg_out_i_reg[3]_0 ;
  input [2:0]\grdc.rd_data_count_i_reg[4] ;
  input [1:0]\grdc.rd_data_count_i_reg[1] ;
  input \reg_out_i_reg[4]_0 ;
  input [4:0]\reg_out_i_reg[4]_1 ;
  input rd_clk;

  wire [0:0]D;
  wire [4:0]Q;
  wire [1:0]\grdc.rd_data_count_i_reg[1] ;
  wire [2:0]\grdc.rd_data_count_i_reg[4] ;
  wire rd_clk;
  wire \reg_out_i_reg[3]_0 ;
  wire \reg_out_i_reg[4]_0 ;
  wire [4:0]\reg_out_i_reg[4]_1 ;

  LUT6 #(
    .INIT(64'hC33C96696996C33C)) 
    \grdc.rd_data_count_i[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(\grdc.rd_data_count_i_reg[4] [1]),
        .I3(\grdc.rd_data_count_i_reg[1] [1]),
        .I4(\grdc.rd_data_count_i_reg[1] [0]),
        .I5(\grdc.rd_data_count_i_reg[4] [0]),
        .O(D));
  LUT2 #(
    .INIT(4'h9)) 
    \grdc.rd_data_count_i[4]_i_5 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[4] [2]),
        .O(\reg_out_i_reg[3]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_1 [0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_1 [1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_1 [2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_1 [3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_1 [4]),
        .Q(Q[4]),
        .R(\reg_out_i_reg[4]_0 ));
endmodule

module zynq_bd_C2C2_0_xpm_fifo_rst
   (\gen_rst_ic.fifo_rd_rst_ic_reg_0 ,
    wrst_busy,
    E,
    wr_rst_busy,
    SR,
    \gen_rst_ic.fifo_rd_rst_ic_reg_1 ,
    underflow_i0,
    rd_clk,
    wr_clk,
    rst,
    wr_en,
    \count_value_i_reg[3] ,
    rst_d1,
    ram_empty_i,
    Q,
    rd_en,
    \guf.underflow_i_reg );
  output \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  output wrst_busy;
  output [0:0]E;
  output wr_rst_busy;
  output [0:0]SR;
  output [0:0]\gen_rst_ic.fifo_rd_rst_ic_reg_1 ;
  output underflow_i0;
  input rd_clk;
  input wr_clk;
  input rst;
  input wr_en;
  input \count_value_i_reg[3] ;
  input rst_d1;
  input ram_empty_i;
  input [1:0]Q;
  input rd_en;
  input \guf.underflow_i_reg ;

  wire \/i__n_0 ;
  wire [0:0]E;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i_reg[3] ;
  (* RTL_KEEP = "yes" *) wire [1:0]\gen_rst_ic.curr_rrst_state ;
  wire \gen_rst_ic.fifo_rd_rst_i ;
  wire \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  wire [0:0]\gen_rst_ic.fifo_rd_rst_ic_reg_1 ;
  wire \gen_rst_ic.fifo_rd_rst_wr_i ;
  wire \gen_rst_ic.fifo_wr_rst_ic ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_rd ;
  wire [1:0]\gen_rst_ic.next_rrst_state ;
  wire \gen_rst_ic.rst_seq_reentered_i_1_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_i_2_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_reg_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ;
  wire \guf.underflow_i_reg ;
  wire p_0_in;
  wire \power_on_rst_reg_n_0_[0] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire rst_d1;
  wire rst_i__0;
  wire underflow_i0;
  wire wr_clk;
  wire wr_en;
  wire wr_rst_busy;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'h00010116)) 
    \/i_ 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\/i__n_0 ));
  LUT6 #(
    .INIT(64'h03030200FFFFFFFF)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I5(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFEFEFEEE)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I3(rst),
        .I4(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFF0EEE0FFFFEEE0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I5(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h000C0008)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I1(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000004400000044)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I3(rst),
        .I4(p_0_in),
        .I5(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1 
       (.I0(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0002)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1 
       (.I0(\gen_rst_ic.curr_rrst_state [0]),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .O(\gen_rst_ic.next_rrst_state [1]));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [0]),
        .Q(\gen_rst_ic.curr_rrst_state [0]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [1]),
        .Q(\gen_rst_ic.curr_rrst_state [1]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h06)) 
    \__0/i_ 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.next_rrst_state [0]));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT5 #(
    .INIT(32'hAAAAAEAE)) 
    \count_value_i[1]_i_1__2 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(ram_empty_i),
        .I2(Q[1]),
        .I3(rd_en),
        .I4(Q[0]),
        .O(SR));
  LUT3 #(
    .INIT(8'h3E)) 
    \gen_rst_ic.fifo_rd_rst_ic_i_1 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.fifo_rd_rst_i ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_rd_rst_ic_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_rd_rst_i ),
        .Q(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFEAFFFFFFEA0000)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I2(rst_i__0),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I4(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ),
        .I5(\gen_rst_ic.fifo_wr_rst_ic ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_2 
       (.I0(p_0_in),
        .I1(rst),
        .O(rst_i__0));
  LUT5 #(
    .INIT(32'h00010116)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_3 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_wr_rst_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ),
        .Q(\gen_rst_ic.fifo_wr_rst_ic ),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_sync_rst \gen_rst_ic.rrst_wr_inst 
       (.dest_clk(wr_clk),
        .dest_rst(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .src_rst(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \gen_rst_ic.rst_seq_reentered_i_1 
       (.I0(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ),
        .I1(rst),
        .I2(p_0_in),
        .O(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00010000)) 
    \gen_rst_ic.rst_seq_reentered_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I5(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.rst_seq_reentered_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ),
        .Q(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEFFFEF00)) 
    \gen_rst_ic.wr_rst_busy_ic_i_1 
       (.I0(rst),
        .I1(p_0_in),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I3(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ),
        .I4(wrst_busy),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000116)) 
    \gen_rst_ic.wr_rst_busy_ic_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.wr_rst_busy_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ),
        .Q(wrst_busy),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_sync_rst__26 \gen_rst_ic.wrst_rd_inst 
       (.dest_clk(rd_clk),
        .dest_rst(\gen_rst_ic.fifo_wr_rst_rd ),
        .src_rst(\gen_rst_ic.fifo_wr_rst_ic ));
  LUT4 #(
    .INIT(16'h0002)) 
    \gen_sdpram.xpm_memory_base_inst_i_1 
       (.I0(wr_en),
        .I1(\count_value_i_reg[3] ),
        .I2(wrst_busy),
        .I3(rst_d1),
        .O(E));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT3 #(
    .INIT(8'hAB)) 
    \grdc.rd_data_count_i[4]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(Q[0]),
        .I2(Q[1]),
        .O(\gen_rst_ic.fifo_rd_rst_ic_reg_1 ));
  LUT3 #(
    .INIT(8'hE0)) 
    \guf.underflow_i_i_1 
       (.I0(\guf.underflow_i_reg ),
        .I1(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I2(rd_en),
        .O(underflow_i0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(\power_on_rst_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\power_on_rst_reg_n_0_[0] ),
        .Q(p_0_in),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    wr_rst_busy_INST_0
       (.I0(wrst_busy),
        .I1(rst_d1),
        .O(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_rst" *) 
module zynq_bd_C2C2_0_xpm_fifo_rst__xdcDup__1
   (\gen_rst_ic.fifo_rd_rst_ic_reg_0 ,
    wrst_busy,
    wr_pntr_plus1_pf_carry,
    wr_rst_busy,
    SR,
    \gen_rst_ic.fifo_rd_rst_ic_reg_1 ,
    underflow_i0,
    rd_clk,
    wr_clk,
    rst,
    wr_en,
    \count_value_i_reg[7] ,
    rst_d1,
    ram_empty_i,
    Q,
    rd_en,
    \guf.underflow_i_reg );
  output \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  output wrst_busy;
  output wr_pntr_plus1_pf_carry;
  output wr_rst_busy;
  output [0:0]SR;
  output [0:0]\gen_rst_ic.fifo_rd_rst_ic_reg_1 ;
  output underflow_i0;
  input rd_clk;
  input wr_clk;
  input rst;
  input wr_en;
  input \count_value_i_reg[7] ;
  input rst_d1;
  input ram_empty_i;
  input [1:0]Q;
  input rd_en;
  input \guf.underflow_i_reg ;

  wire \/i__n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i_reg[7] ;
  (* RTL_KEEP = "yes" *) wire [1:0]\gen_rst_ic.curr_rrst_state ;
  wire \gen_rst_ic.fifo_rd_rst_i ;
  wire \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  wire [0:0]\gen_rst_ic.fifo_rd_rst_ic_reg_1 ;
  wire \gen_rst_ic.fifo_rd_rst_wr_i ;
  wire \gen_rst_ic.fifo_wr_rst_ic ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_rd ;
  wire [1:0]\gen_rst_ic.next_rrst_state ;
  wire \gen_rst_ic.rst_seq_reentered_i_1_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_i_2_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_reg_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ;
  wire \guf.underflow_i_reg ;
  wire p_0_in;
  wire \power_on_rst_reg_n_0_[0] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire rst_d1;
  wire rst_i__0;
  wire underflow_i0;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wr_rst_busy;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'h00010116)) 
    \/i_ 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\/i__n_0 ));
  LUT6 #(
    .INIT(64'h03030200FFFFFFFF)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I5(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFEFEFEEE)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I3(rst),
        .I4(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFF0EEE0FFFFEEE0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I5(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h000C0008)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I1(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000004400000044)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I3(rst),
        .I4(p_0_in),
        .I5(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1 
       (.I0(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0002)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1 
       (.I0(\gen_rst_ic.curr_rrst_state [0]),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .O(\gen_rst_ic.next_rrst_state [1]));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [0]),
        .Q(\gen_rst_ic.curr_rrst_state [0]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [1]),
        .Q(\gen_rst_ic.curr_rrst_state [1]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h06)) 
    \__0/i_ 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.next_rrst_state [0]));
  (* SOFT_HLUTNM = "soft_lutpair204" *) 
  LUT5 #(
    .INIT(32'hAAAAAEAE)) 
    \count_value_i[1]_i_1__2 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(ram_empty_i),
        .I2(Q[1]),
        .I3(rd_en),
        .I4(Q[0]),
        .O(SR));
  LUT3 #(
    .INIT(8'h3E)) 
    \gen_rst_ic.fifo_rd_rst_ic_i_1 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.fifo_rd_rst_i ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_rd_rst_ic_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_rd_rst_i ),
        .Q(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFEAFFFFFFEA0000)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I2(rst_i__0),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I4(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ),
        .I5(\gen_rst_ic.fifo_wr_rst_ic ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair205" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_2 
       (.I0(p_0_in),
        .I1(rst),
        .O(rst_i__0));
  LUT5 #(
    .INIT(32'h00010116)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_3 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_wr_rst_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ),
        .Q(\gen_rst_ic.fifo_wr_rst_ic ),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_sync_rst__15 \gen_rst_ic.rrst_wr_inst 
       (.dest_clk(wr_clk),
        .dest_rst(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .src_rst(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ));
  (* SOFT_HLUTNM = "soft_lutpair205" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \gen_rst_ic.rst_seq_reentered_i_1 
       (.I0(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ),
        .I1(rst),
        .I2(p_0_in),
        .O(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00010000)) 
    \gen_rst_ic.rst_seq_reentered_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I5(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.rst_seq_reentered_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ),
        .Q(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEFFFEF00)) 
    \gen_rst_ic.wr_rst_busy_ic_i_1 
       (.I0(rst),
        .I1(p_0_in),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I3(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ),
        .I4(wrst_busy),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000116)) 
    \gen_rst_ic.wr_rst_busy_ic_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.wr_rst_busy_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ),
        .Q(wrst_busy),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_sync_rst__14 \gen_rst_ic.wrst_rd_inst 
       (.dest_clk(rd_clk),
        .dest_rst(\gen_rst_ic.fifo_wr_rst_rd ),
        .src_rst(\gen_rst_ic.fifo_wr_rst_ic ));
  LUT4 #(
    .INIT(16'h0002)) 
    \gen_sdpram.xpm_memory_base_inst_i_1 
       (.I0(wr_en),
        .I1(\count_value_i_reg[7] ),
        .I2(wrst_busy),
        .I3(rst_d1),
        .O(wr_pntr_plus1_pf_carry));
  (* SOFT_HLUTNM = "soft_lutpair204" *) 
  LUT3 #(
    .INIT(8'hAB)) 
    \grdc.rd_data_count_i[8]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(Q[0]),
        .I2(Q[1]),
        .O(\gen_rst_ic.fifo_rd_rst_ic_reg_1 ));
  LUT3 #(
    .INIT(8'hE0)) 
    \guf.underflow_i_i_1 
       (.I0(\guf.underflow_i_reg ),
        .I1(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I2(rd_en),
        .O(underflow_i0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(\power_on_rst_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\power_on_rst_reg_n_0_[0] ),
        .Q(p_0_in),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    wr_rst_busy_INST_0
       (.I0(wrst_busy),
        .I1(rst_d1),
        .O(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_rst" *) 
module zynq_bd_C2C2_0_xpm_fifo_rst__xdcDup__2
   (\gen_rst_ic.fifo_rd_rst_ic_reg_0 ,
    wrst_busy,
    wr_pntr_plus1_pf_carry,
    wr_rst_busy,
    SR,
    \gen_rst_ic.fifo_rd_rst_ic_reg_1 ,
    underflow_i0,
    rd_clk,
    wr_clk,
    rst,
    wr_en,
    \count_value_i_reg[7] ,
    rst_d1,
    ram_empty_i,
    Q,
    rd_en,
    \guf.underflow_i_reg );
  output \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  output wrst_busy;
  output wr_pntr_plus1_pf_carry;
  output wr_rst_busy;
  output [0:0]SR;
  output [0:0]\gen_rst_ic.fifo_rd_rst_ic_reg_1 ;
  output underflow_i0;
  input rd_clk;
  input wr_clk;
  input rst;
  input wr_en;
  input \count_value_i_reg[7] ;
  input rst_d1;
  input ram_empty_i;
  input [1:0]Q;
  input rd_en;
  input \guf.underflow_i_reg ;

  wire \/i__n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i_reg[7] ;
  (* RTL_KEEP = "yes" *) wire [1:0]\gen_rst_ic.curr_rrst_state ;
  wire \gen_rst_ic.fifo_rd_rst_i ;
  wire \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  wire [0:0]\gen_rst_ic.fifo_rd_rst_ic_reg_1 ;
  wire \gen_rst_ic.fifo_rd_rst_wr_i ;
  wire \gen_rst_ic.fifo_wr_rst_ic ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_rd ;
  wire [1:0]\gen_rst_ic.next_rrst_state ;
  wire \gen_rst_ic.rst_seq_reentered_i_1_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_i_2_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_reg_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ;
  wire \guf.underflow_i_reg ;
  wire p_0_in;
  wire \power_on_rst_reg_n_0_[0] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire rst_d1;
  wire rst_i__0;
  wire underflow_i0;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wr_rst_busy;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'h00010116)) 
    \/i_ 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\/i__n_0 ));
  LUT6 #(
    .INIT(64'h03030200FFFFFFFF)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I5(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFEFEFEEE)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I3(rst),
        .I4(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFF0EEE0FFFFEEE0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I5(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h000C0008)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I1(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000004400000044)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I3(rst),
        .I4(p_0_in),
        .I5(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1 
       (.I0(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0002)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1 
       (.I0(\gen_rst_ic.curr_rrst_state [0]),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .O(\gen_rst_ic.next_rrst_state [1]));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [0]),
        .Q(\gen_rst_ic.curr_rrst_state [0]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [1]),
        .Q(\gen_rst_ic.curr_rrst_state [1]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h06)) 
    \__0/i_ 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.next_rrst_state [0]));
  (* SOFT_HLUTNM = "soft_lutpair172" *) 
  LUT5 #(
    .INIT(32'hAAAAAEAE)) 
    \count_value_i[1]_i_1__2 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(ram_empty_i),
        .I2(Q[1]),
        .I3(rd_en),
        .I4(Q[0]),
        .O(SR));
  LUT3 #(
    .INIT(8'h3E)) 
    \gen_rst_ic.fifo_rd_rst_ic_i_1 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.fifo_rd_rst_i ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_rd_rst_ic_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_rd_rst_i ),
        .Q(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFEAFFFFFFEA0000)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I2(rst_i__0),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I4(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ),
        .I5(\gen_rst_ic.fifo_wr_rst_ic ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair173" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_2 
       (.I0(p_0_in),
        .I1(rst),
        .O(rst_i__0));
  LUT5 #(
    .INIT(32'h00010116)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_3 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_wr_rst_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ),
        .Q(\gen_rst_ic.fifo_wr_rst_ic ),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_sync_rst__17 \gen_rst_ic.rrst_wr_inst 
       (.dest_clk(wr_clk),
        .dest_rst(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .src_rst(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ));
  (* SOFT_HLUTNM = "soft_lutpair173" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \gen_rst_ic.rst_seq_reentered_i_1 
       (.I0(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ),
        .I1(rst),
        .I2(p_0_in),
        .O(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00010000)) 
    \gen_rst_ic.rst_seq_reentered_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I5(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.rst_seq_reentered_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ),
        .Q(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEFFFEF00)) 
    \gen_rst_ic.wr_rst_busy_ic_i_1 
       (.I0(rst),
        .I1(p_0_in),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I3(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ),
        .I4(wrst_busy),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000116)) 
    \gen_rst_ic.wr_rst_busy_ic_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.wr_rst_busy_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ),
        .Q(wrst_busy),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_sync_rst__16 \gen_rst_ic.wrst_rd_inst 
       (.dest_clk(rd_clk),
        .dest_rst(\gen_rst_ic.fifo_wr_rst_rd ),
        .src_rst(\gen_rst_ic.fifo_wr_rst_ic ));
  LUT4 #(
    .INIT(16'h0002)) 
    \gen_sdpram.xpm_memory_base_inst_i_1 
       (.I0(wr_en),
        .I1(\count_value_i_reg[7] ),
        .I2(wrst_busy),
        .I3(rst_d1),
        .O(wr_pntr_plus1_pf_carry));
  (* SOFT_HLUTNM = "soft_lutpair172" *) 
  LUT3 #(
    .INIT(8'hAB)) 
    \grdc.rd_data_count_i[8]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(Q[0]),
        .I2(Q[1]),
        .O(\gen_rst_ic.fifo_rd_rst_ic_reg_1 ));
  LUT3 #(
    .INIT(8'hE0)) 
    \guf.underflow_i_i_1 
       (.I0(\guf.underflow_i_reg ),
        .I1(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I2(rd_en),
        .O(underflow_i0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(\power_on_rst_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\power_on_rst_reg_n_0_[0] ),
        .Q(p_0_in),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    wr_rst_busy_INST_0
       (.I0(wrst_busy),
        .I1(rst_d1),
        .O(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_rst" *) 
module zynq_bd_C2C2_0_xpm_fifo_rst__xdcDup__3
   (\gen_rst_ic.fifo_rd_rst_ic_reg_0 ,
    wrst_busy,
    wr_pntr_plus1_pf_carry,
    wr_rst_busy,
    SR,
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ,
    underflow_i0,
    rd_clk,
    wr_clk,
    rst,
    wr_en,
    \count_value_i_reg[8] ,
    rst_d1,
    ram_empty_i,
    rd_en,
    Q,
    \guf.underflow_i_reg );
  output \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  output wrst_busy;
  output wr_pntr_plus1_pf_carry;
  output wr_rst_busy;
  output [0:0]SR;
  output [0:0]\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ;
  output underflow_i0;
  input rd_clk;
  input wr_clk;
  input rst;
  input wr_en;
  input \count_value_i_reg[8] ;
  input rst_d1;
  input ram_empty_i;
  input rd_en;
  input [1:0]Q;
  input \guf.underflow_i_reg ;

  wire \/i__n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ;
  wire [0:0]\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i_reg[8] ;
  (* RTL_KEEP = "yes" *) wire [1:0]\gen_rst_ic.curr_rrst_state ;
  wire \gen_rst_ic.fifo_rd_rst_i ;
  wire \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  wire \gen_rst_ic.fifo_rd_rst_wr_i ;
  wire \gen_rst_ic.fifo_wr_rst_ic ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_rd ;
  wire [1:0]\gen_rst_ic.next_rrst_state ;
  wire \gen_rst_ic.rst_seq_reentered_i_1_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_i_2_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_reg_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ;
  wire \guf.underflow_i_reg ;
  wire p_0_in;
  wire \power_on_rst_reg_n_0_[0] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire rst_d1;
  wire rst_i__0;
  wire underflow_i0;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wr_rst_busy;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'h00010116)) 
    \/i_ 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\/i__n_0 ));
  LUT6 #(
    .INIT(64'h03030200FFFFFFFF)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I5(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFEFEFEEE)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I3(rst),
        .I4(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFF0EEE0FFFFEEE0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I5(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h000C0008)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I1(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000004400000044)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I3(rst),
        .I4(p_0_in),
        .I5(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1 
       (.I0(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0002)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1 
       (.I0(\gen_rst_ic.curr_rrst_state [0]),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .O(\gen_rst_ic.next_rrst_state [1]));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [0]),
        .Q(\gen_rst_ic.curr_rrst_state [0]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [1]),
        .Q(\gen_rst_ic.curr_rrst_state [1]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h06)) 
    \__0/i_ 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.next_rrst_state [0]));
  (* SOFT_HLUTNM = "soft_lutpair342" *) 
  LUT5 #(
    .INIT(32'hFFFF000A)) 
    \count_value_i[1]_i_1__2 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .O(SR));
  LUT3 #(
    .INIT(8'h3E)) 
    \gen_rst_ic.fifo_rd_rst_ic_i_1 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.fifo_rd_rst_i ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_rd_rst_ic_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_rd_rst_i ),
        .Q(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFEAFFFFFFEA0000)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I2(rst_i__0),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I4(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ),
        .I5(\gen_rst_ic.fifo_wr_rst_ic ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair343" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_2 
       (.I0(p_0_in),
        .I1(rst),
        .O(rst_i__0));
  LUT5 #(
    .INIT(32'h00010116)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_3 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_wr_rst_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ),
        .Q(\gen_rst_ic.fifo_wr_rst_ic ),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_sync_rst__19 \gen_rst_ic.rrst_wr_inst 
       (.dest_clk(wr_clk),
        .dest_rst(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .src_rst(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ));
  (* SOFT_HLUTNM = "soft_lutpair343" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \gen_rst_ic.rst_seq_reentered_i_1 
       (.I0(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ),
        .I1(rst),
        .I2(p_0_in),
        .O(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00010000)) 
    \gen_rst_ic.rst_seq_reentered_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I5(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.rst_seq_reentered_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ),
        .Q(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEFFFEF00)) 
    \gen_rst_ic.wr_rst_busy_ic_i_1 
       (.I0(rst),
        .I1(p_0_in),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I3(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ),
        .I4(wrst_busy),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000116)) 
    \gen_rst_ic.wr_rst_busy_ic_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.wr_rst_busy_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ),
        .Q(wrst_busy),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_sync_rst__18 \gen_rst_ic.wrst_rd_inst 
       (.dest_clk(rd_clk),
        .dest_rst(\gen_rst_ic.fifo_wr_rst_rd ),
        .src_rst(\gen_rst_ic.fifo_wr_rst_ic ));
  LUT4 #(
    .INIT(16'h0002)) 
    \gen_sdpram.xpm_memory_base_inst_i_1 
       (.I0(wr_en),
        .I1(\count_value_i_reg[8] ),
        .I2(wrst_busy),
        .I3(rst_d1),
        .O(wr_pntr_plus1_pf_carry));
  (* SOFT_HLUTNM = "soft_lutpair342" *) 
  LUT3 #(
    .INIT(8'hF1)) 
    \grdc.rd_data_count_i[9]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .O(\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ));
  LUT3 #(
    .INIT(8'hE0)) 
    \guf.underflow_i_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(\guf.underflow_i_reg ),
        .I2(rd_en),
        .O(underflow_i0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(\power_on_rst_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\power_on_rst_reg_n_0_[0] ),
        .Q(p_0_in),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    wr_rst_busy_INST_0
       (.I0(wrst_busy),
        .I1(rst_d1),
        .O(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_rst" *) 
module zynq_bd_C2C2_0_xpm_fifo_rst__xdcDup__4
   (\gen_rst_ic.fifo_rd_rst_ic_reg_0 ,
    wrst_busy,
    wr_pntr_plus1_pf_carry,
    wr_rst_busy,
    SR,
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ,
    underflow_i0,
    rd_clk,
    wr_clk,
    rst,
    wr_en,
    \count_value_i_reg[8] ,
    rst_d1,
    ram_empty_i,
    rd_en,
    Q,
    \guf.underflow_i_reg );
  output \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  output wrst_busy;
  output wr_pntr_plus1_pf_carry;
  output wr_rst_busy;
  output [0:0]SR;
  output [0:0]\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ;
  output underflow_i0;
  input rd_clk;
  input wr_clk;
  input rst;
  input wr_en;
  input \count_value_i_reg[8] ;
  input rst_d1;
  input ram_empty_i;
  input rd_en;
  input [1:0]Q;
  input \guf.underflow_i_reg ;

  wire \/i__n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ;
  wire [0:0]\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i_reg[8] ;
  (* RTL_KEEP = "yes" *) wire [1:0]\gen_rst_ic.curr_rrst_state ;
  wire \gen_rst_ic.fifo_rd_rst_i ;
  wire \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  wire \gen_rst_ic.fifo_rd_rst_wr_i ;
  wire \gen_rst_ic.fifo_wr_rst_ic ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_rd ;
  wire [1:0]\gen_rst_ic.next_rrst_state ;
  wire \gen_rst_ic.rst_seq_reentered_i_1_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_i_2_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_reg_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ;
  wire \guf.underflow_i_reg ;
  wire p_0_in;
  wire \power_on_rst_reg_n_0_[0] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire rst_d1;
  wire rst_i__0;
  wire underflow_i0;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wr_rst_busy;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'h00010116)) 
    \/i_ 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\/i__n_0 ));
  LUT6 #(
    .INIT(64'h03030200FFFFFFFF)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I5(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFEFEFEEE)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I3(rst),
        .I4(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFF0EEE0FFFFEEE0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I5(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h000C0008)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I1(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000004400000044)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I3(rst),
        .I4(p_0_in),
        .I5(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1 
       (.I0(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0002)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1 
       (.I0(\gen_rst_ic.curr_rrst_state [0]),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .O(\gen_rst_ic.next_rrst_state [1]));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [0]),
        .Q(\gen_rst_ic.curr_rrst_state [0]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [1]),
        .Q(\gen_rst_ic.curr_rrst_state [1]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h06)) 
    \__0/i_ 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.next_rrst_state [0]));
  (* SOFT_HLUTNM = "soft_lutpair288" *) 
  LUT5 #(
    .INIT(32'hFFFF000A)) 
    \count_value_i[1]_i_1__2 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .O(SR));
  LUT3 #(
    .INIT(8'h3E)) 
    \gen_rst_ic.fifo_rd_rst_ic_i_1 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.fifo_rd_rst_i ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_rd_rst_ic_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_rd_rst_i ),
        .Q(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFEAFFFFFFEA0000)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I2(rst_i__0),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I4(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ),
        .I5(\gen_rst_ic.fifo_wr_rst_ic ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair289" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_2 
       (.I0(p_0_in),
        .I1(rst),
        .O(rst_i__0));
  LUT5 #(
    .INIT(32'h00010116)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_3 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_wr_rst_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ),
        .Q(\gen_rst_ic.fifo_wr_rst_ic ),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_sync_rst__21 \gen_rst_ic.rrst_wr_inst 
       (.dest_clk(wr_clk),
        .dest_rst(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .src_rst(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ));
  (* SOFT_HLUTNM = "soft_lutpair289" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \gen_rst_ic.rst_seq_reentered_i_1 
       (.I0(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ),
        .I1(rst),
        .I2(p_0_in),
        .O(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00010000)) 
    \gen_rst_ic.rst_seq_reentered_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I5(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.rst_seq_reentered_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ),
        .Q(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEFFFEF00)) 
    \gen_rst_ic.wr_rst_busy_ic_i_1 
       (.I0(rst),
        .I1(p_0_in),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I3(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ),
        .I4(wrst_busy),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000116)) 
    \gen_rst_ic.wr_rst_busy_ic_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.wr_rst_busy_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ),
        .Q(wrst_busy),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_sync_rst__20 \gen_rst_ic.wrst_rd_inst 
       (.dest_clk(rd_clk),
        .dest_rst(\gen_rst_ic.fifo_wr_rst_rd ),
        .src_rst(\gen_rst_ic.fifo_wr_rst_ic ));
  LUT4 #(
    .INIT(16'h0002)) 
    \gen_sdpram.xpm_memory_base_inst_i_1 
       (.I0(wr_en),
        .I1(\count_value_i_reg[8] ),
        .I2(wrst_busy),
        .I3(rst_d1),
        .O(wr_pntr_plus1_pf_carry));
  (* SOFT_HLUTNM = "soft_lutpair288" *) 
  LUT3 #(
    .INIT(8'hF1)) 
    \grdc.rd_data_count_i[9]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .O(\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ));
  LUT3 #(
    .INIT(8'hE0)) 
    \guf.underflow_i_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(\guf.underflow_i_reg ),
        .I2(rd_en),
        .O(underflow_i0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(\power_on_rst_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\power_on_rst_reg_n_0_[0] ),
        .Q(p_0_in),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    wr_rst_busy_INST_0
       (.I0(wrst_busy),
        .I1(rst_d1),
        .O(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_rst" *) 
module zynq_bd_C2C2_0_xpm_fifo_rst__xdcDup__5
   (\gen_rst_ic.fifo_rd_rst_ic_reg_0 ,
    wrst_busy,
    wr_pntr_plus1_pf_carry,
    wr_rst_busy,
    SR,
    \gen_rst_ic.fifo_rd_rst_ic_reg_1 ,
    underflow_i0,
    rd_clk,
    wr_clk,
    rst,
    wr_en,
    \count_value_i_reg[7] ,
    rst_d1,
    ram_empty_i,
    Q,
    rd_en,
    \guf.underflow_i_reg );
  output \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  output wrst_busy;
  output wr_pntr_plus1_pf_carry;
  output wr_rst_busy;
  output [0:0]SR;
  output [0:0]\gen_rst_ic.fifo_rd_rst_ic_reg_1 ;
  output underflow_i0;
  input rd_clk;
  input wr_clk;
  input rst;
  input wr_en;
  input \count_value_i_reg[7] ;
  input rst_d1;
  input ram_empty_i;
  input [1:0]Q;
  input rd_en;
  input \guf.underflow_i_reg ;

  wire \/i__n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i_reg[7] ;
  (* RTL_KEEP = "yes" *) wire [1:0]\gen_rst_ic.curr_rrst_state ;
  wire \gen_rst_ic.fifo_rd_rst_i ;
  wire \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  wire [0:0]\gen_rst_ic.fifo_rd_rst_ic_reg_1 ;
  wire \gen_rst_ic.fifo_rd_rst_wr_i ;
  wire \gen_rst_ic.fifo_wr_rst_ic ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_rd ;
  wire [1:0]\gen_rst_ic.next_rrst_state ;
  wire \gen_rst_ic.rst_seq_reentered_i_1_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_i_2_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_reg_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ;
  wire \guf.underflow_i_reg ;
  wire p_0_in;
  wire \power_on_rst_reg_n_0_[0] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire rst_d1;
  wire rst_i__0;
  wire underflow_i0;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wr_rst_busy;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'h00010116)) 
    \/i_ 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\/i__n_0 ));
  LUT6 #(
    .INIT(64'h03030200FFFFFFFF)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I5(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFEFEFEEE)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I3(rst),
        .I4(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFF0EEE0FFFFEEE0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I5(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h000C0008)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I1(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000004400000044)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I3(rst),
        .I4(p_0_in),
        .I5(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1 
       (.I0(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0002)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1 
       (.I0(\gen_rst_ic.curr_rrst_state [0]),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .O(\gen_rst_ic.next_rrst_state [1]));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [0]),
        .Q(\gen_rst_ic.curr_rrst_state [0]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [1]),
        .Q(\gen_rst_ic.curr_rrst_state [1]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h06)) 
    \__0/i_ 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.next_rrst_state [0]));
  (* SOFT_HLUTNM = "soft_lutpair235" *) 
  LUT5 #(
    .INIT(32'hAAAAAEAE)) 
    \count_value_i[1]_i_1__2 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(ram_empty_i),
        .I2(Q[1]),
        .I3(rd_en),
        .I4(Q[0]),
        .O(SR));
  LUT3 #(
    .INIT(8'h3E)) 
    \gen_rst_ic.fifo_rd_rst_ic_i_1 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.fifo_rd_rst_i ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_rd_rst_ic_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_rd_rst_i ),
        .Q(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFEAFFFFFFEA0000)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I2(rst_i__0),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I4(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ),
        .I5(\gen_rst_ic.fifo_wr_rst_ic ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair236" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_2 
       (.I0(p_0_in),
        .I1(rst),
        .O(rst_i__0));
  LUT5 #(
    .INIT(32'h00010116)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_3 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_wr_rst_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ),
        .Q(\gen_rst_ic.fifo_wr_rst_ic ),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_sync_rst__23 \gen_rst_ic.rrst_wr_inst 
       (.dest_clk(wr_clk),
        .dest_rst(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .src_rst(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ));
  (* SOFT_HLUTNM = "soft_lutpair236" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \gen_rst_ic.rst_seq_reentered_i_1 
       (.I0(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ),
        .I1(rst),
        .I2(p_0_in),
        .O(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00010000)) 
    \gen_rst_ic.rst_seq_reentered_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I5(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.rst_seq_reentered_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ),
        .Q(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEFFFEF00)) 
    \gen_rst_ic.wr_rst_busy_ic_i_1 
       (.I0(rst),
        .I1(p_0_in),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I3(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ),
        .I4(wrst_busy),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000116)) 
    \gen_rst_ic.wr_rst_busy_ic_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.wr_rst_busy_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ),
        .Q(wrst_busy),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_sync_rst__22 \gen_rst_ic.wrst_rd_inst 
       (.dest_clk(rd_clk),
        .dest_rst(\gen_rst_ic.fifo_wr_rst_rd ),
        .src_rst(\gen_rst_ic.fifo_wr_rst_ic ));
  LUT4 #(
    .INIT(16'h0002)) 
    \gen_sdpram.xpm_memory_base_inst_i_1 
       (.I0(wr_en),
        .I1(\count_value_i_reg[7] ),
        .I2(wrst_busy),
        .I3(rst_d1),
        .O(wr_pntr_plus1_pf_carry));
  (* SOFT_HLUTNM = "soft_lutpair235" *) 
  LUT3 #(
    .INIT(8'hAB)) 
    \grdc.rd_data_count_i[8]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(Q[0]),
        .I2(Q[1]),
        .O(\gen_rst_ic.fifo_rd_rst_ic_reg_1 ));
  LUT3 #(
    .INIT(8'hE0)) 
    \guf.underflow_i_i_1 
       (.I0(\guf.underflow_i_reg ),
        .I1(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I2(rd_en),
        .O(underflow_i0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(\power_on_rst_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\power_on_rst_reg_n_0_[0] ),
        .Q(p_0_in),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    wr_rst_busy_INST_0
       (.I0(wrst_busy),
        .I1(rst_d1),
        .O(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_rst" *) 
module zynq_bd_C2C2_0_xpm_fifo_rst__xdcDup__6
   (\gen_rst_ic.fifo_rd_rst_ic_reg_0 ,
    wrst_busy,
    E,
    wr_rst_busy,
    SR,
    \gen_rst_ic.fifo_rd_rst_ic_reg_1 ,
    underflow_i0,
    rd_clk,
    wr_clk,
    rst,
    wr_en,
    \count_value_i_reg[3] ,
    rst_d1,
    ram_empty_i,
    Q,
    rd_en,
    \guf.underflow_i_reg );
  output \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  output wrst_busy;
  output [0:0]E;
  output wr_rst_busy;
  output [0:0]SR;
  output [0:0]\gen_rst_ic.fifo_rd_rst_ic_reg_1 ;
  output underflow_i0;
  input rd_clk;
  input wr_clk;
  input rst;
  input wr_en;
  input \count_value_i_reg[3] ;
  input rst_d1;
  input ram_empty_i;
  input [1:0]Q;
  input rd_en;
  input \guf.underflow_i_reg ;

  wire \/i__n_0 ;
  wire [0:0]E;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i_reg[3] ;
  (* RTL_KEEP = "yes" *) wire [1:0]\gen_rst_ic.curr_rrst_state ;
  wire \gen_rst_ic.fifo_rd_rst_i ;
  wire \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  wire [0:0]\gen_rst_ic.fifo_rd_rst_ic_reg_1 ;
  wire \gen_rst_ic.fifo_rd_rst_wr_i ;
  wire \gen_rst_ic.fifo_wr_rst_ic ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_rd ;
  wire [1:0]\gen_rst_ic.next_rrst_state ;
  wire \gen_rst_ic.rst_seq_reentered_i_1_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_i_2_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_reg_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ;
  wire \guf.underflow_i_reg ;
  wire p_0_in;
  wire \power_on_rst_reg_n_0_[0] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire rst_d1;
  wire rst_i__0;
  wire underflow_i0;
  wire wr_clk;
  wire wr_en;
  wire wr_rst_busy;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'h00010116)) 
    \/i_ 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\/i__n_0 ));
  LUT6 #(
    .INIT(64'h03030200FFFFFFFF)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I5(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFEFEFEEE)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I3(rst),
        .I4(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFF0EEE0FFFFEEE0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I5(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h000C0008)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I1(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000004400000044)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I3(rst),
        .I4(p_0_in),
        .I5(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1 
       (.I0(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0002)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1 
       (.I0(\gen_rst_ic.curr_rrst_state [0]),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .O(\gen_rst_ic.next_rrst_state [1]));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [0]),
        .Q(\gen_rst_ic.curr_rrst_state [0]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [1]),
        .Q(\gen_rst_ic.curr_rrst_state [1]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h06)) 
    \__0/i_ 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.next_rrst_state [0]));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT5 #(
    .INIT(32'hAAAAAEAE)) 
    \count_value_i[1]_i_1__2 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(ram_empty_i),
        .I2(Q[1]),
        .I3(rd_en),
        .I4(Q[0]),
        .O(SR));
  LUT3 #(
    .INIT(8'h3E)) 
    \gen_rst_ic.fifo_rd_rst_ic_i_1 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.fifo_rd_rst_i ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_rd_rst_ic_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_rd_rst_i ),
        .Q(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFEAFFFFFFEA0000)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I2(rst_i__0),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I4(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ),
        .I5(\gen_rst_ic.fifo_wr_rst_ic ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_2 
       (.I0(p_0_in),
        .I1(rst),
        .O(rst_i__0));
  LUT5 #(
    .INIT(32'h00010116)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_3 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_wr_rst_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ),
        .Q(\gen_rst_ic.fifo_wr_rst_ic ),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_sync_rst__25 \gen_rst_ic.rrst_wr_inst 
       (.dest_clk(wr_clk),
        .dest_rst(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .src_rst(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \gen_rst_ic.rst_seq_reentered_i_1 
       (.I0(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ),
        .I1(rst),
        .I2(p_0_in),
        .O(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00010000)) 
    \gen_rst_ic.rst_seq_reentered_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I5(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.rst_seq_reentered_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ),
        .Q(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEFFFEF00)) 
    \gen_rst_ic.wr_rst_busy_ic_i_1 
       (.I0(rst),
        .I1(p_0_in),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I3(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ),
        .I4(wrst_busy),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000116)) 
    \gen_rst_ic.wr_rst_busy_ic_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.wr_rst_busy_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ),
        .Q(wrst_busy),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_sync_rst__24 \gen_rst_ic.wrst_rd_inst 
       (.dest_clk(rd_clk),
        .dest_rst(\gen_rst_ic.fifo_wr_rst_rd ),
        .src_rst(\gen_rst_ic.fifo_wr_rst_ic ));
  LUT4 #(
    .INIT(16'h0002)) 
    \gen_sdpram.xpm_memory_base_inst_i_1 
       (.I0(wr_en),
        .I1(\count_value_i_reg[3] ),
        .I2(wrst_busy),
        .I3(rst_d1),
        .O(E));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT3 #(
    .INIT(8'hAB)) 
    \grdc.rd_data_count_i[4]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(Q[0]),
        .I2(Q[1]),
        .O(\gen_rst_ic.fifo_rd_rst_ic_reg_1 ));
  LUT3 #(
    .INIT(8'hE0)) 
    \guf.underflow_i_i_1 
       (.I0(\guf.underflow_i_reg ),
        .I1(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I2(rd_en),
        .O(underflow_i0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(\power_on_rst_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\power_on_rst_reg_n_0_[0] ),
        .Q(p_0_in),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    wr_rst_busy_INST_0
       (.I0(wrst_busy),
        .I1(rst_d1),
        .O(wr_rst_busy));
endmodule

(* ADDR_WIDTH_A = "8" *) (* ADDR_WIDTH_B = "8" *) (* AUTO_SLEEP_TIME = "0" *) 
(* BYTE_WRITE_WIDTH_A = "45" *) (* BYTE_WRITE_WIDTH_B = "45" *) (* CASCADE_HEIGHT = "0" *) 
(* CLOCKING_MODE = "1" *) (* ECC_BIT_RANGE = "[7:0]" *) (* ECC_MODE = "0" *) 
(* ECC_TYPE = "NONE" *) (* IGNORE_INIT_SYNTH = "0" *) (* MAX_NUM_CHAR = "0" *) 
(* MEMORY_INIT_FILE = "none" *) (* MEMORY_INIT_PARAM = "" *) (* MEMORY_OPTIMIZATION = "true" *) 
(* MEMORY_PRIMITIVE = "2" *) (* MEMORY_SIZE = "11520" *) (* MEMORY_TYPE = "1" *) 
(* MESSAGE_CONTROL = "0" *) (* NUM_CHAR_LOC = "0" *) (* P_ECC_MODE = "0" *) 
(* P_ENABLE_BYTE_WRITE_A = "0" *) (* P_ENABLE_BYTE_WRITE_B = "0" *) (* P_MAX_DEPTH_DATA = "256" *) 
(* P_MEMORY_OPT = "yes" *) (* P_MEMORY_PRIMITIVE = "block" *) (* P_MIN_WIDTH_DATA = "45" *) 
(* P_MIN_WIDTH_DATA_A = "45" *) (* P_MIN_WIDTH_DATA_B = "45" *) (* P_MIN_WIDTH_DATA_ECC = "45" *) 
(* P_MIN_WIDTH_DATA_LDW = "4" *) (* P_MIN_WIDTH_DATA_SHFT = "45" *) (* P_NUM_COLS_WRITE_A = "1" *) 
(* P_NUM_COLS_WRITE_B = "1" *) (* P_NUM_ROWS_READ_A = "1" *) (* P_NUM_ROWS_READ_B = "1" *) 
(* P_NUM_ROWS_WRITE_A = "1" *) (* P_NUM_ROWS_WRITE_B = "1" *) (* P_SDP_WRITE_MODE = "no" *) 
(* P_WIDTH_ADDR_LSB_READ_A = "0" *) (* P_WIDTH_ADDR_LSB_READ_B = "0" *) (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
(* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) (* P_WIDTH_ADDR_READ_A = "8" *) (* P_WIDTH_ADDR_READ_B = "8" *) 
(* P_WIDTH_ADDR_WRITE_A = "8" *) (* P_WIDTH_ADDR_WRITE_B = "8" *) (* P_WIDTH_COL_WRITE_A = "45" *) 
(* P_WIDTH_COL_WRITE_B = "45" *) (* RAM_DECOMP = "auto" *) (* READ_DATA_WIDTH_A = "45" *) 
(* READ_DATA_WIDTH_B = "45" *) (* READ_LATENCY_A = "2" *) (* READ_LATENCY_B = "2" *) 
(* READ_RESET_VALUE_A = "0" *) (* READ_RESET_VALUE_B = "0" *) (* RST_MODE_A = "SYNC" *) 
(* RST_MODE_B = "SYNC" *) (* SIM_ASSERT_CHK = "0" *) (* USE_EMBEDDED_CONSTRAINT = "0" *) 
(* USE_MEM_INIT = "0" *) (* USE_MEM_INIT_MMI = "0" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH_A = "45" *) (* WRITE_DATA_WIDTH_B = "45" *) 
(* WRITE_MODE_A = "2" *) (* WRITE_MODE_B = "2" *) (* WRITE_PROTECT = "1" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "soft" *) (* rsta_loop_iter = "48" *) 
(* rstb_loop_iter = "48" *) 
module zynq_bd_C2C2_0_xpm_memory_base
   (sleep,
    clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    injectsbiterra,
    injectdbiterra,
    douta,
    sbiterra,
    dbiterra,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    injectsbiterrb,
    injectdbiterrb,
    doutb,
    sbiterrb,
    dbiterrb);
  input sleep;
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [7:0]addra;
  input [44:0]dina;
  input injectsbiterra;
  input injectdbiterra;
  output [44:0]douta;
  output sbiterra;
  output dbiterra;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [7:0]addrb;
  input [44:0]dinb;
  input injectsbiterrb;
  input injectdbiterrb;
  output [44:0]doutb;
  output sbiterrb;
  output dbiterrb;

  wire \<const0> ;
  wire [7:0]addra;
  wire [7:0]addrb;
  wire clka;
  wire clkb;
  wire [44:0]dina;
  wire [44:0]doutb;
  wire ena;
  wire enb;
  wire regceb;
  wire rstb;
  wire sleep;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTDBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTSBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_DBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_SBITERR_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINA_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINB_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPA_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPB_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTA_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTB_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPA_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPB_UNCONNECTED ;
  wire [31:13]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTBDOUT_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPADOUTP_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPBDOUTP_UNCONNECTED ;
  wire [7:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_RDADDRECC_UNCONNECTED ;

  assign dbiterra = \<const0> ;
  assign dbiterrb = \<const0> ;
  assign douta[44] = \<const0> ;
  assign douta[43] = \<const0> ;
  assign douta[42] = \<const0> ;
  assign douta[41] = \<const0> ;
  assign douta[40] = \<const0> ;
  assign douta[39] = \<const0> ;
  assign douta[38] = \<const0> ;
  assign douta[37] = \<const0> ;
  assign douta[36] = \<const0> ;
  assign douta[35] = \<const0> ;
  assign douta[34] = \<const0> ;
  assign douta[33] = \<const0> ;
  assign douta[32] = \<const0> ;
  assign douta[31] = \<const0> ;
  assign douta[30] = \<const0> ;
  assign douta[29] = \<const0> ;
  assign douta[28] = \<const0> ;
  assign douta[27] = \<const0> ;
  assign douta[26] = \<const0> ;
  assign douta[25] = \<const0> ;
  assign douta[24] = \<const0> ;
  assign douta[23] = \<const0> ;
  assign douta[22] = \<const0> ;
  assign douta[21] = \<const0> ;
  assign douta[20] = \<const0> ;
  assign douta[19] = \<const0> ;
  assign douta[18] = \<const0> ;
  assign douta[17] = \<const0> ;
  assign douta[16] = \<const0> ;
  assign douta[15] = \<const0> ;
  assign douta[14] = \<const0> ;
  assign douta[13] = \<const0> ;
  assign douta[12] = \<const0> ;
  assign douta[11] = \<const0> ;
  assign douta[10] = \<const0> ;
  assign douta[9] = \<const0> ;
  assign douta[8] = \<const0> ;
  assign douta[7] = \<const0> ;
  assign douta[6] = \<const0> ;
  assign douta[5] = \<const0> ;
  assign douta[4] = \<const0> ;
  assign douta[3] = \<const0> ;
  assign douta[2] = \<const0> ;
  assign douta[1] = \<const0> ;
  assign douta[0] = \<const0> ;
  assign sbiterra = \<const0> ;
  assign sbiterrb = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* \MEM.PORTA.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTA.ADDRESS_END  = "511" *) 
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d45" *) 
  (* \MEM.PORTA.DATA_LSB  = "0" *) 
  (* \MEM.PORTA.DATA_MSB  = "44" *) 
  (* \MEM.PORTB.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTB.ADDRESS_END  = "511" *) 
  (* \MEM.PORTB.DATA_BIT_LAYOUT  = "p0_d45" *) 
  (* \MEM.PORTB.DATA_LSB  = "0" *) 
  (* \MEM.PORTB.DATA_MSB  = "44" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RDADDR_COLLISION_HWCONFIG = "DELAYED_WRITE" *) 
  (* RTL_RAM_BITS = "11520" *) 
  (* RTL_RAM_NAME = "inst/master_fpga_gen.axi_chip2chip_master_inst/axi_chip2chip_ar_fifo_inst/axi_chip2chip_async_fifo_inst/xpm_fifo_async_inst/gnuram_async_fifo.xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst/gen_wr_a.gen_word_narrow.mem_reg" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "511" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "44" *) 
  RAMB36E2 #(
    .CASCADE_ORDER_A("NONE"),
    .CASCADE_ORDER_B("NONE"),
    .CLOCK_DOMAINS("INDEPENDENT"),
    .DOA_REG(1),
    .DOB_REG(1),
    .ENADDRENA("FALSE"),
    .ENADDRENB("FALSE"),
    .EN_ECC_PIPE("FALSE"),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .RDADDRCHANGEA("FALSE"),
    .RDADDRCHANGEB("FALSE"),
    .READ_WIDTH_A(72),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SLEEP_ASYNC("TRUE"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("NO_CHANGE"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(72)) 
    \gen_wr_a.gen_word_narrow.mem_reg 
       (.ADDRARDADDR({1'b0,addrb,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({1'b0,addra,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRENA(1'b1),
        .ADDRENB(1'b1),
        .CASDIMUXA(1'b0),
        .CASDIMUXB(1'b0),
        .CASDINA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINA_UNCONNECTED [31:0]),
        .CASDINB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINB_UNCONNECTED [31:0]),
        .CASDINPA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPA_UNCONNECTED [3:0]),
        .CASDINPB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPB_UNCONNECTED [3:0]),
        .CASDOMUXA(1'b0),
        .CASDOMUXB(1'b0),
        .CASDOMUXEN_A(1'b1),
        .CASDOMUXEN_B(1'b1),
        .CASDOUTA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTA_UNCONNECTED [31:0]),
        .CASDOUTB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTB_UNCONNECTED [31:0]),
        .CASDOUTPA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPA_UNCONNECTED [3:0]),
        .CASDOUTPB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPB_UNCONNECTED [3:0]),
        .CASINDBITERR(1'b0),
        .CASINSBITERR(1'b0),
        .CASOREGIMUXA(1'b0),
        .CASOREGIMUXB(1'b0),
        .CASOREGIMUXEN_A(1'b1),
        .CASOREGIMUXEN_B(1'b1),
        .CASOUTDBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTDBITERR_UNCONNECTED ),
        .CASOUTSBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTSBITERR_UNCONNECTED ),
        .CLKARDCLK(clkb),
        .CLKBWRCLK(clka),
        .DBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DBITERR_UNCONNECTED ),
        .DINADIN(dina[31:0]),
        .DINBDIN({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,dina[44:32]}),
        .DINPADINP({1'b1,1'b1,1'b1,1'b1}),
        .DINPBDINP({1'b1,1'b1,1'b1,1'b1}),
        .DOUTADOUT(doutb[31:0]),
        .DOUTBDOUT({\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTBDOUT_UNCONNECTED [31:13],doutb[44:32]}),
        .DOUTPADOUTP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPADOUTP_UNCONNECTED [3:0]),
        .DOUTPBDOUTP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPBDOUTP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_gen_wr_a.gen_word_narrow.mem_reg_ECCPARITY_UNCONNECTED [7:0]),
        .ECCPIPECE(1'b1),
        .ENARDEN(enb),
        .ENBWREN(ena),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_gen_wr_a.gen_word_narrow.mem_reg_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(regceb),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(rstb),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_SBITERR_UNCONNECTED ),
        .SLEEP(1'b0),
        .WEA({1'b0,1'b0,1'b0,1'b0}),
        .WEBWE({ena,ena,ena,ena,ena,ena,ena,ena}));
endmodule

(* ADDR_WIDTH_A = "8" *) (* ADDR_WIDTH_B = "8" *) (* AUTO_SLEEP_TIME = "0" *) 
(* BYTE_WRITE_WIDTH_A = "45" *) (* BYTE_WRITE_WIDTH_B = "45" *) (* CASCADE_HEIGHT = "0" *) 
(* CLOCKING_MODE = "1" *) (* ECC_BIT_RANGE = "[7:0]" *) (* ECC_MODE = "0" *) 
(* ECC_TYPE = "NONE" *) (* IGNORE_INIT_SYNTH = "0" *) (* MAX_NUM_CHAR = "0" *) 
(* MEMORY_INIT_FILE = "none" *) (* MEMORY_INIT_PARAM = "" *) (* MEMORY_OPTIMIZATION = "true" *) 
(* MEMORY_PRIMITIVE = "2" *) (* MEMORY_SIZE = "11520" *) (* MEMORY_TYPE = "1" *) 
(* MESSAGE_CONTROL = "0" *) (* NUM_CHAR_LOC = "0" *) (* ORIG_REF_NAME = "xpm_memory_base" *) 
(* P_ECC_MODE = "0" *) (* P_ENABLE_BYTE_WRITE_A = "0" *) (* P_ENABLE_BYTE_WRITE_B = "0" *) 
(* P_MAX_DEPTH_DATA = "256" *) (* P_MEMORY_OPT = "yes" *) (* P_MEMORY_PRIMITIVE = "block" *) 
(* P_MIN_WIDTH_DATA = "45" *) (* P_MIN_WIDTH_DATA_A = "45" *) (* P_MIN_WIDTH_DATA_B = "45" *) 
(* P_MIN_WIDTH_DATA_ECC = "45" *) (* P_MIN_WIDTH_DATA_LDW = "4" *) (* P_MIN_WIDTH_DATA_SHFT = "45" *) 
(* P_NUM_COLS_WRITE_A = "1" *) (* P_NUM_COLS_WRITE_B = "1" *) (* P_NUM_ROWS_READ_A = "1" *) 
(* P_NUM_ROWS_READ_B = "1" *) (* P_NUM_ROWS_WRITE_A = "1" *) (* P_NUM_ROWS_WRITE_B = "1" *) 
(* P_SDP_WRITE_MODE = "no" *) (* P_WIDTH_ADDR_LSB_READ_A = "0" *) (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
(* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) (* P_WIDTH_ADDR_READ_A = "8" *) 
(* P_WIDTH_ADDR_READ_B = "8" *) (* P_WIDTH_ADDR_WRITE_A = "8" *) (* P_WIDTH_ADDR_WRITE_B = "8" *) 
(* P_WIDTH_COL_WRITE_A = "45" *) (* P_WIDTH_COL_WRITE_B = "45" *) (* RAM_DECOMP = "auto" *) 
(* READ_DATA_WIDTH_A = "45" *) (* READ_DATA_WIDTH_B = "45" *) (* READ_LATENCY_A = "2" *) 
(* READ_LATENCY_B = "2" *) (* READ_RESET_VALUE_A = "0" *) (* READ_RESET_VALUE_B = "0" *) 
(* RST_MODE_A = "SYNC" *) (* RST_MODE_B = "SYNC" *) (* SIM_ASSERT_CHK = "0" *) 
(* USE_EMBEDDED_CONSTRAINT = "0" *) (* USE_MEM_INIT = "0" *) (* USE_MEM_INIT_MMI = "0" *) 
(* VERSION = "0" *) (* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH_A = "45" *) 
(* WRITE_DATA_WIDTH_B = "45" *) (* WRITE_MODE_A = "2" *) (* WRITE_MODE_B = "2" *) 
(* WRITE_PROTECT = "1" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "soft" *) 
(* rsta_loop_iter = "48" *) (* rstb_loop_iter = "48" *) 
module zynq_bd_C2C2_0_xpm_memory_base__2
   (sleep,
    clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    injectsbiterra,
    injectdbiterra,
    douta,
    sbiterra,
    dbiterra,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    injectsbiterrb,
    injectdbiterrb,
    doutb,
    sbiterrb,
    dbiterrb);
  input sleep;
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [7:0]addra;
  input [44:0]dina;
  input injectsbiterra;
  input injectdbiterra;
  output [44:0]douta;
  output sbiterra;
  output dbiterra;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [7:0]addrb;
  input [44:0]dinb;
  input injectsbiterrb;
  input injectdbiterrb;
  output [44:0]doutb;
  output sbiterrb;
  output dbiterrb;

  wire \<const0> ;
  wire [7:0]addra;
  wire [7:0]addrb;
  wire clka;
  wire clkb;
  wire [44:0]dina;
  wire [44:0]doutb;
  wire ena;
  wire enb;
  wire regceb;
  wire rstb;
  wire sleep;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTDBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTSBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_DBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_SBITERR_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINA_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINB_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPA_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPB_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTA_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTB_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPA_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPB_UNCONNECTED ;
  wire [31:13]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTBDOUT_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPADOUTP_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPBDOUTP_UNCONNECTED ;
  wire [7:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_RDADDRECC_UNCONNECTED ;

  assign dbiterra = \<const0> ;
  assign dbiterrb = \<const0> ;
  assign douta[44] = \<const0> ;
  assign douta[43] = \<const0> ;
  assign douta[42] = \<const0> ;
  assign douta[41] = \<const0> ;
  assign douta[40] = \<const0> ;
  assign douta[39] = \<const0> ;
  assign douta[38] = \<const0> ;
  assign douta[37] = \<const0> ;
  assign douta[36] = \<const0> ;
  assign douta[35] = \<const0> ;
  assign douta[34] = \<const0> ;
  assign douta[33] = \<const0> ;
  assign douta[32] = \<const0> ;
  assign douta[31] = \<const0> ;
  assign douta[30] = \<const0> ;
  assign douta[29] = \<const0> ;
  assign douta[28] = \<const0> ;
  assign douta[27] = \<const0> ;
  assign douta[26] = \<const0> ;
  assign douta[25] = \<const0> ;
  assign douta[24] = \<const0> ;
  assign douta[23] = \<const0> ;
  assign douta[22] = \<const0> ;
  assign douta[21] = \<const0> ;
  assign douta[20] = \<const0> ;
  assign douta[19] = \<const0> ;
  assign douta[18] = \<const0> ;
  assign douta[17] = \<const0> ;
  assign douta[16] = \<const0> ;
  assign douta[15] = \<const0> ;
  assign douta[14] = \<const0> ;
  assign douta[13] = \<const0> ;
  assign douta[12] = \<const0> ;
  assign douta[11] = \<const0> ;
  assign douta[10] = \<const0> ;
  assign douta[9] = \<const0> ;
  assign douta[8] = \<const0> ;
  assign douta[7] = \<const0> ;
  assign douta[6] = \<const0> ;
  assign douta[5] = \<const0> ;
  assign douta[4] = \<const0> ;
  assign douta[3] = \<const0> ;
  assign douta[2] = \<const0> ;
  assign douta[1] = \<const0> ;
  assign douta[0] = \<const0> ;
  assign sbiterra = \<const0> ;
  assign sbiterrb = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* \MEM.PORTA.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTA.ADDRESS_END  = "511" *) 
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d45" *) 
  (* \MEM.PORTA.DATA_LSB  = "0" *) 
  (* \MEM.PORTA.DATA_MSB  = "44" *) 
  (* \MEM.PORTB.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTB.ADDRESS_END  = "511" *) 
  (* \MEM.PORTB.DATA_BIT_LAYOUT  = "p0_d45" *) 
  (* \MEM.PORTB.DATA_LSB  = "0" *) 
  (* \MEM.PORTB.DATA_MSB  = "44" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RDADDR_COLLISION_HWCONFIG = "DELAYED_WRITE" *) 
  (* RTL_RAM_BITS = "11520" *) 
  (* RTL_RAM_NAME = "inst/master_fpga_gen.axi_chip2chip_master_inst/axi_chip2chip_aw_fifo_inst/axi_chip2chip_async_fifo_inst/xpm_fifo_async_inst/gnuram_async_fifo.xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst/gen_wr_a.gen_word_narrow.mem_reg" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "511" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "44" *) 
  RAMB36E2 #(
    .CASCADE_ORDER_A("NONE"),
    .CASCADE_ORDER_B("NONE"),
    .CLOCK_DOMAINS("INDEPENDENT"),
    .DOA_REG(1),
    .DOB_REG(1),
    .ENADDRENA("FALSE"),
    .ENADDRENB("FALSE"),
    .EN_ECC_PIPE("FALSE"),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .RDADDRCHANGEA("FALSE"),
    .RDADDRCHANGEB("FALSE"),
    .READ_WIDTH_A(72),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SLEEP_ASYNC("TRUE"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("NO_CHANGE"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(72)) 
    \gen_wr_a.gen_word_narrow.mem_reg 
       (.ADDRARDADDR({1'b0,addrb,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({1'b0,addra,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRENA(1'b1),
        .ADDRENB(1'b1),
        .CASDIMUXA(1'b0),
        .CASDIMUXB(1'b0),
        .CASDINA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINA_UNCONNECTED [31:0]),
        .CASDINB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINB_UNCONNECTED [31:0]),
        .CASDINPA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPA_UNCONNECTED [3:0]),
        .CASDINPB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPB_UNCONNECTED [3:0]),
        .CASDOMUXA(1'b0),
        .CASDOMUXB(1'b0),
        .CASDOMUXEN_A(1'b1),
        .CASDOMUXEN_B(1'b1),
        .CASDOUTA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTA_UNCONNECTED [31:0]),
        .CASDOUTB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTB_UNCONNECTED [31:0]),
        .CASDOUTPA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPA_UNCONNECTED [3:0]),
        .CASDOUTPB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPB_UNCONNECTED [3:0]),
        .CASINDBITERR(1'b0),
        .CASINSBITERR(1'b0),
        .CASOREGIMUXA(1'b0),
        .CASOREGIMUXB(1'b0),
        .CASOREGIMUXEN_A(1'b1),
        .CASOREGIMUXEN_B(1'b1),
        .CASOUTDBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTDBITERR_UNCONNECTED ),
        .CASOUTSBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTSBITERR_UNCONNECTED ),
        .CLKARDCLK(clkb),
        .CLKBWRCLK(clka),
        .DBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DBITERR_UNCONNECTED ),
        .DINADIN(dina[31:0]),
        .DINBDIN({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,dina[44:32]}),
        .DINPADINP({1'b1,1'b1,1'b1,1'b1}),
        .DINPBDINP({1'b1,1'b1,1'b1,1'b1}),
        .DOUTADOUT(doutb[31:0]),
        .DOUTBDOUT({\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTBDOUT_UNCONNECTED [31:13],doutb[44:32]}),
        .DOUTPADOUTP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPADOUTP_UNCONNECTED [3:0]),
        .DOUTPBDOUTP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPBDOUTP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_gen_wr_a.gen_word_narrow.mem_reg_ECCPARITY_UNCONNECTED [7:0]),
        .ECCPIPECE(1'b1),
        .ENARDEN(enb),
        .ENBWREN(ena),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_gen_wr_a.gen_word_narrow.mem_reg_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(regceb),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(rstb),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_SBITERR_UNCONNECTED ),
        .SLEEP(1'b0),
        .WEA({1'b0,1'b0,1'b0,1'b0}),
        .WEBWE({ena,ena,ena,ena,ena,ena,ena,ena}));
endmodule

(* ADDR_WIDTH_A = "9" *) (* ADDR_WIDTH_B = "9" *) (* AUTO_SLEEP_TIME = "0" *) 
(* BYTE_WRITE_WIDTH_A = "38" *) (* BYTE_WRITE_WIDTH_B = "38" *) (* CASCADE_HEIGHT = "0" *) 
(* CLOCKING_MODE = "1" *) (* ECC_BIT_RANGE = "[7:0]" *) (* ECC_MODE = "0" *) 
(* ECC_TYPE = "NONE" *) (* IGNORE_INIT_SYNTH = "0" *) (* MAX_NUM_CHAR = "0" *) 
(* MEMORY_INIT_FILE = "none" *) (* MEMORY_INIT_PARAM = "" *) (* MEMORY_OPTIMIZATION = "true" *) 
(* MEMORY_PRIMITIVE = "2" *) (* MEMORY_SIZE = "19456" *) (* MEMORY_TYPE = "1" *) 
(* MESSAGE_CONTROL = "0" *) (* NUM_CHAR_LOC = "0" *) (* ORIG_REF_NAME = "xpm_memory_base" *) 
(* P_ECC_MODE = "0" *) (* P_ENABLE_BYTE_WRITE_A = "0" *) (* P_ENABLE_BYTE_WRITE_B = "0" *) 
(* P_MAX_DEPTH_DATA = "512" *) (* P_MEMORY_OPT = "yes" *) (* P_MEMORY_PRIMITIVE = "block" *) 
(* P_MIN_WIDTH_DATA = "38" *) (* P_MIN_WIDTH_DATA_A = "38" *) (* P_MIN_WIDTH_DATA_B = "38" *) 
(* P_MIN_WIDTH_DATA_ECC = "38" *) (* P_MIN_WIDTH_DATA_LDW = "4" *) (* P_MIN_WIDTH_DATA_SHFT = "38" *) 
(* P_NUM_COLS_WRITE_A = "1" *) (* P_NUM_COLS_WRITE_B = "1" *) (* P_NUM_ROWS_READ_A = "1" *) 
(* P_NUM_ROWS_READ_B = "1" *) (* P_NUM_ROWS_WRITE_A = "1" *) (* P_NUM_ROWS_WRITE_B = "1" *) 
(* P_SDP_WRITE_MODE = "no" *) (* P_WIDTH_ADDR_LSB_READ_A = "0" *) (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
(* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) (* P_WIDTH_ADDR_READ_A = "9" *) 
(* P_WIDTH_ADDR_READ_B = "9" *) (* P_WIDTH_ADDR_WRITE_A = "9" *) (* P_WIDTH_ADDR_WRITE_B = "9" *) 
(* P_WIDTH_COL_WRITE_A = "38" *) (* P_WIDTH_COL_WRITE_B = "38" *) (* RAM_DECOMP = "auto" *) 
(* READ_DATA_WIDTH_A = "38" *) (* READ_DATA_WIDTH_B = "38" *) (* READ_LATENCY_A = "2" *) 
(* READ_LATENCY_B = "2" *) (* READ_RESET_VALUE_A = "0" *) (* READ_RESET_VALUE_B = "0" *) 
(* RST_MODE_A = "SYNC" *) (* RST_MODE_B = "SYNC" *) (* SIM_ASSERT_CHK = "0" *) 
(* USE_EMBEDDED_CONSTRAINT = "0" *) (* USE_MEM_INIT = "0" *) (* USE_MEM_INIT_MMI = "0" *) 
(* VERSION = "0" *) (* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH_A = "38" *) 
(* WRITE_DATA_WIDTH_B = "38" *) (* WRITE_MODE_A = "2" *) (* WRITE_MODE_B = "2" *) 
(* WRITE_PROTECT = "1" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "soft" *) 
(* rsta_loop_iter = "40" *) (* rstb_loop_iter = "40" *) 
module zynq_bd_C2C2_0_xpm_memory_base__parameterized0
   (sleep,
    clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    injectsbiterra,
    injectdbiterra,
    douta,
    sbiterra,
    dbiterra,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    injectsbiterrb,
    injectdbiterrb,
    doutb,
    sbiterrb,
    dbiterrb);
  input sleep;
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [8:0]addra;
  input [37:0]dina;
  input injectsbiterra;
  input injectdbiterra;
  output [37:0]douta;
  output sbiterra;
  output dbiterra;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [8:0]addrb;
  input [37:0]dinb;
  input injectsbiterrb;
  input injectdbiterrb;
  output [37:0]doutb;
  output sbiterrb;
  output dbiterrb;

  wire \<const0> ;
  wire [8:0]addra;
  wire [8:0]addrb;
  wire clka;
  wire clkb;
  wire [37:0]dina;
  wire [37:1]\^doutb ;
  wire enb;
  wire regceb;
  wire rstb;
  wire sleep;
  wire [0:0]wea;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTDBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTSBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_DBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_SBITERR_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINA_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINB_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPA_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPB_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTA_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTB_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPA_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPB_UNCONNECTED ;
  wire [31:5]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTBDOUT_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPADOUTP_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPBDOUTP_UNCONNECTED ;
  wire [7:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_RDADDRECC_UNCONNECTED ;

  assign dbiterra = \<const0> ;
  assign dbiterrb = \<const0> ;
  assign douta[37] = \<const0> ;
  assign douta[36] = \<const0> ;
  assign douta[35] = \<const0> ;
  assign douta[34] = \<const0> ;
  assign douta[33] = \<const0> ;
  assign douta[32] = \<const0> ;
  assign douta[31] = \<const0> ;
  assign douta[30] = \<const0> ;
  assign douta[29] = \<const0> ;
  assign douta[28] = \<const0> ;
  assign douta[27] = \<const0> ;
  assign douta[26] = \<const0> ;
  assign douta[25] = \<const0> ;
  assign douta[24] = \<const0> ;
  assign douta[23] = \<const0> ;
  assign douta[22] = \<const0> ;
  assign douta[21] = \<const0> ;
  assign douta[20] = \<const0> ;
  assign douta[19] = \<const0> ;
  assign douta[18] = \<const0> ;
  assign douta[17] = \<const0> ;
  assign douta[16] = \<const0> ;
  assign douta[15] = \<const0> ;
  assign douta[14] = \<const0> ;
  assign douta[13] = \<const0> ;
  assign douta[12] = \<const0> ;
  assign douta[11] = \<const0> ;
  assign douta[10] = \<const0> ;
  assign douta[9] = \<const0> ;
  assign douta[8] = \<const0> ;
  assign douta[7] = \<const0> ;
  assign douta[6] = \<const0> ;
  assign douta[5] = \<const0> ;
  assign douta[4] = \<const0> ;
  assign douta[3] = \<const0> ;
  assign douta[2] = \<const0> ;
  assign douta[1] = \<const0> ;
  assign douta[0] = \<const0> ;
  assign doutb[37:1] = \^doutb [37:1];
  assign doutb[0] = \<const0> ;
  assign sbiterra = \<const0> ;
  assign sbiterrb = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* \MEM.PORTA.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTA.ADDRESS_END  = "511" *) 
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d37" *) 
  (* \MEM.PORTA.DATA_LSB  = "0" *) 
  (* \MEM.PORTA.DATA_MSB  = "36" *) 
  (* \MEM.PORTB.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTB.ADDRESS_END  = "511" *) 
  (* \MEM.PORTB.DATA_BIT_LAYOUT  = "p0_d37" *) 
  (* \MEM.PORTB.DATA_LSB  = "0" *) 
  (* \MEM.PORTB.DATA_MSB  = "36" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RDADDR_COLLISION_HWCONFIG = "DELAYED_WRITE" *) 
  (* RTL_RAM_BITS = "19456" *) 
  (* RTL_RAM_NAME = "inst/master_fpga_gen.axi_chip2chip_master_inst/axi_chip2chip_w_fifo_inst/axi_chip2chip_async_fifo_inst/xpm_fifo_async_inst/gnuram_async_fifo.xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst/gen_wr_a.gen_word_narrow.mem_reg" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "511" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "36" *) 
  RAMB36E2 #(
    .CASCADE_ORDER_A("NONE"),
    .CASCADE_ORDER_B("NONE"),
    .CLOCK_DOMAINS("INDEPENDENT"),
    .DOA_REG(1),
    .DOB_REG(1),
    .ENADDRENA("FALSE"),
    .ENADDRENB("FALSE"),
    .EN_ECC_PIPE("FALSE"),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .RDADDRCHANGEA("FALSE"),
    .RDADDRCHANGEB("FALSE"),
    .READ_WIDTH_A(72),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SLEEP_ASYNC("TRUE"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("NO_CHANGE"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(72)) 
    \gen_wr_a.gen_word_narrow.mem_reg 
       (.ADDRARDADDR({addrb,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({addra,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRENA(1'b1),
        .ADDRENB(1'b1),
        .CASDIMUXA(1'b0),
        .CASDIMUXB(1'b0),
        .CASDINA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINA_UNCONNECTED [31:0]),
        .CASDINB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINB_UNCONNECTED [31:0]),
        .CASDINPA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPA_UNCONNECTED [3:0]),
        .CASDINPB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPB_UNCONNECTED [3:0]),
        .CASDOMUXA(1'b0),
        .CASDOMUXB(1'b0),
        .CASDOMUXEN_A(1'b1),
        .CASDOMUXEN_B(1'b1),
        .CASDOUTA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTA_UNCONNECTED [31:0]),
        .CASDOUTB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTB_UNCONNECTED [31:0]),
        .CASDOUTPA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPA_UNCONNECTED [3:0]),
        .CASDOUTPB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPB_UNCONNECTED [3:0]),
        .CASINDBITERR(1'b0),
        .CASINSBITERR(1'b0),
        .CASOREGIMUXA(1'b0),
        .CASOREGIMUXB(1'b0),
        .CASOREGIMUXEN_A(1'b1),
        .CASOREGIMUXEN_B(1'b1),
        .CASOUTDBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTDBITERR_UNCONNECTED ),
        .CASOUTSBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTSBITERR_UNCONNECTED ),
        .CLKARDCLK(clkb),
        .CLKBWRCLK(clka),
        .DBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DBITERR_UNCONNECTED ),
        .DINADIN(dina[32:1]),
        .DINBDIN({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,dina[37:33]}),
        .DINPADINP({1'b1,1'b1,1'b1,1'b1}),
        .DINPBDINP({1'b1,1'b1,1'b1,1'b1}),
        .DOUTADOUT(\^doutb [32:1]),
        .DOUTBDOUT({\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTBDOUT_UNCONNECTED [31:5],\^doutb [37:33]}),
        .DOUTPADOUTP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPADOUTP_UNCONNECTED [3:0]),
        .DOUTPBDOUTP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPBDOUTP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_gen_wr_a.gen_word_narrow.mem_reg_ECCPARITY_UNCONNECTED [7:0]),
        .ECCPIPECE(1'b1),
        .ENARDEN(enb),
        .ENBWREN(1'b1),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_gen_wr_a.gen_word_narrow.mem_reg_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(regceb),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(rstb),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_SBITERR_UNCONNECTED ),
        .SLEEP(1'b0),
        .WEA({1'b0,1'b0,1'b0,1'b0}),
        .WEBWE({wea,wea,wea,wea,wea,wea,wea,wea}));
endmodule

(* ADDR_WIDTH_A = "9" *) (* ADDR_WIDTH_B = "9" *) (* AUTO_SLEEP_TIME = "0" *) 
(* BYTE_WRITE_WIDTH_A = "36" *) (* BYTE_WRITE_WIDTH_B = "36" *) (* CASCADE_HEIGHT = "0" *) 
(* CLOCKING_MODE = "1" *) (* ECC_BIT_RANGE = "[7:0]" *) (* ECC_MODE = "0" *) 
(* ECC_TYPE = "NONE" *) (* IGNORE_INIT_SYNTH = "0" *) (* MAX_NUM_CHAR = "0" *) 
(* MEMORY_INIT_FILE = "none" *) (* MEMORY_INIT_PARAM = "" *) (* MEMORY_OPTIMIZATION = "true" *) 
(* MEMORY_PRIMITIVE = "2" *) (* MEMORY_SIZE = "18432" *) (* MEMORY_TYPE = "1" *) 
(* MESSAGE_CONTROL = "0" *) (* NUM_CHAR_LOC = "0" *) (* ORIG_REF_NAME = "xpm_memory_base" *) 
(* P_ECC_MODE = "0" *) (* P_ENABLE_BYTE_WRITE_A = "0" *) (* P_ENABLE_BYTE_WRITE_B = "0" *) 
(* P_MAX_DEPTH_DATA = "512" *) (* P_MEMORY_OPT = "yes" *) (* P_MEMORY_PRIMITIVE = "block" *) 
(* P_MIN_WIDTH_DATA = "36" *) (* P_MIN_WIDTH_DATA_A = "36" *) (* P_MIN_WIDTH_DATA_B = "36" *) 
(* P_MIN_WIDTH_DATA_ECC = "36" *) (* P_MIN_WIDTH_DATA_LDW = "4" *) (* P_MIN_WIDTH_DATA_SHFT = "36" *) 
(* P_NUM_COLS_WRITE_A = "1" *) (* P_NUM_COLS_WRITE_B = "1" *) (* P_NUM_ROWS_READ_A = "1" *) 
(* P_NUM_ROWS_READ_B = "1" *) (* P_NUM_ROWS_WRITE_A = "1" *) (* P_NUM_ROWS_WRITE_B = "1" *) 
(* P_SDP_WRITE_MODE = "no" *) (* P_WIDTH_ADDR_LSB_READ_A = "0" *) (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
(* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) (* P_WIDTH_ADDR_READ_A = "9" *) 
(* P_WIDTH_ADDR_READ_B = "9" *) (* P_WIDTH_ADDR_WRITE_A = "9" *) (* P_WIDTH_ADDR_WRITE_B = "9" *) 
(* P_WIDTH_COL_WRITE_A = "36" *) (* P_WIDTH_COL_WRITE_B = "36" *) (* RAM_DECOMP = "auto" *) 
(* READ_DATA_WIDTH_A = "36" *) (* READ_DATA_WIDTH_B = "36" *) (* READ_LATENCY_A = "2" *) 
(* READ_LATENCY_B = "2" *) (* READ_RESET_VALUE_A = "0" *) (* READ_RESET_VALUE_B = "0" *) 
(* RST_MODE_A = "SYNC" *) (* RST_MODE_B = "SYNC" *) (* SIM_ASSERT_CHK = "0" *) 
(* USE_EMBEDDED_CONSTRAINT = "0" *) (* USE_MEM_INIT = "0" *) (* USE_MEM_INIT_MMI = "0" *) 
(* VERSION = "0" *) (* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH_A = "36" *) 
(* WRITE_DATA_WIDTH_B = "36" *) (* WRITE_MODE_A = "2" *) (* WRITE_MODE_B = "2" *) 
(* WRITE_PROTECT = "1" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "soft" *) 
(* rsta_loop_iter = "36" *) (* rstb_loop_iter = "36" *) 
module zynq_bd_C2C2_0_xpm_memory_base__parameterized1
   (sleep,
    clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    injectsbiterra,
    injectdbiterra,
    douta,
    sbiterra,
    dbiterra,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    injectsbiterrb,
    injectdbiterrb,
    doutb,
    sbiterrb,
    dbiterrb);
  input sleep;
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [8:0]addra;
  input [35:0]dina;
  input injectsbiterra;
  input injectdbiterra;
  output [35:0]douta;
  output sbiterra;
  output dbiterra;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [8:0]addrb;
  input [35:0]dinb;
  input injectsbiterrb;
  input injectdbiterrb;
  output [35:0]doutb;
  output sbiterrb;
  output dbiterrb;

  wire \<const0> ;
  wire [8:0]addra;
  wire [8:0]addrb;
  wire clka;
  wire clkb;
  wire [35:0]dina;
  wire [35:0]doutb;
  wire enb;
  wire regceb;
  wire rstb;
  wire sleep;
  wire [0:0]wea;
  wire [15:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINA_UNCONNECTED ;
  wire [15:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINB_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPA_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPB_UNCONNECTED ;
  wire [15:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTA_UNCONNECTED ;
  wire [15:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTB_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPA_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPB_UNCONNECTED ;

  assign dbiterra = \<const0> ;
  assign dbiterrb = \<const0> ;
  assign douta[35] = \<const0> ;
  assign douta[34] = \<const0> ;
  assign douta[33] = \<const0> ;
  assign douta[32] = \<const0> ;
  assign douta[31] = \<const0> ;
  assign douta[30] = \<const0> ;
  assign douta[29] = \<const0> ;
  assign douta[28] = \<const0> ;
  assign douta[27] = \<const0> ;
  assign douta[26] = \<const0> ;
  assign douta[25] = \<const0> ;
  assign douta[24] = \<const0> ;
  assign douta[23] = \<const0> ;
  assign douta[22] = \<const0> ;
  assign douta[21] = \<const0> ;
  assign douta[20] = \<const0> ;
  assign douta[19] = \<const0> ;
  assign douta[18] = \<const0> ;
  assign douta[17] = \<const0> ;
  assign douta[16] = \<const0> ;
  assign douta[15] = \<const0> ;
  assign douta[14] = \<const0> ;
  assign douta[13] = \<const0> ;
  assign douta[12] = \<const0> ;
  assign douta[11] = \<const0> ;
  assign douta[10] = \<const0> ;
  assign douta[9] = \<const0> ;
  assign douta[8] = \<const0> ;
  assign douta[7] = \<const0> ;
  assign douta[6] = \<const0> ;
  assign douta[5] = \<const0> ;
  assign douta[4] = \<const0> ;
  assign douta[3] = \<const0> ;
  assign douta[2] = \<const0> ;
  assign douta[1] = \<const0> ;
  assign douta[0] = \<const0> ;
  assign sbiterra = \<const0> ;
  assign sbiterrb = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* \MEM.PORTA.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTA.ADDRESS_END  = "511" *) 
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p4_d32" *) 
  (* \MEM.PORTA.DATA_LSB  = "0" *) 
  (* \MEM.PORTA.DATA_MSB  = "35" *) 
  (* \MEM.PORTB.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTB.ADDRESS_END  = "511" *) 
  (* \MEM.PORTB.DATA_BIT_LAYOUT  = "p4_d32" *) 
  (* \MEM.PORTB.DATA_LSB  = "0" *) 
  (* \MEM.PORTB.DATA_MSB  = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RDADDR_COLLISION_HWCONFIG = "DELAYED_WRITE" *) 
  (* RTL_RAM_BITS = "18432" *) 
  (* RTL_RAM_NAME = "inst/master_fpga_gen.axi_chip2chip_master_inst/axi_chip2chip_r_fifo_inst/axi_chip2chip_async_fifo_inst/xpm_fifo_async_inst/gnuram_async_fifo.xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst/gen_wr_a.gen_word_narrow.mem_reg" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "511" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "35" *) 
  RAMB18E2 #(
    .CASCADE_ORDER_A("NONE"),
    .CASCADE_ORDER_B("NONE"),
    .CLOCK_DOMAINS("INDEPENDENT"),
    .DOA_REG(1),
    .DOB_REG(1),
    .ENADDRENA("FALSE"),
    .ENADDRENB("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .RDADDRCHANGEA("FALSE"),
    .RDADDRCHANGEB("FALSE"),
    .READ_WIDTH_A(36),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SLEEP_ASYNC("TRUE"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("NO_CHANGE"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(36)) 
    \gen_wr_a.gen_word_narrow.mem_reg 
       (.ADDRARDADDR({addrb,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({addra,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRENA(1'b1),
        .ADDRENB(1'b1),
        .CASDIMUXA(1'b0),
        .CASDIMUXB(1'b0),
        .CASDINA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINA_UNCONNECTED [15:0]),
        .CASDINB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINB_UNCONNECTED [15:0]),
        .CASDINPA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPA_UNCONNECTED [1:0]),
        .CASDINPB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPB_UNCONNECTED [1:0]),
        .CASDOMUXA(1'b0),
        .CASDOMUXB(1'b0),
        .CASDOMUXEN_A(1'b1),
        .CASDOMUXEN_B(1'b1),
        .CASDOUTA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTA_UNCONNECTED [15:0]),
        .CASDOUTB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTB_UNCONNECTED [15:0]),
        .CASDOUTPA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPA_UNCONNECTED [1:0]),
        .CASDOUTPB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPB_UNCONNECTED [1:0]),
        .CASOREGIMUXA(1'b0),
        .CASOREGIMUXB(1'b0),
        .CASOREGIMUXEN_A(1'b1),
        .CASOREGIMUXEN_B(1'b1),
        .CLKARDCLK(clkb),
        .CLKBWRCLK(clka),
        .DINADIN(dina[15:0]),
        .DINBDIN(dina[31:16]),
        .DINPADINP(dina[33:32]),
        .DINPBDINP(dina[35:34]),
        .DOUTADOUT(doutb[15:0]),
        .DOUTBDOUT(doutb[31:16]),
        .DOUTPADOUTP(doutb[33:32]),
        .DOUTPBDOUTP(doutb[35:34]),
        .ENARDEN(enb),
        .ENBWREN(1'b1),
        .REGCEAREGCE(regceb),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(rstb),
        .RSTREGB(1'b0),
        .SLEEP(1'b0),
        .WEA({1'b0,1'b0}),
        .WEBWE({wea,wea,wea,wea}));
endmodule

(* ADDR_WIDTH_A = "8" *) (* ADDR_WIDTH_B = "8" *) (* AUTO_SLEEP_TIME = "0" *) 
(* BYTE_WRITE_WIDTH_A = "3" *) (* BYTE_WRITE_WIDTH_B = "3" *) (* CASCADE_HEIGHT = "0" *) 
(* CLOCKING_MODE = "1" *) (* ECC_BIT_RANGE = "[7:0]" *) (* ECC_MODE = "0" *) 
(* ECC_TYPE = "NONE" *) (* IGNORE_INIT_SYNTH = "0" *) (* MAX_NUM_CHAR = "0" *) 
(* MEMORY_INIT_FILE = "none" *) (* MEMORY_INIT_PARAM = "" *) (* MEMORY_OPTIMIZATION = "true" *) 
(* MEMORY_PRIMITIVE = "1" *) (* MEMORY_SIZE = "768" *) (* MEMORY_TYPE = "1" *) 
(* MESSAGE_CONTROL = "0" *) (* NUM_CHAR_LOC = "0" *) (* ORIG_REF_NAME = "xpm_memory_base" *) 
(* P_ECC_MODE = "0" *) (* P_ENABLE_BYTE_WRITE_A = "0" *) (* P_ENABLE_BYTE_WRITE_B = "0" *) 
(* P_MAX_DEPTH_DATA = "256" *) (* P_MEMORY_OPT = "yes" *) (* P_MEMORY_PRIMITIVE = "distributed" *) 
(* P_MIN_WIDTH_DATA = "3" *) (* P_MIN_WIDTH_DATA_A = "3" *) (* P_MIN_WIDTH_DATA_B = "3" *) 
(* P_MIN_WIDTH_DATA_ECC = "3" *) (* P_MIN_WIDTH_DATA_LDW = "3" *) (* P_MIN_WIDTH_DATA_SHFT = "5" *) 
(* P_NUM_COLS_WRITE_A = "1" *) (* P_NUM_COLS_WRITE_B = "1" *) (* P_NUM_ROWS_READ_A = "1" *) 
(* P_NUM_ROWS_READ_B = "1" *) (* P_NUM_ROWS_WRITE_A = "1" *) (* P_NUM_ROWS_WRITE_B = "1" *) 
(* P_SDP_WRITE_MODE = "yes" *) (* P_WIDTH_ADDR_LSB_READ_A = "0" *) (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
(* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) (* P_WIDTH_ADDR_READ_A = "8" *) 
(* P_WIDTH_ADDR_READ_B = "8" *) (* P_WIDTH_ADDR_WRITE_A = "8" *) (* P_WIDTH_ADDR_WRITE_B = "8" *) 
(* P_WIDTH_COL_WRITE_A = "3" *) (* P_WIDTH_COL_WRITE_B = "3" *) (* RAM_DECOMP = "auto" *) 
(* READ_DATA_WIDTH_A = "3" *) (* READ_DATA_WIDTH_B = "3" *) (* READ_LATENCY_A = "2" *) 
(* READ_LATENCY_B = "2" *) (* READ_RESET_VALUE_A = "0" *) (* READ_RESET_VALUE_B = "0" *) 
(* RST_MODE_A = "SYNC" *) (* RST_MODE_B = "SYNC" *) (* SIM_ASSERT_CHK = "0" *) 
(* USE_EMBEDDED_CONSTRAINT = "1" *) (* USE_MEM_INIT = "0" *) (* USE_MEM_INIT_MMI = "0" *) 
(* VERSION = "0" *) (* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH_A = "3" *) 
(* WRITE_DATA_WIDTH_B = "3" *) (* WRITE_MODE_A = "2" *) (* WRITE_MODE_B = "1" *) 
(* WRITE_PROTECT = "1" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "soft" *) 
(* rsta_loop_iter = "4" *) (* rstb_loop_iter = "4" *) 
module zynq_bd_C2C2_0_xpm_memory_base__parameterized2
   (sleep,
    clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    injectsbiterra,
    injectdbiterra,
    douta,
    sbiterra,
    dbiterra,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    injectsbiterrb,
    injectdbiterrb,
    doutb,
    sbiterrb,
    dbiterrb);
  input sleep;
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [7:0]addra;
  input [2:0]dina;
  input injectsbiterra;
  input injectdbiterra;
  output [2:0]douta;
  output sbiterra;
  output dbiterra;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [7:0]addrb;
  input [2:0]dinb;
  input injectsbiterrb;
  input injectdbiterrb;
  output [2:0]doutb;
  output sbiterrb;
  output dbiterrb;

  wire \<const0> ;
  wire [7:0]addra;
  wire [7:0]addrb;
  wire clka;
  wire clkb;
  wire [2:0]dina;
  wire [2:0]doutb;
  wire ena;
  wire enb;
  wire [2:0]\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_10_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_11_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_12_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_13_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_14_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_1_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_2_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_3_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_4_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_7_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_8_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_9_reg_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_i_1_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_n_1 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_n_2 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_i_1_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_n_1 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_n_2 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_i_1_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_n_1 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_n_2 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_i_1_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_n_1 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_n_2 ;
  wire regceb;
  wire rstb;
  wire select_piped_1_reg_pipe_5_reg_n_0;
  wire select_piped_3_reg_pipe_6_reg_n_0;
  wire sleep;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_DOD_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_DOD_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_DOD_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_DOD_UNCONNECTED ;

  assign dbiterra = \<const0> ;
  assign dbiterrb = \<const0> ;
  assign douta[2] = \<const0> ;
  assign douta[1] = \<const0> ;
  assign douta[0] = \<const0> ;
  assign sbiterra = \<const0> ;
  assign sbiterrb = \<const0> ;
  GND GND
       (.G(\<const0> ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe[0][0]_i_1 
       (.I0(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_14_reg_n_0 ),
        .I1(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_13_reg_n_0 ),
        .I2(select_piped_3_reg_pipe_6_reg_n_0),
        .I3(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_12_reg_n_0 ),
        .I4(select_piped_1_reg_pipe_5_reg_n_0),
        .I5(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_11_reg_n_0 ),
        .O(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [0]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe[0][1]_i_1 
       (.I0(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_10_reg_n_0 ),
        .I1(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_9_reg_n_0 ),
        .I2(select_piped_3_reg_pipe_6_reg_n_0),
        .I3(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_8_reg_n_0 ),
        .I4(select_piped_1_reg_pipe_5_reg_n_0),
        .I5(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_7_reg_n_0 ),
        .O(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [1]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe[0][2]_i_1 
       (.I0(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_4_reg_n_0 ),
        .I1(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_3_reg_n_0 ),
        .I2(select_piped_3_reg_pipe_6_reg_n_0),
        .I3(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_2_reg_n_0 ),
        .I4(select_piped_1_reg_pipe_5_reg_n_0),
        .I5(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_1_reg_n_0 ),
        .O(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [2]));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][0] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [0]),
        .Q(doutb[0]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][1] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [1]),
        .Q(doutb[1]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][2] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [2]),
        .Q(doutb[2]),
        .R(rstb));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_10_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_n_1 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_10_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_11_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_n_0 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_11_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_12_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_n_0 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_12_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_13_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_n_0 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_13_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_14_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_n_0 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_14_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_1_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_n_2 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_1_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_2_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_n_2 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_2_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_3_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_n_2 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_3_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_4_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_n_2 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_4_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_7_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_n_1 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_7_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_8_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_n_1 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_8_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_9_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_n_1 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_9_reg_n_0 ),
        .R(1'b0));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "768" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "63" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "2" *) 
  RAM64M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2 
       (.ADDRA(addrb[5:0]),
        .ADDRB(addrb[5:0]),
        .ADDRC(addrb[5:0]),
        .ADDRD(addra[5:0]),
        .DIA(dina[0]),
        .DIB(dina[1]),
        .DIC(dina[2]),
        .DID(1'b0),
        .DOA(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_n_0 ),
        .DOB(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_n_1 ),
        .DOC(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_n_2 ),
        .DOD(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_DOD_UNCONNECTED ),
        .WCLK(clka),
        .WE(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h02)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_i_1 
       (.I0(ena),
        .I1(addra[6]),
        .I2(addra[7]),
        .O(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_i_1_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "768" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "128" *) 
  (* ram_addr_end = "191" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "2" *) 
  RAM64M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2 
       (.ADDRA(addrb[5:0]),
        .ADDRB(addrb[5:0]),
        .ADDRC(addrb[5:0]),
        .ADDRD(addra[5:0]),
        .DIA(dina[0]),
        .DIB(dina[1]),
        .DIC(dina[2]),
        .DID(1'b0),
        .DOA(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_n_0 ),
        .DOB(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_n_1 ),
        .DOC(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_n_2 ),
        .DOD(\NLW_gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_DOD_UNCONNECTED ),
        .WCLK(clka),
        .WE(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_i_1 
       (.I0(addra[6]),
        .I1(addra[7]),
        .I2(ena),
        .O(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_i_1_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "768" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "192" *) 
  (* ram_addr_end = "255" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "2" *) 
  RAM64M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2 
       (.ADDRA(addrb[5:0]),
        .ADDRB(addrb[5:0]),
        .ADDRC(addrb[5:0]),
        .ADDRD(addra[5:0]),
        .DIA(dina[0]),
        .DIB(dina[1]),
        .DIC(dina[2]),
        .DID(1'b0),
        .DOA(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_n_0 ),
        .DOB(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_n_1 ),
        .DOC(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_n_2 ),
        .DOD(\NLW_gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_DOD_UNCONNECTED ),
        .WCLK(clka),
        .WE(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h80)) 
    \gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_i_1 
       (.I0(ena),
        .I1(addra[6]),
        .I2(addra[7]),
        .O(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_i_1_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "768" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "64" *) 
  (* ram_addr_end = "127" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "2" *) 
  RAM64M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2 
       (.ADDRA(addrb[5:0]),
        .ADDRB(addrb[5:0]),
        .ADDRC(addrb[5:0]),
        .ADDRD(addra[5:0]),
        .DIA(dina[0]),
        .DIB(dina[1]),
        .DIC(dina[2]),
        .DID(1'b0),
        .DOA(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_n_0 ),
        .DOB(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_n_1 ),
        .DOC(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_n_2 ),
        .DOD(\NLW_gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_DOD_UNCONNECTED ),
        .WCLK(clka),
        .WE(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_i_1 
       (.I0(addra[7]),
        .I1(addra[6]),
        .I2(ena),
        .O(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_i_1_n_0 ));
  FDRE select_piped_1_reg_pipe_5_reg
       (.C(clkb),
        .CE(enb),
        .D(addrb[6]),
        .Q(select_piped_1_reg_pipe_5_reg_n_0),
        .R(1'b0));
  FDRE select_piped_3_reg_pipe_6_reg
       (.C(clkb),
        .CE(enb),
        .D(addrb[7]),
        .Q(select_piped_3_reg_pipe_6_reg_n_0),
        .R(1'b0));
endmodule

(* ADDR_WIDTH_A = "4" *) (* ADDR_WIDTH_B = "4" *) (* AUTO_SLEEP_TIME = "0" *) 
(* BYTE_WRITE_WIDTH_A = "20" *) (* BYTE_WRITE_WIDTH_B = "20" *) (* CASCADE_HEIGHT = "0" *) 
(* CLOCKING_MODE = "1" *) (* ECC_BIT_RANGE = "[7:0]" *) (* ECC_MODE = "0" *) 
(* ECC_TYPE = "NONE" *) (* IGNORE_INIT_SYNTH = "0" *) (* MAX_NUM_CHAR = "0" *) 
(* MEMORY_INIT_FILE = "none" *) (* MEMORY_INIT_PARAM = "" *) (* MEMORY_OPTIMIZATION = "true" *) 
(* MEMORY_PRIMITIVE = "1" *) (* MEMORY_SIZE = "320" *) (* MEMORY_TYPE = "1" *) 
(* MESSAGE_CONTROL = "0" *) (* NUM_CHAR_LOC = "0" *) (* ORIG_REF_NAME = "xpm_memory_base" *) 
(* P_ECC_MODE = "0" *) (* P_ENABLE_BYTE_WRITE_A = "0" *) (* P_ENABLE_BYTE_WRITE_B = "0" *) 
(* P_MAX_DEPTH_DATA = "16" *) (* P_MEMORY_OPT = "yes" *) (* P_MEMORY_PRIMITIVE = "distributed" *) 
(* P_MIN_WIDTH_DATA = "20" *) (* P_MIN_WIDTH_DATA_A = "20" *) (* P_MIN_WIDTH_DATA_B = "20" *) 
(* P_MIN_WIDTH_DATA_ECC = "20" *) (* P_MIN_WIDTH_DATA_LDW = "4" *) (* P_MIN_WIDTH_DATA_SHFT = "20" *) 
(* P_NUM_COLS_WRITE_A = "1" *) (* P_NUM_COLS_WRITE_B = "1" *) (* P_NUM_ROWS_READ_A = "1" *) 
(* P_NUM_ROWS_READ_B = "1" *) (* P_NUM_ROWS_WRITE_A = "1" *) (* P_NUM_ROWS_WRITE_B = "1" *) 
(* P_SDP_WRITE_MODE = "yes" *) (* P_WIDTH_ADDR_LSB_READ_A = "0" *) (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
(* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) (* P_WIDTH_ADDR_READ_A = "4" *) 
(* P_WIDTH_ADDR_READ_B = "4" *) (* P_WIDTH_ADDR_WRITE_A = "4" *) (* P_WIDTH_ADDR_WRITE_B = "4" *) 
(* P_WIDTH_COL_WRITE_A = "20" *) (* P_WIDTH_COL_WRITE_B = "20" *) (* RAM_DECOMP = "auto" *) 
(* READ_DATA_WIDTH_A = "20" *) (* READ_DATA_WIDTH_B = "20" *) (* READ_LATENCY_A = "2" *) 
(* READ_LATENCY_B = "2" *) (* READ_RESET_VALUE_A = "0" *) (* READ_RESET_VALUE_B = "0" *) 
(* RST_MODE_A = "SYNC" *) (* RST_MODE_B = "SYNC" *) (* SIM_ASSERT_CHK = "0" *) 
(* USE_EMBEDDED_CONSTRAINT = "1" *) (* USE_MEM_INIT = "0" *) (* USE_MEM_INIT_MMI = "0" *) 
(* VERSION = "0" *) (* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH_A = "20" *) 
(* WRITE_DATA_WIDTH_B = "20" *) (* WRITE_MODE_A = "2" *) (* WRITE_MODE_B = "1" *) 
(* WRITE_PROTECT = "1" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "soft" *) 
(* rsta_loop_iter = "20" *) (* rstb_loop_iter = "20" *) 
module zynq_bd_C2C2_0_xpm_memory_base__parameterized3
   (sleep,
    clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    injectsbiterra,
    injectdbiterra,
    douta,
    sbiterra,
    dbiterra,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    injectsbiterrb,
    injectdbiterrb,
    doutb,
    sbiterrb,
    dbiterrb);
  input sleep;
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [3:0]addra;
  input [19:0]dina;
  input injectsbiterra;
  input injectdbiterra;
  output [19:0]douta;
  output sbiterra;
  output dbiterra;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [3:0]addrb;
  input [19:0]dinb;
  input injectsbiterrb;
  input injectdbiterrb;
  output [19:0]doutb;
  output sbiterrb;
  output dbiterrb;

  wire \<const0> ;
  wire [3:0]addra;
  wire [3:0]addrb;
  wire clka;
  wire clkb;
  wire [19:0]dina;
  wire [19:0]doutb;
  wire ena;
  wire enb;
  wire [19:0]\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg ;
  wire [19:0]\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 ;
  wire regceb;
  wire rstb;
  wire sleep;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_0_13_DOH_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_14_19_DOD_UNCONNECTED ;

  assign dbiterra = \<const0> ;
  assign dbiterrb = \<const0> ;
  assign douta[19] = \<const0> ;
  assign douta[18] = \<const0> ;
  assign douta[17] = \<const0> ;
  assign douta[16] = \<const0> ;
  assign douta[15] = \<const0> ;
  assign douta[14] = \<const0> ;
  assign douta[13] = \<const0> ;
  assign douta[12] = \<const0> ;
  assign douta[11] = \<const0> ;
  assign douta[10] = \<const0> ;
  assign douta[9] = \<const0> ;
  assign douta[8] = \<const0> ;
  assign douta[7] = \<const0> ;
  assign douta[6] = \<const0> ;
  assign douta[5] = \<const0> ;
  assign douta[4] = \<const0> ;
  assign douta[3] = \<const0> ;
  assign douta[2] = \<const0> ;
  assign douta[1] = \<const0> ;
  assign douta[0] = \<const0> ;
  assign sbiterra = \<const0> ;
  assign sbiterrb = \<const0> ;
  GND GND
       (.G(\<const0> ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][0] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [0]),
        .Q(doutb[0]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][10] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [10]),
        .Q(doutb[10]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][11] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [11]),
        .Q(doutb[11]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][12] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [12]),
        .Q(doutb[12]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][13] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [13]),
        .Q(doutb[13]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][14] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [14]),
        .Q(doutb[14]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][15] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [15]),
        .Q(doutb[15]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][16] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [16]),
        .Q(doutb[16]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][17] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [17]),
        .Q(doutb[17]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][18] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [18]),
        .Q(doutb[18]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][19] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [19]),
        .Q(doutb[19]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][1] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [1]),
        .Q(doutb[1]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][2] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [2]),
        .Q(doutb[2]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][3] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [3]),
        .Q(doutb[3]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][4] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [4]),
        .Q(doutb[4]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][5] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [5]),
        .Q(doutb[5]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][6] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [6]),
        .Q(doutb[6]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][7] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [7]),
        .Q(doutb[7]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][8] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [8]),
        .Q(doutb[8]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][9] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [9]),
        .Q(doutb[9]),
        .R(rstb));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[0] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [0]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [0]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[10] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [10]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [10]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[11] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [11]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [11]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[12] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [12]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [12]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[13] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [13]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [13]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[14] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [14]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [14]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[15] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [15]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [15]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[16] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [16]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [16]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[17] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [17]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [17]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[18] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [18]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [18]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[19] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [19]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [19]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[1] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [1]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [1]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[2] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [2]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [2]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[3] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [3]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [3]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[4] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [4]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [4]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[5] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [5]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [5]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[6] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [6]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [6]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[7] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [7]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [7]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[8] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [8]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [8]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[9] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [9]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [9]),
        .R(1'b0));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "320" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem_reg_0_15_0_13" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "13" *) 
  RAM32M16 #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000),
    .INIT_E(64'h0000000000000000),
    .INIT_F(64'h0000000000000000),
    .INIT_G(64'h0000000000000000),
    .INIT_H(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_15_0_13 
       (.ADDRA({1'b0,addrb}),
        .ADDRB({1'b0,addrb}),
        .ADDRC({1'b0,addrb}),
        .ADDRD({1'b0,addrb}),
        .ADDRE({1'b0,addrb}),
        .ADDRF({1'b0,addrb}),
        .ADDRG({1'b0,addrb}),
        .ADDRH({1'b0,addra}),
        .DIA(dina[1:0]),
        .DIB(dina[3:2]),
        .DIC(dina[5:4]),
        .DID(dina[7:6]),
        .DIE(dina[9:8]),
        .DIF(dina[11:10]),
        .DIG(dina[13:12]),
        .DIH({1'b0,1'b0}),
        .DOA(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [1:0]),
        .DOB(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [3:2]),
        .DOC(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [5:4]),
        .DOD(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [7:6]),
        .DOE(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [9:8]),
        .DOF(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [11:10]),
        .DOG(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [13:12]),
        .DOH(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_0_13_DOH_UNCONNECTED [1:0]),
        .WCLK(clka),
        .WE(ena));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "320" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem_reg_0_15_14_19" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "14" *) 
  (* ram_slice_end = "19" *) 
  RAM32M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_15_14_19 
       (.ADDRA({1'b0,addrb}),
        .ADDRB({1'b0,addrb}),
        .ADDRC({1'b0,addrb}),
        .ADDRD({1'b0,addra}),
        .DIA(dina[15:14]),
        .DIB(dina[17:16]),
        .DIC(dina[19:18]),
        .DID({1'b0,1'b0}),
        .DOA(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [15:14]),
        .DOB(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [17:16]),
        .DOC(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [19:18]),
        .DOD(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_14_19_DOD_UNCONNECTED [1:0]),
        .WCLK(clka),
        .WE(ena));
endmodule

(* ADDR_WIDTH_A = "4" *) (* ADDR_WIDTH_B = "4" *) (* AUTO_SLEEP_TIME = "0" *) 
(* BYTE_WRITE_WIDTH_A = "20" *) (* BYTE_WRITE_WIDTH_B = "20" *) (* CASCADE_HEIGHT = "0" *) 
(* CLOCKING_MODE = "1" *) (* ECC_BIT_RANGE = "[7:0]" *) (* ECC_MODE = "0" *) 
(* ECC_TYPE = "NONE" *) (* IGNORE_INIT_SYNTH = "0" *) (* MAX_NUM_CHAR = "0" *) 
(* MEMORY_INIT_FILE = "none" *) (* MEMORY_INIT_PARAM = "" *) (* MEMORY_OPTIMIZATION = "true" *) 
(* MEMORY_PRIMITIVE = "1" *) (* MEMORY_SIZE = "320" *) (* MEMORY_TYPE = "1" *) 
(* MESSAGE_CONTROL = "0" *) (* NUM_CHAR_LOC = "0" *) (* ORIG_REF_NAME = "xpm_memory_base" *) 
(* P_ECC_MODE = "0" *) (* P_ENABLE_BYTE_WRITE_A = "0" *) (* P_ENABLE_BYTE_WRITE_B = "0" *) 
(* P_MAX_DEPTH_DATA = "16" *) (* P_MEMORY_OPT = "yes" *) (* P_MEMORY_PRIMITIVE = "distributed" *) 
(* P_MIN_WIDTH_DATA = "20" *) (* P_MIN_WIDTH_DATA_A = "20" *) (* P_MIN_WIDTH_DATA_B = "20" *) 
(* P_MIN_WIDTH_DATA_ECC = "20" *) (* P_MIN_WIDTH_DATA_LDW = "4" *) (* P_MIN_WIDTH_DATA_SHFT = "20" *) 
(* P_NUM_COLS_WRITE_A = "1" *) (* P_NUM_COLS_WRITE_B = "1" *) (* P_NUM_ROWS_READ_A = "1" *) 
(* P_NUM_ROWS_READ_B = "1" *) (* P_NUM_ROWS_WRITE_A = "1" *) (* P_NUM_ROWS_WRITE_B = "1" *) 
(* P_SDP_WRITE_MODE = "yes" *) (* P_WIDTH_ADDR_LSB_READ_A = "0" *) (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
(* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) (* P_WIDTH_ADDR_READ_A = "4" *) 
(* P_WIDTH_ADDR_READ_B = "4" *) (* P_WIDTH_ADDR_WRITE_A = "4" *) (* P_WIDTH_ADDR_WRITE_B = "4" *) 
(* P_WIDTH_COL_WRITE_A = "20" *) (* P_WIDTH_COL_WRITE_B = "20" *) (* RAM_DECOMP = "auto" *) 
(* READ_DATA_WIDTH_A = "20" *) (* READ_DATA_WIDTH_B = "20" *) (* READ_LATENCY_A = "2" *) 
(* READ_LATENCY_B = "2" *) (* READ_RESET_VALUE_A = "0" *) (* READ_RESET_VALUE_B = "0" *) 
(* RST_MODE_A = "SYNC" *) (* RST_MODE_B = "SYNC" *) (* SIM_ASSERT_CHK = "0" *) 
(* USE_EMBEDDED_CONSTRAINT = "1" *) (* USE_MEM_INIT = "0" *) (* USE_MEM_INIT_MMI = "0" *) 
(* VERSION = "0" *) (* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH_A = "20" *) 
(* WRITE_DATA_WIDTH_B = "20" *) (* WRITE_MODE_A = "2" *) (* WRITE_MODE_B = "1" *) 
(* WRITE_PROTECT = "1" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "soft" *) 
(* rsta_loop_iter = "20" *) (* rstb_loop_iter = "20" *) 
module zynq_bd_C2C2_0_xpm_memory_base__parameterized3__2
   (sleep,
    clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    injectsbiterra,
    injectdbiterra,
    douta,
    sbiterra,
    dbiterra,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    injectsbiterrb,
    injectdbiterrb,
    doutb,
    sbiterrb,
    dbiterrb);
  input sleep;
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [3:0]addra;
  input [19:0]dina;
  input injectsbiterra;
  input injectdbiterra;
  output [19:0]douta;
  output sbiterra;
  output dbiterra;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [3:0]addrb;
  input [19:0]dinb;
  input injectsbiterrb;
  input injectdbiterrb;
  output [19:0]doutb;
  output sbiterrb;
  output dbiterrb;

  wire \<const0> ;
  wire [3:0]addra;
  wire [3:0]addrb;
  wire clka;
  wire clkb;
  wire [19:0]dina;
  wire [19:0]doutb;
  wire ena;
  wire enb;
  wire [19:0]\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg ;
  wire [19:0]\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 ;
  wire regceb;
  wire rstb;
  wire sleep;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_0_13_DOH_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_14_19_DOD_UNCONNECTED ;

  assign dbiterra = \<const0> ;
  assign dbiterrb = \<const0> ;
  assign douta[19] = \<const0> ;
  assign douta[18] = \<const0> ;
  assign douta[17] = \<const0> ;
  assign douta[16] = \<const0> ;
  assign douta[15] = \<const0> ;
  assign douta[14] = \<const0> ;
  assign douta[13] = \<const0> ;
  assign douta[12] = \<const0> ;
  assign douta[11] = \<const0> ;
  assign douta[10] = \<const0> ;
  assign douta[9] = \<const0> ;
  assign douta[8] = \<const0> ;
  assign douta[7] = \<const0> ;
  assign douta[6] = \<const0> ;
  assign douta[5] = \<const0> ;
  assign douta[4] = \<const0> ;
  assign douta[3] = \<const0> ;
  assign douta[2] = \<const0> ;
  assign douta[1] = \<const0> ;
  assign douta[0] = \<const0> ;
  assign sbiterra = \<const0> ;
  assign sbiterrb = \<const0> ;
  GND GND
       (.G(\<const0> ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][0] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [0]),
        .Q(doutb[0]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][10] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [10]),
        .Q(doutb[10]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][11] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [11]),
        .Q(doutb[11]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][12] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [12]),
        .Q(doutb[12]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][13] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [13]),
        .Q(doutb[13]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][14] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [14]),
        .Q(doutb[14]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][15] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [15]),
        .Q(doutb[15]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][16] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [16]),
        .Q(doutb[16]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][17] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [17]),
        .Q(doutb[17]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][18] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [18]),
        .Q(doutb[18]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][19] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [19]),
        .Q(doutb[19]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][1] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [1]),
        .Q(doutb[1]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][2] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [2]),
        .Q(doutb[2]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][3] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [3]),
        .Q(doutb[3]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][4] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [4]),
        .Q(doutb[4]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][5] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [5]),
        .Q(doutb[5]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][6] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [6]),
        .Q(doutb[6]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][7] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [7]),
        .Q(doutb[7]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][8] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [8]),
        .Q(doutb[8]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][9] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [9]),
        .Q(doutb[9]),
        .R(rstb));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[0] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [0]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [0]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[10] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [10]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [10]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[11] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [11]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [11]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[12] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [12]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [12]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[13] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [13]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [13]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[14] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [14]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [14]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[15] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [15]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [15]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[16] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [16]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [16]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[17] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [17]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [17]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[18] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [18]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [18]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[19] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [19]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [19]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[1] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [1]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [1]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[2] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [2]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [2]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[3] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [3]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [3]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[4] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [4]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [4]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[5] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [5]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [5]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[6] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [6]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [6]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[7] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [7]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [7]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[8] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [8]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [8]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[9] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [9]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [9]),
        .R(1'b0));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "320" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem_reg_0_15_0_13" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "13" *) 
  RAM32M16 #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000),
    .INIT_E(64'h0000000000000000),
    .INIT_F(64'h0000000000000000),
    .INIT_G(64'h0000000000000000),
    .INIT_H(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_15_0_13 
       (.ADDRA({1'b0,addrb}),
        .ADDRB({1'b0,addrb}),
        .ADDRC({1'b0,addrb}),
        .ADDRD({1'b0,addrb}),
        .ADDRE({1'b0,addrb}),
        .ADDRF({1'b0,addrb}),
        .ADDRG({1'b0,addrb}),
        .ADDRH({1'b0,addra}),
        .DIA(dina[1:0]),
        .DIB(dina[3:2]),
        .DIC(dina[5:4]),
        .DID(dina[7:6]),
        .DIE(dina[9:8]),
        .DIF(dina[11:10]),
        .DIG(dina[13:12]),
        .DIH({1'b0,1'b0}),
        .DOA(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [1:0]),
        .DOB(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [3:2]),
        .DOC(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [5:4]),
        .DOD(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [7:6]),
        .DOE(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [9:8]),
        .DOF(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [11:10]),
        .DOG(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [13:12]),
        .DOH(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_0_13_DOH_UNCONNECTED [1:0]),
        .WCLK(clka),
        .WE(ena));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "320" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem_reg_0_15_14_19" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "14" *) 
  (* ram_slice_end = "19" *) 
  RAM32M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_15_14_19 
       (.ADDRA({1'b0,addrb}),
        .ADDRB({1'b0,addrb}),
        .ADDRC({1'b0,addrb}),
        .ADDRD({1'b0,addra}),
        .DIA(dina[15:14]),
        .DIB(dina[17:16]),
        .DIC(dina[19:18]),
        .DID({1'b0,1'b0}),
        .DOA(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [15:14]),
        .DOB(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [17:16]),
        .DOC(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [19:18]),
        .DOD(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_14_19_DOD_UNCONNECTED [1:0]),
        .WCLK(clka),
        .WE(ena));
endmodule

(* CHECK_LICENSE_TYPE = "zynq_bd_C2C1_0,axi_chip2chip_v5_0_20,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "axi_chip2chip_v5_0_20,Vivado 2023.2" *) 
(* NotValidForBitStream *)
module zynq_bd_C2C2_0
   (s_aclk,
    s_aresetn,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bresp,
    s_axi_bvalid,
    s_axi_bready,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_rvalid,
    s_axi_rready,
    axi_c2c_m2s_intr_in,
    axi_c2c_s2m_intr_out,
    axi_c2c_phy_clk,
    axi_c2c_aurora_channel_up,
    axi_c2c_aurora_tx_tready,
    axi_c2c_aurora_tx_tdata,
    axi_c2c_aurora_tx_tvalid,
    axi_c2c_aurora_rx_tdata,
    axi_c2c_aurora_rx_tvalid,
    aurora_do_cc,
    aurora_pma_init_in,
    aurora_init_clk,
    aurora_pma_init_out,
    aurora_mmcm_not_locked,
    aurora_reset_pb,
    axi_c2c_config_error_out,
    axi_c2c_link_status_out,
    axi_c2c_multi_bit_error_out,
    axi_c2c_link_error_out,
    s_axi_lite_aclk,
    s_axi_lite_awaddr,
    s_axi_lite_awprot,
    s_axi_lite_awvalid,
    s_axi_lite_awready,
    s_axi_lite_wdata,
    s_axi_lite_wstrb,
    s_axi_lite_wvalid,
    s_axi_lite_wready,
    s_axi_lite_bresp,
    s_axi_lite_bvalid,
    s_axi_lite_bready,
    s_axi_lite_araddr,
    s_axi_lite_arprot,
    s_axi_lite_arvalid,
    s_axi_lite_arready,
    s_axi_lite_rdata,
    s_axi_lite_rresp,
    s_axi_lite_rvalid,
    s_axi_lite_rready);
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 s_aclk CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME s_aclk, ASSOCIATED_BUSIF s_axi, ASSOCIATED_RESET s_aresetn, FREQ_HZ 49999500, FREQ_TOLERANCE_HZ 0, PHASE 0.0, CLK_DOMAIN zynq_bd_ZynqMPSoC_0_pl_clk1, INSERT_VIP 0" *) input s_aclk;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 s_aresetn RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME s_aresetn, POLARITY ACTIVE_LOW, INSERT_VIP 0" *) input s_aresetn;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi AWADDR" *) input [31:0]s_axi_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi AWLEN" *) input [7:0]s_axi_awlen;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi AWSIZE" *) input [2:0]s_axi_awsize;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi AWBURST" *) input [1:0]s_axi_awburst;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi AWVALID" *) input s_axi_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi AWREADY" *) output s_axi_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi WDATA" *) input [31:0]s_axi_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi WSTRB" *) input [3:0]s_axi_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi WLAST" *) input s_axi_wlast;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi WVALID" *) input s_axi_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi WREADY" *) output s_axi_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi BRESP" *) output [1:0]s_axi_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi BVALID" *) output s_axi_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi BREADY" *) input s_axi_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi ARADDR" *) input [31:0]s_axi_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi ARLEN" *) input [7:0]s_axi_arlen;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi ARSIZE" *) input [2:0]s_axi_arsize;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi ARBURST" *) input [1:0]s_axi_arburst;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi ARVALID" *) input s_axi_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi ARREADY" *) output s_axi_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi RDATA" *) output [31:0]s_axi_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi RRESP" *) output [1:0]s_axi_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi RLAST" *) output s_axi_rlast;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi RVALID" *) output s_axi_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi RREADY" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME s_axi, NUM_READ_OUTSTANDING 16, NUM_WRITE_OUTSTANDING 16, DATA_WIDTH 32, PROTOCOL AXI4, FREQ_HZ 49999500, ID_WIDTH 0, ADDR_WIDTH 32, AWUSER_WIDTH 0, ARUSER_WIDTH 0, WUSER_WIDTH 0, RUSER_WIDTH 0, BUSER_WIDTH 0, READ_WRITE_MODE READ_WRITE, HAS_BURST 1, HAS_LOCK 0, HAS_PROT 0, HAS_CACHE 0, HAS_QOS 0, HAS_REGION 0, HAS_WSTRB 1, HAS_BRESP 1, HAS_RRESP 1, SUPPORTS_NARROW_BURST 1, MAX_BURST_LENGTH 256, PHASE 0.0, CLK_DOMAIN zynq_bd_ZynqMPSoC_0_pl_clk1, NUM_READ_THREADS 1, NUM_WRITE_THREADS 1, RUSER_BITS_PER_BYTE 0, WUSER_BITS_PER_BYTE 0, INSERT_VIP 0" *) input s_axi_rready;
  input [3:0]axi_c2c_m2s_intr_in;
  output [3:0]axi_c2c_s2m_intr_out;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 axi_c2c_phy_clk CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME axi_c2c_phy_clk, ASSOCIATED_BUSIF AXIS_TX:AXIS_RX, ASSOCIATED_RESET aurora_reset_pb, FREQ_HZ 78125000, FREQ_TOLERANCE_HZ 0, PHASE 0, CLK_DOMAIN zynq_bd_C2C1_PHY_0_user_clk_out, INSERT_VIP 0" *) input axi_c2c_phy_clk;
  input axi_c2c_aurora_channel_up;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 AXIS_TX TREADY" *) input axi_c2c_aurora_tx_tready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 AXIS_TX TDATA" *) output [63:0]axi_c2c_aurora_tx_tdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 AXIS_TX TVALID" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME AXIS_TX, TDATA_NUM_BYTES 8, TDEST_WIDTH 0, TID_WIDTH 0, TUSER_WIDTH 0, HAS_TREADY 1, HAS_TSTRB 0, HAS_TKEEP 0, HAS_TLAST 0, FREQ_HZ 78125000, PHASE 0, CLK_DOMAIN zynq_bd_C2C1_PHY_0_user_clk_out, LAYERED_METADATA undef, INSERT_VIP 0" *) output axi_c2c_aurora_tx_tvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 AXIS_RX TDATA" *) input [63:0]axi_c2c_aurora_rx_tdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 AXIS_RX TVALID" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME AXIS_RX, TDATA_NUM_BYTES 8, TDEST_WIDTH 0, TID_WIDTH 0, TUSER_WIDTH 0, HAS_TREADY 0, HAS_TSTRB 0, HAS_TKEEP 0, HAS_TLAST 0, FREQ_HZ 78125000, PHASE 0, CLK_DOMAIN zynq_bd_C2C1_PHY_0_user_clk_out, LAYERED_METADATA undef, INSERT_VIP 0" *) input axi_c2c_aurora_rx_tvalid;
  output aurora_do_cc;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 AURORA_PMA_INIT_IN RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME AURORA_PMA_INIT_IN, POLARITY ACTIVE_HIGH, INSERT_VIP 0" *) input aurora_pma_init_in;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 INIT_CLK CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME INIT_CLK, ASSOCIATED_RESET aurora_pma_init_out, FREQ_HZ 50000000, FREQ_TOLERANCE_HZ 0, PHASE 0.0, CLK_DOMAIN zynq_bd_INIT_CLK, INSERT_VIP 0" *) input aurora_init_clk;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 AURORA_PMA_INIT_OUT RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME AURORA_PMA_INIT_OUT, POLARITY ACTIVE_HIGH, INSERT_VIP 0" *) output aurora_pma_init_out;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 AURORA_MMCM_NOT_LOCKED RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME AURORA_MMCM_NOT_LOCKED, POLARITY ACTIVE_HIGH, INSERT_VIP 0" *) input aurora_mmcm_not_locked;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 AURORA_RST_OUT RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME AURORA_RST_OUT, POLARITY ACTIVE_HIGH, INSERT_VIP 0" *) output aurora_reset_pb;
  output axi_c2c_config_error_out;
  output axi_c2c_link_status_out;
  output axi_c2c_multi_bit_error_out;
  output axi_c2c_link_error_out;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 s_axi_lite_aclk CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME s_axi_lite_aclk, ASSOCIATED_BUSIF s_axi_lite, FREQ_HZ 49999500, FREQ_TOLERANCE_HZ 0, PHASE 0.0, CLK_DOMAIN zynq_bd_ZynqMPSoC_0_pl_clk1, INSERT_VIP 0" *) input s_axi_lite_aclk;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite AWADDR" *) input [31:0]s_axi_lite_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite AWPROT" *) input [1:0]s_axi_lite_awprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite AWVALID" *) input s_axi_lite_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite AWREADY" *) output s_axi_lite_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite WDATA" *) input [31:0]s_axi_lite_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite WSTRB" *) input [3:0]s_axi_lite_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite WVALID" *) input s_axi_lite_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite WREADY" *) output s_axi_lite_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite BRESP" *) output [1:0]s_axi_lite_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite BVALID" *) output s_axi_lite_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite BREADY" *) input s_axi_lite_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite ARADDR" *) input [31:0]s_axi_lite_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite ARPROT" *) input [1:0]s_axi_lite_arprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite ARVALID" *) input s_axi_lite_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite ARREADY" *) output s_axi_lite_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite RDATA" *) output [31:0]s_axi_lite_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite RRESP" *) output [1:0]s_axi_lite_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite RVALID" *) output s_axi_lite_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite RREADY" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME s_axi_lite, DATA_WIDTH 32, PROTOCOL AXI4LITE, FREQ_HZ 49999500, ID_WIDTH 0, ADDR_WIDTH 32, AWUSER_WIDTH 0, ARUSER_WIDTH 0, WUSER_WIDTH 0, RUSER_WIDTH 0, BUSER_WIDTH 0, READ_WRITE_MODE READ_WRITE, HAS_BURST 0, HAS_LOCK 0, HAS_PROT 1, HAS_CACHE 0, HAS_QOS 0, HAS_REGION 0, HAS_WSTRB 1, HAS_BRESP 1, HAS_RRESP 1, SUPPORTS_NARROW_BURST 0, NUM_READ_OUTSTANDING 1, NUM_WRITE_OUTSTANDING 1, MAX_BURST_LENGTH 1, PHASE 0.0, CLK_DOMAIN zynq_bd_ZynqMPSoC_0_pl_clk1, NUM_READ_THREADS 1, NUM_WRITE_THREADS 1, RUSER_BITS_PER_BYTE 0, WUSER_BITS_PER_BYTE 0, INSERT_VIP 0" *) input s_axi_lite_rready;

  wire \<const0> ;
  wire aurora_do_cc;
  wire aurora_init_clk;
  wire aurora_mmcm_not_locked;
  wire aurora_pma_init_in;
  wire aurora_pma_init_out;
  wire aurora_reset_pb;
  wire axi_c2c_aurora_channel_up;
  wire [63:0]axi_c2c_aurora_rx_tdata;
  wire axi_c2c_aurora_rx_tvalid;
  wire [63:0]\^axi_c2c_aurora_tx_tdata ;
  wire axi_c2c_aurora_tx_tready;
  wire axi_c2c_aurora_tx_tvalid;
  wire axi_c2c_config_error_out;
  wire axi_c2c_link_error_out;
  wire axi_c2c_link_status_out;
  wire [3:0]axi_c2c_m2s_intr_in;
  wire axi_c2c_multi_bit_error_out;
  wire axi_c2c_phy_clk;
  wire [3:0]axi_c2c_s2m_intr_out;
  wire s_aclk;
  wire s_aresetn;
  wire [31:0]s_axi_araddr;
  wire [1:0]s_axi_arburst;
  wire [7:0]s_axi_arlen;
  wire s_axi_arready;
  wire [2:0]s_axi_arsize;
  wire s_axi_arvalid;
  wire [31:0]s_axi_awaddr;
  wire [1:0]s_axi_awburst;
  wire [7:0]s_axi_awlen;
  wire s_axi_awready;
  wire [2:0]s_axi_awsize;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire [1:0]s_axi_bresp;
  wire s_axi_bvalid;
  wire s_axi_lite_aclk;
  wire [31:0]s_axi_lite_araddr;
  wire [1:0]s_axi_lite_arprot;
  wire s_axi_lite_arready;
  wire s_axi_lite_arvalid;
  wire [31:0]s_axi_lite_awaddr;
  wire [1:0]s_axi_lite_awprot;
  wire s_axi_lite_awready;
  wire s_axi_lite_awvalid;
  wire s_axi_lite_bready;
  wire [1:0]s_axi_lite_bresp;
  wire s_axi_lite_bvalid;
  wire [31:0]s_axi_lite_rdata;
  wire s_axi_lite_rready;
  wire [1:0]s_axi_lite_rresp;
  wire s_axi_lite_rvalid;
  wire [31:0]s_axi_lite_wdata;
  wire s_axi_lite_wready;
  wire [3:0]s_axi_lite_wstrb;
  wire s_axi_lite_wvalid;
  wire [31:0]s_axi_rdata;
  wire s_axi_rlast;
  wire s_axi_rready;
  wire [1:0]s_axi_rresp;
  wire s_axi_rvalid;
  wire [31:0]s_axi_wdata;
  wire s_axi_wlast;
  wire s_axi_wready;
  wire [3:0]s_axi_wstrb;
  wire s_axi_wvalid;
  wire NLW_inst_axi_c2c_lnk_hndlr_in_progress_UNCONNECTED;
  wire NLW_inst_axi_c2c_selio_tx_clk_out_UNCONNECTED;
  wire NLW_inst_axi_c2c_selio_tx_diff_clk_out_n_UNCONNECTED;
  wire NLW_inst_axi_c2c_selio_tx_diff_clk_out_p_UNCONNECTED;
  wire NLW_inst_m_aclk_out_UNCONNECTED;
  wire NLW_inst_m_axi_arvalid_UNCONNECTED;
  wire NLW_inst_m_axi_awvalid_UNCONNECTED;
  wire NLW_inst_m_axi_bready_UNCONNECTED;
  wire NLW_inst_m_axi_lite_arvalid_UNCONNECTED;
  wire NLW_inst_m_axi_lite_awvalid_UNCONNECTED;
  wire NLW_inst_m_axi_lite_bready_UNCONNECTED;
  wire NLW_inst_m_axi_lite_rready_UNCONNECTED;
  wire NLW_inst_m_axi_lite_wvalid_UNCONNECTED;
  wire NLW_inst_m_axi_rready_UNCONNECTED;
  wire NLW_inst_m_axi_wlast_UNCONNECTED;
  wire NLW_inst_m_axi_wvalid_UNCONNECTED;
  wire [62:62]NLW_inst_axi_c2c_aurora_tx_tdata_UNCONNECTED;
  wire [3:0]NLW_inst_axi_c2c_m2s_intr_out_UNCONNECTED;
  wire [27:0]NLW_inst_axi_c2c_selio_tx_data_out_UNCONNECTED;
  wire [27:0]NLW_inst_axi_c2c_selio_tx_diff_data_out_n_UNCONNECTED;
  wire [27:0]NLW_inst_axi_c2c_selio_tx_diff_data_out_p_UNCONNECTED;
  wire [31:0]NLW_inst_m_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_inst_m_axi_arburst_UNCONNECTED;
  wire [0:0]NLW_inst_m_axi_arid_UNCONNECTED;
  wire [7:0]NLW_inst_m_axi_arlen_UNCONNECTED;
  wire [2:0]NLW_inst_m_axi_arsize_UNCONNECTED;
  wire [31:0]NLW_inst_m_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_inst_m_axi_awburst_UNCONNECTED;
  wire [0:0]NLW_inst_m_axi_awid_UNCONNECTED;
  wire [7:0]NLW_inst_m_axi_awlen_UNCONNECTED;
  wire [2:0]NLW_inst_m_axi_awsize_UNCONNECTED;
  wire [31:0]NLW_inst_m_axi_lite_araddr_UNCONNECTED;
  wire [1:0]NLW_inst_m_axi_lite_arprot_UNCONNECTED;
  wire [31:0]NLW_inst_m_axi_lite_awaddr_UNCONNECTED;
  wire [1:0]NLW_inst_m_axi_lite_awprot_UNCONNECTED;
  wire [31:0]NLW_inst_m_axi_lite_wdata_UNCONNECTED;
  wire [3:0]NLW_inst_m_axi_lite_wstrb_UNCONNECTED;
  wire [31:0]NLW_inst_m_axi_wdata_UNCONNECTED;
  wire [3:0]NLW_inst_m_axi_wstrb_UNCONNECTED;
  wire [0:0]NLW_inst_m_axi_wuser_UNCONNECTED;
  wire [0:0]NLW_inst_s_axi_bid_UNCONNECTED;
  wire [0:0]NLW_inst_s_axi_rid_UNCONNECTED;

  assign axi_c2c_aurora_tx_tdata[63] = \^axi_c2c_aurora_tx_tdata [63];
  assign axi_c2c_aurora_tx_tdata[62] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[61:0] = \^axi_c2c_aurora_tx_tdata [61:0];
  GND GND
       (.G(\<const0> ));
  (* ADDR_MUX_RATIO = "1" *) 
  (* ADDR_MUX_RATIO_ID_WID_0_TO_12 = "1" *) 
  (* AFIFO_DATA_SIZE = "45" *) 
  (* AFIFO_DATA_SIZE_M2 = "1" *) 
  (* AFIFO_DATA_SIZE_M3 = "0" *) 
  (* AFIFO_DATA_SIZE_M4 = "1" *) 
  (* AFIFO_TIE_WIDTH = "1" *) 
  (* AFIFO_WIDTH = "45" *) 
  (* AR_CH_FC = "128" *) 
  (* AR_CH_FIFO_DEPTH = "256" *) 
  (* AR_CH_PTR_WIDTH = "8" *) 
  (* AWB_FC_WIDTH = "2" *) 
  (* AW_CH_FC = "128" *) 
  (* AW_CH_FIFO_DEPTH = "256" *) 
  (* AW_CH_PTR_WIDTH = "8" *) 
  (* AXILITE_WIDTH = "20" *) 
  (* BFIFO_DATA_SIZE = "3" *) 
  (* BFIFO_WIDTH = "3" *) 
  (* BR_CH_FC = "128" *) 
  (* BR_CH_FIFO_DEPTH = "256" *) 
  (* BR_CH_PTR_WIDTH = "8" *) 
  (* C_AURORA_WIDTH = "64" *) 
  (* C_AXI_ADDR_WIDTH = "32" *) 
  (* C_AXI_BRST_WIDTH = "2" *) 
  (* C_AXI_BUS_TYPE = "0" *) 
  (* C_AXI_DATA_WIDTH = "32" *) 
  (* C_AXI_ID_WIDTH = "1" *) 
  (* C_AXI_LEN_WIDTH = "8" *) 
  (* C_AXI_LITE_ADDR_WIDTH = "32" *) 
  (* C_AXI_LITE_DATA_WIDTH = "32" *) 
  (* C_AXI_LITE_PROT_WIDTH = "2" *) 
  (* C_AXI_LITE_RESP_WIDTH = "2" *) 
  (* C_AXI_LITE_STB_WIDTH = "4" *) 
  (* C_AXI_RESP_WIDTH = "2" *) 
  (* C_AXI_SIZE_WIDTH = "3" *) 
  (* C_AXI_SIZE_WIDTH_INTERNAL = "2" *) 
  (* C_AXI_STB_WIDTH = "4" *) 
  (* C_AXI_WUSER_WIDTH = "1" *) 
  (* C_COMMON_CLK = "0" *) 
  (* C_DISABLE_CLK_SHIFT = "0" *) 
  (* C_DISABLE_DESKEW = "0" *) 
  (* C_ECC_ENABLE = "1" *) 
  (* C_EN_AXI_LINK_HNDLR = "0" *) 
  (* C_EN_LEGACY_MODE = "0" *) 
  (* C_FAMILY = "zynquplus" *) 
  (* C_FIFO_DEPTH_LH = "256" *) 
  (* C_INCLUDE_AXILITE = "1" *) 
  (* C_INSTANCE = "axi_c2c" *) 
  (* C_INTERFACE_MODE = "0" *) 
  (* C_INTERFACE_TYPE = "2" *) 
  (* C_INTERRUPT_WIDTH = "4" *) 
  (* C_MASTER_FPGA = "1" *) 
  (* C_NUM_OF_IO = "58" *) 
  (* C_PHY_SELECT = "1" *) 
  (* C_RD_CNTR_WIDTH = "8" *) 
  (* C_SELECTIO_DDR = "0" *) 
  (* C_SELECTIO_PHY_CLK = "100" *) 
  (* C_SELECTIO_WIDTH = "28" *) 
  (* C_SIMULATION = "0" *) 
  (* C_SYNC_STAGE = "3" *) 
  (* C_USE_DIFF_CLK = "0" *) 
  (* C_USE_DIFF_IO = "0" *) 
  (* C_WIDTH_CONVERSION = "1" *) 
  (* C_WR_CNTR_WIDTH = "8" *) 
  (* DATA_MUX_RATIO = "1" *) 
  (* DATA_MUX_RATIO_ID_WID_0_TO_12 = "1" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* EN_ECC = "1" *) 
  (* PHY_CTRL_WIDTH = "3" *) 
  (* PHY_DATA_WIDTH = "64" *) 
  (* RB_FC_WIDTH = "3" *) 
  (* RFIFO_DATA_SIZE = "36" *) 
  (* RFIFO_DATA_SIZE_M2 = "0" *) 
  (* RFIFO_DATA_SIZE_M3 = "0" *) 
  (* RFIFO_DATA_SIZE_M4 = "0" *) 
  (* RFIFO_TIE_WIDTH = "1" *) 
  (* RFIFO_WIDTH = "36" *) 
  (* TDM_ID_WIDTH = "2" *) 
  (* TDM_VAL_BITS = "1" *) 
  (* WFIFO_DATA_SIZE = "38" *) 
  (* WFIFO_DATA_SIZE_M2 = "0" *) 
  (* WFIFO_DATA_SIZE_M3 = "2" *) 
  (* WFIFO_DATA_SIZE_M4 = "2" *) 
  (* WFIFO_TIE_WIDTH = "1" *) 
  (* WFIFO_WIDTH = "38" *) 
  (* is_du_within_envelope = "true" *) 
  zynq_bd_C2C2_0_axi_chip2chip_v5_0_20 inst
       (.aurora_do_cc(aurora_do_cc),
        .aurora_init_clk(aurora_init_clk),
        .aurora_mmcm_not_locked(aurora_mmcm_not_locked),
        .aurora_pma_init_in(aurora_pma_init_in),
        .aurora_pma_init_out(aurora_pma_init_out),
        .aurora_reset_pb(aurora_reset_pb),
        .axi_c2c_aurora_channel_up(axi_c2c_aurora_channel_up),
        .axi_c2c_aurora_rx_tdata(axi_c2c_aurora_rx_tdata),
        .axi_c2c_aurora_rx_tvalid(axi_c2c_aurora_rx_tvalid),
        .axi_c2c_aurora_tx_tdata(\^axi_c2c_aurora_tx_tdata ),
        .axi_c2c_aurora_tx_tready(axi_c2c_aurora_tx_tready),
        .axi_c2c_aurora_tx_tvalid(axi_c2c_aurora_tx_tvalid),
        .axi_c2c_config_error_out(axi_c2c_config_error_out),
        .axi_c2c_link_error_out(axi_c2c_link_error_out),
        .axi_c2c_link_status_out(axi_c2c_link_status_out),
        .axi_c2c_lnk_hndlr_in_progress(NLW_inst_axi_c2c_lnk_hndlr_in_progress_UNCONNECTED),
        .axi_c2c_m2s_intr_in(axi_c2c_m2s_intr_in),
        .axi_c2c_m2s_intr_out(NLW_inst_axi_c2c_m2s_intr_out_UNCONNECTED[3:0]),
        .axi_c2c_multi_bit_error_out(axi_c2c_multi_bit_error_out),
        .axi_c2c_phy_clk(axi_c2c_phy_clk),
        .axi_c2c_s2m_intr_in({1'b0,1'b0,1'b0,1'b0}),
        .axi_c2c_s2m_intr_out(axi_c2c_s2m_intr_out),
        .axi_c2c_selio_rx_clk_in(1'b0),
        .axi_c2c_selio_rx_data_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_c2c_selio_rx_diff_clk_in_n(1'b0),
        .axi_c2c_selio_rx_diff_clk_in_p(1'b0),
        .axi_c2c_selio_rx_diff_data_in_n({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_c2c_selio_rx_diff_data_in_p({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_c2c_selio_tx_clk_out(NLW_inst_axi_c2c_selio_tx_clk_out_UNCONNECTED),
        .axi_c2c_selio_tx_data_out(NLW_inst_axi_c2c_selio_tx_data_out_UNCONNECTED[27:0]),
        .axi_c2c_selio_tx_diff_clk_out_n(NLW_inst_axi_c2c_selio_tx_diff_clk_out_n_UNCONNECTED),
        .axi_c2c_selio_tx_diff_clk_out_p(NLW_inst_axi_c2c_selio_tx_diff_clk_out_p_UNCONNECTED),
        .axi_c2c_selio_tx_diff_data_out_n(NLW_inst_axi_c2c_selio_tx_diff_data_out_n_UNCONNECTED[27:0]),
        .axi_c2c_selio_tx_diff_data_out_p(NLW_inst_axi_c2c_selio_tx_diff_data_out_p_UNCONNECTED[27:0]),
        .idelay_ref_clk(1'b0),
        .m_aclk(1'b0),
        .m_aclk_out(NLW_inst_m_aclk_out_UNCONNECTED),
        .m_aresetn(1'b1),
        .m_axi_araddr(NLW_inst_m_axi_araddr_UNCONNECTED[31:0]),
        .m_axi_arburst(NLW_inst_m_axi_arburst_UNCONNECTED[1:0]),
        .m_axi_arid(NLW_inst_m_axi_arid_UNCONNECTED[0]),
        .m_axi_arlen(NLW_inst_m_axi_arlen_UNCONNECTED[7:0]),
        .m_axi_arready(1'b0),
        .m_axi_arsize(NLW_inst_m_axi_arsize_UNCONNECTED[2:0]),
        .m_axi_arvalid(NLW_inst_m_axi_arvalid_UNCONNECTED),
        .m_axi_awaddr(NLW_inst_m_axi_awaddr_UNCONNECTED[31:0]),
        .m_axi_awburst(NLW_inst_m_axi_awburst_UNCONNECTED[1:0]),
        .m_axi_awid(NLW_inst_m_axi_awid_UNCONNECTED[0]),
        .m_axi_awlen(NLW_inst_m_axi_awlen_UNCONNECTED[7:0]),
        .m_axi_awready(1'b0),
        .m_axi_awsize(NLW_inst_m_axi_awsize_UNCONNECTED[2:0]),
        .m_axi_awvalid(NLW_inst_m_axi_awvalid_UNCONNECTED),
        .m_axi_bid(1'b0),
        .m_axi_bready(NLW_inst_m_axi_bready_UNCONNECTED),
        .m_axi_bresp({1'b0,1'b0}),
        .m_axi_bvalid(1'b0),
        .m_axi_lite_aclk(1'b0),
        .m_axi_lite_araddr(NLW_inst_m_axi_lite_araddr_UNCONNECTED[31:0]),
        .m_axi_lite_arprot(NLW_inst_m_axi_lite_arprot_UNCONNECTED[1:0]),
        .m_axi_lite_arready(1'b0),
        .m_axi_lite_arvalid(NLW_inst_m_axi_lite_arvalid_UNCONNECTED),
        .m_axi_lite_awaddr(NLW_inst_m_axi_lite_awaddr_UNCONNECTED[31:0]),
        .m_axi_lite_awprot(NLW_inst_m_axi_lite_awprot_UNCONNECTED[1:0]),
        .m_axi_lite_awready(1'b0),
        .m_axi_lite_awvalid(NLW_inst_m_axi_lite_awvalid_UNCONNECTED),
        .m_axi_lite_bready(NLW_inst_m_axi_lite_bready_UNCONNECTED),
        .m_axi_lite_bresp({1'b0,1'b0}),
        .m_axi_lite_bvalid(1'b0),
        .m_axi_lite_rdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .m_axi_lite_rready(NLW_inst_m_axi_lite_rready_UNCONNECTED),
        .m_axi_lite_rresp({1'b0,1'b0}),
        .m_axi_lite_rvalid(1'b0),
        .m_axi_lite_wdata(NLW_inst_m_axi_lite_wdata_UNCONNECTED[31:0]),
        .m_axi_lite_wready(1'b0),
        .m_axi_lite_wstrb(NLW_inst_m_axi_lite_wstrb_UNCONNECTED[3:0]),
        .m_axi_lite_wvalid(NLW_inst_m_axi_lite_wvalid_UNCONNECTED),
        .m_axi_rdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .m_axi_rid(1'b0),
        .m_axi_rlast(1'b0),
        .m_axi_rready(NLW_inst_m_axi_rready_UNCONNECTED),
        .m_axi_rresp({1'b0,1'b0}),
        .m_axi_rvalid(1'b0),
        .m_axi_wdata(NLW_inst_m_axi_wdata_UNCONNECTED[31:0]),
        .m_axi_wlast(NLW_inst_m_axi_wlast_UNCONNECTED),
        .m_axi_wready(1'b0),
        .m_axi_wstrb(NLW_inst_m_axi_wstrb_UNCONNECTED[3:0]),
        .m_axi_wuser(NLW_inst_m_axi_wuser_UNCONNECTED[0]),
        .m_axi_wvalid(NLW_inst_m_axi_wvalid_UNCONNECTED),
        .s_aclk(s_aclk),
        .s_aresetn(s_aresetn),
        .s_axi_araddr(s_axi_araddr),
        .s_axi_arburst(s_axi_arburst),
        .s_axi_arid(1'b0),
        .s_axi_arlen(s_axi_arlen),
        .s_axi_arready(s_axi_arready),
        .s_axi_arsize({1'b0,s_axi_arsize[1:0]}),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awaddr(s_axi_awaddr),
        .s_axi_awburst(s_axi_awburst),
        .s_axi_awid(1'b0),
        .s_axi_awlen(s_axi_awlen),
        .s_axi_awready(s_axi_awready),
        .s_axi_awsize({1'b0,s_axi_awsize[1:0]}),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bid(NLW_inst_s_axi_bid_UNCONNECTED[0]),
        .s_axi_bready(s_axi_bready),
        .s_axi_bresp(s_axi_bresp),
        .s_axi_bvalid(s_axi_bvalid),
        .s_axi_lite_aclk(s_axi_lite_aclk),
        .s_axi_lite_araddr(s_axi_lite_araddr),
        .s_axi_lite_arprot(s_axi_lite_arprot),
        .s_axi_lite_arready(s_axi_lite_arready),
        .s_axi_lite_arvalid(s_axi_lite_arvalid),
        .s_axi_lite_awaddr(s_axi_lite_awaddr),
        .s_axi_lite_awprot(s_axi_lite_awprot),
        .s_axi_lite_awready(s_axi_lite_awready),
        .s_axi_lite_awvalid(s_axi_lite_awvalid),
        .s_axi_lite_bready(s_axi_lite_bready),
        .s_axi_lite_bresp(s_axi_lite_bresp),
        .s_axi_lite_bvalid(s_axi_lite_bvalid),
        .s_axi_lite_rdata(s_axi_lite_rdata),
        .s_axi_lite_rready(s_axi_lite_rready),
        .s_axi_lite_rresp(s_axi_lite_rresp),
        .s_axi_lite_rvalid(s_axi_lite_rvalid),
        .s_axi_lite_wdata(s_axi_lite_wdata),
        .s_axi_lite_wready(s_axi_lite_wready),
        .s_axi_lite_wstrb(s_axi_lite_wstrb),
        .s_axi_lite_wvalid(s_axi_lite_wvalid),
        .s_axi_rdata(s_axi_rdata),
        .s_axi_rid(NLW_inst_s_axi_rid_UNCONNECTED[0]),
        .s_axi_rlast(s_axi_rlast),
        .s_axi_rready(s_axi_rready),
        .s_axi_rresp(s_axi_rresp),
        .s_axi_rvalid(s_axi_rvalid),
        .s_axi_wdata(s_axi_wdata),
        .s_axi_wlast(s_axi_wlast),
        .s_axi_wready(s_axi_wready),
        .s_axi_wstrb(s_axi_wstrb),
        .s_axi_wuser(1'b0),
        .s_axi_wvalid(s_axi_wvalid));
endmodule
`pragma protect begin_protected
`pragma protect version = 1
`pragma protect encrypt_agent = "XILINX"
`pragma protect encrypt_agent_info = "Xilinx Encryption Tool 2023.2"
`pragma protect key_keyowner="Synopsys", key_keyname="SNPS-VCS-RSA-2", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=128)
`pragma protect key_block
dheoa7qy6GoRk6iGRBTcCyKnJw4WEJjXQUofGqUCrTBz9TXbAVyuWPyJ2ZLFLnPZAmbZZC1Jttgt
3sdvH+vCSqcQNzzuIgzkA1hvpVV9ZOAXL5oM3VuRUrz7hnAt3lSLNEpBE6p/6gtJ+w+92f2WwwUC
21rbkp5TyIfkzW065sE=

`pragma protect key_keyowner="Aldec", key_keyname="ALDEC15_001", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
KFbn7tTAdJt5tIuHXM4J1CV/u5oPGCBiZ99rYke40eWUgexxUrV+t0ZAJs8vm2t/6KyPrJ6RzNhd
85vFYVJRpJtzZLGB+iYTXXU42O2ooQreJllQFZGb/aUh+DngKaiR53d7RC3eR62md7GC7YA7Kg2/
koMLbR7YrRJko0/wcNvftUR+doOj512xDuEaJrIAWsviMj/F2TO9fxXGe0HanjHaC/Eij3g5E3d8
q2lVpHFwah8hb0TD12rpE7vS6ZPp/W2GX2uhCE4AHfzii4uEkYoDCmSRTxo27ruqoJLDBK0u997A
Y7PEwQUPVSHwpqHqjexjrUauUjh6XI5w9/nkCg==

`pragma protect key_keyowner="Mentor Graphics Corporation", key_keyname="MGC-VELOCE-RSA", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=128)
`pragma protect key_block
ENaxhv/CPhmdw9dS/ZCpvmkAQ75sW2WjIDmxy3qcEQq9fZ+/Pqca+zGebtobkKK0blL2RH7StPik
kJrfpJ2fwBCZMHHvziLC7t8YGcyF+wXLzOHrc0PGSnvzCEnebbJ9d9qiIr8/QmIa+RNYtdWNne9X
ND0P3GzcTYgNiYsQG/w=

`pragma protect key_keyowner="Mentor Graphics Corporation", key_keyname="MGC-VERIF-SIM-RSA-2", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
syfsvQAbWS4UqtSx023kV/BtyZAf0ag5qNRKpm858vck3W+vsN2lhK0cxVuyDeNlmMl7oy0/W3Af
jU/lbPHSWbIr2sAhtmIPobNuMnEc89wXsVmtKIahmtBvE/q4buiuN/U1miRDpjCYM69XJDFHTjnu
9l9PNIo8Y9f0j+LzFrnJilWXBEnhNNw/EdjUE7WtVrQ5NDnPMveWrbWZYVQb9xPX+kw/RARam6Ar
rWYa1Wk6ZpFazf9y4jKW6Nx5LzWpKhtc0PR5EEiyDOcxSSQz7BjQGBeWjhp9ewNVJRZFg0Ih9/2L
64RbYKHxA86Qe/ffHFYW40e5BCR6+Zy4Oc073A==

`pragma protect key_keyowner="Real Intent", key_keyname="RI-RSA-KEY-1", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
AmVDziCOCiswI//oMKbTwV9Y4cyhGqEhT1JnUisd+4dqLyq1TUFpOLn9mF7li+RfW9W1m4jKYulD
kJA5b4eFJOO/cpHbqrV6KfIF/IkppLiGJ7oNvZ29e8H8LVUigdaawOL7IrW8uXFDn3td4VZ7l/0J
enSZ1q0r/gNcCRQRz80QSsxyjtFvgfK20VeSyoWLHSexf7L+rfes9Phl0ijrOnYt543aCo0gu3AM
GLApxcdXgU4TCuDhraNXQM3zRgNiv4ixC/332IXO05SOkgJve1s0vrAcM5sr63Z04a5ISE0KH8Vk
0UDsukCNzKhC45Qcts/BGTHwSugPzGqfdpfUWQ==

`pragma protect key_keyowner="Metrics Technologies Inc.", key_keyname="DSim", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
iF1nQIMjUmtQOIrD8A87pTN+7ZsiWnz9Xj+r6hwpM6UwgAecu2jUCfftCYO/LLpDtsnrmiy1lg+W
PUXfnW1liM3UzmeeeTZ787pEdodOHGHIFjqahII6nAliVZteg4pXjco+ZZ/Yua0D+E/qX7hXtZ+X
wsXt38YVsjpzpcy+apfzIOfut7McxcGx3nreYhFCJK8isYHJfWlB1OqOYLLcH/pGb4s1f440XSZR
8PsGKoUQWWoucw1zcGD3Ye9Lg1a/Hblay/0LKoYXgoBmBXdjuRUZKj2yB/c1q8uQ2uatHOy03kKp
4LYjRJWz54HZYCv7uv4xitpIi5vgN/YiPqKB5Q==

`pragma protect key_keyowner="Xilinx", key_keyname="xilinxt_2022_10", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
XGpd/hDywwUv3qEUIpSpFU/aGAqGAolbfoqID7yTM63Aw0gYlvUK/0UJU5x/lboCkdq6HcDUvSfM
EtLfDZ8/XxBxevgokJwml+QniFy7PDMvjE0eJeqcG70FZeirS40Zl2KrUA3CjGMj9N34nXLFVVZI
67050hdyYTwKO8KpfxKOF2yDpNYzUZs5HA0dpSkO6mSufNtthQLI1JOXRRvEIuEs0yjOUHxI+Mg0
s2QNxvyBgOqrtiEUWSW2P6GyBgb2KS6CimKcv3HQqmHmD+LSYXyHjnRdZj1nsfvdeuZTprGw8cQA
3eNDO2XG76mTmc1pvu4zd2SKBW8reuxARL7DOQ==

`pragma protect key_keyowner="Atrenta", key_keyname="ATR-SG-RSA-1", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=384)
`pragma protect key_block
txIYBGYclM3WJyFO/GAY6iTCGrnUvaBWMRrewSXZS2VCcKdaSGkooZc1KcOMcdAxduXl2PR88DEi
oA4lOnikzd6dZKQunJbA7p+ze4GUE7VLY2+Ol5+Ts1AmgGAGn8XYwaw+trP4hoeD+VdKRRZCenNU
4/7UnBms41jy1M0TkThv1lqzFnPu4tOX1sUOKas07WQ/6k3CLqv6TQma+HQo1mG/OA1SpsiOQxms
vKoPd7g2sBzHbXc8w2xrvNgMvt97kNSOxS6fWeod/8O+5UYSlU7OCt6ponbgPXJa365II61l3/4a
3sqnka/RMhjkinMs0HpR48Wh1uDgPFzwmI9aHUsvKtP14DDdz+TPqojEgT8pdTCOdoc9H0DnAQN6
9ft2KqjfUJ5YZACEDZ+izfLWob3iuuBJ8YmOjGV/ZMulzINgefeD5awRSjwzx0z4Iy4lLxoC5t65
bnWFxnX10h4H0isknHNdxJ1RPesYSLpI360LHACanMI59GUZ2vApLAtQ

`pragma protect key_keyowner="Cadence Design Systems.", key_keyname="CDS_RSA_KEY_VER_1", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
H/C+3tbi1GTKqCxcSXccD8ddO7CbBTWKEaKQsuXAyRh0UO88wtwBzQOlYtOrF51zB85n6YhsaDcS
J25DMNfjhsnDtTzED+dirm+l1FNsykm8KfwtoQfLSgYZ3onOaOpzSaVy4kMEeTUhTozpWODl32K7
+r62PPCBtKKnaszI26TxhTdfv6oh29UtSy58AAmQXv13nMnFvDMfo3w18e2bzT0+Tw3Mzwe6mrRw
LVkRxSo6Esg8aIpqLuvsEg4xtaSfxrcfPLzcvd6iNkPpw3mzzSpJoQm6ABjBA3DM6RTaghMuDcGg
fM9t2RmTFaJZ5TXN0GGYtNkKAexEtliN/lKhOQ==

`pragma protect data_method = "AES128-CBC"
`pragma protect encoding = (enctype = "BASE64", line_length = 76, bytes = 541264)
`pragma protect data_block
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
`pragma protect end_protected
`ifndef GLBL
`define GLBL
`timescale  1 ps / 1 ps

module glbl ();

    parameter ROC_WIDTH = 100000;
    parameter TOC_WIDTH = 0;
    parameter GRES_WIDTH = 10000;
    parameter GRES_START = 10000;

//--------   STARTUP Globals --------------
    wire GSR;
    wire GTS;
    wire GWE;
    wire PRLD;
    wire GRESTORE;
    tri1 p_up_tmp;
    tri (weak1, strong0) PLL_LOCKG = p_up_tmp;

    wire PROGB_GLBL;
    wire CCLKO_GLBL;
    wire FCSBO_GLBL;
    wire [3:0] DO_GLBL;
    wire [3:0] DI_GLBL;
   
    reg GSR_int;
    reg GTS_int;
    reg PRLD_int;
    reg GRESTORE_int;

//--------   JTAG Globals --------------
    wire JTAG_TDO_GLBL;
    wire JTAG_TCK_GLBL;
    wire JTAG_TDI_GLBL;
    wire JTAG_TMS_GLBL;
    wire JTAG_TRST_GLBL;

    reg JTAG_CAPTURE_GLBL;
    reg JTAG_RESET_GLBL;
    reg JTAG_SHIFT_GLBL;
    reg JTAG_UPDATE_GLBL;
    reg JTAG_RUNTEST_GLBL;

    reg JTAG_SEL1_GLBL = 0;
    reg JTAG_SEL2_GLBL = 0 ;
    reg JTAG_SEL3_GLBL = 0;
    reg JTAG_SEL4_GLBL = 0;

    reg JTAG_USER_TDO1_GLBL = 1'bz;
    reg JTAG_USER_TDO2_GLBL = 1'bz;
    reg JTAG_USER_TDO3_GLBL = 1'bz;
    reg JTAG_USER_TDO4_GLBL = 1'bz;

    assign (strong1, weak0) GSR = GSR_int;
    assign (strong1, weak0) GTS = GTS_int;
    assign (weak1, weak0) PRLD = PRLD_int;
    assign (strong1, weak0) GRESTORE = GRESTORE_int;

    initial begin
	GSR_int = 1'b1;
	PRLD_int = 1'b1;
	#(ROC_WIDTH)
	GSR_int = 1'b0;
	PRLD_int = 1'b0;
    end

    initial begin
	GTS_int = 1'b1;
	#(TOC_WIDTH)
	GTS_int = 1'b0;
    end

    initial begin 
	GRESTORE_int = 1'b0;
	#(GRES_START);
	GRESTORE_int = 1'b1;
	#(GRES_WIDTH);
	GRESTORE_int = 1'b0;
    end

endmodule
`endif
