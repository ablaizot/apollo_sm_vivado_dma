// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// --------------------------------------------------------------------------------
// Tool Version: Vivado v.2023.2 (win64) Build 4029153 Fri Oct 13 20:14:34 MDT 2023
// Date        : Tue Jul 16 12:27:14 2024
// Host        : Thorntanker running 64-bit major release  (build 9200)
// Command     : write_verilog -force -mode funcsim -rename_top decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix -prefix
//               decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ zynq_bd_C2C1_0_sim_netlist.v
// Design      : zynq_bd_C2C1_0
// Purpose     : This verilog netlist is a functional simulation representation of the design and should not be modified
//               or synthesized. This netlist cannot be used for SDF annotated simulation.
// Device      : xczu7ev-fbvb900-2-i
// --------------------------------------------------------------------------------
`timescale 1 ps / 1 ps

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* REG_OUTPUT = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) (* VERSION = "0" *) 
(* WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [7:0]src_in_bin;
  input dest_clk;
  output [7:0]dest_out_bin;

  wire [7:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[2] ;
  wire [6:0]\^dest_out_bin ;
  wire [6:0]gray_enc;
  wire src_clk;
  wire [7:0]src_in_bin;

  assign dest_out_bin[7] = \dest_graysync_ff[2] [7];
  assign dest_out_bin[6:0] = \^dest_out_bin [6:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\^dest_out_bin [2]),
        .I2(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [2]),
        .O(\^dest_out_bin [1]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [4]),
        .I2(\dest_graysync_ff[2] [6]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .I5(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [6]),
        .I4(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  (* SOFT_HLUTNM = "soft_lutpair215" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair215" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair216" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair216" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair217" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair217" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[7]),
        .Q(async_path[7]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__10
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [7:0]src_in_bin;
  input dest_clk;
  output [7:0]dest_out_bin;

  wire [7:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[2] ;
  wire [6:0]\^dest_out_bin ;
  wire [6:0]gray_enc;
  wire src_clk;
  wire [7:0]src_in_bin;

  assign dest_out_bin[7] = \dest_graysync_ff[2] [7];
  assign dest_out_bin[6:0] = \^dest_out_bin [6:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\^dest_out_bin [2]),
        .I2(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [2]),
        .O(\^dest_out_bin [1]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [4]),
        .I2(\dest_graysync_ff[2] [6]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .I5(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [6]),
        .I4(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  (* SOFT_HLUTNM = "soft_lutpair210" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair210" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair211" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair211" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair209" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair209" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[7]),
        .Q(async_path[7]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__6
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [7:0]src_in_bin;
  input dest_clk;
  output [7:0]dest_out_bin;

  wire [7:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[2] ;
  wire [6:0]\^dest_out_bin ;
  wire [6:0]gray_enc;
  wire src_clk;
  wire [7:0]src_in_bin;

  assign dest_out_bin[7] = \dest_graysync_ff[2] [7];
  assign dest_out_bin[6:0] = \^dest_out_bin [6:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\^dest_out_bin [2]),
        .I2(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [2]),
        .O(\^dest_out_bin [1]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [4]),
        .I2(\dest_graysync_ff[2] [6]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .I5(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [6]),
        .I4(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  (* SOFT_HLUTNM = "soft_lutpair177" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair177" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair178" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair178" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair179" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair179" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[7]),
        .Q(async_path[7]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__7
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [7:0]src_in_bin;
  input dest_clk;
  output [7:0]dest_out_bin;

  wire [7:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[2] ;
  wire [6:0]\^dest_out_bin ;
  wire [6:0]gray_enc;
  wire src_clk;
  wire [7:0]src_in_bin;

  assign dest_out_bin[7] = \dest_graysync_ff[2] [7];
  assign dest_out_bin[6:0] = \^dest_out_bin [6:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\^dest_out_bin [2]),
        .I2(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [2]),
        .O(\^dest_out_bin [1]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [4]),
        .I2(\dest_graysync_ff[2] [6]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .I5(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [6]),
        .I4(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  (* SOFT_HLUTNM = "soft_lutpair184" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair184" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair185" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair185" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair186" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair186" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[7]),
        .Q(async_path[7]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__8
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [7:0]src_in_bin;
  input dest_clk;
  output [7:0]dest_out_bin;

  wire [7:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[2] ;
  wire [6:0]\^dest_out_bin ;
  wire [6:0]gray_enc;
  wire src_clk;
  wire [7:0]src_in_bin;

  assign dest_out_bin[7] = \dest_graysync_ff[2] [7];
  assign dest_out_bin[6:0] = \^dest_out_bin [6:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\^dest_out_bin [2]),
        .I2(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [2]),
        .O(\^dest_out_bin [1]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [4]),
        .I2(\dest_graysync_ff[2] [6]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .I5(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [6]),
        .I4(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  (* SOFT_HLUTNM = "soft_lutpair145" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair145" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair146" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair146" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair147" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair147" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[7]),
        .Q(async_path[7]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__9
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [7:0]src_in_bin;
  input dest_clk;
  output [7:0]dest_out_bin;

  wire [7:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[2] ;
  wire [6:0]\^dest_out_bin ;
  wire [6:0]gray_enc;
  wire src_clk;
  wire [7:0]src_in_bin;

  assign dest_out_bin[7] = \dest_graysync_ff[2] [7];
  assign dest_out_bin[6:0] = \^dest_out_bin [6:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\^dest_out_bin [2]),
        .I2(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [2]),
        .O(\^dest_out_bin [1]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [4]),
        .I2(\dest_graysync_ff[2] [6]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .I5(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [6]),
        .I4(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  (* SOFT_HLUTNM = "soft_lutpair152" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair152" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair153" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair153" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair154" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair154" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[7]),
        .Q(async_path[7]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "5" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized0
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[3] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[4] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[4] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [0]),
        .Q(\dest_graysync_ff[3] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [1]),
        .Q(\dest_graysync_ff[3] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [2]),
        .Q(\dest_graysync_ff[3] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [3]),
        .Q(\dest_graysync_ff[3] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [4]),
        .Q(\dest_graysync_ff[3] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [5]),
        .Q(\dest_graysync_ff[3] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [6]),
        .Q(\dest_graysync_ff[3] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [7]),
        .Q(\dest_graysync_ff[3] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [8]),
        .Q(\dest_graysync_ff[3] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [0]),
        .Q(\dest_graysync_ff[4] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [1]),
        .Q(\dest_graysync_ff[4] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [2]),
        .Q(\dest_graysync_ff[4] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [3]),
        .Q(\dest_graysync_ff[4] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [4]),
        .Q(\dest_graysync_ff[4] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [5]),
        .Q(\dest_graysync_ff[4] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [6]),
        .Q(\dest_graysync_ff[4] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [7]),
        .Q(\dest_graysync_ff[4] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [8]),
        .Q(\dest_graysync_ff[4] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[4] [0]),
        .I1(\dest_graysync_ff[4] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[4] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[4] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[4] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[4] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[4] [3]),
        .I1(\dest_graysync_ff[4] [5]),
        .I2(\dest_graysync_ff[4] [7]),
        .I3(\dest_graysync_ff[4] [8]),
        .I4(\dest_graysync_ff[4] [6]),
        .I5(\dest_graysync_ff[4] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[4] [4]),
        .I1(\dest_graysync_ff[4] [6]),
        .I2(\dest_graysync_ff[4] [8]),
        .I3(\dest_graysync_ff[4] [7]),
        .I4(\dest_graysync_ff[4] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[4] [5]),
        .I1(\dest_graysync_ff[4] [7]),
        .I2(\dest_graysync_ff[4] [8]),
        .I3(\dest_graysync_ff[4] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[4] [6]),
        .I1(\dest_graysync_ff[4] [8]),
        .I2(\dest_graysync_ff[4] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[4] [7]),
        .I1(\dest_graysync_ff[4] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair213" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair213" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair214" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair214" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair212" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair212" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "5" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized0__3
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[3] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[4] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[4] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [0]),
        .Q(\dest_graysync_ff[3] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [1]),
        .Q(\dest_graysync_ff[3] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [2]),
        .Q(\dest_graysync_ff[3] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [3]),
        .Q(\dest_graysync_ff[3] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [4]),
        .Q(\dest_graysync_ff[3] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [5]),
        .Q(\dest_graysync_ff[3] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [6]),
        .Q(\dest_graysync_ff[3] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [7]),
        .Q(\dest_graysync_ff[3] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [8]),
        .Q(\dest_graysync_ff[3] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [0]),
        .Q(\dest_graysync_ff[4] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [1]),
        .Q(\dest_graysync_ff[4] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [2]),
        .Q(\dest_graysync_ff[4] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [3]),
        .Q(\dest_graysync_ff[4] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [4]),
        .Q(\dest_graysync_ff[4] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [5]),
        .Q(\dest_graysync_ff[4] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [6]),
        .Q(\dest_graysync_ff[4] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [7]),
        .Q(\dest_graysync_ff[4] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [8]),
        .Q(\dest_graysync_ff[4] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[4] [0]),
        .I1(\dest_graysync_ff[4] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[4] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[4] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[4] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[4] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[4] [3]),
        .I1(\dest_graysync_ff[4] [5]),
        .I2(\dest_graysync_ff[4] [7]),
        .I3(\dest_graysync_ff[4] [8]),
        .I4(\dest_graysync_ff[4] [6]),
        .I5(\dest_graysync_ff[4] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[4] [4]),
        .I1(\dest_graysync_ff[4] [6]),
        .I2(\dest_graysync_ff[4] [8]),
        .I3(\dest_graysync_ff[4] [7]),
        .I4(\dest_graysync_ff[4] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[4] [5]),
        .I1(\dest_graysync_ff[4] [7]),
        .I2(\dest_graysync_ff[4] [8]),
        .I3(\dest_graysync_ff[4] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[4] [6]),
        .I1(\dest_graysync_ff[4] [8]),
        .I2(\dest_graysync_ff[4] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[4] [7]),
        .I1(\dest_graysync_ff[4] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair180" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair180" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair181" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair181" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair182" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair182" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair183" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair183" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "5" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized0__4
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[3] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[4] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[4] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [0]),
        .Q(\dest_graysync_ff[3] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [1]),
        .Q(\dest_graysync_ff[3] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [2]),
        .Q(\dest_graysync_ff[3] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [3]),
        .Q(\dest_graysync_ff[3] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [4]),
        .Q(\dest_graysync_ff[3] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [5]),
        .Q(\dest_graysync_ff[3] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [6]),
        .Q(\dest_graysync_ff[3] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [7]),
        .Q(\dest_graysync_ff[3] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [8]),
        .Q(\dest_graysync_ff[3] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [0]),
        .Q(\dest_graysync_ff[4] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [1]),
        .Q(\dest_graysync_ff[4] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [2]),
        .Q(\dest_graysync_ff[4] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [3]),
        .Q(\dest_graysync_ff[4] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [4]),
        .Q(\dest_graysync_ff[4] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [5]),
        .Q(\dest_graysync_ff[4] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [6]),
        .Q(\dest_graysync_ff[4] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [7]),
        .Q(\dest_graysync_ff[4] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [8]),
        .Q(\dest_graysync_ff[4] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[4] [0]),
        .I1(\dest_graysync_ff[4] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[4] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[4] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[4] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[4] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[4] [3]),
        .I1(\dest_graysync_ff[4] [5]),
        .I2(\dest_graysync_ff[4] [7]),
        .I3(\dest_graysync_ff[4] [8]),
        .I4(\dest_graysync_ff[4] [6]),
        .I5(\dest_graysync_ff[4] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[4] [4]),
        .I1(\dest_graysync_ff[4] [6]),
        .I2(\dest_graysync_ff[4] [8]),
        .I3(\dest_graysync_ff[4] [7]),
        .I4(\dest_graysync_ff[4] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[4] [5]),
        .I1(\dest_graysync_ff[4] [7]),
        .I2(\dest_graysync_ff[4] [8]),
        .I3(\dest_graysync_ff[4] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[4] [6]),
        .I1(\dest_graysync_ff[4] [8]),
        .I2(\dest_graysync_ff[4] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[4] [7]),
        .I1(\dest_graysync_ff[4] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair148" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair148" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair149" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair149" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair150" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair150" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair151" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair151" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized1
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[2] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .I5(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair220" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair220" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair219" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair219" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair218" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair218" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized1__10
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[2] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .I5(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair316" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair316" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair315" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair315" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair317" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair317" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair318" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair318" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized1__11
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[2] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .I5(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair253" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair253" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair254" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair254" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair255" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair255" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair256" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair256" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized1__12
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[2] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .I5(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair262" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair262" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair261" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair261" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair263" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair263" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair264" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair264" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized1__7
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[2] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .I5(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair189" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair189" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair188" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair188" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair187" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair187" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized1__8
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[2] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .I5(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair157" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair157" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair156" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair156" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair155" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair155" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized1__9
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[2] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .I5(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair307" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair307" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair308" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair308" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair309" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair309" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair310" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair310" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "5" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "10" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized2
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [9:0]src_in_bin;
  input dest_clk;
  output [9:0]dest_out_bin;

  wire [9:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[2] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[3] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[4] ;
  wire [8:0]\^dest_out_bin ;
  wire [8:0]gray_enc;
  wire src_clk;
  wire [9:0]src_in_bin;

  assign dest_out_bin[9] = \dest_graysync_ff[4] [9];
  assign dest_out_bin[8:0] = \^dest_out_bin [8:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[9]),
        .Q(\dest_graysync_ff[0] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [9]),
        .Q(\dest_graysync_ff[1] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [9]),
        .Q(\dest_graysync_ff[2] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [0]),
        .Q(\dest_graysync_ff[3] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [1]),
        .Q(\dest_graysync_ff[3] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [2]),
        .Q(\dest_graysync_ff[3] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [3]),
        .Q(\dest_graysync_ff[3] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [4]),
        .Q(\dest_graysync_ff[3] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [5]),
        .Q(\dest_graysync_ff[3] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [6]),
        .Q(\dest_graysync_ff[3] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [7]),
        .Q(\dest_graysync_ff[3] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [8]),
        .Q(\dest_graysync_ff[3] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [9]),
        .Q(\dest_graysync_ff[3] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [0]),
        .Q(\dest_graysync_ff[4] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [1]),
        .Q(\dest_graysync_ff[4] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [2]),
        .Q(\dest_graysync_ff[4] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [3]),
        .Q(\dest_graysync_ff[4] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [4]),
        .Q(\dest_graysync_ff[4] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [5]),
        .Q(\dest_graysync_ff[4] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [6]),
        .Q(\dest_graysync_ff[4] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [7]),
        .Q(\dest_graysync_ff[4] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [8]),
        .Q(\dest_graysync_ff[4] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [9]),
        .Q(\dest_graysync_ff[4] [9]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[4] [0]),
        .I1(\dest_graysync_ff[4] [2]),
        .I2(\^dest_out_bin [4]),
        .I3(\dest_graysync_ff[4] [3]),
        .I4(\dest_graysync_ff[4] [1]),
        .O(\^dest_out_bin [0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[4] [1]),
        .I1(\dest_graysync_ff[4] [3]),
        .I2(\^dest_out_bin [4]),
        .I3(\dest_graysync_ff[4] [2]),
        .O(\^dest_out_bin [1]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[4] [2]),
        .I1(\^dest_out_bin [4]),
        .I2(\dest_graysync_ff[4] [3]),
        .O(\^dest_out_bin [2]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[4] [3]),
        .I1(\^dest_out_bin [4]),
        .O(\^dest_out_bin [3]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[4] [4]),
        .I1(\dest_graysync_ff[4] [6]),
        .I2(\dest_graysync_ff[4] [8]),
        .I3(\dest_graysync_ff[4] [9]),
        .I4(\dest_graysync_ff[4] [7]),
        .I5(\dest_graysync_ff[4] [5]),
        .O(\^dest_out_bin [4]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[4] [5]),
        .I1(\dest_graysync_ff[4] [7]),
        .I2(\dest_graysync_ff[4] [9]),
        .I3(\dest_graysync_ff[4] [8]),
        .I4(\dest_graysync_ff[4] [6]),
        .O(\^dest_out_bin [5]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[4] [6]),
        .I1(\dest_graysync_ff[4] [8]),
        .I2(\dest_graysync_ff[4] [9]),
        .I3(\dest_graysync_ff[4] [7]),
        .O(\^dest_out_bin [6]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[4] [7]),
        .I1(\dest_graysync_ff[4] [9]),
        .I2(\dest_graysync_ff[4] [8]),
        .O(\^dest_out_bin [7]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[8]_INST_0 
       (.I0(\dest_graysync_ff[4] [8]),
        .I1(\dest_graysync_ff[4] [9]),
        .O(\^dest_out_bin [8]));
  (* SOFT_HLUTNM = "soft_lutpair257" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair257" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair258" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair258" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair259" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair259" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair260" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair260" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[8]_i_1 
       (.I0(src_in_bin[9]),
        .I1(src_in_bin[8]),
        .O(gray_enc[8]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[8]),
        .Q(async_path[8]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[9] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[9]),
        .Q(async_path[9]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "5" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "10" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized2__2
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [9:0]src_in_bin;
  input dest_clk;
  output [9:0]dest_out_bin;

  wire [9:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[2] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[3] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[4] ;
  wire [8:0]\^dest_out_bin ;
  wire [8:0]gray_enc;
  wire src_clk;
  wire [9:0]src_in_bin;

  assign dest_out_bin[9] = \dest_graysync_ff[4] [9];
  assign dest_out_bin[8:0] = \^dest_out_bin [8:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[9]),
        .Q(\dest_graysync_ff[0] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [9]),
        .Q(\dest_graysync_ff[1] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [9]),
        .Q(\dest_graysync_ff[2] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [0]),
        .Q(\dest_graysync_ff[3] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [1]),
        .Q(\dest_graysync_ff[3] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [2]),
        .Q(\dest_graysync_ff[3] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [3]),
        .Q(\dest_graysync_ff[3] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [4]),
        .Q(\dest_graysync_ff[3] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [5]),
        .Q(\dest_graysync_ff[3] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [6]),
        .Q(\dest_graysync_ff[3] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [7]),
        .Q(\dest_graysync_ff[3] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [8]),
        .Q(\dest_graysync_ff[3] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [9]),
        .Q(\dest_graysync_ff[3] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [0]),
        .Q(\dest_graysync_ff[4] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [1]),
        .Q(\dest_graysync_ff[4] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [2]),
        .Q(\dest_graysync_ff[4] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [3]),
        .Q(\dest_graysync_ff[4] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [4]),
        .Q(\dest_graysync_ff[4] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [5]),
        .Q(\dest_graysync_ff[4] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [6]),
        .Q(\dest_graysync_ff[4] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [7]),
        .Q(\dest_graysync_ff[4] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [8]),
        .Q(\dest_graysync_ff[4] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [9]),
        .Q(\dest_graysync_ff[4] [9]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[4] [0]),
        .I1(\dest_graysync_ff[4] [2]),
        .I2(\^dest_out_bin [4]),
        .I3(\dest_graysync_ff[4] [3]),
        .I4(\dest_graysync_ff[4] [1]),
        .O(\^dest_out_bin [0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[4] [1]),
        .I1(\dest_graysync_ff[4] [3]),
        .I2(\^dest_out_bin [4]),
        .I3(\dest_graysync_ff[4] [2]),
        .O(\^dest_out_bin [1]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[4] [2]),
        .I1(\^dest_out_bin [4]),
        .I2(\dest_graysync_ff[4] [3]),
        .O(\^dest_out_bin [2]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[4] [3]),
        .I1(\^dest_out_bin [4]),
        .O(\^dest_out_bin [3]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[4] [4]),
        .I1(\dest_graysync_ff[4] [6]),
        .I2(\dest_graysync_ff[4] [8]),
        .I3(\dest_graysync_ff[4] [9]),
        .I4(\dest_graysync_ff[4] [7]),
        .I5(\dest_graysync_ff[4] [5]),
        .O(\^dest_out_bin [4]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[4] [5]),
        .I1(\dest_graysync_ff[4] [7]),
        .I2(\dest_graysync_ff[4] [9]),
        .I3(\dest_graysync_ff[4] [8]),
        .I4(\dest_graysync_ff[4] [6]),
        .O(\^dest_out_bin [5]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[4] [6]),
        .I1(\dest_graysync_ff[4] [8]),
        .I2(\dest_graysync_ff[4] [9]),
        .I3(\dest_graysync_ff[4] [7]),
        .O(\^dest_out_bin [6]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[4] [7]),
        .I1(\dest_graysync_ff[4] [9]),
        .I2(\dest_graysync_ff[4] [8]),
        .O(\^dest_out_bin [7]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[8]_INST_0 
       (.I0(\dest_graysync_ff[4] [8]),
        .I1(\dest_graysync_ff[4] [9]),
        .O(\^dest_out_bin [8]));
  (* SOFT_HLUTNM = "soft_lutpair311" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair311" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair312" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair312" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair313" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair313" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair314" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair314" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[8]_i_1 
       (.I0(src_in_bin[9]),
        .I1(src_in_bin[8]),
        .O(gray_enc[8]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[8]),
        .Q(async_path[8]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[9] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[9]),
        .Q(async_path[9]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "10" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized3
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [9:0]src_in_bin;
  input dest_clk;
  output [9:0]dest_out_bin;

  wire [9:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[2] ;
  wire [8:0]\^dest_out_bin ;
  wire [8:0]gray_enc;
  wire src_clk;
  wire [9:0]src_in_bin;

  assign dest_out_bin[9] = \dest_graysync_ff[2] [9];
  assign dest_out_bin[8:0] = \^dest_out_bin [8:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[9]),
        .Q(\dest_graysync_ff[0] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [9]),
        .Q(\dest_graysync_ff[1] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [9]),
        .Q(\dest_graysync_ff[2] [9]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [4]),
        .I3(\dest_graysync_ff[2] [3]),
        .I4(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\dest_graysync_ff[2] [3]),
        .I2(\^dest_out_bin [4]),
        .I3(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [4]),
        .I2(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\^dest_out_bin [4]),
        .O(\^dest_out_bin [3]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [9]),
        .I4(\dest_graysync_ff[2] [7]),
        .I5(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [9]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [9]),
        .I3(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [9]),
        .I2(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[8]_INST_0 
       (.I0(\dest_graysync_ff[2] [8]),
        .I1(\dest_graysync_ff[2] [9]),
        .O(\^dest_out_bin [8]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair268" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair268" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair267" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair267" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair266" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair266" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair265" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  (* SOFT_HLUTNM = "soft_lutpair265" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[8]_i_1 
       (.I0(src_in_bin[9]),
        .I1(src_in_bin[8]),
        .O(gray_enc[8]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[8]),
        .Q(async_path[8]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[9] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[9]),
        .Q(async_path[9]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "10" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized3__2
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [9:0]src_in_bin;
  input dest_clk;
  output [9:0]dest_out_bin;

  wire [9:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[2] ;
  wire [8:0]\^dest_out_bin ;
  wire [8:0]gray_enc;
  wire src_clk;
  wire [9:0]src_in_bin;

  assign dest_out_bin[9] = \dest_graysync_ff[2] [9];
  assign dest_out_bin[8:0] = \^dest_out_bin [8:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[9]),
        .Q(\dest_graysync_ff[0] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [9]),
        .Q(\dest_graysync_ff[1] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [9]),
        .Q(\dest_graysync_ff[2] [9]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [4]),
        .I3(\dest_graysync_ff[2] [3]),
        .I4(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\dest_graysync_ff[2] [3]),
        .I2(\^dest_out_bin [4]),
        .I3(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [4]),
        .I2(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\^dest_out_bin [4]),
        .O(\^dest_out_bin [3]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [9]),
        .I4(\dest_graysync_ff[2] [7]),
        .I5(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [9]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [9]),
        .I3(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [9]),
        .I2(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[8]_INST_0 
       (.I0(\dest_graysync_ff[2] [8]),
        .I1(\dest_graysync_ff[2] [9]),
        .O(\^dest_out_bin [8]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair322" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair322" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair321" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair321" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair320" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair320" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair319" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  (* SOFT_HLUTNM = "soft_lutpair319" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[8]_i_1 
       (.I0(src_in_bin[9]),
        .I1(src_in_bin[8]),
        .O(gray_enc[8]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[8]),
        .Q(async_path[8]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[9] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[9]),
        .Q(async_path[9]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "4" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized4
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [3:0]src_in_bin;
  input dest_clk;
  output [3:0]dest_out_bin;

  wire [3:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[2] ;
  wire [2:0]\^dest_out_bin ;
  wire [2:0]gray_enc;
  wire src_clk;
  wire [3:0]src_in_bin;

  assign dest_out_bin[3] = \dest_graysync_ff[2] [3];
  assign dest_out_bin[2:0] = \^dest_out_bin [2:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\dest_graysync_ff[2] [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\dest_graysync_ff[2] [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[3]),
        .Q(async_path[3]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "4" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized4__4
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [3:0]src_in_bin;
  input dest_clk;
  output [3:0]dest_out_bin;

  wire [3:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[2] ;
  wire [2:0]\^dest_out_bin ;
  wire [2:0]gray_enc;
  wire src_clk;
  wire [3:0]src_in_bin;

  assign dest_out_bin[3] = \dest_graysync_ff[2] [3];
  assign dest_out_bin[2:0] = \^dest_out_bin [2:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\dest_graysync_ff[2] [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\dest_graysync_ff[2] [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[3]),
        .Q(async_path[3]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "4" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized4__5
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [3:0]src_in_bin;
  input dest_clk;
  output [3:0]dest_out_bin;

  wire [3:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[2] ;
  wire [2:0]\^dest_out_bin ;
  wire [2:0]gray_enc;
  wire src_clk;
  wire [3:0]src_in_bin;

  assign dest_out_bin[3] = \dest_graysync_ff[2] [3];
  assign dest_out_bin[2:0] = \^dest_out_bin [2:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\dest_graysync_ff[2] [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\dest_graysync_ff[2] [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[3]),
        .Q(async_path[3]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "4" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized4__6
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [3:0]src_in_bin;
  input dest_clk;
  output [3:0]dest_out_bin;

  wire [3:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[2] ;
  wire [2:0]\^dest_out_bin ;
  wire [2:0]gray_enc;
  wire src_clk;
  wire [3:0]src_in_bin;

  assign dest_out_bin[3] = \dest_graysync_ff[2] [3];
  assign dest_out_bin[2:0] = \^dest_out_bin [2:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\dest_graysync_ff[2] [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\dest_graysync_ff[2] [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[3]),
        .Q(async_path[3]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "5" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "5" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized5
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [4:0]src_in_bin;
  input dest_clk;
  output [4:0]dest_out_bin;

  wire [4:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[2] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[3] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[4] ;
  wire [3:0]\^dest_out_bin ;
  wire [3:0]gray_enc;
  wire src_clk;
  wire [4:0]src_in_bin;

  assign dest_out_bin[4] = \dest_graysync_ff[4] [4];
  assign dest_out_bin[3:0] = \^dest_out_bin [3:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [0]),
        .Q(\dest_graysync_ff[3] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [1]),
        .Q(\dest_graysync_ff[3] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [2]),
        .Q(\dest_graysync_ff[3] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [3]),
        .Q(\dest_graysync_ff[3] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [4]),
        .Q(\dest_graysync_ff[3] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [0]),
        .Q(\dest_graysync_ff[4] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [1]),
        .Q(\dest_graysync_ff[4] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [2]),
        .Q(\dest_graysync_ff[4] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [3]),
        .Q(\dest_graysync_ff[4] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [4]),
        .Q(\dest_graysync_ff[4] [4]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[4] [0]),
        .I1(\dest_graysync_ff[4] [2]),
        .I2(\dest_graysync_ff[4] [4]),
        .I3(\dest_graysync_ff[4] [3]),
        .I4(\dest_graysync_ff[4] [1]),
        .O(\^dest_out_bin [0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[4] [1]),
        .I1(\dest_graysync_ff[4] [3]),
        .I2(\dest_graysync_ff[4] [4]),
        .I3(\dest_graysync_ff[4] [2]),
        .O(\^dest_out_bin [1]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[4] [2]),
        .I1(\dest_graysync_ff[4] [4]),
        .I2(\dest_graysync_ff[4] [3]),
        .O(\^dest_out_bin [2]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[4] [3]),
        .I1(\dest_graysync_ff[4] [4]),
        .O(\^dest_out_bin [3]));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[4]),
        .Q(async_path[4]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "5" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "5" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized5__2
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [4:0]src_in_bin;
  input dest_clk;
  output [4:0]dest_out_bin;

  wire [4:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[2] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[3] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[4] ;
  wire [3:0]\^dest_out_bin ;
  wire [3:0]gray_enc;
  wire src_clk;
  wire [4:0]src_in_bin;

  assign dest_out_bin[4] = \dest_graysync_ff[4] [4];
  assign dest_out_bin[3:0] = \^dest_out_bin [3:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [0]),
        .Q(\dest_graysync_ff[3] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [1]),
        .Q(\dest_graysync_ff[3] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [2]),
        .Q(\dest_graysync_ff[3] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [3]),
        .Q(\dest_graysync_ff[3] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [4]),
        .Q(\dest_graysync_ff[3] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [0]),
        .Q(\dest_graysync_ff[4] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [1]),
        .Q(\dest_graysync_ff[4] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [2]),
        .Q(\dest_graysync_ff[4] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [3]),
        .Q(\dest_graysync_ff[4] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [4]),
        .Q(\dest_graysync_ff[4] [4]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[4] [0]),
        .I1(\dest_graysync_ff[4] [2]),
        .I2(\dest_graysync_ff[4] [4]),
        .I3(\dest_graysync_ff[4] [3]),
        .I4(\dest_graysync_ff[4] [1]),
        .O(\^dest_out_bin [0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[4] [1]),
        .I1(\dest_graysync_ff[4] [3]),
        .I2(\dest_graysync_ff[4] [4]),
        .I3(\dest_graysync_ff[4] [2]),
        .O(\^dest_out_bin [1]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[4] [2]),
        .I1(\dest_graysync_ff[4] [4]),
        .I2(\dest_graysync_ff[4] [3]),
        .O(\^dest_out_bin [2]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[4] [3]),
        .I1(\dest_graysync_ff[4] [4]),
        .O(\^dest_out_bin [3]));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[4]),
        .Q(async_path[4]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "5" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized6
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [4:0]src_in_bin;
  input dest_clk;
  output [4:0]dest_out_bin;

  wire [4:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[2] ;
  wire [3:0]\^dest_out_bin ;
  wire [3:0]gray_enc;
  wire src_clk;
  wire [4:0]src_in_bin;

  assign dest_out_bin[4] = \dest_graysync_ff[2] [4];
  assign dest_out_bin[3:0] = \^dest_out_bin [3:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\dest_graysync_ff[2] [4]),
        .I3(\dest_graysync_ff[2] [3]),
        .I4(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\dest_graysync_ff[2] [3]),
        .I2(\dest_graysync_ff[2] [4]),
        .I3(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [4]),
        .I2(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[4]),
        .Q(async_path[4]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "5" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized6__2
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [4:0]src_in_bin;
  input dest_clk;
  output [4:0]dest_out_bin;

  wire [4:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[2] ;
  wire [3:0]\^dest_out_bin ;
  wire [3:0]gray_enc;
  wire src_clk;
  wire [4:0]src_in_bin;

  assign dest_out_bin[4] = \dest_graysync_ff[2] [4];
  assign dest_out_bin[3:0] = \^dest_out_bin [3:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\dest_graysync_ff[2] [4]),
        .I3(\dest_graysync_ff[2] [3]),
        .I4(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\dest_graysync_ff[2] [3]),
        .I2(\dest_graysync_ff[2] [4]),
        .I3(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [4]),
        .I2(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[4]),
        .Q(async_path[4]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* SIM_ASSERT_CHK = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SYNC_RST" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__14
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__15
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__16
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__17
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__18
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__19
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__20
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__21
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__22
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__23
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__24
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__25
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__26
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn
   (Q,
    src_in_bin,
    DI,
    ram_empty_i,
    rd_en,
    \count_value_i_reg[0]_0 ,
    \src_gray_ff_reg[0] ,
    SR,
    rd_clk);
  output [1:0]Q;
  output [0:0]src_in_bin;
  output [1:0]DI;
  input ram_empty_i;
  input rd_en;
  input [1:0]\count_value_i_reg[0]_0 ;
  input [0:0]\src_gray_ff_reg[0] ;
  input [0:0]SR;
  input rd_clk;

  wire [1:0]DI;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i[0]_i_1__2_n_0 ;
  wire \count_value_i[1]_i_3_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \gen_fwft.count_en ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [0:0]\src_gray_ff_reg[0] ;
  wire [0:0]src_in_bin;

  LUT5 #(
    .INIT(32'h696A9999)) 
    \count_value_i[0]_i_1__2 
       (.I0(Q[0]),
        .I1(ram_empty_i),
        .I2(rd_en),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(\count_value_i_reg[0]_0 [1]),
        .O(\count_value_i[0]_i_1__2_n_0 ));
  LUT4 #(
    .INIT(16'h9855)) 
    \count_value_i[1]_i_2 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(\count_value_i_reg[0]_0 [1]),
        .O(\gen_fwft.count_en ));
  LUT6 #(
    .INIT(64'h9A9AAAAAA6A666A6)) 
    \count_value_i[1]_i_3 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(rd_en),
        .I5(ram_empty_i),
        .O(\count_value_i[1]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[0]_i_1__2_n_0 ),
        .Q(Q[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[1]_i_3_n_0 ),
        .Q(Q[1]),
        .R(SR));
  LUT2 #(
    .INIT(4'h6)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[0] ),
        .O(src_in_bin));
  LUT2 #(
    .INIT(4'hB)) 
    \grdc.rd_data_count_i[7]_i_8 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[0] ),
        .O(DI[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \grdc.rd_data_count_i[7]_i_9 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[0] ),
        .O(DI[0]));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn_21
   (Q,
    src_in_bin,
    S,
    DI,
    ram_empty_i,
    \count_value_i_reg[0]_0 ,
    rd_en,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[7]_0 ,
    SR,
    rd_clk);
  output [1:0]Q;
  output [0:0]src_in_bin;
  output [1:0]S;
  output [0:0]DI;
  input ram_empty_i;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input [1:0]\grdc.rd_data_count_i_reg[7] ;
  input [1:0]\grdc.rd_data_count_i_reg[7]_0 ;
  input [0:0]SR;
  input rd_clk;

  wire [0:0]DI;
  wire [1:0]Q;
  wire [1:0]S;
  wire [0:0]SR;
  wire \count_value_i[0]_i_1__3_n_0 ;
  wire \count_value_i[1]_i_3_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \gen_fwft.count_en ;
  wire [1:0]\grdc.rd_data_count_i_reg[7] ;
  wire [1:0]\grdc.rd_data_count_i_reg[7]_0 ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [0:0]src_in_bin;

  LUT5 #(
    .INIT(32'h5AAAA655)) 
    \count_value_i[0]_i_1__3 
       (.I0(Q[0]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(ram_empty_i),
        .O(\count_value_i[0]_i_1__3_n_0 ));
  LUT4 #(
    .INIT(16'hC02F)) 
    \count_value_i[1]_i_2 
       (.I0(\count_value_i_reg[0]_0 [0]),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(ram_empty_i),
        .O(\gen_fwft.count_en ));
  LUT6 #(
    .INIT(64'hA999A9A96AAA6AAA)) 
    \count_value_i[1]_i_3 
       (.I0(Q[1]),
        .I1(ram_empty_i),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(rd_en),
        .I4(\count_value_i_reg[0]_0 [0]),
        .I5(Q[0]),
        .O(\count_value_i[1]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[0]_i_1__3_n_0 ),
        .Q(Q[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[1]_i_3_n_0 ),
        .Q(Q[1]),
        .R(SR));
  LUT4 #(
    .INIT(16'h2DD2)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_8 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .O(src_in_bin));
  LUT4 #(
    .INIT(16'h9669)) 
    \grdc.rd_data_count_i[7]_i_15 
       (.I0(DI),
        .I1(Q[1]),
        .I2(\grdc.rd_data_count_i_reg[7] [1]),
        .I3(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .O(S[1]));
  (* HLUTNM = "lutpair2" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \grdc.rd_data_count_i[7]_i_16 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(\grdc.rd_data_count_i_reg[7]_0 [0]),
        .O(S[0]));
  (* HLUTNM = "lutpair2" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \grdc.rd_data_count_i[7]_i_8 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .O(DI));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn_29
   (Q,
    src_in_bin,
    S,
    DI,
    ram_empty_i,
    \count_value_i_reg[0]_0 ,
    rd_en,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[7]_0 ,
    SR,
    rd_clk);
  output [1:0]Q;
  output [0:0]src_in_bin;
  output [1:0]S;
  output [0:0]DI;
  input ram_empty_i;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input [1:0]\grdc.rd_data_count_i_reg[7] ;
  input [1:0]\grdc.rd_data_count_i_reg[7]_0 ;
  input [0:0]SR;
  input rd_clk;

  wire [0:0]DI;
  wire [1:0]Q;
  wire [1:0]S;
  wire [0:0]SR;
  wire \count_value_i[0]_i_1__3_n_0 ;
  wire \count_value_i[1]_i_3_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \gen_fwft.count_en ;
  wire [1:0]\grdc.rd_data_count_i_reg[7] ;
  wire [1:0]\grdc.rd_data_count_i_reg[7]_0 ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [0:0]src_in_bin;

  LUT5 #(
    .INIT(32'h5AAAA655)) 
    \count_value_i[0]_i_1__3 
       (.I0(Q[0]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(ram_empty_i),
        .O(\count_value_i[0]_i_1__3_n_0 ));
  LUT4 #(
    .INIT(16'hC02F)) 
    \count_value_i[1]_i_2 
       (.I0(\count_value_i_reg[0]_0 [0]),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(ram_empty_i),
        .O(\gen_fwft.count_en ));
  LUT6 #(
    .INIT(64'hA999A9A96AAA6AAA)) 
    \count_value_i[1]_i_3 
       (.I0(Q[1]),
        .I1(ram_empty_i),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(rd_en),
        .I4(\count_value_i_reg[0]_0 [0]),
        .I5(Q[0]),
        .O(\count_value_i[1]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[0]_i_1__3_n_0 ),
        .Q(Q[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[1]_i_3_n_0 ),
        .Q(Q[1]),
        .R(SR));
  LUT4 #(
    .INIT(16'h2DD2)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_8 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .O(src_in_bin));
  LUT4 #(
    .INIT(16'h9669)) 
    \grdc.rd_data_count_i[7]_i_15 
       (.I0(DI),
        .I1(Q[1]),
        .I2(\grdc.rd_data_count_i_reg[7] [1]),
        .I3(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .O(S[1]));
  (* HLUTNM = "lutpair0" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \grdc.rd_data_count_i[7]_i_16 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(\grdc.rd_data_count_i_reg[7]_0 [0]),
        .O(S[0]));
  (* HLUTNM = "lutpair0" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \grdc.rd_data_count_i[7]_i_8 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .O(DI));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn_40
   (Q,
    src_in_bin,
    S,
    DI,
    ram_empty_i,
    \count_value_i_reg[0]_0 ,
    rd_en,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[7]_0 ,
    SR,
    rd_clk);
  output [1:0]Q;
  output [0:0]src_in_bin;
  output [1:0]S;
  output [0:0]DI;
  input ram_empty_i;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input [1:0]\grdc.rd_data_count_i_reg[7] ;
  input [1:0]\grdc.rd_data_count_i_reg[7]_0 ;
  input [0:0]SR;
  input rd_clk;

  wire [0:0]DI;
  wire [1:0]Q;
  wire [1:0]S;
  wire [0:0]SR;
  wire \count_value_i[0]_i_1__3_n_0 ;
  wire \count_value_i[1]_i_3_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \gen_fwft.count_en ;
  wire [1:0]\grdc.rd_data_count_i_reg[7] ;
  wire [1:0]\grdc.rd_data_count_i_reg[7]_0 ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [0:0]src_in_bin;

  LUT5 #(
    .INIT(32'h5AAAA655)) 
    \count_value_i[0]_i_1__3 
       (.I0(Q[0]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(ram_empty_i),
        .O(\count_value_i[0]_i_1__3_n_0 ));
  LUT4 #(
    .INIT(16'hC02F)) 
    \count_value_i[1]_i_2 
       (.I0(\count_value_i_reg[0]_0 [0]),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(ram_empty_i),
        .O(\gen_fwft.count_en ));
  LUT6 #(
    .INIT(64'hA999A9A96AAA6AAA)) 
    \count_value_i[1]_i_3 
       (.I0(Q[1]),
        .I1(ram_empty_i),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(rd_en),
        .I4(\count_value_i_reg[0]_0 [0]),
        .I5(Q[0]),
        .O(\count_value_i[1]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[0]_i_1__3_n_0 ),
        .Q(Q[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[1]_i_3_n_0 ),
        .Q(Q[1]),
        .R(SR));
  LUT4 #(
    .INIT(16'h2DD2)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_8 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .O(src_in_bin));
  LUT4 #(
    .INIT(16'h9669)) 
    \grdc.rd_data_count_i[7]_i_15 
       (.I0(DI),
        .I1(Q[1]),
        .I2(\grdc.rd_data_count_i_reg[7] [1]),
        .I3(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .O(S[1]));
  (* HLUTNM = "lutpair1" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \grdc.rd_data_count_i[7]_i_16 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(\grdc.rd_data_count_i_reg[7]_0 [0]),
        .O(S[0]));
  (* HLUTNM = "lutpair1" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \grdc.rd_data_count_i[7]_i_8 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .O(DI));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn_50
   (Q,
    D,
    \count_value_i_reg[1]_0 ,
    src_in_bin,
    ram_empty_i,
    \count_value_i_reg[1]_1 ,
    rd_en,
    \grdc.rd_data_count_i_reg[2] ,
    \grdc.rd_data_count_i_reg[2]_0 ,
    SR,
    rd_clk);
  output [1:0]Q;
  output [0:0]D;
  output \count_value_i_reg[1]_0 ;
  output [0:0]src_in_bin;
  input ram_empty_i;
  input [1:0]\count_value_i_reg[1]_1 ;
  input rd_en;
  input [2:0]\grdc.rd_data_count_i_reg[2] ;
  input [2:0]\grdc.rd_data_count_i_reg[2]_0 ;
  input [0:0]SR;
  input rd_clk;

  wire [0:0]D;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i[0]_i_1__3_n_0 ;
  wire \count_value_i[1]_i_3_n_0 ;
  wire \count_value_i_reg[1]_0 ;
  wire [1:0]\count_value_i_reg[1]_1 ;
  wire \gen_fwft.count_en ;
  wire [2:0]\grdc.rd_data_count_i_reg[2] ;
  wire [2:0]\grdc.rd_data_count_i_reg[2]_0 ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [0:0]src_in_bin;

  LUT5 #(
    .INIT(32'h5AAAA655)) 
    \count_value_i[0]_i_1__3 
       (.I0(Q[0]),
        .I1(\count_value_i_reg[1]_1 [0]),
        .I2(rd_en),
        .I3(\count_value_i_reg[1]_1 [1]),
        .I4(ram_empty_i),
        .O(\count_value_i[0]_i_1__3_n_0 ));
  LUT4 #(
    .INIT(16'hC02F)) 
    \count_value_i[1]_i_2 
       (.I0(\count_value_i_reg[1]_1 [0]),
        .I1(rd_en),
        .I2(\count_value_i_reg[1]_1 [1]),
        .I3(ram_empty_i),
        .O(\gen_fwft.count_en ));
  LUT6 #(
    .INIT(64'hA999A9A96AAA6AAA)) 
    \count_value_i[1]_i_3 
       (.I0(Q[1]),
        .I1(ram_empty_i),
        .I2(\count_value_i_reg[1]_1 [1]),
        .I3(rd_en),
        .I4(\count_value_i_reg[1]_1 [0]),
        .I5(Q[0]),
        .O(\count_value_i[1]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[0]_i_1__3_n_0 ),
        .Q(Q[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[1]_i_3_n_0 ),
        .Q(Q[1]),
        .R(SR));
  LUT4 #(
    .INIT(16'h2DD2)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_4 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[2]_0 [0]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[2]_0 [1]),
        .O(src_in_bin));
  LUT6 #(
    .INIT(64'h9696699669966969)) 
    \grdc.rd_data_count_i[2]_i_1 
       (.I0(\count_value_i_reg[1]_0 ),
        .I1(\grdc.rd_data_count_i_reg[2] [2]),
        .I2(\grdc.rd_data_count_i_reg[2]_0 [2]),
        .I3(\grdc.rd_data_count_i_reg[2]_0 [1]),
        .I4(Q[1]),
        .I5(\grdc.rd_data_count_i_reg[2] [1]),
        .O(D));
  LUT6 #(
    .INIT(64'h69FF696969690069)) 
    \grdc.rd_data_count_i[4]_i_4 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[2]_0 [1]),
        .I2(\grdc.rd_data_count_i_reg[2] [1]),
        .I3(\grdc.rd_data_count_i_reg[2]_0 [0]),
        .I4(Q[0]),
        .I5(\grdc.rd_data_count_i_reg[2] [0]),
        .O(\count_value_i_reg[1]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn_58
   (Q,
    D,
    \count_value_i_reg[1]_0 ,
    src_in_bin,
    ram_empty_i,
    \count_value_i_reg[1]_1 ,
    rd_en,
    \grdc.rd_data_count_i_reg[2] ,
    \grdc.rd_data_count_i_reg[2]_0 ,
    SR,
    rd_clk);
  output [1:0]Q;
  output [0:0]D;
  output \count_value_i_reg[1]_0 ;
  output [0:0]src_in_bin;
  input ram_empty_i;
  input [1:0]\count_value_i_reg[1]_1 ;
  input rd_en;
  input [2:0]\grdc.rd_data_count_i_reg[2] ;
  input [2:0]\grdc.rd_data_count_i_reg[2]_0 ;
  input [0:0]SR;
  input rd_clk;

  wire [0:0]D;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i[0]_i_1__3_n_0 ;
  wire \count_value_i[1]_i_3_n_0 ;
  wire \count_value_i_reg[1]_0 ;
  wire [1:0]\count_value_i_reg[1]_1 ;
  wire \gen_fwft.count_en ;
  wire [2:0]\grdc.rd_data_count_i_reg[2] ;
  wire [2:0]\grdc.rd_data_count_i_reg[2]_0 ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [0:0]src_in_bin;

  LUT5 #(
    .INIT(32'h5AAAA655)) 
    \count_value_i[0]_i_1__3 
       (.I0(Q[0]),
        .I1(\count_value_i_reg[1]_1 [0]),
        .I2(rd_en),
        .I3(\count_value_i_reg[1]_1 [1]),
        .I4(ram_empty_i),
        .O(\count_value_i[0]_i_1__3_n_0 ));
  LUT4 #(
    .INIT(16'hC02F)) 
    \count_value_i[1]_i_2 
       (.I0(\count_value_i_reg[1]_1 [0]),
        .I1(rd_en),
        .I2(\count_value_i_reg[1]_1 [1]),
        .I3(ram_empty_i),
        .O(\gen_fwft.count_en ));
  LUT6 #(
    .INIT(64'hA999A9A96AAA6AAA)) 
    \count_value_i[1]_i_3 
       (.I0(Q[1]),
        .I1(ram_empty_i),
        .I2(\count_value_i_reg[1]_1 [1]),
        .I3(rd_en),
        .I4(\count_value_i_reg[1]_1 [0]),
        .I5(Q[0]),
        .O(\count_value_i[1]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[0]_i_1__3_n_0 ),
        .Q(Q[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[1]_i_3_n_0 ),
        .Q(Q[1]),
        .R(SR));
  LUT4 #(
    .INIT(16'h2DD2)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_4 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[2]_0 [0]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[2]_0 [1]),
        .O(src_in_bin));
  LUT6 #(
    .INIT(64'h9696699669966969)) 
    \grdc.rd_data_count_i[2]_i_1 
       (.I0(\count_value_i_reg[1]_0 ),
        .I1(\grdc.rd_data_count_i_reg[2] [2]),
        .I2(\grdc.rd_data_count_i_reg[2]_0 [2]),
        .I3(\grdc.rd_data_count_i_reg[2]_0 [1]),
        .I4(Q[1]),
        .I5(\grdc.rd_data_count_i_reg[2] [1]),
        .O(D));
  LUT6 #(
    .INIT(64'h69FF696969690069)) 
    \grdc.rd_data_count_i[4]_i_4 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[2]_0 [1]),
        .I2(\grdc.rd_data_count_i_reg[2] [1]),
        .I3(\grdc.rd_data_count_i_reg[2]_0 [0]),
        .I4(Q[0]),
        .I5(\grdc.rd_data_count_i_reg[2] [0]),
        .O(\count_value_i_reg[1]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn_9
   (Q,
    src_in_bin,
    DI,
    ram_empty_i,
    rd_en,
    \count_value_i_reg[0]_0 ,
    \src_gray_ff_reg[0] ,
    SR,
    rd_clk);
  output [1:0]Q;
  output [0:0]src_in_bin;
  output [1:0]DI;
  input ram_empty_i;
  input rd_en;
  input [1:0]\count_value_i_reg[0]_0 ;
  input [0:0]\src_gray_ff_reg[0] ;
  input [0:0]SR;
  input rd_clk;

  wire [1:0]DI;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i[0]_i_1__2_n_0 ;
  wire \count_value_i[1]_i_3_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \gen_fwft.count_en ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [0:0]\src_gray_ff_reg[0] ;
  wire [0:0]src_in_bin;

  LUT5 #(
    .INIT(32'h696A9999)) 
    \count_value_i[0]_i_1__2 
       (.I0(Q[0]),
        .I1(ram_empty_i),
        .I2(rd_en),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(\count_value_i_reg[0]_0 [1]),
        .O(\count_value_i[0]_i_1__2_n_0 ));
  LUT4 #(
    .INIT(16'h9855)) 
    \count_value_i[1]_i_2 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(\count_value_i_reg[0]_0 [1]),
        .O(\gen_fwft.count_en ));
  LUT6 #(
    .INIT(64'h9A9AAAAAA6A666A6)) 
    \count_value_i[1]_i_3 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(rd_en),
        .I5(ram_empty_i),
        .O(\count_value_i[1]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[0]_i_1__2_n_0 ),
        .Q(Q[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[1]_i_3_n_0 ),
        .Q(Q[1]),
        .R(SR));
  LUT2 #(
    .INIT(4'h6)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[0] ),
        .O(src_in_bin));
  LUT2 #(
    .INIT(4'hB)) 
    \grdc.rd_data_count_i[7]_i_8 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[0] ),
        .O(DI[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \grdc.rd_data_count_i[7]_i_9 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[0] ),
        .O(DI[0]));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized0
   (Q,
    enb,
    DI,
    \count_value_i_reg[7]_0 ,
    D,
    S,
    src_in_bin,
    \count_value_i_reg[0]_0 ,
    rd_en,
    ram_empty_i,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[8] ,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ,
    \count_value_i_reg[8]_0 ,
    rd_clk);
  output [7:0]Q;
  output enb;
  output [0:0]DI;
  output [0:0]\count_value_i_reg[7]_0 ;
  output [7:0]D;
  output [4:0]S;
  output [7:0]src_in_bin;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input ram_empty_i;
  input [1:0]\grdc.rd_data_count_i_reg[7] ;
  input [7:0]\grdc.rd_data_count_i_reg[8] ;
  input [7:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ;
  input \count_value_i_reg[8]_0 ;
  input rd_clk;

  wire [7:0]D;
  wire [0:0]DI;
  wire [7:0]Q;
  wire [4:0]S;
  wire \count_value_i[0]_i_1__4_n_0 ;
  wire \count_value_i[1]_i_1__4_n_0 ;
  wire \count_value_i[2]_i_1__3_n_0 ;
  wire \count_value_i[3]_i_1__3_n_0 ;
  wire \count_value_i[4]_i_1__3_n_0 ;
  wire \count_value_i[5]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_2__2_n_0 ;
  wire \count_value_i[7]_i_1__2_n_0 ;
  wire \count_value_i[8]_i_1__0_n_0 ;
  wire \count_value_i[8]_i_2__0_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire [0:0]\count_value_i_reg[7]_0 ;
  wire \count_value_i_reg[8]_0 ;
  wire \count_value_i_reg_n_0_[8] ;
  wire enb;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 ;
  wire [1:0]\grdc.rd_data_count_i_reg[7] ;
  wire [7:0]\grdc.rd_data_count_i_reg[8] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [7:0]src_in_bin;
  wire [7:7]\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_CO_UNCONNECTED ;

  LUT5 #(
    .INIT(32'hABAA5455)) 
    \count_value_i[0]_i_1__4 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(Q[0]),
        .O(\count_value_i[0]_i_1__4_n_0 ));
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__4 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair223" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair224" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__3 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair224" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__3 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__3_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__2 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__2_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__2_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h0000AAA200000000)) 
    \count_value_i[6]_i_2__2 
       (.I0(Q[1]),
        .I1(\count_value_i_reg[0]_0 [1]),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair221" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__2 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair221" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1__0 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(\count_value_i_reg_n_0_[8] ),
        .O(\count_value_i[8]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(enb),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[0]_i_1__4_n_0 ),
        .Q(Q[0]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[1]_i_1__4_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[2]_i_1__3_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[3]_i_1__3_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[4]_i_1__3_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[5]_i_1__2_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[6]_i_1__2_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[7]_i_1__2_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[8]_i_1__0_n_0 ),
        .Q(\count_value_i_reg_n_0_[8] ),
        .R(\count_value_i_reg[8]_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFE00000001)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_1 
       (.I0(Q[7]),
        .I1(Q[5]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I3(Q[4]),
        .I4(Q[6]),
        .I5(\count_value_i_reg_n_0_[8] ),
        .O(src_in_bin[7]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFBFBBAFB)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [0]),
        .I4(Q[0]),
        .I5(Q[3]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair225" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair222" *) 
  LUT5 #(
    .INIT(32'hFFFE0001)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2 
       (.I0(Q[6]),
        .I1(Q[4]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I3(Q[5]),
        .I4(Q[7]),
        .O(src_in_bin[6]));
  (* SOFT_HLUTNM = "soft_lutpair222" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3 
       (.I0(Q[5]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I2(Q[4]),
        .I3(Q[6]),
        .O(src_in_bin[5]));
  LUT3 #(
    .INIT(8'hE1)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_4 
       (.I0(Q[4]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I2(Q[5]),
        .O(src_in_bin[4]));
  LUT6 #(
    .INIT(64'hFFFFEAFE00001501)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_5 
       (.I0(Q[3]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .I4(Q[2]),
        .I5(Q[4]),
        .O(src_in_bin[3]));
  LUT6 #(
    .INIT(64'hFBFBBAFB04044504)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [0]),
        .I4(Q[0]),
        .I5(Q[3]),
        .O(src_in_bin[2]));
  (* SOFT_HLUTNM = "soft_lutpair223" *) 
  LUT5 #(
    .INIT(32'hB0FB4F04)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_7 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .I4(Q[2]),
        .O(src_in_bin[1]));
  (* SOFT_HLUTNM = "soft_lutpair225" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_9 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .O(src_in_bin[0]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [6]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [5]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [4]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [3]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [2]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [1]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15_n_0 ));
  LUT5 #(
    .INIT(32'hABAA5455)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(Q[0]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2 
       (.I0(Q[6]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3 
       (.I0(Q[5]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4 
       (.I0(Q[4]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5 
       (.I0(Q[3]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6 
       (.I0(Q[2]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7 
       (.I0(Q[1]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8 
       (.I0(Q[0]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [7]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1 
       (.CI(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [0]),
        .CI_TOP(1'b0),
        .CO({\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_CO_UNCONNECTED [7],\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 }),
        .DI({1'b0,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 }),
        .O(D),
        .S({\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16_n_0 }));
  LUT4 #(
    .INIT(16'h00FD)) 
    \gen_sdpram.xpm_memory_base_inst_i_2 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .O(enb));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_10 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[8] [4]),
        .I2(Q[6]),
        .I3(\grdc.rd_data_count_i_reg[8] [5]),
        .O(S[3]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_11 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[8] [3]),
        .I2(Q[5]),
        .I3(\grdc.rd_data_count_i_reg[8] [4]),
        .O(S[2]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_12 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[8] [2]),
        .I2(Q[4]),
        .I3(\grdc.rd_data_count_i_reg[8] [3]),
        .O(S[1]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_13 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[8] [1]),
        .I2(Q[3]),
        .I3(\grdc.rd_data_count_i_reg[8] [2]),
        .O(S[0]));
  LUT3 #(
    .INIT(8'hD4)) 
    \grdc.rd_data_count_i[7]_i_7 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(\grdc.rd_data_count_i_reg[8] [0]),
        .O(DI));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_9 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[8] [5]),
        .I2(Q[7]),
        .I3(\grdc.rd_data_count_i_reg[8] [6]),
        .O(S[4]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[8]_i_3 
       (.I0(Q[7]),
        .I1(\grdc.rd_data_count_i_reg[8] [6]),
        .I2(\count_value_i_reg_n_0_[8] ),
        .I3(\grdc.rd_data_count_i_reg[8] [7]),
        .O(\count_value_i_reg[7]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized0_23
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    \gwdc.wr_data_count_i_reg[8] ,
    wr_clk);
  output [8:0]Q;
  output [7:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input [8:0]\gwdc.wr_data_count_i_reg[8] ;
  input wr_clk;

  wire [7:0]D;
  wire [8:0]Q;
  wire \count_value_i[0]_i_1__1_n_0 ;
  wire \count_value_i[1]_i_1__1_n_0 ;
  wire \count_value_i[2]_i_1__1_n_0 ;
  wire \count_value_i[3]_i_1__1_n_0 ;
  wire \count_value_i[4]_i_1__1_n_0 ;
  wire \count_value_i[5]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_2__1_n_0 ;
  wire \count_value_i[7]_i_1__1_n_0 ;
  wire \count_value_i[8]_i_1_n_0 ;
  wire \count_value_i[8]_i_2_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire \gwdc.wr_data_count_i[7]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_3_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_4_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_5_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_6_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_7_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_8_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_9_n_0 ;
  wire \gwdc.wr_data_count_i[8]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_1 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_2 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_3 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_4 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_5 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_6 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_7 ;
  wire [8:0]\gwdc.wr_data_count_i_reg[8] ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [0:0]\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:0]\NLW_gwdc.wr_data_count_i_reg[8]_i_1_CO_UNCONNECTED ;
  wire [7:1]\NLW_gwdc.wr_data_count_i_reg[8]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair230" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair230" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair229" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair229" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__1_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__1_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__1 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair228" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__1 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair228" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__1_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_2 
       (.I0(Q[7]),
        .I1(\gwdc.wr_data_count_i_reg[8] [7]),
        .O(\gwdc.wr_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_3 
       (.I0(Q[6]),
        .I1(\gwdc.wr_data_count_i_reg[8] [6]),
        .O(\gwdc.wr_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_4 
       (.I0(Q[5]),
        .I1(\gwdc.wr_data_count_i_reg[8] [5]),
        .O(\gwdc.wr_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_5 
       (.I0(Q[4]),
        .I1(\gwdc.wr_data_count_i_reg[8] [4]),
        .O(\gwdc.wr_data_count_i[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_6 
       (.I0(Q[3]),
        .I1(\gwdc.wr_data_count_i_reg[8] [3]),
        .O(\gwdc.wr_data_count_i[7]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_7 
       (.I0(Q[2]),
        .I1(\gwdc.wr_data_count_i_reg[8] [2]),
        .O(\gwdc.wr_data_count_i[7]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_8 
       (.I0(Q[1]),
        .I1(\gwdc.wr_data_count_i_reg[8] [1]),
        .O(\gwdc.wr_data_count_i[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_9 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[8] [0]),
        .O(\gwdc.wr_data_count_i[7]_i_9_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[8]_i_2 
       (.I0(Q[8]),
        .I1(\gwdc.wr_data_count_i_reg[8] [8]),
        .O(\gwdc.wr_data_count_i[8]_i_2_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[7]_i_1 
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_1 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_2 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_3 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_4 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_5 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_6 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_7 }),
        .DI(Q[7:0]),
        .O({D[6:0],\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({\gwdc.wr_data_count_i[7]_i_2_n_0 ,\gwdc.wr_data_count_i[7]_i_3_n_0 ,\gwdc.wr_data_count_i[7]_i_4_n_0 ,\gwdc.wr_data_count_i[7]_i_5_n_0 ,\gwdc.wr_data_count_i[7]_i_6_n_0 ,\gwdc.wr_data_count_i[7]_i_7_n_0 ,\gwdc.wr_data_count_i[7]_i_8_n_0 ,\gwdc.wr_data_count_i[7]_i_9_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[8]_i_1 
       (.CI(\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_gwdc.wr_data_count_i_reg[8]_i_1_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_gwdc.wr_data_count_i_reg[8]_i_1_O_UNCONNECTED [7:1],D[7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gwdc.wr_data_count_i[8]_i_2_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized0_30
   (Q,
    enb,
    DI,
    \count_value_i_reg[7]_0 ,
    D,
    S,
    src_in_bin,
    \count_value_i_reg[0]_0 ,
    rd_en,
    ram_empty_i,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[8] ,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ,
    \count_value_i_reg[8]_0 ,
    rd_clk);
  output [7:0]Q;
  output enb;
  output [0:0]DI;
  output [0:0]\count_value_i_reg[7]_0 ;
  output [7:0]D;
  output [4:0]S;
  output [7:0]src_in_bin;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input ram_empty_i;
  input [1:0]\grdc.rd_data_count_i_reg[7] ;
  input [7:0]\grdc.rd_data_count_i_reg[8] ;
  input [7:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ;
  input \count_value_i_reg[8]_0 ;
  input rd_clk;

  wire [7:0]D;
  wire [0:0]DI;
  wire [7:0]Q;
  wire [4:0]S;
  wire \count_value_i[0]_i_1__4_n_0 ;
  wire \count_value_i[1]_i_1__4_n_0 ;
  wire \count_value_i[2]_i_1__3_n_0 ;
  wire \count_value_i[3]_i_1__3_n_0 ;
  wire \count_value_i[4]_i_1__3_n_0 ;
  wire \count_value_i[5]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_2__2_n_0 ;
  wire \count_value_i[7]_i_1__2_n_0 ;
  wire \count_value_i[8]_i_1__0_n_0 ;
  wire \count_value_i[8]_i_2__0_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire [0:0]\count_value_i_reg[7]_0 ;
  wire \count_value_i_reg[8]_0 ;
  wire \count_value_i_reg_n_0_[8] ;
  wire enb;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 ;
  wire [1:0]\grdc.rd_data_count_i_reg[7] ;
  wire [7:0]\grdc.rd_data_count_i_reg[8] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [7:0]src_in_bin;
  wire [7:7]\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_CO_UNCONNECTED ;

  LUT5 #(
    .INIT(32'hABAA5455)) 
    \count_value_i[0]_i_1__4 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(Q[0]),
        .O(\count_value_i[0]_i_1__4_n_0 ));
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__4 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair192" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair193" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__3 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair193" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__3 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__3_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__2 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__2_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__2_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h0000AAA200000000)) 
    \count_value_i[6]_i_2__2 
       (.I0(Q[1]),
        .I1(\count_value_i_reg[0]_0 [1]),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair190" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__2 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair190" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1__0 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(\count_value_i_reg_n_0_[8] ),
        .O(\count_value_i[8]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(enb),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[0]_i_1__4_n_0 ),
        .Q(Q[0]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[1]_i_1__4_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[2]_i_1__3_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[3]_i_1__3_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[4]_i_1__3_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[5]_i_1__2_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[6]_i_1__2_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[7]_i_1__2_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[8]_i_1__0_n_0 ),
        .Q(\count_value_i_reg_n_0_[8] ),
        .R(\count_value_i_reg[8]_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFE00000001)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_1 
       (.I0(Q[7]),
        .I1(Q[5]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I3(Q[4]),
        .I4(Q[6]),
        .I5(\count_value_i_reg_n_0_[8] ),
        .O(src_in_bin[7]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFBFBBAFB)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [0]),
        .I4(Q[0]),
        .I5(Q[3]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair194" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair191" *) 
  LUT5 #(
    .INIT(32'hFFFE0001)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2 
       (.I0(Q[6]),
        .I1(Q[4]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I3(Q[5]),
        .I4(Q[7]),
        .O(src_in_bin[6]));
  (* SOFT_HLUTNM = "soft_lutpair191" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3 
       (.I0(Q[5]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I2(Q[4]),
        .I3(Q[6]),
        .O(src_in_bin[5]));
  LUT3 #(
    .INIT(8'hE1)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_4 
       (.I0(Q[4]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I2(Q[5]),
        .O(src_in_bin[4]));
  LUT6 #(
    .INIT(64'hFFFFEAFE00001501)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_5 
       (.I0(Q[3]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .I4(Q[2]),
        .I5(Q[4]),
        .O(src_in_bin[3]));
  LUT6 #(
    .INIT(64'hFBFBBAFB04044504)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [0]),
        .I4(Q[0]),
        .I5(Q[3]),
        .O(src_in_bin[2]));
  (* SOFT_HLUTNM = "soft_lutpair192" *) 
  LUT5 #(
    .INIT(32'hB0FB4F04)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_7 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .I4(Q[2]),
        .O(src_in_bin[1]));
  (* SOFT_HLUTNM = "soft_lutpair194" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_9 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .O(src_in_bin[0]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [6]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [5]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [4]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [3]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [2]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [1]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15_n_0 ));
  LUT5 #(
    .INIT(32'hABAA5455)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(Q[0]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2 
       (.I0(Q[6]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3 
       (.I0(Q[5]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4 
       (.I0(Q[4]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5 
       (.I0(Q[3]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6 
       (.I0(Q[2]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7 
       (.I0(Q[1]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8 
       (.I0(Q[0]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [7]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1 
       (.CI(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [0]),
        .CI_TOP(1'b0),
        .CO({\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_CO_UNCONNECTED [7],\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 }),
        .DI({1'b0,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 }),
        .O(D),
        .S({\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16_n_0 }));
  LUT4 #(
    .INIT(16'h00FD)) 
    \gen_sdpram.xpm_memory_base_inst_i_2 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .O(enb));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_10 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[8] [4]),
        .I2(Q[6]),
        .I3(\grdc.rd_data_count_i_reg[8] [5]),
        .O(S[3]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_11 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[8] [3]),
        .I2(Q[5]),
        .I3(\grdc.rd_data_count_i_reg[8] [4]),
        .O(S[2]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_12 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[8] [2]),
        .I2(Q[4]),
        .I3(\grdc.rd_data_count_i_reg[8] [3]),
        .O(S[1]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_13 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[8] [1]),
        .I2(Q[3]),
        .I3(\grdc.rd_data_count_i_reg[8] [2]),
        .O(S[0]));
  LUT3 #(
    .INIT(8'hD4)) 
    \grdc.rd_data_count_i[7]_i_7 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(\grdc.rd_data_count_i_reg[8] [0]),
        .O(DI));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_9 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[8] [5]),
        .I2(Q[7]),
        .I3(\grdc.rd_data_count_i_reg[8] [6]),
        .O(S[4]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[8]_i_3 
       (.I0(Q[7]),
        .I1(\grdc.rd_data_count_i_reg[8] [6]),
        .I2(\count_value_i_reg_n_0_[8] ),
        .I3(\grdc.rd_data_count_i_reg[8] [7]),
        .O(\count_value_i_reg[7]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized0_33
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    \gwdc.wr_data_count_i_reg[8] ,
    wr_clk);
  output [8:0]Q;
  output [7:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input [8:0]\gwdc.wr_data_count_i_reg[8] ;
  input wr_clk;

  wire [7:0]D;
  wire [8:0]Q;
  wire \count_value_i[0]_i_1__1_n_0 ;
  wire \count_value_i[1]_i_1__1_n_0 ;
  wire \count_value_i[2]_i_1__1_n_0 ;
  wire \count_value_i[3]_i_1__1_n_0 ;
  wire \count_value_i[4]_i_1__1_n_0 ;
  wire \count_value_i[5]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_2__1_n_0 ;
  wire \count_value_i[7]_i_1__1_n_0 ;
  wire \count_value_i[8]_i_1_n_0 ;
  wire \count_value_i[8]_i_2_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire \gwdc.wr_data_count_i[7]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_3_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_4_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_5_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_6_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_7_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_8_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_9_n_0 ;
  wire \gwdc.wr_data_count_i[8]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_1 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_2 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_3 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_4 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_5 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_6 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_7 ;
  wire [8:0]\gwdc.wr_data_count_i_reg[8] ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [0:0]\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:0]\NLW_gwdc.wr_data_count_i_reg[8]_i_1_CO_UNCONNECTED ;
  wire [7:1]\NLW_gwdc.wr_data_count_i_reg[8]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair199" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair199" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair198" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair198" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__1_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__1_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__1 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair197" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__1 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair197" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__1_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_2 
       (.I0(Q[7]),
        .I1(\gwdc.wr_data_count_i_reg[8] [7]),
        .O(\gwdc.wr_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_3 
       (.I0(Q[6]),
        .I1(\gwdc.wr_data_count_i_reg[8] [6]),
        .O(\gwdc.wr_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_4 
       (.I0(Q[5]),
        .I1(\gwdc.wr_data_count_i_reg[8] [5]),
        .O(\gwdc.wr_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_5 
       (.I0(Q[4]),
        .I1(\gwdc.wr_data_count_i_reg[8] [4]),
        .O(\gwdc.wr_data_count_i[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_6 
       (.I0(Q[3]),
        .I1(\gwdc.wr_data_count_i_reg[8] [3]),
        .O(\gwdc.wr_data_count_i[7]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_7 
       (.I0(Q[2]),
        .I1(\gwdc.wr_data_count_i_reg[8] [2]),
        .O(\gwdc.wr_data_count_i[7]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_8 
       (.I0(Q[1]),
        .I1(\gwdc.wr_data_count_i_reg[8] [1]),
        .O(\gwdc.wr_data_count_i[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_9 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[8] [0]),
        .O(\gwdc.wr_data_count_i[7]_i_9_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[8]_i_2 
       (.I0(Q[8]),
        .I1(\gwdc.wr_data_count_i_reg[8] [8]),
        .O(\gwdc.wr_data_count_i[8]_i_2_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[7]_i_1 
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_1 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_2 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_3 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_4 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_5 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_6 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_7 }),
        .DI(Q[7:0]),
        .O({D[6:0],\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({\gwdc.wr_data_count_i[7]_i_2_n_0 ,\gwdc.wr_data_count_i[7]_i_3_n_0 ,\gwdc.wr_data_count_i[7]_i_4_n_0 ,\gwdc.wr_data_count_i[7]_i_5_n_0 ,\gwdc.wr_data_count_i[7]_i_6_n_0 ,\gwdc.wr_data_count_i[7]_i_7_n_0 ,\gwdc.wr_data_count_i[7]_i_8_n_0 ,\gwdc.wr_data_count_i[7]_i_9_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[8]_i_1 
       (.CI(\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_gwdc.wr_data_count_i_reg[8]_i_1_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_gwdc.wr_data_count_i_reg[8]_i_1_O_UNCONNECTED [7:1],D[7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gwdc.wr_data_count_i[8]_i_2_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized0_41
   (Q,
    enb,
    DI,
    \count_value_i_reg[7]_0 ,
    D,
    S,
    src_in_bin,
    \count_value_i_reg[0]_0 ,
    rd_en,
    ram_empty_i,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[8] ,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ,
    \count_value_i_reg[8]_0 ,
    rd_clk);
  output [7:0]Q;
  output enb;
  output [0:0]DI;
  output [0:0]\count_value_i_reg[7]_0 ;
  output [7:0]D;
  output [4:0]S;
  output [7:0]src_in_bin;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input ram_empty_i;
  input [1:0]\grdc.rd_data_count_i_reg[7] ;
  input [7:0]\grdc.rd_data_count_i_reg[8] ;
  input [7:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ;
  input \count_value_i_reg[8]_0 ;
  input rd_clk;

  wire [7:0]D;
  wire [0:0]DI;
  wire [7:0]Q;
  wire [4:0]S;
  wire \count_value_i[0]_i_1__4_n_0 ;
  wire \count_value_i[1]_i_1__4_n_0 ;
  wire \count_value_i[2]_i_1__3_n_0 ;
  wire \count_value_i[3]_i_1__3_n_0 ;
  wire \count_value_i[4]_i_1__3_n_0 ;
  wire \count_value_i[5]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_2__2_n_0 ;
  wire \count_value_i[7]_i_1__2_n_0 ;
  wire \count_value_i[8]_i_1__0_n_0 ;
  wire \count_value_i[8]_i_2__0_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire [0:0]\count_value_i_reg[7]_0 ;
  wire \count_value_i_reg[8]_0 ;
  wire \count_value_i_reg_n_0_[8] ;
  wire enb;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 ;
  wire [1:0]\grdc.rd_data_count_i_reg[7] ;
  wire [7:0]\grdc.rd_data_count_i_reg[8] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [7:0]src_in_bin;
  wire [7:7]\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_CO_UNCONNECTED ;

  LUT5 #(
    .INIT(32'hABAA5455)) 
    \count_value_i[0]_i_1__4 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(Q[0]),
        .O(\count_value_i[0]_i_1__4_n_0 ));
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__4 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair160" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair161" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__3 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair161" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__3 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__3_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__2 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__2_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__2_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h0000AAA200000000)) 
    \count_value_i[6]_i_2__2 
       (.I0(Q[1]),
        .I1(\count_value_i_reg[0]_0 [1]),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair158" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__2 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair158" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1__0 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(\count_value_i_reg_n_0_[8] ),
        .O(\count_value_i[8]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(enb),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[0]_i_1__4_n_0 ),
        .Q(Q[0]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[1]_i_1__4_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[2]_i_1__3_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[3]_i_1__3_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[4]_i_1__3_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[5]_i_1__2_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[6]_i_1__2_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[7]_i_1__2_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[8]_i_1__0_n_0 ),
        .Q(\count_value_i_reg_n_0_[8] ),
        .R(\count_value_i_reg[8]_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFE00000001)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_1 
       (.I0(Q[7]),
        .I1(Q[5]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I3(Q[4]),
        .I4(Q[6]),
        .I5(\count_value_i_reg_n_0_[8] ),
        .O(src_in_bin[7]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFBFBBAFB)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [0]),
        .I4(Q[0]),
        .I5(Q[3]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair162" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair159" *) 
  LUT5 #(
    .INIT(32'hFFFE0001)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2 
       (.I0(Q[6]),
        .I1(Q[4]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I3(Q[5]),
        .I4(Q[7]),
        .O(src_in_bin[6]));
  (* SOFT_HLUTNM = "soft_lutpair159" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3 
       (.I0(Q[5]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I2(Q[4]),
        .I3(Q[6]),
        .O(src_in_bin[5]));
  LUT3 #(
    .INIT(8'hE1)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_4 
       (.I0(Q[4]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I2(Q[5]),
        .O(src_in_bin[4]));
  LUT6 #(
    .INIT(64'hFFFFEAFE00001501)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_5 
       (.I0(Q[3]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .I4(Q[2]),
        .I5(Q[4]),
        .O(src_in_bin[3]));
  LUT6 #(
    .INIT(64'hFBFBBAFB04044504)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [0]),
        .I4(Q[0]),
        .I5(Q[3]),
        .O(src_in_bin[2]));
  (* SOFT_HLUTNM = "soft_lutpair160" *) 
  LUT5 #(
    .INIT(32'hB0FB4F04)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_7 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .I4(Q[2]),
        .O(src_in_bin[1]));
  (* SOFT_HLUTNM = "soft_lutpair162" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_9 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .O(src_in_bin[0]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [6]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [5]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [4]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [3]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [2]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [1]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15_n_0 ));
  LUT5 #(
    .INIT(32'hABAA5455)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(Q[0]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2 
       (.I0(Q[6]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3 
       (.I0(Q[5]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4 
       (.I0(Q[4]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5 
       (.I0(Q[3]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6 
       (.I0(Q[2]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7 
       (.I0(Q[1]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8 
       (.I0(Q[0]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [7]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1 
       (.CI(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [0]),
        .CI_TOP(1'b0),
        .CO({\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_CO_UNCONNECTED [7],\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 }),
        .DI({1'b0,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 }),
        .O(D),
        .S({\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16_n_0 }));
  LUT4 #(
    .INIT(16'h00FD)) 
    \gen_sdpram.xpm_memory_base_inst_i_2 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .O(enb));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_10 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[8] [4]),
        .I2(Q[6]),
        .I3(\grdc.rd_data_count_i_reg[8] [5]),
        .O(S[3]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_11 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[8] [3]),
        .I2(Q[5]),
        .I3(\grdc.rd_data_count_i_reg[8] [4]),
        .O(S[2]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_12 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[8] [2]),
        .I2(Q[4]),
        .I3(\grdc.rd_data_count_i_reg[8] [3]),
        .O(S[1]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_13 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[8] [1]),
        .I2(Q[3]),
        .I3(\grdc.rd_data_count_i_reg[8] [2]),
        .O(S[0]));
  LUT3 #(
    .INIT(8'hD4)) 
    \grdc.rd_data_count_i[7]_i_7 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(\grdc.rd_data_count_i_reg[8] [0]),
        .O(DI));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_9 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[8] [5]),
        .I2(Q[7]),
        .I3(\grdc.rd_data_count_i_reg[8] [6]),
        .O(S[4]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[8]_i_3 
       (.I0(Q[7]),
        .I1(\grdc.rd_data_count_i_reg[8] [6]),
        .I2(\count_value_i_reg_n_0_[8] ),
        .I3(\grdc.rd_data_count_i_reg[8] [7]),
        .O(\count_value_i_reg[7]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized0_44
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    \gwdc.wr_data_count_i_reg[8] ,
    wr_clk);
  output [8:0]Q;
  output [7:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input [8:0]\gwdc.wr_data_count_i_reg[8] ;
  input wr_clk;

  wire [7:0]D;
  wire [8:0]Q;
  wire \count_value_i[0]_i_1__1_n_0 ;
  wire \count_value_i[1]_i_1__1_n_0 ;
  wire \count_value_i[2]_i_1__1_n_0 ;
  wire \count_value_i[3]_i_1__1_n_0 ;
  wire \count_value_i[4]_i_1__1_n_0 ;
  wire \count_value_i[5]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_2__1_n_0 ;
  wire \count_value_i[7]_i_1__1_n_0 ;
  wire \count_value_i[8]_i_1_n_0 ;
  wire \count_value_i[8]_i_2_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire \gwdc.wr_data_count_i[7]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_3_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_4_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_5_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_6_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_7_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_8_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_9_n_0 ;
  wire \gwdc.wr_data_count_i[8]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_1 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_2 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_3 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_4 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_5 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_6 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_7 ;
  wire [8:0]\gwdc.wr_data_count_i_reg[8] ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [0:0]\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:0]\NLW_gwdc.wr_data_count_i_reg[8]_i_1_CO_UNCONNECTED ;
  wire [7:1]\NLW_gwdc.wr_data_count_i_reg[8]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair167" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair167" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair166" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair166" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__1_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__1_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__1 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair165" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__1 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair165" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__1_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_2 
       (.I0(Q[7]),
        .I1(\gwdc.wr_data_count_i_reg[8] [7]),
        .O(\gwdc.wr_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_3 
       (.I0(Q[6]),
        .I1(\gwdc.wr_data_count_i_reg[8] [6]),
        .O(\gwdc.wr_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_4 
       (.I0(Q[5]),
        .I1(\gwdc.wr_data_count_i_reg[8] [5]),
        .O(\gwdc.wr_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_5 
       (.I0(Q[4]),
        .I1(\gwdc.wr_data_count_i_reg[8] [4]),
        .O(\gwdc.wr_data_count_i[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_6 
       (.I0(Q[3]),
        .I1(\gwdc.wr_data_count_i_reg[8] [3]),
        .O(\gwdc.wr_data_count_i[7]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_7 
       (.I0(Q[2]),
        .I1(\gwdc.wr_data_count_i_reg[8] [2]),
        .O(\gwdc.wr_data_count_i[7]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_8 
       (.I0(Q[1]),
        .I1(\gwdc.wr_data_count_i_reg[8] [1]),
        .O(\gwdc.wr_data_count_i[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_9 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[8] [0]),
        .O(\gwdc.wr_data_count_i[7]_i_9_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[8]_i_2 
       (.I0(Q[8]),
        .I1(\gwdc.wr_data_count_i_reg[8] [8]),
        .O(\gwdc.wr_data_count_i[8]_i_2_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[7]_i_1 
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_1 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_2 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_3 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_4 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_5 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_6 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_7 }),
        .DI(Q[7:0]),
        .O({D[6:0],\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({\gwdc.wr_data_count_i[7]_i_2_n_0 ,\gwdc.wr_data_count_i[7]_i_3_n_0 ,\gwdc.wr_data_count_i[7]_i_4_n_0 ,\gwdc.wr_data_count_i[7]_i_5_n_0 ,\gwdc.wr_data_count_i[7]_i_6_n_0 ,\gwdc.wr_data_count_i[7]_i_7_n_0 ,\gwdc.wr_data_count_i[7]_i_8_n_0 ,\gwdc.wr_data_count_i[7]_i_9_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[8]_i_1 
       (.CI(\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_gwdc.wr_data_count_i_reg[8]_i_1_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_gwdc.wr_data_count_i_reg[8]_i_1_O_UNCONNECTED [7:1],D[7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gwdc.wr_data_count_i[8]_i_2_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized1
   (Q,
    E,
    \count_value_i_reg[1]_0 ,
    rd_en,
    ram_empty_i,
    \count_value_i_reg[0]_0 ,
    rd_clk);
  output [7:0]Q;
  input [0:0]E;
  input [1:0]\count_value_i_reg[1]_0 ;
  input rd_en;
  input ram_empty_i;
  input \count_value_i_reg[0]_0 ;
  input rd_clk;

  wire [0:0]E;
  wire [7:0]Q;
  wire \count_value_i[0]_i_1__2_n_0 ;
  wire \count_value_i[1]_i_1__3_n_0 ;
  wire \count_value_i[2]_i_1__2_n_0 ;
  wire \count_value_i[3]_i_1__2_n_0 ;
  wire \count_value_i[4]_i_1__2_n_0 ;
  wire \count_value_i[5]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_2__3_n_0 ;
  wire \count_value_i[7]_i_1__3_n_0 ;
  wire \count_value_i[7]_i_2__1_n_0 ;
  wire \count_value_i_reg[0]_0 ;
  wire [1:0]\count_value_i_reg[1]_0 ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;

  LUT4 #(
    .INIT(16'h10EF)) 
    \count_value_i[0]_i_1__2 
       (.I0(rd_en),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(\count_value_i_reg[1]_0 [1]),
        .I3(Q[0]),
        .O(\count_value_i[0]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__3 
       (.I0(\count_value_i_reg[1]_0 [1]),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__3_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__2 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair226" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair226" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__2 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__3 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__3_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__3 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__3_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h0000AAA200000000)) 
    \count_value_i[6]_i_2__3 
       (.I0(Q[1]),
        .I1(\count_value_i_reg[1]_0 [1]),
        .I2(\count_value_i_reg[1]_0 [0]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__3_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__3 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2__1_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2__1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(E),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2__1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__2_n_0 ),
        .Q(Q[0]),
        .S(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__3_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__2_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__2_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1__2_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[5]_i_1__3_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[6]_i_1__3_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[7]_i_1__3_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized1_24
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ,
    wr_clk);
  output [7:0]Q;
  output [6:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input [7:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  input wr_clk;

  wire [6:0]D;
  wire [7:0]Q;
  wire \count_value_i[0]_i_1__0_n_0 ;
  wire \count_value_i[1]_i_1__0_n_0 ;
  wire \count_value_i[2]_i_1__0_n_0 ;
  wire \count_value_i[3]_i_1__0_n_0 ;
  wire \count_value_i[4]_i_1__0_n_0 ;
  wire \count_value_i[5]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_2__0_n_0 ;
  wire \count_value_i[7]_i_1__0_n_0 ;
  wire \count_value_i[7]_i_2__0_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [7:7]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_CO_UNCONNECTED ;
  wire [0:0]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__0 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair232" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair232" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair231" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair231" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__0 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__0_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__0_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__0 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__0_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__0 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2__0_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__0_n_0 ),
        .Q(Q[0]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__0_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__0_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__0_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__0_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__0_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__0_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__0_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [7]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [6]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [5]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [4]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [3]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [2]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [1]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [0]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1 
       (.CI(wr_pntr_plus1_pf_carry),
        .CI_TOP(1'b0),
        .CO({\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_CO_UNCONNECTED [7],\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 }),
        .DI({1'b0,Q[6:0]}),
        .O({D,\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED [0]}),
        .S({\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized1_31
   (Q,
    E,
    \count_value_i_reg[1]_0 ,
    rd_en,
    ram_empty_i,
    \count_value_i_reg[0]_0 ,
    rd_clk);
  output [7:0]Q;
  input [0:0]E;
  input [1:0]\count_value_i_reg[1]_0 ;
  input rd_en;
  input ram_empty_i;
  input \count_value_i_reg[0]_0 ;
  input rd_clk;

  wire [0:0]E;
  wire [7:0]Q;
  wire \count_value_i[0]_i_1__2_n_0 ;
  wire \count_value_i[1]_i_1__3_n_0 ;
  wire \count_value_i[2]_i_1__2_n_0 ;
  wire \count_value_i[3]_i_1__2_n_0 ;
  wire \count_value_i[4]_i_1__2_n_0 ;
  wire \count_value_i[5]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_2__3_n_0 ;
  wire \count_value_i[7]_i_1__3_n_0 ;
  wire \count_value_i[7]_i_2__1_n_0 ;
  wire \count_value_i_reg[0]_0 ;
  wire [1:0]\count_value_i_reg[1]_0 ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;

  LUT4 #(
    .INIT(16'h10EF)) 
    \count_value_i[0]_i_1__2 
       (.I0(rd_en),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(\count_value_i_reg[1]_0 [1]),
        .I3(Q[0]),
        .O(\count_value_i[0]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__3 
       (.I0(\count_value_i_reg[1]_0 [1]),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__3_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__2 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair195" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair195" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__2 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__3 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__3_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__3 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__3_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h0000AAA200000000)) 
    \count_value_i[6]_i_2__3 
       (.I0(Q[1]),
        .I1(\count_value_i_reg[1]_0 [1]),
        .I2(\count_value_i_reg[1]_0 [0]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__3_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__3 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2__1_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2__1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(E),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2__1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__2_n_0 ),
        .Q(Q[0]),
        .S(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__3_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__2_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__2_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1__2_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[5]_i_1__3_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[6]_i_1__3_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[7]_i_1__3_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized1_34
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ,
    wr_clk);
  output [7:0]Q;
  output [6:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input [7:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  input wr_clk;

  wire [6:0]D;
  wire [7:0]Q;
  wire \count_value_i[0]_i_1__0_n_0 ;
  wire \count_value_i[1]_i_1__0_n_0 ;
  wire \count_value_i[2]_i_1__0_n_0 ;
  wire \count_value_i[3]_i_1__0_n_0 ;
  wire \count_value_i[4]_i_1__0_n_0 ;
  wire \count_value_i[5]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_2__0_n_0 ;
  wire \count_value_i[7]_i_1__0_n_0 ;
  wire \count_value_i[7]_i_2__0_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [7:7]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_CO_UNCONNECTED ;
  wire [0:0]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__0 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair201" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair201" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair200" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair200" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__0 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__0_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__0_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__0 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__0_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__0 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2__0_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__0_n_0 ),
        .Q(Q[0]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__0_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__0_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__0_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__0_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__0_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__0_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__0_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [7]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [6]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [5]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [4]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [3]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [2]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [1]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [0]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1 
       (.CI(wr_pntr_plus1_pf_carry),
        .CI_TOP(1'b0),
        .CO({\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_CO_UNCONNECTED [7],\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 }),
        .DI({1'b0,Q[6:0]}),
        .O({D,\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED [0]}),
        .S({\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized1_42
   (Q,
    E,
    \count_value_i_reg[1]_0 ,
    rd_en,
    ram_empty_i,
    \count_value_i_reg[0]_0 ,
    rd_clk);
  output [7:0]Q;
  input [0:0]E;
  input [1:0]\count_value_i_reg[1]_0 ;
  input rd_en;
  input ram_empty_i;
  input \count_value_i_reg[0]_0 ;
  input rd_clk;

  wire [0:0]E;
  wire [7:0]Q;
  wire \count_value_i[0]_i_1__2_n_0 ;
  wire \count_value_i[1]_i_1__3_n_0 ;
  wire \count_value_i[2]_i_1__2_n_0 ;
  wire \count_value_i[3]_i_1__2_n_0 ;
  wire \count_value_i[4]_i_1__2_n_0 ;
  wire \count_value_i[5]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_2__3_n_0 ;
  wire \count_value_i[7]_i_1__3_n_0 ;
  wire \count_value_i[7]_i_2__1_n_0 ;
  wire \count_value_i_reg[0]_0 ;
  wire [1:0]\count_value_i_reg[1]_0 ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;

  LUT4 #(
    .INIT(16'h10EF)) 
    \count_value_i[0]_i_1__2 
       (.I0(rd_en),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(\count_value_i_reg[1]_0 [1]),
        .I3(Q[0]),
        .O(\count_value_i[0]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__3 
       (.I0(\count_value_i_reg[1]_0 [1]),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__3_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__2 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair163" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair163" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__2 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__3 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__3_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__3 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__3_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h0000AAA200000000)) 
    \count_value_i[6]_i_2__3 
       (.I0(Q[1]),
        .I1(\count_value_i_reg[1]_0 [1]),
        .I2(\count_value_i_reg[1]_0 [0]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__3_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__3 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2__1_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2__1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(E),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2__1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__2_n_0 ),
        .Q(Q[0]),
        .S(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__3_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__2_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__2_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1__2_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[5]_i_1__3_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[6]_i_1__3_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[7]_i_1__3_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized1_45
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ,
    wr_clk);
  output [7:0]Q;
  output [6:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input [7:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  input wr_clk;

  wire [6:0]D;
  wire [7:0]Q;
  wire \count_value_i[0]_i_1__0_n_0 ;
  wire \count_value_i[1]_i_1__0_n_0 ;
  wire \count_value_i[2]_i_1__0_n_0 ;
  wire \count_value_i[3]_i_1__0_n_0 ;
  wire \count_value_i[4]_i_1__0_n_0 ;
  wire \count_value_i[5]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_2__0_n_0 ;
  wire \count_value_i[7]_i_1__0_n_0 ;
  wire \count_value_i[7]_i_2__0_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [7:7]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_CO_UNCONNECTED ;
  wire [0:0]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__0 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair169" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair169" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair168" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair168" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__0 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__0_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__0_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__0 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__0_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__0 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2__0_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__0_n_0 ),
        .Q(Q[0]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__0_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__0_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__0_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__0_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__0_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__0_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__0_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [7]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [6]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [5]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [4]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [3]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [2]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [1]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [0]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1 
       (.CI(wr_pntr_plus1_pf_carry),
        .CI_TOP(1'b0),
        .CO({\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_CO_UNCONNECTED [7],\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 }),
        .DI({1'b0,Q[6:0]}),
        .O({D,\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED [0]}),
        .S({\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized2
   (Q,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    wr_clk);
  output [7:0]Q;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input wr_clk;

  wire [7:0]Q;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[2]_i_1_n_0 ;
  wire \count_value_i[3]_i_1_n_0 ;
  wire \count_value_i[4]_i_1_n_0 ;
  wire \count_value_i[5]_i_1_n_0 ;
  wire \count_value_i[6]_i_1_n_0 ;
  wire \count_value_i[6]_i_2_n_0 ;
  wire \count_value_i[7]_i_1_n_0 ;
  wire \count_value_i[7]_i_2_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  (* SOFT_HLUTNM = "soft_lutpair234" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair234" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair233" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair233" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(Q[1]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized2_35
   (Q,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    wr_clk);
  output [7:0]Q;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input wr_clk;

  wire [7:0]Q;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[2]_i_1_n_0 ;
  wire \count_value_i[3]_i_1_n_0 ;
  wire \count_value_i[4]_i_1_n_0 ;
  wire \count_value_i[5]_i_1_n_0 ;
  wire \count_value_i[6]_i_1_n_0 ;
  wire \count_value_i[6]_i_2_n_0 ;
  wire \count_value_i[7]_i_1_n_0 ;
  wire \count_value_i[7]_i_2_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  (* SOFT_HLUTNM = "soft_lutpair203" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair203" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair202" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair202" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(Q[1]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized2_46
   (Q,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    wr_clk);
  output [7:0]Q;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input wr_clk;

  wire [7:0]Q;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[2]_i_1_n_0 ;
  wire \count_value_i[3]_i_1_n_0 ;
  wire \count_value_i[4]_i_1_n_0 ;
  wire \count_value_i[5]_i_1_n_0 ;
  wire \count_value_i[6]_i_1_n_0 ;
  wire \count_value_i[6]_i_2_n_0 ;
  wire \count_value_i[7]_i_1_n_0 ;
  wire \count_value_i[7]_i_2_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  (* SOFT_HLUTNM = "soft_lutpair171" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair171" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair170" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair170" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(Q[1]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized3
   (Q,
    ram_rd_en_i,
    \reg_out_i_reg[7] ,
    src_in_bin,
    \count_value_i_reg[1]_0 ,
    D,
    \count_value_i_reg[7]_0 ,
    \count_value_i_reg[0]_0 ,
    rd_en,
    ram_empty_i,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \grdc.rd_data_count_i_reg[7] ,
    DI,
    \grdc.rd_data_count_i_reg[9] ,
    S,
    \grdc.rd_data_count_i_reg[9]_0 ,
    \count_value_i_reg[9]_0 ,
    rd_clk);
  output [9:0]Q;
  output ram_rd_en_i;
  output \reg_out_i_reg[7] ;
  output [8:0]src_in_bin;
  output \count_value_i_reg[1]_0 ;
  output [8:0]D;
  output [7:0]\count_value_i_reg[7]_0 ;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input ram_empty_i;
  input [8:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  input [1:0]\grdc.rd_data_count_i_reg[7] ;
  input [7:0]DI;
  input [0:0]\grdc.rd_data_count_i_reg[9] ;
  input [0:0]S;
  input [8:0]\grdc.rd_data_count_i_reg[9]_0 ;
  input \count_value_i_reg[9]_0 ;
  input rd_clk;

  wire [8:0]D;
  wire [7:0]DI;
  wire [9:0]Q;
  wire [0:0]S;
  wire \count_value_i[0]_i_1__4_n_0 ;
  wire \count_value_i[1]_i_1__4_n_0 ;
  wire \count_value_i[2]_i_1__3_n_0 ;
  wire \count_value_i[3]_i_1__3_n_0 ;
  wire \count_value_i[4]_i_1__3_n_0 ;
  wire \count_value_i[5]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_2__3_n_0 ;
  wire \count_value_i[7]_i_1__3_n_0 ;
  wire \count_value_i[8]_i_1__3_n_0 ;
  wire \count_value_i[9]_i_1__0_n_0 ;
  wire \count_value_i[9]_i_2__0_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \count_value_i_reg[1]_0 ;
  wire [7:0]\count_value_i_reg[7]_0 ;
  wire \count_value_i_reg[9]_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_7_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_8_n_0 ;
  wire [8:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  wire \grdc.rd_data_count_i[7]_i_10_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_11_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_12_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_13_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_14_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_15_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_16_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_17_n_0 ;
  wire \grdc.rd_data_count_i[9]_i_5_n_0 ;
  wire [1:0]\grdc.rd_data_count_i_reg[7] ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_0 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_1 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_2 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_3 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_4 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_5 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_6 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_7 ;
  wire [0:0]\grdc.rd_data_count_i_reg[9] ;
  wire [8:0]\grdc.rd_data_count_i_reg[9]_0 ;
  wire \grdc.rd_data_count_i_reg[9]_i_2_n_7 ;
  wire ram_empty_i;
  wire ram_rd_en_i;
  wire rd_clk;
  wire rd_en;
  wire \reg_out_i_reg[7] ;
  wire [8:0]src_in_bin;
  wire [0:0]\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:1]\NLW_grdc.rd_data_count_i_reg[9]_i_2_CO_UNCONNECTED ;
  wire [7:2]\NLW_grdc.rd_data_count_i_reg[9]_i_2_O_UNCONNECTED ;

  LUT5 #(
    .INIT(32'hAABA5545)) 
    \count_value_i[0]_i_1__4 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(Q[0]),
        .O(\count_value_i[0]_i_1__4_n_0 ));
  LUT5 #(
    .INIT(32'h04FFFB00)) 
    \count_value_i[1]_i_1__4 
       (.I0(\count_value_i_reg[0]_0 [0]),
        .I1(\count_value_i_reg[0]_0 [1]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair329" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair326" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__3 
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair326" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__3_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__3 
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(Q[2]),
        .I3(\count_value_i[6]_i_2__3_n_0 ),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__3 
       (.I0(\count_value_i[6]_i_2__3_n_0 ),
        .I1(Q[2]),
        .I2(Q[3]),
        .I3(Q[4]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h0000AA8A00000000)) 
    \count_value_i[6]_i_2__3 
       (.I0(Q[1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair323" *) 
  LUT4 #(
    .INIT(16'hF708)) 
    \count_value_i[7]_i_1__3 
       (.I0(Q[6]),
        .I1(Q[5]),
        .I2(\count_value_i[9]_i_2__0_n_0 ),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair323" *) 
  LUT5 #(
    .INIT(32'hBFFF4000)) 
    \count_value_i[8]_i_1__3 
       (.I0(\count_value_i[9]_i_2__0_n_0 ),
        .I1(Q[5]),
        .I2(Q[6]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF7FFF00008000)) 
    \count_value_i[9]_i_1__0 
       (.I0(Q[8]),
        .I1(Q[7]),
        .I2(Q[6]),
        .I3(Q[5]),
        .I4(\count_value_i[9]_i_2__0_n_0 ),
        .I5(Q[9]),
        .O(\count_value_i[9]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \count_value_i[9]_i_2__0 
       (.I0(Q[0]),
        .I1(ram_rd_en_i),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(Q[3]),
        .I5(Q[4]),
        .O(\count_value_i[9]_i_2__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[0]_i_1__4_n_0 ),
        .Q(Q[0]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[1]_i_1__4_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[2]_i_1__3_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[3]_i_1__3_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[4]_i_1__3_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[5]_i_1__3_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[6]_i_1__3_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[7]_i_1__3_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[8]_i_1__3_n_0 ),
        .Q(Q[8]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[9] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[9]_i_1__0_n_0 ),
        .Q(Q[9]),
        .R(\count_value_i_reg[9]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair327" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_1 
       (.I0(Q[8]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ),
        .I2(Q[7]),
        .I3(Q[9]),
        .O(src_in_bin[8]));
  (* SOFT_HLUTNM = "soft_lutpair324" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11 
       (.I0(Q[5]),
        .I1(Q[3]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I3(Q[4]),
        .I4(Q[6]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair325" *) 
  LUT5 #(
    .INIT(32'hFFFFDD4D)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12 
       (.I0(\grdc.rd_data_count_i_reg[7] [1]),
        .I1(Q[1]),
        .I2(\grdc.rd_data_count_i_reg[7] [0]),
        .I3(Q[0]),
        .I4(Q[2]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair327" *) 
  LUT3 #(
    .INIT(8'hA9)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2 
       (.I0(Q[8]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ),
        .I2(Q[7]),
        .O(src_in_bin[7]));
  LUT6 #(
    .INIT(64'hFFFFFFFE00000001)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3 
       (.I0(Q[6]),
        .I1(Q[4]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[7]),
        .O(src_in_bin[6]));
  (* SOFT_HLUTNM = "soft_lutpair324" *) 
  LUT5 #(
    .INIT(32'hAAAAAAA9)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_4 
       (.I0(Q[6]),
        .I1(Q[4]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .O(src_in_bin[5]));
  (* SOFT_HLUTNM = "soft_lutpair328" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_5 
       (.I0(Q[4]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I2(Q[3]),
        .I3(Q[5]),
        .O(src_in_bin[4]));
  (* SOFT_HLUTNM = "soft_lutpair328" *) 
  LUT3 #(
    .INIT(8'hA9)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6 
       (.I0(Q[4]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I2(Q[3]),
        .O(src_in_bin[3]));
  LUT6 #(
    .INIT(64'hEFAAFFEF10550010)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_7 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(\grdc.rd_data_count_i_reg[7] [0]),
        .I3(Q[1]),
        .I4(\grdc.rd_data_count_i_reg[7] [1]),
        .I5(Q[3]),
        .O(src_in_bin[2]));
  (* SOFT_HLUTNM = "soft_lutpair325" *) 
  LUT5 #(
    .INIT(32'h9A55AA9A)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_8 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(\grdc.rd_data_count_i_reg[7] [0]),
        .I3(Q[1]),
        .I4(\grdc.rd_data_count_i_reg[7] [1]),
        .O(src_in_bin[1]));
  (* SOFT_HLUTNM = "soft_lutpair329" *) 
  LUT4 #(
    .INIT(16'h6696)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_9 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(\grdc.rd_data_count_i_reg[7] [0]),
        .I3(Q[0]),
        .O(src_in_bin[0]));
  LUT5 #(
    .INIT(32'hAABA5545)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(Q[0]),
        .O(\count_value_i_reg[7]_0 [0]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [7]),
        .O(\count_value_i_reg[7]_0 [7]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [6]),
        .O(\count_value_i_reg[7]_0 [6]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [5]),
        .O(\count_value_i_reg[7]_0 [5]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [4]),
        .O(\count_value_i_reg[7]_0 [4]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .O(\count_value_i_reg[7]_0 [3]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .O(\count_value_i_reg[7]_0 [2]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .O(\count_value_i_reg[7]_0 [1]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_5 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .I2(Q[0]),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I4(Q[2]),
        .I5(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .O(\count_value_i_reg[1]_0 ));
  LUT6 #(
    .INIT(64'h8200008200000000)) 
    \gen_pf_ic_rc.ram_empty_i_i_6 
       (.I0(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [7]),
        .I2(Q[7]),
        .I3(Q[8]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [8]),
        .I5(\gen_pf_ic_rc.ram_empty_i_i_8_n_0 ),
        .O(\reg_out_i_reg[7] ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.ram_empty_i_i_7 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [6]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_8 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [4]),
        .I2(Q[3]),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .I4(Q[5]),
        .I5(\gen_pf_ic_rc.ram_empty_i_reg [5]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_8_n_0 ));
  LUT4 #(
    .INIT(16'h00FB)) 
    \gen_sdpram.xpm_memory_base_inst_i_2 
       (.I0(\count_value_i_reg[0]_0 [0]),
        .I1(\count_value_i_reg[0]_0 [1]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .O(ram_rd_en_i));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_10 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [6]),
        .I2(Q[7]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [7]),
        .O(\grdc.rd_data_count_i[7]_i_10_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_11 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [5]),
        .I2(Q[6]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [6]),
        .O(\grdc.rd_data_count_i[7]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_12 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [4]),
        .I2(Q[5]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [5]),
        .O(\grdc.rd_data_count_i[7]_i_12_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_13 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [3]),
        .I2(Q[4]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [4]),
        .O(\grdc.rd_data_count_i[7]_i_13_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_14 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [2]),
        .I2(Q[3]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [3]),
        .O(\grdc.rd_data_count_i[7]_i_14_n_0 ));
  LUT5 #(
    .INIT(32'h2BD4D42B)) 
    \grdc.rd_data_count_i[7]_i_15 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(\grdc.rd_data_count_i_reg[9]_0 [1]),
        .I3(Q[2]),
        .I4(\grdc.rd_data_count_i_reg[9]_0 [2]),
        .O(\grdc.rd_data_count_i[7]_i_15_n_0 ));
  LUT5 #(
    .INIT(32'hD22D2DD2)) 
    \grdc.rd_data_count_i[7]_i_16 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(\grdc.rd_data_count_i_reg[9]_0 [1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .I4(Q[1]),
        .O(\grdc.rd_data_count_i[7]_i_16_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \grdc.rd_data_count_i[7]_i_17 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(\grdc.rd_data_count_i_reg[9]_0 [0]),
        .O(\grdc.rd_data_count_i[7]_i_17_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[9]_i_5 
       (.I0(Q[7]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [7]),
        .I2(Q[8]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [8]),
        .O(\grdc.rd_data_count_i[9]_i_5_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[7]_i_1 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\grdc.rd_data_count_i_reg[7]_i_1_n_0 ,\grdc.rd_data_count_i_reg[7]_i_1_n_1 ,\grdc.rd_data_count_i_reg[7]_i_1_n_2 ,\grdc.rd_data_count_i_reg[7]_i_1_n_3 ,\grdc.rd_data_count_i_reg[7]_i_1_n_4 ,\grdc.rd_data_count_i_reg[7]_i_1_n_5 ,\grdc.rd_data_count_i_reg[7]_i_1_n_6 ,\grdc.rd_data_count_i_reg[7]_i_1_n_7 }),
        .DI(DI),
        .O({D[6:0],\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({\grdc.rd_data_count_i[7]_i_10_n_0 ,\grdc.rd_data_count_i[7]_i_11_n_0 ,\grdc.rd_data_count_i[7]_i_12_n_0 ,\grdc.rd_data_count_i[7]_i_13_n_0 ,\grdc.rd_data_count_i[7]_i_14_n_0 ,\grdc.rd_data_count_i[7]_i_15_n_0 ,\grdc.rd_data_count_i[7]_i_16_n_0 ,\grdc.rd_data_count_i[7]_i_17_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[9]_i_2 
       (.CI(\grdc.rd_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_grdc.rd_data_count_i_reg[9]_i_2_CO_UNCONNECTED [7:1],\grdc.rd_data_count_i_reg[9]_i_2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\grdc.rd_data_count_i_reg[9] }),
        .O({\NLW_grdc.rd_data_count_i_reg[9]_i_2_O_UNCONNECTED [7:2],D[8:7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,S,\grdc.rd_data_count_i[9]_i_5_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized3_10
   (Q,
    ram_rd_en_i,
    \reg_out_i_reg[7] ,
    src_in_bin,
    \count_value_i_reg[1]_0 ,
    D,
    \count_value_i_reg[7]_0 ,
    \count_value_i_reg[0]_0 ,
    rd_en,
    ram_empty_i,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \grdc.rd_data_count_i_reg[7] ,
    DI,
    \grdc.rd_data_count_i_reg[9] ,
    S,
    \grdc.rd_data_count_i_reg[9]_0 ,
    \count_value_i_reg[9]_0 ,
    rd_clk);
  output [9:0]Q;
  output ram_rd_en_i;
  output \reg_out_i_reg[7] ;
  output [8:0]src_in_bin;
  output \count_value_i_reg[1]_0 ;
  output [8:0]D;
  output [7:0]\count_value_i_reg[7]_0 ;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input ram_empty_i;
  input [8:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  input [1:0]\grdc.rd_data_count_i_reg[7] ;
  input [7:0]DI;
  input [0:0]\grdc.rd_data_count_i_reg[9] ;
  input [0:0]S;
  input [8:0]\grdc.rd_data_count_i_reg[9]_0 ;
  input \count_value_i_reg[9]_0 ;
  input rd_clk;

  wire [8:0]D;
  wire [7:0]DI;
  wire [9:0]Q;
  wire [0:0]S;
  wire \count_value_i[0]_i_1__4_n_0 ;
  wire \count_value_i[1]_i_1__4_n_0 ;
  wire \count_value_i[2]_i_1__3_n_0 ;
  wire \count_value_i[3]_i_1__3_n_0 ;
  wire \count_value_i[4]_i_1__3_n_0 ;
  wire \count_value_i[5]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_2__3_n_0 ;
  wire \count_value_i[7]_i_1__3_n_0 ;
  wire \count_value_i[8]_i_1__3_n_0 ;
  wire \count_value_i[9]_i_1__0_n_0 ;
  wire \count_value_i[9]_i_2__0_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \count_value_i_reg[1]_0 ;
  wire [7:0]\count_value_i_reg[7]_0 ;
  wire \count_value_i_reg[9]_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_7_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_8_n_0 ;
  wire [8:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  wire \grdc.rd_data_count_i[7]_i_10_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_11_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_12_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_13_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_14_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_15_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_16_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_17_n_0 ;
  wire \grdc.rd_data_count_i[9]_i_5_n_0 ;
  wire [1:0]\grdc.rd_data_count_i_reg[7] ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_0 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_1 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_2 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_3 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_4 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_5 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_6 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_7 ;
  wire [0:0]\grdc.rd_data_count_i_reg[9] ;
  wire [8:0]\grdc.rd_data_count_i_reg[9]_0 ;
  wire \grdc.rd_data_count_i_reg[9]_i_2_n_7 ;
  wire ram_empty_i;
  wire ram_rd_en_i;
  wire rd_clk;
  wire rd_en;
  wire \reg_out_i_reg[7] ;
  wire [8:0]src_in_bin;
  wire [0:0]\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:1]\NLW_grdc.rd_data_count_i_reg[9]_i_2_CO_UNCONNECTED ;
  wire [7:2]\NLW_grdc.rd_data_count_i_reg[9]_i_2_O_UNCONNECTED ;

  LUT5 #(
    .INIT(32'hAABA5545)) 
    \count_value_i[0]_i_1__4 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(Q[0]),
        .O(\count_value_i[0]_i_1__4_n_0 ));
  LUT5 #(
    .INIT(32'h04FFFB00)) 
    \count_value_i[1]_i_1__4 
       (.I0(\count_value_i_reg[0]_0 [0]),
        .I1(\count_value_i_reg[0]_0 [1]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair275" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair272" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__3 
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair272" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__3_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__3 
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(Q[2]),
        .I3(\count_value_i[6]_i_2__3_n_0 ),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__3 
       (.I0(\count_value_i[6]_i_2__3_n_0 ),
        .I1(Q[2]),
        .I2(Q[3]),
        .I3(Q[4]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h0000AA8A00000000)) 
    \count_value_i[6]_i_2__3 
       (.I0(Q[1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair269" *) 
  LUT4 #(
    .INIT(16'hF708)) 
    \count_value_i[7]_i_1__3 
       (.I0(Q[6]),
        .I1(Q[5]),
        .I2(\count_value_i[9]_i_2__0_n_0 ),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair269" *) 
  LUT5 #(
    .INIT(32'hBFFF4000)) 
    \count_value_i[8]_i_1__3 
       (.I0(\count_value_i[9]_i_2__0_n_0 ),
        .I1(Q[5]),
        .I2(Q[6]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF7FFF00008000)) 
    \count_value_i[9]_i_1__0 
       (.I0(Q[8]),
        .I1(Q[7]),
        .I2(Q[6]),
        .I3(Q[5]),
        .I4(\count_value_i[9]_i_2__0_n_0 ),
        .I5(Q[9]),
        .O(\count_value_i[9]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \count_value_i[9]_i_2__0 
       (.I0(Q[0]),
        .I1(ram_rd_en_i),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(Q[3]),
        .I5(Q[4]),
        .O(\count_value_i[9]_i_2__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[0]_i_1__4_n_0 ),
        .Q(Q[0]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[1]_i_1__4_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[2]_i_1__3_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[3]_i_1__3_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[4]_i_1__3_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[5]_i_1__3_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[6]_i_1__3_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[7]_i_1__3_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[8]_i_1__3_n_0 ),
        .Q(Q[8]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[9] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[9]_i_1__0_n_0 ),
        .Q(Q[9]),
        .R(\count_value_i_reg[9]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair273" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_1 
       (.I0(Q[8]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ),
        .I2(Q[7]),
        .I3(Q[9]),
        .O(src_in_bin[8]));
  (* SOFT_HLUTNM = "soft_lutpair270" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11 
       (.I0(Q[5]),
        .I1(Q[3]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I3(Q[4]),
        .I4(Q[6]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair271" *) 
  LUT5 #(
    .INIT(32'hFFFFDD4D)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12 
       (.I0(\grdc.rd_data_count_i_reg[7] [1]),
        .I1(Q[1]),
        .I2(\grdc.rd_data_count_i_reg[7] [0]),
        .I3(Q[0]),
        .I4(Q[2]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair273" *) 
  LUT3 #(
    .INIT(8'hA9)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2 
       (.I0(Q[8]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ),
        .I2(Q[7]),
        .O(src_in_bin[7]));
  LUT6 #(
    .INIT(64'hFFFFFFFE00000001)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3 
       (.I0(Q[6]),
        .I1(Q[4]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[7]),
        .O(src_in_bin[6]));
  (* SOFT_HLUTNM = "soft_lutpair270" *) 
  LUT5 #(
    .INIT(32'hAAAAAAA9)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_4 
       (.I0(Q[6]),
        .I1(Q[4]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .O(src_in_bin[5]));
  (* SOFT_HLUTNM = "soft_lutpair274" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_5 
       (.I0(Q[4]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I2(Q[3]),
        .I3(Q[5]),
        .O(src_in_bin[4]));
  (* SOFT_HLUTNM = "soft_lutpair274" *) 
  LUT3 #(
    .INIT(8'hA9)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6 
       (.I0(Q[4]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I2(Q[3]),
        .O(src_in_bin[3]));
  LUT6 #(
    .INIT(64'hEFAAFFEF10550010)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_7 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(\grdc.rd_data_count_i_reg[7] [0]),
        .I3(Q[1]),
        .I4(\grdc.rd_data_count_i_reg[7] [1]),
        .I5(Q[3]),
        .O(src_in_bin[2]));
  (* SOFT_HLUTNM = "soft_lutpair271" *) 
  LUT5 #(
    .INIT(32'h9A55AA9A)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_8 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(\grdc.rd_data_count_i_reg[7] [0]),
        .I3(Q[1]),
        .I4(\grdc.rd_data_count_i_reg[7] [1]),
        .O(src_in_bin[1]));
  (* SOFT_HLUTNM = "soft_lutpair275" *) 
  LUT4 #(
    .INIT(16'h6696)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_9 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(\grdc.rd_data_count_i_reg[7] [0]),
        .I3(Q[0]),
        .O(src_in_bin[0]));
  LUT5 #(
    .INIT(32'hAABA5545)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(Q[0]),
        .O(\count_value_i_reg[7]_0 [0]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [7]),
        .O(\count_value_i_reg[7]_0 [7]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [6]),
        .O(\count_value_i_reg[7]_0 [6]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [5]),
        .O(\count_value_i_reg[7]_0 [5]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [4]),
        .O(\count_value_i_reg[7]_0 [4]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .O(\count_value_i_reg[7]_0 [3]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .O(\count_value_i_reg[7]_0 [2]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .O(\count_value_i_reg[7]_0 [1]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_5 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .I2(Q[0]),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I4(Q[2]),
        .I5(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .O(\count_value_i_reg[1]_0 ));
  LUT6 #(
    .INIT(64'h8200008200000000)) 
    \gen_pf_ic_rc.ram_empty_i_i_6 
       (.I0(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [7]),
        .I2(Q[7]),
        .I3(Q[8]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [8]),
        .I5(\gen_pf_ic_rc.ram_empty_i_i_8_n_0 ),
        .O(\reg_out_i_reg[7] ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.ram_empty_i_i_7 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [6]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_8 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [4]),
        .I2(Q[3]),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .I4(Q[5]),
        .I5(\gen_pf_ic_rc.ram_empty_i_reg [5]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_8_n_0 ));
  LUT4 #(
    .INIT(16'h00FB)) 
    \gen_sdpram.xpm_memory_base_inst_i_2 
       (.I0(\count_value_i_reg[0]_0 [0]),
        .I1(\count_value_i_reg[0]_0 [1]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .O(ram_rd_en_i));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_10 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [6]),
        .I2(Q[7]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [7]),
        .O(\grdc.rd_data_count_i[7]_i_10_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_11 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [5]),
        .I2(Q[6]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [6]),
        .O(\grdc.rd_data_count_i[7]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_12 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [4]),
        .I2(Q[5]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [5]),
        .O(\grdc.rd_data_count_i[7]_i_12_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_13 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [3]),
        .I2(Q[4]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [4]),
        .O(\grdc.rd_data_count_i[7]_i_13_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_14 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [2]),
        .I2(Q[3]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [3]),
        .O(\grdc.rd_data_count_i[7]_i_14_n_0 ));
  LUT5 #(
    .INIT(32'h2BD4D42B)) 
    \grdc.rd_data_count_i[7]_i_15 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(\grdc.rd_data_count_i_reg[9]_0 [1]),
        .I3(Q[2]),
        .I4(\grdc.rd_data_count_i_reg[9]_0 [2]),
        .O(\grdc.rd_data_count_i[7]_i_15_n_0 ));
  LUT5 #(
    .INIT(32'hD22D2DD2)) 
    \grdc.rd_data_count_i[7]_i_16 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(\grdc.rd_data_count_i_reg[9]_0 [1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .I4(Q[1]),
        .O(\grdc.rd_data_count_i[7]_i_16_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \grdc.rd_data_count_i[7]_i_17 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(\grdc.rd_data_count_i_reg[9]_0 [0]),
        .O(\grdc.rd_data_count_i[7]_i_17_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[9]_i_5 
       (.I0(Q[7]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [7]),
        .I2(Q[8]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [8]),
        .O(\grdc.rd_data_count_i[9]_i_5_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[7]_i_1 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\grdc.rd_data_count_i_reg[7]_i_1_n_0 ,\grdc.rd_data_count_i_reg[7]_i_1_n_1 ,\grdc.rd_data_count_i_reg[7]_i_1_n_2 ,\grdc.rd_data_count_i_reg[7]_i_1_n_3 ,\grdc.rd_data_count_i_reg[7]_i_1_n_4 ,\grdc.rd_data_count_i_reg[7]_i_1_n_5 ,\grdc.rd_data_count_i_reg[7]_i_1_n_6 ,\grdc.rd_data_count_i_reg[7]_i_1_n_7 }),
        .DI(DI),
        .O({D[6:0],\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({\grdc.rd_data_count_i[7]_i_10_n_0 ,\grdc.rd_data_count_i[7]_i_11_n_0 ,\grdc.rd_data_count_i[7]_i_12_n_0 ,\grdc.rd_data_count_i[7]_i_13_n_0 ,\grdc.rd_data_count_i[7]_i_14_n_0 ,\grdc.rd_data_count_i[7]_i_15_n_0 ,\grdc.rd_data_count_i[7]_i_16_n_0 ,\grdc.rd_data_count_i[7]_i_17_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[9]_i_2 
       (.CI(\grdc.rd_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_grdc.rd_data_count_i_reg[9]_i_2_CO_UNCONNECTED [7:1],\grdc.rd_data_count_i_reg[9]_i_2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\grdc.rd_data_count_i_reg[9] }),
        .O({\NLW_grdc.rd_data_count_i_reg[9]_i_2_O_UNCONNECTED [7:2],D[8:7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,S,\grdc.rd_data_count_i[9]_i_5_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized3_13
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[5]_0 ,
    wrst_busy,
    rst_d1,
    \gwdc.wr_data_count_i_reg[9] ,
    wr_clk);
  output [9:0]Q;
  output [8:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[5]_0 ;
  input wrst_busy;
  input rst_d1;
  input [9:0]\gwdc.wr_data_count_i_reg[9] ;
  input wr_clk;

  wire [8:0]D;
  wire [9:0]Q;
  wire \count_value_i[0]_i_1__1_n_0 ;
  wire \count_value_i[1]_i_1__1_n_0 ;
  wire \count_value_i[2]_i_1__1_n_0 ;
  wire \count_value_i[3]_i_1__1_n_0 ;
  wire \count_value_i[4]_i_1__1_n_0 ;
  wire \count_value_i[5]_i_1_n_0 ;
  wire \count_value_i[6]_i_1_n_0 ;
  wire \count_value_i[6]_i_2_n_0 ;
  wire \count_value_i[7]_i_1_n_0 ;
  wire \count_value_i[8]_i_1_n_0 ;
  wire \count_value_i[9]_i_1_n_0 ;
  wire \count_value_i[9]_i_2_n_0 ;
  wire \count_value_i_reg[5]_0 ;
  wire \gwdc.wr_data_count_i[7]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_3_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_4_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_5_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_6_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_7_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_8_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_9_n_0 ;
  wire \gwdc.wr_data_count_i[9]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[9]_i_3_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_1 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_2 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_3 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_4 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_5 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_6 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_7 ;
  wire [9:0]\gwdc.wr_data_count_i_reg[9] ;
  wire \gwdc.wr_data_count_i_reg[9]_i_1_n_7 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [0:0]\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:1]\NLW_gwdc.wr_data_count_i_reg[9]_i_1_CO_UNCONNECTED ;
  wire [7:2]\NLW_gwdc.wr_data_count_i_reg[9]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair281" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair281" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair280" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair280" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[5]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair279" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1 
       (.I0(Q[5]),
        .I1(\count_value_i[9]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair279" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1 
       (.I0(Q[6]),
        .I1(\count_value_i[9]_i_2_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[9]_i_1 
       (.I0(Q[7]),
        .I1(Q[5]),
        .I2(\count_value_i[9]_i_2_n_0 ),
        .I3(Q[6]),
        .I4(Q[8]),
        .I5(Q[9]),
        .O(\count_value_i[9]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[9]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[9]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__1_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[9] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[9]_i_1_n_0 ),
        .Q(Q[9]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_2 
       (.I0(Q[7]),
        .I1(\gwdc.wr_data_count_i_reg[9] [7]),
        .O(\gwdc.wr_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_3 
       (.I0(Q[6]),
        .I1(\gwdc.wr_data_count_i_reg[9] [6]),
        .O(\gwdc.wr_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_4 
       (.I0(Q[5]),
        .I1(\gwdc.wr_data_count_i_reg[9] [5]),
        .O(\gwdc.wr_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_5 
       (.I0(Q[4]),
        .I1(\gwdc.wr_data_count_i_reg[9] [4]),
        .O(\gwdc.wr_data_count_i[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_6 
       (.I0(Q[3]),
        .I1(\gwdc.wr_data_count_i_reg[9] [3]),
        .O(\gwdc.wr_data_count_i[7]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_7 
       (.I0(Q[2]),
        .I1(\gwdc.wr_data_count_i_reg[9] [2]),
        .O(\gwdc.wr_data_count_i[7]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_8 
       (.I0(Q[1]),
        .I1(\gwdc.wr_data_count_i_reg[9] [1]),
        .O(\gwdc.wr_data_count_i[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_9 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[9] [0]),
        .O(\gwdc.wr_data_count_i[7]_i_9_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[9]_i_2 
       (.I0(Q[9]),
        .I1(\gwdc.wr_data_count_i_reg[9] [9]),
        .O(\gwdc.wr_data_count_i[9]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[9]_i_3 
       (.I0(Q[8]),
        .I1(\gwdc.wr_data_count_i_reg[9] [8]),
        .O(\gwdc.wr_data_count_i[9]_i_3_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[7]_i_1 
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_1 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_2 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_3 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_4 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_5 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_6 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_7 }),
        .DI(Q[7:0]),
        .O({D[6:0],\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({\gwdc.wr_data_count_i[7]_i_2_n_0 ,\gwdc.wr_data_count_i[7]_i_3_n_0 ,\gwdc.wr_data_count_i[7]_i_4_n_0 ,\gwdc.wr_data_count_i[7]_i_5_n_0 ,\gwdc.wr_data_count_i[7]_i_6_n_0 ,\gwdc.wr_data_count_i[7]_i_7_n_0 ,\gwdc.wr_data_count_i[7]_i_8_n_0 ,\gwdc.wr_data_count_i[7]_i_9_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[9]_i_1 
       (.CI(\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_gwdc.wr_data_count_i_reg[9]_i_1_CO_UNCONNECTED [7:1],\gwdc.wr_data_count_i_reg[9]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,Q[8]}),
        .O({\NLW_gwdc.wr_data_count_i_reg[9]_i_1_O_UNCONNECTED [7:2],D[8:7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gwdc.wr_data_count_i[9]_i_2_n_0 ,\gwdc.wr_data_count_i[9]_i_3_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized3_3
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[5]_0 ,
    wrst_busy,
    rst_d1,
    \gwdc.wr_data_count_i_reg[9] ,
    wr_clk);
  output [9:0]Q;
  output [8:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[5]_0 ;
  input wrst_busy;
  input rst_d1;
  input [9:0]\gwdc.wr_data_count_i_reg[9] ;
  input wr_clk;

  wire [8:0]D;
  wire [9:0]Q;
  wire \count_value_i[0]_i_1__1_n_0 ;
  wire \count_value_i[1]_i_1__1_n_0 ;
  wire \count_value_i[2]_i_1__1_n_0 ;
  wire \count_value_i[3]_i_1__1_n_0 ;
  wire \count_value_i[4]_i_1__1_n_0 ;
  wire \count_value_i[5]_i_1_n_0 ;
  wire \count_value_i[6]_i_1_n_0 ;
  wire \count_value_i[6]_i_2_n_0 ;
  wire \count_value_i[7]_i_1_n_0 ;
  wire \count_value_i[8]_i_1_n_0 ;
  wire \count_value_i[9]_i_1_n_0 ;
  wire \count_value_i[9]_i_2_n_0 ;
  wire \count_value_i_reg[5]_0 ;
  wire \gwdc.wr_data_count_i[7]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_3_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_4_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_5_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_6_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_7_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_8_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_9_n_0 ;
  wire \gwdc.wr_data_count_i[9]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[9]_i_3_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_1 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_2 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_3 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_4 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_5 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_6 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_7 ;
  wire [9:0]\gwdc.wr_data_count_i_reg[9] ;
  wire \gwdc.wr_data_count_i_reg[9]_i_1_n_7 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [0:0]\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:1]\NLW_gwdc.wr_data_count_i_reg[9]_i_1_CO_UNCONNECTED ;
  wire [7:2]\NLW_gwdc.wr_data_count_i_reg[9]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair335" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair335" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair334" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair334" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[5]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair333" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1 
       (.I0(Q[5]),
        .I1(\count_value_i[9]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair333" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1 
       (.I0(Q[6]),
        .I1(\count_value_i[9]_i_2_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[9]_i_1 
       (.I0(Q[7]),
        .I1(Q[5]),
        .I2(\count_value_i[9]_i_2_n_0 ),
        .I3(Q[6]),
        .I4(Q[8]),
        .I5(Q[9]),
        .O(\count_value_i[9]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[9]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[9]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__1_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[9] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[9]_i_1_n_0 ),
        .Q(Q[9]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_2 
       (.I0(Q[7]),
        .I1(\gwdc.wr_data_count_i_reg[9] [7]),
        .O(\gwdc.wr_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_3 
       (.I0(Q[6]),
        .I1(\gwdc.wr_data_count_i_reg[9] [6]),
        .O(\gwdc.wr_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_4 
       (.I0(Q[5]),
        .I1(\gwdc.wr_data_count_i_reg[9] [5]),
        .O(\gwdc.wr_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_5 
       (.I0(Q[4]),
        .I1(\gwdc.wr_data_count_i_reg[9] [4]),
        .O(\gwdc.wr_data_count_i[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_6 
       (.I0(Q[3]),
        .I1(\gwdc.wr_data_count_i_reg[9] [3]),
        .O(\gwdc.wr_data_count_i[7]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_7 
       (.I0(Q[2]),
        .I1(\gwdc.wr_data_count_i_reg[9] [2]),
        .O(\gwdc.wr_data_count_i[7]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_8 
       (.I0(Q[1]),
        .I1(\gwdc.wr_data_count_i_reg[9] [1]),
        .O(\gwdc.wr_data_count_i[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_9 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[9] [0]),
        .O(\gwdc.wr_data_count_i[7]_i_9_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[9]_i_2 
       (.I0(Q[9]),
        .I1(\gwdc.wr_data_count_i_reg[9] [9]),
        .O(\gwdc.wr_data_count_i[9]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[9]_i_3 
       (.I0(Q[8]),
        .I1(\gwdc.wr_data_count_i_reg[9] [8]),
        .O(\gwdc.wr_data_count_i[9]_i_3_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[7]_i_1 
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_1 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_2 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_3 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_4 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_5 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_6 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_7 }),
        .DI(Q[7:0]),
        .O({D[6:0],\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({\gwdc.wr_data_count_i[7]_i_2_n_0 ,\gwdc.wr_data_count_i[7]_i_3_n_0 ,\gwdc.wr_data_count_i[7]_i_4_n_0 ,\gwdc.wr_data_count_i[7]_i_5_n_0 ,\gwdc.wr_data_count_i[7]_i_6_n_0 ,\gwdc.wr_data_count_i[7]_i_7_n_0 ,\gwdc.wr_data_count_i[7]_i_8_n_0 ,\gwdc.wr_data_count_i[7]_i_9_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[9]_i_1 
       (.CI(\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_gwdc.wr_data_count_i_reg[9]_i_1_CO_UNCONNECTED [7:1],\gwdc.wr_data_count_i_reg[9]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,Q[8]}),
        .O({\NLW_gwdc.wr_data_count_i_reg[9]_i_1_O_UNCONNECTED [7:2],D[8:7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gwdc.wr_data_count_i[9]_i_2_n_0 ,\gwdc.wr_data_count_i[9]_i_3_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized4
   (ram_empty_i0,
    E,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \gen_pf_ic_rc.ram_empty_i_reg_0 ,
    Q,
    rd_en,
    ram_empty_i,
    \gen_pf_ic_rc.ram_empty_i_reg_1 ,
    \count_value_i_reg[0]_0 ,
    rd_clk);
  output ram_empty_i0;
  input [0:0]E;
  input \gen_pf_ic_rc.ram_empty_i_reg ;
  input \gen_pf_ic_rc.ram_empty_i_reg_0 ;
  input [1:0]Q;
  input rd_en;
  input ram_empty_i;
  input [8:0]\gen_pf_ic_rc.ram_empty_i_reg_1 ;
  input \count_value_i_reg[0]_0 ;
  input rd_clk;

  wire [0:0]E;
  wire [1:0]Q;
  wire \count_value_i[0]_i_1__3_n_0 ;
  wire \count_value_i[1]_i_1__3_n_0 ;
  wire \count_value_i[2]_i_1__2_n_0 ;
  wire \count_value_i[3]_i_1__2_n_0 ;
  wire \count_value_i[4]_i_1__2_n_0 ;
  wire \count_value_i[5]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_2__2_n_0 ;
  wire \count_value_i[7]_i_1__2_n_0 ;
  wire \count_value_i[8]_i_1__2_n_0 ;
  wire \count_value_i[8]_i_2__1_n_0 ;
  wire \count_value_i_reg[0]_0 ;
  wire \count_value_i_reg_n_0_[0] ;
  wire \count_value_i_reg_n_0_[1] ;
  wire \count_value_i_reg_n_0_[2] ;
  wire \count_value_i_reg_n_0_[3] ;
  wire \count_value_i_reg_n_0_[4] ;
  wire \count_value_i_reg_n_0_[5] ;
  wire \count_value_i_reg_n_0_[6] ;
  wire \count_value_i_reg_n_0_[7] ;
  wire \count_value_i_reg_n_0_[8] ;
  wire \gen_pf_ic_rc.ram_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_3_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_reg ;
  wire \gen_pf_ic_rc.ram_empty_i_reg_0 ;
  wire [8:0]\gen_pf_ic_rc.ram_empty_i_reg_1 ;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire rd_en;

  LUT4 #(
    .INIT(16'h04FB)) 
    \count_value_i[0]_i_1__3 
       (.I0(rd_en),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(\count_value_i_reg_n_0_[0] ),
        .O(\count_value_i[0]_i_1__3_n_0 ));
  LUT5 #(
    .INIT(32'h04FFFB00)) 
    \count_value_i[1]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(rd_en),
        .I3(\count_value_i_reg_n_0_[0] ),
        .I4(\count_value_i_reg_n_0_[1] ),
        .O(\count_value_i[1]_i_1__3_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(\count_value_i_reg_n_0_[1] ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .O(\count_value_i[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair331" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[2] ),
        .I1(\count_value_i_reg_n_0_[1] ),
        .I2(\count_value_i_reg_n_0_[0] ),
        .I3(\count_value_i_reg_n_0_[3] ),
        .O(\count_value_i[3]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair331" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(\count_value_i_reg_n_0_[1] ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .I3(\count_value_i_reg_n_0_[3] ),
        .I4(\count_value_i_reg_n_0_[4] ),
        .O(\count_value_i[4]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[4] ),
        .I1(\count_value_i_reg_n_0_[3] ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .I3(\count_value_i[6]_i_2__2_n_0 ),
        .I4(\count_value_i_reg_n_0_[5] ),
        .O(\count_value_i[5]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__2 
       (.I0(\count_value_i[6]_i_2__2_n_0 ),
        .I1(\count_value_i_reg_n_0_[2] ),
        .I2(\count_value_i_reg_n_0_[3] ),
        .I3(\count_value_i_reg_n_0_[4] ),
        .I4(\count_value_i_reg_n_0_[5] ),
        .I5(\count_value_i_reg_n_0_[6] ),
        .O(\count_value_i[6]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h0000AA8A00000000)) 
    \count_value_i[6]_i_2__2 
       (.I0(\count_value_i_reg_n_0_[1] ),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(\count_value_i_reg_n_0_[0] ),
        .O(\count_value_i[6]_i_2__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair330" *) 
  LUT4 #(
    .INIT(16'hF708)) 
    \count_value_i[7]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[6] ),
        .I1(\count_value_i_reg_n_0_[5] ),
        .I2(\count_value_i[8]_i_2__1_n_0 ),
        .I3(\count_value_i_reg_n_0_[7] ),
        .O(\count_value_i[7]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair330" *) 
  LUT5 #(
    .INIT(32'hDFFF2000)) 
    \count_value_i[8]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[7] ),
        .I1(\count_value_i[8]_i_2__1_n_0 ),
        .I2(\count_value_i_reg_n_0_[5] ),
        .I3(\count_value_i_reg_n_0_[6] ),
        .I4(\count_value_i_reg_n_0_[8] ),
        .O(\count_value_i[8]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \count_value_i[8]_i_2__1 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(E),
        .I2(\count_value_i_reg_n_0_[1] ),
        .I3(\count_value_i_reg_n_0_[2] ),
        .I4(\count_value_i_reg_n_0_[3] ),
        .I5(\count_value_i_reg_n_0_[4] ),
        .O(\count_value_i[8]_i_2__1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__3_n_0 ),
        .Q(\count_value_i_reg_n_0_[0] ),
        .S(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__3_n_0 ),
        .Q(\count_value_i_reg_n_0_[1] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[2] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[3] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[4] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[5]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[5] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[6]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[6] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[7]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[7] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[8]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[8] ),
        .R(\count_value_i_reg[0]_0 ));
  LUT6 #(
    .INIT(64'hFFFF800080008000)) 
    \gen_pf_ic_rc.ram_empty_i_i_1 
       (.I0(\gen_pf_ic_rc.ram_empty_i_i_2_n_0 ),
        .I1(E),
        .I2(\gen_pf_ic_rc.ram_empty_i_i_3_n_0 ),
        .I3(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg ),
        .I5(\gen_pf_ic_rc.ram_empty_i_reg_0 ),
        .O(ram_empty_i0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_2 
       (.I0(\count_value_i_reg_n_0_[7] ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_1 [7]),
        .I2(\count_value_i_reg_n_0_[6] ),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg_1 [6]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_1 [8]),
        .I5(\count_value_i_reg_n_0_[8] ),
        .O(\gen_pf_ic_rc.ram_empty_i_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_3 
       (.I0(\count_value_i_reg_n_0_[1] ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_1 [1]),
        .I2(\count_value_i_reg_n_0_[0] ),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg_1 [0]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_1 [2]),
        .I5(\count_value_i_reg_n_0_[2] ),
        .O(\gen_pf_ic_rc.ram_empty_i_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_4 
       (.I0(\count_value_i_reg_n_0_[4] ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_1 [4]),
        .I2(\count_value_i_reg_n_0_[3] ),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg_1 [3]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_1 [5]),
        .I5(\count_value_i_reg_n_0_[5] ),
        .O(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized4_11
   (ram_empty_i0,
    E,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \gen_pf_ic_rc.ram_empty_i_reg_0 ,
    Q,
    rd_en,
    ram_empty_i,
    \gen_pf_ic_rc.ram_empty_i_reg_1 ,
    \count_value_i_reg[0]_0 ,
    rd_clk);
  output ram_empty_i0;
  input [0:0]E;
  input \gen_pf_ic_rc.ram_empty_i_reg ;
  input \gen_pf_ic_rc.ram_empty_i_reg_0 ;
  input [1:0]Q;
  input rd_en;
  input ram_empty_i;
  input [8:0]\gen_pf_ic_rc.ram_empty_i_reg_1 ;
  input \count_value_i_reg[0]_0 ;
  input rd_clk;

  wire [0:0]E;
  wire [1:0]Q;
  wire \count_value_i[0]_i_1__3_n_0 ;
  wire \count_value_i[1]_i_1__3_n_0 ;
  wire \count_value_i[2]_i_1__2_n_0 ;
  wire \count_value_i[3]_i_1__2_n_0 ;
  wire \count_value_i[4]_i_1__2_n_0 ;
  wire \count_value_i[5]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_2__2_n_0 ;
  wire \count_value_i[7]_i_1__2_n_0 ;
  wire \count_value_i[8]_i_1__2_n_0 ;
  wire \count_value_i[8]_i_2__1_n_0 ;
  wire \count_value_i_reg[0]_0 ;
  wire \count_value_i_reg_n_0_[0] ;
  wire \count_value_i_reg_n_0_[1] ;
  wire \count_value_i_reg_n_0_[2] ;
  wire \count_value_i_reg_n_0_[3] ;
  wire \count_value_i_reg_n_0_[4] ;
  wire \count_value_i_reg_n_0_[5] ;
  wire \count_value_i_reg_n_0_[6] ;
  wire \count_value_i_reg_n_0_[7] ;
  wire \count_value_i_reg_n_0_[8] ;
  wire \gen_pf_ic_rc.ram_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_3_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_reg ;
  wire \gen_pf_ic_rc.ram_empty_i_reg_0 ;
  wire [8:0]\gen_pf_ic_rc.ram_empty_i_reg_1 ;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire rd_en;

  LUT4 #(
    .INIT(16'h04FB)) 
    \count_value_i[0]_i_1__3 
       (.I0(rd_en),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(\count_value_i_reg_n_0_[0] ),
        .O(\count_value_i[0]_i_1__3_n_0 ));
  LUT5 #(
    .INIT(32'h04FFFB00)) 
    \count_value_i[1]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(rd_en),
        .I3(\count_value_i_reg_n_0_[0] ),
        .I4(\count_value_i_reg_n_0_[1] ),
        .O(\count_value_i[1]_i_1__3_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(\count_value_i_reg_n_0_[1] ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .O(\count_value_i[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair277" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[2] ),
        .I1(\count_value_i_reg_n_0_[1] ),
        .I2(\count_value_i_reg_n_0_[0] ),
        .I3(\count_value_i_reg_n_0_[3] ),
        .O(\count_value_i[3]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair277" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(\count_value_i_reg_n_0_[1] ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .I3(\count_value_i_reg_n_0_[3] ),
        .I4(\count_value_i_reg_n_0_[4] ),
        .O(\count_value_i[4]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[4] ),
        .I1(\count_value_i_reg_n_0_[3] ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .I3(\count_value_i[6]_i_2__2_n_0 ),
        .I4(\count_value_i_reg_n_0_[5] ),
        .O(\count_value_i[5]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__2 
       (.I0(\count_value_i[6]_i_2__2_n_0 ),
        .I1(\count_value_i_reg_n_0_[2] ),
        .I2(\count_value_i_reg_n_0_[3] ),
        .I3(\count_value_i_reg_n_0_[4] ),
        .I4(\count_value_i_reg_n_0_[5] ),
        .I5(\count_value_i_reg_n_0_[6] ),
        .O(\count_value_i[6]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h0000AA8A00000000)) 
    \count_value_i[6]_i_2__2 
       (.I0(\count_value_i_reg_n_0_[1] ),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(\count_value_i_reg_n_0_[0] ),
        .O(\count_value_i[6]_i_2__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair276" *) 
  LUT4 #(
    .INIT(16'hF708)) 
    \count_value_i[7]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[6] ),
        .I1(\count_value_i_reg_n_0_[5] ),
        .I2(\count_value_i[8]_i_2__1_n_0 ),
        .I3(\count_value_i_reg_n_0_[7] ),
        .O(\count_value_i[7]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair276" *) 
  LUT5 #(
    .INIT(32'hDFFF2000)) 
    \count_value_i[8]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[7] ),
        .I1(\count_value_i[8]_i_2__1_n_0 ),
        .I2(\count_value_i_reg_n_0_[5] ),
        .I3(\count_value_i_reg_n_0_[6] ),
        .I4(\count_value_i_reg_n_0_[8] ),
        .O(\count_value_i[8]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \count_value_i[8]_i_2__1 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(E),
        .I2(\count_value_i_reg_n_0_[1] ),
        .I3(\count_value_i_reg_n_0_[2] ),
        .I4(\count_value_i_reg_n_0_[3] ),
        .I5(\count_value_i_reg_n_0_[4] ),
        .O(\count_value_i[8]_i_2__1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__3_n_0 ),
        .Q(\count_value_i_reg_n_0_[0] ),
        .S(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__3_n_0 ),
        .Q(\count_value_i_reg_n_0_[1] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[2] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[3] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[4] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[5]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[5] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[6]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[6] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[7]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[7] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[8]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[8] ),
        .R(\count_value_i_reg[0]_0 ));
  LUT6 #(
    .INIT(64'hFFFF800080008000)) 
    \gen_pf_ic_rc.ram_empty_i_i_1 
       (.I0(\gen_pf_ic_rc.ram_empty_i_i_2_n_0 ),
        .I1(E),
        .I2(\gen_pf_ic_rc.ram_empty_i_i_3_n_0 ),
        .I3(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg ),
        .I5(\gen_pf_ic_rc.ram_empty_i_reg_0 ),
        .O(ram_empty_i0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_2 
       (.I0(\count_value_i_reg_n_0_[7] ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_1 [7]),
        .I2(\count_value_i_reg_n_0_[6] ),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg_1 [6]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_1 [8]),
        .I5(\count_value_i_reg_n_0_[8] ),
        .O(\gen_pf_ic_rc.ram_empty_i_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_3 
       (.I0(\count_value_i_reg_n_0_[1] ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_1 [1]),
        .I2(\count_value_i_reg_n_0_[0] ),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg_1 [0]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_1 [2]),
        .I5(\count_value_i_reg_n_0_[2] ),
        .O(\gen_pf_ic_rc.ram_empty_i_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_4 
       (.I0(\count_value_i_reg_n_0_[4] ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_1 [4]),
        .I2(\count_value_i_reg_n_0_[3] ),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg_1 [3]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_1 [5]),
        .I5(\count_value_i_reg_n_0_[5] ),
        .O(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized4_14
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[5]_0 ,
    wrst_busy,
    rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] ,
    wr_clk);
  output [8:0]Q;
  output [7:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[5]_0 ;
  input wrst_busy;
  input rst_d1;
  input [8:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] ;
  input wr_clk;

  wire [7:0]D;
  wire [8:0]Q;
  wire \count_value_i[0]_i_1__0_n_0 ;
  wire \count_value_i[1]_i_1__0_n_0 ;
  wire \count_value_i[2]_i_1__0_n_0 ;
  wire \count_value_i[3]_i_1__0_n_0 ;
  wire \count_value_i[4]_i_1__0_n_0 ;
  wire \count_value_i[5]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_2__0_n_0 ;
  wire \count_value_i[7]_i_1__0_n_0 ;
  wire \count_value_i[8]_i_1__0_n_0 ;
  wire \count_value_i[8]_i_2_n_0 ;
  wire \count_value_i_reg[5]_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[9]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 ;
  wire [8:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [0:0]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED ;
  wire [7:0]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1_CO_UNCONNECTED ;
  wire [7:1]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__0 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair284" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair284" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair283" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair283" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__0 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__0_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__0_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__0 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[5]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair282" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__0 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair282" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1__0 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__0_n_0 ),
        .Q(Q[0]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__0_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__0_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__0_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__0_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__0_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__0_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__0_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1__0_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [7]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [6]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [5]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [4]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [3]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [2]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [1]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [0]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[9]_i_2 
       (.I0(Q[8]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [8]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[9]_i_2_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1 
       (.CI(wr_pntr_plus1_pf_carry),
        .CI_TOP(1'b0),
        .CO({\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 }),
        .DI(Q[7:0]),
        .O({D[6:0],\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED [0]}),
        .S({\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1 
       (.CI(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1_O_UNCONNECTED [7:1],D[7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[9]_i_2_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized4_4
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[5]_0 ,
    wrst_busy,
    rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] ,
    wr_clk);
  output [8:0]Q;
  output [7:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[5]_0 ;
  input wrst_busy;
  input rst_d1;
  input [8:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] ;
  input wr_clk;

  wire [7:0]D;
  wire [8:0]Q;
  wire \count_value_i[0]_i_1__0_n_0 ;
  wire \count_value_i[1]_i_1__0_n_0 ;
  wire \count_value_i[2]_i_1__0_n_0 ;
  wire \count_value_i[3]_i_1__0_n_0 ;
  wire \count_value_i[4]_i_1__0_n_0 ;
  wire \count_value_i[5]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_2__0_n_0 ;
  wire \count_value_i[7]_i_1__0_n_0 ;
  wire \count_value_i[8]_i_1__0_n_0 ;
  wire \count_value_i[8]_i_2_n_0 ;
  wire \count_value_i_reg[5]_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[9]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 ;
  wire [8:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [0:0]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED ;
  wire [7:0]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1_CO_UNCONNECTED ;
  wire [7:1]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__0 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair338" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair338" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair337" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair337" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__0 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__0_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__0_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__0 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[5]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair336" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__0 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair336" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1__0 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__0_n_0 ),
        .Q(Q[0]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__0_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__0_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__0_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__0_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__0_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__0_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__0_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1__0_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [7]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [6]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [5]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [4]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [3]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [2]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [1]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [0]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[9]_i_2 
       (.I0(Q[8]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [8]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[9]_i_2_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1 
       (.CI(wr_pntr_plus1_pf_carry),
        .CI_TOP(1'b0),
        .CO({\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 }),
        .DI(Q[7:0]),
        .O({D[6:0],\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED [0]}),
        .S({\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1 
       (.CI(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1_O_UNCONNECTED [7:1],D[7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[9]_i_2_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized5
   (Q,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[5]_0 ,
    wrst_busy,
    rst_d1,
    wr_clk);
  output [8:0]Q;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[5]_0 ;
  input wrst_busy;
  input rst_d1;
  input wr_clk;

  wire [8:0]Q;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[2]_i_1_n_0 ;
  wire \count_value_i[3]_i_1_n_0 ;
  wire \count_value_i[4]_i_1_n_0 ;
  wire \count_value_i[5]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_2__1_n_0 ;
  wire \count_value_i[7]_i_1__1_n_0 ;
  wire \count_value_i[8]_i_1__1_n_0 ;
  wire \count_value_i[8]_i_2__0_n_0 ;
  wire \count_value_i_reg[5]_0 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  (* SOFT_HLUTNM = "soft_lutpair341" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair341" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair340" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair340" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__1_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__1_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__1 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[5]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair339" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__1 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair339" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1__1 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(Q[1]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1__1_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized5_15
   (Q,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[5]_0 ,
    wrst_busy,
    rst_d1,
    wr_clk);
  output [8:0]Q;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[5]_0 ;
  input wrst_busy;
  input rst_d1;
  input wr_clk;

  wire [8:0]Q;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[2]_i_1_n_0 ;
  wire \count_value_i[3]_i_1_n_0 ;
  wire \count_value_i[4]_i_1_n_0 ;
  wire \count_value_i[5]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_2__1_n_0 ;
  wire \count_value_i[7]_i_1__1_n_0 ;
  wire \count_value_i[8]_i_1__1_n_0 ;
  wire \count_value_i[8]_i_2__0_n_0 ;
  wire \count_value_i_reg[5]_0 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  (* SOFT_HLUTNM = "soft_lutpair287" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair287" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair286" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair286" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__1_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__1_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__1 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[5]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair285" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__1 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair285" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1__1 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(Q[1]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1__1_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized6
   (D,
    Q,
    \reg_out_i_reg[2] ,
    E,
    src_in_bin,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] ,
    ram_empty_i,
    rd_en,
    \count_value_i_reg[0]_0 ,
    \grdc.rd_data_count_i_reg[4] ,
    \grdc.rd_data_count_i_reg[4]_0 ,
    \grdc.rd_data_count_i_reg[4]_1 ,
    \src_gray_ff_reg[4] ,
    \count_value_i_reg[4]_0 ,
    rd_clk);
  output [1:0]D;
  output [3:0]Q;
  output [1:0]\reg_out_i_reg[2] ;
  output [0:0]E;
  output [3:0]src_in_bin;
  input [3:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] ;
  input ram_empty_i;
  input rd_en;
  input [1:0]\count_value_i_reg[0]_0 ;
  input \grdc.rd_data_count_i_reg[4] ;
  input [3:0]\grdc.rd_data_count_i_reg[4]_0 ;
  input \grdc.rd_data_count_i_reg[4]_1 ;
  input [1:0]\src_gray_ff_reg[4] ;
  input \count_value_i_reg[4]_0 ;
  input rd_clk;

  wire [1:0]D;
  wire [0:0]E;
  wire [3:0]Q;
  wire \count_value_i[0]_i_1__4_n_0 ;
  wire \count_value_i[1]_i_1__4_n_0 ;
  wire \count_value_i[2]_i_1__3_n_0 ;
  wire \count_value_i[3]_i_1__3_n_0 ;
  wire \count_value_i[4]_i_1__0_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \count_value_i_reg[4]_0 ;
  wire \count_value_i_reg_n_0_[4] ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_3_n_0 ;
  wire [3:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] ;
  wire \grdc.rd_data_count_i[4]_i_3_n_0 ;
  wire \grdc.rd_data_count_i[4]_i_6_n_0 ;
  wire \grdc.rd_data_count_i_reg[4] ;
  wire [3:0]\grdc.rd_data_count_i_reg[4]_0 ;
  wire \grdc.rd_data_count_i_reg[4]_1 ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [1:0]\reg_out_i_reg[2] ;
  wire [1:0]\src_gray_ff_reg[4] ;
  wire [3:0]src_in_bin;

  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT4 #(
    .INIT(16'h10EF)) 
    \count_value_i[0]_i_1__4 
       (.I0(rd_en),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(Q[0]),
        .O(\count_value_i[0]_i_1__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__4 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__3 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(\count_value_i_reg_n_0_[4] ),
        .O(\count_value_i[4]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__4_n_0 ),
        .Q(Q[0]),
        .R(\count_value_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__4_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__3_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__3_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1__0_n_0 ),
        .Q(\count_value_i_reg_n_0_[4] ),
        .R(\count_value_i_reg[4]_0 ));
  LUT6 #(
    .INIT(64'hFFFFEAFE00001501)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_1 
       (.I0(Q[3]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6_n_0 ),
        .I2(Q[1]),
        .I3(\src_gray_ff_reg[4] [1]),
        .I4(Q[2]),
        .I5(\count_value_i_reg_n_0_[4] ),
        .O(src_in_bin[3]));
  LUT6 #(
    .INIT(64'hFBFBBAFB04044504)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2 
       (.I0(Q[2]),
        .I1(\src_gray_ff_reg[4] [1]),
        .I2(Q[1]),
        .I3(\src_gray_ff_reg[4] [0]),
        .I4(Q[0]),
        .I5(Q[3]),
        .O(src_in_bin[2]));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT5 #(
    .INIT(32'hB0FB4F04)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[4] [0]),
        .I2(Q[1]),
        .I3(\src_gray_ff_reg[4] [1]),
        .I4(Q[2]),
        .O(src_in_bin[1]));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_5 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[4] [0]),
        .O(src_in_bin[0]));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[4] [0]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6_n_0 ));
  LUT5 #(
    .INIT(32'h718E8E71)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[2]_i_1 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2_n_0 ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [1]),
        .I2(Q[1]),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [2]),
        .I4(Q[2]),
        .O(D[0]));
  LUT6 #(
    .INIT(64'h2BFF002BD400FFD4)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_1 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [1]),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [2]),
        .I4(Q[2]),
        .I5(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_3_n_0 ),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hDDDFDDDD44454444)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2 
       (.I0(Q[0]),
        .I1(ram_empty_i),
        .I2(rd_en),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(\count_value_i_reg[0]_0 [1]),
        .I5(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [0]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_3 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [3]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h00FD)) 
    \gen_sdpram.xpm_memory_base_inst_i_2 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .O(E));
  LUT6 #(
    .INIT(64'h1EE1788787781EE1)) 
    \grdc.rd_data_count_i[3]_i_1 
       (.I0(\grdc.rd_data_count_i_reg[4] ),
        .I1(\grdc.rd_data_count_i[4]_i_3_n_0 ),
        .I2(\grdc.rd_data_count_i_reg[4]_0 [2]),
        .I3(Q[3]),
        .I4(\grdc.rd_data_count_i_reg[4]_0 [1]),
        .I5(Q[2]),
        .O(\reg_out_i_reg[2] [0]));
  LUT6 #(
    .INIT(64'h1701FF7FE8FE0080)) 
    \grdc.rd_data_count_i[4]_i_2 
       (.I0(\grdc.rd_data_count_i[4]_i_3_n_0 ),
        .I1(\grdc.rd_data_count_i_reg[4] ),
        .I2(\grdc.rd_data_count_i_reg[4]_0 [1]),
        .I3(Q[2]),
        .I4(\grdc.rd_data_count_i_reg[4]_1 ),
        .I5(\grdc.rd_data_count_i[4]_i_6_n_0 ),
        .O(\reg_out_i_reg[2] [1]));
  LUT3 #(
    .INIT(8'hD4)) 
    \grdc.rd_data_count_i[4]_i_3 
       (.I0(Q[1]),
        .I1(\src_gray_ff_reg[4] [1]),
        .I2(\grdc.rd_data_count_i_reg[4]_0 [0]),
        .O(\grdc.rd_data_count_i[4]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[4]_i_6 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[4]_0 [2]),
        .I2(\count_value_i_reg_n_0_[4] ),
        .I3(\grdc.rd_data_count_i_reg[4]_0 [3]),
        .O(\grdc.rd_data_count_i[4]_i_6_n_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized6_52
   (D,
    Q,
    \gwdc.wr_data_count_i_reg[2] ,
    wrst_busy,
    E,
    wr_clk);
  output [0:0]D;
  output [4:0]Q;
  input [2:0]\gwdc.wr_data_count_i_reg[2] ;
  input wrst_busy;
  input [0:0]E;
  input wr_clk;

  wire [0:0]D;
  wire [0:0]E;
  wire [4:0]Q;
  wire \count_value_i[0]_i_1__1_n_0 ;
  wire \count_value_i[1]_i_1__1_n_0 ;
  wire \count_value_i[2]_i_1__1_n_0 ;
  wire \count_value_i[3]_i_1__1_n_0 ;
  wire \count_value_i[4]_i_1_n_0 ;
  wire [2:0]\gwdc.wr_data_count_i_reg[2] ;
  wire wr_clk;
  wire wrst_busy;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__1_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  LUT6 #(
    .INIT(64'h4F04B0FBB0FB4F04)) 
    \gwdc.wr_data_count_i[2]_i_1 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[2] [0]),
        .I2(Q[1]),
        .I3(\gwdc.wr_data_count_i_reg[2] [1]),
        .I4(\gwdc.wr_data_count_i_reg[2] [2]),
        .I5(Q[2]),
        .O(D));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized6_59
   (D,
    Q,
    \reg_out_i_reg[2] ,
    E,
    src_in_bin,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] ,
    ram_empty_i,
    rd_en,
    \count_value_i_reg[0]_0 ,
    \grdc.rd_data_count_i_reg[4] ,
    \grdc.rd_data_count_i_reg[4]_0 ,
    \grdc.rd_data_count_i_reg[4]_1 ,
    \src_gray_ff_reg[4] ,
    \count_value_i_reg[4]_0 ,
    rd_clk);
  output [1:0]D;
  output [3:0]Q;
  output [1:0]\reg_out_i_reg[2] ;
  output [0:0]E;
  output [3:0]src_in_bin;
  input [3:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] ;
  input ram_empty_i;
  input rd_en;
  input [1:0]\count_value_i_reg[0]_0 ;
  input \grdc.rd_data_count_i_reg[4] ;
  input [3:0]\grdc.rd_data_count_i_reg[4]_0 ;
  input \grdc.rd_data_count_i_reg[4]_1 ;
  input [1:0]\src_gray_ff_reg[4] ;
  input \count_value_i_reg[4]_0 ;
  input rd_clk;

  wire [1:0]D;
  wire [0:0]E;
  wire [3:0]Q;
  wire \count_value_i[0]_i_1__4_n_0 ;
  wire \count_value_i[1]_i_1__4_n_0 ;
  wire \count_value_i[2]_i_1__3_n_0 ;
  wire \count_value_i[3]_i_1__3_n_0 ;
  wire \count_value_i[4]_i_1__0_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \count_value_i_reg[4]_0 ;
  wire \count_value_i_reg_n_0_[4] ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_3_n_0 ;
  wire [3:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] ;
  wire \grdc.rd_data_count_i[4]_i_3_n_0 ;
  wire \grdc.rd_data_count_i[4]_i_6_n_0 ;
  wire \grdc.rd_data_count_i_reg[4] ;
  wire [3:0]\grdc.rd_data_count_i_reg[4]_0 ;
  wire \grdc.rd_data_count_i_reg[4]_1 ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [1:0]\reg_out_i_reg[2] ;
  wire [1:0]\src_gray_ff_reg[4] ;
  wire [3:0]src_in_bin;

  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT4 #(
    .INIT(16'h10EF)) 
    \count_value_i[0]_i_1__4 
       (.I0(rd_en),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(Q[0]),
        .O(\count_value_i[0]_i_1__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__4 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__3 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(\count_value_i_reg_n_0_[4] ),
        .O(\count_value_i[4]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__4_n_0 ),
        .Q(Q[0]),
        .R(\count_value_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__4_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__3_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__3_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1__0_n_0 ),
        .Q(\count_value_i_reg_n_0_[4] ),
        .R(\count_value_i_reg[4]_0 ));
  LUT6 #(
    .INIT(64'hFFFFEAFE00001501)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_1 
       (.I0(Q[3]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6_n_0 ),
        .I2(Q[1]),
        .I3(\src_gray_ff_reg[4] [1]),
        .I4(Q[2]),
        .I5(\count_value_i_reg_n_0_[4] ),
        .O(src_in_bin[3]));
  LUT6 #(
    .INIT(64'hFBFBBAFB04044504)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2 
       (.I0(Q[2]),
        .I1(\src_gray_ff_reg[4] [1]),
        .I2(Q[1]),
        .I3(\src_gray_ff_reg[4] [0]),
        .I4(Q[0]),
        .I5(Q[3]),
        .O(src_in_bin[2]));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT5 #(
    .INIT(32'hB0FB4F04)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[4] [0]),
        .I2(Q[1]),
        .I3(\src_gray_ff_reg[4] [1]),
        .I4(Q[2]),
        .O(src_in_bin[1]));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_5 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[4] [0]),
        .O(src_in_bin[0]));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[4] [0]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6_n_0 ));
  LUT5 #(
    .INIT(32'h718E8E71)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[2]_i_1 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2_n_0 ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [1]),
        .I2(Q[1]),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [2]),
        .I4(Q[2]),
        .O(D[0]));
  LUT6 #(
    .INIT(64'h2BFF002BD400FFD4)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_1 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [1]),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [2]),
        .I4(Q[2]),
        .I5(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_3_n_0 ),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hDDDFDDDD44454444)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2 
       (.I0(Q[0]),
        .I1(ram_empty_i),
        .I2(rd_en),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(\count_value_i_reg[0]_0 [1]),
        .I5(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [0]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_3 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [3]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h00FD)) 
    \gen_sdpram.xpm_memory_base_inst_i_2 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .O(E));
  LUT6 #(
    .INIT(64'h1EE1788787781EE1)) 
    \grdc.rd_data_count_i[3]_i_1 
       (.I0(\grdc.rd_data_count_i_reg[4] ),
        .I1(\grdc.rd_data_count_i[4]_i_3_n_0 ),
        .I2(\grdc.rd_data_count_i_reg[4]_0 [2]),
        .I3(Q[3]),
        .I4(\grdc.rd_data_count_i_reg[4]_0 [1]),
        .I5(Q[2]),
        .O(\reg_out_i_reg[2] [0]));
  LUT6 #(
    .INIT(64'h1701FF7FE8FE0080)) 
    \grdc.rd_data_count_i[4]_i_2 
       (.I0(\grdc.rd_data_count_i[4]_i_3_n_0 ),
        .I1(\grdc.rd_data_count_i_reg[4] ),
        .I2(\grdc.rd_data_count_i_reg[4]_0 [1]),
        .I3(Q[2]),
        .I4(\grdc.rd_data_count_i_reg[4]_1 ),
        .I5(\grdc.rd_data_count_i[4]_i_6_n_0 ),
        .O(\reg_out_i_reg[2] [1]));
  LUT3 #(
    .INIT(8'hD4)) 
    \grdc.rd_data_count_i[4]_i_3 
       (.I0(Q[1]),
        .I1(\src_gray_ff_reg[4] [1]),
        .I2(\grdc.rd_data_count_i_reg[4]_0 [0]),
        .O(\grdc.rd_data_count_i[4]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[4]_i_6 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[4]_0 [2]),
        .I2(\count_value_i_reg_n_0_[4] ),
        .I3(\grdc.rd_data_count_i_reg[4]_0 [3]),
        .O(\grdc.rd_data_count_i[4]_i_6_n_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized6_62
   (D,
    Q,
    \gwdc.wr_data_count_i_reg[2] ,
    wrst_busy,
    E,
    wr_clk);
  output [0:0]D;
  output [4:0]Q;
  input [2:0]\gwdc.wr_data_count_i_reg[2] ;
  input wrst_busy;
  input [0:0]E;
  input wr_clk;

  wire [0:0]D;
  wire [0:0]E;
  wire [4:0]Q;
  wire \count_value_i[0]_i_1__1_n_0 ;
  wire \count_value_i[1]_i_1__1_n_0 ;
  wire \count_value_i[2]_i_1__1_n_0 ;
  wire \count_value_i[3]_i_1__1_n_0 ;
  wire \count_value_i[4]_i_1_n_0 ;
  wire [2:0]\gwdc.wr_data_count_i_reg[2] ;
  wire wr_clk;
  wire wrst_busy;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__1_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  LUT6 #(
    .INIT(64'h4F04B0FBB0FB4F04)) 
    \gwdc.wr_data_count_i[2]_i_1 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[2] [0]),
        .I2(Q[1]),
        .I3(\gwdc.wr_data_count_i_reg[2] [1]),
        .I4(\gwdc.wr_data_count_i_reg[2] [2]),
        .I5(Q[2]),
        .O(D));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized7
   (Q,
    \count_value_i_reg[1]_0 ,
    rd_en,
    \count_value_i_reg[0]_0 ,
    E,
    rd_clk);
  output [3:0]Q;
  input [1:0]\count_value_i_reg[1]_0 ;
  input rd_en;
  input \count_value_i_reg[0]_0 ;
  input [0:0]E;
  input rd_clk;

  wire [0:0]E;
  wire [3:0]Q;
  wire \count_value_i[0]_i_1__2_n_0 ;
  wire \count_value_i[1]_i_1__3_n_0 ;
  wire \count_value_i[2]_i_1__2_n_0 ;
  wire \count_value_i[3]_i_1__2_n_0 ;
  wire \count_value_i_reg[0]_0 ;
  wire [1:0]\count_value_i_reg[1]_0 ;
  wire rd_clk;
  wire rd_en;

  LUT4 #(
    .INIT(16'h10EF)) 
    \count_value_i[0]_i_1__2 
       (.I0(rd_en),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(\count_value_i_reg[1]_0 [1]),
        .I3(Q[0]),
        .O(\count_value_i[0]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__3 
       (.I0(\count_value_i_reg[1]_0 [1]),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__2 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__2_n_0 ),
        .Q(Q[0]),
        .S(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__3_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__2_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__2_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized7_53
   (D,
    Q,
    \count_value_i_reg[3]_0 ,
    E,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ,
    wrst_busy,
    wr_clk);
  output [0:0]D;
  output [2:0]Q;
  output \count_value_i_reg[3]_0 ;
  input [0:0]E;
  input [2:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ;
  input wrst_busy;
  input wr_clk;

  wire [0:0]D;
  wire [0:0]E;
  wire [2:0]Q;
  wire \count_value_i[0]_i_1__0_n_0 ;
  wire \count_value_i[1]_i_1__0_n_0 ;
  wire \count_value_i[2]_i_1__0_n_0 ;
  wire \count_value_i[3]_i_1__0_n_0 ;
  wire \count_value_i_reg[3]_0 ;
  wire [2:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ;
  wire wr_clk;
  wire [4:4]wr_pntr_plus1_pf;
  wire wrst_busy;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__0 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(wr_pntr_plus1_pf),
        .O(\count_value_i[3]_i_1__0_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__0_n_0 ),
        .Q(Q[0]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__0_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__0_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__0_n_0 ),
        .Q(wr_pntr_plus1_pf),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2 
       (.I0(wr_pntr_plus1_pf),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [2]),
        .O(\count_value_i_reg[3]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT5 #(
    .INIT(32'h718E8E71)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[2]_i_1 
       (.I0(E),
        .I1(Q[0]),
        .I2(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [0]),
        .I3(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [1]),
        .I4(Q[1]),
        .O(D));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized7_60
   (Q,
    \count_value_i_reg[1]_0 ,
    rd_en,
    \count_value_i_reg[0]_0 ,
    E,
    rd_clk);
  output [3:0]Q;
  input [1:0]\count_value_i_reg[1]_0 ;
  input rd_en;
  input \count_value_i_reg[0]_0 ;
  input [0:0]E;
  input rd_clk;

  wire [0:0]E;
  wire [3:0]Q;
  wire \count_value_i[0]_i_1__2_n_0 ;
  wire \count_value_i[1]_i_1__3_n_0 ;
  wire \count_value_i[2]_i_1__2_n_0 ;
  wire \count_value_i[3]_i_1__2_n_0 ;
  wire \count_value_i_reg[0]_0 ;
  wire [1:0]\count_value_i_reg[1]_0 ;
  wire rd_clk;
  wire rd_en;

  LUT4 #(
    .INIT(16'h10EF)) 
    \count_value_i[0]_i_1__2 
       (.I0(rd_en),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(\count_value_i_reg[1]_0 [1]),
        .I3(Q[0]),
        .O(\count_value_i[0]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__3 
       (.I0(\count_value_i_reg[1]_0 [1]),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__2 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__2_n_0 ),
        .Q(Q[0]),
        .S(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__3_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__2_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__2_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized7_63
   (D,
    Q,
    \count_value_i_reg[3]_0 ,
    E,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ,
    wrst_busy,
    wr_clk);
  output [0:0]D;
  output [2:0]Q;
  output \count_value_i_reg[3]_0 ;
  input [0:0]E;
  input [2:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ;
  input wrst_busy;
  input wr_clk;

  wire [0:0]D;
  wire [0:0]E;
  wire [2:0]Q;
  wire \count_value_i[0]_i_1__0_n_0 ;
  wire \count_value_i[1]_i_1__0_n_0 ;
  wire \count_value_i[2]_i_1__0_n_0 ;
  wire \count_value_i[3]_i_1__0_n_0 ;
  wire \count_value_i_reg[3]_0 ;
  wire [2:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ;
  wire wr_clk;
  wire [4:4]wr_pntr_plus1_pf;
  wire wrst_busy;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__0 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(wr_pntr_plus1_pf),
        .O(\count_value_i[3]_i_1__0_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__0_n_0 ),
        .Q(Q[0]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__0_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__0_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__0_n_0 ),
        .Q(wr_pntr_plus1_pf),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2 
       (.I0(wr_pntr_plus1_pf),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [2]),
        .O(\count_value_i_reg[3]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT5 #(
    .INIT(32'h718E8E71)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[2]_i_1 
       (.I0(E),
        .I1(Q[0]),
        .I2(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [0]),
        .I3(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [1]),
        .I4(Q[1]),
        .O(D));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized8
   (\count_value_i_reg[3]_0 ,
    \count_value_i_reg[2]_0 ,
    Q,
    wrst_busy,
    E,
    wr_clk);
  output \count_value_i_reg[3]_0 ;
  output [2:0]\count_value_i_reg[2]_0 ;
  input [0:0]Q;
  input wrst_busy;
  input [0:0]E;
  input wr_clk;

  wire [0:0]E;
  wire [0:0]Q;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[2]_i_1_n_0 ;
  wire \count_value_i[3]_i_1_n_0 ;
  wire [2:0]\count_value_i_reg[2]_0 ;
  wire \count_value_i_reg[3]_0 ;
  wire \count_value_i_reg_n_0_[3] ;
  wire wr_clk;
  wire wrst_busy;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1 
       (.I0(\count_value_i_reg[2]_0 [0]),
        .O(\count_value_i[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1 
       (.I0(\count_value_i_reg[2]_0 [0]),
        .I1(\count_value_i_reg[2]_0 [1]),
        .O(\count_value_i[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1 
       (.I0(\count_value_i_reg[2]_0 [0]),
        .I1(\count_value_i_reg[2]_0 [1]),
        .I2(\count_value_i_reg[2]_0 [2]),
        .O(\count_value_i[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1 
       (.I0(\count_value_i_reg[2]_0 [1]),
        .I1(\count_value_i_reg[2]_0 [0]),
        .I2(\count_value_i_reg[2]_0 [2]),
        .I3(\count_value_i_reg_n_0_[3] ),
        .O(\count_value_i[3]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(\count_value_i_reg[2]_0 [0]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(\count_value_i_reg[2]_0 [1]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1_n_0 ),
        .Q(\count_value_i_reg[2]_0 [2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1_n_0 ),
        .Q(\count_value_i_reg_n_0_[3] ),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5 
       (.I0(\count_value_i_reg_n_0_[3] ),
        .I1(Q),
        .O(\count_value_i_reg[3]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized8_64
   (\count_value_i_reg[3]_0 ,
    \count_value_i_reg[2]_0 ,
    Q,
    wrst_busy,
    E,
    wr_clk);
  output \count_value_i_reg[3]_0 ;
  output [2:0]\count_value_i_reg[2]_0 ;
  input [0:0]Q;
  input wrst_busy;
  input [0:0]E;
  input wr_clk;

  wire [0:0]E;
  wire [0:0]Q;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[2]_i_1_n_0 ;
  wire \count_value_i[3]_i_1_n_0 ;
  wire [2:0]\count_value_i_reg[2]_0 ;
  wire \count_value_i_reg[3]_0 ;
  wire \count_value_i_reg_n_0_[3] ;
  wire wr_clk;
  wire wrst_busy;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1 
       (.I0(\count_value_i_reg[2]_0 [0]),
        .O(\count_value_i[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1 
       (.I0(\count_value_i_reg[2]_0 [0]),
        .I1(\count_value_i_reg[2]_0 [1]),
        .O(\count_value_i[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1 
       (.I0(\count_value_i_reg[2]_0 [0]),
        .I1(\count_value_i_reg[2]_0 [1]),
        .I2(\count_value_i_reg[2]_0 [2]),
        .O(\count_value_i[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1 
       (.I0(\count_value_i_reg[2]_0 [1]),
        .I1(\count_value_i_reg[2]_0 [0]),
        .I2(\count_value_i_reg[2]_0 [2]),
        .I3(\count_value_i_reg_n_0_[3] ),
        .O(\count_value_i[3]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(\count_value_i_reg[2]_0 [0]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(\count_value_i_reg[2]_0 [1]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1_n_0 ),
        .Q(\count_value_i_reg[2]_0 [2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1_n_0 ),
        .Q(\count_value_i_reg_n_0_[3] ),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5 
       (.I0(\count_value_i_reg_n_0_[3] ),
        .I1(Q),
        .O(\count_value_i_reg[3]_0 ));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_SYNC_STAGES = "3" *) (* DOUT_RESET_VALUE = "0" *) 
(* ECC_MODE = "no_ecc" *) (* EN_ADV_FEATURE_ASYNC = "16'b0000011100000111" *) (* FIFO_MEMORY_TYPE = "block" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_WRITE_DEPTH = "256" *) (* FULL_RESET_VALUE = "1" *) 
(* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "128" *) (* P_COMMON_CLOCK = "0" *) 
(* P_ECC_MODE = "0" *) (* P_FIFO_MEMORY_TYPE = "2" *) (* P_READ_MODE = "1" *) 
(* P_WAKEUP_TIME = "2" *) (* RD_DATA_COUNT_WIDTH = "8" *) (* READ_DATA_WIDTH = "45" *) 
(* READ_MODE = "fwft" *) (* RELATED_CLOCKS = "0" *) (* SIM_ASSERT_CHK = "0" *) 
(* USE_ADV_FEATURES = "0707" *) (* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH = "45" *) 
(* WR_DATA_COUNT_WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) (* dont_touch = "true" *) 
(* is_du_within_envelope = "true" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_async
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [44:0]din;
  output full;
  output prog_full;
  output [7:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [44:0]dout;
  output empty;
  output prog_empty;
  output [7:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [44:0]din;
  wire [44:0]dout;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire prog_full;
  wire rd_clk;
  wire [7:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire sleep;
  wire underflow;
  wire wr_clk;
  wire [7:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* CASCADE_HEIGHT = "0" *) 
  (* CDC_DEST_SYNC_FF = "3" *) 
  (* COMMON_CLOCK = "0" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "0" *) 
  (* ENABLE_ECC = "0" *) 
  (* EN_ADV_FEATURE = "16'b0000011100000111" *) 
  (* EN_AE = "1'b0" *) 
  (* EN_AF = "1'b0" *) 
  (* EN_DVLD = "1'b0" *) 
  (* EN_OF = "1'b1" *) 
  (* EN_PE = "1'b1" *) 
  (* EN_PF = "1'b1" *) 
  (* EN_RDC = "1'b1" *) 
  (* EN_UF = "1'b1" *) 
  (* EN_WACK = "1'b0" *) 
  (* EN_WDC = "1'b1" *) 
  (* FG_EQ_ASYM_DOUT = "1'b0" *) 
  (* FIFO_MEMORY_TYPE = "2" *) 
  (* FIFO_MEM_TYPE = "2" *) 
  (* FIFO_READ_DEPTH = "256" *) 
  (* FIFO_READ_LATENCY = "0" *) 
  (* FIFO_SIZE = "11520" *) 
  (* FIFO_WRITE_DEPTH = "256" *) 
  (* FULL_RESET_VALUE = "1" *) 
  (* FULL_RST_VAL = "1'b1" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* PE_THRESH_ADJ = "8" *) 
  (* PE_THRESH_MAX = "251" *) 
  (* PE_THRESH_MIN = "5" *) 
  (* PF_THRESH_ADJ = "126" *) 
  (* PF_THRESH_MAX = "251" *) 
  (* PF_THRESH_MIN = "8" *) 
  (* PROG_EMPTY_THRESH = "10" *) 
  (* PROG_FULL_THRESH = "128" *) 
  (* RD_DATA_COUNT_WIDTH = "8" *) 
  (* RD_DC_WIDTH_EXT = "9" *) 
  (* RD_LATENCY = "2" *) 
  (* RD_MODE = "1" *) 
  (* RD_PNTR_WIDTH = "8" *) 
  (* READ_DATA_WIDTH = "45" *) 
  (* READ_MODE = "1" *) 
  (* READ_MODE_LL = "1" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WIDTH_RATIO = "1" *) 
  (* WRITE_DATA_WIDTH = "45" *) 
  (* WR_DATA_COUNT_WIDTH = "8" *) 
  (* WR_DC_WIDTH_EXT = "9" *) 
  (* WR_DEPTH_LOG = "8" *) 
  (* WR_PNTR_WIDTH = "8" *) 
  (* WR_RD_RATIO = "0" *) 
  (* WR_WIDTH_LOG = "6" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* both_stages_valid = "3" *) 
  (* invalid = "0" *) 
  (* stage1_valid = "2" *) 
  (* stage2_valid = "1" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_base \gnuram_async_fifo.xpm_fifo_base_inst 
       (.almost_empty(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ),
        .almost_full(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ),
        .data_valid(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ),
        .dbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .full_n(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_full(prog_full),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .rst(rst),
        .sbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ),
        .sleep(sleep),
        .underflow(underflow),
        .wr_ack(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_SYNC_STAGES = "3" *) (* DOUT_RESET_VALUE = "0" *) 
(* ECC_MODE = "no_ecc" *) (* EN_ADV_FEATURE_ASYNC = "16'b0000011100000111" *) (* FIFO_MEMORY_TYPE = "block" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_WRITE_DEPTH = "512" *) (* FULL_RESET_VALUE = "1" *) 
(* ORIG_REF_NAME = "xpm_fifo_async" *) (* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "384" *) 
(* P_COMMON_CLOCK = "0" *) (* P_ECC_MODE = "0" *) (* P_FIFO_MEMORY_TYPE = "2" *) 
(* P_READ_MODE = "1" *) (* P_WAKEUP_TIME = "2" *) (* RD_DATA_COUNT_WIDTH = "9" *) 
(* READ_DATA_WIDTH = "38" *) (* READ_MODE = "fwft" *) (* RELATED_CLOCKS = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* WAKEUP_TIME = "0" *) 
(* WRITE_DATA_WIDTH = "38" *) (* WR_DATA_COUNT_WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* dont_touch = "true" *) (* is_du_within_envelope = "true" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_async__parameterized0
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [37:0]din;
  output full;
  output prog_full;
  output [8:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [37:0]dout;
  output empty;
  output prog_empty;
  output [8:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [37:0]din;
  wire [37:1]\^dout ;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire prog_full;
  wire rd_clk;
  wire [8:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire sleep;
  wire underflow;
  wire wr_clk;
  wire [8:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ;
  wire [0:0]\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dout_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign dout[37:1] = \^dout [37:1];
  assign dout[0] = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* CASCADE_HEIGHT = "0" *) 
  (* CDC_DEST_SYNC_FF = "3" *) 
  (* COMMON_CLOCK = "0" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "0" *) 
  (* ENABLE_ECC = "0" *) 
  (* EN_ADV_FEATURE = "16'b0000011100000111" *) 
  (* EN_AE = "1'b0" *) 
  (* EN_AF = "1'b0" *) 
  (* EN_DVLD = "1'b0" *) 
  (* EN_OF = "1'b1" *) 
  (* EN_PE = "1'b1" *) 
  (* EN_PF = "1'b1" *) 
  (* EN_RDC = "1'b1" *) 
  (* EN_UF = "1'b1" *) 
  (* EN_WACK = "1'b0" *) 
  (* EN_WDC = "1'b1" *) 
  (* FG_EQ_ASYM_DOUT = "1'b0" *) 
  (* FIFO_MEMORY_TYPE = "2" *) 
  (* FIFO_MEM_TYPE = "2" *) 
  (* FIFO_READ_DEPTH = "512" *) 
  (* FIFO_READ_LATENCY = "0" *) 
  (* FIFO_SIZE = "19456" *) 
  (* FIFO_WRITE_DEPTH = "512" *) 
  (* FULL_RESET_VALUE = "1" *) 
  (* FULL_RST_VAL = "1'b1" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* PE_THRESH_ADJ = "8" *) 
  (* PE_THRESH_MAX = "507" *) 
  (* PE_THRESH_MIN = "5" *) 
  (* PF_THRESH_ADJ = "382" *) 
  (* PF_THRESH_MAX = "507" *) 
  (* PF_THRESH_MIN = "8" *) 
  (* PROG_EMPTY_THRESH = "10" *) 
  (* PROG_FULL_THRESH = "384" *) 
  (* RD_DATA_COUNT_WIDTH = "9" *) 
  (* RD_DC_WIDTH_EXT = "10" *) 
  (* RD_LATENCY = "2" *) 
  (* RD_MODE = "1" *) 
  (* RD_PNTR_WIDTH = "9" *) 
  (* READ_DATA_WIDTH = "38" *) 
  (* READ_MODE = "1" *) 
  (* READ_MODE_LL = "1" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WIDTH_RATIO = "1" *) 
  (* WRITE_DATA_WIDTH = "38" *) 
  (* WR_DATA_COUNT_WIDTH = "9" *) 
  (* WR_DC_WIDTH_EXT = "10" *) 
  (* WR_DEPTH_LOG = "9" *) 
  (* WR_PNTR_WIDTH = "9" *) 
  (* WR_RD_RATIO = "0" *) 
  (* WR_WIDTH_LOG = "6" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* both_stages_valid = "3" *) 
  (* invalid = "0" *) 
  (* stage1_valid = "2" *) 
  (* stage2_valid = "1" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_base__parameterized0 \gnuram_async_fifo.xpm_fifo_base_inst 
       (.almost_empty(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ),
        .almost_full(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ),
        .data_valid(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ),
        .dbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ),
        .din({din[37:1],1'b0}),
        .dout({\^dout ,\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dout_UNCONNECTED [0]}),
        .empty(empty),
        .full(full),
        .full_n(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_full(prog_full),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .rst(rst),
        .sbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ),
        .sleep(sleep),
        .underflow(underflow),
        .wr_ack(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_SYNC_STAGES = "3" *) (* DOUT_RESET_VALUE = "0" *) 
(* ECC_MODE = "no_ecc" *) (* EN_ADV_FEATURE_ASYNC = "16'b0000011100000111" *) (* FIFO_MEMORY_TYPE = "block" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_WRITE_DEPTH = "512" *) (* FULL_RESET_VALUE = "1" *) 
(* ORIG_REF_NAME = "xpm_fifo_async" *) (* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "384" *) 
(* P_COMMON_CLOCK = "0" *) (* P_ECC_MODE = "0" *) (* P_FIFO_MEMORY_TYPE = "2" *) 
(* P_READ_MODE = "1" *) (* P_WAKEUP_TIME = "2" *) (* RD_DATA_COUNT_WIDTH = "9" *) 
(* READ_DATA_WIDTH = "36" *) (* READ_MODE = "fwft" *) (* RELATED_CLOCKS = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* WAKEUP_TIME = "0" *) 
(* WRITE_DATA_WIDTH = "36" *) (* WR_DATA_COUNT_WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* dont_touch = "true" *) (* is_du_within_envelope = "true" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_async__parameterized1
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [35:0]din;
  output full;
  output prog_full;
  output [8:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [35:0]dout;
  output empty;
  output prog_empty;
  output [8:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [35:0]din;
  wire [35:0]dout;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire prog_full;
  wire rd_clk;
  wire [8:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire sleep;
  wire underflow;
  wire wr_clk;
  wire [8:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* CASCADE_HEIGHT = "0" *) 
  (* CDC_DEST_SYNC_FF = "3" *) 
  (* COMMON_CLOCK = "0" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "0" *) 
  (* ENABLE_ECC = "0" *) 
  (* EN_ADV_FEATURE = "16'b0000011100000111" *) 
  (* EN_AE = "1'b0" *) 
  (* EN_AF = "1'b0" *) 
  (* EN_DVLD = "1'b0" *) 
  (* EN_OF = "1'b1" *) 
  (* EN_PE = "1'b1" *) 
  (* EN_PF = "1'b1" *) 
  (* EN_RDC = "1'b1" *) 
  (* EN_UF = "1'b1" *) 
  (* EN_WACK = "1'b0" *) 
  (* EN_WDC = "1'b1" *) 
  (* FG_EQ_ASYM_DOUT = "1'b0" *) 
  (* FIFO_MEMORY_TYPE = "2" *) 
  (* FIFO_MEM_TYPE = "2" *) 
  (* FIFO_READ_DEPTH = "512" *) 
  (* FIFO_READ_LATENCY = "0" *) 
  (* FIFO_SIZE = "18432" *) 
  (* FIFO_WRITE_DEPTH = "512" *) 
  (* FULL_RESET_VALUE = "1" *) 
  (* FULL_RST_VAL = "1'b1" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* PE_THRESH_ADJ = "8" *) 
  (* PE_THRESH_MAX = "507" *) 
  (* PE_THRESH_MIN = "5" *) 
  (* PF_THRESH_ADJ = "382" *) 
  (* PF_THRESH_MAX = "507" *) 
  (* PF_THRESH_MIN = "8" *) 
  (* PROG_EMPTY_THRESH = "10" *) 
  (* PROG_FULL_THRESH = "384" *) 
  (* RD_DATA_COUNT_WIDTH = "9" *) 
  (* RD_DC_WIDTH_EXT = "10" *) 
  (* RD_LATENCY = "2" *) 
  (* RD_MODE = "1" *) 
  (* RD_PNTR_WIDTH = "9" *) 
  (* READ_DATA_WIDTH = "36" *) 
  (* READ_MODE = "1" *) 
  (* READ_MODE_LL = "1" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WIDTH_RATIO = "1" *) 
  (* WRITE_DATA_WIDTH = "36" *) 
  (* WR_DATA_COUNT_WIDTH = "9" *) 
  (* WR_DC_WIDTH_EXT = "10" *) 
  (* WR_DEPTH_LOG = "9" *) 
  (* WR_PNTR_WIDTH = "9" *) 
  (* WR_RD_RATIO = "0" *) 
  (* WR_WIDTH_LOG = "6" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* both_stages_valid = "3" *) 
  (* invalid = "0" *) 
  (* stage1_valid = "2" *) 
  (* stage2_valid = "1" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_base__parameterized1 \gnuram_async_fifo.xpm_fifo_base_inst 
       (.almost_empty(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ),
        .almost_full(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ),
        .data_valid(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ),
        .dbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .full_n(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_full(prog_full),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .rst(rst),
        .sbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ),
        .sleep(sleep),
        .underflow(underflow),
        .wr_ack(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_SYNC_STAGES = "3" *) (* DOUT_RESET_VALUE = "0" *) 
(* ECC_MODE = "no_ecc" *) (* EN_ADV_FEATURE_ASYNC = "16'b0000011100000111" *) (* FIFO_MEMORY_TYPE = "distributed" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_WRITE_DEPTH = "256" *) (* FULL_RESET_VALUE = "1" *) 
(* ORIG_REF_NAME = "xpm_fifo_async" *) (* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "128" *) 
(* P_COMMON_CLOCK = "0" *) (* P_ECC_MODE = "0" *) (* P_FIFO_MEMORY_TYPE = "1" *) 
(* P_READ_MODE = "1" *) (* P_WAKEUP_TIME = "2" *) (* RD_DATA_COUNT_WIDTH = "8" *) 
(* READ_DATA_WIDTH = "3" *) (* READ_MODE = "fwft" *) (* RELATED_CLOCKS = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* WAKEUP_TIME = "0" *) 
(* WRITE_DATA_WIDTH = "3" *) (* WR_DATA_COUNT_WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) 
(* dont_touch = "true" *) (* is_du_within_envelope = "true" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_async__parameterized2
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [2:0]din;
  output full;
  output prog_full;
  output [7:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [2:0]dout;
  output empty;
  output prog_empty;
  output [7:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [2:0]din;
  wire [2:0]dout;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire prog_full;
  wire rd_clk;
  wire [7:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire sleep;
  wire underflow;
  wire wr_clk;
  wire [7:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* CASCADE_HEIGHT = "0" *) 
  (* CDC_DEST_SYNC_FF = "3" *) 
  (* COMMON_CLOCK = "0" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "0" *) 
  (* ENABLE_ECC = "0" *) 
  (* EN_ADV_FEATURE = "16'b0000011100000111" *) 
  (* EN_AE = "1'b0" *) 
  (* EN_AF = "1'b0" *) 
  (* EN_DVLD = "1'b0" *) 
  (* EN_OF = "1'b1" *) 
  (* EN_PE = "1'b1" *) 
  (* EN_PF = "1'b1" *) 
  (* EN_RDC = "1'b1" *) 
  (* EN_UF = "1'b1" *) 
  (* EN_WACK = "1'b0" *) 
  (* EN_WDC = "1'b1" *) 
  (* FG_EQ_ASYM_DOUT = "1'b0" *) 
  (* FIFO_MEMORY_TYPE = "1" *) 
  (* FIFO_MEM_TYPE = "1" *) 
  (* FIFO_READ_DEPTH = "256" *) 
  (* FIFO_READ_LATENCY = "0" *) 
  (* FIFO_SIZE = "768" *) 
  (* FIFO_WRITE_DEPTH = "256" *) 
  (* FULL_RESET_VALUE = "1" *) 
  (* FULL_RST_VAL = "1'b1" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* PE_THRESH_ADJ = "8" *) 
  (* PE_THRESH_MAX = "251" *) 
  (* PE_THRESH_MIN = "5" *) 
  (* PF_THRESH_ADJ = "126" *) 
  (* PF_THRESH_MAX = "251" *) 
  (* PF_THRESH_MIN = "8" *) 
  (* PROG_EMPTY_THRESH = "10" *) 
  (* PROG_FULL_THRESH = "128" *) 
  (* RD_DATA_COUNT_WIDTH = "8" *) 
  (* RD_DC_WIDTH_EXT = "9" *) 
  (* RD_LATENCY = "2" *) 
  (* RD_MODE = "1" *) 
  (* RD_PNTR_WIDTH = "8" *) 
  (* READ_DATA_WIDTH = "3" *) 
  (* READ_MODE = "1" *) 
  (* READ_MODE_LL = "1" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WIDTH_RATIO = "1" *) 
  (* WRITE_DATA_WIDTH = "3" *) 
  (* WR_DATA_COUNT_WIDTH = "8" *) 
  (* WR_DC_WIDTH_EXT = "9" *) 
  (* WR_DEPTH_LOG = "8" *) 
  (* WR_PNTR_WIDTH = "8" *) 
  (* WR_RD_RATIO = "0" *) 
  (* WR_WIDTH_LOG = "2" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* both_stages_valid = "3" *) 
  (* invalid = "0" *) 
  (* stage1_valid = "2" *) 
  (* stage2_valid = "1" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_base__parameterized2 \gnuram_async_fifo.xpm_fifo_base_inst 
       (.almost_empty(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ),
        .almost_full(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ),
        .data_valid(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ),
        .dbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .full_n(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_full(prog_full),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .rst(rst),
        .sbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ),
        .sleep(sleep),
        .underflow(underflow),
        .wr_ack(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_SYNC_STAGES = "3" *) (* DOUT_RESET_VALUE = "0" *) 
(* ECC_MODE = "no_ecc" *) (* EN_ADV_FEATURE_ASYNC = "16'b0000011100000111" *) (* FIFO_MEMORY_TYPE = "distributed" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_WRITE_DEPTH = "16" *) (* FULL_RESET_VALUE = "1" *) 
(* ORIG_REF_NAME = "xpm_fifo_async" *) (* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "11" *) 
(* P_COMMON_CLOCK = "0" *) (* P_ECC_MODE = "0" *) (* P_FIFO_MEMORY_TYPE = "1" *) 
(* P_READ_MODE = "1" *) (* P_WAKEUP_TIME = "2" *) (* RD_DATA_COUNT_WIDTH = "4" *) 
(* READ_DATA_WIDTH = "20" *) (* READ_MODE = "fwft" *) (* RELATED_CLOCKS = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* WAKEUP_TIME = "0" *) 
(* WRITE_DATA_WIDTH = "20" *) (* WR_DATA_COUNT_WIDTH = "4" *) (* XPM_MODULE = "TRUE" *) 
(* dont_touch = "true" *) (* is_du_within_envelope = "true" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_async__parameterized3
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [19:0]din;
  output full;
  output prog_full;
  output [3:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [19:0]dout;
  output empty;
  output prog_empty;
  output [3:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [19:0]din;
  wire [19:0]dout;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire prog_full;
  wire rd_clk;
  wire [3:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire sleep;
  wire underflow;
  wire wr_clk;
  wire [3:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* CASCADE_HEIGHT = "0" *) 
  (* CDC_DEST_SYNC_FF = "3" *) 
  (* COMMON_CLOCK = "0" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "0" *) 
  (* ENABLE_ECC = "0" *) 
  (* EN_ADV_FEATURE = "16'b0000011100000111" *) 
  (* EN_AE = "1'b0" *) 
  (* EN_AF = "1'b0" *) 
  (* EN_DVLD = "1'b0" *) 
  (* EN_OF = "1'b1" *) 
  (* EN_PE = "1'b1" *) 
  (* EN_PF = "1'b1" *) 
  (* EN_RDC = "1'b1" *) 
  (* EN_UF = "1'b1" *) 
  (* EN_WACK = "1'b0" *) 
  (* EN_WDC = "1'b1" *) 
  (* FG_EQ_ASYM_DOUT = "1'b0" *) 
  (* FIFO_MEMORY_TYPE = "1" *) 
  (* FIFO_MEM_TYPE = "1" *) 
  (* FIFO_READ_DEPTH = "16" *) 
  (* FIFO_READ_LATENCY = "0" *) 
  (* FIFO_SIZE = "320" *) 
  (* FIFO_WRITE_DEPTH = "16" *) 
  (* FULL_RESET_VALUE = "1" *) 
  (* FULL_RST_VAL = "1'b1" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* PE_THRESH_ADJ = "8" *) 
  (* PE_THRESH_MAX = "11" *) 
  (* PE_THRESH_MIN = "5" *) 
  (* PF_THRESH_ADJ = "9" *) 
  (* PF_THRESH_MAX = "11" *) 
  (* PF_THRESH_MIN = "8" *) 
  (* PROG_EMPTY_THRESH = "10" *) 
  (* PROG_FULL_THRESH = "11" *) 
  (* RD_DATA_COUNT_WIDTH = "4" *) 
  (* RD_DC_WIDTH_EXT = "5" *) 
  (* RD_LATENCY = "2" *) 
  (* RD_MODE = "1" *) 
  (* RD_PNTR_WIDTH = "4" *) 
  (* READ_DATA_WIDTH = "20" *) 
  (* READ_MODE = "1" *) 
  (* READ_MODE_LL = "1" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WIDTH_RATIO = "1" *) 
  (* WRITE_DATA_WIDTH = "20" *) 
  (* WR_DATA_COUNT_WIDTH = "4" *) 
  (* WR_DC_WIDTH_EXT = "5" *) 
  (* WR_DEPTH_LOG = "4" *) 
  (* WR_PNTR_WIDTH = "4" *) 
  (* WR_RD_RATIO = "0" *) 
  (* WR_WIDTH_LOG = "5" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* both_stages_valid = "3" *) 
  (* invalid = "0" *) 
  (* stage1_valid = "2" *) 
  (* stage2_valid = "1" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_base__parameterized3 \gnuram_async_fifo.xpm_fifo_base_inst 
       (.almost_empty(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ),
        .almost_full(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ),
        .data_valid(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ),
        .dbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .full_n(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_full(prog_full),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .rst(rst),
        .sbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ),
        .sleep(sleep),
        .underflow(underflow),
        .wr_ack(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_SYNC_STAGES = "3" *) (* DOUT_RESET_VALUE = "0" *) 
(* ECC_MODE = "no_ecc" *) (* EN_ADV_FEATURE_ASYNC = "16'b0000011100000111" *) (* FIFO_MEMORY_TYPE = "distributed" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_WRITE_DEPTH = "16" *) (* FULL_RESET_VALUE = "1" *) 
(* ORIG_REF_NAME = "xpm_fifo_async" *) (* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "11" *) 
(* P_COMMON_CLOCK = "0" *) (* P_ECC_MODE = "0" *) (* P_FIFO_MEMORY_TYPE = "1" *) 
(* P_READ_MODE = "1" *) (* P_WAKEUP_TIME = "2" *) (* RD_DATA_COUNT_WIDTH = "4" *) 
(* READ_DATA_WIDTH = "20" *) (* READ_MODE = "fwft" *) (* RELATED_CLOCKS = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* WAKEUP_TIME = "0" *) 
(* WRITE_DATA_WIDTH = "20" *) (* WR_DATA_COUNT_WIDTH = "4" *) (* XPM_MODULE = "TRUE" *) 
(* dont_touch = "true" *) (* is_du_within_envelope = "true" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_async__parameterized3__xdcDup__1
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [19:0]din;
  output full;
  output prog_full;
  output [3:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [19:0]dout;
  output empty;
  output prog_empty;
  output [3:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [19:0]din;
  wire [19:0]dout;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire prog_full;
  wire rd_clk;
  wire [3:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire sleep;
  wire underflow;
  wire wr_clk;
  wire [3:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* CASCADE_HEIGHT = "0" *) 
  (* CDC_DEST_SYNC_FF = "3" *) 
  (* COMMON_CLOCK = "0" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "0" *) 
  (* ENABLE_ECC = "0" *) 
  (* EN_ADV_FEATURE = "16'b0000011100000111" *) 
  (* EN_AE = "1'b0" *) 
  (* EN_AF = "1'b0" *) 
  (* EN_DVLD = "1'b0" *) 
  (* EN_OF = "1'b1" *) 
  (* EN_PE = "1'b1" *) 
  (* EN_PF = "1'b1" *) 
  (* EN_RDC = "1'b1" *) 
  (* EN_UF = "1'b1" *) 
  (* EN_WACK = "1'b0" *) 
  (* EN_WDC = "1'b1" *) 
  (* FG_EQ_ASYM_DOUT = "1'b0" *) 
  (* FIFO_MEMORY_TYPE = "1" *) 
  (* FIFO_MEM_TYPE = "1" *) 
  (* FIFO_READ_DEPTH = "16" *) 
  (* FIFO_READ_LATENCY = "0" *) 
  (* FIFO_SIZE = "320" *) 
  (* FIFO_WRITE_DEPTH = "16" *) 
  (* FULL_RESET_VALUE = "1" *) 
  (* FULL_RST_VAL = "1'b1" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* PE_THRESH_ADJ = "8" *) 
  (* PE_THRESH_MAX = "11" *) 
  (* PE_THRESH_MIN = "5" *) 
  (* PF_THRESH_ADJ = "9" *) 
  (* PF_THRESH_MAX = "11" *) 
  (* PF_THRESH_MIN = "8" *) 
  (* PROG_EMPTY_THRESH = "10" *) 
  (* PROG_FULL_THRESH = "11" *) 
  (* RD_DATA_COUNT_WIDTH = "4" *) 
  (* RD_DC_WIDTH_EXT = "5" *) 
  (* RD_LATENCY = "2" *) 
  (* RD_MODE = "1" *) 
  (* RD_PNTR_WIDTH = "4" *) 
  (* READ_DATA_WIDTH = "20" *) 
  (* READ_MODE = "1" *) 
  (* READ_MODE_LL = "1" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WIDTH_RATIO = "1" *) 
  (* WRITE_DATA_WIDTH = "20" *) 
  (* WR_DATA_COUNT_WIDTH = "4" *) 
  (* WR_DC_WIDTH_EXT = "5" *) 
  (* WR_DEPTH_LOG = "4" *) 
  (* WR_PNTR_WIDTH = "4" *) 
  (* WR_RD_RATIO = "0" *) 
  (* WR_WIDTH_LOG = "5" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* both_stages_valid = "3" *) 
  (* invalid = "0" *) 
  (* stage1_valid = "2" *) 
  (* stage2_valid = "1" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_base__parameterized3__xdcDup__1 \gnuram_async_fifo.xpm_fifo_base_inst 
       (.almost_empty(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ),
        .almost_full(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ),
        .data_valid(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ),
        .dbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .full_n(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_full(prog_full),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .rst(rst),
        .sbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ),
        .sleep(sleep),
        .underflow(underflow),
        .wr_ack(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_SYNC_STAGES = "3" *) (* DOUT_RESET_VALUE = "0" *) 
(* ECC_MODE = "no_ecc" *) (* EN_ADV_FEATURE_ASYNC = "16'b0000011100000111" *) (* FIFO_MEMORY_TYPE = "block" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_WRITE_DEPTH = "256" *) (* FULL_RESET_VALUE = "1" *) 
(* ORIG_REF_NAME = "xpm_fifo_async" *) (* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "128" *) 
(* P_COMMON_CLOCK = "0" *) (* P_ECC_MODE = "0" *) (* P_FIFO_MEMORY_TYPE = "2" *) 
(* P_READ_MODE = "1" *) (* P_WAKEUP_TIME = "2" *) (* RD_DATA_COUNT_WIDTH = "8" *) 
(* READ_DATA_WIDTH = "45" *) (* READ_MODE = "fwft" *) (* RELATED_CLOCKS = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* WAKEUP_TIME = "0" *) 
(* WRITE_DATA_WIDTH = "45" *) (* WR_DATA_COUNT_WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) 
(* dont_touch = "true" *) (* is_du_within_envelope = "true" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_async__xdcDup__1
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [44:0]din;
  output full;
  output prog_full;
  output [7:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [44:0]dout;
  output empty;
  output prog_empty;
  output [7:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [44:0]din;
  wire [44:0]dout;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire prog_full;
  wire rd_clk;
  wire [7:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire sleep;
  wire underflow;
  wire wr_clk;
  wire [7:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* CASCADE_HEIGHT = "0" *) 
  (* CDC_DEST_SYNC_FF = "3" *) 
  (* COMMON_CLOCK = "0" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "0" *) 
  (* ENABLE_ECC = "0" *) 
  (* EN_ADV_FEATURE = "16'b0000011100000111" *) 
  (* EN_AE = "1'b0" *) 
  (* EN_AF = "1'b0" *) 
  (* EN_DVLD = "1'b0" *) 
  (* EN_OF = "1'b1" *) 
  (* EN_PE = "1'b1" *) 
  (* EN_PF = "1'b1" *) 
  (* EN_RDC = "1'b1" *) 
  (* EN_UF = "1'b1" *) 
  (* EN_WACK = "1'b0" *) 
  (* EN_WDC = "1'b1" *) 
  (* FG_EQ_ASYM_DOUT = "1'b0" *) 
  (* FIFO_MEMORY_TYPE = "2" *) 
  (* FIFO_MEM_TYPE = "2" *) 
  (* FIFO_READ_DEPTH = "256" *) 
  (* FIFO_READ_LATENCY = "0" *) 
  (* FIFO_SIZE = "11520" *) 
  (* FIFO_WRITE_DEPTH = "256" *) 
  (* FULL_RESET_VALUE = "1" *) 
  (* FULL_RST_VAL = "1'b1" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* PE_THRESH_ADJ = "8" *) 
  (* PE_THRESH_MAX = "251" *) 
  (* PE_THRESH_MIN = "5" *) 
  (* PF_THRESH_ADJ = "126" *) 
  (* PF_THRESH_MAX = "251" *) 
  (* PF_THRESH_MIN = "8" *) 
  (* PROG_EMPTY_THRESH = "10" *) 
  (* PROG_FULL_THRESH = "128" *) 
  (* RD_DATA_COUNT_WIDTH = "8" *) 
  (* RD_DC_WIDTH_EXT = "9" *) 
  (* RD_LATENCY = "2" *) 
  (* RD_MODE = "1" *) 
  (* RD_PNTR_WIDTH = "8" *) 
  (* READ_DATA_WIDTH = "45" *) 
  (* READ_MODE = "1" *) 
  (* READ_MODE_LL = "1" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WIDTH_RATIO = "1" *) 
  (* WRITE_DATA_WIDTH = "45" *) 
  (* WR_DATA_COUNT_WIDTH = "8" *) 
  (* WR_DC_WIDTH_EXT = "9" *) 
  (* WR_DEPTH_LOG = "8" *) 
  (* WR_PNTR_WIDTH = "8" *) 
  (* WR_RD_RATIO = "0" *) 
  (* WR_WIDTH_LOG = "6" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* both_stages_valid = "3" *) 
  (* invalid = "0" *) 
  (* stage1_valid = "2" *) 
  (* stage2_valid = "1" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_base__xdcDup__1 \gnuram_async_fifo.xpm_fifo_base_inst 
       (.almost_empty(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ),
        .almost_full(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ),
        .data_valid(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ),
        .dbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .full_n(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_full(prog_full),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .rst(rst),
        .sbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ),
        .sleep(sleep),
        .underflow(underflow),
        .wr_ack(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_DEST_SYNC_FF = "3" *) (* COMMON_CLOCK = "0" *) 
(* DOUT_RESET_VALUE = "0" *) (* ECC_MODE = "0" *) (* ENABLE_ECC = "0" *) 
(* EN_ADV_FEATURE = "16'b0000011100000111" *) (* EN_AE = "1'b0" *) (* EN_AF = "1'b0" *) 
(* EN_DVLD = "1'b0" *) (* EN_OF = "1'b1" *) (* EN_PE = "1'b1" *) 
(* EN_PF = "1'b1" *) (* EN_RDC = "1'b1" *) (* EN_UF = "1'b1" *) 
(* EN_WACK = "1'b0" *) (* EN_WDC = "1'b1" *) (* FG_EQ_ASYM_DOUT = "1'b0" *) 
(* FIFO_MEMORY_TYPE = "2" *) (* FIFO_MEM_TYPE = "2" *) (* FIFO_READ_DEPTH = "256" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_SIZE = "11520" *) (* FIFO_WRITE_DEPTH = "256" *) 
(* FULL_RESET_VALUE = "1" *) (* FULL_RST_VAL = "1'b1" *) (* PE_THRESH_ADJ = "8" *) 
(* PE_THRESH_MAX = "251" *) (* PE_THRESH_MIN = "5" *) (* PF_THRESH_ADJ = "126" *) 
(* PF_THRESH_MAX = "251" *) (* PF_THRESH_MIN = "8" *) (* PROG_EMPTY_THRESH = "10" *) 
(* PROG_FULL_THRESH = "128" *) (* RD_DATA_COUNT_WIDTH = "8" *) (* RD_DC_WIDTH_EXT = "9" *) 
(* RD_LATENCY = "2" *) (* RD_MODE = "1" *) (* RD_PNTR_WIDTH = "8" *) 
(* READ_DATA_WIDTH = "45" *) (* READ_MODE = "1" *) (* READ_MODE_LL = "1" *) 
(* RELATED_CLOCKS = "0" *) (* REMOVE_WR_RD_PROT_LOGIC = "0" *) (* SIM_ASSERT_CHK = "0" *) 
(* USE_ADV_FEATURES = "0707" *) (* VERSION = "0" *) (* WAKEUP_TIME = "0" *) 
(* WIDTH_RATIO = "1" *) (* WRITE_DATA_WIDTH = "45" *) (* WR_DATA_COUNT_WIDTH = "8" *) 
(* WR_DC_WIDTH_EXT = "9" *) (* WR_DEPTH_LOG = "8" *) (* WR_PNTR_WIDTH = "8" *) 
(* WR_RD_RATIO = "0" *) (* WR_WIDTH_LOG = "6" *) (* XPM_MODULE = "TRUE" *) 
(* both_stages_valid = "3" *) (* invalid = "0" *) (* keep_hierarchy = "soft" *) 
(* stage1_valid = "2" *) (* stage2_valid = "1" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_base
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    full_n,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [44:0]din;
  output full;
  output full_n;
  output prog_full;
  output [7:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [44:0]dout;
  output empty;
  output prog_empty;
  output [7:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [1:0]count_value_i;
  wire [1:0]curr_fwft_state;
  wire [7:0]diff_pntr_pe;
  wire [8:2]diff_pntr_pf_q;
  wire [8:2]diff_pntr_pf_q0;
  wire [44:0]din;
  wire [44:0]dout;
  wire empty;
  wire empty_fwft_i0;
  wire full;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_0 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_7 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_10 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_11 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_12 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_13 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_14 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_15 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_16 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_9 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_7 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_8 ;
  wire \gen_fwft.count_rst ;
  wire \gen_fwft.ram_regout_en ;
  wire \gen_fwft.rdpp1_inst_n_3 ;
  wire \gen_fwft.rdpp1_inst_n_4 ;
  wire \gen_fwft.rdpp1_inst_n_5 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ;
  wire [8:1]\grdc.diff_wr_rd_pntr_rdc ;
  wire \grdc.rd_data_count_i0 ;
  wire [8:1]\gwdc.diff_wr_rd_pntr1_out ;
  wire [1:0]next_fwft_state__0;
  wire overflow;
  wire overflow_i0;
  wire prog_empty;
  wire prog_full;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire [7:0]rd_data_count;
  wire rd_en;
  wire [7:0]rd_pntr_ext;
  wire [7:0]rd_pntr_wr;
  wire [7:0]rd_pntr_wr_cdc;
  wire [8:0]rd_pntr_wr_cdc_dc;
  wire rd_rst_busy;
  wire rdp_inst_n_10;
  wire rdp_inst_n_19;
  wire rdp_inst_n_20;
  wire rdp_inst_n_21;
  wire rdp_inst_n_22;
  wire rdp_inst_n_23;
  wire rdp_inst_n_24;
  wire rdp_inst_n_25;
  wire rdp_inst_n_26;
  wire rdp_inst_n_27;
  wire rdp_inst_n_28;
  wire rdp_inst_n_29;
  wire rdp_inst_n_30;
  wire rdp_inst_n_31;
  wire rdp_inst_n_8;
  wire rdp_inst_n_9;
  wire rdpp1_inst_n_0;
  wire rdpp1_inst_n_1;
  wire rdpp1_inst_n_2;
  wire rdpp1_inst_n_3;
  wire rdpp1_inst_n_4;
  wire rdpp1_inst_n_5;
  wire rdpp1_inst_n_6;
  wire rdpp1_inst_n_7;
  wire rst;
  wire rst_d1;
  wire rst_d1_inst_n_1;
  wire sleep;
  wire [1:1]src_in_bin00_out;
  wire underflow;
  wire underflow_i0;
  wire wr_clk;
  wire [7:0]wr_data_count;
  wire wr_en;
  wire [8:0]wr_pntr_ext;
  wire [8:1]wr_pntr_plus1_pf;
  wire wr_pntr_plus1_pf_carry;
  wire [7:0]wr_pntr_rd_cdc;
  wire [8:0]wr_pntr_rd_cdc_dc;
  wire wr_rst_busy;
  wire wrpp2_inst_n_0;
  wire wrpp2_inst_n_1;
  wire wrpp2_inst_n_2;
  wire wrpp2_inst_n_3;
  wire wrpp2_inst_n_4;
  wire wrpp2_inst_n_5;
  wire wrpp2_inst_n_6;
  wire wrpp2_inst_n_7;
  wire wrst_busy;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ;
  wire [44:0]\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign full_n = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  (* SOFT_HLUTNM = "soft_lutpair175" *) 
  LUT4 #(
    .INIT(16'h6A85)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[0]_i_1 
       (.I0(curr_fwft_state[0]),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(ram_empty_i),
        .O(next_fwft_state__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair175" *) 
  LUT4 #(
    .INIT(16'h3FF0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[1]_i_1 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(curr_fwft_state[0]),
        .O(next_fwft_state__0[1]));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[0]),
        .Q(curr_fwft_state[0]),
        .R(rd_rst_busy));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[1]),
        .Q(curr_fwft_state[1]),
        .R(rd_rst_busy));
  GND GND
       (.G(\<const0> ));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized1__8 \gen_cdc_pntr.rd_pntr_cdc_dc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc_dc),
        .src_clk(rd_clk),
        .src_in_bin({rdp_inst_n_24,rdp_inst_n_25,rdp_inst_n_26,rdp_inst_n_27,rdp_inst_n_28,rdp_inst_n_29,rdp_inst_n_30,src_in_bin00_out,rdp_inst_n_31}));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "8" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__9 \gen_cdc_pntr.rd_pntr_cdc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc),
        .src_clk(rd_clk),
        .src_in_bin(rd_pntr_ext));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec_36 \gen_cdc_pntr.rpw_gray_reg 
       (.D(rd_pntr_wr_cdc),
        .Q(wr_pntr_plus1_pf),
        .d_out_int_reg(\gen_cdc_pntr.rpw_gray_reg_n_8 ),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7}),
        .\reg_out_i_reg[7]_0 (rd_pntr_wr),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized0_37 \gen_cdc_pntr.rpw_gray_reg_dc 
       (.D(rd_pntr_wr_cdc_dc),
        .Q({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 }),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec_38 \gen_cdc_pntr.wpr_gray_reg 
       (.D(wr_pntr_rd_cdc),
        .Q(curr_fwft_state),
        .\gen_pf_ic_rc.ram_empty_i_reg (rd_pntr_ext),
        .\gen_pf_ic_rc.ram_empty_i_reg_0 ({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3,rdpp1_inst_n_4,rdpp1_inst_n_5,rdpp1_inst_n_6,rdpp1_inst_n_7}),
        .ram_empty_i(ram_empty_i),
        .ram_empty_i0(ram_empty_i0),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[0]_0 (rd_rst_busy),
        .\reg_out_i_reg[7]_0 ({\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized0_39 \gen_cdc_pntr.wpr_gray_reg_dc 
       (.D(\grdc.diff_wr_rd_pntr_rdc ),
        .DI({rdp_inst_n_9,\gen_fwft.rdpp1_inst_n_5 }),
        .Q({\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_16 }),
        .S({rdp_inst_n_19,rdp_inst_n_20,rdp_inst_n_21,rdp_inst_n_22,rdp_inst_n_23,\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .\grdc.rd_data_count_i_reg[7] (count_value_i[1]),
        .\grdc.rd_data_count_i_reg[7]_0 (rd_pntr_ext[6:1]),
        .\grdc.rd_data_count_i_reg[8] (rdp_inst_n_10),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[8]_0 (rd_rst_busy),
        .\reg_out_i_reg[8]_1 (wr_pntr_rd_cdc_dc));
  (* DEST_SYNC_FF = "5" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized0__4 \gen_cdc_pntr.wr_pntr_cdc_dc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc_dc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "8" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__8 \gen_cdc_pntr.wr_pntr_cdc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext[7:0]));
  (* SOFT_HLUTNM = "soft_lutpair174" *) 
  LUT4 #(
    .INIT(16'hF380)) 
    \gen_fwft.empty_fwft_i_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .I3(empty),
        .O(empty_fwft_i0));
  FDSE #(
    .INIT(1'b1)) 
    \gen_fwft.empty_fwft_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .Q(empty),
        .S(rd_rst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn_40 \gen_fwft.rdpp1_inst 
       (.DI(\gen_fwft.rdpp1_inst_n_5 ),
        .Q(count_value_i),
        .S({\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\grdc.rd_data_count_i_reg[7] (rd_pntr_ext[1:0]),
        .\grdc.rd_data_count_i_reg[7]_0 ({\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_16 }),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .src_in_bin(src_in_bin00_out));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_cdc_pntr.rpw_gray_reg_n_8 ),
        .Q(full),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[0]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[1]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[2]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[3]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[4]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[5]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[6]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[7]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .R(rd_rst_busy));
  LUT4 #(
    .INIT(16'h88B8)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1 
       (.I0(prog_empty),
        .I1(empty),
        .I2(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h01FF)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ),
        .Q(prog_empty),
        .S(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[2]),
        .Q(diff_pntr_pf_q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[3]),
        .Q(diff_pntr_pf_q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[4]),
        .Q(diff_pntr_pf_q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[5]),
        .Q(diff_pntr_pf_q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[6]),
        .Q(diff_pntr_pf_q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[7]),
        .Q(diff_pntr_pf_q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[8]),
        .Q(diff_pntr_pf_q[8]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1_inst_n_1),
        .Q(prog_full),
        .S(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.ram_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i0),
        .Q(ram_empty_i),
        .S(rd_rst_busy));
  (* ADDR_WIDTH_A = "8" *) 
  (* ADDR_WIDTH_B = "8" *) 
  (* AUTO_SLEEP_TIME = "0" *) 
  (* BYTE_WRITE_WIDTH_A = "45" *) 
  (* BYTE_WRITE_WIDTH_B = "45" *) 
  (* CASCADE_HEIGHT = "0" *) 
  (* CLOCKING_MODE = "1" *) 
  (* ECC_BIT_RANGE = "[7:0]" *) 
  (* ECC_MODE = "0" *) 
  (* ECC_TYPE = "NONE" *) 
  (* IGNORE_INIT_SYNTH = "0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* MAX_NUM_CHAR = "0" *) 
  (* \MEM.ADDRESS_SPACE  *) 
  (* \MEM.ADDRESS_SPACE_BEGIN  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_LSB  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_MSB  = "44" *) 
  (* \MEM.ADDRESS_SPACE_END  = "511" *) 
  (* \MEM.CORE_MEMORY_WIDTH  = "45" *) 
  (* MEMORY_INIT_FILE = "none" *) 
  (* MEMORY_INIT_PARAM = "" *) 
  (* MEMORY_OPTIMIZATION = "true" *) 
  (* MEMORY_PRIMITIVE = "2" *) 
  (* MEMORY_SIZE = "11520" *) 
  (* MEMORY_TYPE = "1" *) 
  (* MESSAGE_CONTROL = "0" *) 
  (* NUM_CHAR_LOC = "0" *) 
  (* P_ECC_MODE = "no_ecc" *) 
  (* P_ENABLE_BYTE_WRITE_A = "0" *) 
  (* P_ENABLE_BYTE_WRITE_B = "0" *) 
  (* P_MAX_DEPTH_DATA = "256" *) 
  (* P_MEMORY_OPT = "yes" *) 
  (* P_MEMORY_PRIMITIVE = "block" *) 
  (* P_MIN_WIDTH_DATA = "45" *) 
  (* P_MIN_WIDTH_DATA_A = "45" *) 
  (* P_MIN_WIDTH_DATA_B = "45" *) 
  (* P_MIN_WIDTH_DATA_ECC = "45" *) 
  (* P_MIN_WIDTH_DATA_LDW = "4" *) 
  (* P_MIN_WIDTH_DATA_SHFT = "45" *) 
  (* P_NUM_COLS_WRITE_A = "1" *) 
  (* P_NUM_COLS_WRITE_B = "1" *) 
  (* P_NUM_ROWS_READ_A = "1" *) 
  (* P_NUM_ROWS_READ_B = "1" *) 
  (* P_NUM_ROWS_WRITE_A = "1" *) 
  (* P_NUM_ROWS_WRITE_B = "1" *) 
  (* P_SDP_WRITE_MODE = "no" *) 
  (* P_WIDTH_ADDR_LSB_READ_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) 
  (* P_WIDTH_ADDR_READ_A = "8" *) 
  (* P_WIDTH_ADDR_READ_B = "8" *) 
  (* P_WIDTH_ADDR_WRITE_A = "8" *) 
  (* P_WIDTH_ADDR_WRITE_B = "8" *) 
  (* P_WIDTH_COL_WRITE_A = "45" *) 
  (* P_WIDTH_COL_WRITE_B = "45" *) 
  (* RAM_DECOMP = "auto" *) 
  (* READ_DATA_WIDTH_A = "45" *) 
  (* READ_DATA_WIDTH_B = "45" *) 
  (* READ_LATENCY_A = "2" *) 
  (* READ_LATENCY_B = "2" *) 
  (* READ_RESET_VALUE_A = "0" *) 
  (* READ_RESET_VALUE_B = "0" *) 
  (* RST_MODE_A = "SYNC" *) 
  (* RST_MODE_B = "SYNC" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_EMBEDDED_CONSTRAINT = "0" *) 
  (* USE_MEM_INIT = "0" *) 
  (* USE_MEM_INIT_MMI = "0" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH_A = "45" *) 
  (* WRITE_DATA_WIDTH_B = "45" *) 
  (* WRITE_MODE_A = "2" *) 
  (* WRITE_MODE_B = "2" *) 
  (* WRITE_PROTECT = "1" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* rsta_loop_iter = "48" *) 
  (* rstb_loop_iter = "48" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_memory_base \gen_sdpram.xpm_memory_base_inst 
       (.addra(wr_pntr_ext[7:0]),
        .addrb(rd_pntr_ext),
        .clka(wr_clk),
        .clkb(rd_clk),
        .dbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ),
        .dbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ),
        .dina(din),
        .dinb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .douta(\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED [44:0]),
        .doutb(dout),
        .ena(wr_pntr_plus1_pf_carry),
        .enb(rdp_inst_n_8),
        .injectdbiterra(1'b0),
        .injectdbiterrb(1'b0),
        .injectsbiterra(1'b0),
        .injectsbiterrb(1'b0),
        .regcea(1'b0),
        .regceb(\gen_fwft.ram_regout_en ),
        .rsta(1'b0),
        .rstb(rd_rst_busy),
        .sbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ),
        .sbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ),
        .sleep(sleep),
        .wea(1'b0),
        .web(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair174" *) 
  LUT3 #(
    .INIT(8'h62)) 
    \gen_sdpram.xpm_memory_base_inst_i_3 
       (.I0(curr_fwft_state[0]),
        .I1(curr_fwft_state[1]),
        .I2(rd_en),
        .O(\gen_fwft.ram_regout_en ));
  FDRE #(
    .INIT(1'b0)) 
    \gof.overflow_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(overflow_i0),
        .Q(overflow),
        .R(1'b0));
  FDRE \grdc.rd_data_count_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q(rd_data_count[0]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(rd_data_count[1]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [3]),
        .Q(rd_data_count[2]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [4]),
        .Q(rd_data_count[3]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [5]),
        .Q(rd_data_count[4]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [6]),
        .Q(rd_data_count[5]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [7]),
        .Q(rd_data_count[6]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [8]),
        .Q(rd_data_count[7]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \guf.underflow_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(underflow_i0),
        .Q(underflow),
        .R(1'b0));
  FDRE \gwdc.wr_data_count_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [1]),
        .Q(wr_data_count[0]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [2]),
        .Q(wr_data_count[1]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [3]),
        .Q(wr_data_count[2]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [4]),
        .Q(wr_data_count[3]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [5]),
        .Q(wr_data_count[4]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [6]),
        .Q(wr_data_count[5]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [7]),
        .Q(wr_data_count[6]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [8]),
        .Q(wr_data_count[7]),
        .R(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized0_41 rdp_inst
       (.D(diff_pntr_pe),
        .DI(rdp_inst_n_9),
        .Q(rd_pntr_ext),
        .S({rdp_inst_n_19,rdp_inst_n_20,rdp_inst_n_21,rdp_inst_n_22,rdp_inst_n_23}),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\count_value_i_reg[7]_0 (rdp_inst_n_10),
        .\count_value_i_reg[8]_0 (rd_rst_busy),
        .enb(rdp_inst_n_8),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ({\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .\grdc.rd_data_count_i_reg[7] (count_value_i),
        .\grdc.rd_data_count_i_reg[8] ({\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_15 }),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .src_in_bin({rdp_inst_n_24,rdp_inst_n_25,rdp_inst_n_26,rdp_inst_n_27,rdp_inst_n_28,rdp_inst_n_29,rdp_inst_n_30,rdp_inst_n_31}));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized1_42 rdpp1_inst
       (.E(rdp_inst_n_8),
        .Q({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3,rdpp1_inst_n_4,rdpp1_inst_n_5,rdpp1_inst_n_6,rdpp1_inst_n_7}),
        .\count_value_i_reg[0]_0 (rd_rst_busy),
        .\count_value_i_reg[1]_0 (curr_fwft_state),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_bit_43 rst_d1_inst
       (.Q(diff_pntr_pf_q),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] (rst_d1_inst_n_1),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg (full),
        .overflow_i0(overflow_i0),
        .prog_full(prog_full),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized0_44 wrp_inst
       (.D(\gwdc.diff_wr_rd_pntr1_out ),
        .Q(wr_pntr_ext),
        .\count_value_i_reg[6]_0 (full),
        .\gwdc.wr_data_count_i_reg[8] ({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 }),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized1_45 wrpp1_inst
       (.D(diff_pntr_pf_q0),
        .Q(wr_pntr_plus1_pf),
        .\count_value_i_reg[6]_0 (full),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] (rd_pntr_wr),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized2_46 wrpp2_inst
       (.Q({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7}),
        .\count_value_i_reg[6]_0 (full),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_rst__xdcDup__2 xpm_fifo_rst_inst
       (.Q(curr_fwft_state),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[7] (full),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_0 (rd_rst_busy),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_1 (\grdc.rd_data_count_i0 ),
        .\guf.underflow_i_reg (empty),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .rst_d1(rst_d1),
        .underflow_i0(underflow_i0),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wr_rst_busy(wr_rst_busy),
        .wrst_busy(wrst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_DEST_SYNC_FF = "3" *) (* COMMON_CLOCK = "0" *) 
(* DOUT_RESET_VALUE = "0" *) (* ECC_MODE = "0" *) (* ENABLE_ECC = "0" *) 
(* EN_ADV_FEATURE = "16'b0000011100000111" *) (* EN_AE = "1'b0" *) (* EN_AF = "1'b0" *) 
(* EN_DVLD = "1'b0" *) (* EN_OF = "1'b1" *) (* EN_PE = "1'b1" *) 
(* EN_PF = "1'b1" *) (* EN_RDC = "1'b1" *) (* EN_UF = "1'b1" *) 
(* EN_WACK = "1'b0" *) (* EN_WDC = "1'b1" *) (* FG_EQ_ASYM_DOUT = "1'b0" *) 
(* FIFO_MEMORY_TYPE = "2" *) (* FIFO_MEM_TYPE = "2" *) (* FIFO_READ_DEPTH = "512" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_SIZE = "19456" *) (* FIFO_WRITE_DEPTH = "512" *) 
(* FULL_RESET_VALUE = "1" *) (* FULL_RST_VAL = "1'b1" *) (* ORIG_REF_NAME = "xpm_fifo_base" *) 
(* PE_THRESH_ADJ = "8" *) (* PE_THRESH_MAX = "507" *) (* PE_THRESH_MIN = "5" *) 
(* PF_THRESH_ADJ = "382" *) (* PF_THRESH_MAX = "507" *) (* PF_THRESH_MIN = "8" *) 
(* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "384" *) (* RD_DATA_COUNT_WIDTH = "9" *) 
(* RD_DC_WIDTH_EXT = "10" *) (* RD_LATENCY = "2" *) (* RD_MODE = "1" *) 
(* RD_PNTR_WIDTH = "9" *) (* READ_DATA_WIDTH = "38" *) (* READ_MODE = "1" *) 
(* READ_MODE_LL = "1" *) (* RELATED_CLOCKS = "0" *) (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WIDTH_RATIO = "1" *) (* WRITE_DATA_WIDTH = "38" *) 
(* WR_DATA_COUNT_WIDTH = "9" *) (* WR_DC_WIDTH_EXT = "10" *) (* WR_DEPTH_LOG = "9" *) 
(* WR_PNTR_WIDTH = "9" *) (* WR_RD_RATIO = "0" *) (* WR_WIDTH_LOG = "6" *) 
(* XPM_MODULE = "TRUE" *) (* both_stages_valid = "3" *) (* invalid = "0" *) 
(* keep_hierarchy = "soft" *) (* stage1_valid = "2" *) (* stage2_valid = "1" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_base__parameterized0
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    full_n,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [37:0]din;
  output full;
  output full_n;
  output prog_full;
  output [8:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [37:0]dout;
  output empty;
  output prog_empty;
  output [8:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire clr_full;
  wire [1:0]count_value_i;
  wire [1:0]curr_fwft_state;
  wire [8:0]diff_pntr_pe;
  wire [9:2]diff_pntr_pf_q;
  wire [9:2]diff_pntr_pf_q0;
  wire [37:0]din;
  wire [37:1]\^dout ;
  wire empty;
  wire empty_fwft_i0;
  wire full;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_0 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_7 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_9 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_9 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_0 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_10 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_11 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_12 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_13 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_14 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_15 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_16 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_7 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_9 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_0 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_7 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_8 ;
  wire \gen_fwft.count_rst ;
  wire \gen_fwft.ram_regout_en ;
  wire \gen_fwft.rdpp1_inst_n_3 ;
  wire \gen_fwft.rdpp1_inst_n_4 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[8] ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ;
  wire [9:1]\grdc.diff_wr_rd_pntr_rdc ;
  wire \grdc.rd_data_count_i0 ;
  wire [9:1]\gwdc.diff_wr_rd_pntr1_out ;
  wire [1:0]next_fwft_state__0;
  wire overflow;
  wire overflow_i0;
  wire prog_empty;
  wire prog_full;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire ram_rd_en_i;
  wire rd_clk;
  wire [8:0]rd_data_count;
  wire rd_en;
  wire [8:0]rd_pntr_ext;
  wire [8:0]rd_pntr_wr;
  wire [8:0]rd_pntr_wr_cdc;
  wire [9:0]rd_pntr_wr_cdc_dc;
  wire rd_rst_busy;
  wire rdp_inst_n_0;
  wire rdp_inst_n_11;
  wire rdp_inst_n_21;
  wire rdp_inst_n_31;
  wire rdp_inst_n_32;
  wire rdp_inst_n_33;
  wire rdp_inst_n_34;
  wire rdp_inst_n_35;
  wire rdp_inst_n_36;
  wire rdp_inst_n_37;
  wire rdp_inst_n_38;
  wire rst;
  wire rst_d1;
  wire rst_d1_inst_n_1;
  wire sleep;
  wire [9:0]src_in_bin00_out;
  wire underflow;
  wire underflow_i0;
  wire wr_clk;
  wire [8:0]wr_data_count;
  wire wr_en;
  wire [9:0]wr_pntr_ext;
  wire [9:1]wr_pntr_plus1_pf;
  wire wr_pntr_plus1_pf_carry;
  wire [8:0]wr_pntr_rd_cdc;
  wire [9:0]wr_pntr_rd_cdc_dc;
  wire wr_rst_busy;
  wire wrpp2_inst_n_0;
  wire wrpp2_inst_n_1;
  wire wrpp2_inst_n_2;
  wire wrpp2_inst_n_3;
  wire wrpp2_inst_n_4;
  wire wrpp2_inst_n_5;
  wire wrpp2_inst_n_6;
  wire wrpp2_inst_n_7;
  wire wrpp2_inst_n_8;
  wire wrst_busy;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ;
  wire [37:0]\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED ;
  wire [0:0]\NLW_gen_sdpram.xpm_memory_base_inst_doutb_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign dout[37:1] = \^dout [37:1];
  assign dout[0] = \<const0> ;
  assign full_n = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  (* SOFT_HLUTNM = "soft_lutpair345" *) 
  LUT4 #(
    .INIT(16'h69A1)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[0]_i_1 
       (.I0(ram_empty_i),
        .I1(curr_fwft_state[1]),
        .I2(curr_fwft_state[0]),
        .I3(rd_en),
        .O(next_fwft_state__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair345" *) 
  LUT4 #(
    .INIT(16'h3FF0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[1]_i_1 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(curr_fwft_state[0]),
        .I3(curr_fwft_state[1]),
        .O(next_fwft_state__0[1]));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[0]),
        .Q(curr_fwft_state[0]),
        .R(rd_rst_busy));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[1]),
        .Q(curr_fwft_state[1]),
        .R(rd_rst_busy));
  GND GND
       (.G(\<const0> ));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "10" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized3__2 \gen_cdc_pntr.rd_pntr_cdc_dc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc_dc),
        .src_clk(rd_clk),
        .src_in_bin(src_in_bin00_out));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized1__10 \gen_cdc_pntr.rd_pntr_cdc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc),
        .src_clk(rd_clk),
        .src_in_bin(rd_pntr_ext));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized0 \gen_cdc_pntr.rpw_gray_reg 
       (.D(rd_pntr_wr_cdc),
        .Q(rd_pntr_wr),
        .clr_full(clr_full),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 ({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7,wrpp2_inst_n_8}),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg (wr_pntr_plus1_pf),
        .\reg_out_i_reg[0]_0 (\gen_cdc_pntr.rpw_gray_reg_n_9 ),
        .wr_clk(wr_clk),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized1 \gen_cdc_pntr.rpw_gray_reg_dc 
       (.D(rd_pntr_wr_cdc_dc),
        .Q({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_9 }),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized0_1 \gen_cdc_pntr.wpr_gray_reg 
       (.D(diff_pntr_pe),
        .Q(curr_fwft_state),
        .S({rdp_inst_n_31,rdp_inst_n_32,rdp_inst_n_33,rdp_inst_n_34,rdp_inst_n_35,rdp_inst_n_36,rdp_inst_n_37,rdp_inst_n_38}),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] (rd_pntr_ext[8]),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[0]_0 (rd_rst_busy),
        .\reg_out_i_reg[8]_0 ({\gen_cdc_pntr.wpr_gray_reg_n_0 ,\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .\reg_out_i_reg[8]_1 (wr_pntr_rd_cdc));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized1_2 \gen_cdc_pntr.wpr_gray_reg_dc 
       (.D(wr_pntr_rd_cdc_dc),
        .DI({\gen_cdc_pntr.wpr_gray_reg_dc_n_0 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_1 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_2 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_5 }),
        .Q({\gen_cdc_pntr.wpr_gray_reg_dc_n_6 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_7 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 }),
        .S(\gen_cdc_pntr.wpr_gray_reg_dc_n_16 ),
        .\grdc.rd_data_count_i_reg[7] (count_value_i[1]),
        .\grdc.rd_data_count_i_reg[9] ({rdp_inst_n_0,rd_pntr_ext[8:1]}),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[7]_0 (\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ),
        .\reg_out_i_reg[9]_0 (rd_rst_busy));
  (* DEST_SYNC_FF = "5" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "10" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized2__2 \gen_cdc_pntr.wr_pntr_cdc_dc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc_dc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized1__9 \gen_cdc_pntr.wr_pntr_cdc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext[8:0]));
  (* SOFT_HLUTNM = "soft_lutpair344" *) 
  LUT4 #(
    .INIT(16'hE0CC)) 
    \gen_fwft.empty_fwft_i_i_1 
       (.I0(rd_en),
        .I1(empty),
        .I2(curr_fwft_state[1]),
        .I3(curr_fwft_state[0]),
        .O(empty_fwft_i0));
  FDSE #(
    .INIT(1'b1)) 
    \gen_fwft.empty_fwft_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .Q(empty),
        .S(rd_rst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn \gen_fwft.rdpp1_inst 
       (.DI({\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .Q(count_value_i),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\src_gray_ff_reg[0] (rd_pntr_ext[0]),
        .src_in_bin(src_in_bin00_out[0]));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_cdc_pntr.rpw_gray_reg_n_9 ),
        .Q(full),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[0]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[1]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[2]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[3]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[4]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[5]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[6]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[7]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[8]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[8] ),
        .R(rd_rst_busy));
  LUT4 #(
    .INIT(16'h88B8)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1 
       (.I0(prog_empty),
        .I1(empty),
        .I2(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h01FF)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[8] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .I4(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ),
        .Q(prog_empty),
        .S(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[2]),
        .Q(diff_pntr_pf_q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[3]),
        .Q(diff_pntr_pf_q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[4]),
        .Q(diff_pntr_pf_q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[5]),
        .Q(diff_pntr_pf_q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[6]),
        .Q(diff_pntr_pf_q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[7]),
        .Q(diff_pntr_pf_q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[8]),
        .Q(diff_pntr_pf_q[8]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[9]),
        .Q(diff_pntr_pf_q[9]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1_inst_n_1),
        .Q(prog_full),
        .S(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.ram_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i0),
        .Q(ram_empty_i),
        .S(rd_rst_busy));
  (* ADDR_WIDTH_A = "9" *) 
  (* ADDR_WIDTH_B = "9" *) 
  (* AUTO_SLEEP_TIME = "0" *) 
  (* BYTE_WRITE_WIDTH_A = "38" *) 
  (* BYTE_WRITE_WIDTH_B = "38" *) 
  (* CASCADE_HEIGHT = "0" *) 
  (* CLOCKING_MODE = "1" *) 
  (* ECC_BIT_RANGE = "[7:0]" *) 
  (* ECC_MODE = "0" *) 
  (* ECC_TYPE = "NONE" *) 
  (* IGNORE_INIT_SYNTH = "0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* MAX_NUM_CHAR = "0" *) 
  (* \MEM.ADDRESS_SPACE  *) 
  (* \MEM.ADDRESS_SPACE_BEGIN  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_LSB  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_MSB  = "36" *) 
  (* \MEM.ADDRESS_SPACE_END  = "511" *) 
  (* \MEM.CORE_MEMORY_WIDTH  = "37" *) 
  (* MEMORY_INIT_FILE = "none" *) 
  (* MEMORY_INIT_PARAM = "" *) 
  (* MEMORY_OPTIMIZATION = "true" *) 
  (* MEMORY_PRIMITIVE = "2" *) 
  (* MEMORY_SIZE = "19456" *) 
  (* MEMORY_TYPE = "1" *) 
  (* MESSAGE_CONTROL = "0" *) 
  (* NUM_CHAR_LOC = "0" *) 
  (* P_ECC_MODE = "no_ecc" *) 
  (* P_ENABLE_BYTE_WRITE_A = "0" *) 
  (* P_ENABLE_BYTE_WRITE_B = "0" *) 
  (* P_MAX_DEPTH_DATA = "512" *) 
  (* P_MEMORY_OPT = "yes" *) 
  (* P_MEMORY_PRIMITIVE = "block" *) 
  (* P_MIN_WIDTH_DATA = "38" *) 
  (* P_MIN_WIDTH_DATA_A = "38" *) 
  (* P_MIN_WIDTH_DATA_B = "38" *) 
  (* P_MIN_WIDTH_DATA_ECC = "38" *) 
  (* P_MIN_WIDTH_DATA_LDW = "4" *) 
  (* P_MIN_WIDTH_DATA_SHFT = "38" *) 
  (* P_NUM_COLS_WRITE_A = "1" *) 
  (* P_NUM_COLS_WRITE_B = "1" *) 
  (* P_NUM_ROWS_READ_A = "1" *) 
  (* P_NUM_ROWS_READ_B = "1" *) 
  (* P_NUM_ROWS_WRITE_A = "1" *) 
  (* P_NUM_ROWS_WRITE_B = "1" *) 
  (* P_SDP_WRITE_MODE = "no" *) 
  (* P_WIDTH_ADDR_LSB_READ_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) 
  (* P_WIDTH_ADDR_READ_A = "9" *) 
  (* P_WIDTH_ADDR_READ_B = "9" *) 
  (* P_WIDTH_ADDR_WRITE_A = "9" *) 
  (* P_WIDTH_ADDR_WRITE_B = "9" *) 
  (* P_WIDTH_COL_WRITE_A = "38" *) 
  (* P_WIDTH_COL_WRITE_B = "38" *) 
  (* RAM_DECOMP = "auto" *) 
  (* READ_DATA_WIDTH_A = "38" *) 
  (* READ_DATA_WIDTH_B = "38" *) 
  (* READ_LATENCY_A = "2" *) 
  (* READ_LATENCY_B = "2" *) 
  (* READ_RESET_VALUE_A = "0" *) 
  (* READ_RESET_VALUE_B = "0" *) 
  (* RST_MODE_A = "SYNC" *) 
  (* RST_MODE_B = "SYNC" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_EMBEDDED_CONSTRAINT = "0" *) 
  (* USE_MEM_INIT = "0" *) 
  (* USE_MEM_INIT_MMI = "0" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH_A = "38" *) 
  (* WRITE_DATA_WIDTH_B = "38" *) 
  (* WRITE_MODE_A = "2" *) 
  (* WRITE_MODE_B = "2" *) 
  (* WRITE_PROTECT = "1" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* rsta_loop_iter = "40" *) 
  (* rstb_loop_iter = "40" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_memory_base__parameterized0 \gen_sdpram.xpm_memory_base_inst 
       (.addra(wr_pntr_ext[8:0]),
        .addrb(rd_pntr_ext),
        .clka(wr_clk),
        .clkb(rd_clk),
        .dbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ),
        .dbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ),
        .dina({din[37:1],1'b0}),
        .dinb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .douta(\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED [37:0]),
        .doutb({\^dout ,\NLW_gen_sdpram.xpm_memory_base_inst_doutb_UNCONNECTED [0]}),
        .ena(1'b0),
        .enb(ram_rd_en_i),
        .injectdbiterra(1'b0),
        .injectdbiterrb(1'b0),
        .injectsbiterra(1'b0),
        .injectsbiterrb(1'b0),
        .regcea(1'b0),
        .regceb(\gen_fwft.ram_regout_en ),
        .rsta(1'b0),
        .rstb(rd_rst_busy),
        .sbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ),
        .sbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ),
        .sleep(sleep),
        .wea(wr_pntr_plus1_pf_carry),
        .web(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair344" *) 
  LUT3 #(
    .INIT(8'h2C)) 
    \gen_sdpram.xpm_memory_base_inst_i_3 
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .O(\gen_fwft.ram_regout_en ));
  FDRE #(
    .INIT(1'b0)) 
    \gof.overflow_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(overflow_i0),
        .Q(overflow),
        .R(1'b0));
  FDRE \grdc.rd_data_count_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q(rd_data_count[0]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(rd_data_count[1]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [3]),
        .Q(rd_data_count[2]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [4]),
        .Q(rd_data_count[3]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [5]),
        .Q(rd_data_count[4]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [6]),
        .Q(rd_data_count[5]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [7]),
        .Q(rd_data_count[6]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [8]),
        .Q(rd_data_count[7]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[9] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [9]),
        .Q(rd_data_count[8]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \guf.underflow_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(underflow_i0),
        .Q(underflow),
        .R(1'b0));
  FDRE \gwdc.wr_data_count_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [1]),
        .Q(wr_data_count[0]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [2]),
        .Q(wr_data_count[1]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [3]),
        .Q(wr_data_count[2]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [4]),
        .Q(wr_data_count[3]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [5]),
        .Q(wr_data_count[4]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [6]),
        .Q(wr_data_count[5]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [7]),
        .Q(wr_data_count[6]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [8]),
        .Q(wr_data_count[7]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[9] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [9]),
        .Q(wr_data_count[8]),
        .R(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized3 rdp_inst
       (.D(\grdc.diff_wr_rd_pntr_rdc ),
        .DI({\gen_cdc_pntr.wpr_gray_reg_dc_n_0 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_1 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_2 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_5 ,\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .Q({rdp_inst_n_0,rd_pntr_ext}),
        .S(\gen_cdc_pntr.wpr_gray_reg_dc_n_16 ),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\count_value_i_reg[1]_0 (rdp_inst_n_21),
        .\count_value_i_reg[7]_0 ({rdp_inst_n_31,rdp_inst_n_32,rdp_inst_n_33,rdp_inst_n_34,rdp_inst_n_35,rdp_inst_n_36,rdp_inst_n_37,rdp_inst_n_38}),
        .\count_value_i_reg[9]_0 (rd_rst_busy),
        .\gen_pf_ic_rc.ram_empty_i_reg ({\gen_cdc_pntr.wpr_gray_reg_n_0 ,\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .\grdc.rd_data_count_i_reg[7] (count_value_i),
        .\grdc.rd_data_count_i_reg[9] (\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ),
        .\grdc.rd_data_count_i_reg[9]_0 ({\gen_cdc_pntr.wpr_gray_reg_dc_n_6 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_7 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 }),
        .ram_empty_i(ram_empty_i),
        .ram_rd_en_i(ram_rd_en_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[7] (rdp_inst_n_11),
        .src_in_bin(src_in_bin00_out[9:1]));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized4 rdpp1_inst
       (.E(ram_rd_en_i),
        .Q(curr_fwft_state),
        .\count_value_i_reg[0]_0 (rd_rst_busy),
        .\gen_pf_ic_rc.ram_empty_i_reg (rdp_inst_n_21),
        .\gen_pf_ic_rc.ram_empty_i_reg_0 (rdp_inst_n_11),
        .\gen_pf_ic_rc.ram_empty_i_reg_1 ({\gen_cdc_pntr.wpr_gray_reg_n_0 ,\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .ram_empty_i(ram_empty_i),
        .ram_empty_i0(ram_empty_i0),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_bit rst_d1_inst
       (.Q(diff_pntr_pf_q),
        .clr_full(clr_full),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] (rst_d1_inst_n_1),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg (full),
        .overflow_i0(overflow_i0),
        .prog_full(prog_full),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized3_3 wrp_inst
       (.D(\gwdc.diff_wr_rd_pntr1_out ),
        .Q(wr_pntr_ext),
        .\count_value_i_reg[5]_0 (full),
        .\gwdc.wr_data_count_i_reg[9] ({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_9 }),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized4_4 wrpp1_inst
       (.D(diff_pntr_pf_q0),
        .Q(wr_pntr_plus1_pf),
        .\count_value_i_reg[5]_0 (full),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] (rd_pntr_wr),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized5 wrpp2_inst
       (.Q({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7,wrpp2_inst_n_8}),
        .\count_value_i_reg[5]_0 (full),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_rst__xdcDup__3 xpm_fifo_rst_inst
       (.\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] (\grdc.rd_data_count_i0 ),
        .Q(curr_fwft_state),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[8] (full),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_0 (rd_rst_busy),
        .\guf.underflow_i_reg (empty),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .rst_d1(rst_d1),
        .underflow_i0(underflow_i0),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wr_rst_busy(wr_rst_busy),
        .wrst_busy(wrst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_DEST_SYNC_FF = "3" *) (* COMMON_CLOCK = "0" *) 
(* DOUT_RESET_VALUE = "0" *) (* ECC_MODE = "0" *) (* ENABLE_ECC = "0" *) 
(* EN_ADV_FEATURE = "16'b0000011100000111" *) (* EN_AE = "1'b0" *) (* EN_AF = "1'b0" *) 
(* EN_DVLD = "1'b0" *) (* EN_OF = "1'b1" *) (* EN_PE = "1'b1" *) 
(* EN_PF = "1'b1" *) (* EN_RDC = "1'b1" *) (* EN_UF = "1'b1" *) 
(* EN_WACK = "1'b0" *) (* EN_WDC = "1'b1" *) (* FG_EQ_ASYM_DOUT = "1'b0" *) 
(* FIFO_MEMORY_TYPE = "2" *) (* FIFO_MEM_TYPE = "2" *) (* FIFO_READ_DEPTH = "512" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_SIZE = "18432" *) (* FIFO_WRITE_DEPTH = "512" *) 
(* FULL_RESET_VALUE = "1" *) (* FULL_RST_VAL = "1'b1" *) (* ORIG_REF_NAME = "xpm_fifo_base" *) 
(* PE_THRESH_ADJ = "8" *) (* PE_THRESH_MAX = "507" *) (* PE_THRESH_MIN = "5" *) 
(* PF_THRESH_ADJ = "382" *) (* PF_THRESH_MAX = "507" *) (* PF_THRESH_MIN = "8" *) 
(* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "384" *) (* RD_DATA_COUNT_WIDTH = "9" *) 
(* RD_DC_WIDTH_EXT = "10" *) (* RD_LATENCY = "2" *) (* RD_MODE = "1" *) 
(* RD_PNTR_WIDTH = "9" *) (* READ_DATA_WIDTH = "36" *) (* READ_MODE = "1" *) 
(* READ_MODE_LL = "1" *) (* RELATED_CLOCKS = "0" *) (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WIDTH_RATIO = "1" *) (* WRITE_DATA_WIDTH = "36" *) 
(* WR_DATA_COUNT_WIDTH = "9" *) (* WR_DC_WIDTH_EXT = "10" *) (* WR_DEPTH_LOG = "9" *) 
(* WR_PNTR_WIDTH = "9" *) (* WR_RD_RATIO = "0" *) (* WR_WIDTH_LOG = "6" *) 
(* XPM_MODULE = "TRUE" *) (* both_stages_valid = "3" *) (* invalid = "0" *) 
(* keep_hierarchy = "soft" *) (* stage1_valid = "2" *) (* stage2_valid = "1" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_base__parameterized1
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    full_n,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [35:0]din;
  output full;
  output full_n;
  output prog_full;
  output [8:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [35:0]dout;
  output empty;
  output prog_empty;
  output [8:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire clr_full;
  wire [1:0]count_value_i;
  wire [1:0]curr_fwft_state;
  wire [8:0]diff_pntr_pe;
  wire [9:2]diff_pntr_pf_q;
  wire [9:2]diff_pntr_pf_q0;
  wire [35:0]din;
  wire [35:0]dout;
  wire empty;
  wire empty_fwft_i0;
  wire full;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_0 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_7 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_9 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_9 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_0 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_10 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_11 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_12 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_13 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_14 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_15 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_16 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_7 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_9 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_0 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_7 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_8 ;
  wire \gen_fwft.count_rst ;
  wire \gen_fwft.ram_regout_en ;
  wire \gen_fwft.rdpp1_inst_n_3 ;
  wire \gen_fwft.rdpp1_inst_n_4 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[8] ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ;
  wire [9:1]\grdc.diff_wr_rd_pntr_rdc ;
  wire \grdc.rd_data_count_i0 ;
  wire [9:1]\gwdc.diff_wr_rd_pntr1_out ;
  wire [1:0]next_fwft_state__0;
  wire overflow;
  wire overflow_i0;
  wire prog_empty;
  wire prog_full;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire ram_rd_en_i;
  wire rd_clk;
  wire [8:0]rd_data_count;
  wire rd_en;
  wire [8:0]rd_pntr_ext;
  wire [8:0]rd_pntr_wr;
  wire [8:0]rd_pntr_wr_cdc;
  wire [9:0]rd_pntr_wr_cdc_dc;
  wire rd_rst_busy;
  wire rdp_inst_n_0;
  wire rdp_inst_n_11;
  wire rdp_inst_n_21;
  wire rdp_inst_n_31;
  wire rdp_inst_n_32;
  wire rdp_inst_n_33;
  wire rdp_inst_n_34;
  wire rdp_inst_n_35;
  wire rdp_inst_n_36;
  wire rdp_inst_n_37;
  wire rdp_inst_n_38;
  wire rst;
  wire rst_d1;
  wire rst_d1_inst_n_1;
  wire sleep;
  wire [9:0]src_in_bin00_out;
  wire underflow;
  wire underflow_i0;
  wire wr_clk;
  wire [8:0]wr_data_count;
  wire wr_en;
  wire [9:0]wr_pntr_ext;
  wire [9:1]wr_pntr_plus1_pf;
  wire wr_pntr_plus1_pf_carry;
  wire [8:0]wr_pntr_rd_cdc;
  wire [9:0]wr_pntr_rd_cdc_dc;
  wire wr_rst_busy;
  wire wrpp2_inst_n_0;
  wire wrpp2_inst_n_1;
  wire wrpp2_inst_n_2;
  wire wrpp2_inst_n_3;
  wire wrpp2_inst_n_4;
  wire wrpp2_inst_n_5;
  wire wrpp2_inst_n_6;
  wire wrpp2_inst_n_7;
  wire wrpp2_inst_n_8;
  wire wrst_busy;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ;
  wire [35:0]\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign full_n = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  (* SOFT_HLUTNM = "soft_lutpair291" *) 
  LUT4 #(
    .INIT(16'h69A1)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[0]_i_1 
       (.I0(ram_empty_i),
        .I1(curr_fwft_state[1]),
        .I2(curr_fwft_state[0]),
        .I3(rd_en),
        .O(next_fwft_state__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair291" *) 
  LUT4 #(
    .INIT(16'h3FF0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[1]_i_1 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(curr_fwft_state[0]),
        .I3(curr_fwft_state[1]),
        .O(next_fwft_state__0[1]));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[0]),
        .Q(curr_fwft_state[0]),
        .R(rd_rst_busy));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[1]),
        .Q(curr_fwft_state[1]),
        .R(rd_rst_busy));
  GND GND
       (.G(\<const0> ));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "10" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized3 \gen_cdc_pntr.rd_pntr_cdc_dc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc_dc),
        .src_clk(rd_clk),
        .src_in_bin(src_in_bin00_out));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized1__12 \gen_cdc_pntr.rd_pntr_cdc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc),
        .src_clk(rd_clk),
        .src_in_bin(rd_pntr_ext));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized0_5 \gen_cdc_pntr.rpw_gray_reg 
       (.D(rd_pntr_wr_cdc),
        .Q(rd_pntr_wr),
        .clr_full(clr_full),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 ({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7,wrpp2_inst_n_8}),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg (wr_pntr_plus1_pf),
        .\reg_out_i_reg[0]_0 (\gen_cdc_pntr.rpw_gray_reg_n_9 ),
        .wr_clk(wr_clk),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized1_6 \gen_cdc_pntr.rpw_gray_reg_dc 
       (.D(rd_pntr_wr_cdc_dc),
        .Q({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_9 }),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized0_7 \gen_cdc_pntr.wpr_gray_reg 
       (.D(diff_pntr_pe),
        .Q(curr_fwft_state),
        .S({rdp_inst_n_31,rdp_inst_n_32,rdp_inst_n_33,rdp_inst_n_34,rdp_inst_n_35,rdp_inst_n_36,rdp_inst_n_37,rdp_inst_n_38}),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] (rd_pntr_ext[8]),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[0]_0 (rd_rst_busy),
        .\reg_out_i_reg[8]_0 ({\gen_cdc_pntr.wpr_gray_reg_n_0 ,\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .\reg_out_i_reg[8]_1 (wr_pntr_rd_cdc));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized1_8 \gen_cdc_pntr.wpr_gray_reg_dc 
       (.D(wr_pntr_rd_cdc_dc),
        .DI({\gen_cdc_pntr.wpr_gray_reg_dc_n_0 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_1 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_2 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_5 }),
        .Q({\gen_cdc_pntr.wpr_gray_reg_dc_n_6 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_7 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 }),
        .S(\gen_cdc_pntr.wpr_gray_reg_dc_n_16 ),
        .\grdc.rd_data_count_i_reg[7] (count_value_i[1]),
        .\grdc.rd_data_count_i_reg[9] ({rdp_inst_n_0,rd_pntr_ext[8:1]}),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[7]_0 (\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ),
        .\reg_out_i_reg[9]_0 (rd_rst_busy));
  (* DEST_SYNC_FF = "5" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "10" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized2 \gen_cdc_pntr.wr_pntr_cdc_dc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc_dc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized1__11 \gen_cdc_pntr.wr_pntr_cdc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext[8:0]));
  (* SOFT_HLUTNM = "soft_lutpair290" *) 
  LUT4 #(
    .INIT(16'hE0CC)) 
    \gen_fwft.empty_fwft_i_i_1 
       (.I0(rd_en),
        .I1(empty),
        .I2(curr_fwft_state[1]),
        .I3(curr_fwft_state[0]),
        .O(empty_fwft_i0));
  FDSE #(
    .INIT(1'b1)) 
    \gen_fwft.empty_fwft_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .Q(empty),
        .S(rd_rst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn_9 \gen_fwft.rdpp1_inst 
       (.DI({\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .Q(count_value_i),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\src_gray_ff_reg[0] (rd_pntr_ext[0]),
        .src_in_bin(src_in_bin00_out[0]));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_cdc_pntr.rpw_gray_reg_n_9 ),
        .Q(full),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[0]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[1]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[2]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[3]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[4]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[5]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[6]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[7]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[8]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[8] ),
        .R(rd_rst_busy));
  LUT4 #(
    .INIT(16'h88B8)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1 
       (.I0(prog_empty),
        .I1(empty),
        .I2(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h01FF)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[8] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .I4(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ),
        .Q(prog_empty),
        .S(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[2]),
        .Q(diff_pntr_pf_q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[3]),
        .Q(diff_pntr_pf_q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[4]),
        .Q(diff_pntr_pf_q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[5]),
        .Q(diff_pntr_pf_q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[6]),
        .Q(diff_pntr_pf_q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[7]),
        .Q(diff_pntr_pf_q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[8]),
        .Q(diff_pntr_pf_q[8]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[9]),
        .Q(diff_pntr_pf_q[9]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1_inst_n_1),
        .Q(prog_full),
        .S(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.ram_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i0),
        .Q(ram_empty_i),
        .S(rd_rst_busy));
  (* ADDR_WIDTH_A = "9" *) 
  (* ADDR_WIDTH_B = "9" *) 
  (* AUTO_SLEEP_TIME = "0" *) 
  (* BYTE_WRITE_WIDTH_A = "36" *) 
  (* BYTE_WRITE_WIDTH_B = "36" *) 
  (* CASCADE_HEIGHT = "0" *) 
  (* CLOCKING_MODE = "1" *) 
  (* ECC_BIT_RANGE = "[7:0]" *) 
  (* ECC_MODE = "0" *) 
  (* ECC_TYPE = "NONE" *) 
  (* IGNORE_INIT_SYNTH = "0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* MAX_NUM_CHAR = "0" *) 
  (* \MEM.ADDRESS_SPACE  *) 
  (* \MEM.ADDRESS_SPACE_BEGIN  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_LSB  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_MSB  = "35" *) 
  (* \MEM.ADDRESS_SPACE_END  = "511" *) 
  (* \MEM.CORE_MEMORY_WIDTH  = "36" *) 
  (* MEMORY_INIT_FILE = "none" *) 
  (* MEMORY_INIT_PARAM = "" *) 
  (* MEMORY_OPTIMIZATION = "true" *) 
  (* MEMORY_PRIMITIVE = "2" *) 
  (* MEMORY_SIZE = "18432" *) 
  (* MEMORY_TYPE = "1" *) 
  (* MESSAGE_CONTROL = "0" *) 
  (* NUM_CHAR_LOC = "0" *) 
  (* P_ECC_MODE = "no_ecc" *) 
  (* P_ENABLE_BYTE_WRITE_A = "0" *) 
  (* P_ENABLE_BYTE_WRITE_B = "0" *) 
  (* P_MAX_DEPTH_DATA = "512" *) 
  (* P_MEMORY_OPT = "yes" *) 
  (* P_MEMORY_PRIMITIVE = "block" *) 
  (* P_MIN_WIDTH_DATA = "36" *) 
  (* P_MIN_WIDTH_DATA_A = "36" *) 
  (* P_MIN_WIDTH_DATA_B = "36" *) 
  (* P_MIN_WIDTH_DATA_ECC = "36" *) 
  (* P_MIN_WIDTH_DATA_LDW = "4" *) 
  (* P_MIN_WIDTH_DATA_SHFT = "36" *) 
  (* P_NUM_COLS_WRITE_A = "1" *) 
  (* P_NUM_COLS_WRITE_B = "1" *) 
  (* P_NUM_ROWS_READ_A = "1" *) 
  (* P_NUM_ROWS_READ_B = "1" *) 
  (* P_NUM_ROWS_WRITE_A = "1" *) 
  (* P_NUM_ROWS_WRITE_B = "1" *) 
  (* P_SDP_WRITE_MODE = "no" *) 
  (* P_WIDTH_ADDR_LSB_READ_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) 
  (* P_WIDTH_ADDR_READ_A = "9" *) 
  (* P_WIDTH_ADDR_READ_B = "9" *) 
  (* P_WIDTH_ADDR_WRITE_A = "9" *) 
  (* P_WIDTH_ADDR_WRITE_B = "9" *) 
  (* P_WIDTH_COL_WRITE_A = "36" *) 
  (* P_WIDTH_COL_WRITE_B = "36" *) 
  (* RAM_DECOMP = "auto" *) 
  (* READ_DATA_WIDTH_A = "36" *) 
  (* READ_DATA_WIDTH_B = "36" *) 
  (* READ_LATENCY_A = "2" *) 
  (* READ_LATENCY_B = "2" *) 
  (* READ_RESET_VALUE_A = "0" *) 
  (* READ_RESET_VALUE_B = "0" *) 
  (* RST_MODE_A = "SYNC" *) 
  (* RST_MODE_B = "SYNC" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_EMBEDDED_CONSTRAINT = "0" *) 
  (* USE_MEM_INIT = "0" *) 
  (* USE_MEM_INIT_MMI = "0" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH_A = "36" *) 
  (* WRITE_DATA_WIDTH_B = "36" *) 
  (* WRITE_MODE_A = "2" *) 
  (* WRITE_MODE_B = "2" *) 
  (* WRITE_PROTECT = "1" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* rsta_loop_iter = "36" *) 
  (* rstb_loop_iter = "36" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_memory_base__parameterized1 \gen_sdpram.xpm_memory_base_inst 
       (.addra(wr_pntr_ext[8:0]),
        .addrb(rd_pntr_ext),
        .clka(wr_clk),
        .clkb(rd_clk),
        .dbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ),
        .dbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ),
        .dina(din),
        .dinb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .douta(\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED [35:0]),
        .doutb(dout),
        .ena(1'b0),
        .enb(ram_rd_en_i),
        .injectdbiterra(1'b0),
        .injectdbiterrb(1'b0),
        .injectsbiterra(1'b0),
        .injectsbiterrb(1'b0),
        .regcea(1'b0),
        .regceb(\gen_fwft.ram_regout_en ),
        .rsta(1'b0),
        .rstb(rd_rst_busy),
        .sbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ),
        .sbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ),
        .sleep(sleep),
        .wea(wr_pntr_plus1_pf_carry),
        .web(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair290" *) 
  LUT3 #(
    .INIT(8'h2C)) 
    \gen_sdpram.xpm_memory_base_inst_i_3 
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .O(\gen_fwft.ram_regout_en ));
  FDRE #(
    .INIT(1'b0)) 
    \gof.overflow_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(overflow_i0),
        .Q(overflow),
        .R(1'b0));
  FDRE \grdc.rd_data_count_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q(rd_data_count[0]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(rd_data_count[1]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [3]),
        .Q(rd_data_count[2]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [4]),
        .Q(rd_data_count[3]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [5]),
        .Q(rd_data_count[4]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [6]),
        .Q(rd_data_count[5]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [7]),
        .Q(rd_data_count[6]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [8]),
        .Q(rd_data_count[7]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[9] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [9]),
        .Q(rd_data_count[8]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \guf.underflow_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(underflow_i0),
        .Q(underflow),
        .R(1'b0));
  FDRE \gwdc.wr_data_count_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [1]),
        .Q(wr_data_count[0]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [2]),
        .Q(wr_data_count[1]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [3]),
        .Q(wr_data_count[2]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [4]),
        .Q(wr_data_count[3]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [5]),
        .Q(wr_data_count[4]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [6]),
        .Q(wr_data_count[5]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [7]),
        .Q(wr_data_count[6]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [8]),
        .Q(wr_data_count[7]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[9] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [9]),
        .Q(wr_data_count[8]),
        .R(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized3_10 rdp_inst
       (.D(\grdc.diff_wr_rd_pntr_rdc ),
        .DI({\gen_cdc_pntr.wpr_gray_reg_dc_n_0 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_1 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_2 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_5 ,\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .Q({rdp_inst_n_0,rd_pntr_ext}),
        .S(\gen_cdc_pntr.wpr_gray_reg_dc_n_16 ),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\count_value_i_reg[1]_0 (rdp_inst_n_21),
        .\count_value_i_reg[7]_0 ({rdp_inst_n_31,rdp_inst_n_32,rdp_inst_n_33,rdp_inst_n_34,rdp_inst_n_35,rdp_inst_n_36,rdp_inst_n_37,rdp_inst_n_38}),
        .\count_value_i_reg[9]_0 (rd_rst_busy),
        .\gen_pf_ic_rc.ram_empty_i_reg ({\gen_cdc_pntr.wpr_gray_reg_n_0 ,\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .\grdc.rd_data_count_i_reg[7] (count_value_i),
        .\grdc.rd_data_count_i_reg[9] (\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ),
        .\grdc.rd_data_count_i_reg[9]_0 ({\gen_cdc_pntr.wpr_gray_reg_dc_n_6 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_7 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 }),
        .ram_empty_i(ram_empty_i),
        .ram_rd_en_i(ram_rd_en_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[7] (rdp_inst_n_11),
        .src_in_bin(src_in_bin00_out[9:1]));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized4_11 rdpp1_inst
       (.E(ram_rd_en_i),
        .Q(curr_fwft_state),
        .\count_value_i_reg[0]_0 (rd_rst_busy),
        .\gen_pf_ic_rc.ram_empty_i_reg (rdp_inst_n_21),
        .\gen_pf_ic_rc.ram_empty_i_reg_0 (rdp_inst_n_11),
        .\gen_pf_ic_rc.ram_empty_i_reg_1 ({\gen_cdc_pntr.wpr_gray_reg_n_0 ,\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .ram_empty_i(ram_empty_i),
        .ram_empty_i0(ram_empty_i0),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_bit_12 rst_d1_inst
       (.Q(diff_pntr_pf_q),
        .clr_full(clr_full),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] (rst_d1_inst_n_1),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg (full),
        .overflow_i0(overflow_i0),
        .prog_full(prog_full),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized3_13 wrp_inst
       (.D(\gwdc.diff_wr_rd_pntr1_out ),
        .Q(wr_pntr_ext),
        .\count_value_i_reg[5]_0 (full),
        .\gwdc.wr_data_count_i_reg[9] ({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_9 }),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized4_14 wrpp1_inst
       (.D(diff_pntr_pf_q0),
        .Q(wr_pntr_plus1_pf),
        .\count_value_i_reg[5]_0 (full),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] (rd_pntr_wr),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized5_15 wrpp2_inst
       (.Q({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7,wrpp2_inst_n_8}),
        .\count_value_i_reg[5]_0 (full),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_rst__xdcDup__4 xpm_fifo_rst_inst
       (.\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] (\grdc.rd_data_count_i0 ),
        .Q(curr_fwft_state),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[8] (full),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_0 (rd_rst_busy),
        .\guf.underflow_i_reg (empty),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .rst_d1(rst_d1),
        .underflow_i0(underflow_i0),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wr_rst_busy(wr_rst_busy),
        .wrst_busy(wrst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_DEST_SYNC_FF = "3" *) (* COMMON_CLOCK = "0" *) 
(* DOUT_RESET_VALUE = "0" *) (* ECC_MODE = "0" *) (* ENABLE_ECC = "0" *) 
(* EN_ADV_FEATURE = "16'b0000011100000111" *) (* EN_AE = "1'b0" *) (* EN_AF = "1'b0" *) 
(* EN_DVLD = "1'b0" *) (* EN_OF = "1'b1" *) (* EN_PE = "1'b1" *) 
(* EN_PF = "1'b1" *) (* EN_RDC = "1'b1" *) (* EN_UF = "1'b1" *) 
(* EN_WACK = "1'b0" *) (* EN_WDC = "1'b1" *) (* FG_EQ_ASYM_DOUT = "1'b0" *) 
(* FIFO_MEMORY_TYPE = "1" *) (* FIFO_MEM_TYPE = "1" *) (* FIFO_READ_DEPTH = "256" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_SIZE = "768" *) (* FIFO_WRITE_DEPTH = "256" *) 
(* FULL_RESET_VALUE = "1" *) (* FULL_RST_VAL = "1'b1" *) (* ORIG_REF_NAME = "xpm_fifo_base" *) 
(* PE_THRESH_ADJ = "8" *) (* PE_THRESH_MAX = "251" *) (* PE_THRESH_MIN = "5" *) 
(* PF_THRESH_ADJ = "126" *) (* PF_THRESH_MAX = "251" *) (* PF_THRESH_MIN = "8" *) 
(* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "128" *) (* RD_DATA_COUNT_WIDTH = "8" *) 
(* RD_DC_WIDTH_EXT = "9" *) (* RD_LATENCY = "2" *) (* RD_MODE = "1" *) 
(* RD_PNTR_WIDTH = "8" *) (* READ_DATA_WIDTH = "3" *) (* READ_MODE = "1" *) 
(* READ_MODE_LL = "1" *) (* RELATED_CLOCKS = "0" *) (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WIDTH_RATIO = "1" *) (* WRITE_DATA_WIDTH = "3" *) 
(* WR_DATA_COUNT_WIDTH = "8" *) (* WR_DC_WIDTH_EXT = "9" *) (* WR_DEPTH_LOG = "8" *) 
(* WR_PNTR_WIDTH = "8" *) (* WR_RD_RATIO = "0" *) (* WR_WIDTH_LOG = "2" *) 
(* XPM_MODULE = "TRUE" *) (* both_stages_valid = "3" *) (* invalid = "0" *) 
(* keep_hierarchy = "soft" *) (* stage1_valid = "2" *) (* stage2_valid = "1" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_base__parameterized2
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    full_n,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [2:0]din;
  output full;
  output full_n;
  output prog_full;
  output [7:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [2:0]dout;
  output empty;
  output prog_empty;
  output [7:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [1:0]count_value_i;
  wire [1:0]curr_fwft_state;
  wire [7:0]diff_pntr_pe;
  wire [8:2]diff_pntr_pf_q;
  wire [8:2]diff_pntr_pf_q0;
  wire [2:0]din;
  wire [2:0]dout;
  wire empty;
  wire empty_fwft_i0;
  wire full;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_0 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_7 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_10 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_11 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_12 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_13 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_14 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_15 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_16 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_9 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_7 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_8 ;
  wire \gen_fwft.count_rst ;
  wire \gen_fwft.ram_regout_en ;
  wire \gen_fwft.rdpp1_inst_n_3 ;
  wire \gen_fwft.rdpp1_inst_n_4 ;
  wire \gen_fwft.rdpp1_inst_n_5 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ;
  wire [8:1]\grdc.diff_wr_rd_pntr_rdc ;
  wire \grdc.rd_data_count_i0 ;
  wire [8:1]\gwdc.diff_wr_rd_pntr1_out ;
  wire [1:0]next_fwft_state__0;
  wire overflow;
  wire overflow_i0;
  wire prog_empty;
  wire prog_full;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire [7:0]rd_data_count;
  wire rd_en;
  wire [7:0]rd_pntr_ext;
  wire [7:0]rd_pntr_wr;
  wire [7:0]rd_pntr_wr_cdc;
  wire [8:0]rd_pntr_wr_cdc_dc;
  wire rd_rst_busy;
  wire rdp_inst_n_10;
  wire rdp_inst_n_19;
  wire rdp_inst_n_20;
  wire rdp_inst_n_21;
  wire rdp_inst_n_22;
  wire rdp_inst_n_23;
  wire rdp_inst_n_24;
  wire rdp_inst_n_25;
  wire rdp_inst_n_26;
  wire rdp_inst_n_27;
  wire rdp_inst_n_28;
  wire rdp_inst_n_29;
  wire rdp_inst_n_30;
  wire rdp_inst_n_31;
  wire rdp_inst_n_8;
  wire rdp_inst_n_9;
  wire rdpp1_inst_n_0;
  wire rdpp1_inst_n_1;
  wire rdpp1_inst_n_2;
  wire rdpp1_inst_n_3;
  wire rdpp1_inst_n_4;
  wire rdpp1_inst_n_5;
  wire rdpp1_inst_n_6;
  wire rdpp1_inst_n_7;
  wire rst;
  wire rst_d1;
  wire rst_d1_inst_n_1;
  wire sleep;
  wire [1:1]src_in_bin00_out;
  wire underflow;
  wire underflow_i0;
  wire wr_clk;
  wire [7:0]wr_data_count;
  wire wr_en;
  wire [8:0]wr_pntr_ext;
  wire [8:1]wr_pntr_plus1_pf;
  wire wr_pntr_plus1_pf_carry;
  wire [7:0]wr_pntr_rd_cdc;
  wire [8:0]wr_pntr_rd_cdc_dc;
  wire wr_rst_busy;
  wire wrpp2_inst_n_0;
  wire wrpp2_inst_n_1;
  wire wrpp2_inst_n_2;
  wire wrpp2_inst_n_3;
  wire wrpp2_inst_n_4;
  wire wrpp2_inst_n_5;
  wire wrpp2_inst_n_6;
  wire wrpp2_inst_n_7;
  wire wrst_busy;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ;
  wire [2:0]\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign full_n = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  (* SOFT_HLUTNM = "soft_lutpair238" *) 
  LUT4 #(
    .INIT(16'h6A85)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[0]_i_1 
       (.I0(curr_fwft_state[0]),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(ram_empty_i),
        .O(next_fwft_state__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair238" *) 
  LUT4 #(
    .INIT(16'h3FF0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[1]_i_1 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(curr_fwft_state[0]),
        .O(next_fwft_state__0[1]));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[0]),
        .Q(curr_fwft_state[0]),
        .R(rd_rst_busy));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[1]),
        .Q(curr_fwft_state[1]),
        .R(rd_rst_busy));
  GND GND
       (.G(\<const0> ));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized1 \gen_cdc_pntr.rd_pntr_cdc_dc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc_dc),
        .src_clk(rd_clk),
        .src_in_bin({rdp_inst_n_24,rdp_inst_n_25,rdp_inst_n_26,rdp_inst_n_27,rdp_inst_n_28,rdp_inst_n_29,rdp_inst_n_30,src_in_bin00_out,rdp_inst_n_31}));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "8" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray \gen_cdc_pntr.rd_pntr_cdc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc),
        .src_clk(rd_clk),
        .src_in_bin(rd_pntr_ext));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec \gen_cdc_pntr.rpw_gray_reg 
       (.D(rd_pntr_wr_cdc),
        .Q(wr_pntr_plus1_pf),
        .d_out_int_reg(\gen_cdc_pntr.rpw_gray_reg_n_8 ),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7}),
        .\reg_out_i_reg[7]_0 (rd_pntr_wr),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized0_18 \gen_cdc_pntr.rpw_gray_reg_dc 
       (.D(rd_pntr_wr_cdc_dc),
        .Q({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 }),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec_19 \gen_cdc_pntr.wpr_gray_reg 
       (.D(wr_pntr_rd_cdc),
        .Q(curr_fwft_state),
        .\gen_pf_ic_rc.ram_empty_i_reg (rd_pntr_ext),
        .\gen_pf_ic_rc.ram_empty_i_reg_0 ({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3,rdpp1_inst_n_4,rdpp1_inst_n_5,rdpp1_inst_n_6,rdpp1_inst_n_7}),
        .ram_empty_i(ram_empty_i),
        .ram_empty_i0(ram_empty_i0),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[0]_0 (rd_rst_busy),
        .\reg_out_i_reg[7]_0 ({\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized0_20 \gen_cdc_pntr.wpr_gray_reg_dc 
       (.D(\grdc.diff_wr_rd_pntr_rdc ),
        .DI({rdp_inst_n_9,\gen_fwft.rdpp1_inst_n_5 }),
        .Q({\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_16 }),
        .S({rdp_inst_n_19,rdp_inst_n_20,rdp_inst_n_21,rdp_inst_n_22,rdp_inst_n_23,\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .\grdc.rd_data_count_i_reg[7] (count_value_i[1]),
        .\grdc.rd_data_count_i_reg[7]_0 (rd_pntr_ext[6:1]),
        .\grdc.rd_data_count_i_reg[8] (rdp_inst_n_10),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[8]_0 (rd_rst_busy),
        .\reg_out_i_reg[8]_1 (wr_pntr_rd_cdc_dc));
  (* DEST_SYNC_FF = "5" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized0 \gen_cdc_pntr.wr_pntr_cdc_dc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc_dc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "8" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__10 \gen_cdc_pntr.wr_pntr_cdc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext[7:0]));
  (* SOFT_HLUTNM = "soft_lutpair237" *) 
  LUT4 #(
    .INIT(16'hF380)) 
    \gen_fwft.empty_fwft_i_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .I3(empty),
        .O(empty_fwft_i0));
  FDSE #(
    .INIT(1'b1)) 
    \gen_fwft.empty_fwft_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .Q(empty),
        .S(rd_rst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn_21 \gen_fwft.rdpp1_inst 
       (.DI(\gen_fwft.rdpp1_inst_n_5 ),
        .Q(count_value_i),
        .S({\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\grdc.rd_data_count_i_reg[7] (rd_pntr_ext[1:0]),
        .\grdc.rd_data_count_i_reg[7]_0 ({\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_16 }),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .src_in_bin(src_in_bin00_out));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_cdc_pntr.rpw_gray_reg_n_8 ),
        .Q(full),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[0]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[1]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[2]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[3]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[4]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[5]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[6]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[7]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .R(rd_rst_busy));
  LUT4 #(
    .INIT(16'h88B8)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1 
       (.I0(prog_empty),
        .I1(empty),
        .I2(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h01FF)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ),
        .Q(prog_empty),
        .S(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[2]),
        .Q(diff_pntr_pf_q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[3]),
        .Q(diff_pntr_pf_q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[4]),
        .Q(diff_pntr_pf_q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[5]),
        .Q(diff_pntr_pf_q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[6]),
        .Q(diff_pntr_pf_q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[7]),
        .Q(diff_pntr_pf_q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[8]),
        .Q(diff_pntr_pf_q[8]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1_inst_n_1),
        .Q(prog_full),
        .S(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.ram_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i0),
        .Q(ram_empty_i),
        .S(rd_rst_busy));
  (* ADDR_WIDTH_A = "8" *) 
  (* ADDR_WIDTH_B = "8" *) 
  (* AUTO_SLEEP_TIME = "0" *) 
  (* BYTE_WRITE_WIDTH_A = "3" *) 
  (* BYTE_WRITE_WIDTH_B = "3" *) 
  (* CASCADE_HEIGHT = "0" *) 
  (* CLOCKING_MODE = "1" *) 
  (* ECC_BIT_RANGE = "[7:0]" *) 
  (* ECC_MODE = "0" *) 
  (* ECC_TYPE = "NONE" *) 
  (* IGNORE_INIT_SYNTH = "0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* MAX_NUM_CHAR = "0" *) 
  (* MEMORY_INIT_FILE = "none" *) 
  (* MEMORY_INIT_PARAM = "" *) 
  (* MEMORY_OPTIMIZATION = "true" *) 
  (* MEMORY_PRIMITIVE = "1" *) 
  (* MEMORY_SIZE = "768" *) 
  (* MEMORY_TYPE = "1" *) 
  (* MESSAGE_CONTROL = "0" *) 
  (* NUM_CHAR_LOC = "0" *) 
  (* P_ECC_MODE = "no_ecc" *) 
  (* P_ENABLE_BYTE_WRITE_A = "0" *) 
  (* P_ENABLE_BYTE_WRITE_B = "0" *) 
  (* P_MAX_DEPTH_DATA = "256" *) 
  (* P_MEMORY_OPT = "yes" *) 
  (* P_MEMORY_PRIMITIVE = "distributed" *) 
  (* P_MIN_WIDTH_DATA = "3" *) 
  (* P_MIN_WIDTH_DATA_A = "3" *) 
  (* P_MIN_WIDTH_DATA_B = "3" *) 
  (* P_MIN_WIDTH_DATA_ECC = "3" *) 
  (* P_MIN_WIDTH_DATA_LDW = "3" *) 
  (* P_MIN_WIDTH_DATA_SHFT = "5" *) 
  (* P_NUM_COLS_WRITE_A = "1" *) 
  (* P_NUM_COLS_WRITE_B = "1" *) 
  (* P_NUM_ROWS_READ_A = "1" *) 
  (* P_NUM_ROWS_READ_B = "1" *) 
  (* P_NUM_ROWS_WRITE_A = "1" *) 
  (* P_NUM_ROWS_WRITE_B = "1" *) 
  (* P_SDP_WRITE_MODE = "yes" *) 
  (* P_WIDTH_ADDR_LSB_READ_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) 
  (* P_WIDTH_ADDR_READ_A = "8" *) 
  (* P_WIDTH_ADDR_READ_B = "8" *) 
  (* P_WIDTH_ADDR_WRITE_A = "8" *) 
  (* P_WIDTH_ADDR_WRITE_B = "8" *) 
  (* P_WIDTH_COL_WRITE_A = "3" *) 
  (* P_WIDTH_COL_WRITE_B = "3" *) 
  (* RAM_DECOMP = "auto" *) 
  (* READ_DATA_WIDTH_A = "3" *) 
  (* READ_DATA_WIDTH_B = "3" *) 
  (* READ_LATENCY_A = "2" *) 
  (* READ_LATENCY_B = "2" *) 
  (* READ_RESET_VALUE_A = "0" *) 
  (* READ_RESET_VALUE_B = "0" *) 
  (* RST_MODE_A = "SYNC" *) 
  (* RST_MODE_B = "SYNC" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_EMBEDDED_CONSTRAINT = "1" *) 
  (* USE_MEM_INIT = "0" *) 
  (* USE_MEM_INIT_MMI = "0" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH_A = "3" *) 
  (* WRITE_DATA_WIDTH_B = "3" *) 
  (* WRITE_MODE_A = "2" *) 
  (* WRITE_MODE_B = "1" *) 
  (* WRITE_PROTECT = "1" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* rsta_loop_iter = "4" *) 
  (* rstb_loop_iter = "4" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_memory_base__parameterized2 \gen_sdpram.xpm_memory_base_inst 
       (.addra(wr_pntr_ext[7:0]),
        .addrb(rd_pntr_ext),
        .clka(wr_clk),
        .clkb(rd_clk),
        .dbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ),
        .dbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ),
        .dina(din),
        .dinb({1'b0,1'b0,1'b0}),
        .douta(\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED [2:0]),
        .doutb(dout),
        .ena(wr_pntr_plus1_pf_carry),
        .enb(rdp_inst_n_8),
        .injectdbiterra(1'b0),
        .injectdbiterrb(1'b0),
        .injectsbiterra(1'b0),
        .injectsbiterrb(1'b0),
        .regcea(1'b0),
        .regceb(\gen_fwft.ram_regout_en ),
        .rsta(1'b0),
        .rstb(rd_rst_busy),
        .sbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ),
        .sbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ),
        .sleep(sleep),
        .wea(1'b0),
        .web(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair237" *) 
  LUT3 #(
    .INIT(8'h62)) 
    \gen_sdpram.xpm_memory_base_inst_i_3 
       (.I0(curr_fwft_state[0]),
        .I1(curr_fwft_state[1]),
        .I2(rd_en),
        .O(\gen_fwft.ram_regout_en ));
  FDRE #(
    .INIT(1'b0)) 
    \gof.overflow_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(overflow_i0),
        .Q(overflow),
        .R(1'b0));
  FDRE \grdc.rd_data_count_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q(rd_data_count[0]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(rd_data_count[1]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [3]),
        .Q(rd_data_count[2]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [4]),
        .Q(rd_data_count[3]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [5]),
        .Q(rd_data_count[4]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [6]),
        .Q(rd_data_count[5]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [7]),
        .Q(rd_data_count[6]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [8]),
        .Q(rd_data_count[7]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \guf.underflow_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(underflow_i0),
        .Q(underflow),
        .R(1'b0));
  FDRE \gwdc.wr_data_count_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [1]),
        .Q(wr_data_count[0]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [2]),
        .Q(wr_data_count[1]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [3]),
        .Q(wr_data_count[2]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [4]),
        .Q(wr_data_count[3]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [5]),
        .Q(wr_data_count[4]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [6]),
        .Q(wr_data_count[5]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [7]),
        .Q(wr_data_count[6]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [8]),
        .Q(wr_data_count[7]),
        .R(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized0 rdp_inst
       (.D(diff_pntr_pe),
        .DI(rdp_inst_n_9),
        .Q(rd_pntr_ext),
        .S({rdp_inst_n_19,rdp_inst_n_20,rdp_inst_n_21,rdp_inst_n_22,rdp_inst_n_23}),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\count_value_i_reg[7]_0 (rdp_inst_n_10),
        .\count_value_i_reg[8]_0 (rd_rst_busy),
        .enb(rdp_inst_n_8),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ({\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .\grdc.rd_data_count_i_reg[7] (count_value_i),
        .\grdc.rd_data_count_i_reg[8] ({\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_15 }),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .src_in_bin({rdp_inst_n_24,rdp_inst_n_25,rdp_inst_n_26,rdp_inst_n_27,rdp_inst_n_28,rdp_inst_n_29,rdp_inst_n_30,rdp_inst_n_31}));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized1 rdpp1_inst
       (.E(rdp_inst_n_8),
        .Q({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3,rdpp1_inst_n_4,rdpp1_inst_n_5,rdpp1_inst_n_6,rdpp1_inst_n_7}),
        .\count_value_i_reg[0]_0 (rd_rst_busy),
        .\count_value_i_reg[1]_0 (curr_fwft_state),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_bit_22 rst_d1_inst
       (.Q(diff_pntr_pf_q),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] (rst_d1_inst_n_1),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg (full),
        .overflow_i0(overflow_i0),
        .prog_full(prog_full),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized0_23 wrp_inst
       (.D(\gwdc.diff_wr_rd_pntr1_out ),
        .Q(wr_pntr_ext),
        .\count_value_i_reg[6]_0 (full),
        .\gwdc.wr_data_count_i_reg[8] ({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 }),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized1_24 wrpp1_inst
       (.D(diff_pntr_pf_q0),
        .Q(wr_pntr_plus1_pf),
        .\count_value_i_reg[6]_0 (full),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] (rd_pntr_wr),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized2 wrpp2_inst
       (.Q({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7}),
        .\count_value_i_reg[6]_0 (full),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_rst__xdcDup__5 xpm_fifo_rst_inst
       (.Q(curr_fwft_state),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[7] (full),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_0 (rd_rst_busy),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_1 (\grdc.rd_data_count_i0 ),
        .\guf.underflow_i_reg (empty),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .rst_d1(rst_d1),
        .underflow_i0(underflow_i0),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wr_rst_busy(wr_rst_busy),
        .wrst_busy(wrst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_DEST_SYNC_FF = "3" *) (* COMMON_CLOCK = "0" *) 
(* DOUT_RESET_VALUE = "0" *) (* ECC_MODE = "0" *) (* ENABLE_ECC = "0" *) 
(* EN_ADV_FEATURE = "16'b0000011100000111" *) (* EN_AE = "1'b0" *) (* EN_AF = "1'b0" *) 
(* EN_DVLD = "1'b0" *) (* EN_OF = "1'b1" *) (* EN_PE = "1'b1" *) 
(* EN_PF = "1'b1" *) (* EN_RDC = "1'b1" *) (* EN_UF = "1'b1" *) 
(* EN_WACK = "1'b0" *) (* EN_WDC = "1'b1" *) (* FG_EQ_ASYM_DOUT = "1'b0" *) 
(* FIFO_MEMORY_TYPE = "1" *) (* FIFO_MEM_TYPE = "1" *) (* FIFO_READ_DEPTH = "16" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_SIZE = "320" *) (* FIFO_WRITE_DEPTH = "16" *) 
(* FULL_RESET_VALUE = "1" *) (* FULL_RST_VAL = "1'b1" *) (* ORIG_REF_NAME = "xpm_fifo_base" *) 
(* PE_THRESH_ADJ = "8" *) (* PE_THRESH_MAX = "11" *) (* PE_THRESH_MIN = "5" *) 
(* PF_THRESH_ADJ = "9" *) (* PF_THRESH_MAX = "11" *) (* PF_THRESH_MIN = "8" *) 
(* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "11" *) (* RD_DATA_COUNT_WIDTH = "4" *) 
(* RD_DC_WIDTH_EXT = "5" *) (* RD_LATENCY = "2" *) (* RD_MODE = "1" *) 
(* RD_PNTR_WIDTH = "4" *) (* READ_DATA_WIDTH = "20" *) (* READ_MODE = "1" *) 
(* READ_MODE_LL = "1" *) (* RELATED_CLOCKS = "0" *) (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WIDTH_RATIO = "1" *) (* WRITE_DATA_WIDTH = "20" *) 
(* WR_DATA_COUNT_WIDTH = "4" *) (* WR_DC_WIDTH_EXT = "5" *) (* WR_DEPTH_LOG = "4" *) 
(* WR_PNTR_WIDTH = "4" *) (* WR_RD_RATIO = "0" *) (* WR_WIDTH_LOG = "5" *) 
(* XPM_MODULE = "TRUE" *) (* both_stages_valid = "3" *) (* invalid = "0" *) 
(* keep_hierarchy = "soft" *) (* stage1_valid = "2" *) (* stage2_valid = "1" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_base__parameterized3
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    full_n,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [19:0]din;
  output full;
  output full_n;
  output prog_full;
  output [3:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [19:0]dout;
  output empty;
  output prog_empty;
  output [3:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire clr_full;
  wire [1:0]count_value_i;
  wire [1:0]curr_fwft_state;
  wire [3:0]diff_pntr_pe;
  wire [4:1]diff_pntr_pf_q;
  wire [4:1]diff_pntr_pf_q0;
  wire [19:0]din;
  wire [19:0]dout;
  wire empty;
  wire empty_fwft_i0;
  wire full;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_5 ;
  wire \gen_fwft.count_rst ;
  wire \gen_fwft.ram_regout_en ;
  wire \gen_fwft.rdpp1_inst_n_3 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ;
  wire [4:1]\grdc.diff_wr_rd_pntr_rdc ;
  wire \grdc.rd_data_count_i0 ;
  wire [4:1]\gwdc.diff_wr_rd_pntr1_out ;
  wire [1:0]next_fwft_state__0;
  wire overflow;
  wire overflow_i0;
  wire prog_empty;
  wire prog_full;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire [3:0]rd_data_count;
  wire rd_en;
  wire [3:0]rd_pntr_ext;
  wire [3:0]rd_pntr_wr;
  wire [3:0]rd_pntr_wr_cdc;
  wire [4:0]rd_pntr_wr_cdc_dc;
  wire rd_rst_busy;
  wire rdp_inst_n_10;
  wire rdp_inst_n_11;
  wire rdp_inst_n_12;
  wire rdp_inst_n_8;
  wire rdp_inst_n_9;
  wire rdpp1_inst_n_0;
  wire rdpp1_inst_n_1;
  wire rdpp1_inst_n_2;
  wire rdpp1_inst_n_3;
  wire rst;
  wire rst_d1;
  wire rst_d1_inst_n_1;
  wire sleep;
  wire [1:1]src_in_bin00_out;
  wire underflow;
  wire underflow_i0;
  wire wr_clk;
  wire [3:0]wr_data_count;
  wire wr_en;
  wire [4:0]wr_pntr_ext;
  wire [3:1]wr_pntr_plus1_pf;
  wire wr_pntr_plus1_pf_carry;
  wire [3:0]wr_pntr_rd_cdc;
  wire [4:0]wr_pntr_rd_cdc_dc;
  wire wr_rst_busy;
  wire wrpp1_inst_n_4;
  wire wrpp2_inst_n_0;
  wire wrpp2_inst_n_1;
  wire wrpp2_inst_n_2;
  wire wrpp2_inst_n_3;
  wire wrst_busy;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ;
  wire [19:0]\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign full_n = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT4 #(
    .INIT(16'h6A85)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[0]_i_1 
       (.I0(curr_fwft_state[0]),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(ram_empty_i),
        .O(next_fwft_state__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT4 #(
    .INIT(16'h3FF0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[1]_i_1 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(curr_fwft_state[0]),
        .O(next_fwft_state__0[1]));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[0]),
        .Q(curr_fwft_state[0]),
        .R(rd_rst_busy));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[1]),
        .Q(curr_fwft_state[1]),
        .R(rd_rst_busy));
  GND GND
       (.G(\<const0> ));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "5" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized6 \gen_cdc_pntr.rd_pntr_cdc_dc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc_dc),
        .src_clk(rd_clk),
        .src_in_bin({rdp_inst_n_9,rdp_inst_n_10,rdp_inst_n_11,src_in_bin00_out,rdp_inst_n_12}));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "4" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized4 \gen_cdc_pntr.rd_pntr_cdc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc),
        .src_clk(rd_clk),
        .src_in_bin(rd_pntr_ext));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized2_54 \gen_cdc_pntr.rpw_gray_reg 
       (.D(diff_pntr_pf_q0[4:3]),
        .E(wr_pntr_plus1_pf_carry),
        .Q({rd_pntr_wr[3],rd_pntr_wr[1:0]}),
        .clr_full(clr_full),
        .\count_value_i_reg[3] (\gen_cdc_pntr.rpw_gray_reg_n_5 ),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ({wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3}),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_0 (wrpp2_inst_n_0),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] (full),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] (wr_pntr_plus1_pf),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 (wrpp1_inst_n_4),
        .\reg_out_i_reg[3]_0 (rd_pntr_wr_cdc),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized3_55 \gen_cdc_pntr.rpw_gray_reg_dc 
       (.D({\gwdc.diff_wr_rd_pntr1_out [4:3],\gwdc.diff_wr_rd_pntr1_out [1]}),
        .Q({\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 }),
        .\gwdc.wr_data_count_i_reg[4] (wr_pntr_ext),
        .\reg_out_i_reg[4]_0 (rd_pntr_wr_cdc_dc),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized2_56 \gen_cdc_pntr.wpr_gray_reg 
       (.D(diff_pntr_pe[1:0]),
        .Q({\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 }),
        .enb(rdp_inst_n_8),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] (curr_fwft_state),
        .\gen_pf_ic_rc.ram_empty_i_reg (rd_pntr_ext),
        .\gen_pf_ic_rc.ram_empty_i_reg_0 ({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3}),
        .ram_empty_i(ram_empty_i),
        .ram_empty_i0(ram_empty_i0),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[0]_0 (rd_rst_busy),
        .\reg_out_i_reg[3]_0 (wr_pntr_rd_cdc));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized3_57 \gen_cdc_pntr.wpr_gray_reg_dc 
       (.D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q({\gen_cdc_pntr.wpr_gray_reg_dc_n_1 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_2 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_5 }),
        .\grdc.rd_data_count_i_reg[1] (count_value_i),
        .\grdc.rd_data_count_i_reg[4] ({rd_pntr_ext[3],rd_pntr_ext[1:0]}),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[3]_0 (\gen_cdc_pntr.wpr_gray_reg_dc_n_6 ),
        .\reg_out_i_reg[4]_0 (rd_rst_busy),
        .\reg_out_i_reg[4]_1 (wr_pntr_rd_cdc_dc));
  (* DEST_SYNC_FF = "5" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "5" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized5 \gen_cdc_pntr.wr_pntr_cdc_dc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc_dc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "4" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized4__6 \gen_cdc_pntr.wr_pntr_cdc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext[3:0]));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT4 #(
    .INIT(16'hF380)) 
    \gen_fwft.empty_fwft_i_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .I3(empty),
        .O(empty_fwft_i0));
  FDSE #(
    .INIT(1'b1)) 
    \gen_fwft.empty_fwft_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .Q(empty),
        .S(rd_rst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn_58 \gen_fwft.rdpp1_inst 
       (.D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(count_value_i),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[1]_0 (\gen_fwft.rdpp1_inst_n_3 ),
        .\count_value_i_reg[1]_1 (curr_fwft_state),
        .\grdc.rd_data_count_i_reg[2] ({\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_5 }),
        .\grdc.rd_data_count_i_reg[2]_0 (rd_pntr_ext[2:0]),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .src_in_bin(src_in_bin00_out));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_cdc_pntr.rpw_gray_reg_n_5 ),
        .Q(full),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[0]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[1]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[2]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[3]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .R(rd_rst_busy));
  LUT6 #(
    .INIT(64'h8888888BBBBBBBBB)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1 
       (.I0(prog_empty),
        .I1(empty),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .I4(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .I5(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ),
        .Q(prog_empty),
        .S(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[1]),
        .Q(diff_pntr_pf_q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[2]),
        .Q(diff_pntr_pf_q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[3]),
        .Q(diff_pntr_pf_q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[4]),
        .Q(diff_pntr_pf_q[4]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1_inst_n_1),
        .Q(prog_full),
        .S(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.ram_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i0),
        .Q(ram_empty_i),
        .S(rd_rst_busy));
  (* ADDR_WIDTH_A = "4" *) 
  (* ADDR_WIDTH_B = "4" *) 
  (* AUTO_SLEEP_TIME = "0" *) 
  (* BYTE_WRITE_WIDTH_A = "20" *) 
  (* BYTE_WRITE_WIDTH_B = "20" *) 
  (* CASCADE_HEIGHT = "0" *) 
  (* CLOCKING_MODE = "1" *) 
  (* ECC_BIT_RANGE = "[7:0]" *) 
  (* ECC_MODE = "0" *) 
  (* ECC_TYPE = "NONE" *) 
  (* IGNORE_INIT_SYNTH = "0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* MAX_NUM_CHAR = "0" *) 
  (* MEMORY_INIT_FILE = "none" *) 
  (* MEMORY_INIT_PARAM = "" *) 
  (* MEMORY_OPTIMIZATION = "true" *) 
  (* MEMORY_PRIMITIVE = "1" *) 
  (* MEMORY_SIZE = "320" *) 
  (* MEMORY_TYPE = "1" *) 
  (* MESSAGE_CONTROL = "0" *) 
  (* NUM_CHAR_LOC = "0" *) 
  (* P_ECC_MODE = "no_ecc" *) 
  (* P_ENABLE_BYTE_WRITE_A = "0" *) 
  (* P_ENABLE_BYTE_WRITE_B = "0" *) 
  (* P_MAX_DEPTH_DATA = "16" *) 
  (* P_MEMORY_OPT = "yes" *) 
  (* P_MEMORY_PRIMITIVE = "distributed" *) 
  (* P_MIN_WIDTH_DATA = "20" *) 
  (* P_MIN_WIDTH_DATA_A = "20" *) 
  (* P_MIN_WIDTH_DATA_B = "20" *) 
  (* P_MIN_WIDTH_DATA_ECC = "20" *) 
  (* P_MIN_WIDTH_DATA_LDW = "4" *) 
  (* P_MIN_WIDTH_DATA_SHFT = "20" *) 
  (* P_NUM_COLS_WRITE_A = "1" *) 
  (* P_NUM_COLS_WRITE_B = "1" *) 
  (* P_NUM_ROWS_READ_A = "1" *) 
  (* P_NUM_ROWS_READ_B = "1" *) 
  (* P_NUM_ROWS_WRITE_A = "1" *) 
  (* P_NUM_ROWS_WRITE_B = "1" *) 
  (* P_SDP_WRITE_MODE = "yes" *) 
  (* P_WIDTH_ADDR_LSB_READ_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) 
  (* P_WIDTH_ADDR_READ_A = "4" *) 
  (* P_WIDTH_ADDR_READ_B = "4" *) 
  (* P_WIDTH_ADDR_WRITE_A = "4" *) 
  (* P_WIDTH_ADDR_WRITE_B = "4" *) 
  (* P_WIDTH_COL_WRITE_A = "20" *) 
  (* P_WIDTH_COL_WRITE_B = "20" *) 
  (* RAM_DECOMP = "auto" *) 
  (* READ_DATA_WIDTH_A = "20" *) 
  (* READ_DATA_WIDTH_B = "20" *) 
  (* READ_LATENCY_A = "2" *) 
  (* READ_LATENCY_B = "2" *) 
  (* READ_RESET_VALUE_A = "0" *) 
  (* READ_RESET_VALUE_B = "0" *) 
  (* RST_MODE_A = "SYNC" *) 
  (* RST_MODE_B = "SYNC" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_EMBEDDED_CONSTRAINT = "1" *) 
  (* USE_MEM_INIT = "0" *) 
  (* USE_MEM_INIT_MMI = "0" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH_A = "20" *) 
  (* WRITE_DATA_WIDTH_B = "20" *) 
  (* WRITE_MODE_A = "2" *) 
  (* WRITE_MODE_B = "1" *) 
  (* WRITE_PROTECT = "1" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* rsta_loop_iter = "20" *) 
  (* rstb_loop_iter = "20" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_memory_base__parameterized3 \gen_sdpram.xpm_memory_base_inst 
       (.addra(wr_pntr_ext[3:0]),
        .addrb(rd_pntr_ext),
        .clka(wr_clk),
        .clkb(rd_clk),
        .dbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ),
        .dbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ),
        .dina(din),
        .dinb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .douta(\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED [19:0]),
        .doutb(dout),
        .ena(wr_pntr_plus1_pf_carry),
        .enb(rdp_inst_n_8),
        .injectdbiterra(1'b0),
        .injectdbiterrb(1'b0),
        .injectsbiterra(1'b0),
        .injectsbiterrb(1'b0),
        .regcea(1'b0),
        .regceb(\gen_fwft.ram_regout_en ),
        .rsta(1'b0),
        .rstb(rd_rst_busy),
        .sbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ),
        .sbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ),
        .sleep(sleep),
        .wea(1'b0),
        .web(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT3 #(
    .INIT(8'h62)) 
    \gen_sdpram.xpm_memory_base_inst_i_3 
       (.I0(curr_fwft_state[0]),
        .I1(curr_fwft_state[1]),
        .I2(rd_en),
        .O(\gen_fwft.ram_regout_en ));
  FDRE #(
    .INIT(1'b0)) 
    \gof.overflow_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(overflow_i0),
        .Q(overflow),
        .R(1'b0));
  FDRE \grdc.rd_data_count_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q(rd_data_count[0]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(rd_data_count[1]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [3]),
        .Q(rd_data_count[2]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [4]),
        .Q(rd_data_count[3]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \guf.underflow_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(underflow_i0),
        .Q(underflow),
        .R(1'b0));
  FDRE \gwdc.wr_data_count_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [1]),
        .Q(wr_data_count[0]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [2]),
        .Q(wr_data_count[1]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [3]),
        .Q(wr_data_count[2]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [4]),
        .Q(wr_data_count[3]),
        .R(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized6_59 rdp_inst
       (.D(diff_pntr_pe[3:2]),
        .E(rdp_inst_n_8),
        .Q(rd_pntr_ext),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\count_value_i_reg[4]_0 (rd_rst_busy),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] ({\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 }),
        .\grdc.rd_data_count_i_reg[4] (\gen_fwft.rdpp1_inst_n_3 ),
        .\grdc.rd_data_count_i_reg[4]_0 ({\gen_cdc_pntr.wpr_gray_reg_dc_n_1 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_2 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 }),
        .\grdc.rd_data_count_i_reg[4]_1 (\gen_cdc_pntr.wpr_gray_reg_dc_n_6 ),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[2] (\grdc.diff_wr_rd_pntr_rdc [4:3]),
        .\src_gray_ff_reg[4] (count_value_i),
        .src_in_bin({rdp_inst_n_9,rdp_inst_n_10,rdp_inst_n_11,rdp_inst_n_12}));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized7_60 rdpp1_inst
       (.E(rdp_inst_n_8),
        .Q({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3}),
        .\count_value_i_reg[0]_0 (rd_rst_busy),
        .\count_value_i_reg[1]_0 (curr_fwft_state),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_bit_61 rst_d1_inst
       (.D(diff_pntr_pf_q0[1]),
        .Q(diff_pntr_pf_q),
        .clr_full(clr_full),
        .d_out_int_reg_0(rst_d1_inst_n_1),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] (rd_pntr_wr[0]),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1]_0 (wr_pntr_plus1_pf[1]),
        .\gof.overflow_i_reg (full),
        .overflow_i0(overflow_i0),
        .prog_full(prog_full),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized6_62 wrp_inst
       (.D(\gwdc.diff_wr_rd_pntr1_out [2]),
        .E(wr_pntr_plus1_pf_carry),
        .Q(wr_pntr_ext),
        .\gwdc.wr_data_count_i_reg[2] ({\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 }),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized7_63 wrpp1_inst
       (.D(diff_pntr_pf_q0[2]),
        .E(wr_pntr_plus1_pf_carry),
        .Q(wr_pntr_plus1_pf),
        .\count_value_i_reg[3]_0 (wrpp1_inst_n_4),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ({rd_pntr_wr[3],rd_pntr_wr[1:0]}),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized8_64 wrpp2_inst
       (.E(wr_pntr_plus1_pf_carry),
        .Q(rd_pntr_wr[3]),
        .\count_value_i_reg[2]_0 ({wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3}),
        .\count_value_i_reg[3]_0 (wrpp2_inst_n_0),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_rst xpm_fifo_rst_inst
       (.E(wr_pntr_plus1_pf_carry),
        .Q(curr_fwft_state),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[3] (full),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_0 (rd_rst_busy),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_1 (\grdc.rd_data_count_i0 ),
        .\guf.underflow_i_reg (empty),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .rst_d1(rst_d1),
        .underflow_i0(underflow_i0),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy),
        .wrst_busy(wrst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_DEST_SYNC_FF = "3" *) (* COMMON_CLOCK = "0" *) 
(* DOUT_RESET_VALUE = "0" *) (* ECC_MODE = "0" *) (* ENABLE_ECC = "0" *) 
(* EN_ADV_FEATURE = "16'b0000011100000111" *) (* EN_AE = "1'b0" *) (* EN_AF = "1'b0" *) 
(* EN_DVLD = "1'b0" *) (* EN_OF = "1'b1" *) (* EN_PE = "1'b1" *) 
(* EN_PF = "1'b1" *) (* EN_RDC = "1'b1" *) (* EN_UF = "1'b1" *) 
(* EN_WACK = "1'b0" *) (* EN_WDC = "1'b1" *) (* FG_EQ_ASYM_DOUT = "1'b0" *) 
(* FIFO_MEMORY_TYPE = "1" *) (* FIFO_MEM_TYPE = "1" *) (* FIFO_READ_DEPTH = "16" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_SIZE = "320" *) (* FIFO_WRITE_DEPTH = "16" *) 
(* FULL_RESET_VALUE = "1" *) (* FULL_RST_VAL = "1'b1" *) (* ORIG_REF_NAME = "xpm_fifo_base" *) 
(* PE_THRESH_ADJ = "8" *) (* PE_THRESH_MAX = "11" *) (* PE_THRESH_MIN = "5" *) 
(* PF_THRESH_ADJ = "9" *) (* PF_THRESH_MAX = "11" *) (* PF_THRESH_MIN = "8" *) 
(* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "11" *) (* RD_DATA_COUNT_WIDTH = "4" *) 
(* RD_DC_WIDTH_EXT = "5" *) (* RD_LATENCY = "2" *) (* RD_MODE = "1" *) 
(* RD_PNTR_WIDTH = "4" *) (* READ_DATA_WIDTH = "20" *) (* READ_MODE = "1" *) 
(* READ_MODE_LL = "1" *) (* RELATED_CLOCKS = "0" *) (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WIDTH_RATIO = "1" *) (* WRITE_DATA_WIDTH = "20" *) 
(* WR_DATA_COUNT_WIDTH = "4" *) (* WR_DC_WIDTH_EXT = "5" *) (* WR_DEPTH_LOG = "4" *) 
(* WR_PNTR_WIDTH = "4" *) (* WR_RD_RATIO = "0" *) (* WR_WIDTH_LOG = "5" *) 
(* XPM_MODULE = "TRUE" *) (* both_stages_valid = "3" *) (* invalid = "0" *) 
(* keep_hierarchy = "soft" *) (* stage1_valid = "2" *) (* stage2_valid = "1" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_base__parameterized3__xdcDup__1
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    full_n,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [19:0]din;
  output full;
  output full_n;
  output prog_full;
  output [3:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [19:0]dout;
  output empty;
  output prog_empty;
  output [3:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire clr_full;
  wire [1:0]count_value_i;
  wire [1:0]curr_fwft_state;
  wire [3:0]diff_pntr_pe;
  wire [4:1]diff_pntr_pf_q;
  wire [4:1]diff_pntr_pf_q0;
  wire [19:0]din;
  wire [19:0]dout;
  wire empty;
  wire empty_fwft_i0;
  wire full;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_5 ;
  wire \gen_fwft.count_rst ;
  wire \gen_fwft.ram_regout_en ;
  wire \gen_fwft.rdpp1_inst_n_3 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ;
  wire [4:1]\grdc.diff_wr_rd_pntr_rdc ;
  wire \grdc.rd_data_count_i0 ;
  wire [4:1]\gwdc.diff_wr_rd_pntr1_out ;
  wire [1:0]next_fwft_state__0;
  wire overflow;
  wire overflow_i0;
  wire prog_empty;
  wire prog_full;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire [3:0]rd_data_count;
  wire rd_en;
  wire [3:0]rd_pntr_ext;
  wire [3:0]rd_pntr_wr;
  wire [3:0]rd_pntr_wr_cdc;
  wire [4:0]rd_pntr_wr_cdc_dc;
  wire rd_rst_busy;
  wire rdp_inst_n_10;
  wire rdp_inst_n_11;
  wire rdp_inst_n_12;
  wire rdp_inst_n_8;
  wire rdp_inst_n_9;
  wire rdpp1_inst_n_0;
  wire rdpp1_inst_n_1;
  wire rdpp1_inst_n_2;
  wire rdpp1_inst_n_3;
  wire rst;
  wire rst_d1;
  wire rst_d1_inst_n_1;
  wire sleep;
  wire [1:1]src_in_bin00_out;
  wire underflow;
  wire underflow_i0;
  wire wr_clk;
  wire [3:0]wr_data_count;
  wire wr_en;
  wire [4:0]wr_pntr_ext;
  wire [3:1]wr_pntr_plus1_pf;
  wire wr_pntr_plus1_pf_carry;
  wire [3:0]wr_pntr_rd_cdc;
  wire [4:0]wr_pntr_rd_cdc_dc;
  wire wr_rst_busy;
  wire wrpp1_inst_n_4;
  wire wrpp2_inst_n_0;
  wire wrpp2_inst_n_1;
  wire wrpp2_inst_n_2;
  wire wrpp2_inst_n_3;
  wire wrst_busy;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ;
  wire [19:0]\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign full_n = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT4 #(
    .INIT(16'h6A85)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[0]_i_1 
       (.I0(curr_fwft_state[0]),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(ram_empty_i),
        .O(next_fwft_state__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT4 #(
    .INIT(16'h3FF0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[1]_i_1 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(curr_fwft_state[0]),
        .O(next_fwft_state__0[1]));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[0]),
        .Q(curr_fwft_state[0]),
        .R(rd_rst_busy));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[1]),
        .Q(curr_fwft_state[1]),
        .R(rd_rst_busy));
  GND GND
       (.G(\<const0> ));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "5" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized6__2 \gen_cdc_pntr.rd_pntr_cdc_dc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc_dc),
        .src_clk(rd_clk),
        .src_in_bin({rdp_inst_n_9,rdp_inst_n_10,rdp_inst_n_11,src_in_bin00_out,rdp_inst_n_12}));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "4" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized4__5 \gen_cdc_pntr.rd_pntr_cdc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc),
        .src_clk(rd_clk),
        .src_in_bin(rd_pntr_ext));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized2 \gen_cdc_pntr.rpw_gray_reg 
       (.D(diff_pntr_pf_q0[4:3]),
        .E(wr_pntr_plus1_pf_carry),
        .Q({rd_pntr_wr[3],rd_pntr_wr[1:0]}),
        .clr_full(clr_full),
        .\count_value_i_reg[3] (\gen_cdc_pntr.rpw_gray_reg_n_5 ),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ({wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3}),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_0 (wrpp2_inst_n_0),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] (full),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] (wr_pntr_plus1_pf),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 (wrpp1_inst_n_4),
        .\reg_out_i_reg[3]_0 (rd_pntr_wr_cdc),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized3 \gen_cdc_pntr.rpw_gray_reg_dc 
       (.D({\gwdc.diff_wr_rd_pntr1_out [4:3],\gwdc.diff_wr_rd_pntr1_out [1]}),
        .Q({\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 }),
        .\gwdc.wr_data_count_i_reg[4] (wr_pntr_ext),
        .\reg_out_i_reg[4]_0 (rd_pntr_wr_cdc_dc),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized2_48 \gen_cdc_pntr.wpr_gray_reg 
       (.D(diff_pntr_pe[1:0]),
        .Q({\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 }),
        .enb(rdp_inst_n_8),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] (curr_fwft_state),
        .\gen_pf_ic_rc.ram_empty_i_reg (rd_pntr_ext),
        .\gen_pf_ic_rc.ram_empty_i_reg_0 ({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3}),
        .ram_empty_i(ram_empty_i),
        .ram_empty_i0(ram_empty_i0),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[0]_0 (rd_rst_busy),
        .\reg_out_i_reg[3]_0 (wr_pntr_rd_cdc));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized3_49 \gen_cdc_pntr.wpr_gray_reg_dc 
       (.D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q({\gen_cdc_pntr.wpr_gray_reg_dc_n_1 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_2 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_5 }),
        .\grdc.rd_data_count_i_reg[1] (count_value_i),
        .\grdc.rd_data_count_i_reg[4] ({rd_pntr_ext[3],rd_pntr_ext[1:0]}),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[3]_0 (\gen_cdc_pntr.wpr_gray_reg_dc_n_6 ),
        .\reg_out_i_reg[4]_0 (rd_rst_busy),
        .\reg_out_i_reg[4]_1 (wr_pntr_rd_cdc_dc));
  (* DEST_SYNC_FF = "5" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "5" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized5__2 \gen_cdc_pntr.wr_pntr_cdc_dc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc_dc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "4" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized4__4 \gen_cdc_pntr.wr_pntr_cdc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext[3:0]));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT4 #(
    .INIT(16'hF380)) 
    \gen_fwft.empty_fwft_i_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .I3(empty),
        .O(empty_fwft_i0));
  FDSE #(
    .INIT(1'b1)) 
    \gen_fwft.empty_fwft_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .Q(empty),
        .S(rd_rst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn_50 \gen_fwft.rdpp1_inst 
       (.D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(count_value_i),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[1]_0 (\gen_fwft.rdpp1_inst_n_3 ),
        .\count_value_i_reg[1]_1 (curr_fwft_state),
        .\grdc.rd_data_count_i_reg[2] ({\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_5 }),
        .\grdc.rd_data_count_i_reg[2]_0 (rd_pntr_ext[2:0]),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .src_in_bin(src_in_bin00_out));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_cdc_pntr.rpw_gray_reg_n_5 ),
        .Q(full),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[0]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[1]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[2]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[3]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .R(rd_rst_busy));
  LUT6 #(
    .INIT(64'h8888888BBBBBBBBB)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1 
       (.I0(prog_empty),
        .I1(empty),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .I4(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .I5(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ),
        .Q(prog_empty),
        .S(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[1]),
        .Q(diff_pntr_pf_q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[2]),
        .Q(diff_pntr_pf_q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[3]),
        .Q(diff_pntr_pf_q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[4]),
        .Q(diff_pntr_pf_q[4]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1_inst_n_1),
        .Q(prog_full),
        .S(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.ram_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i0),
        .Q(ram_empty_i),
        .S(rd_rst_busy));
  (* ADDR_WIDTH_A = "4" *) 
  (* ADDR_WIDTH_B = "4" *) 
  (* AUTO_SLEEP_TIME = "0" *) 
  (* BYTE_WRITE_WIDTH_A = "20" *) 
  (* BYTE_WRITE_WIDTH_B = "20" *) 
  (* CASCADE_HEIGHT = "0" *) 
  (* CLOCKING_MODE = "1" *) 
  (* ECC_BIT_RANGE = "[7:0]" *) 
  (* ECC_MODE = "0" *) 
  (* ECC_TYPE = "NONE" *) 
  (* IGNORE_INIT_SYNTH = "0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* MAX_NUM_CHAR = "0" *) 
  (* MEMORY_INIT_FILE = "none" *) 
  (* MEMORY_INIT_PARAM = "" *) 
  (* MEMORY_OPTIMIZATION = "true" *) 
  (* MEMORY_PRIMITIVE = "1" *) 
  (* MEMORY_SIZE = "320" *) 
  (* MEMORY_TYPE = "1" *) 
  (* MESSAGE_CONTROL = "0" *) 
  (* NUM_CHAR_LOC = "0" *) 
  (* P_ECC_MODE = "no_ecc" *) 
  (* P_ENABLE_BYTE_WRITE_A = "0" *) 
  (* P_ENABLE_BYTE_WRITE_B = "0" *) 
  (* P_MAX_DEPTH_DATA = "16" *) 
  (* P_MEMORY_OPT = "yes" *) 
  (* P_MEMORY_PRIMITIVE = "distributed" *) 
  (* P_MIN_WIDTH_DATA = "20" *) 
  (* P_MIN_WIDTH_DATA_A = "20" *) 
  (* P_MIN_WIDTH_DATA_B = "20" *) 
  (* P_MIN_WIDTH_DATA_ECC = "20" *) 
  (* P_MIN_WIDTH_DATA_LDW = "4" *) 
  (* P_MIN_WIDTH_DATA_SHFT = "20" *) 
  (* P_NUM_COLS_WRITE_A = "1" *) 
  (* P_NUM_COLS_WRITE_B = "1" *) 
  (* P_NUM_ROWS_READ_A = "1" *) 
  (* P_NUM_ROWS_READ_B = "1" *) 
  (* P_NUM_ROWS_WRITE_A = "1" *) 
  (* P_NUM_ROWS_WRITE_B = "1" *) 
  (* P_SDP_WRITE_MODE = "yes" *) 
  (* P_WIDTH_ADDR_LSB_READ_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) 
  (* P_WIDTH_ADDR_READ_A = "4" *) 
  (* P_WIDTH_ADDR_READ_B = "4" *) 
  (* P_WIDTH_ADDR_WRITE_A = "4" *) 
  (* P_WIDTH_ADDR_WRITE_B = "4" *) 
  (* P_WIDTH_COL_WRITE_A = "20" *) 
  (* P_WIDTH_COL_WRITE_B = "20" *) 
  (* RAM_DECOMP = "auto" *) 
  (* READ_DATA_WIDTH_A = "20" *) 
  (* READ_DATA_WIDTH_B = "20" *) 
  (* READ_LATENCY_A = "2" *) 
  (* READ_LATENCY_B = "2" *) 
  (* READ_RESET_VALUE_A = "0" *) 
  (* READ_RESET_VALUE_B = "0" *) 
  (* RST_MODE_A = "SYNC" *) 
  (* RST_MODE_B = "SYNC" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_EMBEDDED_CONSTRAINT = "1" *) 
  (* USE_MEM_INIT = "0" *) 
  (* USE_MEM_INIT_MMI = "0" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH_A = "20" *) 
  (* WRITE_DATA_WIDTH_B = "20" *) 
  (* WRITE_MODE_A = "2" *) 
  (* WRITE_MODE_B = "1" *) 
  (* WRITE_PROTECT = "1" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* rsta_loop_iter = "20" *) 
  (* rstb_loop_iter = "20" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_memory_base__parameterized3__2 \gen_sdpram.xpm_memory_base_inst 
       (.addra(wr_pntr_ext[3:0]),
        .addrb(rd_pntr_ext),
        .clka(wr_clk),
        .clkb(rd_clk),
        .dbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ),
        .dbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ),
        .dina(din),
        .dinb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .douta(\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED [19:0]),
        .doutb(dout),
        .ena(wr_pntr_plus1_pf_carry),
        .enb(rdp_inst_n_8),
        .injectdbiterra(1'b0),
        .injectdbiterrb(1'b0),
        .injectsbiterra(1'b0),
        .injectsbiterrb(1'b0),
        .regcea(1'b0),
        .regceb(\gen_fwft.ram_regout_en ),
        .rsta(1'b0),
        .rstb(rd_rst_busy),
        .sbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ),
        .sbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ),
        .sleep(sleep),
        .wea(1'b0),
        .web(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT3 #(
    .INIT(8'h62)) 
    \gen_sdpram.xpm_memory_base_inst_i_3 
       (.I0(curr_fwft_state[0]),
        .I1(curr_fwft_state[1]),
        .I2(rd_en),
        .O(\gen_fwft.ram_regout_en ));
  FDRE #(
    .INIT(1'b0)) 
    \gof.overflow_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(overflow_i0),
        .Q(overflow),
        .R(1'b0));
  FDRE \grdc.rd_data_count_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q(rd_data_count[0]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(rd_data_count[1]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [3]),
        .Q(rd_data_count[2]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [4]),
        .Q(rd_data_count[3]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \guf.underflow_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(underflow_i0),
        .Q(underflow),
        .R(1'b0));
  FDRE \gwdc.wr_data_count_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [1]),
        .Q(wr_data_count[0]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [2]),
        .Q(wr_data_count[1]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [3]),
        .Q(wr_data_count[2]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [4]),
        .Q(wr_data_count[3]),
        .R(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized6 rdp_inst
       (.D(diff_pntr_pe[3:2]),
        .E(rdp_inst_n_8),
        .Q(rd_pntr_ext),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\count_value_i_reg[4]_0 (rd_rst_busy),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] ({\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 }),
        .\grdc.rd_data_count_i_reg[4] (\gen_fwft.rdpp1_inst_n_3 ),
        .\grdc.rd_data_count_i_reg[4]_0 ({\gen_cdc_pntr.wpr_gray_reg_dc_n_1 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_2 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 }),
        .\grdc.rd_data_count_i_reg[4]_1 (\gen_cdc_pntr.wpr_gray_reg_dc_n_6 ),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[2] (\grdc.diff_wr_rd_pntr_rdc [4:3]),
        .\src_gray_ff_reg[4] (count_value_i),
        .src_in_bin({rdp_inst_n_9,rdp_inst_n_10,rdp_inst_n_11,rdp_inst_n_12}));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized7 rdpp1_inst
       (.E(rdp_inst_n_8),
        .Q({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3}),
        .\count_value_i_reg[0]_0 (rd_rst_busy),
        .\count_value_i_reg[1]_0 (curr_fwft_state),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_bit_51 rst_d1_inst
       (.D(diff_pntr_pf_q0[1]),
        .Q(diff_pntr_pf_q),
        .clr_full(clr_full),
        .d_out_int_reg_0(rst_d1_inst_n_1),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] (rd_pntr_wr[0]),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1]_0 (wr_pntr_plus1_pf[1]),
        .\gof.overflow_i_reg (full),
        .overflow_i0(overflow_i0),
        .prog_full(prog_full),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized6_52 wrp_inst
       (.D(\gwdc.diff_wr_rd_pntr1_out [2]),
        .E(wr_pntr_plus1_pf_carry),
        .Q(wr_pntr_ext),
        .\gwdc.wr_data_count_i_reg[2] ({\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 }),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized7_53 wrpp1_inst
       (.D(diff_pntr_pf_q0[2]),
        .E(wr_pntr_plus1_pf_carry),
        .Q(wr_pntr_plus1_pf),
        .\count_value_i_reg[3]_0 (wrpp1_inst_n_4),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ({rd_pntr_wr[3],rd_pntr_wr[1:0]}),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized8 wrpp2_inst
       (.E(wr_pntr_plus1_pf_carry),
        .Q(rd_pntr_wr[3]),
        .\count_value_i_reg[2]_0 ({wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3}),
        .\count_value_i_reg[3]_0 (wrpp2_inst_n_0),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_rst__xdcDup__6 xpm_fifo_rst_inst
       (.E(wr_pntr_plus1_pf_carry),
        .Q(curr_fwft_state),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[3] (full),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_0 (rd_rst_busy),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_1 (\grdc.rd_data_count_i0 ),
        .\guf.underflow_i_reg (empty),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .rst_d1(rst_d1),
        .underflow_i0(underflow_i0),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy),
        .wrst_busy(wrst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_DEST_SYNC_FF = "3" *) (* COMMON_CLOCK = "0" *) 
(* DOUT_RESET_VALUE = "0" *) (* ECC_MODE = "0" *) (* ENABLE_ECC = "0" *) 
(* EN_ADV_FEATURE = "16'b0000011100000111" *) (* EN_AE = "1'b0" *) (* EN_AF = "1'b0" *) 
(* EN_DVLD = "1'b0" *) (* EN_OF = "1'b1" *) (* EN_PE = "1'b1" *) 
(* EN_PF = "1'b1" *) (* EN_RDC = "1'b1" *) (* EN_UF = "1'b1" *) 
(* EN_WACK = "1'b0" *) (* EN_WDC = "1'b1" *) (* FG_EQ_ASYM_DOUT = "1'b0" *) 
(* FIFO_MEMORY_TYPE = "2" *) (* FIFO_MEM_TYPE = "2" *) (* FIFO_READ_DEPTH = "256" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_SIZE = "11520" *) (* FIFO_WRITE_DEPTH = "256" *) 
(* FULL_RESET_VALUE = "1" *) (* FULL_RST_VAL = "1'b1" *) (* ORIG_REF_NAME = "xpm_fifo_base" *) 
(* PE_THRESH_ADJ = "8" *) (* PE_THRESH_MAX = "251" *) (* PE_THRESH_MIN = "5" *) 
(* PF_THRESH_ADJ = "126" *) (* PF_THRESH_MAX = "251" *) (* PF_THRESH_MIN = "8" *) 
(* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "128" *) (* RD_DATA_COUNT_WIDTH = "8" *) 
(* RD_DC_WIDTH_EXT = "9" *) (* RD_LATENCY = "2" *) (* RD_MODE = "1" *) 
(* RD_PNTR_WIDTH = "8" *) (* READ_DATA_WIDTH = "45" *) (* READ_MODE = "1" *) 
(* READ_MODE_LL = "1" *) (* RELATED_CLOCKS = "0" *) (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WIDTH_RATIO = "1" *) (* WRITE_DATA_WIDTH = "45" *) 
(* WR_DATA_COUNT_WIDTH = "8" *) (* WR_DC_WIDTH_EXT = "9" *) (* WR_DEPTH_LOG = "8" *) 
(* WR_PNTR_WIDTH = "8" *) (* WR_RD_RATIO = "0" *) (* WR_WIDTH_LOG = "6" *) 
(* XPM_MODULE = "TRUE" *) (* both_stages_valid = "3" *) (* invalid = "0" *) 
(* keep_hierarchy = "soft" *) (* stage1_valid = "2" *) (* stage2_valid = "1" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_base__xdcDup__1
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    full_n,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [44:0]din;
  output full;
  output full_n;
  output prog_full;
  output [7:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [44:0]dout;
  output empty;
  output prog_empty;
  output [7:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [1:0]count_value_i;
  wire [1:0]curr_fwft_state;
  wire [7:0]diff_pntr_pe;
  wire [8:2]diff_pntr_pf_q;
  wire [8:2]diff_pntr_pf_q0;
  wire [44:0]din;
  wire [44:0]dout;
  wire empty;
  wire empty_fwft_i0;
  wire full;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_0 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_7 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_10 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_11 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_12 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_13 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_14 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_15 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_16 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_9 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_7 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_8 ;
  wire \gen_fwft.count_rst ;
  wire \gen_fwft.ram_regout_en ;
  wire \gen_fwft.rdpp1_inst_n_3 ;
  wire \gen_fwft.rdpp1_inst_n_4 ;
  wire \gen_fwft.rdpp1_inst_n_5 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ;
  wire [8:1]\grdc.diff_wr_rd_pntr_rdc ;
  wire \grdc.rd_data_count_i0 ;
  wire [8:1]\gwdc.diff_wr_rd_pntr1_out ;
  wire [1:0]next_fwft_state__0;
  wire overflow;
  wire overflow_i0;
  wire prog_empty;
  wire prog_full;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire [7:0]rd_data_count;
  wire rd_en;
  wire [7:0]rd_pntr_ext;
  wire [7:0]rd_pntr_wr;
  wire [7:0]rd_pntr_wr_cdc;
  wire [8:0]rd_pntr_wr_cdc_dc;
  wire rd_rst_busy;
  wire rdp_inst_n_10;
  wire rdp_inst_n_19;
  wire rdp_inst_n_20;
  wire rdp_inst_n_21;
  wire rdp_inst_n_22;
  wire rdp_inst_n_23;
  wire rdp_inst_n_24;
  wire rdp_inst_n_25;
  wire rdp_inst_n_26;
  wire rdp_inst_n_27;
  wire rdp_inst_n_28;
  wire rdp_inst_n_29;
  wire rdp_inst_n_30;
  wire rdp_inst_n_31;
  wire rdp_inst_n_8;
  wire rdp_inst_n_9;
  wire rdpp1_inst_n_0;
  wire rdpp1_inst_n_1;
  wire rdpp1_inst_n_2;
  wire rdpp1_inst_n_3;
  wire rdpp1_inst_n_4;
  wire rdpp1_inst_n_5;
  wire rdpp1_inst_n_6;
  wire rdpp1_inst_n_7;
  wire rst;
  wire rst_d1;
  wire rst_d1_inst_n_1;
  wire sleep;
  wire [1:1]src_in_bin00_out;
  wire underflow;
  wire underflow_i0;
  wire wr_clk;
  wire [7:0]wr_data_count;
  wire wr_en;
  wire [8:0]wr_pntr_ext;
  wire [8:1]wr_pntr_plus1_pf;
  wire wr_pntr_plus1_pf_carry;
  wire [7:0]wr_pntr_rd_cdc;
  wire [8:0]wr_pntr_rd_cdc_dc;
  wire wr_rst_busy;
  wire wrpp2_inst_n_0;
  wire wrpp2_inst_n_1;
  wire wrpp2_inst_n_2;
  wire wrpp2_inst_n_3;
  wire wrpp2_inst_n_4;
  wire wrpp2_inst_n_5;
  wire wrpp2_inst_n_6;
  wire wrpp2_inst_n_7;
  wire wrst_busy;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ;
  wire [44:0]\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign full_n = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  (* SOFT_HLUTNM = "soft_lutpair207" *) 
  LUT4 #(
    .INIT(16'h6A85)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[0]_i_1 
       (.I0(curr_fwft_state[0]),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(ram_empty_i),
        .O(next_fwft_state__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair207" *) 
  LUT4 #(
    .INIT(16'h3FF0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[1]_i_1 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(curr_fwft_state[0]),
        .O(next_fwft_state__0[1]));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[0]),
        .Q(curr_fwft_state[0]),
        .R(rd_rst_busy));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[1]),
        .Q(curr_fwft_state[1]),
        .R(rd_rst_busy));
  GND GND
       (.G(\<const0> ));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized1__7 \gen_cdc_pntr.rd_pntr_cdc_dc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc_dc),
        .src_clk(rd_clk),
        .src_in_bin({rdp_inst_n_24,rdp_inst_n_25,rdp_inst_n_26,rdp_inst_n_27,rdp_inst_n_28,rdp_inst_n_29,rdp_inst_n_30,src_in_bin00_out,rdp_inst_n_31}));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "8" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__7 \gen_cdc_pntr.rd_pntr_cdc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc),
        .src_clk(rd_clk),
        .src_in_bin(rd_pntr_ext));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec_25 \gen_cdc_pntr.rpw_gray_reg 
       (.D(rd_pntr_wr_cdc),
        .Q(wr_pntr_plus1_pf),
        .d_out_int_reg(\gen_cdc_pntr.rpw_gray_reg_n_8 ),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7}),
        .\reg_out_i_reg[7]_0 (rd_pntr_wr),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized0_26 \gen_cdc_pntr.rpw_gray_reg_dc 
       (.D(rd_pntr_wr_cdc_dc),
        .Q({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 }),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec_27 \gen_cdc_pntr.wpr_gray_reg 
       (.D(wr_pntr_rd_cdc),
        .Q(curr_fwft_state),
        .\gen_pf_ic_rc.ram_empty_i_reg (rd_pntr_ext),
        .\gen_pf_ic_rc.ram_empty_i_reg_0 ({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3,rdpp1_inst_n_4,rdpp1_inst_n_5,rdpp1_inst_n_6,rdpp1_inst_n_7}),
        .ram_empty_i(ram_empty_i),
        .ram_empty_i0(ram_empty_i0),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[0]_0 (rd_rst_busy),
        .\reg_out_i_reg[7]_0 ({\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized0_28 \gen_cdc_pntr.wpr_gray_reg_dc 
       (.D(\grdc.diff_wr_rd_pntr_rdc ),
        .DI({rdp_inst_n_9,\gen_fwft.rdpp1_inst_n_5 }),
        .Q({\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_16 }),
        .S({rdp_inst_n_19,rdp_inst_n_20,rdp_inst_n_21,rdp_inst_n_22,rdp_inst_n_23,\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .\grdc.rd_data_count_i_reg[7] (count_value_i[1]),
        .\grdc.rd_data_count_i_reg[7]_0 (rd_pntr_ext[6:1]),
        .\grdc.rd_data_count_i_reg[8] (rdp_inst_n_10),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[8]_0 (rd_rst_busy),
        .\reg_out_i_reg[8]_1 (wr_pntr_rd_cdc_dc));
  (* DEST_SYNC_FF = "5" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized0__3 \gen_cdc_pntr.wr_pntr_cdc_dc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc_dc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "8" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__6 \gen_cdc_pntr.wr_pntr_cdc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext[7:0]));
  (* SOFT_HLUTNM = "soft_lutpair206" *) 
  LUT4 #(
    .INIT(16'hF380)) 
    \gen_fwft.empty_fwft_i_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .I3(empty),
        .O(empty_fwft_i0));
  FDSE #(
    .INIT(1'b1)) 
    \gen_fwft.empty_fwft_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .Q(empty),
        .S(rd_rst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn_29 \gen_fwft.rdpp1_inst 
       (.DI(\gen_fwft.rdpp1_inst_n_5 ),
        .Q(count_value_i),
        .S({\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\grdc.rd_data_count_i_reg[7] (rd_pntr_ext[1:0]),
        .\grdc.rd_data_count_i_reg[7]_0 ({\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_16 }),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .src_in_bin(src_in_bin00_out));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_cdc_pntr.rpw_gray_reg_n_8 ),
        .Q(full),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[0]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[1]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[2]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[3]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[4]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[5]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[6]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[7]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .R(rd_rst_busy));
  LUT4 #(
    .INIT(16'h88B8)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1 
       (.I0(prog_empty),
        .I1(empty),
        .I2(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h01FF)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ),
        .Q(prog_empty),
        .S(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[2]),
        .Q(diff_pntr_pf_q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[3]),
        .Q(diff_pntr_pf_q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[4]),
        .Q(diff_pntr_pf_q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[5]),
        .Q(diff_pntr_pf_q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[6]),
        .Q(diff_pntr_pf_q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[7]),
        .Q(diff_pntr_pf_q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[8]),
        .Q(diff_pntr_pf_q[8]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1_inst_n_1),
        .Q(prog_full),
        .S(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.ram_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i0),
        .Q(ram_empty_i),
        .S(rd_rst_busy));
  (* ADDR_WIDTH_A = "8" *) 
  (* ADDR_WIDTH_B = "8" *) 
  (* AUTO_SLEEP_TIME = "0" *) 
  (* BYTE_WRITE_WIDTH_A = "45" *) 
  (* BYTE_WRITE_WIDTH_B = "45" *) 
  (* CASCADE_HEIGHT = "0" *) 
  (* CLOCKING_MODE = "1" *) 
  (* ECC_BIT_RANGE = "[7:0]" *) 
  (* ECC_MODE = "0" *) 
  (* ECC_TYPE = "NONE" *) 
  (* IGNORE_INIT_SYNTH = "0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* MAX_NUM_CHAR = "0" *) 
  (* \MEM.ADDRESS_SPACE  *) 
  (* \MEM.ADDRESS_SPACE_BEGIN  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_LSB  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_MSB  = "44" *) 
  (* \MEM.ADDRESS_SPACE_END  = "511" *) 
  (* \MEM.CORE_MEMORY_WIDTH  = "45" *) 
  (* MEMORY_INIT_FILE = "none" *) 
  (* MEMORY_INIT_PARAM = "" *) 
  (* MEMORY_OPTIMIZATION = "true" *) 
  (* MEMORY_PRIMITIVE = "2" *) 
  (* MEMORY_SIZE = "11520" *) 
  (* MEMORY_TYPE = "1" *) 
  (* MESSAGE_CONTROL = "0" *) 
  (* NUM_CHAR_LOC = "0" *) 
  (* P_ECC_MODE = "no_ecc" *) 
  (* P_ENABLE_BYTE_WRITE_A = "0" *) 
  (* P_ENABLE_BYTE_WRITE_B = "0" *) 
  (* P_MAX_DEPTH_DATA = "256" *) 
  (* P_MEMORY_OPT = "yes" *) 
  (* P_MEMORY_PRIMITIVE = "block" *) 
  (* P_MIN_WIDTH_DATA = "45" *) 
  (* P_MIN_WIDTH_DATA_A = "45" *) 
  (* P_MIN_WIDTH_DATA_B = "45" *) 
  (* P_MIN_WIDTH_DATA_ECC = "45" *) 
  (* P_MIN_WIDTH_DATA_LDW = "4" *) 
  (* P_MIN_WIDTH_DATA_SHFT = "45" *) 
  (* P_NUM_COLS_WRITE_A = "1" *) 
  (* P_NUM_COLS_WRITE_B = "1" *) 
  (* P_NUM_ROWS_READ_A = "1" *) 
  (* P_NUM_ROWS_READ_B = "1" *) 
  (* P_NUM_ROWS_WRITE_A = "1" *) 
  (* P_NUM_ROWS_WRITE_B = "1" *) 
  (* P_SDP_WRITE_MODE = "no" *) 
  (* P_WIDTH_ADDR_LSB_READ_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) 
  (* P_WIDTH_ADDR_READ_A = "8" *) 
  (* P_WIDTH_ADDR_READ_B = "8" *) 
  (* P_WIDTH_ADDR_WRITE_A = "8" *) 
  (* P_WIDTH_ADDR_WRITE_B = "8" *) 
  (* P_WIDTH_COL_WRITE_A = "45" *) 
  (* P_WIDTH_COL_WRITE_B = "45" *) 
  (* RAM_DECOMP = "auto" *) 
  (* READ_DATA_WIDTH_A = "45" *) 
  (* READ_DATA_WIDTH_B = "45" *) 
  (* READ_LATENCY_A = "2" *) 
  (* READ_LATENCY_B = "2" *) 
  (* READ_RESET_VALUE_A = "0" *) 
  (* READ_RESET_VALUE_B = "0" *) 
  (* RST_MODE_A = "SYNC" *) 
  (* RST_MODE_B = "SYNC" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_EMBEDDED_CONSTRAINT = "0" *) 
  (* USE_MEM_INIT = "0" *) 
  (* USE_MEM_INIT_MMI = "0" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH_A = "45" *) 
  (* WRITE_DATA_WIDTH_B = "45" *) 
  (* WRITE_MODE_A = "2" *) 
  (* WRITE_MODE_B = "2" *) 
  (* WRITE_PROTECT = "1" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* rsta_loop_iter = "48" *) 
  (* rstb_loop_iter = "48" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_memory_base__2 \gen_sdpram.xpm_memory_base_inst 
       (.addra(wr_pntr_ext[7:0]),
        .addrb(rd_pntr_ext),
        .clka(wr_clk),
        .clkb(rd_clk),
        .dbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ),
        .dbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ),
        .dina(din),
        .dinb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .douta(\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED [44:0]),
        .doutb(dout),
        .ena(wr_pntr_plus1_pf_carry),
        .enb(rdp_inst_n_8),
        .injectdbiterra(1'b0),
        .injectdbiterrb(1'b0),
        .injectsbiterra(1'b0),
        .injectsbiterrb(1'b0),
        .regcea(1'b0),
        .regceb(\gen_fwft.ram_regout_en ),
        .rsta(1'b0),
        .rstb(rd_rst_busy),
        .sbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ),
        .sbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ),
        .sleep(sleep),
        .wea(1'b0),
        .web(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair206" *) 
  LUT3 #(
    .INIT(8'h62)) 
    \gen_sdpram.xpm_memory_base_inst_i_3 
       (.I0(curr_fwft_state[0]),
        .I1(curr_fwft_state[1]),
        .I2(rd_en),
        .O(\gen_fwft.ram_regout_en ));
  FDRE #(
    .INIT(1'b0)) 
    \gof.overflow_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(overflow_i0),
        .Q(overflow),
        .R(1'b0));
  FDRE \grdc.rd_data_count_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q(rd_data_count[0]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(rd_data_count[1]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [3]),
        .Q(rd_data_count[2]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [4]),
        .Q(rd_data_count[3]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [5]),
        .Q(rd_data_count[4]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [6]),
        .Q(rd_data_count[5]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [7]),
        .Q(rd_data_count[6]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [8]),
        .Q(rd_data_count[7]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \guf.underflow_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(underflow_i0),
        .Q(underflow),
        .R(1'b0));
  FDRE \gwdc.wr_data_count_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [1]),
        .Q(wr_data_count[0]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [2]),
        .Q(wr_data_count[1]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [3]),
        .Q(wr_data_count[2]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [4]),
        .Q(wr_data_count[3]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [5]),
        .Q(wr_data_count[4]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [6]),
        .Q(wr_data_count[5]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [7]),
        .Q(wr_data_count[6]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [8]),
        .Q(wr_data_count[7]),
        .R(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized0_30 rdp_inst
       (.D(diff_pntr_pe),
        .DI(rdp_inst_n_9),
        .Q(rd_pntr_ext),
        .S({rdp_inst_n_19,rdp_inst_n_20,rdp_inst_n_21,rdp_inst_n_22,rdp_inst_n_23}),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\count_value_i_reg[7]_0 (rdp_inst_n_10),
        .\count_value_i_reg[8]_0 (rd_rst_busy),
        .enb(rdp_inst_n_8),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ({\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .\grdc.rd_data_count_i_reg[7] (count_value_i),
        .\grdc.rd_data_count_i_reg[8] ({\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_15 }),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .src_in_bin({rdp_inst_n_24,rdp_inst_n_25,rdp_inst_n_26,rdp_inst_n_27,rdp_inst_n_28,rdp_inst_n_29,rdp_inst_n_30,rdp_inst_n_31}));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized1_31 rdpp1_inst
       (.E(rdp_inst_n_8),
        .Q({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3,rdpp1_inst_n_4,rdpp1_inst_n_5,rdpp1_inst_n_6,rdpp1_inst_n_7}),
        .\count_value_i_reg[0]_0 (rd_rst_busy),
        .\count_value_i_reg[1]_0 (curr_fwft_state),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_bit_32 rst_d1_inst
       (.Q(diff_pntr_pf_q),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] (rst_d1_inst_n_1),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg (full),
        .overflow_i0(overflow_i0),
        .prog_full(prog_full),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized0_33 wrp_inst
       (.D(\gwdc.diff_wr_rd_pntr1_out ),
        .Q(wr_pntr_ext),
        .\count_value_i_reg[6]_0 (full),
        .\gwdc.wr_data_count_i_reg[8] ({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 }),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized1_34 wrpp1_inst
       (.D(diff_pntr_pf_q0),
        .Q(wr_pntr_plus1_pf),
        .\count_value_i_reg[6]_0 (full),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] (rd_pntr_wr),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized2_35 wrpp2_inst
       (.Q({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7}),
        .\count_value_i_reg[6]_0 (full),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_rst__xdcDup__1 xpm_fifo_rst_inst
       (.Q(curr_fwft_state),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[7] (full),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_0 (rd_rst_busy),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_1 (\grdc.rd_data_count_i0 ),
        .\guf.underflow_i_reg (empty),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .rst_d1(rst_d1),
        .underflow_i0(underflow_i0),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wr_rst_busy(wr_rst_busy),
        .wrst_busy(wrst_busy));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_bit
   (rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ,
    clr_full,
    overflow_i0,
    wrst_busy,
    wr_clk,
    Q,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ,
    prog_full,
    wr_en,
    rst);
  output rst_d1;
  output \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  output clr_full;
  output overflow_i0;
  input wrst_busy;
  input wr_clk;
  input [7:0]Q;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  input prog_full;
  input wr_en;
  input rst;

  wire [7:0]Q;
  wire clr_full;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  wire overflow_i0;
  wire prog_full;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    d_out_int_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(wrst_busy),
        .Q(rst_d1),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair332" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6 
       (.I0(rst),
        .I1(rst_d1),
        .I2(wrst_busy),
        .O(clr_full));
  LUT6 #(
    .INIT(64'h00FF00E0000000E0)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_1 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ),
        .I2(Q[7]),
        .I3(clr_full),
        .I4(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg ),
        .I5(prog_full),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[4]),
        .I3(Q[5]),
        .I4(Q[2]),
        .I5(Q[3]),
        .O(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair332" *) 
  LUT4 #(
    .INIT(16'hFE00)) 
    \gof.overflow_i_i_1 
       (.I0(rst_d1),
        .I1(wrst_busy),
        .I2(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg ),
        .I3(wr_en),
        .O(overflow_i0));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_bit" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_bit_12
   (rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ,
    clr_full,
    overflow_i0,
    wrst_busy,
    wr_clk,
    Q,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ,
    prog_full,
    wr_en,
    rst);
  output rst_d1;
  output \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  output clr_full;
  output overflow_i0;
  input wrst_busy;
  input wr_clk;
  input [7:0]Q;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  input prog_full;
  input wr_en;
  input rst;

  wire [7:0]Q;
  wire clr_full;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  wire overflow_i0;
  wire prog_full;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    d_out_int_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(wrst_busy),
        .Q(rst_d1),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair278" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6 
       (.I0(rst),
        .I1(rst_d1),
        .I2(wrst_busy),
        .O(clr_full));
  LUT6 #(
    .INIT(64'h00FF00E0000000E0)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_1 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ),
        .I2(Q[7]),
        .I3(clr_full),
        .I4(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg ),
        .I5(prog_full),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[4]),
        .I3(Q[5]),
        .I4(Q[2]),
        .I5(Q[3]),
        .O(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair278" *) 
  LUT4 #(
    .INIT(16'hFE00)) 
    \gof.overflow_i_i_1 
       (.I0(rst_d1),
        .I1(wrst_busy),
        .I2(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg ),
        .I3(wr_en),
        .O(overflow_i0));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_bit" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_bit_22
   (rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ,
    overflow_i0,
    wrst_busy,
    wr_clk,
    Q,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ,
    prog_full,
    wr_en,
    rst);
  output rst_d1;
  output \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  output overflow_i0;
  input wrst_busy;
  input wr_clk;
  input [6:0]Q;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  input prog_full;
  input wr_en;
  input rst;

  wire [6:0]Q;
  wire clr_full;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  wire overflow_i0;
  wire prog_full;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    d_out_int_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(wrst_busy),
        .Q(rst_d1),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h0F0E000E)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_1 
       (.I0(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ),
        .I1(Q[6]),
        .I2(clr_full),
        .I3(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg ),
        .I4(prog_full),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[4]),
        .I3(Q[5]),
        .I4(Q[2]),
        .I5(Q[3]),
        .O(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair227" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_3 
       (.I0(rst),
        .I1(rst_d1),
        .I2(wrst_busy),
        .O(clr_full));
  (* SOFT_HLUTNM = "soft_lutpair227" *) 
  LUT4 #(
    .INIT(16'hFE00)) 
    \gof.overflow_i_i_1 
       (.I0(rst_d1),
        .I1(wrst_busy),
        .I2(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg ),
        .I3(wr_en),
        .O(overflow_i0));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_bit" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_bit_32
   (rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ,
    overflow_i0,
    wrst_busy,
    wr_clk,
    Q,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ,
    prog_full,
    wr_en,
    rst);
  output rst_d1;
  output \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  output overflow_i0;
  input wrst_busy;
  input wr_clk;
  input [6:0]Q;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  input prog_full;
  input wr_en;
  input rst;

  wire [6:0]Q;
  wire clr_full;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  wire overflow_i0;
  wire prog_full;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    d_out_int_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(wrst_busy),
        .Q(rst_d1),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h0F0E000E)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_1 
       (.I0(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ),
        .I1(Q[6]),
        .I2(clr_full),
        .I3(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg ),
        .I4(prog_full),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[4]),
        .I3(Q[5]),
        .I4(Q[2]),
        .I5(Q[3]),
        .O(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair196" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_3 
       (.I0(rst),
        .I1(rst_d1),
        .I2(wrst_busy),
        .O(clr_full));
  (* SOFT_HLUTNM = "soft_lutpair196" *) 
  LUT4 #(
    .INIT(16'hFE00)) 
    \gof.overflow_i_i_1 
       (.I0(rst_d1),
        .I1(wrst_busy),
        .I2(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg ),
        .I3(wr_en),
        .O(overflow_i0));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_bit" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_bit_43
   (rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ,
    overflow_i0,
    wrst_busy,
    wr_clk,
    Q,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ,
    prog_full,
    wr_en,
    rst);
  output rst_d1;
  output \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  output overflow_i0;
  input wrst_busy;
  input wr_clk;
  input [6:0]Q;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  input prog_full;
  input wr_en;
  input rst;

  wire [6:0]Q;
  wire clr_full;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  wire overflow_i0;
  wire prog_full;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    d_out_int_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(wrst_busy),
        .Q(rst_d1),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h0F0E000E)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_1 
       (.I0(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ),
        .I1(Q[6]),
        .I2(clr_full),
        .I3(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg ),
        .I4(prog_full),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[4]),
        .I3(Q[5]),
        .I4(Q[2]),
        .I5(Q[3]),
        .O(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair164" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_3 
       (.I0(rst),
        .I1(rst_d1),
        .I2(wrst_busy),
        .O(clr_full));
  (* SOFT_HLUTNM = "soft_lutpair164" *) 
  LUT4 #(
    .INIT(16'hFE00)) 
    \gof.overflow_i_i_1 
       (.I0(rst_d1),
        .I1(wrst_busy),
        .I2(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg ),
        .I3(wr_en),
        .O(overflow_i0));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_bit" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_bit_51
   (rst_d1,
    d_out_int_reg_0,
    overflow_i0,
    clr_full,
    D,
    wrst_busy,
    wr_clk,
    Q,
    rst,
    \gof.overflow_i_reg ,
    prog_full,
    wr_en,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] ,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1]_0 );
  output rst_d1;
  output d_out_int_reg_0;
  output overflow_i0;
  output clr_full;
  output [0:0]D;
  input wrst_busy;
  input wr_clk;
  input [3:0]Q;
  input rst;
  input \gof.overflow_i_reg ;
  input prog_full;
  input wr_en;
  input [0:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] ;
  input [0:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1]_0 ;

  wire [0:0]D;
  wire [3:0]Q;
  wire clr_full;
  wire d_out_int_reg_0;
  wire [0:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] ;
  wire [0:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1]_0 ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ;
  wire \gof.overflow_i_reg ;
  wire overflow_i0;
  wire prog_full;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    d_out_int_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(wrst_busy),
        .Q(rst_d1),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6 
       (.I0(rst),
        .I1(rst_d1),
        .I2(wrst_busy),
        .O(clr_full));
  LUT5 #(
    .INIT(32'hEF1010EF)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[1]_i_1 
       (.I0(rst_d1),
        .I1(\gof.overflow_i_reg ),
        .I2(wr_en),
        .I3(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] ),
        .I4(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1]_0 ),
        .O(D));
  LUT5 #(
    .INIT(32'hF3A200A2)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_1 
       (.I0(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ),
        .I1(rst_d1),
        .I2(rst),
        .I3(\gof.overflow_i_reg ),
        .I4(prog_full),
        .O(d_out_int_reg_0));
  LUT4 #(
    .INIT(16'hAAA8)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2 
       (.I0(Q[3]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(Q[1]),
        .O(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT4 #(
    .INIT(16'hFE00)) 
    \gof.overflow_i_i_1 
       (.I0(rst_d1),
        .I1(wrst_busy),
        .I2(\gof.overflow_i_reg ),
        .I3(wr_en),
        .O(overflow_i0));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_bit" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_bit_61
   (rst_d1,
    d_out_int_reg_0,
    overflow_i0,
    clr_full,
    D,
    wrst_busy,
    wr_clk,
    Q,
    rst,
    \gof.overflow_i_reg ,
    prog_full,
    wr_en,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] ,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1]_0 );
  output rst_d1;
  output d_out_int_reg_0;
  output overflow_i0;
  output clr_full;
  output [0:0]D;
  input wrst_busy;
  input wr_clk;
  input [3:0]Q;
  input rst;
  input \gof.overflow_i_reg ;
  input prog_full;
  input wr_en;
  input [0:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] ;
  input [0:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1]_0 ;

  wire [0:0]D;
  wire [3:0]Q;
  wire clr_full;
  wire d_out_int_reg_0;
  wire [0:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] ;
  wire [0:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1]_0 ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ;
  wire \gof.overflow_i_reg ;
  wire overflow_i0;
  wire prog_full;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    d_out_int_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(wrst_busy),
        .Q(rst_d1),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6 
       (.I0(rst),
        .I1(rst_d1),
        .I2(wrst_busy),
        .O(clr_full));
  LUT5 #(
    .INIT(32'hEF1010EF)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[1]_i_1 
       (.I0(rst_d1),
        .I1(\gof.overflow_i_reg ),
        .I2(wr_en),
        .I3(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] ),
        .I4(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1]_0 ),
        .O(D));
  LUT5 #(
    .INIT(32'hF3A200A2)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_1 
       (.I0(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ),
        .I1(rst_d1),
        .I2(rst),
        .I3(\gof.overflow_i_reg ),
        .I4(prog_full),
        .O(d_out_int_reg_0));
  LUT4 #(
    .INIT(16'hAAA8)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2 
       (.I0(Q[3]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(Q[1]),
        .O(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT4 #(
    .INIT(16'hFE00)) 
    \gof.overflow_i_i_1 
       (.I0(rst_d1),
        .I1(wrst_busy),
        .I2(\gof.overflow_i_reg ),
        .I3(wr_en),
        .O(overflow_i0));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec
   (\reg_out_i_reg[7]_0 ,
    d_out_int_reg,
    Q,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ,
    wr_pntr_plus1_pf_carry,
    rst_d1,
    rst,
    wrst_busy,
    D,
    wr_clk);
  output [7:0]\reg_out_i_reg[7]_0 ;
  output d_out_int_reg;
  input [7:0]Q;
  input [7:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  input wr_pntr_plus1_pf_carry;
  input rst_d1;
  input rst;
  input wrst_busy;
  input [7:0]D;
  input wr_clk;

  wire [7:0]D;
  wire [7:0]Q;
  wire d_out_int_reg;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  wire going_full0;
  wire leaving_full;
  wire [7:0]\reg_out_i_reg[7]_0 ;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'hEAEA00EA)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_1 
       (.I0(leaving_full),
        .I1(going_full0),
        .I2(wr_pntr_plus1_pf_carry),
        .I3(rst_d1),
        .I4(rst),
        .O(d_out_int_reg));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2 
       (.I0(Q[7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(Q[6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ),
        .I5(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ),
        .O(leaving_full));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3 
       (.I0(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ),
        .I5(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ),
        .O(going_full0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(Q[3]),
        .I2(Q[5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(Q[4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(Q[1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [3]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [0]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(\reg_out_i_reg[7]_0 [0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(\reg_out_i_reg[7]_0 [1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(\reg_out_i_reg[7]_0 [2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(\reg_out_i_reg[7]_0 [3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(\reg_out_i_reg[7]_0 [4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(\reg_out_i_reg[7]_0 [5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(\reg_out_i_reg[7]_0 [6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(\reg_out_i_reg[7]_0 [7]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec_19
   (ram_empty_i0,
    \reg_out_i_reg[7]_0 ,
    Q,
    rd_en,
    ram_empty_i,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \gen_pf_ic_rc.ram_empty_i_reg_0 ,
    \reg_out_i_reg[0]_0 ,
    D,
    rd_clk);
  output ram_empty_i0;
  output [7:0]\reg_out_i_reg[7]_0 ;
  input [1:0]Q;
  input rd_en;
  input ram_empty_i;
  input [7:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  input [7:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  input \reg_out_i_reg[0]_0 ;
  input [7:0]D;
  input rd_clk;

  wire [7:0]D;
  wire [1:0]Q;
  wire \gen_pf_ic_rc.ram_empty_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_5_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_6_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_7_n_0 ;
  wire [7:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  wire [7:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  wire going_empty0;
  wire leaving_empty;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire rd_en;
  wire \reg_out_i_reg[0]_0 ;
  wire [7:0]\reg_out_i_reg[7]_0 ;

  LUT6 #(
    .INIT(64'hFFFFFFFF00FD0000)) 
    \gen_pf_ic_rc.ram_empty_i_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .I4(going_empty0),
        .I5(leaving_empty),
        .O(ram_empty_i0));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.ram_empty_i_i_2 
       (.I0(\gen_pf_ic_rc.ram_empty_i_reg_0 [7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ),
        .I5(\gen_pf_ic_rc.ram_empty_i_i_5_n_0 ),
        .O(going_empty0));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.ram_empty_i_i_3 
       (.I0(\gen_pf_ic_rc.ram_empty_i_reg [7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.ram_empty_i_i_6_n_0 ),
        .I5(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ),
        .O(leaving_empty));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_4 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [3]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_0 [4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_5 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_0 [1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_6 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_7 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(\reg_out_i_reg[7]_0 [0]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(\reg_out_i_reg[7]_0 [1]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(\reg_out_i_reg[7]_0 [2]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(\reg_out_i_reg[7]_0 [3]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(\reg_out_i_reg[7]_0 [4]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(\reg_out_i_reg[7]_0 [5]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(\reg_out_i_reg[7]_0 [6]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(\reg_out_i_reg[7]_0 [7]),
        .R(\reg_out_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec_25
   (\reg_out_i_reg[7]_0 ,
    d_out_int_reg,
    Q,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ,
    wr_pntr_plus1_pf_carry,
    rst_d1,
    rst,
    wrst_busy,
    D,
    wr_clk);
  output [7:0]\reg_out_i_reg[7]_0 ;
  output d_out_int_reg;
  input [7:0]Q;
  input [7:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  input wr_pntr_plus1_pf_carry;
  input rst_d1;
  input rst;
  input wrst_busy;
  input [7:0]D;
  input wr_clk;

  wire [7:0]D;
  wire [7:0]Q;
  wire d_out_int_reg;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  wire going_full0;
  wire leaving_full;
  wire [7:0]\reg_out_i_reg[7]_0 ;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'hEAEA00EA)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_1 
       (.I0(leaving_full),
        .I1(going_full0),
        .I2(wr_pntr_plus1_pf_carry),
        .I3(rst_d1),
        .I4(rst),
        .O(d_out_int_reg));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2 
       (.I0(Q[7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(Q[6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ),
        .I5(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ),
        .O(leaving_full));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3 
       (.I0(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ),
        .I5(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ),
        .O(going_full0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(Q[3]),
        .I2(Q[5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(Q[4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(Q[1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [3]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [0]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(\reg_out_i_reg[7]_0 [0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(\reg_out_i_reg[7]_0 [1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(\reg_out_i_reg[7]_0 [2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(\reg_out_i_reg[7]_0 [3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(\reg_out_i_reg[7]_0 [4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(\reg_out_i_reg[7]_0 [5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(\reg_out_i_reg[7]_0 [6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(\reg_out_i_reg[7]_0 [7]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec_27
   (ram_empty_i0,
    \reg_out_i_reg[7]_0 ,
    Q,
    rd_en,
    ram_empty_i,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \gen_pf_ic_rc.ram_empty_i_reg_0 ,
    \reg_out_i_reg[0]_0 ,
    D,
    rd_clk);
  output ram_empty_i0;
  output [7:0]\reg_out_i_reg[7]_0 ;
  input [1:0]Q;
  input rd_en;
  input ram_empty_i;
  input [7:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  input [7:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  input \reg_out_i_reg[0]_0 ;
  input [7:0]D;
  input rd_clk;

  wire [7:0]D;
  wire [1:0]Q;
  wire \gen_pf_ic_rc.ram_empty_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_5_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_6_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_7_n_0 ;
  wire [7:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  wire [7:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  wire going_empty0;
  wire leaving_empty;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire rd_en;
  wire \reg_out_i_reg[0]_0 ;
  wire [7:0]\reg_out_i_reg[7]_0 ;

  LUT6 #(
    .INIT(64'hFFFFFFFF00FD0000)) 
    \gen_pf_ic_rc.ram_empty_i_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .I4(going_empty0),
        .I5(leaving_empty),
        .O(ram_empty_i0));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.ram_empty_i_i_2 
       (.I0(\gen_pf_ic_rc.ram_empty_i_reg_0 [7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ),
        .I5(\gen_pf_ic_rc.ram_empty_i_i_5_n_0 ),
        .O(going_empty0));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.ram_empty_i_i_3 
       (.I0(\gen_pf_ic_rc.ram_empty_i_reg [7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.ram_empty_i_i_6_n_0 ),
        .I5(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ),
        .O(leaving_empty));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_4 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [3]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_0 [4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_5 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_0 [1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_6 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_7 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(\reg_out_i_reg[7]_0 [0]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(\reg_out_i_reg[7]_0 [1]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(\reg_out_i_reg[7]_0 [2]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(\reg_out_i_reg[7]_0 [3]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(\reg_out_i_reg[7]_0 [4]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(\reg_out_i_reg[7]_0 [5]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(\reg_out_i_reg[7]_0 [6]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(\reg_out_i_reg[7]_0 [7]),
        .R(\reg_out_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec_36
   (\reg_out_i_reg[7]_0 ,
    d_out_int_reg,
    Q,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ,
    wr_pntr_plus1_pf_carry,
    rst_d1,
    rst,
    wrst_busy,
    D,
    wr_clk);
  output [7:0]\reg_out_i_reg[7]_0 ;
  output d_out_int_reg;
  input [7:0]Q;
  input [7:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  input wr_pntr_plus1_pf_carry;
  input rst_d1;
  input rst;
  input wrst_busy;
  input [7:0]D;
  input wr_clk;

  wire [7:0]D;
  wire [7:0]Q;
  wire d_out_int_reg;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  wire going_full0;
  wire leaving_full;
  wire [7:0]\reg_out_i_reg[7]_0 ;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'hEAEA00EA)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_1 
       (.I0(leaving_full),
        .I1(going_full0),
        .I2(wr_pntr_plus1_pf_carry),
        .I3(rst_d1),
        .I4(rst),
        .O(d_out_int_reg));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2 
       (.I0(Q[7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(Q[6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ),
        .I5(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ),
        .O(leaving_full));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3 
       (.I0(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ),
        .I5(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ),
        .O(going_full0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(Q[3]),
        .I2(Q[5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(Q[4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(Q[1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [3]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [0]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(\reg_out_i_reg[7]_0 [0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(\reg_out_i_reg[7]_0 [1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(\reg_out_i_reg[7]_0 [2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(\reg_out_i_reg[7]_0 [3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(\reg_out_i_reg[7]_0 [4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(\reg_out_i_reg[7]_0 [5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(\reg_out_i_reg[7]_0 [6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(\reg_out_i_reg[7]_0 [7]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec_38
   (ram_empty_i0,
    \reg_out_i_reg[7]_0 ,
    Q,
    rd_en,
    ram_empty_i,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \gen_pf_ic_rc.ram_empty_i_reg_0 ,
    \reg_out_i_reg[0]_0 ,
    D,
    rd_clk);
  output ram_empty_i0;
  output [7:0]\reg_out_i_reg[7]_0 ;
  input [1:0]Q;
  input rd_en;
  input ram_empty_i;
  input [7:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  input [7:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  input \reg_out_i_reg[0]_0 ;
  input [7:0]D;
  input rd_clk;

  wire [7:0]D;
  wire [1:0]Q;
  wire \gen_pf_ic_rc.ram_empty_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_5_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_6_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_7_n_0 ;
  wire [7:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  wire [7:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  wire going_empty0;
  wire leaving_empty;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire rd_en;
  wire \reg_out_i_reg[0]_0 ;
  wire [7:0]\reg_out_i_reg[7]_0 ;

  LUT6 #(
    .INIT(64'hFFFFFFFF00FD0000)) 
    \gen_pf_ic_rc.ram_empty_i_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .I4(going_empty0),
        .I5(leaving_empty),
        .O(ram_empty_i0));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.ram_empty_i_i_2 
       (.I0(\gen_pf_ic_rc.ram_empty_i_reg_0 [7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ),
        .I5(\gen_pf_ic_rc.ram_empty_i_i_5_n_0 ),
        .O(going_empty0));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.ram_empty_i_i_3 
       (.I0(\gen_pf_ic_rc.ram_empty_i_reg [7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.ram_empty_i_i_6_n_0 ),
        .I5(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ),
        .O(leaving_empty));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_4 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [3]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_0 [4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_5 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_0 [1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_6 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_7 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(\reg_out_i_reg[7]_0 [0]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(\reg_out_i_reg[7]_0 [1]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(\reg_out_i_reg[7]_0 [2]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(\reg_out_i_reg[7]_0 [3]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(\reg_out_i_reg[7]_0 [4]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(\reg_out_i_reg[7]_0 [5]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(\reg_out_i_reg[7]_0 [6]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(\reg_out_i_reg[7]_0 [7]),
        .R(\reg_out_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized0
   (Q,
    \reg_out_i_reg[0]_0 ,
    wr_pntr_plus1_pf_carry,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 ,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ,
    clr_full,
    wrst_busy,
    D,
    wr_clk);
  output [8:0]Q;
  output \reg_out_i_reg[0]_0 ;
  input wr_pntr_plus1_pf_carry;
  input [8:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 ;
  input [8:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  input clr_full;
  input wrst_busy;
  input [8:0]D;
  input wr_clk;

  wire [8:0]D;
  wire [8:0]Q;
  wire clr_full;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ;
  wire [8:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_8_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_9_n_0 ;
  wire [8:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  wire going_full;
  wire \reg_out_i_reg[0]_0 ;
  wire wr_clk;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'h0000FF80)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_1 
       (.I0(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2_n_0 ),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ),
        .I3(going_full),
        .I4(clr_full),
        .O(\reg_out_i_reg[0]_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [0]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [2]),
        .I3(Q[2]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [6]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [8]),
        .I3(Q[8]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [7]),
        .I5(Q[7]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [3]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [5]),
        .I3(Q[5]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [4]),
        .I5(Q[4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h8000)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5 
       (.I0(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_8_n_0 ),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_9_n_0 ),
        .I3(wr_pntr_plus1_pf_carry),
        .O(going_full));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [3]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [5]),
        .I3(Q[5]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [4]),
        .I5(Q[4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_8 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [6]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [8]),
        .I3(Q[8]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [7]),
        .I5(Q[7]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_9 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [0]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [2]),
        .I3(Q[2]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_9_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized0_1
   (\reg_out_i_reg[8]_0 ,
    D,
    ram_empty_i,
    rd_en,
    Q,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ,
    S,
    \reg_out_i_reg[0]_0 ,
    \reg_out_i_reg[8]_1 ,
    rd_clk);
  output [8:0]\reg_out_i_reg[8]_0 ;
  output [8:0]D;
  input ram_empty_i;
  input rd_en;
  input [1:0]Q;
  input [0:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ;
  input [7:0]S;
  input \reg_out_i_reg[0]_0 ;
  input [8:0]\reg_out_i_reg[8]_1 ;
  input rd_clk;

  wire [8:0]D;
  wire [1:0]Q;
  wire [7:0]S;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[8]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 ;
  wire [0:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ;
  wire p_1_in;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire \reg_out_i_reg[0]_0 ;
  wire [8:0]\reg_out_i_reg[8]_0 ;
  wire [8:0]\reg_out_i_reg[8]_1 ;
  wire [7:0]\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1_CO_UNCONNECTED ;
  wire [7:1]\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1_O_UNCONNECTED ;

  LUT4 #(
    .INIT(16'hAABA)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(Q[1]),
        .I3(Q[0]),
        .O(p_1_in));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[8]_i_2 
       (.I0(\reg_out_i_reg[8]_0 [8]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[8]_i_2_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1 
       (.CI(\reg_out_i_reg[8]_0 [0]),
        .CI_TOP(1'b0),
        .CO({\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 }),
        .DI({\reg_out_i_reg[8]_0 [7:1],p_1_in}),
        .O(D[7:0]),
        .S(S));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1 
       (.CI(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1_O_UNCONNECTED [7:1],D[8]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[8]_i_2_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [0]),
        .Q(\reg_out_i_reg[8]_0 [0]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [1]),
        .Q(\reg_out_i_reg[8]_0 [1]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [2]),
        .Q(\reg_out_i_reg[8]_0 [2]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [3]),
        .Q(\reg_out_i_reg[8]_0 [3]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [4]),
        .Q(\reg_out_i_reg[8]_0 [4]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [5]),
        .Q(\reg_out_i_reg[8]_0 [5]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [6]),
        .Q(\reg_out_i_reg[8]_0 [6]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [7]),
        .Q(\reg_out_i_reg[8]_0 [7]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [8]),
        .Q(\reg_out_i_reg[8]_0 [8]),
        .R(\reg_out_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized0_18
   (Q,
    wrst_busy,
    D,
    wr_clk);
  output [8:0]Q;
  input wrst_busy;
  input [8:0]D;
  input wr_clk;

  wire [8:0]D;
  wire [8:0]Q;
  wire wr_clk;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized0_20
   (D,
    Q,
    DI,
    S,
    \grdc.rd_data_count_i_reg[8] ,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[7]_0 ,
    \reg_out_i_reg[8]_0 ,
    \reg_out_i_reg[8]_1 ,
    rd_clk);
  output [7:0]D;
  output [8:0]Q;
  input [1:0]DI;
  input [6:0]S;
  input [0:0]\grdc.rd_data_count_i_reg[8] ;
  input [0:0]\grdc.rd_data_count_i_reg[7] ;
  input [5:0]\grdc.rd_data_count_i_reg[7]_0 ;
  input \reg_out_i_reg[8]_0 ;
  input [8:0]\reg_out_i_reg[8]_1 ;
  input rd_clk;

  wire [7:0]D;
  wire [1:0]DI;
  wire [8:0]Q;
  wire [6:0]S;
  wire \grdc.rd_data_count_i[7]_i_14_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_2_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_3_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_4_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_5_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_6_n_0 ;
  wire [0:0]\grdc.rd_data_count_i_reg[7] ;
  wire [5:0]\grdc.rd_data_count_i_reg[7]_0 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_0 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_1 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_2 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_3 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_4 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_5 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_6 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_7 ;
  wire [0:0]\grdc.rd_data_count_i_reg[8] ;
  wire rd_clk;
  wire \reg_out_i_reg[8]_0 ;
  wire [8:0]\reg_out_i_reg[8]_1 ;
  wire [0:0]\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:0]\NLW_grdc.rd_data_count_i_reg[8]_i_2_CO_UNCONNECTED ;
  wire [7:1]\NLW_grdc.rd_data_count_i_reg[8]_i_2_O_UNCONNECTED ;

  LUT5 #(
    .INIT(32'h718E8E71)) 
    \grdc.rd_data_count_i[7]_i_14 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] ),
        .I2(\grdc.rd_data_count_i_reg[7]_0 [0]),
        .I3(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .I4(Q[2]),
        .O(\grdc.rd_data_count_i[7]_i_14_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_2 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [5]),
        .O(\grdc.rd_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_3 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [4]),
        .O(\grdc.rd_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_4 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [3]),
        .O(\grdc.rd_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_5 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [2]),
        .O(\grdc.rd_data_count_i[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_6 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .O(\grdc.rd_data_count_i[7]_i_6_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[7]_i_1 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\grdc.rd_data_count_i_reg[7]_i_1_n_0 ,\grdc.rd_data_count_i_reg[7]_i_1_n_1 ,\grdc.rd_data_count_i_reg[7]_i_1_n_2 ,\grdc.rd_data_count_i_reg[7]_i_1_n_3 ,\grdc.rd_data_count_i_reg[7]_i_1_n_4 ,\grdc.rd_data_count_i_reg[7]_i_1_n_5 ,\grdc.rd_data_count_i_reg[7]_i_1_n_6 ,\grdc.rd_data_count_i_reg[7]_i_1_n_7 }),
        .DI({\grdc.rd_data_count_i[7]_i_2_n_0 ,\grdc.rd_data_count_i[7]_i_3_n_0 ,\grdc.rd_data_count_i[7]_i_4_n_0 ,\grdc.rd_data_count_i[7]_i_5_n_0 ,\grdc.rd_data_count_i[7]_i_6_n_0 ,DI,Q[0]}),
        .O({D[6:0],\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({S[6:2],\grdc.rd_data_count_i[7]_i_14_n_0 ,S[1:0]}));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[8]_i_2 
       (.CI(\grdc.rd_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_grdc.rd_data_count_i_reg[8]_i_2_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_grdc.rd_data_count_i_reg[8]_i_2_O_UNCONNECTED [7:1],D[7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\grdc.rd_data_count_i_reg[8] }));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [4]),
        .Q(Q[4]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [5]),
        .Q(Q[5]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [6]),
        .Q(Q[6]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [7]),
        .Q(Q[7]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [8]),
        .Q(Q[8]),
        .R(\reg_out_i_reg[8]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized0_26
   (Q,
    wrst_busy,
    D,
    wr_clk);
  output [8:0]Q;
  input wrst_busy;
  input [8:0]D;
  input wr_clk;

  wire [8:0]D;
  wire [8:0]Q;
  wire wr_clk;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized0_28
   (D,
    Q,
    DI,
    S,
    \grdc.rd_data_count_i_reg[8] ,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[7]_0 ,
    \reg_out_i_reg[8]_0 ,
    \reg_out_i_reg[8]_1 ,
    rd_clk);
  output [7:0]D;
  output [8:0]Q;
  input [1:0]DI;
  input [6:0]S;
  input [0:0]\grdc.rd_data_count_i_reg[8] ;
  input [0:0]\grdc.rd_data_count_i_reg[7] ;
  input [5:0]\grdc.rd_data_count_i_reg[7]_0 ;
  input \reg_out_i_reg[8]_0 ;
  input [8:0]\reg_out_i_reg[8]_1 ;
  input rd_clk;

  wire [7:0]D;
  wire [1:0]DI;
  wire [8:0]Q;
  wire [6:0]S;
  wire \grdc.rd_data_count_i[7]_i_14_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_2_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_3_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_4_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_5_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_6_n_0 ;
  wire [0:0]\grdc.rd_data_count_i_reg[7] ;
  wire [5:0]\grdc.rd_data_count_i_reg[7]_0 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_0 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_1 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_2 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_3 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_4 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_5 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_6 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_7 ;
  wire [0:0]\grdc.rd_data_count_i_reg[8] ;
  wire rd_clk;
  wire \reg_out_i_reg[8]_0 ;
  wire [8:0]\reg_out_i_reg[8]_1 ;
  wire [0:0]\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:0]\NLW_grdc.rd_data_count_i_reg[8]_i_2_CO_UNCONNECTED ;
  wire [7:1]\NLW_grdc.rd_data_count_i_reg[8]_i_2_O_UNCONNECTED ;

  LUT5 #(
    .INIT(32'h718E8E71)) 
    \grdc.rd_data_count_i[7]_i_14 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] ),
        .I2(\grdc.rd_data_count_i_reg[7]_0 [0]),
        .I3(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .I4(Q[2]),
        .O(\grdc.rd_data_count_i[7]_i_14_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_2 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [5]),
        .O(\grdc.rd_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_3 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [4]),
        .O(\grdc.rd_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_4 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [3]),
        .O(\grdc.rd_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_5 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [2]),
        .O(\grdc.rd_data_count_i[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_6 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .O(\grdc.rd_data_count_i[7]_i_6_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[7]_i_1 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\grdc.rd_data_count_i_reg[7]_i_1_n_0 ,\grdc.rd_data_count_i_reg[7]_i_1_n_1 ,\grdc.rd_data_count_i_reg[7]_i_1_n_2 ,\grdc.rd_data_count_i_reg[7]_i_1_n_3 ,\grdc.rd_data_count_i_reg[7]_i_1_n_4 ,\grdc.rd_data_count_i_reg[7]_i_1_n_5 ,\grdc.rd_data_count_i_reg[7]_i_1_n_6 ,\grdc.rd_data_count_i_reg[7]_i_1_n_7 }),
        .DI({\grdc.rd_data_count_i[7]_i_2_n_0 ,\grdc.rd_data_count_i[7]_i_3_n_0 ,\grdc.rd_data_count_i[7]_i_4_n_0 ,\grdc.rd_data_count_i[7]_i_5_n_0 ,\grdc.rd_data_count_i[7]_i_6_n_0 ,DI,Q[0]}),
        .O({D[6:0],\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({S[6:2],\grdc.rd_data_count_i[7]_i_14_n_0 ,S[1:0]}));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[8]_i_2 
       (.CI(\grdc.rd_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_grdc.rd_data_count_i_reg[8]_i_2_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_grdc.rd_data_count_i_reg[8]_i_2_O_UNCONNECTED [7:1],D[7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\grdc.rd_data_count_i_reg[8] }));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [4]),
        .Q(Q[4]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [5]),
        .Q(Q[5]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [6]),
        .Q(Q[6]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [7]),
        .Q(Q[7]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [8]),
        .Q(Q[8]),
        .R(\reg_out_i_reg[8]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized0_37
   (Q,
    wrst_busy,
    D,
    wr_clk);
  output [8:0]Q;
  input wrst_busy;
  input [8:0]D;
  input wr_clk;

  wire [8:0]D;
  wire [8:0]Q;
  wire wr_clk;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized0_39
   (D,
    Q,
    DI,
    S,
    \grdc.rd_data_count_i_reg[8] ,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[7]_0 ,
    \reg_out_i_reg[8]_0 ,
    \reg_out_i_reg[8]_1 ,
    rd_clk);
  output [7:0]D;
  output [8:0]Q;
  input [1:0]DI;
  input [6:0]S;
  input [0:0]\grdc.rd_data_count_i_reg[8] ;
  input [0:0]\grdc.rd_data_count_i_reg[7] ;
  input [5:0]\grdc.rd_data_count_i_reg[7]_0 ;
  input \reg_out_i_reg[8]_0 ;
  input [8:0]\reg_out_i_reg[8]_1 ;
  input rd_clk;

  wire [7:0]D;
  wire [1:0]DI;
  wire [8:0]Q;
  wire [6:0]S;
  wire \grdc.rd_data_count_i[7]_i_14_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_2_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_3_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_4_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_5_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_6_n_0 ;
  wire [0:0]\grdc.rd_data_count_i_reg[7] ;
  wire [5:0]\grdc.rd_data_count_i_reg[7]_0 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_0 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_1 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_2 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_3 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_4 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_5 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_6 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_7 ;
  wire [0:0]\grdc.rd_data_count_i_reg[8] ;
  wire rd_clk;
  wire \reg_out_i_reg[8]_0 ;
  wire [8:0]\reg_out_i_reg[8]_1 ;
  wire [0:0]\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:0]\NLW_grdc.rd_data_count_i_reg[8]_i_2_CO_UNCONNECTED ;
  wire [7:1]\NLW_grdc.rd_data_count_i_reg[8]_i_2_O_UNCONNECTED ;

  LUT5 #(
    .INIT(32'h718E8E71)) 
    \grdc.rd_data_count_i[7]_i_14 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] ),
        .I2(\grdc.rd_data_count_i_reg[7]_0 [0]),
        .I3(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .I4(Q[2]),
        .O(\grdc.rd_data_count_i[7]_i_14_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_2 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [5]),
        .O(\grdc.rd_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_3 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [4]),
        .O(\grdc.rd_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_4 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [3]),
        .O(\grdc.rd_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_5 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [2]),
        .O(\grdc.rd_data_count_i[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_6 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .O(\grdc.rd_data_count_i[7]_i_6_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[7]_i_1 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\grdc.rd_data_count_i_reg[7]_i_1_n_0 ,\grdc.rd_data_count_i_reg[7]_i_1_n_1 ,\grdc.rd_data_count_i_reg[7]_i_1_n_2 ,\grdc.rd_data_count_i_reg[7]_i_1_n_3 ,\grdc.rd_data_count_i_reg[7]_i_1_n_4 ,\grdc.rd_data_count_i_reg[7]_i_1_n_5 ,\grdc.rd_data_count_i_reg[7]_i_1_n_6 ,\grdc.rd_data_count_i_reg[7]_i_1_n_7 }),
        .DI({\grdc.rd_data_count_i[7]_i_2_n_0 ,\grdc.rd_data_count_i[7]_i_3_n_0 ,\grdc.rd_data_count_i[7]_i_4_n_0 ,\grdc.rd_data_count_i[7]_i_5_n_0 ,\grdc.rd_data_count_i[7]_i_6_n_0 ,DI,Q[0]}),
        .O({D[6:0],\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({S[6:2],\grdc.rd_data_count_i[7]_i_14_n_0 ,S[1:0]}));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[8]_i_2 
       (.CI(\grdc.rd_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_grdc.rd_data_count_i_reg[8]_i_2_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_grdc.rd_data_count_i_reg[8]_i_2_O_UNCONNECTED [7:1],D[7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\grdc.rd_data_count_i_reg[8] }));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [4]),
        .Q(Q[4]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [5]),
        .Q(Q[5]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [6]),
        .Q(Q[6]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [7]),
        .Q(Q[7]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [8]),
        .Q(Q[8]),
        .R(\reg_out_i_reg[8]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized0_5
   (Q,
    \reg_out_i_reg[0]_0 ,
    wr_pntr_plus1_pf_carry,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 ,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ,
    clr_full,
    wrst_busy,
    D,
    wr_clk);
  output [8:0]Q;
  output \reg_out_i_reg[0]_0 ;
  input wr_pntr_plus1_pf_carry;
  input [8:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 ;
  input [8:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  input clr_full;
  input wrst_busy;
  input [8:0]D;
  input wr_clk;

  wire [8:0]D;
  wire [8:0]Q;
  wire clr_full;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ;
  wire [8:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_8_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_9_n_0 ;
  wire [8:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  wire going_full;
  wire \reg_out_i_reg[0]_0 ;
  wire wr_clk;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'h0000FF80)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_1 
       (.I0(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2_n_0 ),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ),
        .I3(going_full),
        .I4(clr_full),
        .O(\reg_out_i_reg[0]_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [0]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [2]),
        .I3(Q[2]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [6]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [8]),
        .I3(Q[8]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [7]),
        .I5(Q[7]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [3]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [5]),
        .I3(Q[5]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [4]),
        .I5(Q[4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h8000)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5 
       (.I0(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_8_n_0 ),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_9_n_0 ),
        .I3(wr_pntr_plus1_pf_carry),
        .O(going_full));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [3]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [5]),
        .I3(Q[5]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [4]),
        .I5(Q[4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_8 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [6]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [8]),
        .I3(Q[8]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [7]),
        .I5(Q[7]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_9 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [0]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [2]),
        .I3(Q[2]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_9_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized0_7
   (\reg_out_i_reg[8]_0 ,
    D,
    ram_empty_i,
    rd_en,
    Q,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ,
    S,
    \reg_out_i_reg[0]_0 ,
    \reg_out_i_reg[8]_1 ,
    rd_clk);
  output [8:0]\reg_out_i_reg[8]_0 ;
  output [8:0]D;
  input ram_empty_i;
  input rd_en;
  input [1:0]Q;
  input [0:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ;
  input [7:0]S;
  input \reg_out_i_reg[0]_0 ;
  input [8:0]\reg_out_i_reg[8]_1 ;
  input rd_clk;

  wire [8:0]D;
  wire [1:0]Q;
  wire [7:0]S;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[8]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 ;
  wire [0:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ;
  wire p_1_in;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire \reg_out_i_reg[0]_0 ;
  wire [8:0]\reg_out_i_reg[8]_0 ;
  wire [8:0]\reg_out_i_reg[8]_1 ;
  wire [7:0]\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1_CO_UNCONNECTED ;
  wire [7:1]\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1_O_UNCONNECTED ;

  LUT4 #(
    .INIT(16'hAABA)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(Q[1]),
        .I3(Q[0]),
        .O(p_1_in));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[8]_i_2 
       (.I0(\reg_out_i_reg[8]_0 [8]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[8]_i_2_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1 
       (.CI(\reg_out_i_reg[8]_0 [0]),
        .CI_TOP(1'b0),
        .CO({\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 }),
        .DI({\reg_out_i_reg[8]_0 [7:1],p_1_in}),
        .O(D[7:0]),
        .S(S));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1 
       (.CI(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1_O_UNCONNECTED [7:1],D[8]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[8]_i_2_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [0]),
        .Q(\reg_out_i_reg[8]_0 [0]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [1]),
        .Q(\reg_out_i_reg[8]_0 [1]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [2]),
        .Q(\reg_out_i_reg[8]_0 [2]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [3]),
        .Q(\reg_out_i_reg[8]_0 [3]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [4]),
        .Q(\reg_out_i_reg[8]_0 [4]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [5]),
        .Q(\reg_out_i_reg[8]_0 [5]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [6]),
        .Q(\reg_out_i_reg[8]_0 [6]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [7]),
        .Q(\reg_out_i_reg[8]_0 [7]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [8]),
        .Q(\reg_out_i_reg[8]_0 [8]),
        .R(\reg_out_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized1
   (Q,
    wrst_busy,
    D,
    wr_clk);
  output [9:0]Q;
  input wrst_busy;
  input [9:0]D;
  input wr_clk;

  wire [9:0]D;
  wire [9:0]Q;
  wire wr_clk;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[9] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[9]),
        .Q(Q[9]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized1_2
   (DI,
    Q,
    \reg_out_i_reg[7]_0 ,
    S,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[9] ,
    \reg_out_i_reg[9]_0 ,
    D,
    rd_clk);
  output [5:0]DI;
  output [8:0]Q;
  output [0:0]\reg_out_i_reg[7]_0 ;
  output [0:0]S;
  input [0:0]\grdc.rd_data_count_i_reg[7] ;
  input [8:0]\grdc.rd_data_count_i_reg[9] ;
  input \reg_out_i_reg[9]_0 ;
  input [9:0]D;
  input rd_clk;

  wire [9:0]D;
  wire [5:0]DI;
  wire [8:0]Q;
  wire [0:0]S;
  wire [0:0]\grdc.rd_data_count_i_reg[7] ;
  wire [8:0]\grdc.rd_data_count_i_reg[9] ;
  wire rd_clk;
  wire [0:0]\reg_out_i_reg[7]_0 ;
  wire \reg_out_i_reg[9]_0 ;
  wire \reg_out_i_reg_n_0_[9] ;

  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_2 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[9] [5]),
        .O(DI[5]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_3 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[9] [4]),
        .O(DI[4]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_4 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[9] [3]),
        .O(DI[3]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_5 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[9] [2]),
        .O(DI[2]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_6 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[9] [1]),
        .O(DI[1]));
  LUT3 #(
    .INIT(8'h8E)) 
    \grdc.rd_data_count_i[7]_i_7 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] ),
        .I2(\grdc.rd_data_count_i_reg[9] [0]),
        .O(DI[0]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[9]_i_3 
       (.I0(Q[7]),
        .I1(\grdc.rd_data_count_i_reg[9] [6]),
        .O(\reg_out_i_reg[7]_0 ));
  LUT4 #(
    .INIT(16'hD22D)) 
    \grdc.rd_data_count_i[9]_i_4 
       (.I0(Q[8]),
        .I1(\grdc.rd_data_count_i_reg[9] [7]),
        .I2(\grdc.rd_data_count_i_reg[9] [8]),
        .I3(\reg_out_i_reg_n_0_[9] ),
        .O(S));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[9] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[9]),
        .Q(\reg_out_i_reg_n_0_[9] ),
        .R(\reg_out_i_reg[9]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized1_6
   (Q,
    wrst_busy,
    D,
    wr_clk);
  output [9:0]Q;
  input wrst_busy;
  input [9:0]D;
  input wr_clk;

  wire [9:0]D;
  wire [9:0]Q;
  wire wr_clk;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[9] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[9]),
        .Q(Q[9]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized1_8
   (DI,
    Q,
    \reg_out_i_reg[7]_0 ,
    S,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[9] ,
    \reg_out_i_reg[9]_0 ,
    D,
    rd_clk);
  output [5:0]DI;
  output [8:0]Q;
  output [0:0]\reg_out_i_reg[7]_0 ;
  output [0:0]S;
  input [0:0]\grdc.rd_data_count_i_reg[7] ;
  input [8:0]\grdc.rd_data_count_i_reg[9] ;
  input \reg_out_i_reg[9]_0 ;
  input [9:0]D;
  input rd_clk;

  wire [9:0]D;
  wire [5:0]DI;
  wire [8:0]Q;
  wire [0:0]S;
  wire [0:0]\grdc.rd_data_count_i_reg[7] ;
  wire [8:0]\grdc.rd_data_count_i_reg[9] ;
  wire rd_clk;
  wire [0:0]\reg_out_i_reg[7]_0 ;
  wire \reg_out_i_reg[9]_0 ;
  wire \reg_out_i_reg_n_0_[9] ;

  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_2 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[9] [5]),
        .O(DI[5]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_3 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[9] [4]),
        .O(DI[4]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_4 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[9] [3]),
        .O(DI[3]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_5 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[9] [2]),
        .O(DI[2]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_6 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[9] [1]),
        .O(DI[1]));
  LUT3 #(
    .INIT(8'h8E)) 
    \grdc.rd_data_count_i[7]_i_7 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] ),
        .I2(\grdc.rd_data_count_i_reg[9] [0]),
        .O(DI[0]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[9]_i_3 
       (.I0(Q[7]),
        .I1(\grdc.rd_data_count_i_reg[9] [6]),
        .O(\reg_out_i_reg[7]_0 ));
  LUT4 #(
    .INIT(16'hD22D)) 
    \grdc.rd_data_count_i[9]_i_4 
       (.I0(Q[8]),
        .I1(\grdc.rd_data_count_i_reg[9] [7]),
        .I2(\grdc.rd_data_count_i_reg[9] [8]),
        .I3(\reg_out_i_reg_n_0_[9] ),
        .O(S));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[9] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[9]),
        .Q(\reg_out_i_reg_n_0_[9] ),
        .R(\reg_out_i_reg[9]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized2
   (D,
    Q,
    \count_value_i_reg[3] ,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 ,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ,
    rst_d1,
    wrst_busy,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] ,
    wr_en,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_0 ,
    E,
    clr_full,
    \reg_out_i_reg[3]_0 ,
    wr_clk);
  output [1:0]D;
  output [2:0]Q;
  output \count_value_i_reg[3] ;
  input [2:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ;
  input \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 ;
  input [2:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  input rst_d1;
  input wrst_busy;
  input \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] ;
  input wr_en;
  input \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_0 ;
  input [0:0]E;
  input clr_full;
  input [3:0]\reg_out_i_reg[3]_0 ;
  input wr_clk;

  wire [1:0]D;
  wire [0:0]E;
  wire [2:0]Q;
  wire clr_full;
  wire \count_value_i_reg[3] ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ;
  wire [2:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] ;
  wire [2:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 ;
  wire [2:2]rd_pntr_wr;
  wire [3:0]\reg_out_i_reg[3]_0 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wrst_busy;

  LUT6 #(
    .INIT(64'h00000000F8888888)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_1 
       (.I0(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 ),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ),
        .I3(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_0 ),
        .I4(E),
        .I5(clr_full),
        .O(\count_value_i_reg[3] ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [0]),
        .I2(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [2]),
        .I3(rd_pntr_wr),
        .I4(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [0]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [2]),
        .I3(rd_pntr_wr),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h718E8E71)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[3]_i_1 
       (.I0(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2_n_0 ),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [1]),
        .I2(Q[1]),
        .I3(rd_pntr_wr),
        .I4(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [2]),
        .O(D[0]));
  LUT6 #(
    .INIT(64'h2BFF002BD400FFD4)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_1 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [1]),
        .I2(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [2]),
        .I4(rd_pntr_wr),
        .I5(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 ),
        .O(D[1]));
  LUT6 #(
    .INIT(64'h4444444D44444444)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [0]),
        .I2(rst_d1),
        .I3(wrst_busy),
        .I4(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] ),
        .I5(wr_en),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [2]),
        .Q(rd_pntr_wr),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [3]),
        .Q(Q[2]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized2_48
   (D,
    Q,
    ram_empty_i0,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] ,
    rd_en,
    ram_empty_i,
    enb,
    \gen_pf_ic_rc.ram_empty_i_reg_0 ,
    \reg_out_i_reg[0]_0 ,
    \reg_out_i_reg[3]_0 ,
    rd_clk);
  output [1:0]D;
  output [3:0]Q;
  output ram_empty_i0;
  input [3:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  input [1:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] ;
  input rd_en;
  input ram_empty_i;
  input enb;
  input [3:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  input \reg_out_i_reg[0]_0 ;
  input [3:0]\reg_out_i_reg[3]_0 ;
  input rd_clk;

  wire [1:0]D;
  wire [3:0]Q;
  wire enb;
  wire [1:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] ;
  wire \gen_pf_ic_rc.ram_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_3_n_0 ;
  wire [3:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  wire [3:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire rd_en;
  wire \reg_out_i_reg[0]_0 ;
  wire [3:0]\reg_out_i_reg[3]_0 ;

  LUT6 #(
    .INIT(64'h6666666699999969)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[0]_i_1 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] [1]),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] [0]),
        .I4(rd_en),
        .I5(ram_empty_i),
        .O(D[0]));
  LUT5 #(
    .INIT(32'hD42B2BD4)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[1]_i_1 
       (.I0(Q[0]),
        .I1(enb),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I3(Q[1]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hFF8080802020FF20)) 
    \gen_pf_ic_rc.ram_empty_i_i_1 
       (.I0(enb),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [3]),
        .I2(\gen_pf_ic_rc.ram_empty_i_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.ram_empty_i_i_3_n_0 ),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .I5(Q[3]),
        .O(ram_empty_i0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_2 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [2]),
        .I3(Q[2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_0 [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_3 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .I3(Q[2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized2_54
   (D,
    Q,
    \count_value_i_reg[3] ,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 ,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ,
    rst_d1,
    wrst_busy,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] ,
    wr_en,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_0 ,
    E,
    clr_full,
    \reg_out_i_reg[3]_0 ,
    wr_clk);
  output [1:0]D;
  output [2:0]Q;
  output \count_value_i_reg[3] ;
  input [2:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ;
  input \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 ;
  input [2:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  input rst_d1;
  input wrst_busy;
  input \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] ;
  input wr_en;
  input \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_0 ;
  input [0:0]E;
  input clr_full;
  input [3:0]\reg_out_i_reg[3]_0 ;
  input wr_clk;

  wire [1:0]D;
  wire [0:0]E;
  wire [2:0]Q;
  wire clr_full;
  wire \count_value_i_reg[3] ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ;
  wire [2:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] ;
  wire [2:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 ;
  wire [2:2]rd_pntr_wr;
  wire [3:0]\reg_out_i_reg[3]_0 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wrst_busy;

  LUT6 #(
    .INIT(64'h00000000F8888888)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_1 
       (.I0(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 ),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ),
        .I3(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_0 ),
        .I4(E),
        .I5(clr_full),
        .O(\count_value_i_reg[3] ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [0]),
        .I2(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [2]),
        .I3(rd_pntr_wr),
        .I4(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [0]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [2]),
        .I3(rd_pntr_wr),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h718E8E71)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[3]_i_1 
       (.I0(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2_n_0 ),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [1]),
        .I2(Q[1]),
        .I3(rd_pntr_wr),
        .I4(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [2]),
        .O(D[0]));
  LUT6 #(
    .INIT(64'h2BFF002BD400FFD4)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_1 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [1]),
        .I2(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [2]),
        .I4(rd_pntr_wr),
        .I5(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 ),
        .O(D[1]));
  LUT6 #(
    .INIT(64'h4444444D44444444)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [0]),
        .I2(rst_d1),
        .I3(wrst_busy),
        .I4(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] ),
        .I5(wr_en),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [2]),
        .Q(rd_pntr_wr),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [3]),
        .Q(Q[2]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized2_56
   (D,
    Q,
    ram_empty_i0,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] ,
    rd_en,
    ram_empty_i,
    enb,
    \gen_pf_ic_rc.ram_empty_i_reg_0 ,
    \reg_out_i_reg[0]_0 ,
    \reg_out_i_reg[3]_0 ,
    rd_clk);
  output [1:0]D;
  output [3:0]Q;
  output ram_empty_i0;
  input [3:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  input [1:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] ;
  input rd_en;
  input ram_empty_i;
  input enb;
  input [3:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  input \reg_out_i_reg[0]_0 ;
  input [3:0]\reg_out_i_reg[3]_0 ;
  input rd_clk;

  wire [1:0]D;
  wire [3:0]Q;
  wire enb;
  wire [1:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] ;
  wire \gen_pf_ic_rc.ram_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_3_n_0 ;
  wire [3:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  wire [3:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire rd_en;
  wire \reg_out_i_reg[0]_0 ;
  wire [3:0]\reg_out_i_reg[3]_0 ;

  LUT6 #(
    .INIT(64'h6666666699999969)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[0]_i_1 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] [1]),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] [0]),
        .I4(rd_en),
        .I5(ram_empty_i),
        .O(D[0]));
  LUT5 #(
    .INIT(32'hD42B2BD4)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[1]_i_1 
       (.I0(Q[0]),
        .I1(enb),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I3(Q[1]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hFF8080802020FF20)) 
    \gen_pf_ic_rc.ram_empty_i_i_1 
       (.I0(enb),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [3]),
        .I2(\gen_pf_ic_rc.ram_empty_i_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.ram_empty_i_i_3_n_0 ),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .I5(Q[3]),
        .O(ram_empty_i0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_2 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [2]),
        .I3(Q[2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_0 [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_3 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .I3(Q[2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized3
   (D,
    Q,
    \gwdc.wr_data_count_i_reg[4] ,
    wrst_busy,
    \reg_out_i_reg[4]_0 ,
    wr_clk);
  output [2:0]D;
  output [2:0]Q;
  input [4:0]\gwdc.wr_data_count_i_reg[4] ;
  input wrst_busy;
  input [4:0]\reg_out_i_reg[4]_0 ;
  input wr_clk;

  wire [2:0]D;
  wire [2:0]Q;
  wire \gwdc.wr_data_count_i[4]_i_2_n_0 ;
  wire [4:0]\gwdc.wr_data_count_i_reg[4] ;
  wire [4:0]\reg_out_i_reg[4]_0 ;
  wire \reg_out_i_reg_n_0_[3] ;
  wire \reg_out_i_reg_n_0_[4] ;
  wire wr_clk;
  wire wrst_busy;

  LUT4 #(
    .INIT(16'h2DD2)) 
    \gwdc.wr_data_count_i[1]_i_1 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[4] [0]),
        .I2(Q[1]),
        .I3(\gwdc.wr_data_count_i_reg[4] [1]),
        .O(D[0]));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT3 #(
    .INIT(8'h69)) 
    \gwdc.wr_data_count_i[3]_i_1 
       (.I0(\gwdc.wr_data_count_i[4]_i_2_n_0 ),
        .I1(\reg_out_i_reg_n_0_[3] ),
        .I2(\gwdc.wr_data_count_i_reg[4] [3]),
        .O(D[1]));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT5 #(
    .INIT(32'h718E8E71)) 
    \gwdc.wr_data_count_i[4]_i_1 
       (.I0(\gwdc.wr_data_count_i[4]_i_2_n_0 ),
        .I1(\gwdc.wr_data_count_i_reg[4] [3]),
        .I2(\reg_out_i_reg_n_0_[3] ),
        .I3(\reg_out_i_reg_n_0_[4] ),
        .I4(\gwdc.wr_data_count_i_reg[4] [4]),
        .O(D[2]));
  LUT6 #(
    .INIT(64'hD4DD4444DDDDD4DD)) 
    \gwdc.wr_data_count_i[4]_i_2 
       (.I0(Q[2]),
        .I1(\gwdc.wr_data_count_i_reg[4] [2]),
        .I2(\gwdc.wr_data_count_i_reg[4] [0]),
        .I3(Q[0]),
        .I4(\gwdc.wr_data_count_i_reg[4] [1]),
        .I5(Q[1]),
        .O(\gwdc.wr_data_count_i[4]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [3]),
        .Q(\reg_out_i_reg_n_0_[3] ),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [4]),
        .Q(\reg_out_i_reg_n_0_[4] ),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized3_49
   (D,
    Q,
    \reg_out_i_reg[3]_0 ,
    \grdc.rd_data_count_i_reg[4] ,
    \grdc.rd_data_count_i_reg[1] ,
    \reg_out_i_reg[4]_0 ,
    \reg_out_i_reg[4]_1 ,
    rd_clk);
  output [0:0]D;
  output [4:0]Q;
  output \reg_out_i_reg[3]_0 ;
  input [2:0]\grdc.rd_data_count_i_reg[4] ;
  input [1:0]\grdc.rd_data_count_i_reg[1] ;
  input \reg_out_i_reg[4]_0 ;
  input [4:0]\reg_out_i_reg[4]_1 ;
  input rd_clk;

  wire [0:0]D;
  wire [4:0]Q;
  wire [1:0]\grdc.rd_data_count_i_reg[1] ;
  wire [2:0]\grdc.rd_data_count_i_reg[4] ;
  wire rd_clk;
  wire \reg_out_i_reg[3]_0 ;
  wire \reg_out_i_reg[4]_0 ;
  wire [4:0]\reg_out_i_reg[4]_1 ;

  LUT6 #(
    .INIT(64'hC33C96696996C33C)) 
    \grdc.rd_data_count_i[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(\grdc.rd_data_count_i_reg[4] [1]),
        .I3(\grdc.rd_data_count_i_reg[1] [1]),
        .I4(\grdc.rd_data_count_i_reg[1] [0]),
        .I5(\grdc.rd_data_count_i_reg[4] [0]),
        .O(D));
  LUT2 #(
    .INIT(4'h9)) 
    \grdc.rd_data_count_i[4]_i_5 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[4] [2]),
        .O(\reg_out_i_reg[3]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_1 [0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_1 [1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_1 [2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_1 [3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_1 [4]),
        .Q(Q[4]),
        .R(\reg_out_i_reg[4]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized3_55
   (D,
    Q,
    \gwdc.wr_data_count_i_reg[4] ,
    wrst_busy,
    \reg_out_i_reg[4]_0 ,
    wr_clk);
  output [2:0]D;
  output [2:0]Q;
  input [4:0]\gwdc.wr_data_count_i_reg[4] ;
  input wrst_busy;
  input [4:0]\reg_out_i_reg[4]_0 ;
  input wr_clk;

  wire [2:0]D;
  wire [2:0]Q;
  wire \gwdc.wr_data_count_i[4]_i_2_n_0 ;
  wire [4:0]\gwdc.wr_data_count_i_reg[4] ;
  wire [4:0]\reg_out_i_reg[4]_0 ;
  wire \reg_out_i_reg_n_0_[3] ;
  wire \reg_out_i_reg_n_0_[4] ;
  wire wr_clk;
  wire wrst_busy;

  LUT4 #(
    .INIT(16'h2DD2)) 
    \gwdc.wr_data_count_i[1]_i_1 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[4] [0]),
        .I2(Q[1]),
        .I3(\gwdc.wr_data_count_i_reg[4] [1]),
        .O(D[0]));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT3 #(
    .INIT(8'h69)) 
    \gwdc.wr_data_count_i[3]_i_1 
       (.I0(\gwdc.wr_data_count_i[4]_i_2_n_0 ),
        .I1(\reg_out_i_reg_n_0_[3] ),
        .I2(\gwdc.wr_data_count_i_reg[4] [3]),
        .O(D[1]));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT5 #(
    .INIT(32'h718E8E71)) 
    \gwdc.wr_data_count_i[4]_i_1 
       (.I0(\gwdc.wr_data_count_i[4]_i_2_n_0 ),
        .I1(\gwdc.wr_data_count_i_reg[4] [3]),
        .I2(\reg_out_i_reg_n_0_[3] ),
        .I3(\reg_out_i_reg_n_0_[4] ),
        .I4(\gwdc.wr_data_count_i_reg[4] [4]),
        .O(D[2]));
  LUT6 #(
    .INIT(64'hD4DD4444DDDDD4DD)) 
    \gwdc.wr_data_count_i[4]_i_2 
       (.I0(Q[2]),
        .I1(\gwdc.wr_data_count_i_reg[4] [2]),
        .I2(\gwdc.wr_data_count_i_reg[4] [0]),
        .I3(Q[0]),
        .I4(\gwdc.wr_data_count_i_reg[4] [1]),
        .I5(Q[1]),
        .O(\gwdc.wr_data_count_i[4]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [3]),
        .Q(\reg_out_i_reg_n_0_[3] ),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [4]),
        .Q(\reg_out_i_reg_n_0_[4] ),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized3_57
   (D,
    Q,
    \reg_out_i_reg[3]_0 ,
    \grdc.rd_data_count_i_reg[4] ,
    \grdc.rd_data_count_i_reg[1] ,
    \reg_out_i_reg[4]_0 ,
    \reg_out_i_reg[4]_1 ,
    rd_clk);
  output [0:0]D;
  output [4:0]Q;
  output \reg_out_i_reg[3]_0 ;
  input [2:0]\grdc.rd_data_count_i_reg[4] ;
  input [1:0]\grdc.rd_data_count_i_reg[1] ;
  input \reg_out_i_reg[4]_0 ;
  input [4:0]\reg_out_i_reg[4]_1 ;
  input rd_clk;

  wire [0:0]D;
  wire [4:0]Q;
  wire [1:0]\grdc.rd_data_count_i_reg[1] ;
  wire [2:0]\grdc.rd_data_count_i_reg[4] ;
  wire rd_clk;
  wire \reg_out_i_reg[3]_0 ;
  wire \reg_out_i_reg[4]_0 ;
  wire [4:0]\reg_out_i_reg[4]_1 ;

  LUT6 #(
    .INIT(64'hC33C96696996C33C)) 
    \grdc.rd_data_count_i[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(\grdc.rd_data_count_i_reg[4] [1]),
        .I3(\grdc.rd_data_count_i_reg[1] [1]),
        .I4(\grdc.rd_data_count_i_reg[1] [0]),
        .I5(\grdc.rd_data_count_i_reg[4] [0]),
        .O(D));
  LUT2 #(
    .INIT(4'h9)) 
    \grdc.rd_data_count_i[4]_i_5 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[4] [2]),
        .O(\reg_out_i_reg[3]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_1 [0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_1 [1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_1 [2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_1 [3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_1 [4]),
        .Q(Q[4]),
        .R(\reg_out_i_reg[4]_0 ));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_rst
   (\gen_rst_ic.fifo_rd_rst_ic_reg_0 ,
    wrst_busy,
    E,
    wr_rst_busy,
    SR,
    \gen_rst_ic.fifo_rd_rst_ic_reg_1 ,
    underflow_i0,
    rd_clk,
    wr_clk,
    rst,
    wr_en,
    \count_value_i_reg[3] ,
    rst_d1,
    ram_empty_i,
    Q,
    rd_en,
    \guf.underflow_i_reg );
  output \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  output wrst_busy;
  output [0:0]E;
  output wr_rst_busy;
  output [0:0]SR;
  output [0:0]\gen_rst_ic.fifo_rd_rst_ic_reg_1 ;
  output underflow_i0;
  input rd_clk;
  input wr_clk;
  input rst;
  input wr_en;
  input \count_value_i_reg[3] ;
  input rst_d1;
  input ram_empty_i;
  input [1:0]Q;
  input rd_en;
  input \guf.underflow_i_reg ;

  wire \/i__n_0 ;
  wire [0:0]E;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i_reg[3] ;
  (* RTL_KEEP = "yes" *) wire [1:0]\gen_rst_ic.curr_rrst_state ;
  wire \gen_rst_ic.fifo_rd_rst_i ;
  wire \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  wire [0:0]\gen_rst_ic.fifo_rd_rst_ic_reg_1 ;
  wire \gen_rst_ic.fifo_rd_rst_wr_i ;
  wire \gen_rst_ic.fifo_wr_rst_ic ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_rd ;
  wire [1:0]\gen_rst_ic.next_rrst_state ;
  wire \gen_rst_ic.rst_seq_reentered_i_1_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_i_2_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_reg_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ;
  wire \guf.underflow_i_reg ;
  wire p_0_in;
  wire \power_on_rst_reg_n_0_[0] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire rst_d1;
  wire rst_i__0;
  wire underflow_i0;
  wire wr_clk;
  wire wr_en;
  wire wr_rst_busy;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'h00010116)) 
    \/i_ 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\/i__n_0 ));
  LUT6 #(
    .INIT(64'h03030200FFFFFFFF)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I5(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFEFEFEEE)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I3(rst),
        .I4(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFF0EEE0FFFFEEE0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I5(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h000C0008)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I1(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000004400000044)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I3(rst),
        .I4(p_0_in),
        .I5(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1 
       (.I0(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0002)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1 
       (.I0(\gen_rst_ic.curr_rrst_state [0]),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .O(\gen_rst_ic.next_rrst_state [1]));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [0]),
        .Q(\gen_rst_ic.curr_rrst_state [0]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [1]),
        .Q(\gen_rst_ic.curr_rrst_state [1]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h06)) 
    \__0/i_ 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.next_rrst_state [0]));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT5 #(
    .INIT(32'hAAAAAEAE)) 
    \count_value_i[1]_i_1__2 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(ram_empty_i),
        .I2(Q[1]),
        .I3(rd_en),
        .I4(Q[0]),
        .O(SR));
  LUT3 #(
    .INIT(8'h3E)) 
    \gen_rst_ic.fifo_rd_rst_ic_i_1 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.fifo_rd_rst_i ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_rd_rst_ic_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_rd_rst_i ),
        .Q(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFEAFFFFFFEA0000)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I2(rst_i__0),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I4(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ),
        .I5(\gen_rst_ic.fifo_wr_rst_ic ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_2 
       (.I0(p_0_in),
        .I1(rst),
        .O(rst_i__0));
  LUT5 #(
    .INIT(32'h00010116)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_3 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_wr_rst_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ),
        .Q(\gen_rst_ic.fifo_wr_rst_ic ),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst \gen_rst_ic.rrst_wr_inst 
       (.dest_clk(wr_clk),
        .dest_rst(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .src_rst(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \gen_rst_ic.rst_seq_reentered_i_1 
       (.I0(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ),
        .I1(rst),
        .I2(p_0_in),
        .O(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00010000)) 
    \gen_rst_ic.rst_seq_reentered_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I5(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.rst_seq_reentered_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ),
        .Q(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEFFFEF00)) 
    \gen_rst_ic.wr_rst_busy_ic_i_1 
       (.I0(rst),
        .I1(p_0_in),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I3(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ),
        .I4(wrst_busy),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000116)) 
    \gen_rst_ic.wr_rst_busy_ic_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.wr_rst_busy_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ),
        .Q(wrst_busy),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__26 \gen_rst_ic.wrst_rd_inst 
       (.dest_clk(rd_clk),
        .dest_rst(\gen_rst_ic.fifo_wr_rst_rd ),
        .src_rst(\gen_rst_ic.fifo_wr_rst_ic ));
  LUT4 #(
    .INIT(16'h0002)) 
    \gen_sdpram.xpm_memory_base_inst_i_1 
       (.I0(wr_en),
        .I1(\count_value_i_reg[3] ),
        .I2(wrst_busy),
        .I3(rst_d1),
        .O(E));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT3 #(
    .INIT(8'hAB)) 
    \grdc.rd_data_count_i[4]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(Q[0]),
        .I2(Q[1]),
        .O(\gen_rst_ic.fifo_rd_rst_ic_reg_1 ));
  LUT3 #(
    .INIT(8'hE0)) 
    \guf.underflow_i_i_1 
       (.I0(\guf.underflow_i_reg ),
        .I1(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I2(rd_en),
        .O(underflow_i0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(\power_on_rst_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\power_on_rst_reg_n_0_[0] ),
        .Q(p_0_in),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    wr_rst_busy_INST_0
       (.I0(wrst_busy),
        .I1(rst_d1),
        .O(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_rst" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_rst__xdcDup__1
   (\gen_rst_ic.fifo_rd_rst_ic_reg_0 ,
    wrst_busy,
    wr_pntr_plus1_pf_carry,
    wr_rst_busy,
    SR,
    \gen_rst_ic.fifo_rd_rst_ic_reg_1 ,
    underflow_i0,
    rd_clk,
    wr_clk,
    rst,
    wr_en,
    \count_value_i_reg[7] ,
    rst_d1,
    ram_empty_i,
    Q,
    rd_en,
    \guf.underflow_i_reg );
  output \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  output wrst_busy;
  output wr_pntr_plus1_pf_carry;
  output wr_rst_busy;
  output [0:0]SR;
  output [0:0]\gen_rst_ic.fifo_rd_rst_ic_reg_1 ;
  output underflow_i0;
  input rd_clk;
  input wr_clk;
  input rst;
  input wr_en;
  input \count_value_i_reg[7] ;
  input rst_d1;
  input ram_empty_i;
  input [1:0]Q;
  input rd_en;
  input \guf.underflow_i_reg ;

  wire \/i__n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i_reg[7] ;
  (* RTL_KEEP = "yes" *) wire [1:0]\gen_rst_ic.curr_rrst_state ;
  wire \gen_rst_ic.fifo_rd_rst_i ;
  wire \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  wire [0:0]\gen_rst_ic.fifo_rd_rst_ic_reg_1 ;
  wire \gen_rst_ic.fifo_rd_rst_wr_i ;
  wire \gen_rst_ic.fifo_wr_rst_ic ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_rd ;
  wire [1:0]\gen_rst_ic.next_rrst_state ;
  wire \gen_rst_ic.rst_seq_reentered_i_1_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_i_2_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_reg_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ;
  wire \guf.underflow_i_reg ;
  wire p_0_in;
  wire \power_on_rst_reg_n_0_[0] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire rst_d1;
  wire rst_i__0;
  wire underflow_i0;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wr_rst_busy;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'h00010116)) 
    \/i_ 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\/i__n_0 ));
  LUT6 #(
    .INIT(64'h03030200FFFFFFFF)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I5(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFEFEFEEE)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I3(rst),
        .I4(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFF0EEE0FFFFEEE0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I5(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h000C0008)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I1(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000004400000044)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I3(rst),
        .I4(p_0_in),
        .I5(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1 
       (.I0(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0002)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1 
       (.I0(\gen_rst_ic.curr_rrst_state [0]),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .O(\gen_rst_ic.next_rrst_state [1]));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [0]),
        .Q(\gen_rst_ic.curr_rrst_state [0]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [1]),
        .Q(\gen_rst_ic.curr_rrst_state [1]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h06)) 
    \__0/i_ 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.next_rrst_state [0]));
  (* SOFT_HLUTNM = "soft_lutpair204" *) 
  LUT5 #(
    .INIT(32'hAAAAAEAE)) 
    \count_value_i[1]_i_1__2 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(ram_empty_i),
        .I2(Q[1]),
        .I3(rd_en),
        .I4(Q[0]),
        .O(SR));
  LUT3 #(
    .INIT(8'h3E)) 
    \gen_rst_ic.fifo_rd_rst_ic_i_1 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.fifo_rd_rst_i ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_rd_rst_ic_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_rd_rst_i ),
        .Q(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFEAFFFFFFEA0000)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I2(rst_i__0),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I4(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ),
        .I5(\gen_rst_ic.fifo_wr_rst_ic ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair205" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_2 
       (.I0(p_0_in),
        .I1(rst),
        .O(rst_i__0));
  LUT5 #(
    .INIT(32'h00010116)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_3 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_wr_rst_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ),
        .Q(\gen_rst_ic.fifo_wr_rst_ic ),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__15 \gen_rst_ic.rrst_wr_inst 
       (.dest_clk(wr_clk),
        .dest_rst(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .src_rst(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ));
  (* SOFT_HLUTNM = "soft_lutpair205" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \gen_rst_ic.rst_seq_reentered_i_1 
       (.I0(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ),
        .I1(rst),
        .I2(p_0_in),
        .O(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00010000)) 
    \gen_rst_ic.rst_seq_reentered_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I5(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.rst_seq_reentered_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ),
        .Q(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEFFFEF00)) 
    \gen_rst_ic.wr_rst_busy_ic_i_1 
       (.I0(rst),
        .I1(p_0_in),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I3(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ),
        .I4(wrst_busy),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000116)) 
    \gen_rst_ic.wr_rst_busy_ic_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.wr_rst_busy_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ),
        .Q(wrst_busy),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__14 \gen_rst_ic.wrst_rd_inst 
       (.dest_clk(rd_clk),
        .dest_rst(\gen_rst_ic.fifo_wr_rst_rd ),
        .src_rst(\gen_rst_ic.fifo_wr_rst_ic ));
  LUT4 #(
    .INIT(16'h0002)) 
    \gen_sdpram.xpm_memory_base_inst_i_1 
       (.I0(wr_en),
        .I1(\count_value_i_reg[7] ),
        .I2(wrst_busy),
        .I3(rst_d1),
        .O(wr_pntr_plus1_pf_carry));
  (* SOFT_HLUTNM = "soft_lutpair204" *) 
  LUT3 #(
    .INIT(8'hAB)) 
    \grdc.rd_data_count_i[8]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(Q[0]),
        .I2(Q[1]),
        .O(\gen_rst_ic.fifo_rd_rst_ic_reg_1 ));
  LUT3 #(
    .INIT(8'hE0)) 
    \guf.underflow_i_i_1 
       (.I0(\guf.underflow_i_reg ),
        .I1(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I2(rd_en),
        .O(underflow_i0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(\power_on_rst_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\power_on_rst_reg_n_0_[0] ),
        .Q(p_0_in),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    wr_rst_busy_INST_0
       (.I0(wrst_busy),
        .I1(rst_d1),
        .O(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_rst" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_rst__xdcDup__2
   (\gen_rst_ic.fifo_rd_rst_ic_reg_0 ,
    wrst_busy,
    wr_pntr_plus1_pf_carry,
    wr_rst_busy,
    SR,
    \gen_rst_ic.fifo_rd_rst_ic_reg_1 ,
    underflow_i0,
    rd_clk,
    wr_clk,
    rst,
    wr_en,
    \count_value_i_reg[7] ,
    rst_d1,
    ram_empty_i,
    Q,
    rd_en,
    \guf.underflow_i_reg );
  output \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  output wrst_busy;
  output wr_pntr_plus1_pf_carry;
  output wr_rst_busy;
  output [0:0]SR;
  output [0:0]\gen_rst_ic.fifo_rd_rst_ic_reg_1 ;
  output underflow_i0;
  input rd_clk;
  input wr_clk;
  input rst;
  input wr_en;
  input \count_value_i_reg[7] ;
  input rst_d1;
  input ram_empty_i;
  input [1:0]Q;
  input rd_en;
  input \guf.underflow_i_reg ;

  wire \/i__n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i_reg[7] ;
  (* RTL_KEEP = "yes" *) wire [1:0]\gen_rst_ic.curr_rrst_state ;
  wire \gen_rst_ic.fifo_rd_rst_i ;
  wire \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  wire [0:0]\gen_rst_ic.fifo_rd_rst_ic_reg_1 ;
  wire \gen_rst_ic.fifo_rd_rst_wr_i ;
  wire \gen_rst_ic.fifo_wr_rst_ic ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_rd ;
  wire [1:0]\gen_rst_ic.next_rrst_state ;
  wire \gen_rst_ic.rst_seq_reentered_i_1_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_i_2_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_reg_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ;
  wire \guf.underflow_i_reg ;
  wire p_0_in;
  wire \power_on_rst_reg_n_0_[0] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire rst_d1;
  wire rst_i__0;
  wire underflow_i0;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wr_rst_busy;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'h00010116)) 
    \/i_ 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\/i__n_0 ));
  LUT6 #(
    .INIT(64'h03030200FFFFFFFF)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I5(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFEFEFEEE)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I3(rst),
        .I4(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFF0EEE0FFFFEEE0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I5(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h000C0008)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I1(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000004400000044)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I3(rst),
        .I4(p_0_in),
        .I5(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1 
       (.I0(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0002)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1 
       (.I0(\gen_rst_ic.curr_rrst_state [0]),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .O(\gen_rst_ic.next_rrst_state [1]));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [0]),
        .Q(\gen_rst_ic.curr_rrst_state [0]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [1]),
        .Q(\gen_rst_ic.curr_rrst_state [1]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h06)) 
    \__0/i_ 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.next_rrst_state [0]));
  (* SOFT_HLUTNM = "soft_lutpair172" *) 
  LUT5 #(
    .INIT(32'hAAAAAEAE)) 
    \count_value_i[1]_i_1__2 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(ram_empty_i),
        .I2(Q[1]),
        .I3(rd_en),
        .I4(Q[0]),
        .O(SR));
  LUT3 #(
    .INIT(8'h3E)) 
    \gen_rst_ic.fifo_rd_rst_ic_i_1 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.fifo_rd_rst_i ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_rd_rst_ic_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_rd_rst_i ),
        .Q(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFEAFFFFFFEA0000)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I2(rst_i__0),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I4(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ),
        .I5(\gen_rst_ic.fifo_wr_rst_ic ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair173" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_2 
       (.I0(p_0_in),
        .I1(rst),
        .O(rst_i__0));
  LUT5 #(
    .INIT(32'h00010116)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_3 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_wr_rst_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ),
        .Q(\gen_rst_ic.fifo_wr_rst_ic ),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__17 \gen_rst_ic.rrst_wr_inst 
       (.dest_clk(wr_clk),
        .dest_rst(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .src_rst(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ));
  (* SOFT_HLUTNM = "soft_lutpair173" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \gen_rst_ic.rst_seq_reentered_i_1 
       (.I0(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ),
        .I1(rst),
        .I2(p_0_in),
        .O(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00010000)) 
    \gen_rst_ic.rst_seq_reentered_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I5(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.rst_seq_reentered_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ),
        .Q(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEFFFEF00)) 
    \gen_rst_ic.wr_rst_busy_ic_i_1 
       (.I0(rst),
        .I1(p_0_in),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I3(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ),
        .I4(wrst_busy),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000116)) 
    \gen_rst_ic.wr_rst_busy_ic_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.wr_rst_busy_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ),
        .Q(wrst_busy),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__16 \gen_rst_ic.wrst_rd_inst 
       (.dest_clk(rd_clk),
        .dest_rst(\gen_rst_ic.fifo_wr_rst_rd ),
        .src_rst(\gen_rst_ic.fifo_wr_rst_ic ));
  LUT4 #(
    .INIT(16'h0002)) 
    \gen_sdpram.xpm_memory_base_inst_i_1 
       (.I0(wr_en),
        .I1(\count_value_i_reg[7] ),
        .I2(wrst_busy),
        .I3(rst_d1),
        .O(wr_pntr_plus1_pf_carry));
  (* SOFT_HLUTNM = "soft_lutpair172" *) 
  LUT3 #(
    .INIT(8'hAB)) 
    \grdc.rd_data_count_i[8]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(Q[0]),
        .I2(Q[1]),
        .O(\gen_rst_ic.fifo_rd_rst_ic_reg_1 ));
  LUT3 #(
    .INIT(8'hE0)) 
    \guf.underflow_i_i_1 
       (.I0(\guf.underflow_i_reg ),
        .I1(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I2(rd_en),
        .O(underflow_i0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(\power_on_rst_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\power_on_rst_reg_n_0_[0] ),
        .Q(p_0_in),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    wr_rst_busy_INST_0
       (.I0(wrst_busy),
        .I1(rst_d1),
        .O(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_rst" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_rst__xdcDup__3
   (\gen_rst_ic.fifo_rd_rst_ic_reg_0 ,
    wrst_busy,
    wr_pntr_plus1_pf_carry,
    wr_rst_busy,
    SR,
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ,
    underflow_i0,
    rd_clk,
    wr_clk,
    rst,
    wr_en,
    \count_value_i_reg[8] ,
    rst_d1,
    ram_empty_i,
    rd_en,
    Q,
    \guf.underflow_i_reg );
  output \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  output wrst_busy;
  output wr_pntr_plus1_pf_carry;
  output wr_rst_busy;
  output [0:0]SR;
  output [0:0]\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ;
  output underflow_i0;
  input rd_clk;
  input wr_clk;
  input rst;
  input wr_en;
  input \count_value_i_reg[8] ;
  input rst_d1;
  input ram_empty_i;
  input rd_en;
  input [1:0]Q;
  input \guf.underflow_i_reg ;

  wire \/i__n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ;
  wire [0:0]\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i_reg[8] ;
  (* RTL_KEEP = "yes" *) wire [1:0]\gen_rst_ic.curr_rrst_state ;
  wire \gen_rst_ic.fifo_rd_rst_i ;
  wire \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  wire \gen_rst_ic.fifo_rd_rst_wr_i ;
  wire \gen_rst_ic.fifo_wr_rst_ic ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_rd ;
  wire [1:0]\gen_rst_ic.next_rrst_state ;
  wire \gen_rst_ic.rst_seq_reentered_i_1_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_i_2_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_reg_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ;
  wire \guf.underflow_i_reg ;
  wire p_0_in;
  wire \power_on_rst_reg_n_0_[0] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire rst_d1;
  wire rst_i__0;
  wire underflow_i0;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wr_rst_busy;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'h00010116)) 
    \/i_ 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\/i__n_0 ));
  LUT6 #(
    .INIT(64'h03030200FFFFFFFF)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I5(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFEFEFEEE)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I3(rst),
        .I4(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFF0EEE0FFFFEEE0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I5(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h000C0008)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I1(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000004400000044)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I3(rst),
        .I4(p_0_in),
        .I5(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1 
       (.I0(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0002)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1 
       (.I0(\gen_rst_ic.curr_rrst_state [0]),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .O(\gen_rst_ic.next_rrst_state [1]));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [0]),
        .Q(\gen_rst_ic.curr_rrst_state [0]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [1]),
        .Q(\gen_rst_ic.curr_rrst_state [1]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h06)) 
    \__0/i_ 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.next_rrst_state [0]));
  (* SOFT_HLUTNM = "soft_lutpair342" *) 
  LUT5 #(
    .INIT(32'hFFFF000A)) 
    \count_value_i[1]_i_1__2 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .O(SR));
  LUT3 #(
    .INIT(8'h3E)) 
    \gen_rst_ic.fifo_rd_rst_ic_i_1 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.fifo_rd_rst_i ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_rd_rst_ic_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_rd_rst_i ),
        .Q(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFEAFFFFFFEA0000)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I2(rst_i__0),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I4(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ),
        .I5(\gen_rst_ic.fifo_wr_rst_ic ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair343" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_2 
       (.I0(p_0_in),
        .I1(rst),
        .O(rst_i__0));
  LUT5 #(
    .INIT(32'h00010116)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_3 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_wr_rst_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ),
        .Q(\gen_rst_ic.fifo_wr_rst_ic ),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__19 \gen_rst_ic.rrst_wr_inst 
       (.dest_clk(wr_clk),
        .dest_rst(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .src_rst(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ));
  (* SOFT_HLUTNM = "soft_lutpair343" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \gen_rst_ic.rst_seq_reentered_i_1 
       (.I0(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ),
        .I1(rst),
        .I2(p_0_in),
        .O(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00010000)) 
    \gen_rst_ic.rst_seq_reentered_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I5(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.rst_seq_reentered_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ),
        .Q(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEFFFEF00)) 
    \gen_rst_ic.wr_rst_busy_ic_i_1 
       (.I0(rst),
        .I1(p_0_in),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I3(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ),
        .I4(wrst_busy),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000116)) 
    \gen_rst_ic.wr_rst_busy_ic_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.wr_rst_busy_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ),
        .Q(wrst_busy),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__18 \gen_rst_ic.wrst_rd_inst 
       (.dest_clk(rd_clk),
        .dest_rst(\gen_rst_ic.fifo_wr_rst_rd ),
        .src_rst(\gen_rst_ic.fifo_wr_rst_ic ));
  LUT4 #(
    .INIT(16'h0002)) 
    \gen_sdpram.xpm_memory_base_inst_i_1 
       (.I0(wr_en),
        .I1(\count_value_i_reg[8] ),
        .I2(wrst_busy),
        .I3(rst_d1),
        .O(wr_pntr_plus1_pf_carry));
  (* SOFT_HLUTNM = "soft_lutpair342" *) 
  LUT3 #(
    .INIT(8'hF1)) 
    \grdc.rd_data_count_i[9]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .O(\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ));
  LUT3 #(
    .INIT(8'hE0)) 
    \guf.underflow_i_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(\guf.underflow_i_reg ),
        .I2(rd_en),
        .O(underflow_i0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(\power_on_rst_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\power_on_rst_reg_n_0_[0] ),
        .Q(p_0_in),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    wr_rst_busy_INST_0
       (.I0(wrst_busy),
        .I1(rst_d1),
        .O(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_rst" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_rst__xdcDup__4
   (\gen_rst_ic.fifo_rd_rst_ic_reg_0 ,
    wrst_busy,
    wr_pntr_plus1_pf_carry,
    wr_rst_busy,
    SR,
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ,
    underflow_i0,
    rd_clk,
    wr_clk,
    rst,
    wr_en,
    \count_value_i_reg[8] ,
    rst_d1,
    ram_empty_i,
    rd_en,
    Q,
    \guf.underflow_i_reg );
  output \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  output wrst_busy;
  output wr_pntr_plus1_pf_carry;
  output wr_rst_busy;
  output [0:0]SR;
  output [0:0]\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ;
  output underflow_i0;
  input rd_clk;
  input wr_clk;
  input rst;
  input wr_en;
  input \count_value_i_reg[8] ;
  input rst_d1;
  input ram_empty_i;
  input rd_en;
  input [1:0]Q;
  input \guf.underflow_i_reg ;

  wire \/i__n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ;
  wire [0:0]\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i_reg[8] ;
  (* RTL_KEEP = "yes" *) wire [1:0]\gen_rst_ic.curr_rrst_state ;
  wire \gen_rst_ic.fifo_rd_rst_i ;
  wire \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  wire \gen_rst_ic.fifo_rd_rst_wr_i ;
  wire \gen_rst_ic.fifo_wr_rst_ic ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_rd ;
  wire [1:0]\gen_rst_ic.next_rrst_state ;
  wire \gen_rst_ic.rst_seq_reentered_i_1_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_i_2_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_reg_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ;
  wire \guf.underflow_i_reg ;
  wire p_0_in;
  wire \power_on_rst_reg_n_0_[0] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire rst_d1;
  wire rst_i__0;
  wire underflow_i0;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wr_rst_busy;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'h00010116)) 
    \/i_ 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\/i__n_0 ));
  LUT6 #(
    .INIT(64'h03030200FFFFFFFF)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I5(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFEFEFEEE)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I3(rst),
        .I4(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFF0EEE0FFFFEEE0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I5(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h000C0008)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I1(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000004400000044)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I3(rst),
        .I4(p_0_in),
        .I5(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1 
       (.I0(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0002)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1 
       (.I0(\gen_rst_ic.curr_rrst_state [0]),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .O(\gen_rst_ic.next_rrst_state [1]));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [0]),
        .Q(\gen_rst_ic.curr_rrst_state [0]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [1]),
        .Q(\gen_rst_ic.curr_rrst_state [1]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h06)) 
    \__0/i_ 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.next_rrst_state [0]));
  (* SOFT_HLUTNM = "soft_lutpair288" *) 
  LUT5 #(
    .INIT(32'hFFFF000A)) 
    \count_value_i[1]_i_1__2 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .O(SR));
  LUT3 #(
    .INIT(8'h3E)) 
    \gen_rst_ic.fifo_rd_rst_ic_i_1 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.fifo_rd_rst_i ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_rd_rst_ic_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_rd_rst_i ),
        .Q(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFEAFFFFFFEA0000)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I2(rst_i__0),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I4(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ),
        .I5(\gen_rst_ic.fifo_wr_rst_ic ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair289" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_2 
       (.I0(p_0_in),
        .I1(rst),
        .O(rst_i__0));
  LUT5 #(
    .INIT(32'h00010116)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_3 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_wr_rst_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ),
        .Q(\gen_rst_ic.fifo_wr_rst_ic ),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__21 \gen_rst_ic.rrst_wr_inst 
       (.dest_clk(wr_clk),
        .dest_rst(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .src_rst(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ));
  (* SOFT_HLUTNM = "soft_lutpair289" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \gen_rst_ic.rst_seq_reentered_i_1 
       (.I0(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ),
        .I1(rst),
        .I2(p_0_in),
        .O(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00010000)) 
    \gen_rst_ic.rst_seq_reentered_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I5(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.rst_seq_reentered_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ),
        .Q(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEFFFEF00)) 
    \gen_rst_ic.wr_rst_busy_ic_i_1 
       (.I0(rst),
        .I1(p_0_in),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I3(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ),
        .I4(wrst_busy),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000116)) 
    \gen_rst_ic.wr_rst_busy_ic_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.wr_rst_busy_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ),
        .Q(wrst_busy),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__20 \gen_rst_ic.wrst_rd_inst 
       (.dest_clk(rd_clk),
        .dest_rst(\gen_rst_ic.fifo_wr_rst_rd ),
        .src_rst(\gen_rst_ic.fifo_wr_rst_ic ));
  LUT4 #(
    .INIT(16'h0002)) 
    \gen_sdpram.xpm_memory_base_inst_i_1 
       (.I0(wr_en),
        .I1(\count_value_i_reg[8] ),
        .I2(wrst_busy),
        .I3(rst_d1),
        .O(wr_pntr_plus1_pf_carry));
  (* SOFT_HLUTNM = "soft_lutpair288" *) 
  LUT3 #(
    .INIT(8'hF1)) 
    \grdc.rd_data_count_i[9]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .O(\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ));
  LUT3 #(
    .INIT(8'hE0)) 
    \guf.underflow_i_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(\guf.underflow_i_reg ),
        .I2(rd_en),
        .O(underflow_i0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(\power_on_rst_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\power_on_rst_reg_n_0_[0] ),
        .Q(p_0_in),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    wr_rst_busy_INST_0
       (.I0(wrst_busy),
        .I1(rst_d1),
        .O(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_rst" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_rst__xdcDup__5
   (\gen_rst_ic.fifo_rd_rst_ic_reg_0 ,
    wrst_busy,
    wr_pntr_plus1_pf_carry,
    wr_rst_busy,
    SR,
    \gen_rst_ic.fifo_rd_rst_ic_reg_1 ,
    underflow_i0,
    rd_clk,
    wr_clk,
    rst,
    wr_en,
    \count_value_i_reg[7] ,
    rst_d1,
    ram_empty_i,
    Q,
    rd_en,
    \guf.underflow_i_reg );
  output \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  output wrst_busy;
  output wr_pntr_plus1_pf_carry;
  output wr_rst_busy;
  output [0:0]SR;
  output [0:0]\gen_rst_ic.fifo_rd_rst_ic_reg_1 ;
  output underflow_i0;
  input rd_clk;
  input wr_clk;
  input rst;
  input wr_en;
  input \count_value_i_reg[7] ;
  input rst_d1;
  input ram_empty_i;
  input [1:0]Q;
  input rd_en;
  input \guf.underflow_i_reg ;

  wire \/i__n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i_reg[7] ;
  (* RTL_KEEP = "yes" *) wire [1:0]\gen_rst_ic.curr_rrst_state ;
  wire \gen_rst_ic.fifo_rd_rst_i ;
  wire \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  wire [0:0]\gen_rst_ic.fifo_rd_rst_ic_reg_1 ;
  wire \gen_rst_ic.fifo_rd_rst_wr_i ;
  wire \gen_rst_ic.fifo_wr_rst_ic ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_rd ;
  wire [1:0]\gen_rst_ic.next_rrst_state ;
  wire \gen_rst_ic.rst_seq_reentered_i_1_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_i_2_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_reg_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ;
  wire \guf.underflow_i_reg ;
  wire p_0_in;
  wire \power_on_rst_reg_n_0_[0] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire rst_d1;
  wire rst_i__0;
  wire underflow_i0;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wr_rst_busy;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'h00010116)) 
    \/i_ 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\/i__n_0 ));
  LUT6 #(
    .INIT(64'h03030200FFFFFFFF)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I5(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFEFEFEEE)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I3(rst),
        .I4(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFF0EEE0FFFFEEE0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I5(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h000C0008)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I1(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000004400000044)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I3(rst),
        .I4(p_0_in),
        .I5(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1 
       (.I0(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0002)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1 
       (.I0(\gen_rst_ic.curr_rrst_state [0]),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .O(\gen_rst_ic.next_rrst_state [1]));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [0]),
        .Q(\gen_rst_ic.curr_rrst_state [0]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [1]),
        .Q(\gen_rst_ic.curr_rrst_state [1]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h06)) 
    \__0/i_ 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.next_rrst_state [0]));
  (* SOFT_HLUTNM = "soft_lutpair235" *) 
  LUT5 #(
    .INIT(32'hAAAAAEAE)) 
    \count_value_i[1]_i_1__2 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(ram_empty_i),
        .I2(Q[1]),
        .I3(rd_en),
        .I4(Q[0]),
        .O(SR));
  LUT3 #(
    .INIT(8'h3E)) 
    \gen_rst_ic.fifo_rd_rst_ic_i_1 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.fifo_rd_rst_i ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_rd_rst_ic_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_rd_rst_i ),
        .Q(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFEAFFFFFFEA0000)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I2(rst_i__0),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I4(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ),
        .I5(\gen_rst_ic.fifo_wr_rst_ic ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair236" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_2 
       (.I0(p_0_in),
        .I1(rst),
        .O(rst_i__0));
  LUT5 #(
    .INIT(32'h00010116)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_3 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_wr_rst_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ),
        .Q(\gen_rst_ic.fifo_wr_rst_ic ),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__23 \gen_rst_ic.rrst_wr_inst 
       (.dest_clk(wr_clk),
        .dest_rst(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .src_rst(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ));
  (* SOFT_HLUTNM = "soft_lutpair236" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \gen_rst_ic.rst_seq_reentered_i_1 
       (.I0(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ),
        .I1(rst),
        .I2(p_0_in),
        .O(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00010000)) 
    \gen_rst_ic.rst_seq_reentered_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I5(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.rst_seq_reentered_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ),
        .Q(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEFFFEF00)) 
    \gen_rst_ic.wr_rst_busy_ic_i_1 
       (.I0(rst),
        .I1(p_0_in),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I3(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ),
        .I4(wrst_busy),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000116)) 
    \gen_rst_ic.wr_rst_busy_ic_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.wr_rst_busy_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ),
        .Q(wrst_busy),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__22 \gen_rst_ic.wrst_rd_inst 
       (.dest_clk(rd_clk),
        .dest_rst(\gen_rst_ic.fifo_wr_rst_rd ),
        .src_rst(\gen_rst_ic.fifo_wr_rst_ic ));
  LUT4 #(
    .INIT(16'h0002)) 
    \gen_sdpram.xpm_memory_base_inst_i_1 
       (.I0(wr_en),
        .I1(\count_value_i_reg[7] ),
        .I2(wrst_busy),
        .I3(rst_d1),
        .O(wr_pntr_plus1_pf_carry));
  (* SOFT_HLUTNM = "soft_lutpair235" *) 
  LUT3 #(
    .INIT(8'hAB)) 
    \grdc.rd_data_count_i[8]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(Q[0]),
        .I2(Q[1]),
        .O(\gen_rst_ic.fifo_rd_rst_ic_reg_1 ));
  LUT3 #(
    .INIT(8'hE0)) 
    \guf.underflow_i_i_1 
       (.I0(\guf.underflow_i_reg ),
        .I1(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I2(rd_en),
        .O(underflow_i0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(\power_on_rst_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\power_on_rst_reg_n_0_[0] ),
        .Q(p_0_in),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    wr_rst_busy_INST_0
       (.I0(wrst_busy),
        .I1(rst_d1),
        .O(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_rst" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_rst__xdcDup__6
   (\gen_rst_ic.fifo_rd_rst_ic_reg_0 ,
    wrst_busy,
    E,
    wr_rst_busy,
    SR,
    \gen_rst_ic.fifo_rd_rst_ic_reg_1 ,
    underflow_i0,
    rd_clk,
    wr_clk,
    rst,
    wr_en,
    \count_value_i_reg[3] ,
    rst_d1,
    ram_empty_i,
    Q,
    rd_en,
    \guf.underflow_i_reg );
  output \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  output wrst_busy;
  output [0:0]E;
  output wr_rst_busy;
  output [0:0]SR;
  output [0:0]\gen_rst_ic.fifo_rd_rst_ic_reg_1 ;
  output underflow_i0;
  input rd_clk;
  input wr_clk;
  input rst;
  input wr_en;
  input \count_value_i_reg[3] ;
  input rst_d1;
  input ram_empty_i;
  input [1:0]Q;
  input rd_en;
  input \guf.underflow_i_reg ;

  wire \/i__n_0 ;
  wire [0:0]E;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i_reg[3] ;
  (* RTL_KEEP = "yes" *) wire [1:0]\gen_rst_ic.curr_rrst_state ;
  wire \gen_rst_ic.fifo_rd_rst_i ;
  wire \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  wire [0:0]\gen_rst_ic.fifo_rd_rst_ic_reg_1 ;
  wire \gen_rst_ic.fifo_rd_rst_wr_i ;
  wire \gen_rst_ic.fifo_wr_rst_ic ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_rd ;
  wire [1:0]\gen_rst_ic.next_rrst_state ;
  wire \gen_rst_ic.rst_seq_reentered_i_1_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_i_2_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_reg_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ;
  wire \guf.underflow_i_reg ;
  wire p_0_in;
  wire \power_on_rst_reg_n_0_[0] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire rst_d1;
  wire rst_i__0;
  wire underflow_i0;
  wire wr_clk;
  wire wr_en;
  wire wr_rst_busy;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'h00010116)) 
    \/i_ 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\/i__n_0 ));
  LUT6 #(
    .INIT(64'h03030200FFFFFFFF)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I5(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFEFEFEEE)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I3(rst),
        .I4(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFF0EEE0FFFFEEE0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I5(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h000C0008)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I1(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000004400000044)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I3(rst),
        .I4(p_0_in),
        .I5(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1 
       (.I0(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0002)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1 
       (.I0(\gen_rst_ic.curr_rrst_state [0]),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .O(\gen_rst_ic.next_rrst_state [1]));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [0]),
        .Q(\gen_rst_ic.curr_rrst_state [0]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [1]),
        .Q(\gen_rst_ic.curr_rrst_state [1]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h06)) 
    \__0/i_ 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.next_rrst_state [0]));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT5 #(
    .INIT(32'hAAAAAEAE)) 
    \count_value_i[1]_i_1__2 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(ram_empty_i),
        .I2(Q[1]),
        .I3(rd_en),
        .I4(Q[0]),
        .O(SR));
  LUT3 #(
    .INIT(8'h3E)) 
    \gen_rst_ic.fifo_rd_rst_ic_i_1 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.fifo_rd_rst_i ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_rd_rst_ic_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_rd_rst_i ),
        .Q(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFEAFFFFFFEA0000)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I2(rst_i__0),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I4(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ),
        .I5(\gen_rst_ic.fifo_wr_rst_ic ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_2 
       (.I0(p_0_in),
        .I1(rst),
        .O(rst_i__0));
  LUT5 #(
    .INIT(32'h00010116)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_3 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_wr_rst_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ),
        .Q(\gen_rst_ic.fifo_wr_rst_ic ),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__25 \gen_rst_ic.rrst_wr_inst 
       (.dest_clk(wr_clk),
        .dest_rst(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .src_rst(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \gen_rst_ic.rst_seq_reentered_i_1 
       (.I0(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ),
        .I1(rst),
        .I2(p_0_in),
        .O(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00010000)) 
    \gen_rst_ic.rst_seq_reentered_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I5(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.rst_seq_reentered_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ),
        .Q(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEFFFEF00)) 
    \gen_rst_ic.wr_rst_busy_ic_i_1 
       (.I0(rst),
        .I1(p_0_in),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I3(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ),
        .I4(wrst_busy),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000116)) 
    \gen_rst_ic.wr_rst_busy_ic_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.wr_rst_busy_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ),
        .Q(wrst_busy),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__24 \gen_rst_ic.wrst_rd_inst 
       (.dest_clk(rd_clk),
        .dest_rst(\gen_rst_ic.fifo_wr_rst_rd ),
        .src_rst(\gen_rst_ic.fifo_wr_rst_ic ));
  LUT4 #(
    .INIT(16'h0002)) 
    \gen_sdpram.xpm_memory_base_inst_i_1 
       (.I0(wr_en),
        .I1(\count_value_i_reg[3] ),
        .I2(wrst_busy),
        .I3(rst_d1),
        .O(E));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT3 #(
    .INIT(8'hAB)) 
    \grdc.rd_data_count_i[4]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(Q[0]),
        .I2(Q[1]),
        .O(\gen_rst_ic.fifo_rd_rst_ic_reg_1 ));
  LUT3 #(
    .INIT(8'hE0)) 
    \guf.underflow_i_i_1 
       (.I0(\guf.underflow_i_reg ),
        .I1(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I2(rd_en),
        .O(underflow_i0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(\power_on_rst_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\power_on_rst_reg_n_0_[0] ),
        .Q(p_0_in),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    wr_rst_busy_INST_0
       (.I0(wrst_busy),
        .I1(rst_d1),
        .O(wr_rst_busy));
endmodule

(* ADDR_WIDTH_A = "8" *) (* ADDR_WIDTH_B = "8" *) (* AUTO_SLEEP_TIME = "0" *) 
(* BYTE_WRITE_WIDTH_A = "45" *) (* BYTE_WRITE_WIDTH_B = "45" *) (* CASCADE_HEIGHT = "0" *) 
(* CLOCKING_MODE = "1" *) (* ECC_BIT_RANGE = "[7:0]" *) (* ECC_MODE = "0" *) 
(* ECC_TYPE = "NONE" *) (* IGNORE_INIT_SYNTH = "0" *) (* MAX_NUM_CHAR = "0" *) 
(* MEMORY_INIT_FILE = "none" *) (* MEMORY_INIT_PARAM = "" *) (* MEMORY_OPTIMIZATION = "true" *) 
(* MEMORY_PRIMITIVE = "2" *) (* MEMORY_SIZE = "11520" *) (* MEMORY_TYPE = "1" *) 
(* MESSAGE_CONTROL = "0" *) (* NUM_CHAR_LOC = "0" *) (* P_ECC_MODE = "0" *) 
(* P_ENABLE_BYTE_WRITE_A = "0" *) (* P_ENABLE_BYTE_WRITE_B = "0" *) (* P_MAX_DEPTH_DATA = "256" *) 
(* P_MEMORY_OPT = "yes" *) (* P_MEMORY_PRIMITIVE = "block" *) (* P_MIN_WIDTH_DATA = "45" *) 
(* P_MIN_WIDTH_DATA_A = "45" *) (* P_MIN_WIDTH_DATA_B = "45" *) (* P_MIN_WIDTH_DATA_ECC = "45" *) 
(* P_MIN_WIDTH_DATA_LDW = "4" *) (* P_MIN_WIDTH_DATA_SHFT = "45" *) (* P_NUM_COLS_WRITE_A = "1" *) 
(* P_NUM_COLS_WRITE_B = "1" *) (* P_NUM_ROWS_READ_A = "1" *) (* P_NUM_ROWS_READ_B = "1" *) 
(* P_NUM_ROWS_WRITE_A = "1" *) (* P_NUM_ROWS_WRITE_B = "1" *) (* P_SDP_WRITE_MODE = "no" *) 
(* P_WIDTH_ADDR_LSB_READ_A = "0" *) (* P_WIDTH_ADDR_LSB_READ_B = "0" *) (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
(* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) (* P_WIDTH_ADDR_READ_A = "8" *) (* P_WIDTH_ADDR_READ_B = "8" *) 
(* P_WIDTH_ADDR_WRITE_A = "8" *) (* P_WIDTH_ADDR_WRITE_B = "8" *) (* P_WIDTH_COL_WRITE_A = "45" *) 
(* P_WIDTH_COL_WRITE_B = "45" *) (* RAM_DECOMP = "auto" *) (* READ_DATA_WIDTH_A = "45" *) 
(* READ_DATA_WIDTH_B = "45" *) (* READ_LATENCY_A = "2" *) (* READ_LATENCY_B = "2" *) 
(* READ_RESET_VALUE_A = "0" *) (* READ_RESET_VALUE_B = "0" *) (* RST_MODE_A = "SYNC" *) 
(* RST_MODE_B = "SYNC" *) (* SIM_ASSERT_CHK = "0" *) (* USE_EMBEDDED_CONSTRAINT = "0" *) 
(* USE_MEM_INIT = "0" *) (* USE_MEM_INIT_MMI = "0" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH_A = "45" *) (* WRITE_DATA_WIDTH_B = "45" *) 
(* WRITE_MODE_A = "2" *) (* WRITE_MODE_B = "2" *) (* WRITE_PROTECT = "1" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "soft" *) (* rsta_loop_iter = "48" *) 
(* rstb_loop_iter = "48" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_memory_base
   (sleep,
    clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    injectsbiterra,
    injectdbiterra,
    douta,
    sbiterra,
    dbiterra,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    injectsbiterrb,
    injectdbiterrb,
    doutb,
    sbiterrb,
    dbiterrb);
  input sleep;
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [7:0]addra;
  input [44:0]dina;
  input injectsbiterra;
  input injectdbiterra;
  output [44:0]douta;
  output sbiterra;
  output dbiterra;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [7:0]addrb;
  input [44:0]dinb;
  input injectsbiterrb;
  input injectdbiterrb;
  output [44:0]doutb;
  output sbiterrb;
  output dbiterrb;

  wire \<const0> ;
  wire [7:0]addra;
  wire [7:0]addrb;
  wire clka;
  wire clkb;
  wire [44:0]dina;
  wire [44:0]doutb;
  wire ena;
  wire enb;
  wire regceb;
  wire rstb;
  wire sleep;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTDBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTSBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_DBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_SBITERR_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINA_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINB_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPA_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPB_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTA_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTB_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPA_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPB_UNCONNECTED ;
  wire [31:13]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTBDOUT_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPADOUTP_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPBDOUTP_UNCONNECTED ;
  wire [7:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_RDADDRECC_UNCONNECTED ;

  assign dbiterra = \<const0> ;
  assign dbiterrb = \<const0> ;
  assign douta[44] = \<const0> ;
  assign douta[43] = \<const0> ;
  assign douta[42] = \<const0> ;
  assign douta[41] = \<const0> ;
  assign douta[40] = \<const0> ;
  assign douta[39] = \<const0> ;
  assign douta[38] = \<const0> ;
  assign douta[37] = \<const0> ;
  assign douta[36] = \<const0> ;
  assign douta[35] = \<const0> ;
  assign douta[34] = \<const0> ;
  assign douta[33] = \<const0> ;
  assign douta[32] = \<const0> ;
  assign douta[31] = \<const0> ;
  assign douta[30] = \<const0> ;
  assign douta[29] = \<const0> ;
  assign douta[28] = \<const0> ;
  assign douta[27] = \<const0> ;
  assign douta[26] = \<const0> ;
  assign douta[25] = \<const0> ;
  assign douta[24] = \<const0> ;
  assign douta[23] = \<const0> ;
  assign douta[22] = \<const0> ;
  assign douta[21] = \<const0> ;
  assign douta[20] = \<const0> ;
  assign douta[19] = \<const0> ;
  assign douta[18] = \<const0> ;
  assign douta[17] = \<const0> ;
  assign douta[16] = \<const0> ;
  assign douta[15] = \<const0> ;
  assign douta[14] = \<const0> ;
  assign douta[13] = \<const0> ;
  assign douta[12] = \<const0> ;
  assign douta[11] = \<const0> ;
  assign douta[10] = \<const0> ;
  assign douta[9] = \<const0> ;
  assign douta[8] = \<const0> ;
  assign douta[7] = \<const0> ;
  assign douta[6] = \<const0> ;
  assign douta[5] = \<const0> ;
  assign douta[4] = \<const0> ;
  assign douta[3] = \<const0> ;
  assign douta[2] = \<const0> ;
  assign douta[1] = \<const0> ;
  assign douta[0] = \<const0> ;
  assign sbiterra = \<const0> ;
  assign sbiterrb = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* \MEM.PORTA.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTA.ADDRESS_END  = "511" *) 
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d45" *) 
  (* \MEM.PORTA.DATA_LSB  = "0" *) 
  (* \MEM.PORTA.DATA_MSB  = "44" *) 
  (* \MEM.PORTB.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTB.ADDRESS_END  = "511" *) 
  (* \MEM.PORTB.DATA_BIT_LAYOUT  = "p0_d45" *) 
  (* \MEM.PORTB.DATA_LSB  = "0" *) 
  (* \MEM.PORTB.DATA_MSB  = "44" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RDADDR_COLLISION_HWCONFIG = "DELAYED_WRITE" *) 
  (* RTL_RAM_BITS = "11520" *) 
  (* RTL_RAM_NAME = "inst/master_fpga_gen.axi_chip2chip_master_inst/axi_chip2chip_ar_fifo_inst/axi_chip2chip_async_fifo_inst/xpm_fifo_async_inst/gnuram_async_fifo.xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst/gen_wr_a.gen_word_narrow.mem_reg" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "511" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "44" *) 
  RAMB36E2 #(
    .CASCADE_ORDER_A("NONE"),
    .CASCADE_ORDER_B("NONE"),
    .CLOCK_DOMAINS("INDEPENDENT"),
    .DOA_REG(1),
    .DOB_REG(1),
    .ENADDRENA("FALSE"),
    .ENADDRENB("FALSE"),
    .EN_ECC_PIPE("FALSE"),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .RDADDRCHANGEA("FALSE"),
    .RDADDRCHANGEB("FALSE"),
    .READ_WIDTH_A(72),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SLEEP_ASYNC("TRUE"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("NO_CHANGE"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(72)) 
    \gen_wr_a.gen_word_narrow.mem_reg 
       (.ADDRARDADDR({1'b0,addrb,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({1'b0,addra,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRENA(1'b1),
        .ADDRENB(1'b1),
        .CASDIMUXA(1'b0),
        .CASDIMUXB(1'b0),
        .CASDINA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINA_UNCONNECTED [31:0]),
        .CASDINB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINB_UNCONNECTED [31:0]),
        .CASDINPA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPA_UNCONNECTED [3:0]),
        .CASDINPB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPB_UNCONNECTED [3:0]),
        .CASDOMUXA(1'b0),
        .CASDOMUXB(1'b0),
        .CASDOMUXEN_A(1'b1),
        .CASDOMUXEN_B(1'b1),
        .CASDOUTA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTA_UNCONNECTED [31:0]),
        .CASDOUTB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTB_UNCONNECTED [31:0]),
        .CASDOUTPA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPA_UNCONNECTED [3:0]),
        .CASDOUTPB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPB_UNCONNECTED [3:0]),
        .CASINDBITERR(1'b0),
        .CASINSBITERR(1'b0),
        .CASOREGIMUXA(1'b0),
        .CASOREGIMUXB(1'b0),
        .CASOREGIMUXEN_A(1'b1),
        .CASOREGIMUXEN_B(1'b1),
        .CASOUTDBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTDBITERR_UNCONNECTED ),
        .CASOUTSBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTSBITERR_UNCONNECTED ),
        .CLKARDCLK(clkb),
        .CLKBWRCLK(clka),
        .DBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DBITERR_UNCONNECTED ),
        .DINADIN(dina[31:0]),
        .DINBDIN({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,dina[44:32]}),
        .DINPADINP({1'b1,1'b1,1'b1,1'b1}),
        .DINPBDINP({1'b1,1'b1,1'b1,1'b1}),
        .DOUTADOUT(doutb[31:0]),
        .DOUTBDOUT({\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTBDOUT_UNCONNECTED [31:13],doutb[44:32]}),
        .DOUTPADOUTP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPADOUTP_UNCONNECTED [3:0]),
        .DOUTPBDOUTP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPBDOUTP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_gen_wr_a.gen_word_narrow.mem_reg_ECCPARITY_UNCONNECTED [7:0]),
        .ECCPIPECE(1'b1),
        .ENARDEN(enb),
        .ENBWREN(ena),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_gen_wr_a.gen_word_narrow.mem_reg_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(regceb),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(rstb),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_SBITERR_UNCONNECTED ),
        .SLEEP(1'b0),
        .WEA({1'b0,1'b0,1'b0,1'b0}),
        .WEBWE({ena,ena,ena,ena,ena,ena,ena,ena}));
endmodule

(* ADDR_WIDTH_A = "8" *) (* ADDR_WIDTH_B = "8" *) (* AUTO_SLEEP_TIME = "0" *) 
(* BYTE_WRITE_WIDTH_A = "45" *) (* BYTE_WRITE_WIDTH_B = "45" *) (* CASCADE_HEIGHT = "0" *) 
(* CLOCKING_MODE = "1" *) (* ECC_BIT_RANGE = "[7:0]" *) (* ECC_MODE = "0" *) 
(* ECC_TYPE = "NONE" *) (* IGNORE_INIT_SYNTH = "0" *) (* MAX_NUM_CHAR = "0" *) 
(* MEMORY_INIT_FILE = "none" *) (* MEMORY_INIT_PARAM = "" *) (* MEMORY_OPTIMIZATION = "true" *) 
(* MEMORY_PRIMITIVE = "2" *) (* MEMORY_SIZE = "11520" *) (* MEMORY_TYPE = "1" *) 
(* MESSAGE_CONTROL = "0" *) (* NUM_CHAR_LOC = "0" *) (* ORIG_REF_NAME = "xpm_memory_base" *) 
(* P_ECC_MODE = "0" *) (* P_ENABLE_BYTE_WRITE_A = "0" *) (* P_ENABLE_BYTE_WRITE_B = "0" *) 
(* P_MAX_DEPTH_DATA = "256" *) (* P_MEMORY_OPT = "yes" *) (* P_MEMORY_PRIMITIVE = "block" *) 
(* P_MIN_WIDTH_DATA = "45" *) (* P_MIN_WIDTH_DATA_A = "45" *) (* P_MIN_WIDTH_DATA_B = "45" *) 
(* P_MIN_WIDTH_DATA_ECC = "45" *) (* P_MIN_WIDTH_DATA_LDW = "4" *) (* P_MIN_WIDTH_DATA_SHFT = "45" *) 
(* P_NUM_COLS_WRITE_A = "1" *) (* P_NUM_COLS_WRITE_B = "1" *) (* P_NUM_ROWS_READ_A = "1" *) 
(* P_NUM_ROWS_READ_B = "1" *) (* P_NUM_ROWS_WRITE_A = "1" *) (* P_NUM_ROWS_WRITE_B = "1" *) 
(* P_SDP_WRITE_MODE = "no" *) (* P_WIDTH_ADDR_LSB_READ_A = "0" *) (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
(* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) (* P_WIDTH_ADDR_READ_A = "8" *) 
(* P_WIDTH_ADDR_READ_B = "8" *) (* P_WIDTH_ADDR_WRITE_A = "8" *) (* P_WIDTH_ADDR_WRITE_B = "8" *) 
(* P_WIDTH_COL_WRITE_A = "45" *) (* P_WIDTH_COL_WRITE_B = "45" *) (* RAM_DECOMP = "auto" *) 
(* READ_DATA_WIDTH_A = "45" *) (* READ_DATA_WIDTH_B = "45" *) (* READ_LATENCY_A = "2" *) 
(* READ_LATENCY_B = "2" *) (* READ_RESET_VALUE_A = "0" *) (* READ_RESET_VALUE_B = "0" *) 
(* RST_MODE_A = "SYNC" *) (* RST_MODE_B = "SYNC" *) (* SIM_ASSERT_CHK = "0" *) 
(* USE_EMBEDDED_CONSTRAINT = "0" *) (* USE_MEM_INIT = "0" *) (* USE_MEM_INIT_MMI = "0" *) 
(* VERSION = "0" *) (* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH_A = "45" *) 
(* WRITE_DATA_WIDTH_B = "45" *) (* WRITE_MODE_A = "2" *) (* WRITE_MODE_B = "2" *) 
(* WRITE_PROTECT = "1" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "soft" *) 
(* rsta_loop_iter = "48" *) (* rstb_loop_iter = "48" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_memory_base__2
   (sleep,
    clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    injectsbiterra,
    injectdbiterra,
    douta,
    sbiterra,
    dbiterra,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    injectsbiterrb,
    injectdbiterrb,
    doutb,
    sbiterrb,
    dbiterrb);
  input sleep;
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [7:0]addra;
  input [44:0]dina;
  input injectsbiterra;
  input injectdbiterra;
  output [44:0]douta;
  output sbiterra;
  output dbiterra;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [7:0]addrb;
  input [44:0]dinb;
  input injectsbiterrb;
  input injectdbiterrb;
  output [44:0]doutb;
  output sbiterrb;
  output dbiterrb;

  wire \<const0> ;
  wire [7:0]addra;
  wire [7:0]addrb;
  wire clka;
  wire clkb;
  wire [44:0]dina;
  wire [44:0]doutb;
  wire ena;
  wire enb;
  wire regceb;
  wire rstb;
  wire sleep;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTDBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTSBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_DBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_SBITERR_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINA_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINB_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPA_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPB_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTA_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTB_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPA_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPB_UNCONNECTED ;
  wire [31:13]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTBDOUT_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPADOUTP_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPBDOUTP_UNCONNECTED ;
  wire [7:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_RDADDRECC_UNCONNECTED ;

  assign dbiterra = \<const0> ;
  assign dbiterrb = \<const0> ;
  assign douta[44] = \<const0> ;
  assign douta[43] = \<const0> ;
  assign douta[42] = \<const0> ;
  assign douta[41] = \<const0> ;
  assign douta[40] = \<const0> ;
  assign douta[39] = \<const0> ;
  assign douta[38] = \<const0> ;
  assign douta[37] = \<const0> ;
  assign douta[36] = \<const0> ;
  assign douta[35] = \<const0> ;
  assign douta[34] = \<const0> ;
  assign douta[33] = \<const0> ;
  assign douta[32] = \<const0> ;
  assign douta[31] = \<const0> ;
  assign douta[30] = \<const0> ;
  assign douta[29] = \<const0> ;
  assign douta[28] = \<const0> ;
  assign douta[27] = \<const0> ;
  assign douta[26] = \<const0> ;
  assign douta[25] = \<const0> ;
  assign douta[24] = \<const0> ;
  assign douta[23] = \<const0> ;
  assign douta[22] = \<const0> ;
  assign douta[21] = \<const0> ;
  assign douta[20] = \<const0> ;
  assign douta[19] = \<const0> ;
  assign douta[18] = \<const0> ;
  assign douta[17] = \<const0> ;
  assign douta[16] = \<const0> ;
  assign douta[15] = \<const0> ;
  assign douta[14] = \<const0> ;
  assign douta[13] = \<const0> ;
  assign douta[12] = \<const0> ;
  assign douta[11] = \<const0> ;
  assign douta[10] = \<const0> ;
  assign douta[9] = \<const0> ;
  assign douta[8] = \<const0> ;
  assign douta[7] = \<const0> ;
  assign douta[6] = \<const0> ;
  assign douta[5] = \<const0> ;
  assign douta[4] = \<const0> ;
  assign douta[3] = \<const0> ;
  assign douta[2] = \<const0> ;
  assign douta[1] = \<const0> ;
  assign douta[0] = \<const0> ;
  assign sbiterra = \<const0> ;
  assign sbiterrb = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* \MEM.PORTA.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTA.ADDRESS_END  = "511" *) 
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d45" *) 
  (* \MEM.PORTA.DATA_LSB  = "0" *) 
  (* \MEM.PORTA.DATA_MSB  = "44" *) 
  (* \MEM.PORTB.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTB.ADDRESS_END  = "511" *) 
  (* \MEM.PORTB.DATA_BIT_LAYOUT  = "p0_d45" *) 
  (* \MEM.PORTB.DATA_LSB  = "0" *) 
  (* \MEM.PORTB.DATA_MSB  = "44" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RDADDR_COLLISION_HWCONFIG = "DELAYED_WRITE" *) 
  (* RTL_RAM_BITS = "11520" *) 
  (* RTL_RAM_NAME = "inst/master_fpga_gen.axi_chip2chip_master_inst/axi_chip2chip_aw_fifo_inst/axi_chip2chip_async_fifo_inst/xpm_fifo_async_inst/gnuram_async_fifo.xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst/gen_wr_a.gen_word_narrow.mem_reg" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "511" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "44" *) 
  RAMB36E2 #(
    .CASCADE_ORDER_A("NONE"),
    .CASCADE_ORDER_B("NONE"),
    .CLOCK_DOMAINS("INDEPENDENT"),
    .DOA_REG(1),
    .DOB_REG(1),
    .ENADDRENA("FALSE"),
    .ENADDRENB("FALSE"),
    .EN_ECC_PIPE("FALSE"),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .RDADDRCHANGEA("FALSE"),
    .RDADDRCHANGEB("FALSE"),
    .READ_WIDTH_A(72),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SLEEP_ASYNC("TRUE"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("NO_CHANGE"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(72)) 
    \gen_wr_a.gen_word_narrow.mem_reg 
       (.ADDRARDADDR({1'b0,addrb,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({1'b0,addra,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRENA(1'b1),
        .ADDRENB(1'b1),
        .CASDIMUXA(1'b0),
        .CASDIMUXB(1'b0),
        .CASDINA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINA_UNCONNECTED [31:0]),
        .CASDINB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINB_UNCONNECTED [31:0]),
        .CASDINPA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPA_UNCONNECTED [3:0]),
        .CASDINPB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPB_UNCONNECTED [3:0]),
        .CASDOMUXA(1'b0),
        .CASDOMUXB(1'b0),
        .CASDOMUXEN_A(1'b1),
        .CASDOMUXEN_B(1'b1),
        .CASDOUTA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTA_UNCONNECTED [31:0]),
        .CASDOUTB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTB_UNCONNECTED [31:0]),
        .CASDOUTPA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPA_UNCONNECTED [3:0]),
        .CASDOUTPB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPB_UNCONNECTED [3:0]),
        .CASINDBITERR(1'b0),
        .CASINSBITERR(1'b0),
        .CASOREGIMUXA(1'b0),
        .CASOREGIMUXB(1'b0),
        .CASOREGIMUXEN_A(1'b1),
        .CASOREGIMUXEN_B(1'b1),
        .CASOUTDBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTDBITERR_UNCONNECTED ),
        .CASOUTSBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTSBITERR_UNCONNECTED ),
        .CLKARDCLK(clkb),
        .CLKBWRCLK(clka),
        .DBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DBITERR_UNCONNECTED ),
        .DINADIN(dina[31:0]),
        .DINBDIN({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,dina[44:32]}),
        .DINPADINP({1'b1,1'b1,1'b1,1'b1}),
        .DINPBDINP({1'b1,1'b1,1'b1,1'b1}),
        .DOUTADOUT(doutb[31:0]),
        .DOUTBDOUT({\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTBDOUT_UNCONNECTED [31:13],doutb[44:32]}),
        .DOUTPADOUTP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPADOUTP_UNCONNECTED [3:0]),
        .DOUTPBDOUTP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPBDOUTP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_gen_wr_a.gen_word_narrow.mem_reg_ECCPARITY_UNCONNECTED [7:0]),
        .ECCPIPECE(1'b1),
        .ENARDEN(enb),
        .ENBWREN(ena),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_gen_wr_a.gen_word_narrow.mem_reg_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(regceb),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(rstb),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_SBITERR_UNCONNECTED ),
        .SLEEP(1'b0),
        .WEA({1'b0,1'b0,1'b0,1'b0}),
        .WEBWE({ena,ena,ena,ena,ena,ena,ena,ena}));
endmodule

(* ADDR_WIDTH_A = "9" *) (* ADDR_WIDTH_B = "9" *) (* AUTO_SLEEP_TIME = "0" *) 
(* BYTE_WRITE_WIDTH_A = "38" *) (* BYTE_WRITE_WIDTH_B = "38" *) (* CASCADE_HEIGHT = "0" *) 
(* CLOCKING_MODE = "1" *) (* ECC_BIT_RANGE = "[7:0]" *) (* ECC_MODE = "0" *) 
(* ECC_TYPE = "NONE" *) (* IGNORE_INIT_SYNTH = "0" *) (* MAX_NUM_CHAR = "0" *) 
(* MEMORY_INIT_FILE = "none" *) (* MEMORY_INIT_PARAM = "" *) (* MEMORY_OPTIMIZATION = "true" *) 
(* MEMORY_PRIMITIVE = "2" *) (* MEMORY_SIZE = "19456" *) (* MEMORY_TYPE = "1" *) 
(* MESSAGE_CONTROL = "0" *) (* NUM_CHAR_LOC = "0" *) (* ORIG_REF_NAME = "xpm_memory_base" *) 
(* P_ECC_MODE = "0" *) (* P_ENABLE_BYTE_WRITE_A = "0" *) (* P_ENABLE_BYTE_WRITE_B = "0" *) 
(* P_MAX_DEPTH_DATA = "512" *) (* P_MEMORY_OPT = "yes" *) (* P_MEMORY_PRIMITIVE = "block" *) 
(* P_MIN_WIDTH_DATA = "38" *) (* P_MIN_WIDTH_DATA_A = "38" *) (* P_MIN_WIDTH_DATA_B = "38" *) 
(* P_MIN_WIDTH_DATA_ECC = "38" *) (* P_MIN_WIDTH_DATA_LDW = "4" *) (* P_MIN_WIDTH_DATA_SHFT = "38" *) 
(* P_NUM_COLS_WRITE_A = "1" *) (* P_NUM_COLS_WRITE_B = "1" *) (* P_NUM_ROWS_READ_A = "1" *) 
(* P_NUM_ROWS_READ_B = "1" *) (* P_NUM_ROWS_WRITE_A = "1" *) (* P_NUM_ROWS_WRITE_B = "1" *) 
(* P_SDP_WRITE_MODE = "no" *) (* P_WIDTH_ADDR_LSB_READ_A = "0" *) (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
(* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) (* P_WIDTH_ADDR_READ_A = "9" *) 
(* P_WIDTH_ADDR_READ_B = "9" *) (* P_WIDTH_ADDR_WRITE_A = "9" *) (* P_WIDTH_ADDR_WRITE_B = "9" *) 
(* P_WIDTH_COL_WRITE_A = "38" *) (* P_WIDTH_COL_WRITE_B = "38" *) (* RAM_DECOMP = "auto" *) 
(* READ_DATA_WIDTH_A = "38" *) (* READ_DATA_WIDTH_B = "38" *) (* READ_LATENCY_A = "2" *) 
(* READ_LATENCY_B = "2" *) (* READ_RESET_VALUE_A = "0" *) (* READ_RESET_VALUE_B = "0" *) 
(* RST_MODE_A = "SYNC" *) (* RST_MODE_B = "SYNC" *) (* SIM_ASSERT_CHK = "0" *) 
(* USE_EMBEDDED_CONSTRAINT = "0" *) (* USE_MEM_INIT = "0" *) (* USE_MEM_INIT_MMI = "0" *) 
(* VERSION = "0" *) (* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH_A = "38" *) 
(* WRITE_DATA_WIDTH_B = "38" *) (* WRITE_MODE_A = "2" *) (* WRITE_MODE_B = "2" *) 
(* WRITE_PROTECT = "1" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "soft" *) 
(* rsta_loop_iter = "40" *) (* rstb_loop_iter = "40" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_memory_base__parameterized0
   (sleep,
    clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    injectsbiterra,
    injectdbiterra,
    douta,
    sbiterra,
    dbiterra,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    injectsbiterrb,
    injectdbiterrb,
    doutb,
    sbiterrb,
    dbiterrb);
  input sleep;
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [8:0]addra;
  input [37:0]dina;
  input injectsbiterra;
  input injectdbiterra;
  output [37:0]douta;
  output sbiterra;
  output dbiterra;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [8:0]addrb;
  input [37:0]dinb;
  input injectsbiterrb;
  input injectdbiterrb;
  output [37:0]doutb;
  output sbiterrb;
  output dbiterrb;

  wire \<const0> ;
  wire [8:0]addra;
  wire [8:0]addrb;
  wire clka;
  wire clkb;
  wire [37:0]dina;
  wire [37:1]\^doutb ;
  wire enb;
  wire regceb;
  wire rstb;
  wire sleep;
  wire [0:0]wea;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTDBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTSBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_DBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_SBITERR_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINA_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINB_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPA_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPB_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTA_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTB_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPA_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPB_UNCONNECTED ;
  wire [31:5]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTBDOUT_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPADOUTP_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPBDOUTP_UNCONNECTED ;
  wire [7:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_RDADDRECC_UNCONNECTED ;

  assign dbiterra = \<const0> ;
  assign dbiterrb = \<const0> ;
  assign douta[37] = \<const0> ;
  assign douta[36] = \<const0> ;
  assign douta[35] = \<const0> ;
  assign douta[34] = \<const0> ;
  assign douta[33] = \<const0> ;
  assign douta[32] = \<const0> ;
  assign douta[31] = \<const0> ;
  assign douta[30] = \<const0> ;
  assign douta[29] = \<const0> ;
  assign douta[28] = \<const0> ;
  assign douta[27] = \<const0> ;
  assign douta[26] = \<const0> ;
  assign douta[25] = \<const0> ;
  assign douta[24] = \<const0> ;
  assign douta[23] = \<const0> ;
  assign douta[22] = \<const0> ;
  assign douta[21] = \<const0> ;
  assign douta[20] = \<const0> ;
  assign douta[19] = \<const0> ;
  assign douta[18] = \<const0> ;
  assign douta[17] = \<const0> ;
  assign douta[16] = \<const0> ;
  assign douta[15] = \<const0> ;
  assign douta[14] = \<const0> ;
  assign douta[13] = \<const0> ;
  assign douta[12] = \<const0> ;
  assign douta[11] = \<const0> ;
  assign douta[10] = \<const0> ;
  assign douta[9] = \<const0> ;
  assign douta[8] = \<const0> ;
  assign douta[7] = \<const0> ;
  assign douta[6] = \<const0> ;
  assign douta[5] = \<const0> ;
  assign douta[4] = \<const0> ;
  assign douta[3] = \<const0> ;
  assign douta[2] = \<const0> ;
  assign douta[1] = \<const0> ;
  assign douta[0] = \<const0> ;
  assign doutb[37:1] = \^doutb [37:1];
  assign doutb[0] = \<const0> ;
  assign sbiterra = \<const0> ;
  assign sbiterrb = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* \MEM.PORTA.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTA.ADDRESS_END  = "511" *) 
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d37" *) 
  (* \MEM.PORTA.DATA_LSB  = "0" *) 
  (* \MEM.PORTA.DATA_MSB  = "36" *) 
  (* \MEM.PORTB.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTB.ADDRESS_END  = "511" *) 
  (* \MEM.PORTB.DATA_BIT_LAYOUT  = "p0_d37" *) 
  (* \MEM.PORTB.DATA_LSB  = "0" *) 
  (* \MEM.PORTB.DATA_MSB  = "36" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RDADDR_COLLISION_HWCONFIG = "DELAYED_WRITE" *) 
  (* RTL_RAM_BITS = "19456" *) 
  (* RTL_RAM_NAME = "inst/master_fpga_gen.axi_chip2chip_master_inst/axi_chip2chip_w_fifo_inst/axi_chip2chip_async_fifo_inst/xpm_fifo_async_inst/gnuram_async_fifo.xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst/gen_wr_a.gen_word_narrow.mem_reg" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "511" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "36" *) 
  RAMB36E2 #(
    .CASCADE_ORDER_A("NONE"),
    .CASCADE_ORDER_B("NONE"),
    .CLOCK_DOMAINS("INDEPENDENT"),
    .DOA_REG(1),
    .DOB_REG(1),
    .ENADDRENA("FALSE"),
    .ENADDRENB("FALSE"),
    .EN_ECC_PIPE("FALSE"),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .RDADDRCHANGEA("FALSE"),
    .RDADDRCHANGEB("FALSE"),
    .READ_WIDTH_A(72),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SLEEP_ASYNC("TRUE"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("NO_CHANGE"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(72)) 
    \gen_wr_a.gen_word_narrow.mem_reg 
       (.ADDRARDADDR({addrb,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({addra,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRENA(1'b1),
        .ADDRENB(1'b1),
        .CASDIMUXA(1'b0),
        .CASDIMUXB(1'b0),
        .CASDINA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINA_UNCONNECTED [31:0]),
        .CASDINB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINB_UNCONNECTED [31:0]),
        .CASDINPA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPA_UNCONNECTED [3:0]),
        .CASDINPB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPB_UNCONNECTED [3:0]),
        .CASDOMUXA(1'b0),
        .CASDOMUXB(1'b0),
        .CASDOMUXEN_A(1'b1),
        .CASDOMUXEN_B(1'b1),
        .CASDOUTA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTA_UNCONNECTED [31:0]),
        .CASDOUTB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTB_UNCONNECTED [31:0]),
        .CASDOUTPA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPA_UNCONNECTED [3:0]),
        .CASDOUTPB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPB_UNCONNECTED [3:0]),
        .CASINDBITERR(1'b0),
        .CASINSBITERR(1'b0),
        .CASOREGIMUXA(1'b0),
        .CASOREGIMUXB(1'b0),
        .CASOREGIMUXEN_A(1'b1),
        .CASOREGIMUXEN_B(1'b1),
        .CASOUTDBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTDBITERR_UNCONNECTED ),
        .CASOUTSBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTSBITERR_UNCONNECTED ),
        .CLKARDCLK(clkb),
        .CLKBWRCLK(clka),
        .DBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DBITERR_UNCONNECTED ),
        .DINADIN(dina[32:1]),
        .DINBDIN({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,dina[37:33]}),
        .DINPADINP({1'b1,1'b1,1'b1,1'b1}),
        .DINPBDINP({1'b1,1'b1,1'b1,1'b1}),
        .DOUTADOUT(\^doutb [32:1]),
        .DOUTBDOUT({\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTBDOUT_UNCONNECTED [31:5],\^doutb [37:33]}),
        .DOUTPADOUTP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPADOUTP_UNCONNECTED [3:0]),
        .DOUTPBDOUTP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPBDOUTP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_gen_wr_a.gen_word_narrow.mem_reg_ECCPARITY_UNCONNECTED [7:0]),
        .ECCPIPECE(1'b1),
        .ENARDEN(enb),
        .ENBWREN(1'b1),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_gen_wr_a.gen_word_narrow.mem_reg_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(regceb),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(rstb),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_SBITERR_UNCONNECTED ),
        .SLEEP(1'b0),
        .WEA({1'b0,1'b0,1'b0,1'b0}),
        .WEBWE({wea,wea,wea,wea,wea,wea,wea,wea}));
endmodule

(* ADDR_WIDTH_A = "9" *) (* ADDR_WIDTH_B = "9" *) (* AUTO_SLEEP_TIME = "0" *) 
(* BYTE_WRITE_WIDTH_A = "36" *) (* BYTE_WRITE_WIDTH_B = "36" *) (* CASCADE_HEIGHT = "0" *) 
(* CLOCKING_MODE = "1" *) (* ECC_BIT_RANGE = "[7:0]" *) (* ECC_MODE = "0" *) 
(* ECC_TYPE = "NONE" *) (* IGNORE_INIT_SYNTH = "0" *) (* MAX_NUM_CHAR = "0" *) 
(* MEMORY_INIT_FILE = "none" *) (* MEMORY_INIT_PARAM = "" *) (* MEMORY_OPTIMIZATION = "true" *) 
(* MEMORY_PRIMITIVE = "2" *) (* MEMORY_SIZE = "18432" *) (* MEMORY_TYPE = "1" *) 
(* MESSAGE_CONTROL = "0" *) (* NUM_CHAR_LOC = "0" *) (* ORIG_REF_NAME = "xpm_memory_base" *) 
(* P_ECC_MODE = "0" *) (* P_ENABLE_BYTE_WRITE_A = "0" *) (* P_ENABLE_BYTE_WRITE_B = "0" *) 
(* P_MAX_DEPTH_DATA = "512" *) (* P_MEMORY_OPT = "yes" *) (* P_MEMORY_PRIMITIVE = "block" *) 
(* P_MIN_WIDTH_DATA = "36" *) (* P_MIN_WIDTH_DATA_A = "36" *) (* P_MIN_WIDTH_DATA_B = "36" *) 
(* P_MIN_WIDTH_DATA_ECC = "36" *) (* P_MIN_WIDTH_DATA_LDW = "4" *) (* P_MIN_WIDTH_DATA_SHFT = "36" *) 
(* P_NUM_COLS_WRITE_A = "1" *) (* P_NUM_COLS_WRITE_B = "1" *) (* P_NUM_ROWS_READ_A = "1" *) 
(* P_NUM_ROWS_READ_B = "1" *) (* P_NUM_ROWS_WRITE_A = "1" *) (* P_NUM_ROWS_WRITE_B = "1" *) 
(* P_SDP_WRITE_MODE = "no" *) (* P_WIDTH_ADDR_LSB_READ_A = "0" *) (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
(* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) (* P_WIDTH_ADDR_READ_A = "9" *) 
(* P_WIDTH_ADDR_READ_B = "9" *) (* P_WIDTH_ADDR_WRITE_A = "9" *) (* P_WIDTH_ADDR_WRITE_B = "9" *) 
(* P_WIDTH_COL_WRITE_A = "36" *) (* P_WIDTH_COL_WRITE_B = "36" *) (* RAM_DECOMP = "auto" *) 
(* READ_DATA_WIDTH_A = "36" *) (* READ_DATA_WIDTH_B = "36" *) (* READ_LATENCY_A = "2" *) 
(* READ_LATENCY_B = "2" *) (* READ_RESET_VALUE_A = "0" *) (* READ_RESET_VALUE_B = "0" *) 
(* RST_MODE_A = "SYNC" *) (* RST_MODE_B = "SYNC" *) (* SIM_ASSERT_CHK = "0" *) 
(* USE_EMBEDDED_CONSTRAINT = "0" *) (* USE_MEM_INIT = "0" *) (* USE_MEM_INIT_MMI = "0" *) 
(* VERSION = "0" *) (* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH_A = "36" *) 
(* WRITE_DATA_WIDTH_B = "36" *) (* WRITE_MODE_A = "2" *) (* WRITE_MODE_B = "2" *) 
(* WRITE_PROTECT = "1" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "soft" *) 
(* rsta_loop_iter = "36" *) (* rstb_loop_iter = "36" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_memory_base__parameterized1
   (sleep,
    clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    injectsbiterra,
    injectdbiterra,
    douta,
    sbiterra,
    dbiterra,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    injectsbiterrb,
    injectdbiterrb,
    doutb,
    sbiterrb,
    dbiterrb);
  input sleep;
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [8:0]addra;
  input [35:0]dina;
  input injectsbiterra;
  input injectdbiterra;
  output [35:0]douta;
  output sbiterra;
  output dbiterra;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [8:0]addrb;
  input [35:0]dinb;
  input injectsbiterrb;
  input injectdbiterrb;
  output [35:0]doutb;
  output sbiterrb;
  output dbiterrb;

  wire \<const0> ;
  wire [8:0]addra;
  wire [8:0]addrb;
  wire clka;
  wire clkb;
  wire [35:0]dina;
  wire [35:0]doutb;
  wire enb;
  wire regceb;
  wire rstb;
  wire sleep;
  wire [0:0]wea;
  wire [15:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINA_UNCONNECTED ;
  wire [15:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINB_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPA_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPB_UNCONNECTED ;
  wire [15:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTA_UNCONNECTED ;
  wire [15:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTB_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPA_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPB_UNCONNECTED ;

  assign dbiterra = \<const0> ;
  assign dbiterrb = \<const0> ;
  assign douta[35] = \<const0> ;
  assign douta[34] = \<const0> ;
  assign douta[33] = \<const0> ;
  assign douta[32] = \<const0> ;
  assign douta[31] = \<const0> ;
  assign douta[30] = \<const0> ;
  assign douta[29] = \<const0> ;
  assign douta[28] = \<const0> ;
  assign douta[27] = \<const0> ;
  assign douta[26] = \<const0> ;
  assign douta[25] = \<const0> ;
  assign douta[24] = \<const0> ;
  assign douta[23] = \<const0> ;
  assign douta[22] = \<const0> ;
  assign douta[21] = \<const0> ;
  assign douta[20] = \<const0> ;
  assign douta[19] = \<const0> ;
  assign douta[18] = \<const0> ;
  assign douta[17] = \<const0> ;
  assign douta[16] = \<const0> ;
  assign douta[15] = \<const0> ;
  assign douta[14] = \<const0> ;
  assign douta[13] = \<const0> ;
  assign douta[12] = \<const0> ;
  assign douta[11] = \<const0> ;
  assign douta[10] = \<const0> ;
  assign douta[9] = \<const0> ;
  assign douta[8] = \<const0> ;
  assign douta[7] = \<const0> ;
  assign douta[6] = \<const0> ;
  assign douta[5] = \<const0> ;
  assign douta[4] = \<const0> ;
  assign douta[3] = \<const0> ;
  assign douta[2] = \<const0> ;
  assign douta[1] = \<const0> ;
  assign douta[0] = \<const0> ;
  assign sbiterra = \<const0> ;
  assign sbiterrb = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* \MEM.PORTA.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTA.ADDRESS_END  = "511" *) 
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p4_d32" *) 
  (* \MEM.PORTA.DATA_LSB  = "0" *) 
  (* \MEM.PORTA.DATA_MSB  = "35" *) 
  (* \MEM.PORTB.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTB.ADDRESS_END  = "511" *) 
  (* \MEM.PORTB.DATA_BIT_LAYOUT  = "p4_d32" *) 
  (* \MEM.PORTB.DATA_LSB  = "0" *) 
  (* \MEM.PORTB.DATA_MSB  = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RDADDR_COLLISION_HWCONFIG = "DELAYED_WRITE" *) 
  (* RTL_RAM_BITS = "18432" *) 
  (* RTL_RAM_NAME = "inst/master_fpga_gen.axi_chip2chip_master_inst/axi_chip2chip_r_fifo_inst/axi_chip2chip_async_fifo_inst/xpm_fifo_async_inst/gnuram_async_fifo.xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst/gen_wr_a.gen_word_narrow.mem_reg" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "511" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "35" *) 
  RAMB18E2 #(
    .CASCADE_ORDER_A("NONE"),
    .CASCADE_ORDER_B("NONE"),
    .CLOCK_DOMAINS("INDEPENDENT"),
    .DOA_REG(1),
    .DOB_REG(1),
    .ENADDRENA("FALSE"),
    .ENADDRENB("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .RDADDRCHANGEA("FALSE"),
    .RDADDRCHANGEB("FALSE"),
    .READ_WIDTH_A(36),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SLEEP_ASYNC("TRUE"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("NO_CHANGE"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(36)) 
    \gen_wr_a.gen_word_narrow.mem_reg 
       (.ADDRARDADDR({addrb,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({addra,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRENA(1'b1),
        .ADDRENB(1'b1),
        .CASDIMUXA(1'b0),
        .CASDIMUXB(1'b0),
        .CASDINA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINA_UNCONNECTED [15:0]),
        .CASDINB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINB_UNCONNECTED [15:0]),
        .CASDINPA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPA_UNCONNECTED [1:0]),
        .CASDINPB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPB_UNCONNECTED [1:0]),
        .CASDOMUXA(1'b0),
        .CASDOMUXB(1'b0),
        .CASDOMUXEN_A(1'b1),
        .CASDOMUXEN_B(1'b1),
        .CASDOUTA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTA_UNCONNECTED [15:0]),
        .CASDOUTB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTB_UNCONNECTED [15:0]),
        .CASDOUTPA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPA_UNCONNECTED [1:0]),
        .CASDOUTPB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPB_UNCONNECTED [1:0]),
        .CASOREGIMUXA(1'b0),
        .CASOREGIMUXB(1'b0),
        .CASOREGIMUXEN_A(1'b1),
        .CASOREGIMUXEN_B(1'b1),
        .CLKARDCLK(clkb),
        .CLKBWRCLK(clka),
        .DINADIN(dina[15:0]),
        .DINBDIN(dina[31:16]),
        .DINPADINP(dina[33:32]),
        .DINPBDINP(dina[35:34]),
        .DOUTADOUT(doutb[15:0]),
        .DOUTBDOUT(doutb[31:16]),
        .DOUTPADOUTP(doutb[33:32]),
        .DOUTPBDOUTP(doutb[35:34]),
        .ENARDEN(enb),
        .ENBWREN(1'b1),
        .REGCEAREGCE(regceb),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(rstb),
        .RSTREGB(1'b0),
        .SLEEP(1'b0),
        .WEA({1'b0,1'b0}),
        .WEBWE({wea,wea,wea,wea}));
endmodule

(* ADDR_WIDTH_A = "8" *) (* ADDR_WIDTH_B = "8" *) (* AUTO_SLEEP_TIME = "0" *) 
(* BYTE_WRITE_WIDTH_A = "3" *) (* BYTE_WRITE_WIDTH_B = "3" *) (* CASCADE_HEIGHT = "0" *) 
(* CLOCKING_MODE = "1" *) (* ECC_BIT_RANGE = "[7:0]" *) (* ECC_MODE = "0" *) 
(* ECC_TYPE = "NONE" *) (* IGNORE_INIT_SYNTH = "0" *) (* MAX_NUM_CHAR = "0" *) 
(* MEMORY_INIT_FILE = "none" *) (* MEMORY_INIT_PARAM = "" *) (* MEMORY_OPTIMIZATION = "true" *) 
(* MEMORY_PRIMITIVE = "1" *) (* MEMORY_SIZE = "768" *) (* MEMORY_TYPE = "1" *) 
(* MESSAGE_CONTROL = "0" *) (* NUM_CHAR_LOC = "0" *) (* ORIG_REF_NAME = "xpm_memory_base" *) 
(* P_ECC_MODE = "0" *) (* P_ENABLE_BYTE_WRITE_A = "0" *) (* P_ENABLE_BYTE_WRITE_B = "0" *) 
(* P_MAX_DEPTH_DATA = "256" *) (* P_MEMORY_OPT = "yes" *) (* P_MEMORY_PRIMITIVE = "distributed" *) 
(* P_MIN_WIDTH_DATA = "3" *) (* P_MIN_WIDTH_DATA_A = "3" *) (* P_MIN_WIDTH_DATA_B = "3" *) 
(* P_MIN_WIDTH_DATA_ECC = "3" *) (* P_MIN_WIDTH_DATA_LDW = "3" *) (* P_MIN_WIDTH_DATA_SHFT = "5" *) 
(* P_NUM_COLS_WRITE_A = "1" *) (* P_NUM_COLS_WRITE_B = "1" *) (* P_NUM_ROWS_READ_A = "1" *) 
(* P_NUM_ROWS_READ_B = "1" *) (* P_NUM_ROWS_WRITE_A = "1" *) (* P_NUM_ROWS_WRITE_B = "1" *) 
(* P_SDP_WRITE_MODE = "yes" *) (* P_WIDTH_ADDR_LSB_READ_A = "0" *) (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
(* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) (* P_WIDTH_ADDR_READ_A = "8" *) 
(* P_WIDTH_ADDR_READ_B = "8" *) (* P_WIDTH_ADDR_WRITE_A = "8" *) (* P_WIDTH_ADDR_WRITE_B = "8" *) 
(* P_WIDTH_COL_WRITE_A = "3" *) (* P_WIDTH_COL_WRITE_B = "3" *) (* RAM_DECOMP = "auto" *) 
(* READ_DATA_WIDTH_A = "3" *) (* READ_DATA_WIDTH_B = "3" *) (* READ_LATENCY_A = "2" *) 
(* READ_LATENCY_B = "2" *) (* READ_RESET_VALUE_A = "0" *) (* READ_RESET_VALUE_B = "0" *) 
(* RST_MODE_A = "SYNC" *) (* RST_MODE_B = "SYNC" *) (* SIM_ASSERT_CHK = "0" *) 
(* USE_EMBEDDED_CONSTRAINT = "1" *) (* USE_MEM_INIT = "0" *) (* USE_MEM_INIT_MMI = "0" *) 
(* VERSION = "0" *) (* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH_A = "3" *) 
(* WRITE_DATA_WIDTH_B = "3" *) (* WRITE_MODE_A = "2" *) (* WRITE_MODE_B = "1" *) 
(* WRITE_PROTECT = "1" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "soft" *) 
(* rsta_loop_iter = "4" *) (* rstb_loop_iter = "4" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_memory_base__parameterized2
   (sleep,
    clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    injectsbiterra,
    injectdbiterra,
    douta,
    sbiterra,
    dbiterra,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    injectsbiterrb,
    injectdbiterrb,
    doutb,
    sbiterrb,
    dbiterrb);
  input sleep;
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [7:0]addra;
  input [2:0]dina;
  input injectsbiterra;
  input injectdbiterra;
  output [2:0]douta;
  output sbiterra;
  output dbiterra;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [7:0]addrb;
  input [2:0]dinb;
  input injectsbiterrb;
  input injectdbiterrb;
  output [2:0]doutb;
  output sbiterrb;
  output dbiterrb;

  wire \<const0> ;
  wire [7:0]addra;
  wire [7:0]addrb;
  wire clka;
  wire clkb;
  wire [2:0]dina;
  wire [2:0]doutb;
  wire ena;
  wire enb;
  wire [2:0]\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_10_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_11_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_12_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_13_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_14_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_1_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_2_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_3_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_4_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_7_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_8_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_9_reg_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_i_1_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_n_1 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_n_2 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_i_1_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_n_1 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_n_2 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_i_1_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_n_1 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_n_2 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_i_1_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_n_1 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_n_2 ;
  wire regceb;
  wire rstb;
  wire select_piped_1_reg_pipe_5_reg_n_0;
  wire select_piped_3_reg_pipe_6_reg_n_0;
  wire sleep;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_DOD_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_DOD_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_DOD_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_DOD_UNCONNECTED ;

  assign dbiterra = \<const0> ;
  assign dbiterrb = \<const0> ;
  assign douta[2] = \<const0> ;
  assign douta[1] = \<const0> ;
  assign douta[0] = \<const0> ;
  assign sbiterra = \<const0> ;
  assign sbiterrb = \<const0> ;
  GND GND
       (.G(\<const0> ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe[0][0]_i_1 
       (.I0(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_14_reg_n_0 ),
        .I1(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_13_reg_n_0 ),
        .I2(select_piped_3_reg_pipe_6_reg_n_0),
        .I3(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_12_reg_n_0 ),
        .I4(select_piped_1_reg_pipe_5_reg_n_0),
        .I5(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_11_reg_n_0 ),
        .O(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [0]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe[0][1]_i_1 
       (.I0(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_10_reg_n_0 ),
        .I1(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_9_reg_n_0 ),
        .I2(select_piped_3_reg_pipe_6_reg_n_0),
        .I3(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_8_reg_n_0 ),
        .I4(select_piped_1_reg_pipe_5_reg_n_0),
        .I5(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_7_reg_n_0 ),
        .O(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [1]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe[0][2]_i_1 
       (.I0(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_4_reg_n_0 ),
        .I1(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_3_reg_n_0 ),
        .I2(select_piped_3_reg_pipe_6_reg_n_0),
        .I3(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_2_reg_n_0 ),
        .I4(select_piped_1_reg_pipe_5_reg_n_0),
        .I5(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_1_reg_n_0 ),
        .O(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [2]));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][0] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [0]),
        .Q(doutb[0]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][1] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [1]),
        .Q(doutb[1]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][2] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [2]),
        .Q(doutb[2]),
        .R(rstb));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_10_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_n_1 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_10_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_11_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_n_0 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_11_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_12_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_n_0 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_12_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_13_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_n_0 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_13_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_14_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_n_0 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_14_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_1_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_n_2 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_1_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_2_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_n_2 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_2_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_3_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_n_2 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_3_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_4_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_n_2 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_4_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_7_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_n_1 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_7_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_8_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_n_1 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_8_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_9_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_n_1 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_9_reg_n_0 ),
        .R(1'b0));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "768" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "63" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "2" *) 
  RAM64M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2 
       (.ADDRA(addrb[5:0]),
        .ADDRB(addrb[5:0]),
        .ADDRC(addrb[5:0]),
        .ADDRD(addra[5:0]),
        .DIA(dina[0]),
        .DIB(dina[1]),
        .DIC(dina[2]),
        .DID(1'b0),
        .DOA(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_n_0 ),
        .DOB(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_n_1 ),
        .DOC(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_n_2 ),
        .DOD(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_DOD_UNCONNECTED ),
        .WCLK(clka),
        .WE(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h02)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_i_1 
       (.I0(ena),
        .I1(addra[6]),
        .I2(addra[7]),
        .O(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_i_1_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "768" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "128" *) 
  (* ram_addr_end = "191" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "2" *) 
  RAM64M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2 
       (.ADDRA(addrb[5:0]),
        .ADDRB(addrb[5:0]),
        .ADDRC(addrb[5:0]),
        .ADDRD(addra[5:0]),
        .DIA(dina[0]),
        .DIB(dina[1]),
        .DIC(dina[2]),
        .DID(1'b0),
        .DOA(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_n_0 ),
        .DOB(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_n_1 ),
        .DOC(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_n_2 ),
        .DOD(\NLW_gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_DOD_UNCONNECTED ),
        .WCLK(clka),
        .WE(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_i_1 
       (.I0(addra[6]),
        .I1(addra[7]),
        .I2(ena),
        .O(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_i_1_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "768" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "192" *) 
  (* ram_addr_end = "255" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "2" *) 
  RAM64M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2 
       (.ADDRA(addrb[5:0]),
        .ADDRB(addrb[5:0]),
        .ADDRC(addrb[5:0]),
        .ADDRD(addra[5:0]),
        .DIA(dina[0]),
        .DIB(dina[1]),
        .DIC(dina[2]),
        .DID(1'b0),
        .DOA(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_n_0 ),
        .DOB(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_n_1 ),
        .DOC(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_n_2 ),
        .DOD(\NLW_gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_DOD_UNCONNECTED ),
        .WCLK(clka),
        .WE(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h80)) 
    \gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_i_1 
       (.I0(ena),
        .I1(addra[6]),
        .I2(addra[7]),
        .O(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_i_1_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "768" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "64" *) 
  (* ram_addr_end = "127" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "2" *) 
  RAM64M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2 
       (.ADDRA(addrb[5:0]),
        .ADDRB(addrb[5:0]),
        .ADDRC(addrb[5:0]),
        .ADDRD(addra[5:0]),
        .DIA(dina[0]),
        .DIB(dina[1]),
        .DIC(dina[2]),
        .DID(1'b0),
        .DOA(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_n_0 ),
        .DOB(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_n_1 ),
        .DOC(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_n_2 ),
        .DOD(\NLW_gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_DOD_UNCONNECTED ),
        .WCLK(clka),
        .WE(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_i_1 
       (.I0(addra[7]),
        .I1(addra[6]),
        .I2(ena),
        .O(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_i_1_n_0 ));
  FDRE select_piped_1_reg_pipe_5_reg
       (.C(clkb),
        .CE(enb),
        .D(addrb[6]),
        .Q(select_piped_1_reg_pipe_5_reg_n_0),
        .R(1'b0));
  FDRE select_piped_3_reg_pipe_6_reg
       (.C(clkb),
        .CE(enb),
        .D(addrb[7]),
        .Q(select_piped_3_reg_pipe_6_reg_n_0),
        .R(1'b0));
endmodule

(* ADDR_WIDTH_A = "4" *) (* ADDR_WIDTH_B = "4" *) (* AUTO_SLEEP_TIME = "0" *) 
(* BYTE_WRITE_WIDTH_A = "20" *) (* BYTE_WRITE_WIDTH_B = "20" *) (* CASCADE_HEIGHT = "0" *) 
(* CLOCKING_MODE = "1" *) (* ECC_BIT_RANGE = "[7:0]" *) (* ECC_MODE = "0" *) 
(* ECC_TYPE = "NONE" *) (* IGNORE_INIT_SYNTH = "0" *) (* MAX_NUM_CHAR = "0" *) 
(* MEMORY_INIT_FILE = "none" *) (* MEMORY_INIT_PARAM = "" *) (* MEMORY_OPTIMIZATION = "true" *) 
(* MEMORY_PRIMITIVE = "1" *) (* MEMORY_SIZE = "320" *) (* MEMORY_TYPE = "1" *) 
(* MESSAGE_CONTROL = "0" *) (* NUM_CHAR_LOC = "0" *) (* ORIG_REF_NAME = "xpm_memory_base" *) 
(* P_ECC_MODE = "0" *) (* P_ENABLE_BYTE_WRITE_A = "0" *) (* P_ENABLE_BYTE_WRITE_B = "0" *) 
(* P_MAX_DEPTH_DATA = "16" *) (* P_MEMORY_OPT = "yes" *) (* P_MEMORY_PRIMITIVE = "distributed" *) 
(* P_MIN_WIDTH_DATA = "20" *) (* P_MIN_WIDTH_DATA_A = "20" *) (* P_MIN_WIDTH_DATA_B = "20" *) 
(* P_MIN_WIDTH_DATA_ECC = "20" *) (* P_MIN_WIDTH_DATA_LDW = "4" *) (* P_MIN_WIDTH_DATA_SHFT = "20" *) 
(* P_NUM_COLS_WRITE_A = "1" *) (* P_NUM_COLS_WRITE_B = "1" *) (* P_NUM_ROWS_READ_A = "1" *) 
(* P_NUM_ROWS_READ_B = "1" *) (* P_NUM_ROWS_WRITE_A = "1" *) (* P_NUM_ROWS_WRITE_B = "1" *) 
(* P_SDP_WRITE_MODE = "yes" *) (* P_WIDTH_ADDR_LSB_READ_A = "0" *) (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
(* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) (* P_WIDTH_ADDR_READ_A = "4" *) 
(* P_WIDTH_ADDR_READ_B = "4" *) (* P_WIDTH_ADDR_WRITE_A = "4" *) (* P_WIDTH_ADDR_WRITE_B = "4" *) 
(* P_WIDTH_COL_WRITE_A = "20" *) (* P_WIDTH_COL_WRITE_B = "20" *) (* RAM_DECOMP = "auto" *) 
(* READ_DATA_WIDTH_A = "20" *) (* READ_DATA_WIDTH_B = "20" *) (* READ_LATENCY_A = "2" *) 
(* READ_LATENCY_B = "2" *) (* READ_RESET_VALUE_A = "0" *) (* READ_RESET_VALUE_B = "0" *) 
(* RST_MODE_A = "SYNC" *) (* RST_MODE_B = "SYNC" *) (* SIM_ASSERT_CHK = "0" *) 
(* USE_EMBEDDED_CONSTRAINT = "1" *) (* USE_MEM_INIT = "0" *) (* USE_MEM_INIT_MMI = "0" *) 
(* VERSION = "0" *) (* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH_A = "20" *) 
(* WRITE_DATA_WIDTH_B = "20" *) (* WRITE_MODE_A = "2" *) (* WRITE_MODE_B = "1" *) 
(* WRITE_PROTECT = "1" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "soft" *) 
(* rsta_loop_iter = "20" *) (* rstb_loop_iter = "20" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_memory_base__parameterized3
   (sleep,
    clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    injectsbiterra,
    injectdbiterra,
    douta,
    sbiterra,
    dbiterra,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    injectsbiterrb,
    injectdbiterrb,
    doutb,
    sbiterrb,
    dbiterrb);
  input sleep;
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [3:0]addra;
  input [19:0]dina;
  input injectsbiterra;
  input injectdbiterra;
  output [19:0]douta;
  output sbiterra;
  output dbiterra;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [3:0]addrb;
  input [19:0]dinb;
  input injectsbiterrb;
  input injectdbiterrb;
  output [19:0]doutb;
  output sbiterrb;
  output dbiterrb;

  wire \<const0> ;
  wire [3:0]addra;
  wire [3:0]addrb;
  wire clka;
  wire clkb;
  wire [19:0]dina;
  wire [19:0]doutb;
  wire ena;
  wire enb;
  wire [19:0]\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg ;
  wire [19:0]\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 ;
  wire regceb;
  wire rstb;
  wire sleep;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_0_13_DOH_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_14_19_DOD_UNCONNECTED ;

  assign dbiterra = \<const0> ;
  assign dbiterrb = \<const0> ;
  assign douta[19] = \<const0> ;
  assign douta[18] = \<const0> ;
  assign douta[17] = \<const0> ;
  assign douta[16] = \<const0> ;
  assign douta[15] = \<const0> ;
  assign douta[14] = \<const0> ;
  assign douta[13] = \<const0> ;
  assign douta[12] = \<const0> ;
  assign douta[11] = \<const0> ;
  assign douta[10] = \<const0> ;
  assign douta[9] = \<const0> ;
  assign douta[8] = \<const0> ;
  assign douta[7] = \<const0> ;
  assign douta[6] = \<const0> ;
  assign douta[5] = \<const0> ;
  assign douta[4] = \<const0> ;
  assign douta[3] = \<const0> ;
  assign douta[2] = \<const0> ;
  assign douta[1] = \<const0> ;
  assign douta[0] = \<const0> ;
  assign sbiterra = \<const0> ;
  assign sbiterrb = \<const0> ;
  GND GND
       (.G(\<const0> ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][0] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [0]),
        .Q(doutb[0]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][10] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [10]),
        .Q(doutb[10]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][11] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [11]),
        .Q(doutb[11]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][12] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [12]),
        .Q(doutb[12]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][13] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [13]),
        .Q(doutb[13]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][14] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [14]),
        .Q(doutb[14]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][15] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [15]),
        .Q(doutb[15]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][16] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [16]),
        .Q(doutb[16]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][17] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [17]),
        .Q(doutb[17]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][18] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [18]),
        .Q(doutb[18]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][19] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [19]),
        .Q(doutb[19]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][1] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [1]),
        .Q(doutb[1]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][2] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [2]),
        .Q(doutb[2]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][3] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [3]),
        .Q(doutb[3]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][4] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [4]),
        .Q(doutb[4]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][5] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [5]),
        .Q(doutb[5]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][6] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [6]),
        .Q(doutb[6]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][7] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [7]),
        .Q(doutb[7]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][8] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [8]),
        .Q(doutb[8]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][9] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [9]),
        .Q(doutb[9]),
        .R(rstb));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[0] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [0]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [0]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[10] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [10]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [10]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[11] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [11]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [11]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[12] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [12]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [12]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[13] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [13]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [13]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[14] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [14]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [14]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[15] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [15]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [15]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[16] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [16]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [16]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[17] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [17]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [17]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[18] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [18]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [18]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[19] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [19]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [19]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[1] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [1]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [1]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[2] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [2]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [2]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[3] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [3]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [3]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[4] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [4]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [4]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[5] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [5]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [5]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[6] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [6]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [6]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[7] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [7]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [7]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[8] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [8]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [8]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[9] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [9]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [9]),
        .R(1'b0));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "320" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem_reg_0_15_0_13" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "13" *) 
  RAM32M16 #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000),
    .INIT_E(64'h0000000000000000),
    .INIT_F(64'h0000000000000000),
    .INIT_G(64'h0000000000000000),
    .INIT_H(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_15_0_13 
       (.ADDRA({1'b0,addrb}),
        .ADDRB({1'b0,addrb}),
        .ADDRC({1'b0,addrb}),
        .ADDRD({1'b0,addrb}),
        .ADDRE({1'b0,addrb}),
        .ADDRF({1'b0,addrb}),
        .ADDRG({1'b0,addrb}),
        .ADDRH({1'b0,addra}),
        .DIA(dina[1:0]),
        .DIB(dina[3:2]),
        .DIC(dina[5:4]),
        .DID(dina[7:6]),
        .DIE(dina[9:8]),
        .DIF(dina[11:10]),
        .DIG(dina[13:12]),
        .DIH({1'b0,1'b0}),
        .DOA(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [1:0]),
        .DOB(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [3:2]),
        .DOC(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [5:4]),
        .DOD(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [7:6]),
        .DOE(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [9:8]),
        .DOF(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [11:10]),
        .DOG(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [13:12]),
        .DOH(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_0_13_DOH_UNCONNECTED [1:0]),
        .WCLK(clka),
        .WE(ena));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "320" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem_reg_0_15_14_19" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "14" *) 
  (* ram_slice_end = "19" *) 
  RAM32M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_15_14_19 
       (.ADDRA({1'b0,addrb}),
        .ADDRB({1'b0,addrb}),
        .ADDRC({1'b0,addrb}),
        .ADDRD({1'b0,addra}),
        .DIA(dina[15:14]),
        .DIB(dina[17:16]),
        .DIC(dina[19:18]),
        .DID({1'b0,1'b0}),
        .DOA(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [15:14]),
        .DOB(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [17:16]),
        .DOC(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [19:18]),
        .DOD(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_14_19_DOD_UNCONNECTED [1:0]),
        .WCLK(clka),
        .WE(ena));
endmodule

(* ADDR_WIDTH_A = "4" *) (* ADDR_WIDTH_B = "4" *) (* AUTO_SLEEP_TIME = "0" *) 
(* BYTE_WRITE_WIDTH_A = "20" *) (* BYTE_WRITE_WIDTH_B = "20" *) (* CASCADE_HEIGHT = "0" *) 
(* CLOCKING_MODE = "1" *) (* ECC_BIT_RANGE = "[7:0]" *) (* ECC_MODE = "0" *) 
(* ECC_TYPE = "NONE" *) (* IGNORE_INIT_SYNTH = "0" *) (* MAX_NUM_CHAR = "0" *) 
(* MEMORY_INIT_FILE = "none" *) (* MEMORY_INIT_PARAM = "" *) (* MEMORY_OPTIMIZATION = "true" *) 
(* MEMORY_PRIMITIVE = "1" *) (* MEMORY_SIZE = "320" *) (* MEMORY_TYPE = "1" *) 
(* MESSAGE_CONTROL = "0" *) (* NUM_CHAR_LOC = "0" *) (* ORIG_REF_NAME = "xpm_memory_base" *) 
(* P_ECC_MODE = "0" *) (* P_ENABLE_BYTE_WRITE_A = "0" *) (* P_ENABLE_BYTE_WRITE_B = "0" *) 
(* P_MAX_DEPTH_DATA = "16" *) (* P_MEMORY_OPT = "yes" *) (* P_MEMORY_PRIMITIVE = "distributed" *) 
(* P_MIN_WIDTH_DATA = "20" *) (* P_MIN_WIDTH_DATA_A = "20" *) (* P_MIN_WIDTH_DATA_B = "20" *) 
(* P_MIN_WIDTH_DATA_ECC = "20" *) (* P_MIN_WIDTH_DATA_LDW = "4" *) (* P_MIN_WIDTH_DATA_SHFT = "20" *) 
(* P_NUM_COLS_WRITE_A = "1" *) (* P_NUM_COLS_WRITE_B = "1" *) (* P_NUM_ROWS_READ_A = "1" *) 
(* P_NUM_ROWS_READ_B = "1" *) (* P_NUM_ROWS_WRITE_A = "1" *) (* P_NUM_ROWS_WRITE_B = "1" *) 
(* P_SDP_WRITE_MODE = "yes" *) (* P_WIDTH_ADDR_LSB_READ_A = "0" *) (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
(* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) (* P_WIDTH_ADDR_READ_A = "4" *) 
(* P_WIDTH_ADDR_READ_B = "4" *) (* P_WIDTH_ADDR_WRITE_A = "4" *) (* P_WIDTH_ADDR_WRITE_B = "4" *) 
(* P_WIDTH_COL_WRITE_A = "20" *) (* P_WIDTH_COL_WRITE_B = "20" *) (* RAM_DECOMP = "auto" *) 
(* READ_DATA_WIDTH_A = "20" *) (* READ_DATA_WIDTH_B = "20" *) (* READ_LATENCY_A = "2" *) 
(* READ_LATENCY_B = "2" *) (* READ_RESET_VALUE_A = "0" *) (* READ_RESET_VALUE_B = "0" *) 
(* RST_MODE_A = "SYNC" *) (* RST_MODE_B = "SYNC" *) (* SIM_ASSERT_CHK = "0" *) 
(* USE_EMBEDDED_CONSTRAINT = "1" *) (* USE_MEM_INIT = "0" *) (* USE_MEM_INIT_MMI = "0" *) 
(* VERSION = "0" *) (* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH_A = "20" *) 
(* WRITE_DATA_WIDTH_B = "20" *) (* WRITE_MODE_A = "2" *) (* WRITE_MODE_B = "1" *) 
(* WRITE_PROTECT = "1" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "soft" *) 
(* rsta_loop_iter = "20" *) (* rstb_loop_iter = "20" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_memory_base__parameterized3__2
   (sleep,
    clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    injectsbiterra,
    injectdbiterra,
    douta,
    sbiterra,
    dbiterra,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    injectsbiterrb,
    injectdbiterrb,
    doutb,
    sbiterrb,
    dbiterrb);
  input sleep;
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [3:0]addra;
  input [19:0]dina;
  input injectsbiterra;
  input injectdbiterra;
  output [19:0]douta;
  output sbiterra;
  output dbiterra;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [3:0]addrb;
  input [19:0]dinb;
  input injectsbiterrb;
  input injectdbiterrb;
  output [19:0]doutb;
  output sbiterrb;
  output dbiterrb;

  wire \<const0> ;
  wire [3:0]addra;
  wire [3:0]addrb;
  wire clka;
  wire clkb;
  wire [19:0]dina;
  wire [19:0]doutb;
  wire ena;
  wire enb;
  wire [19:0]\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg ;
  wire [19:0]\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 ;
  wire regceb;
  wire rstb;
  wire sleep;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_0_13_DOH_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_14_19_DOD_UNCONNECTED ;

  assign dbiterra = \<const0> ;
  assign dbiterrb = \<const0> ;
  assign douta[19] = \<const0> ;
  assign douta[18] = \<const0> ;
  assign douta[17] = \<const0> ;
  assign douta[16] = \<const0> ;
  assign douta[15] = \<const0> ;
  assign douta[14] = \<const0> ;
  assign douta[13] = \<const0> ;
  assign douta[12] = \<const0> ;
  assign douta[11] = \<const0> ;
  assign douta[10] = \<const0> ;
  assign douta[9] = \<const0> ;
  assign douta[8] = \<const0> ;
  assign douta[7] = \<const0> ;
  assign douta[6] = \<const0> ;
  assign douta[5] = \<const0> ;
  assign douta[4] = \<const0> ;
  assign douta[3] = \<const0> ;
  assign douta[2] = \<const0> ;
  assign douta[1] = \<const0> ;
  assign douta[0] = \<const0> ;
  assign sbiterra = \<const0> ;
  assign sbiterrb = \<const0> ;
  GND GND
       (.G(\<const0> ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][0] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [0]),
        .Q(doutb[0]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][10] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [10]),
        .Q(doutb[10]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][11] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [11]),
        .Q(doutb[11]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][12] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [12]),
        .Q(doutb[12]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][13] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [13]),
        .Q(doutb[13]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][14] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [14]),
        .Q(doutb[14]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][15] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [15]),
        .Q(doutb[15]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][16] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [16]),
        .Q(doutb[16]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][17] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [17]),
        .Q(doutb[17]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][18] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [18]),
        .Q(doutb[18]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][19] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [19]),
        .Q(doutb[19]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][1] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [1]),
        .Q(doutb[1]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][2] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [2]),
        .Q(doutb[2]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][3] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [3]),
        .Q(doutb[3]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][4] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [4]),
        .Q(doutb[4]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][5] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [5]),
        .Q(doutb[5]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][6] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [6]),
        .Q(doutb[6]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][7] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [7]),
        .Q(doutb[7]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][8] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [8]),
        .Q(doutb[8]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][9] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [9]),
        .Q(doutb[9]),
        .R(rstb));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[0] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [0]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [0]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[10] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [10]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [10]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[11] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [11]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [11]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[12] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [12]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [12]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[13] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [13]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [13]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[14] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [14]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [14]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[15] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [15]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [15]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[16] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [16]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [16]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[17] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [17]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [17]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[18] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [18]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [18]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[19] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [19]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [19]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[1] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [1]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [1]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[2] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [2]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [2]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[3] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [3]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [3]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[4] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [4]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [4]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[5] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [5]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [5]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[6] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [6]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [6]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[7] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [7]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [7]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[8] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [8]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [8]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[9] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [9]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [9]),
        .R(1'b0));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "320" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem_reg_0_15_0_13" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "13" *) 
  RAM32M16 #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000),
    .INIT_E(64'h0000000000000000),
    .INIT_F(64'h0000000000000000),
    .INIT_G(64'h0000000000000000),
    .INIT_H(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_15_0_13 
       (.ADDRA({1'b0,addrb}),
        .ADDRB({1'b0,addrb}),
        .ADDRC({1'b0,addrb}),
        .ADDRD({1'b0,addrb}),
        .ADDRE({1'b0,addrb}),
        .ADDRF({1'b0,addrb}),
        .ADDRG({1'b0,addrb}),
        .ADDRH({1'b0,addra}),
        .DIA(dina[1:0]),
        .DIB(dina[3:2]),
        .DIC(dina[5:4]),
        .DID(dina[7:6]),
        .DIE(dina[9:8]),
        .DIF(dina[11:10]),
        .DIG(dina[13:12]),
        .DIH({1'b0,1'b0}),
        .DOA(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [1:0]),
        .DOB(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [3:2]),
        .DOC(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [5:4]),
        .DOD(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [7:6]),
        .DOE(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [9:8]),
        .DOF(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [11:10]),
        .DOG(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [13:12]),
        .DOH(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_0_13_DOH_UNCONNECTED [1:0]),
        .WCLK(clka),
        .WE(ena));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "320" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem_reg_0_15_14_19" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "14" *) 
  (* ram_slice_end = "19" *) 
  RAM32M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_15_14_19 
       (.ADDRA({1'b0,addrb}),
        .ADDRB({1'b0,addrb}),
        .ADDRC({1'b0,addrb}),
        .ADDRD({1'b0,addra}),
        .DIA(dina[15:14]),
        .DIB(dina[17:16]),
        .DIC(dina[19:18]),
        .DID({1'b0,1'b0}),
        .DOA(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [15:14]),
        .DOB(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [17:16]),
        .DOC(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [19:18]),
        .DOD(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_14_19_DOD_UNCONNECTED [1:0]),
        .WCLK(clka),
        .WE(ena));
endmodule

(* CHECK_LICENSE_TYPE = "zynq_bd_C2C1_0,axi_chip2chip_v5_0_20,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "axi_chip2chip_v5_0_20,Vivado 2023.2" *) 
(* NotValidForBitStream *)
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix
   (s_aclk,
    s_aresetn,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bresp,
    s_axi_bvalid,
    s_axi_bready,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_rvalid,
    s_axi_rready,
    axi_c2c_m2s_intr_in,
    axi_c2c_s2m_intr_out,
    axi_c2c_phy_clk,
    axi_c2c_aurora_channel_up,
    axi_c2c_aurora_tx_tready,
    axi_c2c_aurora_tx_tdata,
    axi_c2c_aurora_tx_tvalid,
    axi_c2c_aurora_rx_tdata,
    axi_c2c_aurora_rx_tvalid,
    aurora_do_cc,
    aurora_pma_init_in,
    aurora_init_clk,
    aurora_pma_init_out,
    aurora_mmcm_not_locked,
    aurora_reset_pb,
    axi_c2c_config_error_out,
    axi_c2c_link_status_out,
    axi_c2c_multi_bit_error_out,
    axi_c2c_link_error_out,
    s_axi_lite_aclk,
    s_axi_lite_awaddr,
    s_axi_lite_awprot,
    s_axi_lite_awvalid,
    s_axi_lite_awready,
    s_axi_lite_wdata,
    s_axi_lite_wstrb,
    s_axi_lite_wvalid,
    s_axi_lite_wready,
    s_axi_lite_bresp,
    s_axi_lite_bvalid,
    s_axi_lite_bready,
    s_axi_lite_araddr,
    s_axi_lite_arprot,
    s_axi_lite_arvalid,
    s_axi_lite_arready,
    s_axi_lite_rdata,
    s_axi_lite_rresp,
    s_axi_lite_rvalid,
    s_axi_lite_rready);
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 s_aclk CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME s_aclk, ASSOCIATED_BUSIF s_axi, ASSOCIATED_RESET s_aresetn, FREQ_HZ 49999500, FREQ_TOLERANCE_HZ 0, PHASE 0.0, CLK_DOMAIN zynq_bd_ZynqMPSoC_0_pl_clk1, INSERT_VIP 0" *) input s_aclk;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 s_aresetn RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME s_aresetn, POLARITY ACTIVE_LOW, INSERT_VIP 0" *) input s_aresetn;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi AWADDR" *) input [31:0]s_axi_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi AWLEN" *) input [7:0]s_axi_awlen;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi AWSIZE" *) input [2:0]s_axi_awsize;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi AWBURST" *) input [1:0]s_axi_awburst;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi AWVALID" *) input s_axi_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi AWREADY" *) output s_axi_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi WDATA" *) input [31:0]s_axi_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi WSTRB" *) input [3:0]s_axi_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi WLAST" *) input s_axi_wlast;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi WVALID" *) input s_axi_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi WREADY" *) output s_axi_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi BRESP" *) output [1:0]s_axi_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi BVALID" *) output s_axi_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi BREADY" *) input s_axi_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi ARADDR" *) input [31:0]s_axi_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi ARLEN" *) input [7:0]s_axi_arlen;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi ARSIZE" *) input [2:0]s_axi_arsize;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi ARBURST" *) input [1:0]s_axi_arburst;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi ARVALID" *) input s_axi_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi ARREADY" *) output s_axi_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi RDATA" *) output [31:0]s_axi_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi RRESP" *) output [1:0]s_axi_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi RLAST" *) output s_axi_rlast;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi RVALID" *) output s_axi_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi RREADY" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME s_axi, NUM_READ_OUTSTANDING 16, NUM_WRITE_OUTSTANDING 16, DATA_WIDTH 32, PROTOCOL AXI4, FREQ_HZ 49999500, ID_WIDTH 0, ADDR_WIDTH 32, AWUSER_WIDTH 0, ARUSER_WIDTH 0, WUSER_WIDTH 0, RUSER_WIDTH 0, BUSER_WIDTH 0, READ_WRITE_MODE READ_WRITE, HAS_BURST 1, HAS_LOCK 0, HAS_PROT 0, HAS_CACHE 0, HAS_QOS 0, HAS_REGION 0, HAS_WSTRB 1, HAS_BRESP 1, HAS_RRESP 1, SUPPORTS_NARROW_BURST 1, MAX_BURST_LENGTH 256, PHASE 0.0, CLK_DOMAIN zynq_bd_ZynqMPSoC_0_pl_clk1, NUM_READ_THREADS 1, NUM_WRITE_THREADS 1, RUSER_BITS_PER_BYTE 0, WUSER_BITS_PER_BYTE 0, INSERT_VIP 0" *) input s_axi_rready;
  input [3:0]axi_c2c_m2s_intr_in;
  output [3:0]axi_c2c_s2m_intr_out;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 axi_c2c_phy_clk CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME axi_c2c_phy_clk, ASSOCIATED_BUSIF AXIS_TX:AXIS_RX, ASSOCIATED_RESET aurora_reset_pb, FREQ_HZ 78125000, FREQ_TOLERANCE_HZ 0, PHASE 0, CLK_DOMAIN zynq_bd_C2C1_PHY_0_user_clk_out, INSERT_VIP 0" *) input axi_c2c_phy_clk;
  input axi_c2c_aurora_channel_up;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 AXIS_TX TREADY" *) input axi_c2c_aurora_tx_tready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 AXIS_TX TDATA" *) output [63:0]axi_c2c_aurora_tx_tdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 AXIS_TX TVALID" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME AXIS_TX, TDATA_NUM_BYTES 8, TDEST_WIDTH 0, TID_WIDTH 0, TUSER_WIDTH 0, HAS_TREADY 1, HAS_TSTRB 0, HAS_TKEEP 0, HAS_TLAST 0, FREQ_HZ 78125000, PHASE 0, CLK_DOMAIN zynq_bd_C2C1_PHY_0_user_clk_out, LAYERED_METADATA undef, INSERT_VIP 0" *) output axi_c2c_aurora_tx_tvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 AXIS_RX TDATA" *) input [63:0]axi_c2c_aurora_rx_tdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 AXIS_RX TVALID" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME AXIS_RX, TDATA_NUM_BYTES 8, TDEST_WIDTH 0, TID_WIDTH 0, TUSER_WIDTH 0, HAS_TREADY 0, HAS_TSTRB 0, HAS_TKEEP 0, HAS_TLAST 0, FREQ_HZ 78125000, PHASE 0, CLK_DOMAIN zynq_bd_C2C1_PHY_0_user_clk_out, LAYERED_METADATA undef, INSERT_VIP 0" *) input axi_c2c_aurora_rx_tvalid;
  output aurora_do_cc;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 AURORA_PMA_INIT_IN RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME AURORA_PMA_INIT_IN, POLARITY ACTIVE_HIGH, INSERT_VIP 0" *) input aurora_pma_init_in;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 INIT_CLK CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME INIT_CLK, ASSOCIATED_RESET aurora_pma_init_out, FREQ_HZ 50000000, FREQ_TOLERANCE_HZ 0, PHASE 0.0, CLK_DOMAIN zynq_bd_INIT_CLK, INSERT_VIP 0" *) input aurora_init_clk;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 AURORA_PMA_INIT_OUT RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME AURORA_PMA_INIT_OUT, POLARITY ACTIVE_HIGH, INSERT_VIP 0" *) output aurora_pma_init_out;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 AURORA_MMCM_NOT_LOCKED RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME AURORA_MMCM_NOT_LOCKED, POLARITY ACTIVE_HIGH, INSERT_VIP 0" *) input aurora_mmcm_not_locked;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 AURORA_RST_OUT RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME AURORA_RST_OUT, POLARITY ACTIVE_HIGH, INSERT_VIP 0" *) output aurora_reset_pb;
  output axi_c2c_config_error_out;
  output axi_c2c_link_status_out;
  output axi_c2c_multi_bit_error_out;
  output axi_c2c_link_error_out;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 s_axi_lite_aclk CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME s_axi_lite_aclk, ASSOCIATED_BUSIF s_axi_lite, FREQ_HZ 49999500, FREQ_TOLERANCE_HZ 0, PHASE 0.0, CLK_DOMAIN zynq_bd_ZynqMPSoC_0_pl_clk1, INSERT_VIP 0" *) input s_axi_lite_aclk;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite AWADDR" *) input [31:0]s_axi_lite_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite AWPROT" *) input [1:0]s_axi_lite_awprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite AWVALID" *) input s_axi_lite_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite AWREADY" *) output s_axi_lite_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite WDATA" *) input [31:0]s_axi_lite_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite WSTRB" *) input [3:0]s_axi_lite_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite WVALID" *) input s_axi_lite_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite WREADY" *) output s_axi_lite_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite BRESP" *) output [1:0]s_axi_lite_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite BVALID" *) output s_axi_lite_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite BREADY" *) input s_axi_lite_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite ARADDR" *) input [31:0]s_axi_lite_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite ARPROT" *) input [1:0]s_axi_lite_arprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite ARVALID" *) input s_axi_lite_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite ARREADY" *) output s_axi_lite_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite RDATA" *) output [31:0]s_axi_lite_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite RRESP" *) output [1:0]s_axi_lite_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite RVALID" *) output s_axi_lite_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite RREADY" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME s_axi_lite, DATA_WIDTH 32, PROTOCOL AXI4LITE, FREQ_HZ 49999500, ID_WIDTH 0, ADDR_WIDTH 32, AWUSER_WIDTH 0, ARUSER_WIDTH 0, WUSER_WIDTH 0, RUSER_WIDTH 0, BUSER_WIDTH 0, READ_WRITE_MODE READ_WRITE, HAS_BURST 0, HAS_LOCK 0, HAS_PROT 1, HAS_CACHE 0, HAS_QOS 0, HAS_REGION 0, HAS_WSTRB 1, HAS_BRESP 1, HAS_RRESP 1, SUPPORTS_NARROW_BURST 0, NUM_READ_OUTSTANDING 1, NUM_WRITE_OUTSTANDING 1, MAX_BURST_LENGTH 1, PHASE 0.0, CLK_DOMAIN zynq_bd_ZynqMPSoC_0_pl_clk1, NUM_READ_THREADS 1, NUM_WRITE_THREADS 1, RUSER_BITS_PER_BYTE 0, WUSER_BITS_PER_BYTE 0, INSERT_VIP 0" *) input s_axi_lite_rready;

  wire \<const0> ;
  wire aurora_do_cc;
  wire aurora_init_clk;
  wire aurora_mmcm_not_locked;
  wire aurora_pma_init_in;
  wire aurora_pma_init_out;
  wire aurora_reset_pb;
  wire axi_c2c_aurora_channel_up;
  wire [63:0]axi_c2c_aurora_rx_tdata;
  wire axi_c2c_aurora_rx_tvalid;
  wire [63:0]\^axi_c2c_aurora_tx_tdata ;
  wire axi_c2c_aurora_tx_tready;
  wire axi_c2c_aurora_tx_tvalid;
  wire axi_c2c_config_error_out;
  wire axi_c2c_link_error_out;
  wire axi_c2c_link_status_out;
  wire [3:0]axi_c2c_m2s_intr_in;
  wire axi_c2c_multi_bit_error_out;
  wire axi_c2c_phy_clk;
  wire [3:0]axi_c2c_s2m_intr_out;
  wire s_aclk;
  wire s_aresetn;
  wire [31:0]s_axi_araddr;
  wire [1:0]s_axi_arburst;
  wire [7:0]s_axi_arlen;
  wire s_axi_arready;
  wire [2:0]s_axi_arsize;
  wire s_axi_arvalid;
  wire [31:0]s_axi_awaddr;
  wire [1:0]s_axi_awburst;
  wire [7:0]s_axi_awlen;
  wire s_axi_awready;
  wire [2:0]s_axi_awsize;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire [1:0]s_axi_bresp;
  wire s_axi_bvalid;
  wire s_axi_lite_aclk;
  wire [31:0]s_axi_lite_araddr;
  wire [1:0]s_axi_lite_arprot;
  wire s_axi_lite_arready;
  wire s_axi_lite_arvalid;
  wire [31:0]s_axi_lite_awaddr;
  wire [1:0]s_axi_lite_awprot;
  wire s_axi_lite_awready;
  wire s_axi_lite_awvalid;
  wire s_axi_lite_bready;
  wire [1:0]s_axi_lite_bresp;
  wire s_axi_lite_bvalid;
  wire [31:0]s_axi_lite_rdata;
  wire s_axi_lite_rready;
  wire [1:0]s_axi_lite_rresp;
  wire s_axi_lite_rvalid;
  wire [31:0]s_axi_lite_wdata;
  wire s_axi_lite_wready;
  wire [3:0]s_axi_lite_wstrb;
  wire s_axi_lite_wvalid;
  wire [31:0]s_axi_rdata;
  wire s_axi_rlast;
  wire s_axi_rready;
  wire [1:0]s_axi_rresp;
  wire s_axi_rvalid;
  wire [31:0]s_axi_wdata;
  wire s_axi_wlast;
  wire s_axi_wready;
  wire [3:0]s_axi_wstrb;
  wire s_axi_wvalid;
  wire NLW_inst_axi_c2c_lnk_hndlr_in_progress_UNCONNECTED;
  wire NLW_inst_axi_c2c_selio_tx_clk_out_UNCONNECTED;
  wire NLW_inst_axi_c2c_selio_tx_diff_clk_out_n_UNCONNECTED;
  wire NLW_inst_axi_c2c_selio_tx_diff_clk_out_p_UNCONNECTED;
  wire NLW_inst_m_aclk_out_UNCONNECTED;
  wire NLW_inst_m_axi_arvalid_UNCONNECTED;
  wire NLW_inst_m_axi_awvalid_UNCONNECTED;
  wire NLW_inst_m_axi_bready_UNCONNECTED;
  wire NLW_inst_m_axi_lite_arvalid_UNCONNECTED;
  wire NLW_inst_m_axi_lite_awvalid_UNCONNECTED;
  wire NLW_inst_m_axi_lite_bready_UNCONNECTED;
  wire NLW_inst_m_axi_lite_rready_UNCONNECTED;
  wire NLW_inst_m_axi_lite_wvalid_UNCONNECTED;
  wire NLW_inst_m_axi_rready_UNCONNECTED;
  wire NLW_inst_m_axi_wlast_UNCONNECTED;
  wire NLW_inst_m_axi_wvalid_UNCONNECTED;
  wire [62:62]NLW_inst_axi_c2c_aurora_tx_tdata_UNCONNECTED;
  wire [3:0]NLW_inst_axi_c2c_m2s_intr_out_UNCONNECTED;
  wire [27:0]NLW_inst_axi_c2c_selio_tx_data_out_UNCONNECTED;
  wire [27:0]NLW_inst_axi_c2c_selio_tx_diff_data_out_n_UNCONNECTED;
  wire [27:0]NLW_inst_axi_c2c_selio_tx_diff_data_out_p_UNCONNECTED;
  wire [31:0]NLW_inst_m_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_inst_m_axi_arburst_UNCONNECTED;
  wire [0:0]NLW_inst_m_axi_arid_UNCONNECTED;
  wire [7:0]NLW_inst_m_axi_arlen_UNCONNECTED;
  wire [2:0]NLW_inst_m_axi_arsize_UNCONNECTED;
  wire [31:0]NLW_inst_m_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_inst_m_axi_awburst_UNCONNECTED;
  wire [0:0]NLW_inst_m_axi_awid_UNCONNECTED;
  wire [7:0]NLW_inst_m_axi_awlen_UNCONNECTED;
  wire [2:0]NLW_inst_m_axi_awsize_UNCONNECTED;
  wire [31:0]NLW_inst_m_axi_lite_araddr_UNCONNECTED;
  wire [1:0]NLW_inst_m_axi_lite_arprot_UNCONNECTED;
  wire [31:0]NLW_inst_m_axi_lite_awaddr_UNCONNECTED;
  wire [1:0]NLW_inst_m_axi_lite_awprot_UNCONNECTED;
  wire [31:0]NLW_inst_m_axi_lite_wdata_UNCONNECTED;
  wire [3:0]NLW_inst_m_axi_lite_wstrb_UNCONNECTED;
  wire [31:0]NLW_inst_m_axi_wdata_UNCONNECTED;
  wire [3:0]NLW_inst_m_axi_wstrb_UNCONNECTED;
  wire [0:0]NLW_inst_m_axi_wuser_UNCONNECTED;
  wire [0:0]NLW_inst_s_axi_bid_UNCONNECTED;
  wire [0:0]NLW_inst_s_axi_rid_UNCONNECTED;

  assign axi_c2c_aurora_tx_tdata[63] = \^axi_c2c_aurora_tx_tdata [63];
  assign axi_c2c_aurora_tx_tdata[62] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[61:0] = \^axi_c2c_aurora_tx_tdata [61:0];
  GND GND
       (.G(\<const0> ));
  (* ADDR_MUX_RATIO = "1" *) 
  (* ADDR_MUX_RATIO_ID_WID_0_TO_12 = "1" *) 
  (* AFIFO_DATA_SIZE = "45" *) 
  (* AFIFO_DATA_SIZE_M2 = "1" *) 
  (* AFIFO_DATA_SIZE_M3 = "0" *) 
  (* AFIFO_DATA_SIZE_M4 = "1" *) 
  (* AFIFO_TIE_WIDTH = "1" *) 
  (* AFIFO_WIDTH = "45" *) 
  (* AR_CH_FC = "128" *) 
  (* AR_CH_FIFO_DEPTH = "256" *) 
  (* AR_CH_PTR_WIDTH = "8" *) 
  (* AWB_FC_WIDTH = "2" *) 
  (* AW_CH_FC = "128" *) 
  (* AW_CH_FIFO_DEPTH = "256" *) 
  (* AW_CH_PTR_WIDTH = "8" *) 
  (* AXILITE_WIDTH = "20" *) 
  (* BFIFO_DATA_SIZE = "3" *) 
  (* BFIFO_WIDTH = "3" *) 
  (* BR_CH_FC = "128" *) 
  (* BR_CH_FIFO_DEPTH = "256" *) 
  (* BR_CH_PTR_WIDTH = "8" *) 
  (* C_AURORA_WIDTH = "64" *) 
  (* C_AXI_ADDR_WIDTH = "32" *) 
  (* C_AXI_BRST_WIDTH = "2" *) 
  (* C_AXI_BUS_TYPE = "0" *) 
  (* C_AXI_DATA_WIDTH = "32" *) 
  (* C_AXI_ID_WIDTH = "1" *) 
  (* C_AXI_LEN_WIDTH = "8" *) 
  (* C_AXI_LITE_ADDR_WIDTH = "32" *) 
  (* C_AXI_LITE_DATA_WIDTH = "32" *) 
  (* C_AXI_LITE_PROT_WIDTH = "2" *) 
  (* C_AXI_LITE_RESP_WIDTH = "2" *) 
  (* C_AXI_LITE_STB_WIDTH = "4" *) 
  (* C_AXI_RESP_WIDTH = "2" *) 
  (* C_AXI_SIZE_WIDTH = "3" *) 
  (* C_AXI_SIZE_WIDTH_INTERNAL = "2" *) 
  (* C_AXI_STB_WIDTH = "4" *) 
  (* C_AXI_WUSER_WIDTH = "1" *) 
  (* C_COMMON_CLK = "0" *) 
  (* C_DISABLE_CLK_SHIFT = "0" *) 
  (* C_DISABLE_DESKEW = "0" *) 
  (* C_ECC_ENABLE = "1" *) 
  (* C_EN_AXI_LINK_HNDLR = "0" *) 
  (* C_EN_LEGACY_MODE = "0" *) 
  (* C_FAMILY = "zynquplus" *) 
  (* C_FIFO_DEPTH_LH = "256" *) 
  (* C_INCLUDE_AXILITE = "1" *) 
  (* C_INSTANCE = "axi_c2c" *) 
  (* C_INTERFACE_MODE = "0" *) 
  (* C_INTERFACE_TYPE = "2" *) 
  (* C_INTERRUPT_WIDTH = "4" *) 
  (* C_MASTER_FPGA = "1" *) 
  (* C_NUM_OF_IO = "58" *) 
  (* C_PHY_SELECT = "1" *) 
  (* C_RD_CNTR_WIDTH = "8" *) 
  (* C_SELECTIO_DDR = "0" *) 
  (* C_SELECTIO_PHY_CLK = "100" *) 
  (* C_SELECTIO_WIDTH = "28" *) 
  (* C_SIMULATION = "0" *) 
  (* C_SYNC_STAGE = "3" *) 
  (* C_USE_DIFF_CLK = "0" *) 
  (* C_USE_DIFF_IO = "0" *) 
  (* C_WIDTH_CONVERSION = "1" *) 
  (* C_WR_CNTR_WIDTH = "8" *) 
  (* DATA_MUX_RATIO = "1" *) 
  (* DATA_MUX_RATIO_ID_WID_0_TO_12 = "1" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* EN_ECC = "1" *) 
  (* PHY_CTRL_WIDTH = "3" *) 
  (* PHY_DATA_WIDTH = "64" *) 
  (* RB_FC_WIDTH = "3" *) 
  (* RFIFO_DATA_SIZE = "36" *) 
  (* RFIFO_DATA_SIZE_M2 = "0" *) 
  (* RFIFO_DATA_SIZE_M3 = "0" *) 
  (* RFIFO_DATA_SIZE_M4 = "0" *) 
  (* RFIFO_TIE_WIDTH = "1" *) 
  (* RFIFO_WIDTH = "36" *) 
  (* TDM_ID_WIDTH = "2" *) 
  (* TDM_VAL_BITS = "1" *) 
  (* WFIFO_DATA_SIZE = "38" *) 
  (* WFIFO_DATA_SIZE_M2 = "0" *) 
  (* WFIFO_DATA_SIZE_M3 = "2" *) 
  (* WFIFO_DATA_SIZE_M4 = "2" *) 
  (* WFIFO_TIE_WIDTH = "1" *) 
  (* WFIFO_WIDTH = "38" *) 
  (* is_du_within_envelope = "true" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_20 inst
       (.aurora_do_cc(aurora_do_cc),
        .aurora_init_clk(aurora_init_clk),
        .aurora_mmcm_not_locked(aurora_mmcm_not_locked),
        .aurora_pma_init_in(aurora_pma_init_in),
        .aurora_pma_init_out(aurora_pma_init_out),
        .aurora_reset_pb(aurora_reset_pb),
        .axi_c2c_aurora_channel_up(axi_c2c_aurora_channel_up),
        .axi_c2c_aurora_rx_tdata(axi_c2c_aurora_rx_tdata),
        .axi_c2c_aurora_rx_tvalid(axi_c2c_aurora_rx_tvalid),
        .axi_c2c_aurora_tx_tdata(\^axi_c2c_aurora_tx_tdata ),
        .axi_c2c_aurora_tx_tready(axi_c2c_aurora_tx_tready),
        .axi_c2c_aurora_tx_tvalid(axi_c2c_aurora_tx_tvalid),
        .axi_c2c_config_error_out(axi_c2c_config_error_out),
        .axi_c2c_link_error_out(axi_c2c_link_error_out),
        .axi_c2c_link_status_out(axi_c2c_link_status_out),
        .axi_c2c_lnk_hndlr_in_progress(NLW_inst_axi_c2c_lnk_hndlr_in_progress_UNCONNECTED),
        .axi_c2c_m2s_intr_in(axi_c2c_m2s_intr_in),
        .axi_c2c_m2s_intr_out(NLW_inst_axi_c2c_m2s_intr_out_UNCONNECTED[3:0]),
        .axi_c2c_multi_bit_error_out(axi_c2c_multi_bit_error_out),
        .axi_c2c_phy_clk(axi_c2c_phy_clk),
        .axi_c2c_s2m_intr_in({1'b0,1'b0,1'b0,1'b0}),
        .axi_c2c_s2m_intr_out(axi_c2c_s2m_intr_out),
        .axi_c2c_selio_rx_clk_in(1'b0),
        .axi_c2c_selio_rx_data_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_c2c_selio_rx_diff_clk_in_n(1'b0),
        .axi_c2c_selio_rx_diff_clk_in_p(1'b0),
        .axi_c2c_selio_rx_diff_data_in_n({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_c2c_selio_rx_diff_data_in_p({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_c2c_selio_tx_clk_out(NLW_inst_axi_c2c_selio_tx_clk_out_UNCONNECTED),
        .axi_c2c_selio_tx_data_out(NLW_inst_axi_c2c_selio_tx_data_out_UNCONNECTED[27:0]),
        .axi_c2c_selio_tx_diff_clk_out_n(NLW_inst_axi_c2c_selio_tx_diff_clk_out_n_UNCONNECTED),
        .axi_c2c_selio_tx_diff_clk_out_p(NLW_inst_axi_c2c_selio_tx_diff_clk_out_p_UNCONNECTED),
        .axi_c2c_selio_tx_diff_data_out_n(NLW_inst_axi_c2c_selio_tx_diff_data_out_n_UNCONNECTED[27:0]),
        .axi_c2c_selio_tx_diff_data_out_p(NLW_inst_axi_c2c_selio_tx_diff_data_out_p_UNCONNECTED[27:0]),
        .idelay_ref_clk(1'b0),
        .m_aclk(1'b0),
        .m_aclk_out(NLW_inst_m_aclk_out_UNCONNECTED),
        .m_aresetn(1'b1),
        .m_axi_araddr(NLW_inst_m_axi_araddr_UNCONNECTED[31:0]),
        .m_axi_arburst(NLW_inst_m_axi_arburst_UNCONNECTED[1:0]),
        .m_axi_arid(NLW_inst_m_axi_arid_UNCONNECTED[0]),
        .m_axi_arlen(NLW_inst_m_axi_arlen_UNCONNECTED[7:0]),
        .m_axi_arready(1'b0),
        .m_axi_arsize(NLW_inst_m_axi_arsize_UNCONNECTED[2:0]),
        .m_axi_arvalid(NLW_inst_m_axi_arvalid_UNCONNECTED),
        .m_axi_awaddr(NLW_inst_m_axi_awaddr_UNCONNECTED[31:0]),
        .m_axi_awburst(NLW_inst_m_axi_awburst_UNCONNECTED[1:0]),
        .m_axi_awid(NLW_inst_m_axi_awid_UNCONNECTED[0]),
        .m_axi_awlen(NLW_inst_m_axi_awlen_UNCONNECTED[7:0]),
        .m_axi_awready(1'b0),
        .m_axi_awsize(NLW_inst_m_axi_awsize_UNCONNECTED[2:0]),
        .m_axi_awvalid(NLW_inst_m_axi_awvalid_UNCONNECTED),
        .m_axi_bid(1'b0),
        .m_axi_bready(NLW_inst_m_axi_bready_UNCONNECTED),
        .m_axi_bresp({1'b0,1'b0}),
        .m_axi_bvalid(1'b0),
        .m_axi_lite_aclk(1'b0),
        .m_axi_lite_araddr(NLW_inst_m_axi_lite_araddr_UNCONNECTED[31:0]),
        .m_axi_lite_arprot(NLW_inst_m_axi_lite_arprot_UNCONNECTED[1:0]),
        .m_axi_lite_arready(1'b0),
        .m_axi_lite_arvalid(NLW_inst_m_axi_lite_arvalid_UNCONNECTED),
        .m_axi_lite_awaddr(NLW_inst_m_axi_lite_awaddr_UNCONNECTED[31:0]),
        .m_axi_lite_awprot(NLW_inst_m_axi_lite_awprot_UNCONNECTED[1:0]),
        .m_axi_lite_awready(1'b0),
        .m_axi_lite_awvalid(NLW_inst_m_axi_lite_awvalid_UNCONNECTED),
        .m_axi_lite_bready(NLW_inst_m_axi_lite_bready_UNCONNECTED),
        .m_axi_lite_bresp({1'b0,1'b0}),
        .m_axi_lite_bvalid(1'b0),
        .m_axi_lite_rdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .m_axi_lite_rready(NLW_inst_m_axi_lite_rready_UNCONNECTED),
        .m_axi_lite_rresp({1'b0,1'b0}),
        .m_axi_lite_rvalid(1'b0),
        .m_axi_lite_wdata(NLW_inst_m_axi_lite_wdata_UNCONNECTED[31:0]),
        .m_axi_lite_wready(1'b0),
        .m_axi_lite_wstrb(NLW_inst_m_axi_lite_wstrb_UNCONNECTED[3:0]),
        .m_axi_lite_wvalid(NLW_inst_m_axi_lite_wvalid_UNCONNECTED),
        .m_axi_rdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .m_axi_rid(1'b0),
        .m_axi_rlast(1'b0),
        .m_axi_rready(NLW_inst_m_axi_rready_UNCONNECTED),
        .m_axi_rresp({1'b0,1'b0}),
        .m_axi_rvalid(1'b0),
        .m_axi_wdata(NLW_inst_m_axi_wdata_UNCONNECTED[31:0]),
        .m_axi_wlast(NLW_inst_m_axi_wlast_UNCONNECTED),
        .m_axi_wready(1'b0),
        .m_axi_wstrb(NLW_inst_m_axi_wstrb_UNCONNECTED[3:0]),
        .m_axi_wuser(NLW_inst_m_axi_wuser_UNCONNECTED[0]),
        .m_axi_wvalid(NLW_inst_m_axi_wvalid_UNCONNECTED),
        .s_aclk(s_aclk),
        .s_aresetn(s_aresetn),
        .s_axi_araddr(s_axi_araddr),
        .s_axi_arburst(s_axi_arburst),
        .s_axi_arid(1'b0),
        .s_axi_arlen(s_axi_arlen),
        .s_axi_arready(s_axi_arready),
        .s_axi_arsize({1'b0,s_axi_arsize[1:0]}),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awaddr(s_axi_awaddr),
        .s_axi_awburst(s_axi_awburst),
        .s_axi_awid(1'b0),
        .s_axi_awlen(s_axi_awlen),
        .s_axi_awready(s_axi_awready),
        .s_axi_awsize({1'b0,s_axi_awsize[1:0]}),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bid(NLW_inst_s_axi_bid_UNCONNECTED[0]),
        .s_axi_bready(s_axi_bready),
        .s_axi_bresp(s_axi_bresp),
        .s_axi_bvalid(s_axi_bvalid),
        .s_axi_lite_aclk(s_axi_lite_aclk),
        .s_axi_lite_araddr(s_axi_lite_araddr),
        .s_axi_lite_arprot(s_axi_lite_arprot),
        .s_axi_lite_arready(s_axi_lite_arready),
        .s_axi_lite_arvalid(s_axi_lite_arvalid),
        .s_axi_lite_awaddr(s_axi_lite_awaddr),
        .s_axi_lite_awprot(s_axi_lite_awprot),
        .s_axi_lite_awready(s_axi_lite_awready),
        .s_axi_lite_awvalid(s_axi_lite_awvalid),
        .s_axi_lite_bready(s_axi_lite_bready),
        .s_axi_lite_bresp(s_axi_lite_bresp),
        .s_axi_lite_bvalid(s_axi_lite_bvalid),
        .s_axi_lite_rdata(s_axi_lite_rdata),
        .s_axi_lite_rready(s_axi_lite_rready),
        .s_axi_lite_rresp(s_axi_lite_rresp),
        .s_axi_lite_rvalid(s_axi_lite_rvalid),
        .s_axi_lite_wdata(s_axi_lite_wdata),
        .s_axi_lite_wready(s_axi_lite_wready),
        .s_axi_lite_wstrb(s_axi_lite_wstrb),
        .s_axi_lite_wvalid(s_axi_lite_wvalid),
        .s_axi_rdata(s_axi_rdata),
        .s_axi_rid(NLW_inst_s_axi_rid_UNCONNECTED[0]),
        .s_axi_rlast(s_axi_rlast),
        .s_axi_rready(s_axi_rready),
        .s_axi_rresp(s_axi_rresp),
        .s_axi_rvalid(s_axi_rvalid),
        .s_axi_wdata(s_axi_wdata),
        .s_axi_wlast(s_axi_wlast),
        .s_axi_wready(s_axi_wready),
        .s_axi_wstrb(s_axi_wstrb),
        .s_axi_wuser(1'b0),
        .s_axi_wvalid(s_axi_wvalid));
endmodule
`pragma protect begin_protected
`pragma protect version = 1
`pragma protect encrypt_agent = "XILINX"
`pragma protect encrypt_agent_info = "Xilinx Encryption Tool 2023.2"
`pragma protect key_keyowner="Synopsys", key_keyname="SNPS-VCS-RSA-2", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=128)
`pragma protect key_block
dheoa7qy6GoRk6iGRBTcCyKnJw4WEJjXQUofGqUCrTBz9TXbAVyuWPyJ2ZLFLnPZAmbZZC1Jttgt
3sdvH+vCSqcQNzzuIgzkA1hvpVV9ZOAXL5oM3VuRUrz7hnAt3lSLNEpBE6p/6gtJ+w+92f2WwwUC
21rbkp5TyIfkzW065sE=

`pragma protect key_keyowner="Aldec", key_keyname="ALDEC15_001", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
KFbn7tTAdJt5tIuHXM4J1CV/u5oPGCBiZ99rYke40eWUgexxUrV+t0ZAJs8vm2t/6KyPrJ6RzNhd
85vFYVJRpJtzZLGB+iYTXXU42O2ooQreJllQFZGb/aUh+DngKaiR53d7RC3eR62md7GC7YA7Kg2/
koMLbR7YrRJko0/wcNvftUR+doOj512xDuEaJrIAWsviMj/F2TO9fxXGe0HanjHaC/Eij3g5E3d8
q2lVpHFwah8hb0TD12rpE7vS6ZPp/W2GX2uhCE4AHfzii4uEkYoDCmSRTxo27ruqoJLDBK0u997A
Y7PEwQUPVSHwpqHqjexjrUauUjh6XI5w9/nkCg==

`pragma protect key_keyowner="Mentor Graphics Corporation", key_keyname="MGC-VELOCE-RSA", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=128)
`pragma protect key_block
ENaxhv/CPhmdw9dS/ZCpvmkAQ75sW2WjIDmxy3qcEQq9fZ+/Pqca+zGebtobkKK0blL2RH7StPik
kJrfpJ2fwBCZMHHvziLC7t8YGcyF+wXLzOHrc0PGSnvzCEnebbJ9d9qiIr8/QmIa+RNYtdWNne9X
ND0P3GzcTYgNiYsQG/w=

`pragma protect key_keyowner="Mentor Graphics Corporation", key_keyname="MGC-VERIF-SIM-RSA-2", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
syfsvQAbWS4UqtSx023kV/BtyZAf0ag5qNRKpm858vck3W+vsN2lhK0cxVuyDeNlmMl7oy0/W3Af
jU/lbPHSWbIr2sAhtmIPobNuMnEc89wXsVmtKIahmtBvE/q4buiuN/U1miRDpjCYM69XJDFHTjnu
9l9PNIo8Y9f0j+LzFrnJilWXBEnhNNw/EdjUE7WtVrQ5NDnPMveWrbWZYVQb9xPX+kw/RARam6Ar
rWYa1Wk6ZpFazf9y4jKW6Nx5LzWpKhtc0PR5EEiyDOcxSSQz7BjQGBeWjhp9ewNVJRZFg0Ih9/2L
64RbYKHxA86Qe/ffHFYW40e5BCR6+Zy4Oc073A==

`pragma protect key_keyowner="Real Intent", key_keyname="RI-RSA-KEY-1", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
AmVDziCOCiswI//oMKbTwV9Y4cyhGqEhT1JnUisd+4dqLyq1TUFpOLn9mF7li+RfW9W1m4jKYulD
kJA5b4eFJOO/cpHbqrV6KfIF/IkppLiGJ7oNvZ29e8H8LVUigdaawOL7IrW8uXFDn3td4VZ7l/0J
enSZ1q0r/gNcCRQRz80QSsxyjtFvgfK20VeSyoWLHSexf7L+rfes9Phl0ijrOnYt543aCo0gu3AM
GLApxcdXgU4TCuDhraNXQM3zRgNiv4ixC/332IXO05SOkgJve1s0vrAcM5sr63Z04a5ISE0KH8Vk
0UDsukCNzKhC45Qcts/BGTHwSugPzGqfdpfUWQ==

`pragma protect key_keyowner="Metrics Technologies Inc.", key_keyname="DSim", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
iF1nQIMjUmtQOIrD8A87pTN+7ZsiWnz9Xj+r6hwpM6UwgAecu2jUCfftCYO/LLpDtsnrmiy1lg+W
PUXfnW1liM3UzmeeeTZ787pEdodOHGHIFjqahII6nAliVZteg4pXjco+ZZ/Yua0D+E/qX7hXtZ+X
wsXt38YVsjpzpcy+apfzIOfut7McxcGx3nreYhFCJK8isYHJfWlB1OqOYLLcH/pGb4s1f440XSZR
8PsGKoUQWWoucw1zcGD3Ye9Lg1a/Hblay/0LKoYXgoBmBXdjuRUZKj2yB/c1q8uQ2uatHOy03kKp
4LYjRJWz54HZYCv7uv4xitpIi5vgN/YiPqKB5Q==

`pragma protect key_keyowner="Xilinx", key_keyname="xilinxt_2022_10", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
XGpd/hDywwUv3qEUIpSpFU/aGAqGAolbfoqID7yTM63Aw0gYlvUK/0UJU5x/lboCkdq6HcDUvSfM
EtLfDZ8/XxBxevgokJwml+QniFy7PDMvjE0eJeqcG70FZeirS40Zl2KrUA3CjGMj9N34nXLFVVZI
67050hdyYTwKO8KpfxKOF2yDpNYzUZs5HA0dpSkO6mSufNtthQLI1JOXRRvEIuEs0yjOUHxI+Mg0
s2QNxvyBgOqrtiEUWSW2P6GyBgb2KS6CimKcv3HQqmHmD+LSYXyHjnRdZj1nsfvdeuZTprGw8cQA
3eNDO2XG76mTmc1pvu4zd2SKBW8reuxARL7DOQ==

`pragma protect key_keyowner="Atrenta", key_keyname="ATR-SG-RSA-1", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=384)
`pragma protect key_block
txIYBGYclM3WJyFO/GAY6iTCGrnUvaBWMRrewSXZS2VCcKdaSGkooZc1KcOMcdAxduXl2PR88DEi
oA4lOnikzd6dZKQunJbA7p+ze4GUE7VLY2+Ol5+Ts1AmgGAGn8XYwaw+trP4hoeD+VdKRRZCenNU
4/7UnBms41jy1M0TkThv1lqzFnPu4tOX1sUOKas07WQ/6k3CLqv6TQma+HQo1mG/OA1SpsiOQxms
vKoPd7g2sBzHbXc8w2xrvNgMvt97kNSOxS6fWeod/8O+5UYSlU7OCt6ponbgPXJa365II61l3/4a
3sqnka/RMhjkinMs0HpR48Wh1uDgPFzwmI9aHUsvKtP14DDdz+TPqojEgT8pdTCOdoc9H0DnAQN6
9ft2KqjfUJ5YZACEDZ+izfLWob3iuuBJ8YmOjGV/ZMulzINgefeD5awRSjwzx0z4Iy4lLxoC5t65
bnWFxnX10h4H0isknHNdxJ1RPesYSLpI360LHACanMI59GUZ2vApLAtQ

`pragma protect key_keyowner="Cadence Design Systems.", key_keyname="CDS_RSA_KEY_VER_1", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
H/C+3tbi1GTKqCxcSXccD8ddO7CbBTWKEaKQsuXAyRh0UO88wtwBzQOlYtOrF51zB85n6YhsaDcS
J25DMNfjhsnDtTzED+dirm+l1FNsykm8KfwtoQfLSgYZ3onOaOpzSaVy4kMEeTUhTozpWODl32K7
+r62PPCBtKKnaszI26TxhTdfv6oh29UtSy58AAmQXv13nMnFvDMfo3w18e2bzT0+Tw3Mzwe6mrRw
LVkRxSo6Esg8aIpqLuvsEg4xtaSfxrcfPLzcvd6iNkPpw3mzzSpJoQm6ABjBA3DM6RTaghMuDcGg
fM9t2RmTFaJZ5TXN0GGYtNkKAexEtliN/lKhOQ==

`pragma protect data_method = "AES128-CBC"
`pragma protect encoding = (enctype = "BASE64", line_length = 76, bytes = 543696)
`pragma protect data_block
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
`pragma protect end_protected
`ifndef GLBL
`define GLBL
`timescale  1 ps / 1 ps

module glbl ();

    parameter ROC_WIDTH = 100000;
    parameter TOC_WIDTH = 0;
    parameter GRES_WIDTH = 10000;
    parameter GRES_START = 10000;

//--------   STARTUP Globals --------------
    wire GSR;
    wire GTS;
    wire GWE;
    wire PRLD;
    wire GRESTORE;
    tri1 p_up_tmp;
    tri (weak1, strong0) PLL_LOCKG = p_up_tmp;

    wire PROGB_GLBL;
    wire CCLKO_GLBL;
    wire FCSBO_GLBL;
    wire [3:0] DO_GLBL;
    wire [3:0] DI_GLBL;
   
    reg GSR_int;
    reg GTS_int;
    reg PRLD_int;
    reg GRESTORE_int;

//--------   JTAG Globals --------------
    wire JTAG_TDO_GLBL;
    wire JTAG_TCK_GLBL;
    wire JTAG_TDI_GLBL;
    wire JTAG_TMS_GLBL;
    wire JTAG_TRST_GLBL;

    reg JTAG_CAPTURE_GLBL;
    reg JTAG_RESET_GLBL;
    reg JTAG_SHIFT_GLBL;
    reg JTAG_UPDATE_GLBL;
    reg JTAG_RUNTEST_GLBL;

    reg JTAG_SEL1_GLBL = 0;
    reg JTAG_SEL2_GLBL = 0 ;
    reg JTAG_SEL3_GLBL = 0;
    reg JTAG_SEL4_GLBL = 0;

    reg JTAG_USER_TDO1_GLBL = 1'bz;
    reg JTAG_USER_TDO2_GLBL = 1'bz;
    reg JTAG_USER_TDO3_GLBL = 1'bz;
    reg JTAG_USER_TDO4_GLBL = 1'bz;

    assign (strong1, weak0) GSR = GSR_int;
    assign (strong1, weak0) GTS = GTS_int;
    assign (weak1, weak0) PRLD = PRLD_int;
    assign (strong1, weak0) GRESTORE = GRESTORE_int;

    initial begin
	GSR_int = 1'b1;
	PRLD_int = 1'b1;
	#(ROC_WIDTH)
	GSR_int = 1'b0;
	PRLD_int = 1'b0;
    end

    initial begin
	GTS_int = 1'b1;
	#(TOC_WIDTH)
	GTS_int = 1'b0;
    end

    initial begin 
	GRESTORE_int = 1'b0;
	#(GRES_START);
	GRESTORE_int = 1'b1;
	#(GRES_WIDTH);
	GRESTORE_int = 1'b0;
    end

endmodule
`endif
