// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// --------------------------------------------------------------------------------
// Tool Version: Vivado v.2023.2 (win64) Build 4029153 Fri Oct 13 20:14:34 MDT 2023
// Date        : Tue Jul 16 12:27:14 2024
// Host        : Thorntanker running 64-bit major release  (build 9200)
// Command     : write_verilog -force -mode funcsim -rename_top decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix -prefix
//               decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ zynq_bd_C2C1B_0_sim_netlist.v
// Design      : zynq_bd_C2C1B_0
// Purpose     : This verilog netlist is a functional simulation representation of the design and should not be modified
//               or synthesized. This netlist cannot be used for SDF annotated simulation.
// Device      : xczu7ev-fbvb900-2-i
// --------------------------------------------------------------------------------
`timescale 1 ps / 1 ps

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* REG_OUTPUT = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) (* VERSION = "0" *) 
(* WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [7:0]src_in_bin;
  input dest_clk;
  output [7:0]dest_out_bin;

  wire [7:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[2] ;
  wire [6:0]\^dest_out_bin ;
  wire [6:0]gray_enc;
  wire src_clk;
  wire [7:0]src_in_bin;

  assign dest_out_bin[7] = \dest_graysync_ff[2] [7];
  assign dest_out_bin[6:0] = \^dest_out_bin [6:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\^dest_out_bin [2]),
        .I2(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [2]),
        .O(\^dest_out_bin [1]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [4]),
        .I2(\dest_graysync_ff[2] [6]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .I5(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [6]),
        .I4(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  (* SOFT_HLUTNM = "soft_lutpair220" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair220" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair221" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair221" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair222" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair222" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[7]),
        .Q(async_path[7]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__10
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [7:0]src_in_bin;
  input dest_clk;
  output [7:0]dest_out_bin;

  wire [7:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[2] ;
  wire [6:0]\^dest_out_bin ;
  wire [6:0]gray_enc;
  wire src_clk;
  wire [7:0]src_in_bin;

  assign dest_out_bin[7] = \dest_graysync_ff[2] [7];
  assign dest_out_bin[6:0] = \^dest_out_bin [6:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\^dest_out_bin [2]),
        .I2(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [2]),
        .O(\^dest_out_bin [1]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [4]),
        .I2(\dest_graysync_ff[2] [6]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .I5(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [6]),
        .I4(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  (* SOFT_HLUTNM = "soft_lutpair215" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair215" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair216" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair216" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair214" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair214" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[7]),
        .Q(async_path[7]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__6
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [7:0]src_in_bin;
  input dest_clk;
  output [7:0]dest_out_bin;

  wire [7:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[2] ;
  wire [6:0]\^dest_out_bin ;
  wire [6:0]gray_enc;
  wire src_clk;
  wire [7:0]src_in_bin;

  assign dest_out_bin[7] = \dest_graysync_ff[2] [7];
  assign dest_out_bin[6:0] = \^dest_out_bin [6:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\^dest_out_bin [2]),
        .I2(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [2]),
        .O(\^dest_out_bin [1]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [4]),
        .I2(\dest_graysync_ff[2] [6]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .I5(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [6]),
        .I4(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  (* SOFT_HLUTNM = "soft_lutpair182" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair182" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair183" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair183" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair184" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair184" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[7]),
        .Q(async_path[7]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__7
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [7:0]src_in_bin;
  input dest_clk;
  output [7:0]dest_out_bin;

  wire [7:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[2] ;
  wire [6:0]\^dest_out_bin ;
  wire [6:0]gray_enc;
  wire src_clk;
  wire [7:0]src_in_bin;

  assign dest_out_bin[7] = \dest_graysync_ff[2] [7];
  assign dest_out_bin[6:0] = \^dest_out_bin [6:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\^dest_out_bin [2]),
        .I2(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [2]),
        .O(\^dest_out_bin [1]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [4]),
        .I2(\dest_graysync_ff[2] [6]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .I5(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [6]),
        .I4(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  (* SOFT_HLUTNM = "soft_lutpair189" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair189" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair190" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair190" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair191" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair191" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[7]),
        .Q(async_path[7]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__8
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [7:0]src_in_bin;
  input dest_clk;
  output [7:0]dest_out_bin;

  wire [7:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[2] ;
  wire [6:0]\^dest_out_bin ;
  wire [6:0]gray_enc;
  wire src_clk;
  wire [7:0]src_in_bin;

  assign dest_out_bin[7] = \dest_graysync_ff[2] [7];
  assign dest_out_bin[6:0] = \^dest_out_bin [6:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\^dest_out_bin [2]),
        .I2(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [2]),
        .O(\^dest_out_bin [1]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [4]),
        .I2(\dest_graysync_ff[2] [6]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .I5(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [6]),
        .I4(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  (* SOFT_HLUTNM = "soft_lutpair150" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair150" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair151" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair151" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair152" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair152" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[7]),
        .Q(async_path[7]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__9
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [7:0]src_in_bin;
  input dest_clk;
  output [7:0]dest_out_bin;

  wire [7:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[2] ;
  wire [6:0]\^dest_out_bin ;
  wire [6:0]gray_enc;
  wire src_clk;
  wire [7:0]src_in_bin;

  assign dest_out_bin[7] = \dest_graysync_ff[2] [7];
  assign dest_out_bin[6:0] = \^dest_out_bin [6:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\^dest_out_bin [2]),
        .I2(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [2]),
        .O(\^dest_out_bin [1]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [4]),
        .I2(\dest_graysync_ff[2] [6]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .I5(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [6]),
        .I4(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  (* SOFT_HLUTNM = "soft_lutpair157" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair157" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair158" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair158" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair159" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair159" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[7]),
        .Q(async_path[7]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "5" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized0
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[3] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[4] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[4] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [0]),
        .Q(\dest_graysync_ff[3] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [1]),
        .Q(\dest_graysync_ff[3] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [2]),
        .Q(\dest_graysync_ff[3] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [3]),
        .Q(\dest_graysync_ff[3] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [4]),
        .Q(\dest_graysync_ff[3] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [5]),
        .Q(\dest_graysync_ff[3] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [6]),
        .Q(\dest_graysync_ff[3] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [7]),
        .Q(\dest_graysync_ff[3] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [8]),
        .Q(\dest_graysync_ff[3] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [0]),
        .Q(\dest_graysync_ff[4] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [1]),
        .Q(\dest_graysync_ff[4] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [2]),
        .Q(\dest_graysync_ff[4] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [3]),
        .Q(\dest_graysync_ff[4] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [4]),
        .Q(\dest_graysync_ff[4] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [5]),
        .Q(\dest_graysync_ff[4] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [6]),
        .Q(\dest_graysync_ff[4] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [7]),
        .Q(\dest_graysync_ff[4] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [8]),
        .Q(\dest_graysync_ff[4] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[4] [0]),
        .I1(\dest_graysync_ff[4] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[4] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[4] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[4] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[4] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[4] [3]),
        .I1(\dest_graysync_ff[4] [5]),
        .I2(\dest_graysync_ff[4] [7]),
        .I3(\dest_graysync_ff[4] [8]),
        .I4(\dest_graysync_ff[4] [6]),
        .I5(\dest_graysync_ff[4] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[4] [4]),
        .I1(\dest_graysync_ff[4] [6]),
        .I2(\dest_graysync_ff[4] [8]),
        .I3(\dest_graysync_ff[4] [7]),
        .I4(\dest_graysync_ff[4] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[4] [5]),
        .I1(\dest_graysync_ff[4] [7]),
        .I2(\dest_graysync_ff[4] [8]),
        .I3(\dest_graysync_ff[4] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[4] [6]),
        .I1(\dest_graysync_ff[4] [8]),
        .I2(\dest_graysync_ff[4] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[4] [7]),
        .I1(\dest_graysync_ff[4] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair218" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair218" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair219" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair219" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair217" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair217" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "5" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized0__3
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[3] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[4] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[4] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [0]),
        .Q(\dest_graysync_ff[3] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [1]),
        .Q(\dest_graysync_ff[3] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [2]),
        .Q(\dest_graysync_ff[3] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [3]),
        .Q(\dest_graysync_ff[3] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [4]),
        .Q(\dest_graysync_ff[3] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [5]),
        .Q(\dest_graysync_ff[3] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [6]),
        .Q(\dest_graysync_ff[3] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [7]),
        .Q(\dest_graysync_ff[3] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [8]),
        .Q(\dest_graysync_ff[3] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [0]),
        .Q(\dest_graysync_ff[4] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [1]),
        .Q(\dest_graysync_ff[4] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [2]),
        .Q(\dest_graysync_ff[4] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [3]),
        .Q(\dest_graysync_ff[4] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [4]),
        .Q(\dest_graysync_ff[4] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [5]),
        .Q(\dest_graysync_ff[4] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [6]),
        .Q(\dest_graysync_ff[4] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [7]),
        .Q(\dest_graysync_ff[4] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [8]),
        .Q(\dest_graysync_ff[4] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[4] [0]),
        .I1(\dest_graysync_ff[4] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[4] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[4] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[4] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[4] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[4] [3]),
        .I1(\dest_graysync_ff[4] [5]),
        .I2(\dest_graysync_ff[4] [7]),
        .I3(\dest_graysync_ff[4] [8]),
        .I4(\dest_graysync_ff[4] [6]),
        .I5(\dest_graysync_ff[4] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[4] [4]),
        .I1(\dest_graysync_ff[4] [6]),
        .I2(\dest_graysync_ff[4] [8]),
        .I3(\dest_graysync_ff[4] [7]),
        .I4(\dest_graysync_ff[4] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[4] [5]),
        .I1(\dest_graysync_ff[4] [7]),
        .I2(\dest_graysync_ff[4] [8]),
        .I3(\dest_graysync_ff[4] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[4] [6]),
        .I1(\dest_graysync_ff[4] [8]),
        .I2(\dest_graysync_ff[4] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[4] [7]),
        .I1(\dest_graysync_ff[4] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair185" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair185" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair186" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair186" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair187" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair187" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair188" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair188" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "5" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized0__4
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[3] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[4] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[4] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [0]),
        .Q(\dest_graysync_ff[3] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [1]),
        .Q(\dest_graysync_ff[3] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [2]),
        .Q(\dest_graysync_ff[3] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [3]),
        .Q(\dest_graysync_ff[3] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [4]),
        .Q(\dest_graysync_ff[3] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [5]),
        .Q(\dest_graysync_ff[3] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [6]),
        .Q(\dest_graysync_ff[3] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [7]),
        .Q(\dest_graysync_ff[3] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [8]),
        .Q(\dest_graysync_ff[3] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [0]),
        .Q(\dest_graysync_ff[4] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [1]),
        .Q(\dest_graysync_ff[4] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [2]),
        .Q(\dest_graysync_ff[4] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [3]),
        .Q(\dest_graysync_ff[4] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [4]),
        .Q(\dest_graysync_ff[4] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [5]),
        .Q(\dest_graysync_ff[4] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [6]),
        .Q(\dest_graysync_ff[4] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [7]),
        .Q(\dest_graysync_ff[4] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [8]),
        .Q(\dest_graysync_ff[4] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[4] [0]),
        .I1(\dest_graysync_ff[4] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[4] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[4] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[4] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[4] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[4] [3]),
        .I1(\dest_graysync_ff[4] [5]),
        .I2(\dest_graysync_ff[4] [7]),
        .I3(\dest_graysync_ff[4] [8]),
        .I4(\dest_graysync_ff[4] [6]),
        .I5(\dest_graysync_ff[4] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[4] [4]),
        .I1(\dest_graysync_ff[4] [6]),
        .I2(\dest_graysync_ff[4] [8]),
        .I3(\dest_graysync_ff[4] [7]),
        .I4(\dest_graysync_ff[4] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[4] [5]),
        .I1(\dest_graysync_ff[4] [7]),
        .I2(\dest_graysync_ff[4] [8]),
        .I3(\dest_graysync_ff[4] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[4] [6]),
        .I1(\dest_graysync_ff[4] [8]),
        .I2(\dest_graysync_ff[4] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[4] [7]),
        .I1(\dest_graysync_ff[4] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair153" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair153" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair154" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair154" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair155" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair155" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair156" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair156" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized1
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[2] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .I5(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair225" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair225" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair224" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair224" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair223" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair223" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized1__10
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[2] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .I5(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair315" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair315" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair314" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair314" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair316" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair316" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair317" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair317" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized1__11
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[2] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .I5(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair250" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair250" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair251" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair251" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair252" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair252" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair253" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair253" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized1__12
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[2] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .I5(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair259" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair259" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair258" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair258" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair260" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair260" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair261" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair261" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized1__7
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[2] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .I5(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair194" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair194" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair193" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair193" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair192" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair192" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized1__8
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[2] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .I5(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair162" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair162" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair161" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair161" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair160" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair160" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized1__9
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[2] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .I5(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair306" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair306" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair307" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair307" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair308" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair308" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair309" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair309" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "5" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "10" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized2
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [9:0]src_in_bin;
  input dest_clk;
  output [9:0]dest_out_bin;

  wire [9:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[2] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[3] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[4] ;
  wire [8:0]\^dest_out_bin ;
  wire [8:0]gray_enc;
  wire src_clk;
  wire [9:0]src_in_bin;

  assign dest_out_bin[9] = \dest_graysync_ff[4] [9];
  assign dest_out_bin[8:0] = \^dest_out_bin [8:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[9]),
        .Q(\dest_graysync_ff[0] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [9]),
        .Q(\dest_graysync_ff[1] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [9]),
        .Q(\dest_graysync_ff[2] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [0]),
        .Q(\dest_graysync_ff[3] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [1]),
        .Q(\dest_graysync_ff[3] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [2]),
        .Q(\dest_graysync_ff[3] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [3]),
        .Q(\dest_graysync_ff[3] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [4]),
        .Q(\dest_graysync_ff[3] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [5]),
        .Q(\dest_graysync_ff[3] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [6]),
        .Q(\dest_graysync_ff[3] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [7]),
        .Q(\dest_graysync_ff[3] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [8]),
        .Q(\dest_graysync_ff[3] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [9]),
        .Q(\dest_graysync_ff[3] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [0]),
        .Q(\dest_graysync_ff[4] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [1]),
        .Q(\dest_graysync_ff[4] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [2]),
        .Q(\dest_graysync_ff[4] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [3]),
        .Q(\dest_graysync_ff[4] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [4]),
        .Q(\dest_graysync_ff[4] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [5]),
        .Q(\dest_graysync_ff[4] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [6]),
        .Q(\dest_graysync_ff[4] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [7]),
        .Q(\dest_graysync_ff[4] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [8]),
        .Q(\dest_graysync_ff[4] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [9]),
        .Q(\dest_graysync_ff[4] [9]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[4] [0]),
        .I1(\dest_graysync_ff[4] [2]),
        .I2(\^dest_out_bin [4]),
        .I3(\dest_graysync_ff[4] [3]),
        .I4(\dest_graysync_ff[4] [1]),
        .O(\^dest_out_bin [0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[4] [1]),
        .I1(\dest_graysync_ff[4] [3]),
        .I2(\^dest_out_bin [4]),
        .I3(\dest_graysync_ff[4] [2]),
        .O(\^dest_out_bin [1]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[4] [2]),
        .I1(\^dest_out_bin [4]),
        .I2(\dest_graysync_ff[4] [3]),
        .O(\^dest_out_bin [2]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[4] [3]),
        .I1(\^dest_out_bin [4]),
        .O(\^dest_out_bin [3]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[4] [4]),
        .I1(\dest_graysync_ff[4] [6]),
        .I2(\dest_graysync_ff[4] [8]),
        .I3(\dest_graysync_ff[4] [9]),
        .I4(\dest_graysync_ff[4] [7]),
        .I5(\dest_graysync_ff[4] [5]),
        .O(\^dest_out_bin [4]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[4] [5]),
        .I1(\dest_graysync_ff[4] [7]),
        .I2(\dest_graysync_ff[4] [9]),
        .I3(\dest_graysync_ff[4] [8]),
        .I4(\dest_graysync_ff[4] [6]),
        .O(\^dest_out_bin [5]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[4] [6]),
        .I1(\dest_graysync_ff[4] [8]),
        .I2(\dest_graysync_ff[4] [9]),
        .I3(\dest_graysync_ff[4] [7]),
        .O(\^dest_out_bin [6]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[4] [7]),
        .I1(\dest_graysync_ff[4] [9]),
        .I2(\dest_graysync_ff[4] [8]),
        .O(\^dest_out_bin [7]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[8]_INST_0 
       (.I0(\dest_graysync_ff[4] [8]),
        .I1(\dest_graysync_ff[4] [9]),
        .O(\^dest_out_bin [8]));
  (* SOFT_HLUTNM = "soft_lutpair254" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair254" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair255" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair255" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair256" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair256" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair257" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair257" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[8]_i_1 
       (.I0(src_in_bin[9]),
        .I1(src_in_bin[8]),
        .O(gray_enc[8]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[8]),
        .Q(async_path[8]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[9] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[9]),
        .Q(async_path[9]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "5" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "10" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized2__2
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [9:0]src_in_bin;
  input dest_clk;
  output [9:0]dest_out_bin;

  wire [9:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[2] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[3] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[4] ;
  wire [8:0]\^dest_out_bin ;
  wire [8:0]gray_enc;
  wire src_clk;
  wire [9:0]src_in_bin;

  assign dest_out_bin[9] = \dest_graysync_ff[4] [9];
  assign dest_out_bin[8:0] = \^dest_out_bin [8:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[9]),
        .Q(\dest_graysync_ff[0] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [9]),
        .Q(\dest_graysync_ff[1] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [9]),
        .Q(\dest_graysync_ff[2] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [0]),
        .Q(\dest_graysync_ff[3] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [1]),
        .Q(\dest_graysync_ff[3] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [2]),
        .Q(\dest_graysync_ff[3] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [3]),
        .Q(\dest_graysync_ff[3] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [4]),
        .Q(\dest_graysync_ff[3] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [5]),
        .Q(\dest_graysync_ff[3] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [6]),
        .Q(\dest_graysync_ff[3] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [7]),
        .Q(\dest_graysync_ff[3] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [8]),
        .Q(\dest_graysync_ff[3] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [9]),
        .Q(\dest_graysync_ff[3] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [0]),
        .Q(\dest_graysync_ff[4] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [1]),
        .Q(\dest_graysync_ff[4] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [2]),
        .Q(\dest_graysync_ff[4] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [3]),
        .Q(\dest_graysync_ff[4] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [4]),
        .Q(\dest_graysync_ff[4] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [5]),
        .Q(\dest_graysync_ff[4] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [6]),
        .Q(\dest_graysync_ff[4] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [7]),
        .Q(\dest_graysync_ff[4] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [8]),
        .Q(\dest_graysync_ff[4] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [9]),
        .Q(\dest_graysync_ff[4] [9]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[4] [0]),
        .I1(\dest_graysync_ff[4] [2]),
        .I2(\^dest_out_bin [4]),
        .I3(\dest_graysync_ff[4] [3]),
        .I4(\dest_graysync_ff[4] [1]),
        .O(\^dest_out_bin [0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[4] [1]),
        .I1(\dest_graysync_ff[4] [3]),
        .I2(\^dest_out_bin [4]),
        .I3(\dest_graysync_ff[4] [2]),
        .O(\^dest_out_bin [1]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[4] [2]),
        .I1(\^dest_out_bin [4]),
        .I2(\dest_graysync_ff[4] [3]),
        .O(\^dest_out_bin [2]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[4] [3]),
        .I1(\^dest_out_bin [4]),
        .O(\^dest_out_bin [3]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[4] [4]),
        .I1(\dest_graysync_ff[4] [6]),
        .I2(\dest_graysync_ff[4] [8]),
        .I3(\dest_graysync_ff[4] [9]),
        .I4(\dest_graysync_ff[4] [7]),
        .I5(\dest_graysync_ff[4] [5]),
        .O(\^dest_out_bin [4]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[4] [5]),
        .I1(\dest_graysync_ff[4] [7]),
        .I2(\dest_graysync_ff[4] [9]),
        .I3(\dest_graysync_ff[4] [8]),
        .I4(\dest_graysync_ff[4] [6]),
        .O(\^dest_out_bin [5]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[4] [6]),
        .I1(\dest_graysync_ff[4] [8]),
        .I2(\dest_graysync_ff[4] [9]),
        .I3(\dest_graysync_ff[4] [7]),
        .O(\^dest_out_bin [6]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[4] [7]),
        .I1(\dest_graysync_ff[4] [9]),
        .I2(\dest_graysync_ff[4] [8]),
        .O(\^dest_out_bin [7]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[8]_INST_0 
       (.I0(\dest_graysync_ff[4] [8]),
        .I1(\dest_graysync_ff[4] [9]),
        .O(\^dest_out_bin [8]));
  (* SOFT_HLUTNM = "soft_lutpair310" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair310" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair311" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair311" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair312" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair312" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair313" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair313" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[8]_i_1 
       (.I0(src_in_bin[9]),
        .I1(src_in_bin[8]),
        .O(gray_enc[8]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[8]),
        .Q(async_path[8]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[9] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[9]),
        .Q(async_path[9]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "10" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized3
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [9:0]src_in_bin;
  input dest_clk;
  output [9:0]dest_out_bin;

  wire [9:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[2] ;
  wire [8:0]\^dest_out_bin ;
  wire [8:0]gray_enc;
  wire src_clk;
  wire [9:0]src_in_bin;

  assign dest_out_bin[9] = \dest_graysync_ff[2] [9];
  assign dest_out_bin[8:0] = \^dest_out_bin [8:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[9]),
        .Q(\dest_graysync_ff[0] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [9]),
        .Q(\dest_graysync_ff[1] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [9]),
        .Q(\dest_graysync_ff[2] [9]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [4]),
        .I3(\dest_graysync_ff[2] [3]),
        .I4(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\dest_graysync_ff[2] [3]),
        .I2(\^dest_out_bin [4]),
        .I3(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [4]),
        .I2(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\^dest_out_bin [4]),
        .O(\^dest_out_bin [3]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [9]),
        .I4(\dest_graysync_ff[2] [7]),
        .I5(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [9]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [9]),
        .I3(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [9]),
        .I2(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[8]_INST_0 
       (.I0(\dest_graysync_ff[2] [8]),
        .I1(\dest_graysync_ff[2] [9]),
        .O(\^dest_out_bin [8]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair265" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair265" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair264" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair264" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair263" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair263" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair262" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  (* SOFT_HLUTNM = "soft_lutpair262" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[8]_i_1 
       (.I0(src_in_bin[9]),
        .I1(src_in_bin[8]),
        .O(gray_enc[8]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[8]),
        .Q(async_path[8]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[9] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[9]),
        .Q(async_path[9]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "10" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized3__2
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [9:0]src_in_bin;
  input dest_clk;
  output [9:0]dest_out_bin;

  wire [9:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[2] ;
  wire [8:0]\^dest_out_bin ;
  wire [8:0]gray_enc;
  wire src_clk;
  wire [9:0]src_in_bin;

  assign dest_out_bin[9] = \dest_graysync_ff[2] [9];
  assign dest_out_bin[8:0] = \^dest_out_bin [8:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[9]),
        .Q(\dest_graysync_ff[0] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [9]),
        .Q(\dest_graysync_ff[1] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [9]),
        .Q(\dest_graysync_ff[2] [9]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [4]),
        .I3(\dest_graysync_ff[2] [3]),
        .I4(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\dest_graysync_ff[2] [3]),
        .I2(\^dest_out_bin [4]),
        .I3(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [4]),
        .I2(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\^dest_out_bin [4]),
        .O(\^dest_out_bin [3]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [9]),
        .I4(\dest_graysync_ff[2] [7]),
        .I5(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [9]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [9]),
        .I3(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [9]),
        .I2(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[8]_INST_0 
       (.I0(\dest_graysync_ff[2] [8]),
        .I1(\dest_graysync_ff[2] [9]),
        .O(\^dest_out_bin [8]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair321" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair321" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair320" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair320" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair319" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair319" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair318" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  (* SOFT_HLUTNM = "soft_lutpair318" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[8]_i_1 
       (.I0(src_in_bin[9]),
        .I1(src_in_bin[8]),
        .O(gray_enc[8]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[8]),
        .Q(async_path[8]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[9] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[9]),
        .Q(async_path[9]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "4" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized4
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [3:0]src_in_bin;
  input dest_clk;
  output [3:0]dest_out_bin;

  wire [3:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[2] ;
  wire [2:0]\^dest_out_bin ;
  wire [2:0]gray_enc;
  wire src_clk;
  wire [3:0]src_in_bin;

  assign dest_out_bin[3] = \dest_graysync_ff[2] [3];
  assign dest_out_bin[2:0] = \^dest_out_bin [2:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\dest_graysync_ff[2] [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\dest_graysync_ff[2] [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[3]),
        .Q(async_path[3]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "4" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized4__4
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [3:0]src_in_bin;
  input dest_clk;
  output [3:0]dest_out_bin;

  wire [3:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[2] ;
  wire [2:0]\^dest_out_bin ;
  wire [2:0]gray_enc;
  wire src_clk;
  wire [3:0]src_in_bin;

  assign dest_out_bin[3] = \dest_graysync_ff[2] [3];
  assign dest_out_bin[2:0] = \^dest_out_bin [2:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\dest_graysync_ff[2] [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\dest_graysync_ff[2] [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[3]),
        .Q(async_path[3]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "4" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized4__5
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [3:0]src_in_bin;
  input dest_clk;
  output [3:0]dest_out_bin;

  wire [3:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[2] ;
  wire [2:0]\^dest_out_bin ;
  wire [2:0]gray_enc;
  wire src_clk;
  wire [3:0]src_in_bin;

  assign dest_out_bin[3] = \dest_graysync_ff[2] [3];
  assign dest_out_bin[2:0] = \^dest_out_bin [2:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\dest_graysync_ff[2] [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\dest_graysync_ff[2] [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[3]),
        .Q(async_path[3]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "4" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized4__6
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [3:0]src_in_bin;
  input dest_clk;
  output [3:0]dest_out_bin;

  wire [3:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[2] ;
  wire [2:0]\^dest_out_bin ;
  wire [2:0]gray_enc;
  wire src_clk;
  wire [3:0]src_in_bin;

  assign dest_out_bin[3] = \dest_graysync_ff[2] [3];
  assign dest_out_bin[2:0] = \^dest_out_bin [2:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\dest_graysync_ff[2] [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\dest_graysync_ff[2] [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[3]),
        .Q(async_path[3]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "5" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "5" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized5
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [4:0]src_in_bin;
  input dest_clk;
  output [4:0]dest_out_bin;

  wire [4:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[2] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[3] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[4] ;
  wire [3:0]\^dest_out_bin ;
  wire [3:0]gray_enc;
  wire src_clk;
  wire [4:0]src_in_bin;

  assign dest_out_bin[4] = \dest_graysync_ff[4] [4];
  assign dest_out_bin[3:0] = \^dest_out_bin [3:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [0]),
        .Q(\dest_graysync_ff[3] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [1]),
        .Q(\dest_graysync_ff[3] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [2]),
        .Q(\dest_graysync_ff[3] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [3]),
        .Q(\dest_graysync_ff[3] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [4]),
        .Q(\dest_graysync_ff[3] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [0]),
        .Q(\dest_graysync_ff[4] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [1]),
        .Q(\dest_graysync_ff[4] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [2]),
        .Q(\dest_graysync_ff[4] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [3]),
        .Q(\dest_graysync_ff[4] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [4]),
        .Q(\dest_graysync_ff[4] [4]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[4] [0]),
        .I1(\dest_graysync_ff[4] [2]),
        .I2(\dest_graysync_ff[4] [4]),
        .I3(\dest_graysync_ff[4] [3]),
        .I4(\dest_graysync_ff[4] [1]),
        .O(\^dest_out_bin [0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[4] [1]),
        .I1(\dest_graysync_ff[4] [3]),
        .I2(\dest_graysync_ff[4] [4]),
        .I3(\dest_graysync_ff[4] [2]),
        .O(\^dest_out_bin [1]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[4] [2]),
        .I1(\dest_graysync_ff[4] [4]),
        .I2(\dest_graysync_ff[4] [3]),
        .O(\^dest_out_bin [2]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[4] [3]),
        .I1(\dest_graysync_ff[4] [4]),
        .O(\^dest_out_bin [3]));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[4]),
        .Q(async_path[4]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "5" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "5" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized5__2
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [4:0]src_in_bin;
  input dest_clk;
  output [4:0]dest_out_bin;

  wire [4:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[2] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[3] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[4] ;
  wire [3:0]\^dest_out_bin ;
  wire [3:0]gray_enc;
  wire src_clk;
  wire [4:0]src_in_bin;

  assign dest_out_bin[4] = \dest_graysync_ff[4] [4];
  assign dest_out_bin[3:0] = \^dest_out_bin [3:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [0]),
        .Q(\dest_graysync_ff[3] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [1]),
        .Q(\dest_graysync_ff[3] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [2]),
        .Q(\dest_graysync_ff[3] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [3]),
        .Q(\dest_graysync_ff[3] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [4]),
        .Q(\dest_graysync_ff[3] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [0]),
        .Q(\dest_graysync_ff[4] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [1]),
        .Q(\dest_graysync_ff[4] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [2]),
        .Q(\dest_graysync_ff[4] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [3]),
        .Q(\dest_graysync_ff[4] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [4]),
        .Q(\dest_graysync_ff[4] [4]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[4] [0]),
        .I1(\dest_graysync_ff[4] [2]),
        .I2(\dest_graysync_ff[4] [4]),
        .I3(\dest_graysync_ff[4] [3]),
        .I4(\dest_graysync_ff[4] [1]),
        .O(\^dest_out_bin [0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[4] [1]),
        .I1(\dest_graysync_ff[4] [3]),
        .I2(\dest_graysync_ff[4] [4]),
        .I3(\dest_graysync_ff[4] [2]),
        .O(\^dest_out_bin [1]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[4] [2]),
        .I1(\dest_graysync_ff[4] [4]),
        .I2(\dest_graysync_ff[4] [3]),
        .O(\^dest_out_bin [2]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[4] [3]),
        .I1(\dest_graysync_ff[4] [4]),
        .O(\^dest_out_bin [3]));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[4]),
        .Q(async_path[4]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "5" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized6
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [4:0]src_in_bin;
  input dest_clk;
  output [4:0]dest_out_bin;

  wire [4:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[2] ;
  wire [3:0]\^dest_out_bin ;
  wire [3:0]gray_enc;
  wire src_clk;
  wire [4:0]src_in_bin;

  assign dest_out_bin[4] = \dest_graysync_ff[2] [4];
  assign dest_out_bin[3:0] = \^dest_out_bin [3:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\dest_graysync_ff[2] [4]),
        .I3(\dest_graysync_ff[2] [3]),
        .I4(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\dest_graysync_ff[2] [3]),
        .I2(\dest_graysync_ff[2] [4]),
        .I3(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [4]),
        .I2(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[4]),
        .Q(async_path[4]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "5" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized6__2
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [4:0]src_in_bin;
  input dest_clk;
  output [4:0]dest_out_bin;

  wire [4:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[2] ;
  wire [3:0]\^dest_out_bin ;
  wire [3:0]gray_enc;
  wire src_clk;
  wire [4:0]src_in_bin;

  assign dest_out_bin[4] = \dest_graysync_ff[2] [4];
  assign dest_out_bin[3:0] = \^dest_out_bin [3:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\dest_graysync_ff[2] [4]),
        .I3(\dest_graysync_ff[2] [3]),
        .I4(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\dest_graysync_ff[2] [3]),
        .I2(\dest_graysync_ff[2] [4]),
        .I3(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [4]),
        .I2(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[4]),
        .Q(async_path[4]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* SIM_ASSERT_CHK = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SYNC_RST" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__14
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__15
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__16
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__17
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__18
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__19
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__20
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__21
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__22
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__23
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__24
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__25
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__26
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn
   (Q,
    src_in_bin,
    DI,
    ram_empty_i,
    rd_en,
    \count_value_i_reg[0]_0 ,
    \src_gray_ff_reg[0] ,
    SR,
    rd_clk);
  output [1:0]Q;
  output [0:0]src_in_bin;
  output [1:0]DI;
  input ram_empty_i;
  input rd_en;
  input [1:0]\count_value_i_reg[0]_0 ;
  input [0:0]\src_gray_ff_reg[0] ;
  input [0:0]SR;
  input rd_clk;

  wire [1:0]DI;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i[0]_i_1__2_n_0 ;
  wire \count_value_i[1]_i_3_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \gen_fwft.count_en ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [0:0]\src_gray_ff_reg[0] ;
  wire [0:0]src_in_bin;

  LUT5 #(
    .INIT(32'h696A9999)) 
    \count_value_i[0]_i_1__2 
       (.I0(Q[0]),
        .I1(ram_empty_i),
        .I2(rd_en),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(\count_value_i_reg[0]_0 [1]),
        .O(\count_value_i[0]_i_1__2_n_0 ));
  LUT4 #(
    .INIT(16'h9855)) 
    \count_value_i[1]_i_2 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(\count_value_i_reg[0]_0 [1]),
        .O(\gen_fwft.count_en ));
  LUT6 #(
    .INIT(64'h9A9AAAAAA6A666A6)) 
    \count_value_i[1]_i_3 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(rd_en),
        .I5(ram_empty_i),
        .O(\count_value_i[1]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[0]_i_1__2_n_0 ),
        .Q(Q[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[1]_i_3_n_0 ),
        .Q(Q[1]),
        .R(SR));
  LUT2 #(
    .INIT(4'h6)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[0] ),
        .O(src_in_bin));
  LUT2 #(
    .INIT(4'hB)) 
    \grdc.rd_data_count_i[7]_i_8 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[0] ),
        .O(DI[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \grdc.rd_data_count_i[7]_i_9 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[0] ),
        .O(DI[0]));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn_21
   (Q,
    src_in_bin,
    S,
    DI,
    ram_empty_i,
    \count_value_i_reg[0]_0 ,
    rd_en,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[7]_0 ,
    SR,
    rd_clk);
  output [1:0]Q;
  output [0:0]src_in_bin;
  output [1:0]S;
  output [0:0]DI;
  input ram_empty_i;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input [1:0]\grdc.rd_data_count_i_reg[7] ;
  input [1:0]\grdc.rd_data_count_i_reg[7]_0 ;
  input [0:0]SR;
  input rd_clk;

  wire [0:0]DI;
  wire [1:0]Q;
  wire [1:0]S;
  wire [0:0]SR;
  wire \count_value_i[0]_i_1__3_n_0 ;
  wire \count_value_i[1]_i_3_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \gen_fwft.count_en ;
  wire [1:0]\grdc.rd_data_count_i_reg[7] ;
  wire [1:0]\grdc.rd_data_count_i_reg[7]_0 ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [0:0]src_in_bin;

  LUT5 #(
    .INIT(32'h5AAAA655)) 
    \count_value_i[0]_i_1__3 
       (.I0(Q[0]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(ram_empty_i),
        .O(\count_value_i[0]_i_1__3_n_0 ));
  LUT4 #(
    .INIT(16'hC02F)) 
    \count_value_i[1]_i_2 
       (.I0(\count_value_i_reg[0]_0 [0]),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(ram_empty_i),
        .O(\gen_fwft.count_en ));
  LUT6 #(
    .INIT(64'hA999A9A96AAA6AAA)) 
    \count_value_i[1]_i_3 
       (.I0(Q[1]),
        .I1(ram_empty_i),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(rd_en),
        .I4(\count_value_i_reg[0]_0 [0]),
        .I5(Q[0]),
        .O(\count_value_i[1]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[0]_i_1__3_n_0 ),
        .Q(Q[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[1]_i_3_n_0 ),
        .Q(Q[1]),
        .R(SR));
  LUT4 #(
    .INIT(16'h2DD2)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_8 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .O(src_in_bin));
  LUT4 #(
    .INIT(16'h9669)) 
    \grdc.rd_data_count_i[7]_i_15 
       (.I0(DI),
        .I1(Q[1]),
        .I2(\grdc.rd_data_count_i_reg[7] [1]),
        .I3(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .O(S[1]));
  (* HLUTNM = "lutpair2" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \grdc.rd_data_count_i[7]_i_16 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(\grdc.rd_data_count_i_reg[7]_0 [0]),
        .O(S[0]));
  (* HLUTNM = "lutpair2" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \grdc.rd_data_count_i[7]_i_8 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .O(DI));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn_29
   (Q,
    src_in_bin,
    S,
    DI,
    ram_empty_i,
    \count_value_i_reg[0]_0 ,
    rd_en,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[7]_0 ,
    SR,
    rd_clk);
  output [1:0]Q;
  output [0:0]src_in_bin;
  output [1:0]S;
  output [0:0]DI;
  input ram_empty_i;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input [1:0]\grdc.rd_data_count_i_reg[7] ;
  input [1:0]\grdc.rd_data_count_i_reg[7]_0 ;
  input [0:0]SR;
  input rd_clk;

  wire [0:0]DI;
  wire [1:0]Q;
  wire [1:0]S;
  wire [0:0]SR;
  wire \count_value_i[0]_i_1__3_n_0 ;
  wire \count_value_i[1]_i_3_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \gen_fwft.count_en ;
  wire [1:0]\grdc.rd_data_count_i_reg[7] ;
  wire [1:0]\grdc.rd_data_count_i_reg[7]_0 ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [0:0]src_in_bin;

  LUT5 #(
    .INIT(32'h5AAAA655)) 
    \count_value_i[0]_i_1__3 
       (.I0(Q[0]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(ram_empty_i),
        .O(\count_value_i[0]_i_1__3_n_0 ));
  LUT4 #(
    .INIT(16'hC02F)) 
    \count_value_i[1]_i_2 
       (.I0(\count_value_i_reg[0]_0 [0]),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(ram_empty_i),
        .O(\gen_fwft.count_en ));
  LUT6 #(
    .INIT(64'hA999A9A96AAA6AAA)) 
    \count_value_i[1]_i_3 
       (.I0(Q[1]),
        .I1(ram_empty_i),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(rd_en),
        .I4(\count_value_i_reg[0]_0 [0]),
        .I5(Q[0]),
        .O(\count_value_i[1]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[0]_i_1__3_n_0 ),
        .Q(Q[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[1]_i_3_n_0 ),
        .Q(Q[1]),
        .R(SR));
  LUT4 #(
    .INIT(16'h2DD2)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_8 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .O(src_in_bin));
  LUT4 #(
    .INIT(16'h9669)) 
    \grdc.rd_data_count_i[7]_i_15 
       (.I0(DI),
        .I1(Q[1]),
        .I2(\grdc.rd_data_count_i_reg[7] [1]),
        .I3(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .O(S[1]));
  (* HLUTNM = "lutpair0" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \grdc.rd_data_count_i[7]_i_16 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(\grdc.rd_data_count_i_reg[7]_0 [0]),
        .O(S[0]));
  (* HLUTNM = "lutpair0" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \grdc.rd_data_count_i[7]_i_8 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .O(DI));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn_40
   (Q,
    src_in_bin,
    S,
    DI,
    ram_empty_i,
    \count_value_i_reg[0]_0 ,
    rd_en,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[7]_0 ,
    SR,
    rd_clk);
  output [1:0]Q;
  output [0:0]src_in_bin;
  output [1:0]S;
  output [0:0]DI;
  input ram_empty_i;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input [1:0]\grdc.rd_data_count_i_reg[7] ;
  input [1:0]\grdc.rd_data_count_i_reg[7]_0 ;
  input [0:0]SR;
  input rd_clk;

  wire [0:0]DI;
  wire [1:0]Q;
  wire [1:0]S;
  wire [0:0]SR;
  wire \count_value_i[0]_i_1__3_n_0 ;
  wire \count_value_i[1]_i_3_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \gen_fwft.count_en ;
  wire [1:0]\grdc.rd_data_count_i_reg[7] ;
  wire [1:0]\grdc.rd_data_count_i_reg[7]_0 ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [0:0]src_in_bin;

  LUT5 #(
    .INIT(32'h5AAAA655)) 
    \count_value_i[0]_i_1__3 
       (.I0(Q[0]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(ram_empty_i),
        .O(\count_value_i[0]_i_1__3_n_0 ));
  LUT4 #(
    .INIT(16'hC02F)) 
    \count_value_i[1]_i_2 
       (.I0(\count_value_i_reg[0]_0 [0]),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(ram_empty_i),
        .O(\gen_fwft.count_en ));
  LUT6 #(
    .INIT(64'hA999A9A96AAA6AAA)) 
    \count_value_i[1]_i_3 
       (.I0(Q[1]),
        .I1(ram_empty_i),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(rd_en),
        .I4(\count_value_i_reg[0]_0 [0]),
        .I5(Q[0]),
        .O(\count_value_i[1]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[0]_i_1__3_n_0 ),
        .Q(Q[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[1]_i_3_n_0 ),
        .Q(Q[1]),
        .R(SR));
  LUT4 #(
    .INIT(16'h2DD2)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_8 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .O(src_in_bin));
  LUT4 #(
    .INIT(16'h9669)) 
    \grdc.rd_data_count_i[7]_i_15 
       (.I0(DI),
        .I1(Q[1]),
        .I2(\grdc.rd_data_count_i_reg[7] [1]),
        .I3(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .O(S[1]));
  (* HLUTNM = "lutpair1" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \grdc.rd_data_count_i[7]_i_16 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(\grdc.rd_data_count_i_reg[7]_0 [0]),
        .O(S[0]));
  (* HLUTNM = "lutpair1" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \grdc.rd_data_count_i[7]_i_8 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .O(DI));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn_50
   (Q,
    D,
    \count_value_i_reg[1]_0 ,
    src_in_bin,
    ram_empty_i,
    \count_value_i_reg[1]_1 ,
    rd_en,
    \grdc.rd_data_count_i_reg[2] ,
    \grdc.rd_data_count_i_reg[2]_0 ,
    SR,
    rd_clk);
  output [1:0]Q;
  output [0:0]D;
  output \count_value_i_reg[1]_0 ;
  output [0:0]src_in_bin;
  input ram_empty_i;
  input [1:0]\count_value_i_reg[1]_1 ;
  input rd_en;
  input [2:0]\grdc.rd_data_count_i_reg[2] ;
  input [2:0]\grdc.rd_data_count_i_reg[2]_0 ;
  input [0:0]SR;
  input rd_clk;

  wire [0:0]D;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i[0]_i_1__3_n_0 ;
  wire \count_value_i[1]_i_3_n_0 ;
  wire \count_value_i_reg[1]_0 ;
  wire [1:0]\count_value_i_reg[1]_1 ;
  wire \gen_fwft.count_en ;
  wire [2:0]\grdc.rd_data_count_i_reg[2] ;
  wire [2:0]\grdc.rd_data_count_i_reg[2]_0 ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [0:0]src_in_bin;

  LUT5 #(
    .INIT(32'h5AAAA655)) 
    \count_value_i[0]_i_1__3 
       (.I0(Q[0]),
        .I1(\count_value_i_reg[1]_1 [0]),
        .I2(rd_en),
        .I3(\count_value_i_reg[1]_1 [1]),
        .I4(ram_empty_i),
        .O(\count_value_i[0]_i_1__3_n_0 ));
  LUT4 #(
    .INIT(16'hC02F)) 
    \count_value_i[1]_i_2 
       (.I0(\count_value_i_reg[1]_1 [0]),
        .I1(rd_en),
        .I2(\count_value_i_reg[1]_1 [1]),
        .I3(ram_empty_i),
        .O(\gen_fwft.count_en ));
  LUT6 #(
    .INIT(64'hA999A9A96AAA6AAA)) 
    \count_value_i[1]_i_3 
       (.I0(Q[1]),
        .I1(ram_empty_i),
        .I2(\count_value_i_reg[1]_1 [1]),
        .I3(rd_en),
        .I4(\count_value_i_reg[1]_1 [0]),
        .I5(Q[0]),
        .O(\count_value_i[1]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[0]_i_1__3_n_0 ),
        .Q(Q[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[1]_i_3_n_0 ),
        .Q(Q[1]),
        .R(SR));
  LUT4 #(
    .INIT(16'h2DD2)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_4 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[2]_0 [0]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[2]_0 [1]),
        .O(src_in_bin));
  LUT6 #(
    .INIT(64'h9696699669966969)) 
    \grdc.rd_data_count_i[2]_i_1 
       (.I0(\count_value_i_reg[1]_0 ),
        .I1(\grdc.rd_data_count_i_reg[2] [2]),
        .I2(\grdc.rd_data_count_i_reg[2]_0 [2]),
        .I3(\grdc.rd_data_count_i_reg[2]_0 [1]),
        .I4(Q[1]),
        .I5(\grdc.rd_data_count_i_reg[2] [1]),
        .O(D));
  LUT6 #(
    .INIT(64'h69FF696969690069)) 
    \grdc.rd_data_count_i[4]_i_4 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[2]_0 [1]),
        .I2(\grdc.rd_data_count_i_reg[2] [1]),
        .I3(\grdc.rd_data_count_i_reg[2]_0 [0]),
        .I4(Q[0]),
        .I5(\grdc.rd_data_count_i_reg[2] [0]),
        .O(\count_value_i_reg[1]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn_58
   (Q,
    D,
    \count_value_i_reg[1]_0 ,
    src_in_bin,
    ram_empty_i,
    \count_value_i_reg[1]_1 ,
    rd_en,
    \grdc.rd_data_count_i_reg[2] ,
    \grdc.rd_data_count_i_reg[2]_0 ,
    SR,
    rd_clk);
  output [1:0]Q;
  output [0:0]D;
  output \count_value_i_reg[1]_0 ;
  output [0:0]src_in_bin;
  input ram_empty_i;
  input [1:0]\count_value_i_reg[1]_1 ;
  input rd_en;
  input [2:0]\grdc.rd_data_count_i_reg[2] ;
  input [2:0]\grdc.rd_data_count_i_reg[2]_0 ;
  input [0:0]SR;
  input rd_clk;

  wire [0:0]D;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i[0]_i_1__3_n_0 ;
  wire \count_value_i[1]_i_3_n_0 ;
  wire \count_value_i_reg[1]_0 ;
  wire [1:0]\count_value_i_reg[1]_1 ;
  wire \gen_fwft.count_en ;
  wire [2:0]\grdc.rd_data_count_i_reg[2] ;
  wire [2:0]\grdc.rd_data_count_i_reg[2]_0 ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [0:0]src_in_bin;

  LUT5 #(
    .INIT(32'h5AAAA655)) 
    \count_value_i[0]_i_1__3 
       (.I0(Q[0]),
        .I1(\count_value_i_reg[1]_1 [0]),
        .I2(rd_en),
        .I3(\count_value_i_reg[1]_1 [1]),
        .I4(ram_empty_i),
        .O(\count_value_i[0]_i_1__3_n_0 ));
  LUT4 #(
    .INIT(16'hC02F)) 
    \count_value_i[1]_i_2 
       (.I0(\count_value_i_reg[1]_1 [0]),
        .I1(rd_en),
        .I2(\count_value_i_reg[1]_1 [1]),
        .I3(ram_empty_i),
        .O(\gen_fwft.count_en ));
  LUT6 #(
    .INIT(64'hA999A9A96AAA6AAA)) 
    \count_value_i[1]_i_3 
       (.I0(Q[1]),
        .I1(ram_empty_i),
        .I2(\count_value_i_reg[1]_1 [1]),
        .I3(rd_en),
        .I4(\count_value_i_reg[1]_1 [0]),
        .I5(Q[0]),
        .O(\count_value_i[1]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[0]_i_1__3_n_0 ),
        .Q(Q[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[1]_i_3_n_0 ),
        .Q(Q[1]),
        .R(SR));
  LUT4 #(
    .INIT(16'h2DD2)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_4 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[2]_0 [0]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[2]_0 [1]),
        .O(src_in_bin));
  LUT6 #(
    .INIT(64'h9696699669966969)) 
    \grdc.rd_data_count_i[2]_i_1 
       (.I0(\count_value_i_reg[1]_0 ),
        .I1(\grdc.rd_data_count_i_reg[2] [2]),
        .I2(\grdc.rd_data_count_i_reg[2]_0 [2]),
        .I3(\grdc.rd_data_count_i_reg[2]_0 [1]),
        .I4(Q[1]),
        .I5(\grdc.rd_data_count_i_reg[2] [1]),
        .O(D));
  LUT6 #(
    .INIT(64'h69FF696969690069)) 
    \grdc.rd_data_count_i[4]_i_4 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[2]_0 [1]),
        .I2(\grdc.rd_data_count_i_reg[2] [1]),
        .I3(\grdc.rd_data_count_i_reg[2]_0 [0]),
        .I4(Q[0]),
        .I5(\grdc.rd_data_count_i_reg[2] [0]),
        .O(\count_value_i_reg[1]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn_9
   (Q,
    src_in_bin,
    DI,
    ram_empty_i,
    rd_en,
    \count_value_i_reg[0]_0 ,
    \src_gray_ff_reg[0] ,
    SR,
    rd_clk);
  output [1:0]Q;
  output [0:0]src_in_bin;
  output [1:0]DI;
  input ram_empty_i;
  input rd_en;
  input [1:0]\count_value_i_reg[0]_0 ;
  input [0:0]\src_gray_ff_reg[0] ;
  input [0:0]SR;
  input rd_clk;

  wire [1:0]DI;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i[0]_i_1__2_n_0 ;
  wire \count_value_i[1]_i_3_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \gen_fwft.count_en ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [0:0]\src_gray_ff_reg[0] ;
  wire [0:0]src_in_bin;

  LUT5 #(
    .INIT(32'h696A9999)) 
    \count_value_i[0]_i_1__2 
       (.I0(Q[0]),
        .I1(ram_empty_i),
        .I2(rd_en),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(\count_value_i_reg[0]_0 [1]),
        .O(\count_value_i[0]_i_1__2_n_0 ));
  LUT4 #(
    .INIT(16'h9855)) 
    \count_value_i[1]_i_2 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(\count_value_i_reg[0]_0 [1]),
        .O(\gen_fwft.count_en ));
  LUT6 #(
    .INIT(64'h9A9AAAAAA6A666A6)) 
    \count_value_i[1]_i_3 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(rd_en),
        .I5(ram_empty_i),
        .O(\count_value_i[1]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[0]_i_1__2_n_0 ),
        .Q(Q[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[1]_i_3_n_0 ),
        .Q(Q[1]),
        .R(SR));
  LUT2 #(
    .INIT(4'h6)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[0] ),
        .O(src_in_bin));
  LUT2 #(
    .INIT(4'hB)) 
    \grdc.rd_data_count_i[7]_i_8 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[0] ),
        .O(DI[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \grdc.rd_data_count_i[7]_i_9 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[0] ),
        .O(DI[0]));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized0
   (Q,
    enb,
    DI,
    \count_value_i_reg[7]_0 ,
    D,
    S,
    src_in_bin,
    \count_value_i_reg[0]_0 ,
    rd_en,
    ram_empty_i,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[8] ,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ,
    \count_value_i_reg[8]_0 ,
    rd_clk);
  output [7:0]Q;
  output enb;
  output [0:0]DI;
  output [0:0]\count_value_i_reg[7]_0 ;
  output [7:0]D;
  output [4:0]S;
  output [7:0]src_in_bin;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input ram_empty_i;
  input [1:0]\grdc.rd_data_count_i_reg[7] ;
  input [7:0]\grdc.rd_data_count_i_reg[8] ;
  input [7:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ;
  input \count_value_i_reg[8]_0 ;
  input rd_clk;

  wire [7:0]D;
  wire [0:0]DI;
  wire [7:0]Q;
  wire [4:0]S;
  wire \count_value_i[0]_i_1__4_n_0 ;
  wire \count_value_i[1]_i_1__4_n_0 ;
  wire \count_value_i[2]_i_1__3_n_0 ;
  wire \count_value_i[3]_i_1__3_n_0 ;
  wire \count_value_i[4]_i_1__3_n_0 ;
  wire \count_value_i[5]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_2__2_n_0 ;
  wire \count_value_i[7]_i_1__2_n_0 ;
  wire \count_value_i[8]_i_1__0_n_0 ;
  wire \count_value_i[8]_i_2__0_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire [0:0]\count_value_i_reg[7]_0 ;
  wire \count_value_i_reg[8]_0 ;
  wire \count_value_i_reg_n_0_[8] ;
  wire enb;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 ;
  wire [1:0]\grdc.rd_data_count_i_reg[7] ;
  wire [7:0]\grdc.rd_data_count_i_reg[8] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [7:0]src_in_bin;
  wire [7:7]\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_CO_UNCONNECTED ;

  LUT5 #(
    .INIT(32'hABAA5455)) 
    \count_value_i[0]_i_1__4 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(Q[0]),
        .O(\count_value_i[0]_i_1__4_n_0 ));
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__4 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair228" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair229" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__3 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair229" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__3 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__3_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__2 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__2_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__2_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h0000AAA200000000)) 
    \count_value_i[6]_i_2__2 
       (.I0(Q[1]),
        .I1(\count_value_i_reg[0]_0 [1]),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair226" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__2 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair226" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1__0 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(\count_value_i_reg_n_0_[8] ),
        .O(\count_value_i[8]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(enb),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[0]_i_1__4_n_0 ),
        .Q(Q[0]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[1]_i_1__4_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[2]_i_1__3_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[3]_i_1__3_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[4]_i_1__3_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[5]_i_1__2_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[6]_i_1__2_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[7]_i_1__2_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[8]_i_1__0_n_0 ),
        .Q(\count_value_i_reg_n_0_[8] ),
        .R(\count_value_i_reg[8]_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFE00000001)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_1 
       (.I0(Q[7]),
        .I1(Q[5]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I3(Q[4]),
        .I4(Q[6]),
        .I5(\count_value_i_reg_n_0_[8] ),
        .O(src_in_bin[7]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFBFBBAFB)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [0]),
        .I4(Q[0]),
        .I5(Q[3]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair230" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair227" *) 
  LUT5 #(
    .INIT(32'hFFFE0001)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2 
       (.I0(Q[6]),
        .I1(Q[4]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I3(Q[5]),
        .I4(Q[7]),
        .O(src_in_bin[6]));
  (* SOFT_HLUTNM = "soft_lutpair227" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3 
       (.I0(Q[5]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I2(Q[4]),
        .I3(Q[6]),
        .O(src_in_bin[5]));
  LUT3 #(
    .INIT(8'hE1)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_4 
       (.I0(Q[4]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I2(Q[5]),
        .O(src_in_bin[4]));
  LUT6 #(
    .INIT(64'hFFFFEAFE00001501)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_5 
       (.I0(Q[3]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .I4(Q[2]),
        .I5(Q[4]),
        .O(src_in_bin[3]));
  LUT6 #(
    .INIT(64'hFBFBBAFB04044504)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [0]),
        .I4(Q[0]),
        .I5(Q[3]),
        .O(src_in_bin[2]));
  (* SOFT_HLUTNM = "soft_lutpair228" *) 
  LUT5 #(
    .INIT(32'hB0FB4F04)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_7 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .I4(Q[2]),
        .O(src_in_bin[1]));
  (* SOFT_HLUTNM = "soft_lutpair230" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_9 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .O(src_in_bin[0]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [6]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [5]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [4]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [3]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [2]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [1]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15_n_0 ));
  LUT5 #(
    .INIT(32'hABAA5455)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(Q[0]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2 
       (.I0(Q[6]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3 
       (.I0(Q[5]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4 
       (.I0(Q[4]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5 
       (.I0(Q[3]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6 
       (.I0(Q[2]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7 
       (.I0(Q[1]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8 
       (.I0(Q[0]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [7]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1 
       (.CI(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [0]),
        .CI_TOP(1'b0),
        .CO({\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_CO_UNCONNECTED [7],\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 }),
        .DI({1'b0,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 }),
        .O(D),
        .S({\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16_n_0 }));
  LUT4 #(
    .INIT(16'h00FD)) 
    \gen_sdpram.xpm_memory_base_inst_i_2 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .O(enb));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_10 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[8] [4]),
        .I2(Q[6]),
        .I3(\grdc.rd_data_count_i_reg[8] [5]),
        .O(S[3]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_11 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[8] [3]),
        .I2(Q[5]),
        .I3(\grdc.rd_data_count_i_reg[8] [4]),
        .O(S[2]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_12 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[8] [2]),
        .I2(Q[4]),
        .I3(\grdc.rd_data_count_i_reg[8] [3]),
        .O(S[1]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_13 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[8] [1]),
        .I2(Q[3]),
        .I3(\grdc.rd_data_count_i_reg[8] [2]),
        .O(S[0]));
  LUT3 #(
    .INIT(8'hD4)) 
    \grdc.rd_data_count_i[7]_i_7 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(\grdc.rd_data_count_i_reg[8] [0]),
        .O(DI));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_9 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[8] [5]),
        .I2(Q[7]),
        .I3(\grdc.rd_data_count_i_reg[8] [6]),
        .O(S[4]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[8]_i_3 
       (.I0(Q[7]),
        .I1(\grdc.rd_data_count_i_reg[8] [6]),
        .I2(\count_value_i_reg_n_0_[8] ),
        .I3(\grdc.rd_data_count_i_reg[8] [7]),
        .O(\count_value_i_reg[7]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized0_23
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    \gwdc.wr_data_count_i_reg[8] ,
    wr_clk);
  output [8:0]Q;
  output [7:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input [8:0]\gwdc.wr_data_count_i_reg[8] ;
  input wr_clk;

  wire [7:0]D;
  wire [8:0]Q;
  wire \count_value_i[0]_i_1__1_n_0 ;
  wire \count_value_i[1]_i_1__1_n_0 ;
  wire \count_value_i[2]_i_1__1_n_0 ;
  wire \count_value_i[3]_i_1__1_n_0 ;
  wire \count_value_i[4]_i_1__1_n_0 ;
  wire \count_value_i[5]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_2__1_n_0 ;
  wire \count_value_i[7]_i_1__1_n_0 ;
  wire \count_value_i[8]_i_1_n_0 ;
  wire \count_value_i[8]_i_2_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire \gwdc.wr_data_count_i[7]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_3_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_4_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_5_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_6_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_7_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_8_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_9_n_0 ;
  wire \gwdc.wr_data_count_i[8]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_1 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_2 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_3 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_4 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_5 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_6 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_7 ;
  wire [8:0]\gwdc.wr_data_count_i_reg[8] ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [0:0]\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:0]\NLW_gwdc.wr_data_count_i_reg[8]_i_1_CO_UNCONNECTED ;
  wire [7:1]\NLW_gwdc.wr_data_count_i_reg[8]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair235" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair235" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair234" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair234" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__1_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__1_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__1 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair233" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__1 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair233" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__1_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_2 
       (.I0(Q[7]),
        .I1(\gwdc.wr_data_count_i_reg[8] [7]),
        .O(\gwdc.wr_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_3 
       (.I0(Q[6]),
        .I1(\gwdc.wr_data_count_i_reg[8] [6]),
        .O(\gwdc.wr_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_4 
       (.I0(Q[5]),
        .I1(\gwdc.wr_data_count_i_reg[8] [5]),
        .O(\gwdc.wr_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_5 
       (.I0(Q[4]),
        .I1(\gwdc.wr_data_count_i_reg[8] [4]),
        .O(\gwdc.wr_data_count_i[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_6 
       (.I0(Q[3]),
        .I1(\gwdc.wr_data_count_i_reg[8] [3]),
        .O(\gwdc.wr_data_count_i[7]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_7 
       (.I0(Q[2]),
        .I1(\gwdc.wr_data_count_i_reg[8] [2]),
        .O(\gwdc.wr_data_count_i[7]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_8 
       (.I0(Q[1]),
        .I1(\gwdc.wr_data_count_i_reg[8] [1]),
        .O(\gwdc.wr_data_count_i[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_9 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[8] [0]),
        .O(\gwdc.wr_data_count_i[7]_i_9_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[8]_i_2 
       (.I0(Q[8]),
        .I1(\gwdc.wr_data_count_i_reg[8] [8]),
        .O(\gwdc.wr_data_count_i[8]_i_2_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[7]_i_1 
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_1 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_2 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_3 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_4 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_5 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_6 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_7 }),
        .DI(Q[7:0]),
        .O({D[6:0],\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({\gwdc.wr_data_count_i[7]_i_2_n_0 ,\gwdc.wr_data_count_i[7]_i_3_n_0 ,\gwdc.wr_data_count_i[7]_i_4_n_0 ,\gwdc.wr_data_count_i[7]_i_5_n_0 ,\gwdc.wr_data_count_i[7]_i_6_n_0 ,\gwdc.wr_data_count_i[7]_i_7_n_0 ,\gwdc.wr_data_count_i[7]_i_8_n_0 ,\gwdc.wr_data_count_i[7]_i_9_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[8]_i_1 
       (.CI(\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_gwdc.wr_data_count_i_reg[8]_i_1_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_gwdc.wr_data_count_i_reg[8]_i_1_O_UNCONNECTED [7:1],D[7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gwdc.wr_data_count_i[8]_i_2_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized0_30
   (Q,
    enb,
    DI,
    \count_value_i_reg[7]_0 ,
    D,
    S,
    src_in_bin,
    \count_value_i_reg[0]_0 ,
    rd_en,
    ram_empty_i,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[8] ,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ,
    \count_value_i_reg[8]_0 ,
    rd_clk);
  output [7:0]Q;
  output enb;
  output [0:0]DI;
  output [0:0]\count_value_i_reg[7]_0 ;
  output [7:0]D;
  output [4:0]S;
  output [7:0]src_in_bin;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input ram_empty_i;
  input [1:0]\grdc.rd_data_count_i_reg[7] ;
  input [7:0]\grdc.rd_data_count_i_reg[8] ;
  input [7:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ;
  input \count_value_i_reg[8]_0 ;
  input rd_clk;

  wire [7:0]D;
  wire [0:0]DI;
  wire [7:0]Q;
  wire [4:0]S;
  wire \count_value_i[0]_i_1__4_n_0 ;
  wire \count_value_i[1]_i_1__4_n_0 ;
  wire \count_value_i[2]_i_1__3_n_0 ;
  wire \count_value_i[3]_i_1__3_n_0 ;
  wire \count_value_i[4]_i_1__3_n_0 ;
  wire \count_value_i[5]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_2__2_n_0 ;
  wire \count_value_i[7]_i_1__2_n_0 ;
  wire \count_value_i[8]_i_1__0_n_0 ;
  wire \count_value_i[8]_i_2__0_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire [0:0]\count_value_i_reg[7]_0 ;
  wire \count_value_i_reg[8]_0 ;
  wire \count_value_i_reg_n_0_[8] ;
  wire enb;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 ;
  wire [1:0]\grdc.rd_data_count_i_reg[7] ;
  wire [7:0]\grdc.rd_data_count_i_reg[8] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [7:0]src_in_bin;
  wire [7:7]\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_CO_UNCONNECTED ;

  LUT5 #(
    .INIT(32'hABAA5455)) 
    \count_value_i[0]_i_1__4 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(Q[0]),
        .O(\count_value_i[0]_i_1__4_n_0 ));
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__4 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair197" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair198" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__3 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair198" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__3 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__3_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__2 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__2_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__2_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h0000AAA200000000)) 
    \count_value_i[6]_i_2__2 
       (.I0(Q[1]),
        .I1(\count_value_i_reg[0]_0 [1]),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair195" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__2 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair195" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1__0 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(\count_value_i_reg_n_0_[8] ),
        .O(\count_value_i[8]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(enb),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[0]_i_1__4_n_0 ),
        .Q(Q[0]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[1]_i_1__4_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[2]_i_1__3_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[3]_i_1__3_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[4]_i_1__3_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[5]_i_1__2_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[6]_i_1__2_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[7]_i_1__2_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[8]_i_1__0_n_0 ),
        .Q(\count_value_i_reg_n_0_[8] ),
        .R(\count_value_i_reg[8]_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFE00000001)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_1 
       (.I0(Q[7]),
        .I1(Q[5]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I3(Q[4]),
        .I4(Q[6]),
        .I5(\count_value_i_reg_n_0_[8] ),
        .O(src_in_bin[7]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFBFBBAFB)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [0]),
        .I4(Q[0]),
        .I5(Q[3]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair199" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair196" *) 
  LUT5 #(
    .INIT(32'hFFFE0001)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2 
       (.I0(Q[6]),
        .I1(Q[4]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I3(Q[5]),
        .I4(Q[7]),
        .O(src_in_bin[6]));
  (* SOFT_HLUTNM = "soft_lutpair196" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3 
       (.I0(Q[5]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I2(Q[4]),
        .I3(Q[6]),
        .O(src_in_bin[5]));
  LUT3 #(
    .INIT(8'hE1)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_4 
       (.I0(Q[4]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I2(Q[5]),
        .O(src_in_bin[4]));
  LUT6 #(
    .INIT(64'hFFFFEAFE00001501)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_5 
       (.I0(Q[3]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .I4(Q[2]),
        .I5(Q[4]),
        .O(src_in_bin[3]));
  LUT6 #(
    .INIT(64'hFBFBBAFB04044504)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [0]),
        .I4(Q[0]),
        .I5(Q[3]),
        .O(src_in_bin[2]));
  (* SOFT_HLUTNM = "soft_lutpair197" *) 
  LUT5 #(
    .INIT(32'hB0FB4F04)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_7 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .I4(Q[2]),
        .O(src_in_bin[1]));
  (* SOFT_HLUTNM = "soft_lutpair199" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_9 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .O(src_in_bin[0]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [6]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [5]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [4]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [3]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [2]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [1]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15_n_0 ));
  LUT5 #(
    .INIT(32'hABAA5455)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(Q[0]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2 
       (.I0(Q[6]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3 
       (.I0(Q[5]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4 
       (.I0(Q[4]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5 
       (.I0(Q[3]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6 
       (.I0(Q[2]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7 
       (.I0(Q[1]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8 
       (.I0(Q[0]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [7]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1 
       (.CI(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [0]),
        .CI_TOP(1'b0),
        .CO({\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_CO_UNCONNECTED [7],\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 }),
        .DI({1'b0,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 }),
        .O(D),
        .S({\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16_n_0 }));
  LUT4 #(
    .INIT(16'h00FD)) 
    \gen_sdpram.xpm_memory_base_inst_i_2 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .O(enb));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_10 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[8] [4]),
        .I2(Q[6]),
        .I3(\grdc.rd_data_count_i_reg[8] [5]),
        .O(S[3]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_11 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[8] [3]),
        .I2(Q[5]),
        .I3(\grdc.rd_data_count_i_reg[8] [4]),
        .O(S[2]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_12 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[8] [2]),
        .I2(Q[4]),
        .I3(\grdc.rd_data_count_i_reg[8] [3]),
        .O(S[1]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_13 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[8] [1]),
        .I2(Q[3]),
        .I3(\grdc.rd_data_count_i_reg[8] [2]),
        .O(S[0]));
  LUT3 #(
    .INIT(8'hD4)) 
    \grdc.rd_data_count_i[7]_i_7 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(\grdc.rd_data_count_i_reg[8] [0]),
        .O(DI));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_9 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[8] [5]),
        .I2(Q[7]),
        .I3(\grdc.rd_data_count_i_reg[8] [6]),
        .O(S[4]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[8]_i_3 
       (.I0(Q[7]),
        .I1(\grdc.rd_data_count_i_reg[8] [6]),
        .I2(\count_value_i_reg_n_0_[8] ),
        .I3(\grdc.rd_data_count_i_reg[8] [7]),
        .O(\count_value_i_reg[7]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized0_33
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    \gwdc.wr_data_count_i_reg[8] ,
    wr_clk);
  output [8:0]Q;
  output [7:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input [8:0]\gwdc.wr_data_count_i_reg[8] ;
  input wr_clk;

  wire [7:0]D;
  wire [8:0]Q;
  wire \count_value_i[0]_i_1__1_n_0 ;
  wire \count_value_i[1]_i_1__1_n_0 ;
  wire \count_value_i[2]_i_1__1_n_0 ;
  wire \count_value_i[3]_i_1__1_n_0 ;
  wire \count_value_i[4]_i_1__1_n_0 ;
  wire \count_value_i[5]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_2__1_n_0 ;
  wire \count_value_i[7]_i_1__1_n_0 ;
  wire \count_value_i[8]_i_1_n_0 ;
  wire \count_value_i[8]_i_2_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire \gwdc.wr_data_count_i[7]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_3_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_4_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_5_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_6_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_7_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_8_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_9_n_0 ;
  wire \gwdc.wr_data_count_i[8]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_1 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_2 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_3 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_4 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_5 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_6 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_7 ;
  wire [8:0]\gwdc.wr_data_count_i_reg[8] ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [0:0]\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:0]\NLW_gwdc.wr_data_count_i_reg[8]_i_1_CO_UNCONNECTED ;
  wire [7:1]\NLW_gwdc.wr_data_count_i_reg[8]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair204" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair204" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair203" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair203" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__1_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__1_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__1 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair202" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__1 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair202" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__1_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_2 
       (.I0(Q[7]),
        .I1(\gwdc.wr_data_count_i_reg[8] [7]),
        .O(\gwdc.wr_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_3 
       (.I0(Q[6]),
        .I1(\gwdc.wr_data_count_i_reg[8] [6]),
        .O(\gwdc.wr_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_4 
       (.I0(Q[5]),
        .I1(\gwdc.wr_data_count_i_reg[8] [5]),
        .O(\gwdc.wr_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_5 
       (.I0(Q[4]),
        .I1(\gwdc.wr_data_count_i_reg[8] [4]),
        .O(\gwdc.wr_data_count_i[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_6 
       (.I0(Q[3]),
        .I1(\gwdc.wr_data_count_i_reg[8] [3]),
        .O(\gwdc.wr_data_count_i[7]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_7 
       (.I0(Q[2]),
        .I1(\gwdc.wr_data_count_i_reg[8] [2]),
        .O(\gwdc.wr_data_count_i[7]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_8 
       (.I0(Q[1]),
        .I1(\gwdc.wr_data_count_i_reg[8] [1]),
        .O(\gwdc.wr_data_count_i[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_9 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[8] [0]),
        .O(\gwdc.wr_data_count_i[7]_i_9_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[8]_i_2 
       (.I0(Q[8]),
        .I1(\gwdc.wr_data_count_i_reg[8] [8]),
        .O(\gwdc.wr_data_count_i[8]_i_2_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[7]_i_1 
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_1 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_2 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_3 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_4 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_5 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_6 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_7 }),
        .DI(Q[7:0]),
        .O({D[6:0],\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({\gwdc.wr_data_count_i[7]_i_2_n_0 ,\gwdc.wr_data_count_i[7]_i_3_n_0 ,\gwdc.wr_data_count_i[7]_i_4_n_0 ,\gwdc.wr_data_count_i[7]_i_5_n_0 ,\gwdc.wr_data_count_i[7]_i_6_n_0 ,\gwdc.wr_data_count_i[7]_i_7_n_0 ,\gwdc.wr_data_count_i[7]_i_8_n_0 ,\gwdc.wr_data_count_i[7]_i_9_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[8]_i_1 
       (.CI(\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_gwdc.wr_data_count_i_reg[8]_i_1_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_gwdc.wr_data_count_i_reg[8]_i_1_O_UNCONNECTED [7:1],D[7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gwdc.wr_data_count_i[8]_i_2_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized0_41
   (Q,
    enb,
    DI,
    \count_value_i_reg[7]_0 ,
    D,
    S,
    src_in_bin,
    \count_value_i_reg[0]_0 ,
    rd_en,
    ram_empty_i,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[8] ,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ,
    \count_value_i_reg[8]_0 ,
    rd_clk);
  output [7:0]Q;
  output enb;
  output [0:0]DI;
  output [0:0]\count_value_i_reg[7]_0 ;
  output [7:0]D;
  output [4:0]S;
  output [7:0]src_in_bin;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input ram_empty_i;
  input [1:0]\grdc.rd_data_count_i_reg[7] ;
  input [7:0]\grdc.rd_data_count_i_reg[8] ;
  input [7:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ;
  input \count_value_i_reg[8]_0 ;
  input rd_clk;

  wire [7:0]D;
  wire [0:0]DI;
  wire [7:0]Q;
  wire [4:0]S;
  wire \count_value_i[0]_i_1__4_n_0 ;
  wire \count_value_i[1]_i_1__4_n_0 ;
  wire \count_value_i[2]_i_1__3_n_0 ;
  wire \count_value_i[3]_i_1__3_n_0 ;
  wire \count_value_i[4]_i_1__3_n_0 ;
  wire \count_value_i[5]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_2__2_n_0 ;
  wire \count_value_i[7]_i_1__2_n_0 ;
  wire \count_value_i[8]_i_1__0_n_0 ;
  wire \count_value_i[8]_i_2__0_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire [0:0]\count_value_i_reg[7]_0 ;
  wire \count_value_i_reg[8]_0 ;
  wire \count_value_i_reg_n_0_[8] ;
  wire enb;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 ;
  wire [1:0]\grdc.rd_data_count_i_reg[7] ;
  wire [7:0]\grdc.rd_data_count_i_reg[8] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [7:0]src_in_bin;
  wire [7:7]\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_CO_UNCONNECTED ;

  LUT5 #(
    .INIT(32'hABAA5455)) 
    \count_value_i[0]_i_1__4 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(Q[0]),
        .O(\count_value_i[0]_i_1__4_n_0 ));
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__4 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair165" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair166" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__3 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair166" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__3 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__3_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__2 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__2_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__2_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h0000AAA200000000)) 
    \count_value_i[6]_i_2__2 
       (.I0(Q[1]),
        .I1(\count_value_i_reg[0]_0 [1]),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair163" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__2 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair163" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1__0 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(\count_value_i_reg_n_0_[8] ),
        .O(\count_value_i[8]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(enb),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[0]_i_1__4_n_0 ),
        .Q(Q[0]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[1]_i_1__4_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[2]_i_1__3_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[3]_i_1__3_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[4]_i_1__3_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[5]_i_1__2_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[6]_i_1__2_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[7]_i_1__2_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[8]_i_1__0_n_0 ),
        .Q(\count_value_i_reg_n_0_[8] ),
        .R(\count_value_i_reg[8]_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFE00000001)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_1 
       (.I0(Q[7]),
        .I1(Q[5]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I3(Q[4]),
        .I4(Q[6]),
        .I5(\count_value_i_reg_n_0_[8] ),
        .O(src_in_bin[7]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFBFBBAFB)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [0]),
        .I4(Q[0]),
        .I5(Q[3]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair167" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair164" *) 
  LUT5 #(
    .INIT(32'hFFFE0001)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2 
       (.I0(Q[6]),
        .I1(Q[4]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I3(Q[5]),
        .I4(Q[7]),
        .O(src_in_bin[6]));
  (* SOFT_HLUTNM = "soft_lutpair164" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3 
       (.I0(Q[5]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I2(Q[4]),
        .I3(Q[6]),
        .O(src_in_bin[5]));
  LUT3 #(
    .INIT(8'hE1)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_4 
       (.I0(Q[4]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I2(Q[5]),
        .O(src_in_bin[4]));
  LUT6 #(
    .INIT(64'hFFFFEAFE00001501)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_5 
       (.I0(Q[3]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .I4(Q[2]),
        .I5(Q[4]),
        .O(src_in_bin[3]));
  LUT6 #(
    .INIT(64'hFBFBBAFB04044504)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [0]),
        .I4(Q[0]),
        .I5(Q[3]),
        .O(src_in_bin[2]));
  (* SOFT_HLUTNM = "soft_lutpair165" *) 
  LUT5 #(
    .INIT(32'hB0FB4F04)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_7 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .I4(Q[2]),
        .O(src_in_bin[1]));
  (* SOFT_HLUTNM = "soft_lutpair167" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_9 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .O(src_in_bin[0]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [6]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [5]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [4]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [3]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [2]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [1]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15_n_0 ));
  LUT5 #(
    .INIT(32'hABAA5455)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(Q[0]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2 
       (.I0(Q[6]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3 
       (.I0(Q[5]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4 
       (.I0(Q[4]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5 
       (.I0(Q[3]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6 
       (.I0(Q[2]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7 
       (.I0(Q[1]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8 
       (.I0(Q[0]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [7]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1 
       (.CI(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [0]),
        .CI_TOP(1'b0),
        .CO({\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_CO_UNCONNECTED [7],\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 }),
        .DI({1'b0,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 }),
        .O(D),
        .S({\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16_n_0 }));
  LUT4 #(
    .INIT(16'h00FD)) 
    \gen_sdpram.xpm_memory_base_inst_i_2 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .O(enb));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_10 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[8] [4]),
        .I2(Q[6]),
        .I3(\grdc.rd_data_count_i_reg[8] [5]),
        .O(S[3]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_11 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[8] [3]),
        .I2(Q[5]),
        .I3(\grdc.rd_data_count_i_reg[8] [4]),
        .O(S[2]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_12 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[8] [2]),
        .I2(Q[4]),
        .I3(\grdc.rd_data_count_i_reg[8] [3]),
        .O(S[1]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_13 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[8] [1]),
        .I2(Q[3]),
        .I3(\grdc.rd_data_count_i_reg[8] [2]),
        .O(S[0]));
  LUT3 #(
    .INIT(8'hD4)) 
    \grdc.rd_data_count_i[7]_i_7 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(\grdc.rd_data_count_i_reg[8] [0]),
        .O(DI));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_9 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[8] [5]),
        .I2(Q[7]),
        .I3(\grdc.rd_data_count_i_reg[8] [6]),
        .O(S[4]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[8]_i_3 
       (.I0(Q[7]),
        .I1(\grdc.rd_data_count_i_reg[8] [6]),
        .I2(\count_value_i_reg_n_0_[8] ),
        .I3(\grdc.rd_data_count_i_reg[8] [7]),
        .O(\count_value_i_reg[7]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized0_44
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    \gwdc.wr_data_count_i_reg[8] ,
    wr_clk);
  output [8:0]Q;
  output [7:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input [8:0]\gwdc.wr_data_count_i_reg[8] ;
  input wr_clk;

  wire [7:0]D;
  wire [8:0]Q;
  wire \count_value_i[0]_i_1__1_n_0 ;
  wire \count_value_i[1]_i_1__1_n_0 ;
  wire \count_value_i[2]_i_1__1_n_0 ;
  wire \count_value_i[3]_i_1__1_n_0 ;
  wire \count_value_i[4]_i_1__1_n_0 ;
  wire \count_value_i[5]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_2__1_n_0 ;
  wire \count_value_i[7]_i_1__1_n_0 ;
  wire \count_value_i[8]_i_1_n_0 ;
  wire \count_value_i[8]_i_2_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire \gwdc.wr_data_count_i[7]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_3_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_4_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_5_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_6_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_7_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_8_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_9_n_0 ;
  wire \gwdc.wr_data_count_i[8]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_1 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_2 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_3 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_4 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_5 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_6 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_7 ;
  wire [8:0]\gwdc.wr_data_count_i_reg[8] ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [0:0]\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:0]\NLW_gwdc.wr_data_count_i_reg[8]_i_1_CO_UNCONNECTED ;
  wire [7:1]\NLW_gwdc.wr_data_count_i_reg[8]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair172" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair172" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair171" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair171" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__1_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__1_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__1 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair170" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__1 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair170" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__1_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_2 
       (.I0(Q[7]),
        .I1(\gwdc.wr_data_count_i_reg[8] [7]),
        .O(\gwdc.wr_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_3 
       (.I0(Q[6]),
        .I1(\gwdc.wr_data_count_i_reg[8] [6]),
        .O(\gwdc.wr_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_4 
       (.I0(Q[5]),
        .I1(\gwdc.wr_data_count_i_reg[8] [5]),
        .O(\gwdc.wr_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_5 
       (.I0(Q[4]),
        .I1(\gwdc.wr_data_count_i_reg[8] [4]),
        .O(\gwdc.wr_data_count_i[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_6 
       (.I0(Q[3]),
        .I1(\gwdc.wr_data_count_i_reg[8] [3]),
        .O(\gwdc.wr_data_count_i[7]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_7 
       (.I0(Q[2]),
        .I1(\gwdc.wr_data_count_i_reg[8] [2]),
        .O(\gwdc.wr_data_count_i[7]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_8 
       (.I0(Q[1]),
        .I1(\gwdc.wr_data_count_i_reg[8] [1]),
        .O(\gwdc.wr_data_count_i[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_9 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[8] [0]),
        .O(\gwdc.wr_data_count_i[7]_i_9_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[8]_i_2 
       (.I0(Q[8]),
        .I1(\gwdc.wr_data_count_i_reg[8] [8]),
        .O(\gwdc.wr_data_count_i[8]_i_2_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[7]_i_1 
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_1 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_2 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_3 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_4 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_5 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_6 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_7 }),
        .DI(Q[7:0]),
        .O({D[6:0],\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({\gwdc.wr_data_count_i[7]_i_2_n_0 ,\gwdc.wr_data_count_i[7]_i_3_n_0 ,\gwdc.wr_data_count_i[7]_i_4_n_0 ,\gwdc.wr_data_count_i[7]_i_5_n_0 ,\gwdc.wr_data_count_i[7]_i_6_n_0 ,\gwdc.wr_data_count_i[7]_i_7_n_0 ,\gwdc.wr_data_count_i[7]_i_8_n_0 ,\gwdc.wr_data_count_i[7]_i_9_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[8]_i_1 
       (.CI(\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_gwdc.wr_data_count_i_reg[8]_i_1_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_gwdc.wr_data_count_i_reg[8]_i_1_O_UNCONNECTED [7:1],D[7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gwdc.wr_data_count_i[8]_i_2_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized1
   (Q,
    E,
    \count_value_i_reg[1]_0 ,
    rd_en,
    ram_empty_i,
    \count_value_i_reg[0]_0 ,
    rd_clk);
  output [7:0]Q;
  input [0:0]E;
  input [1:0]\count_value_i_reg[1]_0 ;
  input rd_en;
  input ram_empty_i;
  input \count_value_i_reg[0]_0 ;
  input rd_clk;

  wire [0:0]E;
  wire [7:0]Q;
  wire \count_value_i[0]_i_1__2_n_0 ;
  wire \count_value_i[1]_i_1__3_n_0 ;
  wire \count_value_i[2]_i_1__2_n_0 ;
  wire \count_value_i[3]_i_1__2_n_0 ;
  wire \count_value_i[4]_i_1__2_n_0 ;
  wire \count_value_i[5]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_2__3_n_0 ;
  wire \count_value_i[7]_i_1__3_n_0 ;
  wire \count_value_i[7]_i_2__1_n_0 ;
  wire \count_value_i_reg[0]_0 ;
  wire [1:0]\count_value_i_reg[1]_0 ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;

  LUT4 #(
    .INIT(16'h10EF)) 
    \count_value_i[0]_i_1__2 
       (.I0(rd_en),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(\count_value_i_reg[1]_0 [1]),
        .I3(Q[0]),
        .O(\count_value_i[0]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__3 
       (.I0(\count_value_i_reg[1]_0 [1]),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__3_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__2 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair231" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair231" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__2 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__3 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__3_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__3 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__3_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h0000AAA200000000)) 
    \count_value_i[6]_i_2__3 
       (.I0(Q[1]),
        .I1(\count_value_i_reg[1]_0 [1]),
        .I2(\count_value_i_reg[1]_0 [0]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__3_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__3 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2__1_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2__1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(E),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2__1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__2_n_0 ),
        .Q(Q[0]),
        .S(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__3_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__2_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__2_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1__2_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[5]_i_1__3_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[6]_i_1__3_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[7]_i_1__3_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized1_24
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ,
    wr_clk);
  output [7:0]Q;
  output [6:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input [7:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  input wr_clk;

  wire [6:0]D;
  wire [7:0]Q;
  wire \count_value_i[0]_i_1__0_n_0 ;
  wire \count_value_i[1]_i_1__0_n_0 ;
  wire \count_value_i[2]_i_1__0_n_0 ;
  wire \count_value_i[3]_i_1__0_n_0 ;
  wire \count_value_i[4]_i_1__0_n_0 ;
  wire \count_value_i[5]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_2__0_n_0 ;
  wire \count_value_i[7]_i_1__0_n_0 ;
  wire \count_value_i[7]_i_2__0_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [7:7]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_CO_UNCONNECTED ;
  wire [0:0]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__0 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair237" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair237" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair236" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair236" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__0 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__0_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__0_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__0 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__0_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__0 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2__0_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__0_n_0 ),
        .Q(Q[0]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__0_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__0_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__0_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__0_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__0_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__0_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__0_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [7]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [6]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [5]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [4]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [3]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [2]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [1]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [0]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1 
       (.CI(wr_pntr_plus1_pf_carry),
        .CI_TOP(1'b0),
        .CO({\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_CO_UNCONNECTED [7],\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 }),
        .DI({1'b0,Q[6:0]}),
        .O({D,\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED [0]}),
        .S({\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized1_31
   (Q,
    E,
    \count_value_i_reg[1]_0 ,
    rd_en,
    ram_empty_i,
    \count_value_i_reg[0]_0 ,
    rd_clk);
  output [7:0]Q;
  input [0:0]E;
  input [1:0]\count_value_i_reg[1]_0 ;
  input rd_en;
  input ram_empty_i;
  input \count_value_i_reg[0]_0 ;
  input rd_clk;

  wire [0:0]E;
  wire [7:0]Q;
  wire \count_value_i[0]_i_1__2_n_0 ;
  wire \count_value_i[1]_i_1__3_n_0 ;
  wire \count_value_i[2]_i_1__2_n_0 ;
  wire \count_value_i[3]_i_1__2_n_0 ;
  wire \count_value_i[4]_i_1__2_n_0 ;
  wire \count_value_i[5]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_2__3_n_0 ;
  wire \count_value_i[7]_i_1__3_n_0 ;
  wire \count_value_i[7]_i_2__1_n_0 ;
  wire \count_value_i_reg[0]_0 ;
  wire [1:0]\count_value_i_reg[1]_0 ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;

  LUT4 #(
    .INIT(16'h10EF)) 
    \count_value_i[0]_i_1__2 
       (.I0(rd_en),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(\count_value_i_reg[1]_0 [1]),
        .I3(Q[0]),
        .O(\count_value_i[0]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__3 
       (.I0(\count_value_i_reg[1]_0 [1]),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__3_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__2 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair200" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair200" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__2 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__3 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__3_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__3 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__3_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h0000AAA200000000)) 
    \count_value_i[6]_i_2__3 
       (.I0(Q[1]),
        .I1(\count_value_i_reg[1]_0 [1]),
        .I2(\count_value_i_reg[1]_0 [0]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__3_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__3 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2__1_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2__1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(E),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2__1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__2_n_0 ),
        .Q(Q[0]),
        .S(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__3_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__2_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__2_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1__2_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[5]_i_1__3_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[6]_i_1__3_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[7]_i_1__3_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized1_34
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ,
    wr_clk);
  output [7:0]Q;
  output [6:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input [7:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  input wr_clk;

  wire [6:0]D;
  wire [7:0]Q;
  wire \count_value_i[0]_i_1__0_n_0 ;
  wire \count_value_i[1]_i_1__0_n_0 ;
  wire \count_value_i[2]_i_1__0_n_0 ;
  wire \count_value_i[3]_i_1__0_n_0 ;
  wire \count_value_i[4]_i_1__0_n_0 ;
  wire \count_value_i[5]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_2__0_n_0 ;
  wire \count_value_i[7]_i_1__0_n_0 ;
  wire \count_value_i[7]_i_2__0_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [7:7]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_CO_UNCONNECTED ;
  wire [0:0]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__0 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair206" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair206" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair205" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair205" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__0 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__0_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__0_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__0 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__0_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__0 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2__0_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__0_n_0 ),
        .Q(Q[0]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__0_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__0_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__0_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__0_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__0_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__0_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__0_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [7]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [6]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [5]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [4]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [3]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [2]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [1]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [0]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1 
       (.CI(wr_pntr_plus1_pf_carry),
        .CI_TOP(1'b0),
        .CO({\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_CO_UNCONNECTED [7],\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 }),
        .DI({1'b0,Q[6:0]}),
        .O({D,\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED [0]}),
        .S({\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized1_42
   (Q,
    E,
    \count_value_i_reg[1]_0 ,
    rd_en,
    ram_empty_i,
    \count_value_i_reg[0]_0 ,
    rd_clk);
  output [7:0]Q;
  input [0:0]E;
  input [1:0]\count_value_i_reg[1]_0 ;
  input rd_en;
  input ram_empty_i;
  input \count_value_i_reg[0]_0 ;
  input rd_clk;

  wire [0:0]E;
  wire [7:0]Q;
  wire \count_value_i[0]_i_1__2_n_0 ;
  wire \count_value_i[1]_i_1__3_n_0 ;
  wire \count_value_i[2]_i_1__2_n_0 ;
  wire \count_value_i[3]_i_1__2_n_0 ;
  wire \count_value_i[4]_i_1__2_n_0 ;
  wire \count_value_i[5]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_2__3_n_0 ;
  wire \count_value_i[7]_i_1__3_n_0 ;
  wire \count_value_i[7]_i_2__1_n_0 ;
  wire \count_value_i_reg[0]_0 ;
  wire [1:0]\count_value_i_reg[1]_0 ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;

  LUT4 #(
    .INIT(16'h10EF)) 
    \count_value_i[0]_i_1__2 
       (.I0(rd_en),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(\count_value_i_reg[1]_0 [1]),
        .I3(Q[0]),
        .O(\count_value_i[0]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__3 
       (.I0(\count_value_i_reg[1]_0 [1]),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__3_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__2 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair168" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair168" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__2 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__3 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__3_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__3 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__3_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h0000AAA200000000)) 
    \count_value_i[6]_i_2__3 
       (.I0(Q[1]),
        .I1(\count_value_i_reg[1]_0 [1]),
        .I2(\count_value_i_reg[1]_0 [0]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__3_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__3 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2__1_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2__1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(E),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2__1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__2_n_0 ),
        .Q(Q[0]),
        .S(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__3_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__2_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__2_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1__2_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[5]_i_1__3_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[6]_i_1__3_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[7]_i_1__3_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized1_45
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ,
    wr_clk);
  output [7:0]Q;
  output [6:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input [7:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  input wr_clk;

  wire [6:0]D;
  wire [7:0]Q;
  wire \count_value_i[0]_i_1__0_n_0 ;
  wire \count_value_i[1]_i_1__0_n_0 ;
  wire \count_value_i[2]_i_1__0_n_0 ;
  wire \count_value_i[3]_i_1__0_n_0 ;
  wire \count_value_i[4]_i_1__0_n_0 ;
  wire \count_value_i[5]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_2__0_n_0 ;
  wire \count_value_i[7]_i_1__0_n_0 ;
  wire \count_value_i[7]_i_2__0_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [7:7]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_CO_UNCONNECTED ;
  wire [0:0]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__0 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair174" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair174" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair173" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair173" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__0 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__0_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__0_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__0 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__0_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__0 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2__0_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__0_n_0 ),
        .Q(Q[0]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__0_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__0_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__0_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__0_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__0_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__0_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__0_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [7]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [6]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [5]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [4]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [3]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [2]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [1]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [0]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1 
       (.CI(wr_pntr_plus1_pf_carry),
        .CI_TOP(1'b0),
        .CO({\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_CO_UNCONNECTED [7],\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 }),
        .DI({1'b0,Q[6:0]}),
        .O({D,\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED [0]}),
        .S({\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized2
   (Q,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    wr_clk);
  output [7:0]Q;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input wr_clk;

  wire [7:0]Q;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[2]_i_1_n_0 ;
  wire \count_value_i[3]_i_1_n_0 ;
  wire \count_value_i[4]_i_1_n_0 ;
  wire \count_value_i[5]_i_1_n_0 ;
  wire \count_value_i[6]_i_1_n_0 ;
  wire \count_value_i[6]_i_2_n_0 ;
  wire \count_value_i[7]_i_1_n_0 ;
  wire \count_value_i[7]_i_2_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  (* SOFT_HLUTNM = "soft_lutpair239" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair239" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair238" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair238" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(Q[1]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized2_35
   (Q,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    wr_clk);
  output [7:0]Q;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input wr_clk;

  wire [7:0]Q;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[2]_i_1_n_0 ;
  wire \count_value_i[3]_i_1_n_0 ;
  wire \count_value_i[4]_i_1_n_0 ;
  wire \count_value_i[5]_i_1_n_0 ;
  wire \count_value_i[6]_i_1_n_0 ;
  wire \count_value_i[6]_i_2_n_0 ;
  wire \count_value_i[7]_i_1_n_0 ;
  wire \count_value_i[7]_i_2_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  (* SOFT_HLUTNM = "soft_lutpair208" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair208" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair207" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair207" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(Q[1]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized2_46
   (Q,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    wr_clk);
  output [7:0]Q;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input wr_clk;

  wire [7:0]Q;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[2]_i_1_n_0 ;
  wire \count_value_i[3]_i_1_n_0 ;
  wire \count_value_i[4]_i_1_n_0 ;
  wire \count_value_i[5]_i_1_n_0 ;
  wire \count_value_i[6]_i_1_n_0 ;
  wire \count_value_i[6]_i_2_n_0 ;
  wire \count_value_i[7]_i_1_n_0 ;
  wire \count_value_i[7]_i_2_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  (* SOFT_HLUTNM = "soft_lutpair176" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair176" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair175" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair175" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(Q[1]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized3
   (Q,
    ram_rd_en_i,
    \reg_out_i_reg[7] ,
    src_in_bin,
    \count_value_i_reg[1]_0 ,
    D,
    \count_value_i_reg[7]_0 ,
    \count_value_i_reg[0]_0 ,
    rd_en,
    ram_empty_i,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \grdc.rd_data_count_i_reg[7] ,
    DI,
    \grdc.rd_data_count_i_reg[9] ,
    S,
    \grdc.rd_data_count_i_reg[9]_0 ,
    \count_value_i_reg[9]_0 ,
    rd_clk);
  output [9:0]Q;
  output ram_rd_en_i;
  output \reg_out_i_reg[7] ;
  output [8:0]src_in_bin;
  output \count_value_i_reg[1]_0 ;
  output [8:0]D;
  output [7:0]\count_value_i_reg[7]_0 ;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input ram_empty_i;
  input [8:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  input [1:0]\grdc.rd_data_count_i_reg[7] ;
  input [7:0]DI;
  input [0:0]\grdc.rd_data_count_i_reg[9] ;
  input [0:0]S;
  input [8:0]\grdc.rd_data_count_i_reg[9]_0 ;
  input \count_value_i_reg[9]_0 ;
  input rd_clk;

  wire [8:0]D;
  wire [7:0]DI;
  wire [9:0]Q;
  wire [0:0]S;
  wire \count_value_i[0]_i_1__4_n_0 ;
  wire \count_value_i[1]_i_1__4_n_0 ;
  wire \count_value_i[2]_i_1__3_n_0 ;
  wire \count_value_i[3]_i_1__3_n_0 ;
  wire \count_value_i[4]_i_1__3_n_0 ;
  wire \count_value_i[5]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_2__3_n_0 ;
  wire \count_value_i[7]_i_1__3_n_0 ;
  wire \count_value_i[8]_i_1__3_n_0 ;
  wire \count_value_i[9]_i_1__0_n_0 ;
  wire \count_value_i[9]_i_2__0_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \count_value_i_reg[1]_0 ;
  wire [7:0]\count_value_i_reg[7]_0 ;
  wire \count_value_i_reg[9]_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_7_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_8_n_0 ;
  wire [8:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  wire \grdc.rd_data_count_i[7]_i_10_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_11_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_12_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_13_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_14_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_15_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_16_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_17_n_0 ;
  wire \grdc.rd_data_count_i[9]_i_5_n_0 ;
  wire [1:0]\grdc.rd_data_count_i_reg[7] ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_0 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_1 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_2 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_3 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_4 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_5 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_6 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_7 ;
  wire [0:0]\grdc.rd_data_count_i_reg[9] ;
  wire [8:0]\grdc.rd_data_count_i_reg[9]_0 ;
  wire \grdc.rd_data_count_i_reg[9]_i_2_n_7 ;
  wire ram_empty_i;
  wire ram_rd_en_i;
  wire rd_clk;
  wire rd_en;
  wire \reg_out_i_reg[7] ;
  wire [8:0]src_in_bin;
  wire [0:0]\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:1]\NLW_grdc.rd_data_count_i_reg[9]_i_2_CO_UNCONNECTED ;
  wire [7:2]\NLW_grdc.rd_data_count_i_reg[9]_i_2_O_UNCONNECTED ;

  LUT5 #(
    .INIT(32'hAABA5545)) 
    \count_value_i[0]_i_1__4 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(Q[0]),
        .O(\count_value_i[0]_i_1__4_n_0 ));
  LUT5 #(
    .INIT(32'h04FFFB00)) 
    \count_value_i[1]_i_1__4 
       (.I0(\count_value_i_reg[0]_0 [0]),
        .I1(\count_value_i_reg[0]_0 [1]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair328" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair325" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__3 
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair325" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__3_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__3 
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(Q[2]),
        .I3(\count_value_i[6]_i_2__3_n_0 ),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__3 
       (.I0(\count_value_i[6]_i_2__3_n_0 ),
        .I1(Q[2]),
        .I2(Q[3]),
        .I3(Q[4]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h0000AA8A00000000)) 
    \count_value_i[6]_i_2__3 
       (.I0(Q[1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair322" *) 
  LUT4 #(
    .INIT(16'hF708)) 
    \count_value_i[7]_i_1__3 
       (.I0(Q[6]),
        .I1(Q[5]),
        .I2(\count_value_i[9]_i_2__0_n_0 ),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair322" *) 
  LUT5 #(
    .INIT(32'hBFFF4000)) 
    \count_value_i[8]_i_1__3 
       (.I0(\count_value_i[9]_i_2__0_n_0 ),
        .I1(Q[5]),
        .I2(Q[6]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF7FFF00008000)) 
    \count_value_i[9]_i_1__0 
       (.I0(Q[8]),
        .I1(Q[7]),
        .I2(Q[6]),
        .I3(Q[5]),
        .I4(\count_value_i[9]_i_2__0_n_0 ),
        .I5(Q[9]),
        .O(\count_value_i[9]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \count_value_i[9]_i_2__0 
       (.I0(Q[0]),
        .I1(ram_rd_en_i),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(Q[3]),
        .I5(Q[4]),
        .O(\count_value_i[9]_i_2__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[0]_i_1__4_n_0 ),
        .Q(Q[0]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[1]_i_1__4_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[2]_i_1__3_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[3]_i_1__3_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[4]_i_1__3_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[5]_i_1__3_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[6]_i_1__3_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[7]_i_1__3_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[8]_i_1__3_n_0 ),
        .Q(Q[8]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[9] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[9]_i_1__0_n_0 ),
        .Q(Q[9]),
        .R(\count_value_i_reg[9]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair326" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_1 
       (.I0(Q[8]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ),
        .I2(Q[7]),
        .I3(Q[9]),
        .O(src_in_bin[8]));
  (* SOFT_HLUTNM = "soft_lutpair323" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11 
       (.I0(Q[5]),
        .I1(Q[3]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I3(Q[4]),
        .I4(Q[6]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair324" *) 
  LUT5 #(
    .INIT(32'hFFFFDD4D)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12 
       (.I0(\grdc.rd_data_count_i_reg[7] [1]),
        .I1(Q[1]),
        .I2(\grdc.rd_data_count_i_reg[7] [0]),
        .I3(Q[0]),
        .I4(Q[2]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair326" *) 
  LUT3 #(
    .INIT(8'hA9)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2 
       (.I0(Q[8]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ),
        .I2(Q[7]),
        .O(src_in_bin[7]));
  LUT6 #(
    .INIT(64'hFFFFFFFE00000001)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3 
       (.I0(Q[6]),
        .I1(Q[4]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[7]),
        .O(src_in_bin[6]));
  (* SOFT_HLUTNM = "soft_lutpair323" *) 
  LUT5 #(
    .INIT(32'hAAAAAAA9)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_4 
       (.I0(Q[6]),
        .I1(Q[4]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .O(src_in_bin[5]));
  (* SOFT_HLUTNM = "soft_lutpair327" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_5 
       (.I0(Q[4]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I2(Q[3]),
        .I3(Q[5]),
        .O(src_in_bin[4]));
  (* SOFT_HLUTNM = "soft_lutpair327" *) 
  LUT3 #(
    .INIT(8'hA9)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6 
       (.I0(Q[4]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I2(Q[3]),
        .O(src_in_bin[3]));
  LUT6 #(
    .INIT(64'hEFAAFFEF10550010)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_7 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(\grdc.rd_data_count_i_reg[7] [0]),
        .I3(Q[1]),
        .I4(\grdc.rd_data_count_i_reg[7] [1]),
        .I5(Q[3]),
        .O(src_in_bin[2]));
  (* SOFT_HLUTNM = "soft_lutpair324" *) 
  LUT5 #(
    .INIT(32'h9A55AA9A)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_8 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(\grdc.rd_data_count_i_reg[7] [0]),
        .I3(Q[1]),
        .I4(\grdc.rd_data_count_i_reg[7] [1]),
        .O(src_in_bin[1]));
  (* SOFT_HLUTNM = "soft_lutpair328" *) 
  LUT4 #(
    .INIT(16'h6696)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_9 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(\grdc.rd_data_count_i_reg[7] [0]),
        .I3(Q[0]),
        .O(src_in_bin[0]));
  LUT5 #(
    .INIT(32'hAABA5545)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(Q[0]),
        .O(\count_value_i_reg[7]_0 [0]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [7]),
        .O(\count_value_i_reg[7]_0 [7]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [6]),
        .O(\count_value_i_reg[7]_0 [6]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [5]),
        .O(\count_value_i_reg[7]_0 [5]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [4]),
        .O(\count_value_i_reg[7]_0 [4]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .O(\count_value_i_reg[7]_0 [3]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .O(\count_value_i_reg[7]_0 [2]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .O(\count_value_i_reg[7]_0 [1]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_5 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .I2(Q[0]),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I4(Q[2]),
        .I5(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .O(\count_value_i_reg[1]_0 ));
  LUT6 #(
    .INIT(64'h8200008200000000)) 
    \gen_pf_ic_rc.ram_empty_i_i_6 
       (.I0(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [7]),
        .I2(Q[7]),
        .I3(Q[8]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [8]),
        .I5(\gen_pf_ic_rc.ram_empty_i_i_8_n_0 ),
        .O(\reg_out_i_reg[7] ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.ram_empty_i_i_7 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [6]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_8 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [4]),
        .I2(Q[3]),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .I4(Q[5]),
        .I5(\gen_pf_ic_rc.ram_empty_i_reg [5]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_8_n_0 ));
  LUT4 #(
    .INIT(16'h00FB)) 
    \gen_sdpram.xpm_memory_base_inst_i_2 
       (.I0(\count_value_i_reg[0]_0 [0]),
        .I1(\count_value_i_reg[0]_0 [1]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .O(ram_rd_en_i));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_10 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [6]),
        .I2(Q[7]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [7]),
        .O(\grdc.rd_data_count_i[7]_i_10_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_11 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [5]),
        .I2(Q[6]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [6]),
        .O(\grdc.rd_data_count_i[7]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_12 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [4]),
        .I2(Q[5]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [5]),
        .O(\grdc.rd_data_count_i[7]_i_12_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_13 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [3]),
        .I2(Q[4]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [4]),
        .O(\grdc.rd_data_count_i[7]_i_13_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_14 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [2]),
        .I2(Q[3]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [3]),
        .O(\grdc.rd_data_count_i[7]_i_14_n_0 ));
  LUT5 #(
    .INIT(32'h2BD4D42B)) 
    \grdc.rd_data_count_i[7]_i_15 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(\grdc.rd_data_count_i_reg[9]_0 [1]),
        .I3(Q[2]),
        .I4(\grdc.rd_data_count_i_reg[9]_0 [2]),
        .O(\grdc.rd_data_count_i[7]_i_15_n_0 ));
  LUT5 #(
    .INIT(32'hD22D2DD2)) 
    \grdc.rd_data_count_i[7]_i_16 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(\grdc.rd_data_count_i_reg[9]_0 [1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .I4(Q[1]),
        .O(\grdc.rd_data_count_i[7]_i_16_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \grdc.rd_data_count_i[7]_i_17 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(\grdc.rd_data_count_i_reg[9]_0 [0]),
        .O(\grdc.rd_data_count_i[7]_i_17_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[9]_i_5 
       (.I0(Q[7]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [7]),
        .I2(Q[8]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [8]),
        .O(\grdc.rd_data_count_i[9]_i_5_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[7]_i_1 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\grdc.rd_data_count_i_reg[7]_i_1_n_0 ,\grdc.rd_data_count_i_reg[7]_i_1_n_1 ,\grdc.rd_data_count_i_reg[7]_i_1_n_2 ,\grdc.rd_data_count_i_reg[7]_i_1_n_3 ,\grdc.rd_data_count_i_reg[7]_i_1_n_4 ,\grdc.rd_data_count_i_reg[7]_i_1_n_5 ,\grdc.rd_data_count_i_reg[7]_i_1_n_6 ,\grdc.rd_data_count_i_reg[7]_i_1_n_7 }),
        .DI(DI),
        .O({D[6:0],\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({\grdc.rd_data_count_i[7]_i_10_n_0 ,\grdc.rd_data_count_i[7]_i_11_n_0 ,\grdc.rd_data_count_i[7]_i_12_n_0 ,\grdc.rd_data_count_i[7]_i_13_n_0 ,\grdc.rd_data_count_i[7]_i_14_n_0 ,\grdc.rd_data_count_i[7]_i_15_n_0 ,\grdc.rd_data_count_i[7]_i_16_n_0 ,\grdc.rd_data_count_i[7]_i_17_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[9]_i_2 
       (.CI(\grdc.rd_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_grdc.rd_data_count_i_reg[9]_i_2_CO_UNCONNECTED [7:1],\grdc.rd_data_count_i_reg[9]_i_2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\grdc.rd_data_count_i_reg[9] }),
        .O({\NLW_grdc.rd_data_count_i_reg[9]_i_2_O_UNCONNECTED [7:2],D[8:7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,S,\grdc.rd_data_count_i[9]_i_5_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized3_10
   (Q,
    ram_rd_en_i,
    \reg_out_i_reg[7] ,
    src_in_bin,
    \count_value_i_reg[1]_0 ,
    D,
    \count_value_i_reg[7]_0 ,
    \count_value_i_reg[0]_0 ,
    rd_en,
    ram_empty_i,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \grdc.rd_data_count_i_reg[7] ,
    DI,
    \grdc.rd_data_count_i_reg[9] ,
    S,
    \grdc.rd_data_count_i_reg[9]_0 ,
    \count_value_i_reg[9]_0 ,
    rd_clk);
  output [9:0]Q;
  output ram_rd_en_i;
  output \reg_out_i_reg[7] ;
  output [8:0]src_in_bin;
  output \count_value_i_reg[1]_0 ;
  output [8:0]D;
  output [7:0]\count_value_i_reg[7]_0 ;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input ram_empty_i;
  input [8:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  input [1:0]\grdc.rd_data_count_i_reg[7] ;
  input [7:0]DI;
  input [0:0]\grdc.rd_data_count_i_reg[9] ;
  input [0:0]S;
  input [8:0]\grdc.rd_data_count_i_reg[9]_0 ;
  input \count_value_i_reg[9]_0 ;
  input rd_clk;

  wire [8:0]D;
  wire [7:0]DI;
  wire [9:0]Q;
  wire [0:0]S;
  wire \count_value_i[0]_i_1__4_n_0 ;
  wire \count_value_i[1]_i_1__4_n_0 ;
  wire \count_value_i[2]_i_1__3_n_0 ;
  wire \count_value_i[3]_i_1__3_n_0 ;
  wire \count_value_i[4]_i_1__3_n_0 ;
  wire \count_value_i[5]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_2__3_n_0 ;
  wire \count_value_i[7]_i_1__3_n_0 ;
  wire \count_value_i[8]_i_1__3_n_0 ;
  wire \count_value_i[9]_i_1__0_n_0 ;
  wire \count_value_i[9]_i_2__0_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \count_value_i_reg[1]_0 ;
  wire [7:0]\count_value_i_reg[7]_0 ;
  wire \count_value_i_reg[9]_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_7_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_8_n_0 ;
  wire [8:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  wire \grdc.rd_data_count_i[7]_i_10_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_11_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_12_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_13_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_14_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_15_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_16_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_17_n_0 ;
  wire \grdc.rd_data_count_i[9]_i_5_n_0 ;
  wire [1:0]\grdc.rd_data_count_i_reg[7] ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_0 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_1 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_2 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_3 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_4 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_5 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_6 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_7 ;
  wire [0:0]\grdc.rd_data_count_i_reg[9] ;
  wire [8:0]\grdc.rd_data_count_i_reg[9]_0 ;
  wire \grdc.rd_data_count_i_reg[9]_i_2_n_7 ;
  wire ram_empty_i;
  wire ram_rd_en_i;
  wire rd_clk;
  wire rd_en;
  wire \reg_out_i_reg[7] ;
  wire [8:0]src_in_bin;
  wire [0:0]\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:1]\NLW_grdc.rd_data_count_i_reg[9]_i_2_CO_UNCONNECTED ;
  wire [7:2]\NLW_grdc.rd_data_count_i_reg[9]_i_2_O_UNCONNECTED ;

  LUT5 #(
    .INIT(32'hAABA5545)) 
    \count_value_i[0]_i_1__4 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(Q[0]),
        .O(\count_value_i[0]_i_1__4_n_0 ));
  LUT5 #(
    .INIT(32'h04FFFB00)) 
    \count_value_i[1]_i_1__4 
       (.I0(\count_value_i_reg[0]_0 [0]),
        .I1(\count_value_i_reg[0]_0 [1]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair272" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair269" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__3 
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair269" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__3_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__3 
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(Q[2]),
        .I3(\count_value_i[6]_i_2__3_n_0 ),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__3 
       (.I0(\count_value_i[6]_i_2__3_n_0 ),
        .I1(Q[2]),
        .I2(Q[3]),
        .I3(Q[4]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h0000AA8A00000000)) 
    \count_value_i[6]_i_2__3 
       (.I0(Q[1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair266" *) 
  LUT4 #(
    .INIT(16'hF708)) 
    \count_value_i[7]_i_1__3 
       (.I0(Q[6]),
        .I1(Q[5]),
        .I2(\count_value_i[9]_i_2__0_n_0 ),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair266" *) 
  LUT5 #(
    .INIT(32'hBFFF4000)) 
    \count_value_i[8]_i_1__3 
       (.I0(\count_value_i[9]_i_2__0_n_0 ),
        .I1(Q[5]),
        .I2(Q[6]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF7FFF00008000)) 
    \count_value_i[9]_i_1__0 
       (.I0(Q[8]),
        .I1(Q[7]),
        .I2(Q[6]),
        .I3(Q[5]),
        .I4(\count_value_i[9]_i_2__0_n_0 ),
        .I5(Q[9]),
        .O(\count_value_i[9]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \count_value_i[9]_i_2__0 
       (.I0(Q[0]),
        .I1(ram_rd_en_i),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(Q[3]),
        .I5(Q[4]),
        .O(\count_value_i[9]_i_2__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[0]_i_1__4_n_0 ),
        .Q(Q[0]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[1]_i_1__4_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[2]_i_1__3_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[3]_i_1__3_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[4]_i_1__3_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[5]_i_1__3_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[6]_i_1__3_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[7]_i_1__3_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[8]_i_1__3_n_0 ),
        .Q(Q[8]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[9] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[9]_i_1__0_n_0 ),
        .Q(Q[9]),
        .R(\count_value_i_reg[9]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair270" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_1 
       (.I0(Q[8]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ),
        .I2(Q[7]),
        .I3(Q[9]),
        .O(src_in_bin[8]));
  (* SOFT_HLUTNM = "soft_lutpair267" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11 
       (.I0(Q[5]),
        .I1(Q[3]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I3(Q[4]),
        .I4(Q[6]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair268" *) 
  LUT5 #(
    .INIT(32'hFFFFDD4D)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12 
       (.I0(\grdc.rd_data_count_i_reg[7] [1]),
        .I1(Q[1]),
        .I2(\grdc.rd_data_count_i_reg[7] [0]),
        .I3(Q[0]),
        .I4(Q[2]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair270" *) 
  LUT3 #(
    .INIT(8'hA9)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2 
       (.I0(Q[8]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ),
        .I2(Q[7]),
        .O(src_in_bin[7]));
  LUT6 #(
    .INIT(64'hFFFFFFFE00000001)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3 
       (.I0(Q[6]),
        .I1(Q[4]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[7]),
        .O(src_in_bin[6]));
  (* SOFT_HLUTNM = "soft_lutpair267" *) 
  LUT5 #(
    .INIT(32'hAAAAAAA9)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_4 
       (.I0(Q[6]),
        .I1(Q[4]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .O(src_in_bin[5]));
  (* SOFT_HLUTNM = "soft_lutpair271" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_5 
       (.I0(Q[4]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I2(Q[3]),
        .I3(Q[5]),
        .O(src_in_bin[4]));
  (* SOFT_HLUTNM = "soft_lutpair271" *) 
  LUT3 #(
    .INIT(8'hA9)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6 
       (.I0(Q[4]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I2(Q[3]),
        .O(src_in_bin[3]));
  LUT6 #(
    .INIT(64'hEFAAFFEF10550010)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_7 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(\grdc.rd_data_count_i_reg[7] [0]),
        .I3(Q[1]),
        .I4(\grdc.rd_data_count_i_reg[7] [1]),
        .I5(Q[3]),
        .O(src_in_bin[2]));
  (* SOFT_HLUTNM = "soft_lutpair268" *) 
  LUT5 #(
    .INIT(32'h9A55AA9A)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_8 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(\grdc.rd_data_count_i_reg[7] [0]),
        .I3(Q[1]),
        .I4(\grdc.rd_data_count_i_reg[7] [1]),
        .O(src_in_bin[1]));
  (* SOFT_HLUTNM = "soft_lutpair272" *) 
  LUT4 #(
    .INIT(16'h6696)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_9 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(\grdc.rd_data_count_i_reg[7] [0]),
        .I3(Q[0]),
        .O(src_in_bin[0]));
  LUT5 #(
    .INIT(32'hAABA5545)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(Q[0]),
        .O(\count_value_i_reg[7]_0 [0]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [7]),
        .O(\count_value_i_reg[7]_0 [7]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [6]),
        .O(\count_value_i_reg[7]_0 [6]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [5]),
        .O(\count_value_i_reg[7]_0 [5]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [4]),
        .O(\count_value_i_reg[7]_0 [4]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .O(\count_value_i_reg[7]_0 [3]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .O(\count_value_i_reg[7]_0 [2]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .O(\count_value_i_reg[7]_0 [1]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_5 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .I2(Q[0]),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I4(Q[2]),
        .I5(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .O(\count_value_i_reg[1]_0 ));
  LUT6 #(
    .INIT(64'h8200008200000000)) 
    \gen_pf_ic_rc.ram_empty_i_i_6 
       (.I0(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [7]),
        .I2(Q[7]),
        .I3(Q[8]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [8]),
        .I5(\gen_pf_ic_rc.ram_empty_i_i_8_n_0 ),
        .O(\reg_out_i_reg[7] ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.ram_empty_i_i_7 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [6]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_8 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [4]),
        .I2(Q[3]),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .I4(Q[5]),
        .I5(\gen_pf_ic_rc.ram_empty_i_reg [5]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_8_n_0 ));
  LUT4 #(
    .INIT(16'h00FB)) 
    \gen_sdpram.xpm_memory_base_inst_i_2 
       (.I0(\count_value_i_reg[0]_0 [0]),
        .I1(\count_value_i_reg[0]_0 [1]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .O(ram_rd_en_i));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_10 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [6]),
        .I2(Q[7]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [7]),
        .O(\grdc.rd_data_count_i[7]_i_10_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_11 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [5]),
        .I2(Q[6]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [6]),
        .O(\grdc.rd_data_count_i[7]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_12 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [4]),
        .I2(Q[5]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [5]),
        .O(\grdc.rd_data_count_i[7]_i_12_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_13 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [3]),
        .I2(Q[4]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [4]),
        .O(\grdc.rd_data_count_i[7]_i_13_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_14 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [2]),
        .I2(Q[3]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [3]),
        .O(\grdc.rd_data_count_i[7]_i_14_n_0 ));
  LUT5 #(
    .INIT(32'h2BD4D42B)) 
    \grdc.rd_data_count_i[7]_i_15 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(\grdc.rd_data_count_i_reg[9]_0 [1]),
        .I3(Q[2]),
        .I4(\grdc.rd_data_count_i_reg[9]_0 [2]),
        .O(\grdc.rd_data_count_i[7]_i_15_n_0 ));
  LUT5 #(
    .INIT(32'hD22D2DD2)) 
    \grdc.rd_data_count_i[7]_i_16 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(\grdc.rd_data_count_i_reg[9]_0 [1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .I4(Q[1]),
        .O(\grdc.rd_data_count_i[7]_i_16_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \grdc.rd_data_count_i[7]_i_17 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(\grdc.rd_data_count_i_reg[9]_0 [0]),
        .O(\grdc.rd_data_count_i[7]_i_17_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[9]_i_5 
       (.I0(Q[7]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [7]),
        .I2(Q[8]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [8]),
        .O(\grdc.rd_data_count_i[9]_i_5_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[7]_i_1 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\grdc.rd_data_count_i_reg[7]_i_1_n_0 ,\grdc.rd_data_count_i_reg[7]_i_1_n_1 ,\grdc.rd_data_count_i_reg[7]_i_1_n_2 ,\grdc.rd_data_count_i_reg[7]_i_1_n_3 ,\grdc.rd_data_count_i_reg[7]_i_1_n_4 ,\grdc.rd_data_count_i_reg[7]_i_1_n_5 ,\grdc.rd_data_count_i_reg[7]_i_1_n_6 ,\grdc.rd_data_count_i_reg[7]_i_1_n_7 }),
        .DI(DI),
        .O({D[6:0],\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({\grdc.rd_data_count_i[7]_i_10_n_0 ,\grdc.rd_data_count_i[7]_i_11_n_0 ,\grdc.rd_data_count_i[7]_i_12_n_0 ,\grdc.rd_data_count_i[7]_i_13_n_0 ,\grdc.rd_data_count_i[7]_i_14_n_0 ,\grdc.rd_data_count_i[7]_i_15_n_0 ,\grdc.rd_data_count_i[7]_i_16_n_0 ,\grdc.rd_data_count_i[7]_i_17_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[9]_i_2 
       (.CI(\grdc.rd_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_grdc.rd_data_count_i_reg[9]_i_2_CO_UNCONNECTED [7:1],\grdc.rd_data_count_i_reg[9]_i_2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\grdc.rd_data_count_i_reg[9] }),
        .O({\NLW_grdc.rd_data_count_i_reg[9]_i_2_O_UNCONNECTED [7:2],D[8:7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,S,\grdc.rd_data_count_i[9]_i_5_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized3_13
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[5]_0 ,
    wrst_busy,
    rst_d1,
    \gwdc.wr_data_count_i_reg[9] ,
    wr_clk);
  output [9:0]Q;
  output [8:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[5]_0 ;
  input wrst_busy;
  input rst_d1;
  input [9:0]\gwdc.wr_data_count_i_reg[9] ;
  input wr_clk;

  wire [8:0]D;
  wire [9:0]Q;
  wire \count_value_i[0]_i_1__1_n_0 ;
  wire \count_value_i[1]_i_1__1_n_0 ;
  wire \count_value_i[2]_i_1__1_n_0 ;
  wire \count_value_i[3]_i_1__1_n_0 ;
  wire \count_value_i[4]_i_1__1_n_0 ;
  wire \count_value_i[5]_i_1_n_0 ;
  wire \count_value_i[6]_i_1_n_0 ;
  wire \count_value_i[6]_i_2_n_0 ;
  wire \count_value_i[7]_i_1_n_0 ;
  wire \count_value_i[8]_i_1_n_0 ;
  wire \count_value_i[9]_i_1_n_0 ;
  wire \count_value_i[9]_i_2_n_0 ;
  wire \count_value_i_reg[5]_0 ;
  wire \gwdc.wr_data_count_i[7]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_3_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_4_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_5_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_6_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_7_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_8_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_9_n_0 ;
  wire \gwdc.wr_data_count_i[9]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[9]_i_3_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_1 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_2 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_3 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_4 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_5 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_6 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_7 ;
  wire [9:0]\gwdc.wr_data_count_i_reg[9] ;
  wire \gwdc.wr_data_count_i_reg[9]_i_1_n_7 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [0:0]\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:1]\NLW_gwdc.wr_data_count_i_reg[9]_i_1_CO_UNCONNECTED ;
  wire [7:2]\NLW_gwdc.wr_data_count_i_reg[9]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair278" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair278" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair277" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair277" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[5]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair276" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1 
       (.I0(Q[5]),
        .I1(\count_value_i[9]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair276" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1 
       (.I0(Q[6]),
        .I1(\count_value_i[9]_i_2_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[9]_i_1 
       (.I0(Q[7]),
        .I1(Q[5]),
        .I2(\count_value_i[9]_i_2_n_0 ),
        .I3(Q[6]),
        .I4(Q[8]),
        .I5(Q[9]),
        .O(\count_value_i[9]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[9]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[9]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__1_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[9] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[9]_i_1_n_0 ),
        .Q(Q[9]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_2 
       (.I0(Q[7]),
        .I1(\gwdc.wr_data_count_i_reg[9] [7]),
        .O(\gwdc.wr_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_3 
       (.I0(Q[6]),
        .I1(\gwdc.wr_data_count_i_reg[9] [6]),
        .O(\gwdc.wr_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_4 
       (.I0(Q[5]),
        .I1(\gwdc.wr_data_count_i_reg[9] [5]),
        .O(\gwdc.wr_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_5 
       (.I0(Q[4]),
        .I1(\gwdc.wr_data_count_i_reg[9] [4]),
        .O(\gwdc.wr_data_count_i[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_6 
       (.I0(Q[3]),
        .I1(\gwdc.wr_data_count_i_reg[9] [3]),
        .O(\gwdc.wr_data_count_i[7]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_7 
       (.I0(Q[2]),
        .I1(\gwdc.wr_data_count_i_reg[9] [2]),
        .O(\gwdc.wr_data_count_i[7]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_8 
       (.I0(Q[1]),
        .I1(\gwdc.wr_data_count_i_reg[9] [1]),
        .O(\gwdc.wr_data_count_i[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_9 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[9] [0]),
        .O(\gwdc.wr_data_count_i[7]_i_9_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[9]_i_2 
       (.I0(Q[9]),
        .I1(\gwdc.wr_data_count_i_reg[9] [9]),
        .O(\gwdc.wr_data_count_i[9]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[9]_i_3 
       (.I0(Q[8]),
        .I1(\gwdc.wr_data_count_i_reg[9] [8]),
        .O(\gwdc.wr_data_count_i[9]_i_3_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[7]_i_1 
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_1 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_2 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_3 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_4 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_5 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_6 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_7 }),
        .DI(Q[7:0]),
        .O({D[6:0],\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({\gwdc.wr_data_count_i[7]_i_2_n_0 ,\gwdc.wr_data_count_i[7]_i_3_n_0 ,\gwdc.wr_data_count_i[7]_i_4_n_0 ,\gwdc.wr_data_count_i[7]_i_5_n_0 ,\gwdc.wr_data_count_i[7]_i_6_n_0 ,\gwdc.wr_data_count_i[7]_i_7_n_0 ,\gwdc.wr_data_count_i[7]_i_8_n_0 ,\gwdc.wr_data_count_i[7]_i_9_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[9]_i_1 
       (.CI(\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_gwdc.wr_data_count_i_reg[9]_i_1_CO_UNCONNECTED [7:1],\gwdc.wr_data_count_i_reg[9]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,Q[8]}),
        .O({\NLW_gwdc.wr_data_count_i_reg[9]_i_1_O_UNCONNECTED [7:2],D[8:7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gwdc.wr_data_count_i[9]_i_2_n_0 ,\gwdc.wr_data_count_i[9]_i_3_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized3_3
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[5]_0 ,
    wrst_busy,
    rst_d1,
    \gwdc.wr_data_count_i_reg[9] ,
    wr_clk);
  output [9:0]Q;
  output [8:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[5]_0 ;
  input wrst_busy;
  input rst_d1;
  input [9:0]\gwdc.wr_data_count_i_reg[9] ;
  input wr_clk;

  wire [8:0]D;
  wire [9:0]Q;
  wire \count_value_i[0]_i_1__1_n_0 ;
  wire \count_value_i[1]_i_1__1_n_0 ;
  wire \count_value_i[2]_i_1__1_n_0 ;
  wire \count_value_i[3]_i_1__1_n_0 ;
  wire \count_value_i[4]_i_1__1_n_0 ;
  wire \count_value_i[5]_i_1_n_0 ;
  wire \count_value_i[6]_i_1_n_0 ;
  wire \count_value_i[6]_i_2_n_0 ;
  wire \count_value_i[7]_i_1_n_0 ;
  wire \count_value_i[8]_i_1_n_0 ;
  wire \count_value_i[9]_i_1_n_0 ;
  wire \count_value_i[9]_i_2_n_0 ;
  wire \count_value_i_reg[5]_0 ;
  wire \gwdc.wr_data_count_i[7]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_3_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_4_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_5_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_6_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_7_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_8_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_9_n_0 ;
  wire \gwdc.wr_data_count_i[9]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[9]_i_3_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_1 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_2 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_3 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_4 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_5 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_6 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_7 ;
  wire [9:0]\gwdc.wr_data_count_i_reg[9] ;
  wire \gwdc.wr_data_count_i_reg[9]_i_1_n_7 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [0:0]\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:1]\NLW_gwdc.wr_data_count_i_reg[9]_i_1_CO_UNCONNECTED ;
  wire [7:2]\NLW_gwdc.wr_data_count_i_reg[9]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair334" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair334" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair333" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair333" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[5]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair332" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1 
       (.I0(Q[5]),
        .I1(\count_value_i[9]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair332" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1 
       (.I0(Q[6]),
        .I1(\count_value_i[9]_i_2_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[9]_i_1 
       (.I0(Q[7]),
        .I1(Q[5]),
        .I2(\count_value_i[9]_i_2_n_0 ),
        .I3(Q[6]),
        .I4(Q[8]),
        .I5(Q[9]),
        .O(\count_value_i[9]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[9]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[9]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__1_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[9] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[9]_i_1_n_0 ),
        .Q(Q[9]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_2 
       (.I0(Q[7]),
        .I1(\gwdc.wr_data_count_i_reg[9] [7]),
        .O(\gwdc.wr_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_3 
       (.I0(Q[6]),
        .I1(\gwdc.wr_data_count_i_reg[9] [6]),
        .O(\gwdc.wr_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_4 
       (.I0(Q[5]),
        .I1(\gwdc.wr_data_count_i_reg[9] [5]),
        .O(\gwdc.wr_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_5 
       (.I0(Q[4]),
        .I1(\gwdc.wr_data_count_i_reg[9] [4]),
        .O(\gwdc.wr_data_count_i[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_6 
       (.I0(Q[3]),
        .I1(\gwdc.wr_data_count_i_reg[9] [3]),
        .O(\gwdc.wr_data_count_i[7]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_7 
       (.I0(Q[2]),
        .I1(\gwdc.wr_data_count_i_reg[9] [2]),
        .O(\gwdc.wr_data_count_i[7]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_8 
       (.I0(Q[1]),
        .I1(\gwdc.wr_data_count_i_reg[9] [1]),
        .O(\gwdc.wr_data_count_i[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_9 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[9] [0]),
        .O(\gwdc.wr_data_count_i[7]_i_9_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[9]_i_2 
       (.I0(Q[9]),
        .I1(\gwdc.wr_data_count_i_reg[9] [9]),
        .O(\gwdc.wr_data_count_i[9]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[9]_i_3 
       (.I0(Q[8]),
        .I1(\gwdc.wr_data_count_i_reg[9] [8]),
        .O(\gwdc.wr_data_count_i[9]_i_3_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[7]_i_1 
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_1 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_2 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_3 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_4 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_5 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_6 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_7 }),
        .DI(Q[7:0]),
        .O({D[6:0],\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({\gwdc.wr_data_count_i[7]_i_2_n_0 ,\gwdc.wr_data_count_i[7]_i_3_n_0 ,\gwdc.wr_data_count_i[7]_i_4_n_0 ,\gwdc.wr_data_count_i[7]_i_5_n_0 ,\gwdc.wr_data_count_i[7]_i_6_n_0 ,\gwdc.wr_data_count_i[7]_i_7_n_0 ,\gwdc.wr_data_count_i[7]_i_8_n_0 ,\gwdc.wr_data_count_i[7]_i_9_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[9]_i_1 
       (.CI(\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_gwdc.wr_data_count_i_reg[9]_i_1_CO_UNCONNECTED [7:1],\gwdc.wr_data_count_i_reg[9]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,Q[8]}),
        .O({\NLW_gwdc.wr_data_count_i_reg[9]_i_1_O_UNCONNECTED [7:2],D[8:7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gwdc.wr_data_count_i[9]_i_2_n_0 ,\gwdc.wr_data_count_i[9]_i_3_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized4
   (ram_empty_i0,
    E,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \gen_pf_ic_rc.ram_empty_i_reg_0 ,
    Q,
    rd_en,
    ram_empty_i,
    \gen_pf_ic_rc.ram_empty_i_reg_1 ,
    \count_value_i_reg[0]_0 ,
    rd_clk);
  output ram_empty_i0;
  input [0:0]E;
  input \gen_pf_ic_rc.ram_empty_i_reg ;
  input \gen_pf_ic_rc.ram_empty_i_reg_0 ;
  input [1:0]Q;
  input rd_en;
  input ram_empty_i;
  input [8:0]\gen_pf_ic_rc.ram_empty_i_reg_1 ;
  input \count_value_i_reg[0]_0 ;
  input rd_clk;

  wire [0:0]E;
  wire [1:0]Q;
  wire \count_value_i[0]_i_1__3_n_0 ;
  wire \count_value_i[1]_i_1__3_n_0 ;
  wire \count_value_i[2]_i_1__2_n_0 ;
  wire \count_value_i[3]_i_1__2_n_0 ;
  wire \count_value_i[4]_i_1__2_n_0 ;
  wire \count_value_i[5]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_2__2_n_0 ;
  wire \count_value_i[7]_i_1__2_n_0 ;
  wire \count_value_i[8]_i_1__2_n_0 ;
  wire \count_value_i[8]_i_2__1_n_0 ;
  wire \count_value_i_reg[0]_0 ;
  wire \count_value_i_reg_n_0_[0] ;
  wire \count_value_i_reg_n_0_[1] ;
  wire \count_value_i_reg_n_0_[2] ;
  wire \count_value_i_reg_n_0_[3] ;
  wire \count_value_i_reg_n_0_[4] ;
  wire \count_value_i_reg_n_0_[5] ;
  wire \count_value_i_reg_n_0_[6] ;
  wire \count_value_i_reg_n_0_[7] ;
  wire \count_value_i_reg_n_0_[8] ;
  wire \gen_pf_ic_rc.ram_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_3_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_reg ;
  wire \gen_pf_ic_rc.ram_empty_i_reg_0 ;
  wire [8:0]\gen_pf_ic_rc.ram_empty_i_reg_1 ;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire rd_en;

  LUT4 #(
    .INIT(16'h04FB)) 
    \count_value_i[0]_i_1__3 
       (.I0(rd_en),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(\count_value_i_reg_n_0_[0] ),
        .O(\count_value_i[0]_i_1__3_n_0 ));
  LUT5 #(
    .INIT(32'h04FFFB00)) 
    \count_value_i[1]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(rd_en),
        .I3(\count_value_i_reg_n_0_[0] ),
        .I4(\count_value_i_reg_n_0_[1] ),
        .O(\count_value_i[1]_i_1__3_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(\count_value_i_reg_n_0_[1] ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .O(\count_value_i[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair330" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[2] ),
        .I1(\count_value_i_reg_n_0_[1] ),
        .I2(\count_value_i_reg_n_0_[0] ),
        .I3(\count_value_i_reg_n_0_[3] ),
        .O(\count_value_i[3]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair330" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(\count_value_i_reg_n_0_[1] ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .I3(\count_value_i_reg_n_0_[3] ),
        .I4(\count_value_i_reg_n_0_[4] ),
        .O(\count_value_i[4]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[4] ),
        .I1(\count_value_i_reg_n_0_[3] ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .I3(\count_value_i[6]_i_2__2_n_0 ),
        .I4(\count_value_i_reg_n_0_[5] ),
        .O(\count_value_i[5]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__2 
       (.I0(\count_value_i[6]_i_2__2_n_0 ),
        .I1(\count_value_i_reg_n_0_[2] ),
        .I2(\count_value_i_reg_n_0_[3] ),
        .I3(\count_value_i_reg_n_0_[4] ),
        .I4(\count_value_i_reg_n_0_[5] ),
        .I5(\count_value_i_reg_n_0_[6] ),
        .O(\count_value_i[6]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h0000AA8A00000000)) 
    \count_value_i[6]_i_2__2 
       (.I0(\count_value_i_reg_n_0_[1] ),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(\count_value_i_reg_n_0_[0] ),
        .O(\count_value_i[6]_i_2__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair329" *) 
  LUT4 #(
    .INIT(16'hF708)) 
    \count_value_i[7]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[6] ),
        .I1(\count_value_i_reg_n_0_[5] ),
        .I2(\count_value_i[8]_i_2__1_n_0 ),
        .I3(\count_value_i_reg_n_0_[7] ),
        .O(\count_value_i[7]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair329" *) 
  LUT5 #(
    .INIT(32'hDFFF2000)) 
    \count_value_i[8]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[7] ),
        .I1(\count_value_i[8]_i_2__1_n_0 ),
        .I2(\count_value_i_reg_n_0_[5] ),
        .I3(\count_value_i_reg_n_0_[6] ),
        .I4(\count_value_i_reg_n_0_[8] ),
        .O(\count_value_i[8]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \count_value_i[8]_i_2__1 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(E),
        .I2(\count_value_i_reg_n_0_[1] ),
        .I3(\count_value_i_reg_n_0_[2] ),
        .I4(\count_value_i_reg_n_0_[3] ),
        .I5(\count_value_i_reg_n_0_[4] ),
        .O(\count_value_i[8]_i_2__1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__3_n_0 ),
        .Q(\count_value_i_reg_n_0_[0] ),
        .S(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__3_n_0 ),
        .Q(\count_value_i_reg_n_0_[1] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[2] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[3] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[4] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[5]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[5] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[6]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[6] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[7]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[7] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[8]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[8] ),
        .R(\count_value_i_reg[0]_0 ));
  LUT6 #(
    .INIT(64'hFFFF800080008000)) 
    \gen_pf_ic_rc.ram_empty_i_i_1 
       (.I0(\gen_pf_ic_rc.ram_empty_i_i_2_n_0 ),
        .I1(E),
        .I2(\gen_pf_ic_rc.ram_empty_i_i_3_n_0 ),
        .I3(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg ),
        .I5(\gen_pf_ic_rc.ram_empty_i_reg_0 ),
        .O(ram_empty_i0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_2 
       (.I0(\count_value_i_reg_n_0_[7] ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_1 [7]),
        .I2(\count_value_i_reg_n_0_[6] ),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg_1 [6]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_1 [8]),
        .I5(\count_value_i_reg_n_0_[8] ),
        .O(\gen_pf_ic_rc.ram_empty_i_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_3 
       (.I0(\count_value_i_reg_n_0_[1] ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_1 [1]),
        .I2(\count_value_i_reg_n_0_[0] ),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg_1 [0]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_1 [2]),
        .I5(\count_value_i_reg_n_0_[2] ),
        .O(\gen_pf_ic_rc.ram_empty_i_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_4 
       (.I0(\count_value_i_reg_n_0_[4] ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_1 [4]),
        .I2(\count_value_i_reg_n_0_[3] ),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg_1 [3]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_1 [5]),
        .I5(\count_value_i_reg_n_0_[5] ),
        .O(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized4_11
   (ram_empty_i0,
    E,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \gen_pf_ic_rc.ram_empty_i_reg_0 ,
    Q,
    rd_en,
    ram_empty_i,
    \gen_pf_ic_rc.ram_empty_i_reg_1 ,
    \count_value_i_reg[0]_0 ,
    rd_clk);
  output ram_empty_i0;
  input [0:0]E;
  input \gen_pf_ic_rc.ram_empty_i_reg ;
  input \gen_pf_ic_rc.ram_empty_i_reg_0 ;
  input [1:0]Q;
  input rd_en;
  input ram_empty_i;
  input [8:0]\gen_pf_ic_rc.ram_empty_i_reg_1 ;
  input \count_value_i_reg[0]_0 ;
  input rd_clk;

  wire [0:0]E;
  wire [1:0]Q;
  wire \count_value_i[0]_i_1__3_n_0 ;
  wire \count_value_i[1]_i_1__3_n_0 ;
  wire \count_value_i[2]_i_1__2_n_0 ;
  wire \count_value_i[3]_i_1__2_n_0 ;
  wire \count_value_i[4]_i_1__2_n_0 ;
  wire \count_value_i[5]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_2__2_n_0 ;
  wire \count_value_i[7]_i_1__2_n_0 ;
  wire \count_value_i[8]_i_1__2_n_0 ;
  wire \count_value_i[8]_i_2__1_n_0 ;
  wire \count_value_i_reg[0]_0 ;
  wire \count_value_i_reg_n_0_[0] ;
  wire \count_value_i_reg_n_0_[1] ;
  wire \count_value_i_reg_n_0_[2] ;
  wire \count_value_i_reg_n_0_[3] ;
  wire \count_value_i_reg_n_0_[4] ;
  wire \count_value_i_reg_n_0_[5] ;
  wire \count_value_i_reg_n_0_[6] ;
  wire \count_value_i_reg_n_0_[7] ;
  wire \count_value_i_reg_n_0_[8] ;
  wire \gen_pf_ic_rc.ram_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_3_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_reg ;
  wire \gen_pf_ic_rc.ram_empty_i_reg_0 ;
  wire [8:0]\gen_pf_ic_rc.ram_empty_i_reg_1 ;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire rd_en;

  LUT4 #(
    .INIT(16'h04FB)) 
    \count_value_i[0]_i_1__3 
       (.I0(rd_en),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(\count_value_i_reg_n_0_[0] ),
        .O(\count_value_i[0]_i_1__3_n_0 ));
  LUT5 #(
    .INIT(32'h04FFFB00)) 
    \count_value_i[1]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(rd_en),
        .I3(\count_value_i_reg_n_0_[0] ),
        .I4(\count_value_i_reg_n_0_[1] ),
        .O(\count_value_i[1]_i_1__3_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(\count_value_i_reg_n_0_[1] ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .O(\count_value_i[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair274" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[2] ),
        .I1(\count_value_i_reg_n_0_[1] ),
        .I2(\count_value_i_reg_n_0_[0] ),
        .I3(\count_value_i_reg_n_0_[3] ),
        .O(\count_value_i[3]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair274" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(\count_value_i_reg_n_0_[1] ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .I3(\count_value_i_reg_n_0_[3] ),
        .I4(\count_value_i_reg_n_0_[4] ),
        .O(\count_value_i[4]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[4] ),
        .I1(\count_value_i_reg_n_0_[3] ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .I3(\count_value_i[6]_i_2__2_n_0 ),
        .I4(\count_value_i_reg_n_0_[5] ),
        .O(\count_value_i[5]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__2 
       (.I0(\count_value_i[6]_i_2__2_n_0 ),
        .I1(\count_value_i_reg_n_0_[2] ),
        .I2(\count_value_i_reg_n_0_[3] ),
        .I3(\count_value_i_reg_n_0_[4] ),
        .I4(\count_value_i_reg_n_0_[5] ),
        .I5(\count_value_i_reg_n_0_[6] ),
        .O(\count_value_i[6]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h0000AA8A00000000)) 
    \count_value_i[6]_i_2__2 
       (.I0(\count_value_i_reg_n_0_[1] ),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(\count_value_i_reg_n_0_[0] ),
        .O(\count_value_i[6]_i_2__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair273" *) 
  LUT4 #(
    .INIT(16'hF708)) 
    \count_value_i[7]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[6] ),
        .I1(\count_value_i_reg_n_0_[5] ),
        .I2(\count_value_i[8]_i_2__1_n_0 ),
        .I3(\count_value_i_reg_n_0_[7] ),
        .O(\count_value_i[7]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair273" *) 
  LUT5 #(
    .INIT(32'hDFFF2000)) 
    \count_value_i[8]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[7] ),
        .I1(\count_value_i[8]_i_2__1_n_0 ),
        .I2(\count_value_i_reg_n_0_[5] ),
        .I3(\count_value_i_reg_n_0_[6] ),
        .I4(\count_value_i_reg_n_0_[8] ),
        .O(\count_value_i[8]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \count_value_i[8]_i_2__1 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(E),
        .I2(\count_value_i_reg_n_0_[1] ),
        .I3(\count_value_i_reg_n_0_[2] ),
        .I4(\count_value_i_reg_n_0_[3] ),
        .I5(\count_value_i_reg_n_0_[4] ),
        .O(\count_value_i[8]_i_2__1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__3_n_0 ),
        .Q(\count_value_i_reg_n_0_[0] ),
        .S(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__3_n_0 ),
        .Q(\count_value_i_reg_n_0_[1] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[2] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[3] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[4] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[5]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[5] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[6]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[6] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[7]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[7] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[8]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[8] ),
        .R(\count_value_i_reg[0]_0 ));
  LUT6 #(
    .INIT(64'hFFFF800080008000)) 
    \gen_pf_ic_rc.ram_empty_i_i_1 
       (.I0(\gen_pf_ic_rc.ram_empty_i_i_2_n_0 ),
        .I1(E),
        .I2(\gen_pf_ic_rc.ram_empty_i_i_3_n_0 ),
        .I3(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg ),
        .I5(\gen_pf_ic_rc.ram_empty_i_reg_0 ),
        .O(ram_empty_i0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_2 
       (.I0(\count_value_i_reg_n_0_[7] ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_1 [7]),
        .I2(\count_value_i_reg_n_0_[6] ),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg_1 [6]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_1 [8]),
        .I5(\count_value_i_reg_n_0_[8] ),
        .O(\gen_pf_ic_rc.ram_empty_i_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_3 
       (.I0(\count_value_i_reg_n_0_[1] ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_1 [1]),
        .I2(\count_value_i_reg_n_0_[0] ),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg_1 [0]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_1 [2]),
        .I5(\count_value_i_reg_n_0_[2] ),
        .O(\gen_pf_ic_rc.ram_empty_i_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_4 
       (.I0(\count_value_i_reg_n_0_[4] ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_1 [4]),
        .I2(\count_value_i_reg_n_0_[3] ),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg_1 [3]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_1 [5]),
        .I5(\count_value_i_reg_n_0_[5] ),
        .O(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized4_14
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[5]_0 ,
    wrst_busy,
    rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] ,
    wr_clk);
  output [8:0]Q;
  output [7:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[5]_0 ;
  input wrst_busy;
  input rst_d1;
  input [8:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] ;
  input wr_clk;

  wire [7:0]D;
  wire [8:0]Q;
  wire \count_value_i[0]_i_1__0_n_0 ;
  wire \count_value_i[1]_i_1__0_n_0 ;
  wire \count_value_i[2]_i_1__0_n_0 ;
  wire \count_value_i[3]_i_1__0_n_0 ;
  wire \count_value_i[4]_i_1__0_n_0 ;
  wire \count_value_i[5]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_2__0_n_0 ;
  wire \count_value_i[7]_i_1__0_n_0 ;
  wire \count_value_i[8]_i_1__0_n_0 ;
  wire \count_value_i[8]_i_2_n_0 ;
  wire \count_value_i_reg[5]_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[9]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 ;
  wire [8:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [0:0]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED ;
  wire [7:0]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1_CO_UNCONNECTED ;
  wire [7:1]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__0 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair281" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair281" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair280" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair280" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__0 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__0_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__0_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__0 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[5]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair279" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__0 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair279" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1__0 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__0_n_0 ),
        .Q(Q[0]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__0_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__0_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__0_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__0_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__0_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__0_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__0_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1__0_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [7]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [6]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [5]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [4]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [3]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [2]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [1]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [0]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[9]_i_2 
       (.I0(Q[8]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [8]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[9]_i_2_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1 
       (.CI(wr_pntr_plus1_pf_carry),
        .CI_TOP(1'b0),
        .CO({\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 }),
        .DI(Q[7:0]),
        .O({D[6:0],\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED [0]}),
        .S({\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1 
       (.CI(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1_O_UNCONNECTED [7:1],D[7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[9]_i_2_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized4_4
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[5]_0 ,
    wrst_busy,
    rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] ,
    wr_clk);
  output [8:0]Q;
  output [7:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[5]_0 ;
  input wrst_busy;
  input rst_d1;
  input [8:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] ;
  input wr_clk;

  wire [7:0]D;
  wire [8:0]Q;
  wire \count_value_i[0]_i_1__0_n_0 ;
  wire \count_value_i[1]_i_1__0_n_0 ;
  wire \count_value_i[2]_i_1__0_n_0 ;
  wire \count_value_i[3]_i_1__0_n_0 ;
  wire \count_value_i[4]_i_1__0_n_0 ;
  wire \count_value_i[5]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_2__0_n_0 ;
  wire \count_value_i[7]_i_1__0_n_0 ;
  wire \count_value_i[8]_i_1__0_n_0 ;
  wire \count_value_i[8]_i_2_n_0 ;
  wire \count_value_i_reg[5]_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[9]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 ;
  wire [8:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [0:0]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED ;
  wire [7:0]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1_CO_UNCONNECTED ;
  wire [7:1]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__0 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair337" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair337" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair336" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair336" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__0 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__0_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__0_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__0 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[5]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair335" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__0 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair335" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1__0 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__0_n_0 ),
        .Q(Q[0]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__0_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__0_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__0_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__0_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__0_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__0_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__0_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1__0_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [7]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [6]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [5]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [4]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [3]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [2]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [1]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [0]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[9]_i_2 
       (.I0(Q[8]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [8]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[9]_i_2_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1 
       (.CI(wr_pntr_plus1_pf_carry),
        .CI_TOP(1'b0),
        .CO({\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 }),
        .DI(Q[7:0]),
        .O({D[6:0],\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED [0]}),
        .S({\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1 
       (.CI(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1_O_UNCONNECTED [7:1],D[7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[9]_i_2_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized5
   (Q,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[5]_0 ,
    wrst_busy,
    rst_d1,
    wr_clk);
  output [8:0]Q;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[5]_0 ;
  input wrst_busy;
  input rst_d1;
  input wr_clk;

  wire [8:0]Q;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[2]_i_1_n_0 ;
  wire \count_value_i[3]_i_1_n_0 ;
  wire \count_value_i[4]_i_1_n_0 ;
  wire \count_value_i[5]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_2__1_n_0 ;
  wire \count_value_i[7]_i_1__1_n_0 ;
  wire \count_value_i[8]_i_1__1_n_0 ;
  wire \count_value_i[8]_i_2__0_n_0 ;
  wire \count_value_i_reg[5]_0 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  (* SOFT_HLUTNM = "soft_lutpair340" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair340" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair339" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair339" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__1_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__1_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__1 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[5]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair338" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__1 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair338" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1__1 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(Q[1]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1__1_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized5_15
   (Q,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[5]_0 ,
    wrst_busy,
    rst_d1,
    wr_clk);
  output [8:0]Q;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[5]_0 ;
  input wrst_busy;
  input rst_d1;
  input wr_clk;

  wire [8:0]Q;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[2]_i_1_n_0 ;
  wire \count_value_i[3]_i_1_n_0 ;
  wire \count_value_i[4]_i_1_n_0 ;
  wire \count_value_i[5]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_2__1_n_0 ;
  wire \count_value_i[7]_i_1__1_n_0 ;
  wire \count_value_i[8]_i_1__1_n_0 ;
  wire \count_value_i[8]_i_2__0_n_0 ;
  wire \count_value_i_reg[5]_0 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  (* SOFT_HLUTNM = "soft_lutpair284" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair284" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair283" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair283" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__1_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__1_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__1 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[5]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair282" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__1 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair282" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1__1 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(Q[1]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1__1_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized6
   (D,
    Q,
    \reg_out_i_reg[2] ,
    E,
    src_in_bin,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] ,
    ram_empty_i,
    rd_en,
    \count_value_i_reg[0]_0 ,
    \grdc.rd_data_count_i_reg[4] ,
    \grdc.rd_data_count_i_reg[4]_0 ,
    \grdc.rd_data_count_i_reg[4]_1 ,
    \src_gray_ff_reg[4] ,
    \count_value_i_reg[4]_0 ,
    rd_clk);
  output [1:0]D;
  output [3:0]Q;
  output [1:0]\reg_out_i_reg[2] ;
  output [0:0]E;
  output [3:0]src_in_bin;
  input [3:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] ;
  input ram_empty_i;
  input rd_en;
  input [1:0]\count_value_i_reg[0]_0 ;
  input \grdc.rd_data_count_i_reg[4] ;
  input [3:0]\grdc.rd_data_count_i_reg[4]_0 ;
  input \grdc.rd_data_count_i_reg[4]_1 ;
  input [1:0]\src_gray_ff_reg[4] ;
  input \count_value_i_reg[4]_0 ;
  input rd_clk;

  wire [1:0]D;
  wire [0:0]E;
  wire [3:0]Q;
  wire \count_value_i[0]_i_1__4_n_0 ;
  wire \count_value_i[1]_i_1__4_n_0 ;
  wire \count_value_i[2]_i_1__3_n_0 ;
  wire \count_value_i[3]_i_1__3_n_0 ;
  wire \count_value_i[4]_i_1__0_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \count_value_i_reg[4]_0 ;
  wire \count_value_i_reg_n_0_[4] ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_3_n_0 ;
  wire [3:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] ;
  wire \grdc.rd_data_count_i[4]_i_3_n_0 ;
  wire \grdc.rd_data_count_i[4]_i_6_n_0 ;
  wire \grdc.rd_data_count_i_reg[4] ;
  wire [3:0]\grdc.rd_data_count_i_reg[4]_0 ;
  wire \grdc.rd_data_count_i_reg[4]_1 ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [1:0]\reg_out_i_reg[2] ;
  wire [1:0]\src_gray_ff_reg[4] ;
  wire [3:0]src_in_bin;

  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT4 #(
    .INIT(16'h10EF)) 
    \count_value_i[0]_i_1__4 
       (.I0(rd_en),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(Q[0]),
        .O(\count_value_i[0]_i_1__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__4 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__3 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(\count_value_i_reg_n_0_[4] ),
        .O(\count_value_i[4]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__4_n_0 ),
        .Q(Q[0]),
        .R(\count_value_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__4_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__3_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__3_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1__0_n_0 ),
        .Q(\count_value_i_reg_n_0_[4] ),
        .R(\count_value_i_reg[4]_0 ));
  LUT6 #(
    .INIT(64'hFFFFEAFE00001501)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_1 
       (.I0(Q[3]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6_n_0 ),
        .I2(Q[1]),
        .I3(\src_gray_ff_reg[4] [1]),
        .I4(Q[2]),
        .I5(\count_value_i_reg_n_0_[4] ),
        .O(src_in_bin[3]));
  LUT6 #(
    .INIT(64'hFBFBBAFB04044504)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2 
       (.I0(Q[2]),
        .I1(\src_gray_ff_reg[4] [1]),
        .I2(Q[1]),
        .I3(\src_gray_ff_reg[4] [0]),
        .I4(Q[0]),
        .I5(Q[3]),
        .O(src_in_bin[2]));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT5 #(
    .INIT(32'hB0FB4F04)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[4] [0]),
        .I2(Q[1]),
        .I3(\src_gray_ff_reg[4] [1]),
        .I4(Q[2]),
        .O(src_in_bin[1]));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_5 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[4] [0]),
        .O(src_in_bin[0]));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[4] [0]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6_n_0 ));
  LUT5 #(
    .INIT(32'h718E8E71)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[2]_i_1 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2_n_0 ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [1]),
        .I2(Q[1]),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [2]),
        .I4(Q[2]),
        .O(D[0]));
  LUT6 #(
    .INIT(64'h2BFF002BD400FFD4)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_1 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [1]),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [2]),
        .I4(Q[2]),
        .I5(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_3_n_0 ),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hDDDFDDDD44454444)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2 
       (.I0(Q[0]),
        .I1(ram_empty_i),
        .I2(rd_en),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(\count_value_i_reg[0]_0 [1]),
        .I5(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [0]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_3 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [3]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h00FD)) 
    \gen_sdpram.xpm_memory_base_inst_i_2 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .O(E));
  LUT6 #(
    .INIT(64'h1EE1788787781EE1)) 
    \grdc.rd_data_count_i[3]_i_1 
       (.I0(\grdc.rd_data_count_i_reg[4] ),
        .I1(\grdc.rd_data_count_i[4]_i_3_n_0 ),
        .I2(\grdc.rd_data_count_i_reg[4]_0 [2]),
        .I3(Q[3]),
        .I4(\grdc.rd_data_count_i_reg[4]_0 [1]),
        .I5(Q[2]),
        .O(\reg_out_i_reg[2] [0]));
  LUT6 #(
    .INIT(64'h1701FF7FE8FE0080)) 
    \grdc.rd_data_count_i[4]_i_2 
       (.I0(\grdc.rd_data_count_i[4]_i_3_n_0 ),
        .I1(\grdc.rd_data_count_i_reg[4] ),
        .I2(\grdc.rd_data_count_i_reg[4]_0 [1]),
        .I3(Q[2]),
        .I4(\grdc.rd_data_count_i_reg[4]_1 ),
        .I5(\grdc.rd_data_count_i[4]_i_6_n_0 ),
        .O(\reg_out_i_reg[2] [1]));
  LUT3 #(
    .INIT(8'hD4)) 
    \grdc.rd_data_count_i[4]_i_3 
       (.I0(Q[1]),
        .I1(\src_gray_ff_reg[4] [1]),
        .I2(\grdc.rd_data_count_i_reg[4]_0 [0]),
        .O(\grdc.rd_data_count_i[4]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[4]_i_6 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[4]_0 [2]),
        .I2(\count_value_i_reg_n_0_[4] ),
        .I3(\grdc.rd_data_count_i_reg[4]_0 [3]),
        .O(\grdc.rd_data_count_i[4]_i_6_n_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized6_52
   (D,
    Q,
    \gwdc.wr_data_count_i_reg[2] ,
    wrst_busy,
    E,
    wr_clk);
  output [0:0]D;
  output [4:0]Q;
  input [2:0]\gwdc.wr_data_count_i_reg[2] ;
  input wrst_busy;
  input [0:0]E;
  input wr_clk;

  wire [0:0]D;
  wire [0:0]E;
  wire [4:0]Q;
  wire \count_value_i[0]_i_1__1_n_0 ;
  wire \count_value_i[1]_i_1__1_n_0 ;
  wire \count_value_i[2]_i_1__1_n_0 ;
  wire \count_value_i[3]_i_1__1_n_0 ;
  wire \count_value_i[4]_i_1_n_0 ;
  wire [2:0]\gwdc.wr_data_count_i_reg[2] ;
  wire wr_clk;
  wire wrst_busy;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__1_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  LUT6 #(
    .INIT(64'h4F04B0FBB0FB4F04)) 
    \gwdc.wr_data_count_i[2]_i_1 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[2] [0]),
        .I2(Q[1]),
        .I3(\gwdc.wr_data_count_i_reg[2] [1]),
        .I4(\gwdc.wr_data_count_i_reg[2] [2]),
        .I5(Q[2]),
        .O(D));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized6_59
   (D,
    Q,
    \reg_out_i_reg[2] ,
    E,
    src_in_bin,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] ,
    ram_empty_i,
    rd_en,
    \count_value_i_reg[0]_0 ,
    \grdc.rd_data_count_i_reg[4] ,
    \grdc.rd_data_count_i_reg[4]_0 ,
    \grdc.rd_data_count_i_reg[4]_1 ,
    \src_gray_ff_reg[4] ,
    \count_value_i_reg[4]_0 ,
    rd_clk);
  output [1:0]D;
  output [3:0]Q;
  output [1:0]\reg_out_i_reg[2] ;
  output [0:0]E;
  output [3:0]src_in_bin;
  input [3:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] ;
  input ram_empty_i;
  input rd_en;
  input [1:0]\count_value_i_reg[0]_0 ;
  input \grdc.rd_data_count_i_reg[4] ;
  input [3:0]\grdc.rd_data_count_i_reg[4]_0 ;
  input \grdc.rd_data_count_i_reg[4]_1 ;
  input [1:0]\src_gray_ff_reg[4] ;
  input \count_value_i_reg[4]_0 ;
  input rd_clk;

  wire [1:0]D;
  wire [0:0]E;
  wire [3:0]Q;
  wire \count_value_i[0]_i_1__4_n_0 ;
  wire \count_value_i[1]_i_1__4_n_0 ;
  wire \count_value_i[2]_i_1__3_n_0 ;
  wire \count_value_i[3]_i_1__3_n_0 ;
  wire \count_value_i[4]_i_1__0_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \count_value_i_reg[4]_0 ;
  wire \count_value_i_reg_n_0_[4] ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_3_n_0 ;
  wire [3:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] ;
  wire \grdc.rd_data_count_i[4]_i_3_n_0 ;
  wire \grdc.rd_data_count_i[4]_i_6_n_0 ;
  wire \grdc.rd_data_count_i_reg[4] ;
  wire [3:0]\grdc.rd_data_count_i_reg[4]_0 ;
  wire \grdc.rd_data_count_i_reg[4]_1 ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [1:0]\reg_out_i_reg[2] ;
  wire [1:0]\src_gray_ff_reg[4] ;
  wire [3:0]src_in_bin;

  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT4 #(
    .INIT(16'h10EF)) 
    \count_value_i[0]_i_1__4 
       (.I0(rd_en),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(Q[0]),
        .O(\count_value_i[0]_i_1__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__4 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__3 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(\count_value_i_reg_n_0_[4] ),
        .O(\count_value_i[4]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__4_n_0 ),
        .Q(Q[0]),
        .R(\count_value_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__4_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__3_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__3_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1__0_n_0 ),
        .Q(\count_value_i_reg_n_0_[4] ),
        .R(\count_value_i_reg[4]_0 ));
  LUT6 #(
    .INIT(64'hFFFFEAFE00001501)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_1 
       (.I0(Q[3]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6_n_0 ),
        .I2(Q[1]),
        .I3(\src_gray_ff_reg[4] [1]),
        .I4(Q[2]),
        .I5(\count_value_i_reg_n_0_[4] ),
        .O(src_in_bin[3]));
  LUT6 #(
    .INIT(64'hFBFBBAFB04044504)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2 
       (.I0(Q[2]),
        .I1(\src_gray_ff_reg[4] [1]),
        .I2(Q[1]),
        .I3(\src_gray_ff_reg[4] [0]),
        .I4(Q[0]),
        .I5(Q[3]),
        .O(src_in_bin[2]));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT5 #(
    .INIT(32'hB0FB4F04)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[4] [0]),
        .I2(Q[1]),
        .I3(\src_gray_ff_reg[4] [1]),
        .I4(Q[2]),
        .O(src_in_bin[1]));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_5 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[4] [0]),
        .O(src_in_bin[0]));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[4] [0]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6_n_0 ));
  LUT5 #(
    .INIT(32'h718E8E71)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[2]_i_1 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2_n_0 ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [1]),
        .I2(Q[1]),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [2]),
        .I4(Q[2]),
        .O(D[0]));
  LUT6 #(
    .INIT(64'h2BFF002BD400FFD4)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_1 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [1]),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [2]),
        .I4(Q[2]),
        .I5(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_3_n_0 ),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hDDDFDDDD44454444)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2 
       (.I0(Q[0]),
        .I1(ram_empty_i),
        .I2(rd_en),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(\count_value_i_reg[0]_0 [1]),
        .I5(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [0]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_3 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [3]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h00FD)) 
    \gen_sdpram.xpm_memory_base_inst_i_2 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .O(E));
  LUT6 #(
    .INIT(64'h1EE1788787781EE1)) 
    \grdc.rd_data_count_i[3]_i_1 
       (.I0(\grdc.rd_data_count_i_reg[4] ),
        .I1(\grdc.rd_data_count_i[4]_i_3_n_0 ),
        .I2(\grdc.rd_data_count_i_reg[4]_0 [2]),
        .I3(Q[3]),
        .I4(\grdc.rd_data_count_i_reg[4]_0 [1]),
        .I5(Q[2]),
        .O(\reg_out_i_reg[2] [0]));
  LUT6 #(
    .INIT(64'h1701FF7FE8FE0080)) 
    \grdc.rd_data_count_i[4]_i_2 
       (.I0(\grdc.rd_data_count_i[4]_i_3_n_0 ),
        .I1(\grdc.rd_data_count_i_reg[4] ),
        .I2(\grdc.rd_data_count_i_reg[4]_0 [1]),
        .I3(Q[2]),
        .I4(\grdc.rd_data_count_i_reg[4]_1 ),
        .I5(\grdc.rd_data_count_i[4]_i_6_n_0 ),
        .O(\reg_out_i_reg[2] [1]));
  LUT3 #(
    .INIT(8'hD4)) 
    \grdc.rd_data_count_i[4]_i_3 
       (.I0(Q[1]),
        .I1(\src_gray_ff_reg[4] [1]),
        .I2(\grdc.rd_data_count_i_reg[4]_0 [0]),
        .O(\grdc.rd_data_count_i[4]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[4]_i_6 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[4]_0 [2]),
        .I2(\count_value_i_reg_n_0_[4] ),
        .I3(\grdc.rd_data_count_i_reg[4]_0 [3]),
        .O(\grdc.rd_data_count_i[4]_i_6_n_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized6_62
   (D,
    Q,
    \gwdc.wr_data_count_i_reg[2] ,
    wrst_busy,
    E,
    wr_clk);
  output [0:0]D;
  output [4:0]Q;
  input [2:0]\gwdc.wr_data_count_i_reg[2] ;
  input wrst_busy;
  input [0:0]E;
  input wr_clk;

  wire [0:0]D;
  wire [0:0]E;
  wire [4:0]Q;
  wire \count_value_i[0]_i_1__1_n_0 ;
  wire \count_value_i[1]_i_1__1_n_0 ;
  wire \count_value_i[2]_i_1__1_n_0 ;
  wire \count_value_i[3]_i_1__1_n_0 ;
  wire \count_value_i[4]_i_1_n_0 ;
  wire [2:0]\gwdc.wr_data_count_i_reg[2] ;
  wire wr_clk;
  wire wrst_busy;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__1_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  LUT6 #(
    .INIT(64'h4F04B0FBB0FB4F04)) 
    \gwdc.wr_data_count_i[2]_i_1 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[2] [0]),
        .I2(Q[1]),
        .I3(\gwdc.wr_data_count_i_reg[2] [1]),
        .I4(\gwdc.wr_data_count_i_reg[2] [2]),
        .I5(Q[2]),
        .O(D));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized7
   (Q,
    \count_value_i_reg[1]_0 ,
    rd_en,
    \count_value_i_reg[0]_0 ,
    E,
    rd_clk);
  output [3:0]Q;
  input [1:0]\count_value_i_reg[1]_0 ;
  input rd_en;
  input \count_value_i_reg[0]_0 ;
  input [0:0]E;
  input rd_clk;

  wire [0:0]E;
  wire [3:0]Q;
  wire \count_value_i[0]_i_1__2_n_0 ;
  wire \count_value_i[1]_i_1__3_n_0 ;
  wire \count_value_i[2]_i_1__2_n_0 ;
  wire \count_value_i[3]_i_1__2_n_0 ;
  wire \count_value_i_reg[0]_0 ;
  wire [1:0]\count_value_i_reg[1]_0 ;
  wire rd_clk;
  wire rd_en;

  LUT4 #(
    .INIT(16'h10EF)) 
    \count_value_i[0]_i_1__2 
       (.I0(rd_en),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(\count_value_i_reg[1]_0 [1]),
        .I3(Q[0]),
        .O(\count_value_i[0]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__3 
       (.I0(\count_value_i_reg[1]_0 [1]),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__2 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__2_n_0 ),
        .Q(Q[0]),
        .S(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__3_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__2_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__2_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized7_53
   (D,
    Q,
    \count_value_i_reg[3]_0 ,
    E,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ,
    wrst_busy,
    wr_clk);
  output [0:0]D;
  output [2:0]Q;
  output \count_value_i_reg[3]_0 ;
  input [0:0]E;
  input [2:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ;
  input wrst_busy;
  input wr_clk;

  wire [0:0]D;
  wire [0:0]E;
  wire [2:0]Q;
  wire \count_value_i[0]_i_1__0_n_0 ;
  wire \count_value_i[1]_i_1__0_n_0 ;
  wire \count_value_i[2]_i_1__0_n_0 ;
  wire \count_value_i[3]_i_1__0_n_0 ;
  wire \count_value_i_reg[3]_0 ;
  wire [2:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ;
  wire wr_clk;
  wire [4:4]wr_pntr_plus1_pf;
  wire wrst_busy;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__0 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(wr_pntr_plus1_pf),
        .O(\count_value_i[3]_i_1__0_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__0_n_0 ),
        .Q(Q[0]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__0_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__0_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__0_n_0 ),
        .Q(wr_pntr_plus1_pf),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2 
       (.I0(wr_pntr_plus1_pf),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [2]),
        .O(\count_value_i_reg[3]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT5 #(
    .INIT(32'h718E8E71)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[2]_i_1 
       (.I0(E),
        .I1(Q[0]),
        .I2(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [0]),
        .I3(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [1]),
        .I4(Q[1]),
        .O(D));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized7_60
   (Q,
    \count_value_i_reg[1]_0 ,
    rd_en,
    \count_value_i_reg[0]_0 ,
    E,
    rd_clk);
  output [3:0]Q;
  input [1:0]\count_value_i_reg[1]_0 ;
  input rd_en;
  input \count_value_i_reg[0]_0 ;
  input [0:0]E;
  input rd_clk;

  wire [0:0]E;
  wire [3:0]Q;
  wire \count_value_i[0]_i_1__2_n_0 ;
  wire \count_value_i[1]_i_1__3_n_0 ;
  wire \count_value_i[2]_i_1__2_n_0 ;
  wire \count_value_i[3]_i_1__2_n_0 ;
  wire \count_value_i_reg[0]_0 ;
  wire [1:0]\count_value_i_reg[1]_0 ;
  wire rd_clk;
  wire rd_en;

  LUT4 #(
    .INIT(16'h10EF)) 
    \count_value_i[0]_i_1__2 
       (.I0(rd_en),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(\count_value_i_reg[1]_0 [1]),
        .I3(Q[0]),
        .O(\count_value_i[0]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__3 
       (.I0(\count_value_i_reg[1]_0 [1]),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__2 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__2_n_0 ),
        .Q(Q[0]),
        .S(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__3_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__2_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__2_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized7_63
   (D,
    Q,
    \count_value_i_reg[3]_0 ,
    E,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ,
    wrst_busy,
    wr_clk);
  output [0:0]D;
  output [2:0]Q;
  output \count_value_i_reg[3]_0 ;
  input [0:0]E;
  input [2:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ;
  input wrst_busy;
  input wr_clk;

  wire [0:0]D;
  wire [0:0]E;
  wire [2:0]Q;
  wire \count_value_i[0]_i_1__0_n_0 ;
  wire \count_value_i[1]_i_1__0_n_0 ;
  wire \count_value_i[2]_i_1__0_n_0 ;
  wire \count_value_i[3]_i_1__0_n_0 ;
  wire \count_value_i_reg[3]_0 ;
  wire [2:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ;
  wire wr_clk;
  wire [4:4]wr_pntr_plus1_pf;
  wire wrst_busy;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__0 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(wr_pntr_plus1_pf),
        .O(\count_value_i[3]_i_1__0_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__0_n_0 ),
        .Q(Q[0]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__0_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__0_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__0_n_0 ),
        .Q(wr_pntr_plus1_pf),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2 
       (.I0(wr_pntr_plus1_pf),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [2]),
        .O(\count_value_i_reg[3]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT5 #(
    .INIT(32'h718E8E71)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[2]_i_1 
       (.I0(E),
        .I1(Q[0]),
        .I2(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [0]),
        .I3(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [1]),
        .I4(Q[1]),
        .O(D));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized8
   (\count_value_i_reg[3]_0 ,
    \count_value_i_reg[2]_0 ,
    Q,
    wrst_busy,
    E,
    wr_clk);
  output \count_value_i_reg[3]_0 ;
  output [2:0]\count_value_i_reg[2]_0 ;
  input [0:0]Q;
  input wrst_busy;
  input [0:0]E;
  input wr_clk;

  wire [0:0]E;
  wire [0:0]Q;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[2]_i_1_n_0 ;
  wire \count_value_i[3]_i_1_n_0 ;
  wire [2:0]\count_value_i_reg[2]_0 ;
  wire \count_value_i_reg[3]_0 ;
  wire \count_value_i_reg_n_0_[3] ;
  wire wr_clk;
  wire wrst_busy;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1 
       (.I0(\count_value_i_reg[2]_0 [0]),
        .O(\count_value_i[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1 
       (.I0(\count_value_i_reg[2]_0 [0]),
        .I1(\count_value_i_reg[2]_0 [1]),
        .O(\count_value_i[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1 
       (.I0(\count_value_i_reg[2]_0 [0]),
        .I1(\count_value_i_reg[2]_0 [1]),
        .I2(\count_value_i_reg[2]_0 [2]),
        .O(\count_value_i[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1 
       (.I0(\count_value_i_reg[2]_0 [1]),
        .I1(\count_value_i_reg[2]_0 [0]),
        .I2(\count_value_i_reg[2]_0 [2]),
        .I3(\count_value_i_reg_n_0_[3] ),
        .O(\count_value_i[3]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(\count_value_i_reg[2]_0 [0]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(\count_value_i_reg[2]_0 [1]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1_n_0 ),
        .Q(\count_value_i_reg[2]_0 [2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1_n_0 ),
        .Q(\count_value_i_reg_n_0_[3] ),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5 
       (.I0(\count_value_i_reg_n_0_[3] ),
        .I1(Q),
        .O(\count_value_i_reg[3]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized8_64
   (\count_value_i_reg[3]_0 ,
    \count_value_i_reg[2]_0 ,
    Q,
    wrst_busy,
    E,
    wr_clk);
  output \count_value_i_reg[3]_0 ;
  output [2:0]\count_value_i_reg[2]_0 ;
  input [0:0]Q;
  input wrst_busy;
  input [0:0]E;
  input wr_clk;

  wire [0:0]E;
  wire [0:0]Q;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[2]_i_1_n_0 ;
  wire \count_value_i[3]_i_1_n_0 ;
  wire [2:0]\count_value_i_reg[2]_0 ;
  wire \count_value_i_reg[3]_0 ;
  wire \count_value_i_reg_n_0_[3] ;
  wire wr_clk;
  wire wrst_busy;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1 
       (.I0(\count_value_i_reg[2]_0 [0]),
        .O(\count_value_i[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1 
       (.I0(\count_value_i_reg[2]_0 [0]),
        .I1(\count_value_i_reg[2]_0 [1]),
        .O(\count_value_i[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1 
       (.I0(\count_value_i_reg[2]_0 [0]),
        .I1(\count_value_i_reg[2]_0 [1]),
        .I2(\count_value_i_reg[2]_0 [2]),
        .O(\count_value_i[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1 
       (.I0(\count_value_i_reg[2]_0 [1]),
        .I1(\count_value_i_reg[2]_0 [0]),
        .I2(\count_value_i_reg[2]_0 [2]),
        .I3(\count_value_i_reg_n_0_[3] ),
        .O(\count_value_i[3]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(\count_value_i_reg[2]_0 [0]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(\count_value_i_reg[2]_0 [1]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1_n_0 ),
        .Q(\count_value_i_reg[2]_0 [2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1_n_0 ),
        .Q(\count_value_i_reg_n_0_[3] ),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5 
       (.I0(\count_value_i_reg_n_0_[3] ),
        .I1(Q),
        .O(\count_value_i_reg[3]_0 ));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_SYNC_STAGES = "3" *) (* DOUT_RESET_VALUE = "0" *) 
(* ECC_MODE = "no_ecc" *) (* EN_ADV_FEATURE_ASYNC = "16'b0000011100000111" *) (* FIFO_MEMORY_TYPE = "block" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_WRITE_DEPTH = "256" *) (* FULL_RESET_VALUE = "1" *) 
(* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "128" *) (* P_COMMON_CLOCK = "0" *) 
(* P_ECC_MODE = "0" *) (* P_FIFO_MEMORY_TYPE = "2" *) (* P_READ_MODE = "1" *) 
(* P_WAKEUP_TIME = "2" *) (* RD_DATA_COUNT_WIDTH = "8" *) (* READ_DATA_WIDTH = "50" *) 
(* READ_MODE = "fwft" *) (* RELATED_CLOCKS = "0" *) (* SIM_ASSERT_CHK = "0" *) 
(* USE_ADV_FEATURES = "0707" *) (* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH = "50" *) 
(* WR_DATA_COUNT_WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) (* dont_touch = "true" *) 
(* is_du_within_envelope = "true" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_async
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [49:0]din;
  output full;
  output prog_full;
  output [7:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [49:0]dout;
  output empty;
  output prog_empty;
  output [7:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [49:0]din;
  wire [49:0]dout;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire prog_full;
  wire rd_clk;
  wire [7:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire sleep;
  wire underflow;
  wire wr_clk;
  wire [7:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* CASCADE_HEIGHT = "0" *) 
  (* CDC_DEST_SYNC_FF = "3" *) 
  (* COMMON_CLOCK = "0" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "0" *) 
  (* ENABLE_ECC = "0" *) 
  (* EN_ADV_FEATURE = "16'b0000011100000111" *) 
  (* EN_AE = "1'b0" *) 
  (* EN_AF = "1'b0" *) 
  (* EN_DVLD = "1'b0" *) 
  (* EN_OF = "1'b1" *) 
  (* EN_PE = "1'b1" *) 
  (* EN_PF = "1'b1" *) 
  (* EN_RDC = "1'b1" *) 
  (* EN_UF = "1'b1" *) 
  (* EN_WACK = "1'b0" *) 
  (* EN_WDC = "1'b1" *) 
  (* FG_EQ_ASYM_DOUT = "1'b0" *) 
  (* FIFO_MEMORY_TYPE = "2" *) 
  (* FIFO_MEM_TYPE = "2" *) 
  (* FIFO_READ_DEPTH = "256" *) 
  (* FIFO_READ_LATENCY = "0" *) 
  (* FIFO_SIZE = "12800" *) 
  (* FIFO_WRITE_DEPTH = "256" *) 
  (* FULL_RESET_VALUE = "1" *) 
  (* FULL_RST_VAL = "1'b1" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* PE_THRESH_ADJ = "8" *) 
  (* PE_THRESH_MAX = "251" *) 
  (* PE_THRESH_MIN = "5" *) 
  (* PF_THRESH_ADJ = "126" *) 
  (* PF_THRESH_MAX = "251" *) 
  (* PF_THRESH_MIN = "8" *) 
  (* PROG_EMPTY_THRESH = "10" *) 
  (* PROG_FULL_THRESH = "128" *) 
  (* RD_DATA_COUNT_WIDTH = "8" *) 
  (* RD_DC_WIDTH_EXT = "9" *) 
  (* RD_LATENCY = "2" *) 
  (* RD_MODE = "1" *) 
  (* RD_PNTR_WIDTH = "8" *) 
  (* READ_DATA_WIDTH = "50" *) 
  (* READ_MODE = "1" *) 
  (* READ_MODE_LL = "1" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WIDTH_RATIO = "1" *) 
  (* WRITE_DATA_WIDTH = "50" *) 
  (* WR_DATA_COUNT_WIDTH = "8" *) 
  (* WR_DC_WIDTH_EXT = "9" *) 
  (* WR_DEPTH_LOG = "8" *) 
  (* WR_PNTR_WIDTH = "8" *) 
  (* WR_RD_RATIO = "0" *) 
  (* WR_WIDTH_LOG = "6" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* both_stages_valid = "3" *) 
  (* invalid = "0" *) 
  (* stage1_valid = "2" *) 
  (* stage2_valid = "1" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_base \gnuram_async_fifo.xpm_fifo_base_inst 
       (.almost_empty(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ),
        .almost_full(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ),
        .data_valid(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ),
        .dbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .full_n(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_full(prog_full),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .rst(rst),
        .sbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ),
        .sleep(sleep),
        .underflow(underflow),
        .wr_ack(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_SYNC_STAGES = "3" *) (* DOUT_RESET_VALUE = "0" *) 
(* ECC_MODE = "no_ecc" *) (* EN_ADV_FEATURE_ASYNC = "16'b0000011100000111" *) (* FIFO_MEMORY_TYPE = "block" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_WRITE_DEPTH = "512" *) (* FULL_RESET_VALUE = "1" *) 
(* ORIG_REF_NAME = "xpm_fifo_async" *) (* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "384" *) 
(* P_COMMON_CLOCK = "0" *) (* P_ECC_MODE = "0" *) (* P_FIFO_MEMORY_TYPE = "2" *) 
(* P_READ_MODE = "1" *) (* P_WAKEUP_TIME = "2" *) (* RD_DATA_COUNT_WIDTH = "9" *) 
(* READ_DATA_WIDTH = "41" *) (* READ_MODE = "fwft" *) (* RELATED_CLOCKS = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* WAKEUP_TIME = "0" *) 
(* WRITE_DATA_WIDTH = "41" *) (* WR_DATA_COUNT_WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* dont_touch = "true" *) (* is_du_within_envelope = "true" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_async__parameterized0
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [40:0]din;
  output full;
  output prog_full;
  output [8:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [40:0]dout;
  output empty;
  output prog_empty;
  output [8:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [40:0]din;
  wire [40:0]dout;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire prog_full;
  wire rd_clk;
  wire [8:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire sleep;
  wire underflow;
  wire wr_clk;
  wire [8:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* CASCADE_HEIGHT = "0" *) 
  (* CDC_DEST_SYNC_FF = "3" *) 
  (* COMMON_CLOCK = "0" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "0" *) 
  (* ENABLE_ECC = "0" *) 
  (* EN_ADV_FEATURE = "16'b0000011100000111" *) 
  (* EN_AE = "1'b0" *) 
  (* EN_AF = "1'b0" *) 
  (* EN_DVLD = "1'b0" *) 
  (* EN_OF = "1'b1" *) 
  (* EN_PE = "1'b1" *) 
  (* EN_PF = "1'b1" *) 
  (* EN_RDC = "1'b1" *) 
  (* EN_UF = "1'b1" *) 
  (* EN_WACK = "1'b0" *) 
  (* EN_WDC = "1'b1" *) 
  (* FG_EQ_ASYM_DOUT = "1'b0" *) 
  (* FIFO_MEMORY_TYPE = "2" *) 
  (* FIFO_MEM_TYPE = "2" *) 
  (* FIFO_READ_DEPTH = "512" *) 
  (* FIFO_READ_LATENCY = "0" *) 
  (* FIFO_SIZE = "20992" *) 
  (* FIFO_WRITE_DEPTH = "512" *) 
  (* FULL_RESET_VALUE = "1" *) 
  (* FULL_RST_VAL = "1'b1" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* PE_THRESH_ADJ = "8" *) 
  (* PE_THRESH_MAX = "507" *) 
  (* PE_THRESH_MIN = "5" *) 
  (* PF_THRESH_ADJ = "382" *) 
  (* PF_THRESH_MAX = "507" *) 
  (* PF_THRESH_MIN = "8" *) 
  (* PROG_EMPTY_THRESH = "10" *) 
  (* PROG_FULL_THRESH = "384" *) 
  (* RD_DATA_COUNT_WIDTH = "9" *) 
  (* RD_DC_WIDTH_EXT = "10" *) 
  (* RD_LATENCY = "2" *) 
  (* RD_MODE = "1" *) 
  (* RD_PNTR_WIDTH = "9" *) 
  (* READ_DATA_WIDTH = "41" *) 
  (* READ_MODE = "1" *) 
  (* READ_MODE_LL = "1" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WIDTH_RATIO = "1" *) 
  (* WRITE_DATA_WIDTH = "41" *) 
  (* WR_DATA_COUNT_WIDTH = "9" *) 
  (* WR_DC_WIDTH_EXT = "10" *) 
  (* WR_DEPTH_LOG = "9" *) 
  (* WR_PNTR_WIDTH = "9" *) 
  (* WR_RD_RATIO = "0" *) 
  (* WR_WIDTH_LOG = "6" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* both_stages_valid = "3" *) 
  (* invalid = "0" *) 
  (* stage1_valid = "2" *) 
  (* stage2_valid = "1" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_base__parameterized0 \gnuram_async_fifo.xpm_fifo_base_inst 
       (.almost_empty(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ),
        .almost_full(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ),
        .data_valid(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ),
        .dbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .full_n(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_full(prog_full),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .rst(rst),
        .sbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ),
        .sleep(sleep),
        .underflow(underflow),
        .wr_ack(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_SYNC_STAGES = "3" *) (* DOUT_RESET_VALUE = "0" *) 
(* ECC_MODE = "no_ecc" *) (* EN_ADV_FEATURE_ASYNC = "16'b0000011100000111" *) (* FIFO_MEMORY_TYPE = "block" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_WRITE_DEPTH = "512" *) (* FULL_RESET_VALUE = "1" *) 
(* ORIG_REF_NAME = "xpm_fifo_async" *) (* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "384" *) 
(* P_COMMON_CLOCK = "0" *) (* P_ECC_MODE = "0" *) (* P_FIFO_MEMORY_TYPE = "2" *) 
(* P_READ_MODE = "1" *) (* P_WAKEUP_TIME = "2" *) (* RD_DATA_COUNT_WIDTH = "9" *) 
(* READ_DATA_WIDTH = "41" *) (* READ_MODE = "fwft" *) (* RELATED_CLOCKS = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* WAKEUP_TIME = "0" *) 
(* WRITE_DATA_WIDTH = "41" *) (* WR_DATA_COUNT_WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* dont_touch = "true" *) (* is_du_within_envelope = "true" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_async__parameterized0__xdcDup__1
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [40:0]din;
  output full;
  output prog_full;
  output [8:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [40:0]dout;
  output empty;
  output prog_empty;
  output [8:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [40:0]din;
  wire [40:0]dout;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire prog_full;
  wire rd_clk;
  wire [8:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire sleep;
  wire underflow;
  wire wr_clk;
  wire [8:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* CASCADE_HEIGHT = "0" *) 
  (* CDC_DEST_SYNC_FF = "3" *) 
  (* COMMON_CLOCK = "0" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "0" *) 
  (* ENABLE_ECC = "0" *) 
  (* EN_ADV_FEATURE = "16'b0000011100000111" *) 
  (* EN_AE = "1'b0" *) 
  (* EN_AF = "1'b0" *) 
  (* EN_DVLD = "1'b0" *) 
  (* EN_OF = "1'b1" *) 
  (* EN_PE = "1'b1" *) 
  (* EN_PF = "1'b1" *) 
  (* EN_RDC = "1'b1" *) 
  (* EN_UF = "1'b1" *) 
  (* EN_WACK = "1'b0" *) 
  (* EN_WDC = "1'b1" *) 
  (* FG_EQ_ASYM_DOUT = "1'b0" *) 
  (* FIFO_MEMORY_TYPE = "2" *) 
  (* FIFO_MEM_TYPE = "2" *) 
  (* FIFO_READ_DEPTH = "512" *) 
  (* FIFO_READ_LATENCY = "0" *) 
  (* FIFO_SIZE = "20992" *) 
  (* FIFO_WRITE_DEPTH = "512" *) 
  (* FULL_RESET_VALUE = "1" *) 
  (* FULL_RST_VAL = "1'b1" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* PE_THRESH_ADJ = "8" *) 
  (* PE_THRESH_MAX = "507" *) 
  (* PE_THRESH_MIN = "5" *) 
  (* PF_THRESH_ADJ = "382" *) 
  (* PF_THRESH_MAX = "507" *) 
  (* PF_THRESH_MIN = "8" *) 
  (* PROG_EMPTY_THRESH = "10" *) 
  (* PROG_FULL_THRESH = "384" *) 
  (* RD_DATA_COUNT_WIDTH = "9" *) 
  (* RD_DC_WIDTH_EXT = "10" *) 
  (* RD_LATENCY = "2" *) 
  (* RD_MODE = "1" *) 
  (* RD_PNTR_WIDTH = "9" *) 
  (* READ_DATA_WIDTH = "41" *) 
  (* READ_MODE = "1" *) 
  (* READ_MODE_LL = "1" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WIDTH_RATIO = "1" *) 
  (* WRITE_DATA_WIDTH = "41" *) 
  (* WR_DATA_COUNT_WIDTH = "9" *) 
  (* WR_DC_WIDTH_EXT = "10" *) 
  (* WR_DEPTH_LOG = "9" *) 
  (* WR_PNTR_WIDTH = "9" *) 
  (* WR_RD_RATIO = "0" *) 
  (* WR_WIDTH_LOG = "6" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* both_stages_valid = "3" *) 
  (* invalid = "0" *) 
  (* stage1_valid = "2" *) 
  (* stage2_valid = "1" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_base__parameterized0__xdcDup__1 \gnuram_async_fifo.xpm_fifo_base_inst 
       (.almost_empty(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ),
        .almost_full(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ),
        .data_valid(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ),
        .dbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .full_n(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_full(prog_full),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .rst(rst),
        .sbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ),
        .sleep(sleep),
        .underflow(underflow),
        .wr_ack(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_SYNC_STAGES = "3" *) (* DOUT_RESET_VALUE = "0" *) 
(* ECC_MODE = "no_ecc" *) (* EN_ADV_FEATURE_ASYNC = "16'b0000011100000111" *) (* FIFO_MEMORY_TYPE = "distributed" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_WRITE_DEPTH = "256" *) (* FULL_RESET_VALUE = "1" *) 
(* ORIG_REF_NAME = "xpm_fifo_async" *) (* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "128" *) 
(* P_COMMON_CLOCK = "0" *) (* P_ECC_MODE = "0" *) (* P_FIFO_MEMORY_TYPE = "1" *) 
(* P_READ_MODE = "1" *) (* P_WAKEUP_TIME = "2" *) (* RD_DATA_COUNT_WIDTH = "8" *) 
(* READ_DATA_WIDTH = "8" *) (* READ_MODE = "fwft" *) (* RELATED_CLOCKS = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* WAKEUP_TIME = "0" *) 
(* WRITE_DATA_WIDTH = "8" *) (* WR_DATA_COUNT_WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) 
(* dont_touch = "true" *) (* is_du_within_envelope = "true" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_async__parameterized1
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [7:0]din;
  output full;
  output prog_full;
  output [7:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [7:0]dout;
  output empty;
  output prog_empty;
  output [7:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [7:0]din;
  wire [7:0]dout;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire prog_full;
  wire rd_clk;
  wire [7:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire sleep;
  wire underflow;
  wire wr_clk;
  wire [7:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* CASCADE_HEIGHT = "0" *) 
  (* CDC_DEST_SYNC_FF = "3" *) 
  (* COMMON_CLOCK = "0" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "0" *) 
  (* ENABLE_ECC = "0" *) 
  (* EN_ADV_FEATURE = "16'b0000011100000111" *) 
  (* EN_AE = "1'b0" *) 
  (* EN_AF = "1'b0" *) 
  (* EN_DVLD = "1'b0" *) 
  (* EN_OF = "1'b1" *) 
  (* EN_PE = "1'b1" *) 
  (* EN_PF = "1'b1" *) 
  (* EN_RDC = "1'b1" *) 
  (* EN_UF = "1'b1" *) 
  (* EN_WACK = "1'b0" *) 
  (* EN_WDC = "1'b1" *) 
  (* FG_EQ_ASYM_DOUT = "1'b0" *) 
  (* FIFO_MEMORY_TYPE = "1" *) 
  (* FIFO_MEM_TYPE = "1" *) 
  (* FIFO_READ_DEPTH = "256" *) 
  (* FIFO_READ_LATENCY = "0" *) 
  (* FIFO_SIZE = "2048" *) 
  (* FIFO_WRITE_DEPTH = "256" *) 
  (* FULL_RESET_VALUE = "1" *) 
  (* FULL_RST_VAL = "1'b1" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* PE_THRESH_ADJ = "8" *) 
  (* PE_THRESH_MAX = "251" *) 
  (* PE_THRESH_MIN = "5" *) 
  (* PF_THRESH_ADJ = "126" *) 
  (* PF_THRESH_MAX = "251" *) 
  (* PF_THRESH_MIN = "8" *) 
  (* PROG_EMPTY_THRESH = "10" *) 
  (* PROG_FULL_THRESH = "128" *) 
  (* RD_DATA_COUNT_WIDTH = "8" *) 
  (* RD_DC_WIDTH_EXT = "9" *) 
  (* RD_LATENCY = "2" *) 
  (* RD_MODE = "1" *) 
  (* RD_PNTR_WIDTH = "8" *) 
  (* READ_DATA_WIDTH = "8" *) 
  (* READ_MODE = "1" *) 
  (* READ_MODE_LL = "1" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WIDTH_RATIO = "1" *) 
  (* WRITE_DATA_WIDTH = "8" *) 
  (* WR_DATA_COUNT_WIDTH = "8" *) 
  (* WR_DC_WIDTH_EXT = "9" *) 
  (* WR_DEPTH_LOG = "8" *) 
  (* WR_PNTR_WIDTH = "8" *) 
  (* WR_RD_RATIO = "0" *) 
  (* WR_WIDTH_LOG = "3" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* both_stages_valid = "3" *) 
  (* invalid = "0" *) 
  (* stage1_valid = "2" *) 
  (* stage2_valid = "1" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_base__parameterized1 \gnuram_async_fifo.xpm_fifo_base_inst 
       (.almost_empty(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ),
        .almost_full(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ),
        .data_valid(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ),
        .dbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .full_n(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_full(prog_full),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .rst(rst),
        .sbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ),
        .sleep(sleep),
        .underflow(underflow),
        .wr_ack(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_SYNC_STAGES = "3" *) (* DOUT_RESET_VALUE = "0" *) 
(* ECC_MODE = "no_ecc" *) (* EN_ADV_FEATURE_ASYNC = "16'b0000011100000111" *) (* FIFO_MEMORY_TYPE = "distributed" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_WRITE_DEPTH = "16" *) (* FULL_RESET_VALUE = "1" *) 
(* ORIG_REF_NAME = "xpm_fifo_async" *) (* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "11" *) 
(* P_COMMON_CLOCK = "0" *) (* P_ECC_MODE = "0" *) (* P_FIFO_MEMORY_TYPE = "1" *) 
(* P_READ_MODE = "1" *) (* P_WAKEUP_TIME = "2" *) (* RD_DATA_COUNT_WIDTH = "4" *) 
(* READ_DATA_WIDTH = "20" *) (* READ_MODE = "fwft" *) (* RELATED_CLOCKS = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* WAKEUP_TIME = "0" *) 
(* WRITE_DATA_WIDTH = "20" *) (* WR_DATA_COUNT_WIDTH = "4" *) (* XPM_MODULE = "TRUE" *) 
(* dont_touch = "true" *) (* is_du_within_envelope = "true" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_async__parameterized2
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [19:0]din;
  output full;
  output prog_full;
  output [3:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [19:0]dout;
  output empty;
  output prog_empty;
  output [3:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [19:0]din;
  wire [19:0]dout;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire prog_full;
  wire rd_clk;
  wire [3:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire sleep;
  wire underflow;
  wire wr_clk;
  wire [3:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* CASCADE_HEIGHT = "0" *) 
  (* CDC_DEST_SYNC_FF = "3" *) 
  (* COMMON_CLOCK = "0" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "0" *) 
  (* ENABLE_ECC = "0" *) 
  (* EN_ADV_FEATURE = "16'b0000011100000111" *) 
  (* EN_AE = "1'b0" *) 
  (* EN_AF = "1'b0" *) 
  (* EN_DVLD = "1'b0" *) 
  (* EN_OF = "1'b1" *) 
  (* EN_PE = "1'b1" *) 
  (* EN_PF = "1'b1" *) 
  (* EN_RDC = "1'b1" *) 
  (* EN_UF = "1'b1" *) 
  (* EN_WACK = "1'b0" *) 
  (* EN_WDC = "1'b1" *) 
  (* FG_EQ_ASYM_DOUT = "1'b0" *) 
  (* FIFO_MEMORY_TYPE = "1" *) 
  (* FIFO_MEM_TYPE = "1" *) 
  (* FIFO_READ_DEPTH = "16" *) 
  (* FIFO_READ_LATENCY = "0" *) 
  (* FIFO_SIZE = "320" *) 
  (* FIFO_WRITE_DEPTH = "16" *) 
  (* FULL_RESET_VALUE = "1" *) 
  (* FULL_RST_VAL = "1'b1" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* PE_THRESH_ADJ = "8" *) 
  (* PE_THRESH_MAX = "11" *) 
  (* PE_THRESH_MIN = "5" *) 
  (* PF_THRESH_ADJ = "9" *) 
  (* PF_THRESH_MAX = "11" *) 
  (* PF_THRESH_MIN = "8" *) 
  (* PROG_EMPTY_THRESH = "10" *) 
  (* PROG_FULL_THRESH = "11" *) 
  (* RD_DATA_COUNT_WIDTH = "4" *) 
  (* RD_DC_WIDTH_EXT = "5" *) 
  (* RD_LATENCY = "2" *) 
  (* RD_MODE = "1" *) 
  (* RD_PNTR_WIDTH = "4" *) 
  (* READ_DATA_WIDTH = "20" *) 
  (* READ_MODE = "1" *) 
  (* READ_MODE_LL = "1" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WIDTH_RATIO = "1" *) 
  (* WRITE_DATA_WIDTH = "20" *) 
  (* WR_DATA_COUNT_WIDTH = "4" *) 
  (* WR_DC_WIDTH_EXT = "5" *) 
  (* WR_DEPTH_LOG = "4" *) 
  (* WR_PNTR_WIDTH = "4" *) 
  (* WR_RD_RATIO = "0" *) 
  (* WR_WIDTH_LOG = "5" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* both_stages_valid = "3" *) 
  (* invalid = "0" *) 
  (* stage1_valid = "2" *) 
  (* stage2_valid = "1" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_base__parameterized2 \gnuram_async_fifo.xpm_fifo_base_inst 
       (.almost_empty(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ),
        .almost_full(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ),
        .data_valid(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ),
        .dbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .full_n(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_full(prog_full),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .rst(rst),
        .sbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ),
        .sleep(sleep),
        .underflow(underflow),
        .wr_ack(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_SYNC_STAGES = "3" *) (* DOUT_RESET_VALUE = "0" *) 
(* ECC_MODE = "no_ecc" *) (* EN_ADV_FEATURE_ASYNC = "16'b0000011100000111" *) (* FIFO_MEMORY_TYPE = "distributed" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_WRITE_DEPTH = "16" *) (* FULL_RESET_VALUE = "1" *) 
(* ORIG_REF_NAME = "xpm_fifo_async" *) (* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "11" *) 
(* P_COMMON_CLOCK = "0" *) (* P_ECC_MODE = "0" *) (* P_FIFO_MEMORY_TYPE = "1" *) 
(* P_READ_MODE = "1" *) (* P_WAKEUP_TIME = "2" *) (* RD_DATA_COUNT_WIDTH = "4" *) 
(* READ_DATA_WIDTH = "20" *) (* READ_MODE = "fwft" *) (* RELATED_CLOCKS = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* WAKEUP_TIME = "0" *) 
(* WRITE_DATA_WIDTH = "20" *) (* WR_DATA_COUNT_WIDTH = "4" *) (* XPM_MODULE = "TRUE" *) 
(* dont_touch = "true" *) (* is_du_within_envelope = "true" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_async__parameterized2__xdcDup__1
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [19:0]din;
  output full;
  output prog_full;
  output [3:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [19:0]dout;
  output empty;
  output prog_empty;
  output [3:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [19:0]din;
  wire [19:0]dout;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire prog_full;
  wire rd_clk;
  wire [3:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire sleep;
  wire underflow;
  wire wr_clk;
  wire [3:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* CASCADE_HEIGHT = "0" *) 
  (* CDC_DEST_SYNC_FF = "3" *) 
  (* COMMON_CLOCK = "0" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "0" *) 
  (* ENABLE_ECC = "0" *) 
  (* EN_ADV_FEATURE = "16'b0000011100000111" *) 
  (* EN_AE = "1'b0" *) 
  (* EN_AF = "1'b0" *) 
  (* EN_DVLD = "1'b0" *) 
  (* EN_OF = "1'b1" *) 
  (* EN_PE = "1'b1" *) 
  (* EN_PF = "1'b1" *) 
  (* EN_RDC = "1'b1" *) 
  (* EN_UF = "1'b1" *) 
  (* EN_WACK = "1'b0" *) 
  (* EN_WDC = "1'b1" *) 
  (* FG_EQ_ASYM_DOUT = "1'b0" *) 
  (* FIFO_MEMORY_TYPE = "1" *) 
  (* FIFO_MEM_TYPE = "1" *) 
  (* FIFO_READ_DEPTH = "16" *) 
  (* FIFO_READ_LATENCY = "0" *) 
  (* FIFO_SIZE = "320" *) 
  (* FIFO_WRITE_DEPTH = "16" *) 
  (* FULL_RESET_VALUE = "1" *) 
  (* FULL_RST_VAL = "1'b1" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* PE_THRESH_ADJ = "8" *) 
  (* PE_THRESH_MAX = "11" *) 
  (* PE_THRESH_MIN = "5" *) 
  (* PF_THRESH_ADJ = "9" *) 
  (* PF_THRESH_MAX = "11" *) 
  (* PF_THRESH_MIN = "8" *) 
  (* PROG_EMPTY_THRESH = "10" *) 
  (* PROG_FULL_THRESH = "11" *) 
  (* RD_DATA_COUNT_WIDTH = "4" *) 
  (* RD_DC_WIDTH_EXT = "5" *) 
  (* RD_LATENCY = "2" *) 
  (* RD_MODE = "1" *) 
  (* RD_PNTR_WIDTH = "4" *) 
  (* READ_DATA_WIDTH = "20" *) 
  (* READ_MODE = "1" *) 
  (* READ_MODE_LL = "1" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WIDTH_RATIO = "1" *) 
  (* WRITE_DATA_WIDTH = "20" *) 
  (* WR_DATA_COUNT_WIDTH = "4" *) 
  (* WR_DC_WIDTH_EXT = "5" *) 
  (* WR_DEPTH_LOG = "4" *) 
  (* WR_PNTR_WIDTH = "4" *) 
  (* WR_RD_RATIO = "0" *) 
  (* WR_WIDTH_LOG = "5" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* both_stages_valid = "3" *) 
  (* invalid = "0" *) 
  (* stage1_valid = "2" *) 
  (* stage2_valid = "1" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_base__parameterized2__xdcDup__1 \gnuram_async_fifo.xpm_fifo_base_inst 
       (.almost_empty(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ),
        .almost_full(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ),
        .data_valid(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ),
        .dbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .full_n(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_full(prog_full),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .rst(rst),
        .sbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ),
        .sleep(sleep),
        .underflow(underflow),
        .wr_ack(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_SYNC_STAGES = "3" *) (* DOUT_RESET_VALUE = "0" *) 
(* ECC_MODE = "no_ecc" *) (* EN_ADV_FEATURE_ASYNC = "16'b0000011100000111" *) (* FIFO_MEMORY_TYPE = "block" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_WRITE_DEPTH = "256" *) (* FULL_RESET_VALUE = "1" *) 
(* ORIG_REF_NAME = "xpm_fifo_async" *) (* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "128" *) 
(* P_COMMON_CLOCK = "0" *) (* P_ECC_MODE = "0" *) (* P_FIFO_MEMORY_TYPE = "2" *) 
(* P_READ_MODE = "1" *) (* P_WAKEUP_TIME = "2" *) (* RD_DATA_COUNT_WIDTH = "8" *) 
(* READ_DATA_WIDTH = "50" *) (* READ_MODE = "fwft" *) (* RELATED_CLOCKS = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* WAKEUP_TIME = "0" *) 
(* WRITE_DATA_WIDTH = "50" *) (* WR_DATA_COUNT_WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) 
(* dont_touch = "true" *) (* is_du_within_envelope = "true" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_async__xdcDup__1
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [49:0]din;
  output full;
  output prog_full;
  output [7:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [49:0]dout;
  output empty;
  output prog_empty;
  output [7:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [49:0]din;
  wire [49:0]dout;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire prog_full;
  wire rd_clk;
  wire [7:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire sleep;
  wire underflow;
  wire wr_clk;
  wire [7:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* CASCADE_HEIGHT = "0" *) 
  (* CDC_DEST_SYNC_FF = "3" *) 
  (* COMMON_CLOCK = "0" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "0" *) 
  (* ENABLE_ECC = "0" *) 
  (* EN_ADV_FEATURE = "16'b0000011100000111" *) 
  (* EN_AE = "1'b0" *) 
  (* EN_AF = "1'b0" *) 
  (* EN_DVLD = "1'b0" *) 
  (* EN_OF = "1'b1" *) 
  (* EN_PE = "1'b1" *) 
  (* EN_PF = "1'b1" *) 
  (* EN_RDC = "1'b1" *) 
  (* EN_UF = "1'b1" *) 
  (* EN_WACK = "1'b0" *) 
  (* EN_WDC = "1'b1" *) 
  (* FG_EQ_ASYM_DOUT = "1'b0" *) 
  (* FIFO_MEMORY_TYPE = "2" *) 
  (* FIFO_MEM_TYPE = "2" *) 
  (* FIFO_READ_DEPTH = "256" *) 
  (* FIFO_READ_LATENCY = "0" *) 
  (* FIFO_SIZE = "12800" *) 
  (* FIFO_WRITE_DEPTH = "256" *) 
  (* FULL_RESET_VALUE = "1" *) 
  (* FULL_RST_VAL = "1'b1" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* PE_THRESH_ADJ = "8" *) 
  (* PE_THRESH_MAX = "251" *) 
  (* PE_THRESH_MIN = "5" *) 
  (* PF_THRESH_ADJ = "126" *) 
  (* PF_THRESH_MAX = "251" *) 
  (* PF_THRESH_MIN = "8" *) 
  (* PROG_EMPTY_THRESH = "10" *) 
  (* PROG_FULL_THRESH = "128" *) 
  (* RD_DATA_COUNT_WIDTH = "8" *) 
  (* RD_DC_WIDTH_EXT = "9" *) 
  (* RD_LATENCY = "2" *) 
  (* RD_MODE = "1" *) 
  (* RD_PNTR_WIDTH = "8" *) 
  (* READ_DATA_WIDTH = "50" *) 
  (* READ_MODE = "1" *) 
  (* READ_MODE_LL = "1" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WIDTH_RATIO = "1" *) 
  (* WRITE_DATA_WIDTH = "50" *) 
  (* WR_DATA_COUNT_WIDTH = "8" *) 
  (* WR_DC_WIDTH_EXT = "9" *) 
  (* WR_DEPTH_LOG = "8" *) 
  (* WR_PNTR_WIDTH = "8" *) 
  (* WR_RD_RATIO = "0" *) 
  (* WR_WIDTH_LOG = "6" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* both_stages_valid = "3" *) 
  (* invalid = "0" *) 
  (* stage1_valid = "2" *) 
  (* stage2_valid = "1" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_base__xdcDup__1 \gnuram_async_fifo.xpm_fifo_base_inst 
       (.almost_empty(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ),
        .almost_full(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ),
        .data_valid(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ),
        .dbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .full_n(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_full(prog_full),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .rst(rst),
        .sbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ),
        .sleep(sleep),
        .underflow(underflow),
        .wr_ack(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_DEST_SYNC_FF = "3" *) (* COMMON_CLOCK = "0" *) 
(* DOUT_RESET_VALUE = "0" *) (* ECC_MODE = "0" *) (* ENABLE_ECC = "0" *) 
(* EN_ADV_FEATURE = "16'b0000011100000111" *) (* EN_AE = "1'b0" *) (* EN_AF = "1'b0" *) 
(* EN_DVLD = "1'b0" *) (* EN_OF = "1'b1" *) (* EN_PE = "1'b1" *) 
(* EN_PF = "1'b1" *) (* EN_RDC = "1'b1" *) (* EN_UF = "1'b1" *) 
(* EN_WACK = "1'b0" *) (* EN_WDC = "1'b1" *) (* FG_EQ_ASYM_DOUT = "1'b0" *) 
(* FIFO_MEMORY_TYPE = "2" *) (* FIFO_MEM_TYPE = "2" *) (* FIFO_READ_DEPTH = "256" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_SIZE = "12800" *) (* FIFO_WRITE_DEPTH = "256" *) 
(* FULL_RESET_VALUE = "1" *) (* FULL_RST_VAL = "1'b1" *) (* PE_THRESH_ADJ = "8" *) 
(* PE_THRESH_MAX = "251" *) (* PE_THRESH_MIN = "5" *) (* PF_THRESH_ADJ = "126" *) 
(* PF_THRESH_MAX = "251" *) (* PF_THRESH_MIN = "8" *) (* PROG_EMPTY_THRESH = "10" *) 
(* PROG_FULL_THRESH = "128" *) (* RD_DATA_COUNT_WIDTH = "8" *) (* RD_DC_WIDTH_EXT = "9" *) 
(* RD_LATENCY = "2" *) (* RD_MODE = "1" *) (* RD_PNTR_WIDTH = "8" *) 
(* READ_DATA_WIDTH = "50" *) (* READ_MODE = "1" *) (* READ_MODE_LL = "1" *) 
(* RELATED_CLOCKS = "0" *) (* REMOVE_WR_RD_PROT_LOGIC = "0" *) (* SIM_ASSERT_CHK = "0" *) 
(* USE_ADV_FEATURES = "0707" *) (* VERSION = "0" *) (* WAKEUP_TIME = "0" *) 
(* WIDTH_RATIO = "1" *) (* WRITE_DATA_WIDTH = "50" *) (* WR_DATA_COUNT_WIDTH = "8" *) 
(* WR_DC_WIDTH_EXT = "9" *) (* WR_DEPTH_LOG = "8" *) (* WR_PNTR_WIDTH = "8" *) 
(* WR_RD_RATIO = "0" *) (* WR_WIDTH_LOG = "6" *) (* XPM_MODULE = "TRUE" *) 
(* both_stages_valid = "3" *) (* invalid = "0" *) (* keep_hierarchy = "soft" *) 
(* stage1_valid = "2" *) (* stage2_valid = "1" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_base
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    full_n,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [49:0]din;
  output full;
  output full_n;
  output prog_full;
  output [7:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [49:0]dout;
  output empty;
  output prog_empty;
  output [7:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [1:0]count_value_i;
  wire [1:0]curr_fwft_state;
  wire [7:0]diff_pntr_pe;
  wire [8:2]diff_pntr_pf_q;
  wire [8:2]diff_pntr_pf_q0;
  wire [49:0]din;
  wire [49:0]dout;
  wire empty;
  wire empty_fwft_i0;
  wire full;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_0 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_7 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_10 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_11 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_12 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_13 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_14 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_15 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_16 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_9 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_7 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_8 ;
  wire \gen_fwft.count_rst ;
  wire \gen_fwft.ram_regout_en ;
  wire \gen_fwft.rdpp1_inst_n_3 ;
  wire \gen_fwft.rdpp1_inst_n_4 ;
  wire \gen_fwft.rdpp1_inst_n_5 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ;
  wire [8:1]\grdc.diff_wr_rd_pntr_rdc ;
  wire \grdc.rd_data_count_i0 ;
  wire [8:1]\gwdc.diff_wr_rd_pntr1_out ;
  wire [1:0]next_fwft_state__0;
  wire overflow;
  wire overflow_i0;
  wire prog_empty;
  wire prog_full;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire [7:0]rd_data_count;
  wire rd_en;
  wire [7:0]rd_pntr_ext;
  wire [7:0]rd_pntr_wr;
  wire [7:0]rd_pntr_wr_cdc;
  wire [8:0]rd_pntr_wr_cdc_dc;
  wire rd_rst_busy;
  wire rdp_inst_n_10;
  wire rdp_inst_n_19;
  wire rdp_inst_n_20;
  wire rdp_inst_n_21;
  wire rdp_inst_n_22;
  wire rdp_inst_n_23;
  wire rdp_inst_n_24;
  wire rdp_inst_n_25;
  wire rdp_inst_n_26;
  wire rdp_inst_n_27;
  wire rdp_inst_n_28;
  wire rdp_inst_n_29;
  wire rdp_inst_n_30;
  wire rdp_inst_n_31;
  wire rdp_inst_n_8;
  wire rdp_inst_n_9;
  wire rdpp1_inst_n_0;
  wire rdpp1_inst_n_1;
  wire rdpp1_inst_n_2;
  wire rdpp1_inst_n_3;
  wire rdpp1_inst_n_4;
  wire rdpp1_inst_n_5;
  wire rdpp1_inst_n_6;
  wire rdpp1_inst_n_7;
  wire rst;
  wire rst_d1;
  wire rst_d1_inst_n_1;
  wire sleep;
  wire [1:1]src_in_bin00_out;
  wire underflow;
  wire underflow_i0;
  wire wr_clk;
  wire [7:0]wr_data_count;
  wire wr_en;
  wire [8:0]wr_pntr_ext;
  wire [8:1]wr_pntr_plus1_pf;
  wire wr_pntr_plus1_pf_carry;
  wire [7:0]wr_pntr_rd_cdc;
  wire [8:0]wr_pntr_rd_cdc_dc;
  wire wr_rst_busy;
  wire wrpp2_inst_n_0;
  wire wrpp2_inst_n_1;
  wire wrpp2_inst_n_2;
  wire wrpp2_inst_n_3;
  wire wrpp2_inst_n_4;
  wire wrpp2_inst_n_5;
  wire wrpp2_inst_n_6;
  wire wrpp2_inst_n_7;
  wire wrst_busy;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ;
  wire [49:0]\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign full_n = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  (* SOFT_HLUTNM = "soft_lutpair180" *) 
  LUT4 #(
    .INIT(16'h6A85)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[0]_i_1 
       (.I0(curr_fwft_state[0]),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(ram_empty_i),
        .O(next_fwft_state__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair180" *) 
  LUT4 #(
    .INIT(16'h3FF0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[1]_i_1 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(curr_fwft_state[0]),
        .O(next_fwft_state__0[1]));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[0]),
        .Q(curr_fwft_state[0]),
        .R(rd_rst_busy));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[1]),
        .Q(curr_fwft_state[1]),
        .R(rd_rst_busy));
  GND GND
       (.G(\<const0> ));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized1__8 \gen_cdc_pntr.rd_pntr_cdc_dc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc_dc),
        .src_clk(rd_clk),
        .src_in_bin({rdp_inst_n_24,rdp_inst_n_25,rdp_inst_n_26,rdp_inst_n_27,rdp_inst_n_28,rdp_inst_n_29,rdp_inst_n_30,src_in_bin00_out,rdp_inst_n_31}));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "8" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__9 \gen_cdc_pntr.rd_pntr_cdc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc),
        .src_clk(rd_clk),
        .src_in_bin(rd_pntr_ext));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec_36 \gen_cdc_pntr.rpw_gray_reg 
       (.D(rd_pntr_wr_cdc),
        .Q(wr_pntr_plus1_pf),
        .d_out_int_reg(\gen_cdc_pntr.rpw_gray_reg_n_8 ),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7}),
        .\reg_out_i_reg[7]_0 (rd_pntr_wr),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized0_37 \gen_cdc_pntr.rpw_gray_reg_dc 
       (.D(rd_pntr_wr_cdc_dc),
        .Q({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 }),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec_38 \gen_cdc_pntr.wpr_gray_reg 
       (.D(wr_pntr_rd_cdc),
        .Q(curr_fwft_state),
        .\gen_pf_ic_rc.ram_empty_i_reg (rd_pntr_ext),
        .\gen_pf_ic_rc.ram_empty_i_reg_0 ({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3,rdpp1_inst_n_4,rdpp1_inst_n_5,rdpp1_inst_n_6,rdpp1_inst_n_7}),
        .ram_empty_i(ram_empty_i),
        .ram_empty_i0(ram_empty_i0),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[0]_0 (rd_rst_busy),
        .\reg_out_i_reg[7]_0 ({\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized0_39 \gen_cdc_pntr.wpr_gray_reg_dc 
       (.D(\grdc.diff_wr_rd_pntr_rdc ),
        .DI({rdp_inst_n_9,\gen_fwft.rdpp1_inst_n_5 }),
        .Q({\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_16 }),
        .S({rdp_inst_n_19,rdp_inst_n_20,rdp_inst_n_21,rdp_inst_n_22,rdp_inst_n_23,\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .\grdc.rd_data_count_i_reg[7] (count_value_i[1]),
        .\grdc.rd_data_count_i_reg[7]_0 (rd_pntr_ext[6:1]),
        .\grdc.rd_data_count_i_reg[8] (rdp_inst_n_10),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[8]_0 (rd_rst_busy),
        .\reg_out_i_reg[8]_1 (wr_pntr_rd_cdc_dc));
  (* DEST_SYNC_FF = "5" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized0__4 \gen_cdc_pntr.wr_pntr_cdc_dc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc_dc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "8" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__8 \gen_cdc_pntr.wr_pntr_cdc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext[7:0]));
  (* SOFT_HLUTNM = "soft_lutpair179" *) 
  LUT4 #(
    .INIT(16'hF380)) 
    \gen_fwft.empty_fwft_i_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .I3(empty),
        .O(empty_fwft_i0));
  FDSE #(
    .INIT(1'b1)) 
    \gen_fwft.empty_fwft_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .Q(empty),
        .S(rd_rst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn_40 \gen_fwft.rdpp1_inst 
       (.DI(\gen_fwft.rdpp1_inst_n_5 ),
        .Q(count_value_i),
        .S({\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\grdc.rd_data_count_i_reg[7] (rd_pntr_ext[1:0]),
        .\grdc.rd_data_count_i_reg[7]_0 ({\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_16 }),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .src_in_bin(src_in_bin00_out));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_cdc_pntr.rpw_gray_reg_n_8 ),
        .Q(full),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[0]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[1]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[2]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[3]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[4]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[5]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[6]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[7]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .R(rd_rst_busy));
  LUT4 #(
    .INIT(16'h88B8)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1 
       (.I0(prog_empty),
        .I1(empty),
        .I2(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h01FF)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ),
        .Q(prog_empty),
        .S(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[2]),
        .Q(diff_pntr_pf_q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[3]),
        .Q(diff_pntr_pf_q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[4]),
        .Q(diff_pntr_pf_q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[5]),
        .Q(diff_pntr_pf_q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[6]),
        .Q(diff_pntr_pf_q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[7]),
        .Q(diff_pntr_pf_q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[8]),
        .Q(diff_pntr_pf_q[8]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1_inst_n_1),
        .Q(prog_full),
        .S(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.ram_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i0),
        .Q(ram_empty_i),
        .S(rd_rst_busy));
  (* ADDR_WIDTH_A = "8" *) 
  (* ADDR_WIDTH_B = "8" *) 
  (* AUTO_SLEEP_TIME = "0" *) 
  (* BYTE_WRITE_WIDTH_A = "50" *) 
  (* BYTE_WRITE_WIDTH_B = "50" *) 
  (* CASCADE_HEIGHT = "0" *) 
  (* CLOCKING_MODE = "1" *) 
  (* ECC_BIT_RANGE = "[7:0]" *) 
  (* ECC_MODE = "0" *) 
  (* ECC_TYPE = "NONE" *) 
  (* IGNORE_INIT_SYNTH = "0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* MAX_NUM_CHAR = "0" *) 
  (* \MEM.ADDRESS_SPACE  *) 
  (* \MEM.ADDRESS_SPACE_BEGIN  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_LSB  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_MSB  = "49" *) 
  (* \MEM.ADDRESS_SPACE_END  = "511" *) 
  (* \MEM.CORE_MEMORY_WIDTH  = "50" *) 
  (* MEMORY_INIT_FILE = "none" *) 
  (* MEMORY_INIT_PARAM = "" *) 
  (* MEMORY_OPTIMIZATION = "true" *) 
  (* MEMORY_PRIMITIVE = "2" *) 
  (* MEMORY_SIZE = "12800" *) 
  (* MEMORY_TYPE = "1" *) 
  (* MESSAGE_CONTROL = "0" *) 
  (* NUM_CHAR_LOC = "0" *) 
  (* P_ECC_MODE = "no_ecc" *) 
  (* P_ENABLE_BYTE_WRITE_A = "0" *) 
  (* P_ENABLE_BYTE_WRITE_B = "0" *) 
  (* P_MAX_DEPTH_DATA = "256" *) 
  (* P_MEMORY_OPT = "yes" *) 
  (* P_MEMORY_PRIMITIVE = "block" *) 
  (* P_MIN_WIDTH_DATA = "50" *) 
  (* P_MIN_WIDTH_DATA_A = "50" *) 
  (* P_MIN_WIDTH_DATA_B = "50" *) 
  (* P_MIN_WIDTH_DATA_ECC = "50" *) 
  (* P_MIN_WIDTH_DATA_LDW = "4" *) 
  (* P_MIN_WIDTH_DATA_SHFT = "50" *) 
  (* P_NUM_COLS_WRITE_A = "1" *) 
  (* P_NUM_COLS_WRITE_B = "1" *) 
  (* P_NUM_ROWS_READ_A = "1" *) 
  (* P_NUM_ROWS_READ_B = "1" *) 
  (* P_NUM_ROWS_WRITE_A = "1" *) 
  (* P_NUM_ROWS_WRITE_B = "1" *) 
  (* P_SDP_WRITE_MODE = "no" *) 
  (* P_WIDTH_ADDR_LSB_READ_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) 
  (* P_WIDTH_ADDR_READ_A = "8" *) 
  (* P_WIDTH_ADDR_READ_B = "8" *) 
  (* P_WIDTH_ADDR_WRITE_A = "8" *) 
  (* P_WIDTH_ADDR_WRITE_B = "8" *) 
  (* P_WIDTH_COL_WRITE_A = "50" *) 
  (* P_WIDTH_COL_WRITE_B = "50" *) 
  (* RAM_DECOMP = "auto" *) 
  (* READ_DATA_WIDTH_A = "50" *) 
  (* READ_DATA_WIDTH_B = "50" *) 
  (* READ_LATENCY_A = "2" *) 
  (* READ_LATENCY_B = "2" *) 
  (* READ_RESET_VALUE_A = "0" *) 
  (* READ_RESET_VALUE_B = "0" *) 
  (* RST_MODE_A = "SYNC" *) 
  (* RST_MODE_B = "SYNC" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_EMBEDDED_CONSTRAINT = "0" *) 
  (* USE_MEM_INIT = "0" *) 
  (* USE_MEM_INIT_MMI = "0" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH_A = "50" *) 
  (* WRITE_DATA_WIDTH_B = "50" *) 
  (* WRITE_MODE_A = "2" *) 
  (* WRITE_MODE_B = "2" *) 
  (* WRITE_PROTECT = "1" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* rsta_loop_iter = "52" *) 
  (* rstb_loop_iter = "52" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_memory_base \gen_sdpram.xpm_memory_base_inst 
       (.addra(wr_pntr_ext[7:0]),
        .addrb(rd_pntr_ext),
        .clka(wr_clk),
        .clkb(rd_clk),
        .dbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ),
        .dbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ),
        .dina(din),
        .dinb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .douta(\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED [49:0]),
        .doutb(dout),
        .ena(wr_pntr_plus1_pf_carry),
        .enb(rdp_inst_n_8),
        .injectdbiterra(1'b0),
        .injectdbiterrb(1'b0),
        .injectsbiterra(1'b0),
        .injectsbiterrb(1'b0),
        .regcea(1'b0),
        .regceb(\gen_fwft.ram_regout_en ),
        .rsta(1'b0),
        .rstb(rd_rst_busy),
        .sbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ),
        .sbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ),
        .sleep(sleep),
        .wea(1'b0),
        .web(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair179" *) 
  LUT3 #(
    .INIT(8'h62)) 
    \gen_sdpram.xpm_memory_base_inst_i_3 
       (.I0(curr_fwft_state[0]),
        .I1(curr_fwft_state[1]),
        .I2(rd_en),
        .O(\gen_fwft.ram_regout_en ));
  FDRE #(
    .INIT(1'b0)) 
    \gof.overflow_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(overflow_i0),
        .Q(overflow),
        .R(1'b0));
  FDRE \grdc.rd_data_count_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q(rd_data_count[0]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(rd_data_count[1]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [3]),
        .Q(rd_data_count[2]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [4]),
        .Q(rd_data_count[3]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [5]),
        .Q(rd_data_count[4]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [6]),
        .Q(rd_data_count[5]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [7]),
        .Q(rd_data_count[6]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [8]),
        .Q(rd_data_count[7]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \guf.underflow_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(underflow_i0),
        .Q(underflow),
        .R(1'b0));
  FDRE \gwdc.wr_data_count_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [1]),
        .Q(wr_data_count[0]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [2]),
        .Q(wr_data_count[1]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [3]),
        .Q(wr_data_count[2]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [4]),
        .Q(wr_data_count[3]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [5]),
        .Q(wr_data_count[4]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [6]),
        .Q(wr_data_count[5]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [7]),
        .Q(wr_data_count[6]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [8]),
        .Q(wr_data_count[7]),
        .R(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized0_41 rdp_inst
       (.D(diff_pntr_pe),
        .DI(rdp_inst_n_9),
        .Q(rd_pntr_ext),
        .S({rdp_inst_n_19,rdp_inst_n_20,rdp_inst_n_21,rdp_inst_n_22,rdp_inst_n_23}),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\count_value_i_reg[7]_0 (rdp_inst_n_10),
        .\count_value_i_reg[8]_0 (rd_rst_busy),
        .enb(rdp_inst_n_8),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ({\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .\grdc.rd_data_count_i_reg[7] (count_value_i),
        .\grdc.rd_data_count_i_reg[8] ({\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_15 }),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .src_in_bin({rdp_inst_n_24,rdp_inst_n_25,rdp_inst_n_26,rdp_inst_n_27,rdp_inst_n_28,rdp_inst_n_29,rdp_inst_n_30,rdp_inst_n_31}));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized1_42 rdpp1_inst
       (.E(rdp_inst_n_8),
        .Q({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3,rdpp1_inst_n_4,rdpp1_inst_n_5,rdpp1_inst_n_6,rdpp1_inst_n_7}),
        .\count_value_i_reg[0]_0 (rd_rst_busy),
        .\count_value_i_reg[1]_0 (curr_fwft_state),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_bit_43 rst_d1_inst
       (.Q(diff_pntr_pf_q),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] (rst_d1_inst_n_1),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg (full),
        .overflow_i0(overflow_i0),
        .prog_full(prog_full),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized0_44 wrp_inst
       (.D(\gwdc.diff_wr_rd_pntr1_out ),
        .Q(wr_pntr_ext),
        .\count_value_i_reg[6]_0 (full),
        .\gwdc.wr_data_count_i_reg[8] ({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 }),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized1_45 wrpp1_inst
       (.D(diff_pntr_pf_q0),
        .Q(wr_pntr_plus1_pf),
        .\count_value_i_reg[6]_0 (full),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] (rd_pntr_wr),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized2_46 wrpp2_inst
       (.Q({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7}),
        .\count_value_i_reg[6]_0 (full),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_rst__xdcDup__2 xpm_fifo_rst_inst
       (.Q(curr_fwft_state),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[7] (full),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_0 (rd_rst_busy),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_1 (\grdc.rd_data_count_i0 ),
        .\guf.underflow_i_reg (empty),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .rst_d1(rst_d1),
        .underflow_i0(underflow_i0),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wr_rst_busy(wr_rst_busy),
        .wrst_busy(wrst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_DEST_SYNC_FF = "3" *) (* COMMON_CLOCK = "0" *) 
(* DOUT_RESET_VALUE = "0" *) (* ECC_MODE = "0" *) (* ENABLE_ECC = "0" *) 
(* EN_ADV_FEATURE = "16'b0000011100000111" *) (* EN_AE = "1'b0" *) (* EN_AF = "1'b0" *) 
(* EN_DVLD = "1'b0" *) (* EN_OF = "1'b1" *) (* EN_PE = "1'b1" *) 
(* EN_PF = "1'b1" *) (* EN_RDC = "1'b1" *) (* EN_UF = "1'b1" *) 
(* EN_WACK = "1'b0" *) (* EN_WDC = "1'b1" *) (* FG_EQ_ASYM_DOUT = "1'b0" *) 
(* FIFO_MEMORY_TYPE = "2" *) (* FIFO_MEM_TYPE = "2" *) (* FIFO_READ_DEPTH = "512" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_SIZE = "20992" *) (* FIFO_WRITE_DEPTH = "512" *) 
(* FULL_RESET_VALUE = "1" *) (* FULL_RST_VAL = "1'b1" *) (* ORIG_REF_NAME = "xpm_fifo_base" *) 
(* PE_THRESH_ADJ = "8" *) (* PE_THRESH_MAX = "507" *) (* PE_THRESH_MIN = "5" *) 
(* PF_THRESH_ADJ = "382" *) (* PF_THRESH_MAX = "507" *) (* PF_THRESH_MIN = "8" *) 
(* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "384" *) (* RD_DATA_COUNT_WIDTH = "9" *) 
(* RD_DC_WIDTH_EXT = "10" *) (* RD_LATENCY = "2" *) (* RD_MODE = "1" *) 
(* RD_PNTR_WIDTH = "9" *) (* READ_DATA_WIDTH = "41" *) (* READ_MODE = "1" *) 
(* READ_MODE_LL = "1" *) (* RELATED_CLOCKS = "0" *) (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WIDTH_RATIO = "1" *) (* WRITE_DATA_WIDTH = "41" *) 
(* WR_DATA_COUNT_WIDTH = "9" *) (* WR_DC_WIDTH_EXT = "10" *) (* WR_DEPTH_LOG = "9" *) 
(* WR_PNTR_WIDTH = "9" *) (* WR_RD_RATIO = "0" *) (* WR_WIDTH_LOG = "6" *) 
(* XPM_MODULE = "TRUE" *) (* both_stages_valid = "3" *) (* invalid = "0" *) 
(* keep_hierarchy = "soft" *) (* stage1_valid = "2" *) (* stage2_valid = "1" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_base__parameterized0
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    full_n,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [40:0]din;
  output full;
  output full_n;
  output prog_full;
  output [8:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [40:0]dout;
  output empty;
  output prog_empty;
  output [8:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire clr_full;
  wire [1:0]count_value_i;
  wire [1:0]curr_fwft_state;
  wire [8:0]diff_pntr_pe;
  wire [9:2]diff_pntr_pf_q;
  wire [9:2]diff_pntr_pf_q0;
  wire [40:0]din;
  wire [40:0]dout;
  wire empty;
  wire empty_fwft_i0;
  wire full;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_0 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_7 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_9 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_9 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_0 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_10 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_11 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_12 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_13 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_14 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_15 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_16 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_7 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_9 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_0 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_7 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_8 ;
  wire \gen_fwft.count_rst ;
  wire \gen_fwft.ram_regout_en ;
  wire \gen_fwft.rdpp1_inst_n_3 ;
  wire \gen_fwft.rdpp1_inst_n_4 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[8] ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ;
  wire [9:1]\grdc.diff_wr_rd_pntr_rdc ;
  wire \grdc.rd_data_count_i0 ;
  wire [9:1]\gwdc.diff_wr_rd_pntr1_out ;
  wire [1:0]next_fwft_state__0;
  wire overflow;
  wire overflow_i0;
  wire prog_empty;
  wire prog_full;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire ram_rd_en_i;
  wire rd_clk;
  wire [8:0]rd_data_count;
  wire rd_en;
  wire [8:0]rd_pntr_ext;
  wire [8:0]rd_pntr_wr;
  wire [8:0]rd_pntr_wr_cdc;
  wire [9:0]rd_pntr_wr_cdc_dc;
  wire rd_rst_busy;
  wire rdp_inst_n_0;
  wire rdp_inst_n_11;
  wire rdp_inst_n_21;
  wire rdp_inst_n_31;
  wire rdp_inst_n_32;
  wire rdp_inst_n_33;
  wire rdp_inst_n_34;
  wire rdp_inst_n_35;
  wire rdp_inst_n_36;
  wire rdp_inst_n_37;
  wire rdp_inst_n_38;
  wire rst;
  wire rst_d1;
  wire rst_d1_inst_n_1;
  wire sleep;
  wire [9:0]src_in_bin00_out;
  wire underflow;
  wire underflow_i0;
  wire wr_clk;
  wire [8:0]wr_data_count;
  wire wr_en;
  wire [9:0]wr_pntr_ext;
  wire [9:1]wr_pntr_plus1_pf;
  wire wr_pntr_plus1_pf_carry;
  wire [8:0]wr_pntr_rd_cdc;
  wire [9:0]wr_pntr_rd_cdc_dc;
  wire wr_rst_busy;
  wire wrpp2_inst_n_0;
  wire wrpp2_inst_n_1;
  wire wrpp2_inst_n_2;
  wire wrpp2_inst_n_3;
  wire wrpp2_inst_n_4;
  wire wrpp2_inst_n_5;
  wire wrpp2_inst_n_6;
  wire wrpp2_inst_n_7;
  wire wrpp2_inst_n_8;
  wire wrst_busy;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ;
  wire [40:0]\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign full_n = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  (* SOFT_HLUTNM = "soft_lutpair288" *) 
  LUT4 #(
    .INIT(16'h69A1)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[0]_i_1 
       (.I0(ram_empty_i),
        .I1(curr_fwft_state[1]),
        .I2(curr_fwft_state[0]),
        .I3(rd_en),
        .O(next_fwft_state__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair288" *) 
  LUT4 #(
    .INIT(16'h3FF0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[1]_i_1 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(curr_fwft_state[0]),
        .I3(curr_fwft_state[1]),
        .O(next_fwft_state__0[1]));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[0]),
        .Q(curr_fwft_state[0]),
        .R(rd_rst_busy));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[1]),
        .Q(curr_fwft_state[1]),
        .R(rd_rst_busy));
  GND GND
       (.G(\<const0> ));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "10" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized3 \gen_cdc_pntr.rd_pntr_cdc_dc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc_dc),
        .src_clk(rd_clk),
        .src_in_bin(src_in_bin00_out));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized1__12 \gen_cdc_pntr.rd_pntr_cdc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc),
        .src_clk(rd_clk),
        .src_in_bin(rd_pntr_ext));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized0_5 \gen_cdc_pntr.rpw_gray_reg 
       (.D(rd_pntr_wr_cdc),
        .Q(rd_pntr_wr),
        .clr_full(clr_full),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 ({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7,wrpp2_inst_n_8}),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg (wr_pntr_plus1_pf),
        .\reg_out_i_reg[0]_0 (\gen_cdc_pntr.rpw_gray_reg_n_9 ),
        .wr_clk(wr_clk),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized1_6 \gen_cdc_pntr.rpw_gray_reg_dc 
       (.D(rd_pntr_wr_cdc_dc),
        .Q({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_9 }),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized0_7 \gen_cdc_pntr.wpr_gray_reg 
       (.D(diff_pntr_pe),
        .Q(curr_fwft_state),
        .S({rdp_inst_n_31,rdp_inst_n_32,rdp_inst_n_33,rdp_inst_n_34,rdp_inst_n_35,rdp_inst_n_36,rdp_inst_n_37,rdp_inst_n_38}),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] (rd_pntr_ext[8]),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[0]_0 (rd_rst_busy),
        .\reg_out_i_reg[8]_0 ({\gen_cdc_pntr.wpr_gray_reg_n_0 ,\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .\reg_out_i_reg[8]_1 (wr_pntr_rd_cdc));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized1_8 \gen_cdc_pntr.wpr_gray_reg_dc 
       (.D(wr_pntr_rd_cdc_dc),
        .DI({\gen_cdc_pntr.wpr_gray_reg_dc_n_0 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_1 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_2 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_5 }),
        .Q({\gen_cdc_pntr.wpr_gray_reg_dc_n_6 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_7 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 }),
        .S(\gen_cdc_pntr.wpr_gray_reg_dc_n_16 ),
        .\grdc.rd_data_count_i_reg[7] (count_value_i[1]),
        .\grdc.rd_data_count_i_reg[9] ({rdp_inst_n_0,rd_pntr_ext[8:1]}),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[7]_0 (\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ),
        .\reg_out_i_reg[9]_0 (rd_rst_busy));
  (* DEST_SYNC_FF = "5" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "10" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized2 \gen_cdc_pntr.wr_pntr_cdc_dc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc_dc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized1__11 \gen_cdc_pntr.wr_pntr_cdc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext[8:0]));
  (* SOFT_HLUTNM = "soft_lutpair287" *) 
  LUT4 #(
    .INIT(16'hE0CC)) 
    \gen_fwft.empty_fwft_i_i_1 
       (.I0(rd_en),
        .I1(empty),
        .I2(curr_fwft_state[1]),
        .I3(curr_fwft_state[0]),
        .O(empty_fwft_i0));
  FDSE #(
    .INIT(1'b1)) 
    \gen_fwft.empty_fwft_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .Q(empty),
        .S(rd_rst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn_9 \gen_fwft.rdpp1_inst 
       (.DI({\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .Q(count_value_i),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\src_gray_ff_reg[0] (rd_pntr_ext[0]),
        .src_in_bin(src_in_bin00_out[0]));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_cdc_pntr.rpw_gray_reg_n_9 ),
        .Q(full),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[0]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[1]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[2]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[3]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[4]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[5]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[6]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[7]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[8]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[8] ),
        .R(rd_rst_busy));
  LUT4 #(
    .INIT(16'h88B8)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1 
       (.I0(prog_empty),
        .I1(empty),
        .I2(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h01FF)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[8] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .I4(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ),
        .Q(prog_empty),
        .S(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[2]),
        .Q(diff_pntr_pf_q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[3]),
        .Q(diff_pntr_pf_q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[4]),
        .Q(diff_pntr_pf_q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[5]),
        .Q(diff_pntr_pf_q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[6]),
        .Q(diff_pntr_pf_q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[7]),
        .Q(diff_pntr_pf_q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[8]),
        .Q(diff_pntr_pf_q[8]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[9]),
        .Q(diff_pntr_pf_q[9]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1_inst_n_1),
        .Q(prog_full),
        .S(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.ram_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i0),
        .Q(ram_empty_i),
        .S(rd_rst_busy));
  (* ADDR_WIDTH_A = "9" *) 
  (* ADDR_WIDTH_B = "9" *) 
  (* AUTO_SLEEP_TIME = "0" *) 
  (* BYTE_WRITE_WIDTH_A = "41" *) 
  (* BYTE_WRITE_WIDTH_B = "41" *) 
  (* CASCADE_HEIGHT = "0" *) 
  (* CLOCKING_MODE = "1" *) 
  (* ECC_BIT_RANGE = "[7:0]" *) 
  (* ECC_MODE = "0" *) 
  (* ECC_TYPE = "NONE" *) 
  (* IGNORE_INIT_SYNTH = "0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* MAX_NUM_CHAR = "0" *) 
  (* \MEM.ADDRESS_SPACE  *) 
  (* \MEM.ADDRESS_SPACE_BEGIN  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_LSB  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_MSB  = "40" *) 
  (* \MEM.ADDRESS_SPACE_END  = "511" *) 
  (* \MEM.CORE_MEMORY_WIDTH  = "41" *) 
  (* MEMORY_INIT_FILE = "none" *) 
  (* MEMORY_INIT_PARAM = "" *) 
  (* MEMORY_OPTIMIZATION = "true" *) 
  (* MEMORY_PRIMITIVE = "2" *) 
  (* MEMORY_SIZE = "20992" *) 
  (* MEMORY_TYPE = "1" *) 
  (* MESSAGE_CONTROL = "0" *) 
  (* NUM_CHAR_LOC = "0" *) 
  (* P_ECC_MODE = "no_ecc" *) 
  (* P_ENABLE_BYTE_WRITE_A = "0" *) 
  (* P_ENABLE_BYTE_WRITE_B = "0" *) 
  (* P_MAX_DEPTH_DATA = "512" *) 
  (* P_MEMORY_OPT = "yes" *) 
  (* P_MEMORY_PRIMITIVE = "block" *) 
  (* P_MIN_WIDTH_DATA = "41" *) 
  (* P_MIN_WIDTH_DATA_A = "41" *) 
  (* P_MIN_WIDTH_DATA_B = "41" *) 
  (* P_MIN_WIDTH_DATA_ECC = "41" *) 
  (* P_MIN_WIDTH_DATA_LDW = "4" *) 
  (* P_MIN_WIDTH_DATA_SHFT = "41" *) 
  (* P_NUM_COLS_WRITE_A = "1" *) 
  (* P_NUM_COLS_WRITE_B = "1" *) 
  (* P_NUM_ROWS_READ_A = "1" *) 
  (* P_NUM_ROWS_READ_B = "1" *) 
  (* P_NUM_ROWS_WRITE_A = "1" *) 
  (* P_NUM_ROWS_WRITE_B = "1" *) 
  (* P_SDP_WRITE_MODE = "no" *) 
  (* P_WIDTH_ADDR_LSB_READ_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) 
  (* P_WIDTH_ADDR_READ_A = "9" *) 
  (* P_WIDTH_ADDR_READ_B = "9" *) 
  (* P_WIDTH_ADDR_WRITE_A = "9" *) 
  (* P_WIDTH_ADDR_WRITE_B = "9" *) 
  (* P_WIDTH_COL_WRITE_A = "41" *) 
  (* P_WIDTH_COL_WRITE_B = "41" *) 
  (* RAM_DECOMP = "auto" *) 
  (* READ_DATA_WIDTH_A = "41" *) 
  (* READ_DATA_WIDTH_B = "41" *) 
  (* READ_LATENCY_A = "2" *) 
  (* READ_LATENCY_B = "2" *) 
  (* READ_RESET_VALUE_A = "0" *) 
  (* READ_RESET_VALUE_B = "0" *) 
  (* RST_MODE_A = "SYNC" *) 
  (* RST_MODE_B = "SYNC" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_EMBEDDED_CONSTRAINT = "0" *) 
  (* USE_MEM_INIT = "0" *) 
  (* USE_MEM_INIT_MMI = "0" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH_A = "41" *) 
  (* WRITE_DATA_WIDTH_B = "41" *) 
  (* WRITE_MODE_A = "2" *) 
  (* WRITE_MODE_B = "2" *) 
  (* WRITE_PROTECT = "1" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* rsta_loop_iter = "44" *) 
  (* rstb_loop_iter = "44" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_memory_base__parameterized0 \gen_sdpram.xpm_memory_base_inst 
       (.addra(wr_pntr_ext[8:0]),
        .addrb(rd_pntr_ext),
        .clka(wr_clk),
        .clkb(rd_clk),
        .dbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ),
        .dbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ),
        .dina(din),
        .dinb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .douta(\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED [40:0]),
        .doutb(dout),
        .ena(wr_pntr_plus1_pf_carry),
        .enb(ram_rd_en_i),
        .injectdbiterra(1'b0),
        .injectdbiterrb(1'b0),
        .injectsbiterra(1'b0),
        .injectsbiterrb(1'b0),
        .regcea(1'b0),
        .regceb(\gen_fwft.ram_regout_en ),
        .rsta(1'b0),
        .rstb(rd_rst_busy),
        .sbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ),
        .sbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ),
        .sleep(sleep),
        .wea(1'b0),
        .web(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair287" *) 
  LUT3 #(
    .INIT(8'h2C)) 
    \gen_sdpram.xpm_memory_base_inst_i_3 
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .O(\gen_fwft.ram_regout_en ));
  FDRE #(
    .INIT(1'b0)) 
    \gof.overflow_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(overflow_i0),
        .Q(overflow),
        .R(1'b0));
  FDRE \grdc.rd_data_count_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q(rd_data_count[0]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(rd_data_count[1]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [3]),
        .Q(rd_data_count[2]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [4]),
        .Q(rd_data_count[3]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [5]),
        .Q(rd_data_count[4]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [6]),
        .Q(rd_data_count[5]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [7]),
        .Q(rd_data_count[6]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [8]),
        .Q(rd_data_count[7]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[9] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [9]),
        .Q(rd_data_count[8]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \guf.underflow_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(underflow_i0),
        .Q(underflow),
        .R(1'b0));
  FDRE \gwdc.wr_data_count_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [1]),
        .Q(wr_data_count[0]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [2]),
        .Q(wr_data_count[1]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [3]),
        .Q(wr_data_count[2]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [4]),
        .Q(wr_data_count[3]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [5]),
        .Q(wr_data_count[4]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [6]),
        .Q(wr_data_count[5]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [7]),
        .Q(wr_data_count[6]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [8]),
        .Q(wr_data_count[7]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[9] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [9]),
        .Q(wr_data_count[8]),
        .R(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized3_10 rdp_inst
       (.D(\grdc.diff_wr_rd_pntr_rdc ),
        .DI({\gen_cdc_pntr.wpr_gray_reg_dc_n_0 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_1 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_2 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_5 ,\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .Q({rdp_inst_n_0,rd_pntr_ext}),
        .S(\gen_cdc_pntr.wpr_gray_reg_dc_n_16 ),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\count_value_i_reg[1]_0 (rdp_inst_n_21),
        .\count_value_i_reg[7]_0 ({rdp_inst_n_31,rdp_inst_n_32,rdp_inst_n_33,rdp_inst_n_34,rdp_inst_n_35,rdp_inst_n_36,rdp_inst_n_37,rdp_inst_n_38}),
        .\count_value_i_reg[9]_0 (rd_rst_busy),
        .\gen_pf_ic_rc.ram_empty_i_reg ({\gen_cdc_pntr.wpr_gray_reg_n_0 ,\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .\grdc.rd_data_count_i_reg[7] (count_value_i),
        .\grdc.rd_data_count_i_reg[9] (\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ),
        .\grdc.rd_data_count_i_reg[9]_0 ({\gen_cdc_pntr.wpr_gray_reg_dc_n_6 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_7 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 }),
        .ram_empty_i(ram_empty_i),
        .ram_rd_en_i(ram_rd_en_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[7] (rdp_inst_n_11),
        .src_in_bin(src_in_bin00_out[9:1]));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized4_11 rdpp1_inst
       (.E(ram_rd_en_i),
        .Q(curr_fwft_state),
        .\count_value_i_reg[0]_0 (rd_rst_busy),
        .\gen_pf_ic_rc.ram_empty_i_reg (rdp_inst_n_21),
        .\gen_pf_ic_rc.ram_empty_i_reg_0 (rdp_inst_n_11),
        .\gen_pf_ic_rc.ram_empty_i_reg_1 ({\gen_cdc_pntr.wpr_gray_reg_n_0 ,\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .ram_empty_i(ram_empty_i),
        .ram_empty_i0(ram_empty_i0),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_bit_12 rst_d1_inst
       (.Q(diff_pntr_pf_q),
        .clr_full(clr_full),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] (rst_d1_inst_n_1),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg (full),
        .overflow_i0(overflow_i0),
        .prog_full(prog_full),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized3_13 wrp_inst
       (.D(\gwdc.diff_wr_rd_pntr1_out ),
        .Q(wr_pntr_ext),
        .\count_value_i_reg[5]_0 (full),
        .\gwdc.wr_data_count_i_reg[9] ({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_9 }),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized4_14 wrpp1_inst
       (.D(diff_pntr_pf_q0),
        .Q(wr_pntr_plus1_pf),
        .\count_value_i_reg[5]_0 (full),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] (rd_pntr_wr),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized5_15 wrpp2_inst
       (.Q({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7,wrpp2_inst_n_8}),
        .\count_value_i_reg[5]_0 (full),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_rst__xdcDup__4 xpm_fifo_rst_inst
       (.\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] (\grdc.rd_data_count_i0 ),
        .Q(curr_fwft_state),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[8] (full),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_0 (rd_rst_busy),
        .\guf.underflow_i_reg (empty),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .rst_d1(rst_d1),
        .underflow_i0(underflow_i0),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wr_rst_busy(wr_rst_busy),
        .wrst_busy(wrst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_DEST_SYNC_FF = "3" *) (* COMMON_CLOCK = "0" *) 
(* DOUT_RESET_VALUE = "0" *) (* ECC_MODE = "0" *) (* ENABLE_ECC = "0" *) 
(* EN_ADV_FEATURE = "16'b0000011100000111" *) (* EN_AE = "1'b0" *) (* EN_AF = "1'b0" *) 
(* EN_DVLD = "1'b0" *) (* EN_OF = "1'b1" *) (* EN_PE = "1'b1" *) 
(* EN_PF = "1'b1" *) (* EN_RDC = "1'b1" *) (* EN_UF = "1'b1" *) 
(* EN_WACK = "1'b0" *) (* EN_WDC = "1'b1" *) (* FG_EQ_ASYM_DOUT = "1'b0" *) 
(* FIFO_MEMORY_TYPE = "2" *) (* FIFO_MEM_TYPE = "2" *) (* FIFO_READ_DEPTH = "512" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_SIZE = "20992" *) (* FIFO_WRITE_DEPTH = "512" *) 
(* FULL_RESET_VALUE = "1" *) (* FULL_RST_VAL = "1'b1" *) (* ORIG_REF_NAME = "xpm_fifo_base" *) 
(* PE_THRESH_ADJ = "8" *) (* PE_THRESH_MAX = "507" *) (* PE_THRESH_MIN = "5" *) 
(* PF_THRESH_ADJ = "382" *) (* PF_THRESH_MAX = "507" *) (* PF_THRESH_MIN = "8" *) 
(* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "384" *) (* RD_DATA_COUNT_WIDTH = "9" *) 
(* RD_DC_WIDTH_EXT = "10" *) (* RD_LATENCY = "2" *) (* RD_MODE = "1" *) 
(* RD_PNTR_WIDTH = "9" *) (* READ_DATA_WIDTH = "41" *) (* READ_MODE = "1" *) 
(* READ_MODE_LL = "1" *) (* RELATED_CLOCKS = "0" *) (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WIDTH_RATIO = "1" *) (* WRITE_DATA_WIDTH = "41" *) 
(* WR_DATA_COUNT_WIDTH = "9" *) (* WR_DC_WIDTH_EXT = "10" *) (* WR_DEPTH_LOG = "9" *) 
(* WR_PNTR_WIDTH = "9" *) (* WR_RD_RATIO = "0" *) (* WR_WIDTH_LOG = "6" *) 
(* XPM_MODULE = "TRUE" *) (* both_stages_valid = "3" *) (* invalid = "0" *) 
(* keep_hierarchy = "soft" *) (* stage1_valid = "2" *) (* stage2_valid = "1" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_base__parameterized0__xdcDup__1
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    full_n,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [40:0]din;
  output full;
  output full_n;
  output prog_full;
  output [8:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [40:0]dout;
  output empty;
  output prog_empty;
  output [8:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire clr_full;
  wire [1:0]count_value_i;
  wire [1:0]curr_fwft_state;
  wire [8:0]diff_pntr_pe;
  wire [9:2]diff_pntr_pf_q;
  wire [9:2]diff_pntr_pf_q0;
  wire [40:0]din;
  wire [40:0]dout;
  wire empty;
  wire empty_fwft_i0;
  wire full;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_0 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_7 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_9 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_9 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_0 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_10 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_11 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_12 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_13 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_14 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_15 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_16 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_7 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_9 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_0 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_7 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_8 ;
  wire \gen_fwft.count_rst ;
  wire \gen_fwft.ram_regout_en ;
  wire \gen_fwft.rdpp1_inst_n_3 ;
  wire \gen_fwft.rdpp1_inst_n_4 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[8] ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ;
  wire [9:1]\grdc.diff_wr_rd_pntr_rdc ;
  wire \grdc.rd_data_count_i0 ;
  wire [9:1]\gwdc.diff_wr_rd_pntr1_out ;
  wire [1:0]next_fwft_state__0;
  wire overflow;
  wire overflow_i0;
  wire prog_empty;
  wire prog_full;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire ram_rd_en_i;
  wire rd_clk;
  wire [8:0]rd_data_count;
  wire rd_en;
  wire [8:0]rd_pntr_ext;
  wire [8:0]rd_pntr_wr;
  wire [8:0]rd_pntr_wr_cdc;
  wire [9:0]rd_pntr_wr_cdc_dc;
  wire rd_rst_busy;
  wire rdp_inst_n_0;
  wire rdp_inst_n_11;
  wire rdp_inst_n_21;
  wire rdp_inst_n_31;
  wire rdp_inst_n_32;
  wire rdp_inst_n_33;
  wire rdp_inst_n_34;
  wire rdp_inst_n_35;
  wire rdp_inst_n_36;
  wire rdp_inst_n_37;
  wire rdp_inst_n_38;
  wire rst;
  wire rst_d1;
  wire rst_d1_inst_n_1;
  wire sleep;
  wire [9:0]src_in_bin00_out;
  wire underflow;
  wire underflow_i0;
  wire wr_clk;
  wire [8:0]wr_data_count;
  wire wr_en;
  wire [9:0]wr_pntr_ext;
  wire [9:1]wr_pntr_plus1_pf;
  wire wr_pntr_plus1_pf_carry;
  wire [8:0]wr_pntr_rd_cdc;
  wire [9:0]wr_pntr_rd_cdc_dc;
  wire wr_rst_busy;
  wire wrpp2_inst_n_0;
  wire wrpp2_inst_n_1;
  wire wrpp2_inst_n_2;
  wire wrpp2_inst_n_3;
  wire wrpp2_inst_n_4;
  wire wrpp2_inst_n_5;
  wire wrpp2_inst_n_6;
  wire wrpp2_inst_n_7;
  wire wrpp2_inst_n_8;
  wire wrst_busy;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ;
  wire [40:0]\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign full_n = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  (* SOFT_HLUTNM = "soft_lutpair344" *) 
  LUT4 #(
    .INIT(16'h69A1)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[0]_i_1 
       (.I0(ram_empty_i),
        .I1(curr_fwft_state[1]),
        .I2(curr_fwft_state[0]),
        .I3(rd_en),
        .O(next_fwft_state__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair344" *) 
  LUT4 #(
    .INIT(16'h3FF0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[1]_i_1 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(curr_fwft_state[0]),
        .I3(curr_fwft_state[1]),
        .O(next_fwft_state__0[1]));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[0]),
        .Q(curr_fwft_state[0]),
        .R(rd_rst_busy));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[1]),
        .Q(curr_fwft_state[1]),
        .R(rd_rst_busy));
  GND GND
       (.G(\<const0> ));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "10" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized3__2 \gen_cdc_pntr.rd_pntr_cdc_dc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc_dc),
        .src_clk(rd_clk),
        .src_in_bin(src_in_bin00_out));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized1__10 \gen_cdc_pntr.rd_pntr_cdc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc),
        .src_clk(rd_clk),
        .src_in_bin(rd_pntr_ext));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized0 \gen_cdc_pntr.rpw_gray_reg 
       (.D(rd_pntr_wr_cdc),
        .Q(rd_pntr_wr),
        .clr_full(clr_full),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 ({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7,wrpp2_inst_n_8}),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg (wr_pntr_plus1_pf),
        .\reg_out_i_reg[0]_0 (\gen_cdc_pntr.rpw_gray_reg_n_9 ),
        .wr_clk(wr_clk),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized1 \gen_cdc_pntr.rpw_gray_reg_dc 
       (.D(rd_pntr_wr_cdc_dc),
        .Q({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_9 }),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized0_1 \gen_cdc_pntr.wpr_gray_reg 
       (.D(diff_pntr_pe),
        .Q(curr_fwft_state),
        .S({rdp_inst_n_31,rdp_inst_n_32,rdp_inst_n_33,rdp_inst_n_34,rdp_inst_n_35,rdp_inst_n_36,rdp_inst_n_37,rdp_inst_n_38}),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] (rd_pntr_ext[8]),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[0]_0 (rd_rst_busy),
        .\reg_out_i_reg[8]_0 ({\gen_cdc_pntr.wpr_gray_reg_n_0 ,\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .\reg_out_i_reg[8]_1 (wr_pntr_rd_cdc));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized1_2 \gen_cdc_pntr.wpr_gray_reg_dc 
       (.D(wr_pntr_rd_cdc_dc),
        .DI({\gen_cdc_pntr.wpr_gray_reg_dc_n_0 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_1 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_2 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_5 }),
        .Q({\gen_cdc_pntr.wpr_gray_reg_dc_n_6 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_7 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 }),
        .S(\gen_cdc_pntr.wpr_gray_reg_dc_n_16 ),
        .\grdc.rd_data_count_i_reg[7] (count_value_i[1]),
        .\grdc.rd_data_count_i_reg[9] ({rdp_inst_n_0,rd_pntr_ext[8:1]}),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[7]_0 (\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ),
        .\reg_out_i_reg[9]_0 (rd_rst_busy));
  (* DEST_SYNC_FF = "5" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "10" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized2__2 \gen_cdc_pntr.wr_pntr_cdc_dc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc_dc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized1__9 \gen_cdc_pntr.wr_pntr_cdc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext[8:0]));
  (* SOFT_HLUTNM = "soft_lutpair343" *) 
  LUT4 #(
    .INIT(16'hE0CC)) 
    \gen_fwft.empty_fwft_i_i_1 
       (.I0(rd_en),
        .I1(empty),
        .I2(curr_fwft_state[1]),
        .I3(curr_fwft_state[0]),
        .O(empty_fwft_i0));
  FDSE #(
    .INIT(1'b1)) 
    \gen_fwft.empty_fwft_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .Q(empty),
        .S(rd_rst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn \gen_fwft.rdpp1_inst 
       (.DI({\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .Q(count_value_i),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\src_gray_ff_reg[0] (rd_pntr_ext[0]),
        .src_in_bin(src_in_bin00_out[0]));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_cdc_pntr.rpw_gray_reg_n_9 ),
        .Q(full),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[0]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[1]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[2]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[3]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[4]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[5]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[6]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[7]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[8]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[8] ),
        .R(rd_rst_busy));
  LUT4 #(
    .INIT(16'h88B8)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1 
       (.I0(prog_empty),
        .I1(empty),
        .I2(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h01FF)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[8] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .I4(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ),
        .Q(prog_empty),
        .S(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[2]),
        .Q(diff_pntr_pf_q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[3]),
        .Q(diff_pntr_pf_q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[4]),
        .Q(diff_pntr_pf_q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[5]),
        .Q(diff_pntr_pf_q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[6]),
        .Q(diff_pntr_pf_q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[7]),
        .Q(diff_pntr_pf_q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[8]),
        .Q(diff_pntr_pf_q[8]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[9]),
        .Q(diff_pntr_pf_q[9]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1_inst_n_1),
        .Q(prog_full),
        .S(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.ram_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i0),
        .Q(ram_empty_i),
        .S(rd_rst_busy));
  (* ADDR_WIDTH_A = "9" *) 
  (* ADDR_WIDTH_B = "9" *) 
  (* AUTO_SLEEP_TIME = "0" *) 
  (* BYTE_WRITE_WIDTH_A = "41" *) 
  (* BYTE_WRITE_WIDTH_B = "41" *) 
  (* CASCADE_HEIGHT = "0" *) 
  (* CLOCKING_MODE = "1" *) 
  (* ECC_BIT_RANGE = "[7:0]" *) 
  (* ECC_MODE = "0" *) 
  (* ECC_TYPE = "NONE" *) 
  (* IGNORE_INIT_SYNTH = "0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* MAX_NUM_CHAR = "0" *) 
  (* \MEM.ADDRESS_SPACE  *) 
  (* \MEM.ADDRESS_SPACE_BEGIN  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_LSB  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_MSB  = "40" *) 
  (* \MEM.ADDRESS_SPACE_END  = "511" *) 
  (* \MEM.CORE_MEMORY_WIDTH  = "41" *) 
  (* MEMORY_INIT_FILE = "none" *) 
  (* MEMORY_INIT_PARAM = "" *) 
  (* MEMORY_OPTIMIZATION = "true" *) 
  (* MEMORY_PRIMITIVE = "2" *) 
  (* MEMORY_SIZE = "20992" *) 
  (* MEMORY_TYPE = "1" *) 
  (* MESSAGE_CONTROL = "0" *) 
  (* NUM_CHAR_LOC = "0" *) 
  (* P_ECC_MODE = "no_ecc" *) 
  (* P_ENABLE_BYTE_WRITE_A = "0" *) 
  (* P_ENABLE_BYTE_WRITE_B = "0" *) 
  (* P_MAX_DEPTH_DATA = "512" *) 
  (* P_MEMORY_OPT = "yes" *) 
  (* P_MEMORY_PRIMITIVE = "block" *) 
  (* P_MIN_WIDTH_DATA = "41" *) 
  (* P_MIN_WIDTH_DATA_A = "41" *) 
  (* P_MIN_WIDTH_DATA_B = "41" *) 
  (* P_MIN_WIDTH_DATA_ECC = "41" *) 
  (* P_MIN_WIDTH_DATA_LDW = "4" *) 
  (* P_MIN_WIDTH_DATA_SHFT = "41" *) 
  (* P_NUM_COLS_WRITE_A = "1" *) 
  (* P_NUM_COLS_WRITE_B = "1" *) 
  (* P_NUM_ROWS_READ_A = "1" *) 
  (* P_NUM_ROWS_READ_B = "1" *) 
  (* P_NUM_ROWS_WRITE_A = "1" *) 
  (* P_NUM_ROWS_WRITE_B = "1" *) 
  (* P_SDP_WRITE_MODE = "no" *) 
  (* P_WIDTH_ADDR_LSB_READ_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) 
  (* P_WIDTH_ADDR_READ_A = "9" *) 
  (* P_WIDTH_ADDR_READ_B = "9" *) 
  (* P_WIDTH_ADDR_WRITE_A = "9" *) 
  (* P_WIDTH_ADDR_WRITE_B = "9" *) 
  (* P_WIDTH_COL_WRITE_A = "41" *) 
  (* P_WIDTH_COL_WRITE_B = "41" *) 
  (* RAM_DECOMP = "auto" *) 
  (* READ_DATA_WIDTH_A = "41" *) 
  (* READ_DATA_WIDTH_B = "41" *) 
  (* READ_LATENCY_A = "2" *) 
  (* READ_LATENCY_B = "2" *) 
  (* READ_RESET_VALUE_A = "0" *) 
  (* READ_RESET_VALUE_B = "0" *) 
  (* RST_MODE_A = "SYNC" *) 
  (* RST_MODE_B = "SYNC" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_EMBEDDED_CONSTRAINT = "0" *) 
  (* USE_MEM_INIT = "0" *) 
  (* USE_MEM_INIT_MMI = "0" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH_A = "41" *) 
  (* WRITE_DATA_WIDTH_B = "41" *) 
  (* WRITE_MODE_A = "2" *) 
  (* WRITE_MODE_B = "2" *) 
  (* WRITE_PROTECT = "1" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* rsta_loop_iter = "44" *) 
  (* rstb_loop_iter = "44" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_memory_base__parameterized0__2 \gen_sdpram.xpm_memory_base_inst 
       (.addra(wr_pntr_ext[8:0]),
        .addrb(rd_pntr_ext),
        .clka(wr_clk),
        .clkb(rd_clk),
        .dbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ),
        .dbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ),
        .dina(din),
        .dinb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .douta(\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED [40:0]),
        .doutb(dout),
        .ena(wr_pntr_plus1_pf_carry),
        .enb(ram_rd_en_i),
        .injectdbiterra(1'b0),
        .injectdbiterrb(1'b0),
        .injectsbiterra(1'b0),
        .injectsbiterrb(1'b0),
        .regcea(1'b0),
        .regceb(\gen_fwft.ram_regout_en ),
        .rsta(1'b0),
        .rstb(rd_rst_busy),
        .sbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ),
        .sbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ),
        .sleep(sleep),
        .wea(1'b0),
        .web(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair343" *) 
  LUT3 #(
    .INIT(8'h2C)) 
    \gen_sdpram.xpm_memory_base_inst_i_3 
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .O(\gen_fwft.ram_regout_en ));
  FDRE #(
    .INIT(1'b0)) 
    \gof.overflow_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(overflow_i0),
        .Q(overflow),
        .R(1'b0));
  FDRE \grdc.rd_data_count_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q(rd_data_count[0]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(rd_data_count[1]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [3]),
        .Q(rd_data_count[2]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [4]),
        .Q(rd_data_count[3]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [5]),
        .Q(rd_data_count[4]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [6]),
        .Q(rd_data_count[5]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [7]),
        .Q(rd_data_count[6]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [8]),
        .Q(rd_data_count[7]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[9] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [9]),
        .Q(rd_data_count[8]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \guf.underflow_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(underflow_i0),
        .Q(underflow),
        .R(1'b0));
  FDRE \gwdc.wr_data_count_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [1]),
        .Q(wr_data_count[0]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [2]),
        .Q(wr_data_count[1]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [3]),
        .Q(wr_data_count[2]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [4]),
        .Q(wr_data_count[3]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [5]),
        .Q(wr_data_count[4]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [6]),
        .Q(wr_data_count[5]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [7]),
        .Q(wr_data_count[6]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [8]),
        .Q(wr_data_count[7]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[9] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [9]),
        .Q(wr_data_count[8]),
        .R(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized3 rdp_inst
       (.D(\grdc.diff_wr_rd_pntr_rdc ),
        .DI({\gen_cdc_pntr.wpr_gray_reg_dc_n_0 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_1 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_2 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_5 ,\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .Q({rdp_inst_n_0,rd_pntr_ext}),
        .S(\gen_cdc_pntr.wpr_gray_reg_dc_n_16 ),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\count_value_i_reg[1]_0 (rdp_inst_n_21),
        .\count_value_i_reg[7]_0 ({rdp_inst_n_31,rdp_inst_n_32,rdp_inst_n_33,rdp_inst_n_34,rdp_inst_n_35,rdp_inst_n_36,rdp_inst_n_37,rdp_inst_n_38}),
        .\count_value_i_reg[9]_0 (rd_rst_busy),
        .\gen_pf_ic_rc.ram_empty_i_reg ({\gen_cdc_pntr.wpr_gray_reg_n_0 ,\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .\grdc.rd_data_count_i_reg[7] (count_value_i),
        .\grdc.rd_data_count_i_reg[9] (\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ),
        .\grdc.rd_data_count_i_reg[9]_0 ({\gen_cdc_pntr.wpr_gray_reg_dc_n_6 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_7 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 }),
        .ram_empty_i(ram_empty_i),
        .ram_rd_en_i(ram_rd_en_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[7] (rdp_inst_n_11),
        .src_in_bin(src_in_bin00_out[9:1]));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized4 rdpp1_inst
       (.E(ram_rd_en_i),
        .Q(curr_fwft_state),
        .\count_value_i_reg[0]_0 (rd_rst_busy),
        .\gen_pf_ic_rc.ram_empty_i_reg (rdp_inst_n_21),
        .\gen_pf_ic_rc.ram_empty_i_reg_0 (rdp_inst_n_11),
        .\gen_pf_ic_rc.ram_empty_i_reg_1 ({\gen_cdc_pntr.wpr_gray_reg_n_0 ,\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .ram_empty_i(ram_empty_i),
        .ram_empty_i0(ram_empty_i0),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_bit rst_d1_inst
       (.Q(diff_pntr_pf_q),
        .clr_full(clr_full),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] (rst_d1_inst_n_1),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg (full),
        .overflow_i0(overflow_i0),
        .prog_full(prog_full),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized3_3 wrp_inst
       (.D(\gwdc.diff_wr_rd_pntr1_out ),
        .Q(wr_pntr_ext),
        .\count_value_i_reg[5]_0 (full),
        .\gwdc.wr_data_count_i_reg[9] ({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_9 }),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized4_4 wrpp1_inst
       (.D(diff_pntr_pf_q0),
        .Q(wr_pntr_plus1_pf),
        .\count_value_i_reg[5]_0 (full),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] (rd_pntr_wr),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized5 wrpp2_inst
       (.Q({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7,wrpp2_inst_n_8}),
        .\count_value_i_reg[5]_0 (full),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_rst__xdcDup__3 xpm_fifo_rst_inst
       (.\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] (\grdc.rd_data_count_i0 ),
        .Q(curr_fwft_state),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[8] (full),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_0 (rd_rst_busy),
        .\guf.underflow_i_reg (empty),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .rst_d1(rst_d1),
        .underflow_i0(underflow_i0),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wr_rst_busy(wr_rst_busy),
        .wrst_busy(wrst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_DEST_SYNC_FF = "3" *) (* COMMON_CLOCK = "0" *) 
(* DOUT_RESET_VALUE = "0" *) (* ECC_MODE = "0" *) (* ENABLE_ECC = "0" *) 
(* EN_ADV_FEATURE = "16'b0000011100000111" *) (* EN_AE = "1'b0" *) (* EN_AF = "1'b0" *) 
(* EN_DVLD = "1'b0" *) (* EN_OF = "1'b1" *) (* EN_PE = "1'b1" *) 
(* EN_PF = "1'b1" *) (* EN_RDC = "1'b1" *) (* EN_UF = "1'b1" *) 
(* EN_WACK = "1'b0" *) (* EN_WDC = "1'b1" *) (* FG_EQ_ASYM_DOUT = "1'b0" *) 
(* FIFO_MEMORY_TYPE = "1" *) (* FIFO_MEM_TYPE = "1" *) (* FIFO_READ_DEPTH = "256" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_SIZE = "2048" *) (* FIFO_WRITE_DEPTH = "256" *) 
(* FULL_RESET_VALUE = "1" *) (* FULL_RST_VAL = "1'b1" *) (* ORIG_REF_NAME = "xpm_fifo_base" *) 
(* PE_THRESH_ADJ = "8" *) (* PE_THRESH_MAX = "251" *) (* PE_THRESH_MIN = "5" *) 
(* PF_THRESH_ADJ = "126" *) (* PF_THRESH_MAX = "251" *) (* PF_THRESH_MIN = "8" *) 
(* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "128" *) (* RD_DATA_COUNT_WIDTH = "8" *) 
(* RD_DC_WIDTH_EXT = "9" *) (* RD_LATENCY = "2" *) (* RD_MODE = "1" *) 
(* RD_PNTR_WIDTH = "8" *) (* READ_DATA_WIDTH = "8" *) (* READ_MODE = "1" *) 
(* READ_MODE_LL = "1" *) (* RELATED_CLOCKS = "0" *) (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WIDTH_RATIO = "1" *) (* WRITE_DATA_WIDTH = "8" *) 
(* WR_DATA_COUNT_WIDTH = "8" *) (* WR_DC_WIDTH_EXT = "9" *) (* WR_DEPTH_LOG = "8" *) 
(* WR_PNTR_WIDTH = "8" *) (* WR_RD_RATIO = "0" *) (* WR_WIDTH_LOG = "3" *) 
(* XPM_MODULE = "TRUE" *) (* both_stages_valid = "3" *) (* invalid = "0" *) 
(* keep_hierarchy = "soft" *) (* stage1_valid = "2" *) (* stage2_valid = "1" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_base__parameterized1
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    full_n,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [7:0]din;
  output full;
  output full_n;
  output prog_full;
  output [7:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [7:0]dout;
  output empty;
  output prog_empty;
  output [7:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [1:0]count_value_i;
  wire [1:0]curr_fwft_state;
  wire [7:0]diff_pntr_pe;
  wire [8:2]diff_pntr_pf_q;
  wire [8:2]diff_pntr_pf_q0;
  wire [7:0]din;
  wire [7:0]dout;
  wire empty;
  wire empty_fwft_i0;
  wire full;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_0 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_7 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_10 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_11 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_12 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_13 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_14 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_15 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_16 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_9 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_7 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_8 ;
  wire \gen_fwft.count_rst ;
  wire \gen_fwft.ram_regout_en ;
  wire \gen_fwft.rdpp1_inst_n_3 ;
  wire \gen_fwft.rdpp1_inst_n_4 ;
  wire \gen_fwft.rdpp1_inst_n_5 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ;
  wire [8:1]\grdc.diff_wr_rd_pntr_rdc ;
  wire \grdc.rd_data_count_i0 ;
  wire [8:1]\gwdc.diff_wr_rd_pntr1_out ;
  wire [1:0]next_fwft_state__0;
  wire overflow;
  wire overflow_i0;
  wire prog_empty;
  wire prog_full;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire [7:0]rd_data_count;
  wire rd_en;
  wire [7:0]rd_pntr_ext;
  wire [7:0]rd_pntr_wr;
  wire [7:0]rd_pntr_wr_cdc;
  wire [8:0]rd_pntr_wr_cdc_dc;
  wire rd_rst_busy;
  wire rdp_inst_n_10;
  wire rdp_inst_n_19;
  wire rdp_inst_n_20;
  wire rdp_inst_n_21;
  wire rdp_inst_n_22;
  wire rdp_inst_n_23;
  wire rdp_inst_n_24;
  wire rdp_inst_n_25;
  wire rdp_inst_n_26;
  wire rdp_inst_n_27;
  wire rdp_inst_n_28;
  wire rdp_inst_n_29;
  wire rdp_inst_n_30;
  wire rdp_inst_n_31;
  wire rdp_inst_n_8;
  wire rdp_inst_n_9;
  wire rdpp1_inst_n_0;
  wire rdpp1_inst_n_1;
  wire rdpp1_inst_n_2;
  wire rdpp1_inst_n_3;
  wire rdpp1_inst_n_4;
  wire rdpp1_inst_n_5;
  wire rdpp1_inst_n_6;
  wire rdpp1_inst_n_7;
  wire rst;
  wire rst_d1;
  wire rst_d1_inst_n_1;
  wire sleep;
  wire [1:1]src_in_bin00_out;
  wire underflow;
  wire underflow_i0;
  wire wr_clk;
  wire [7:0]wr_data_count;
  wire wr_en;
  wire [8:0]wr_pntr_ext;
  wire [8:1]wr_pntr_plus1_pf;
  wire wr_pntr_plus1_pf_carry;
  wire [7:0]wr_pntr_rd_cdc;
  wire [8:0]wr_pntr_rd_cdc_dc;
  wire wr_rst_busy;
  wire wrpp2_inst_n_0;
  wire wrpp2_inst_n_1;
  wire wrpp2_inst_n_2;
  wire wrpp2_inst_n_3;
  wire wrpp2_inst_n_4;
  wire wrpp2_inst_n_5;
  wire wrpp2_inst_n_6;
  wire wrpp2_inst_n_7;
  wire wrst_busy;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ;
  wire [7:0]\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign full_n = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  (* SOFT_HLUTNM = "soft_lutpair243" *) 
  LUT4 #(
    .INIT(16'h6A85)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[0]_i_1 
       (.I0(curr_fwft_state[0]),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(ram_empty_i),
        .O(next_fwft_state__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair243" *) 
  LUT4 #(
    .INIT(16'h3FF0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[1]_i_1 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(curr_fwft_state[0]),
        .O(next_fwft_state__0[1]));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[0]),
        .Q(curr_fwft_state[0]),
        .R(rd_rst_busy));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[1]),
        .Q(curr_fwft_state[1]),
        .R(rd_rst_busy));
  GND GND
       (.G(\<const0> ));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized1 \gen_cdc_pntr.rd_pntr_cdc_dc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc_dc),
        .src_clk(rd_clk),
        .src_in_bin({rdp_inst_n_24,rdp_inst_n_25,rdp_inst_n_26,rdp_inst_n_27,rdp_inst_n_28,rdp_inst_n_29,rdp_inst_n_30,src_in_bin00_out,rdp_inst_n_31}));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "8" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray \gen_cdc_pntr.rd_pntr_cdc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc),
        .src_clk(rd_clk),
        .src_in_bin(rd_pntr_ext));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec \gen_cdc_pntr.rpw_gray_reg 
       (.D(rd_pntr_wr_cdc),
        .Q(wr_pntr_plus1_pf),
        .d_out_int_reg(\gen_cdc_pntr.rpw_gray_reg_n_8 ),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7}),
        .\reg_out_i_reg[7]_0 (rd_pntr_wr),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized0_18 \gen_cdc_pntr.rpw_gray_reg_dc 
       (.D(rd_pntr_wr_cdc_dc),
        .Q({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 }),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec_19 \gen_cdc_pntr.wpr_gray_reg 
       (.D(wr_pntr_rd_cdc),
        .Q(curr_fwft_state),
        .\gen_pf_ic_rc.ram_empty_i_reg (rd_pntr_ext),
        .\gen_pf_ic_rc.ram_empty_i_reg_0 ({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3,rdpp1_inst_n_4,rdpp1_inst_n_5,rdpp1_inst_n_6,rdpp1_inst_n_7}),
        .ram_empty_i(ram_empty_i),
        .ram_empty_i0(ram_empty_i0),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[0]_0 (rd_rst_busy),
        .\reg_out_i_reg[7]_0 ({\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized0_20 \gen_cdc_pntr.wpr_gray_reg_dc 
       (.D(\grdc.diff_wr_rd_pntr_rdc ),
        .DI({rdp_inst_n_9,\gen_fwft.rdpp1_inst_n_5 }),
        .Q({\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_16 }),
        .S({rdp_inst_n_19,rdp_inst_n_20,rdp_inst_n_21,rdp_inst_n_22,rdp_inst_n_23,\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .\grdc.rd_data_count_i_reg[7] (count_value_i[1]),
        .\grdc.rd_data_count_i_reg[7]_0 (rd_pntr_ext[6:1]),
        .\grdc.rd_data_count_i_reg[8] (rdp_inst_n_10),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[8]_0 (rd_rst_busy),
        .\reg_out_i_reg[8]_1 (wr_pntr_rd_cdc_dc));
  (* DEST_SYNC_FF = "5" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized0 \gen_cdc_pntr.wr_pntr_cdc_dc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc_dc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "8" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__10 \gen_cdc_pntr.wr_pntr_cdc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext[7:0]));
  (* SOFT_HLUTNM = "soft_lutpair242" *) 
  LUT4 #(
    .INIT(16'hF380)) 
    \gen_fwft.empty_fwft_i_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .I3(empty),
        .O(empty_fwft_i0));
  FDSE #(
    .INIT(1'b1)) 
    \gen_fwft.empty_fwft_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .Q(empty),
        .S(rd_rst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn_21 \gen_fwft.rdpp1_inst 
       (.DI(\gen_fwft.rdpp1_inst_n_5 ),
        .Q(count_value_i),
        .S({\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\grdc.rd_data_count_i_reg[7] (rd_pntr_ext[1:0]),
        .\grdc.rd_data_count_i_reg[7]_0 ({\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_16 }),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .src_in_bin(src_in_bin00_out));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_cdc_pntr.rpw_gray_reg_n_8 ),
        .Q(full),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[0]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[1]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[2]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[3]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[4]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[5]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[6]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[7]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .R(rd_rst_busy));
  LUT4 #(
    .INIT(16'h88B8)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1 
       (.I0(prog_empty),
        .I1(empty),
        .I2(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h01FF)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ),
        .Q(prog_empty),
        .S(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[2]),
        .Q(diff_pntr_pf_q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[3]),
        .Q(diff_pntr_pf_q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[4]),
        .Q(diff_pntr_pf_q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[5]),
        .Q(diff_pntr_pf_q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[6]),
        .Q(diff_pntr_pf_q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[7]),
        .Q(diff_pntr_pf_q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[8]),
        .Q(diff_pntr_pf_q[8]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1_inst_n_1),
        .Q(prog_full),
        .S(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.ram_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i0),
        .Q(ram_empty_i),
        .S(rd_rst_busy));
  (* ADDR_WIDTH_A = "8" *) 
  (* ADDR_WIDTH_B = "8" *) 
  (* AUTO_SLEEP_TIME = "0" *) 
  (* BYTE_WRITE_WIDTH_A = "8" *) 
  (* BYTE_WRITE_WIDTH_B = "8" *) 
  (* CASCADE_HEIGHT = "0" *) 
  (* CLOCKING_MODE = "1" *) 
  (* ECC_BIT_RANGE = "[7:0]" *) 
  (* ECC_MODE = "0" *) 
  (* ECC_TYPE = "NONE" *) 
  (* IGNORE_INIT_SYNTH = "0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* MAX_NUM_CHAR = "0" *) 
  (* MEMORY_INIT_FILE = "none" *) 
  (* MEMORY_INIT_PARAM = "" *) 
  (* MEMORY_OPTIMIZATION = "true" *) 
  (* MEMORY_PRIMITIVE = "1" *) 
  (* MEMORY_SIZE = "2048" *) 
  (* MEMORY_TYPE = "1" *) 
  (* MESSAGE_CONTROL = "0" *) 
  (* NUM_CHAR_LOC = "0" *) 
  (* P_ECC_MODE = "no_ecc" *) 
  (* P_ENABLE_BYTE_WRITE_A = "0" *) 
  (* P_ENABLE_BYTE_WRITE_B = "0" *) 
  (* P_MAX_DEPTH_DATA = "256" *) 
  (* P_MEMORY_OPT = "yes" *) 
  (* P_MEMORY_PRIMITIVE = "distributed" *) 
  (* P_MIN_WIDTH_DATA = "8" *) 
  (* P_MIN_WIDTH_DATA_A = "8" *) 
  (* P_MIN_WIDTH_DATA_B = "8" *) 
  (* P_MIN_WIDTH_DATA_ECC = "8" *) 
  (* P_MIN_WIDTH_DATA_LDW = "4" *) 
  (* P_MIN_WIDTH_DATA_SHFT = "8" *) 
  (* P_NUM_COLS_WRITE_A = "1" *) 
  (* P_NUM_COLS_WRITE_B = "1" *) 
  (* P_NUM_ROWS_READ_A = "1" *) 
  (* P_NUM_ROWS_READ_B = "1" *) 
  (* P_NUM_ROWS_WRITE_A = "1" *) 
  (* P_NUM_ROWS_WRITE_B = "1" *) 
  (* P_SDP_WRITE_MODE = "yes" *) 
  (* P_WIDTH_ADDR_LSB_READ_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) 
  (* P_WIDTH_ADDR_READ_A = "8" *) 
  (* P_WIDTH_ADDR_READ_B = "8" *) 
  (* P_WIDTH_ADDR_WRITE_A = "8" *) 
  (* P_WIDTH_ADDR_WRITE_B = "8" *) 
  (* P_WIDTH_COL_WRITE_A = "8" *) 
  (* P_WIDTH_COL_WRITE_B = "8" *) 
  (* RAM_DECOMP = "auto" *) 
  (* READ_DATA_WIDTH_A = "8" *) 
  (* READ_DATA_WIDTH_B = "8" *) 
  (* READ_LATENCY_A = "2" *) 
  (* READ_LATENCY_B = "2" *) 
  (* READ_RESET_VALUE_A = "0" *) 
  (* READ_RESET_VALUE_B = "0" *) 
  (* RST_MODE_A = "SYNC" *) 
  (* RST_MODE_B = "SYNC" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_EMBEDDED_CONSTRAINT = "1" *) 
  (* USE_MEM_INIT = "0" *) 
  (* USE_MEM_INIT_MMI = "0" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH_A = "8" *) 
  (* WRITE_DATA_WIDTH_B = "8" *) 
  (* WRITE_MODE_A = "2" *) 
  (* WRITE_MODE_B = "1" *) 
  (* WRITE_PROTECT = "1" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* rsta_loop_iter = "8" *) 
  (* rstb_loop_iter = "8" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_memory_base__parameterized1 \gen_sdpram.xpm_memory_base_inst 
       (.addra(wr_pntr_ext[7:0]),
        .addrb(rd_pntr_ext),
        .clka(wr_clk),
        .clkb(rd_clk),
        .dbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ),
        .dbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ),
        .dina(din),
        .dinb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .douta(\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED [7:0]),
        .doutb(dout),
        .ena(wr_pntr_plus1_pf_carry),
        .enb(rdp_inst_n_8),
        .injectdbiterra(1'b0),
        .injectdbiterrb(1'b0),
        .injectsbiterra(1'b0),
        .injectsbiterrb(1'b0),
        .regcea(1'b0),
        .regceb(\gen_fwft.ram_regout_en ),
        .rsta(1'b0),
        .rstb(rd_rst_busy),
        .sbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ),
        .sbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ),
        .sleep(sleep),
        .wea(1'b0),
        .web(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair242" *) 
  LUT3 #(
    .INIT(8'h62)) 
    \gen_sdpram.xpm_memory_base_inst_i_3 
       (.I0(curr_fwft_state[0]),
        .I1(curr_fwft_state[1]),
        .I2(rd_en),
        .O(\gen_fwft.ram_regout_en ));
  FDRE #(
    .INIT(1'b0)) 
    \gof.overflow_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(overflow_i0),
        .Q(overflow),
        .R(1'b0));
  FDRE \grdc.rd_data_count_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q(rd_data_count[0]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(rd_data_count[1]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [3]),
        .Q(rd_data_count[2]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [4]),
        .Q(rd_data_count[3]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [5]),
        .Q(rd_data_count[4]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [6]),
        .Q(rd_data_count[5]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [7]),
        .Q(rd_data_count[6]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [8]),
        .Q(rd_data_count[7]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \guf.underflow_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(underflow_i0),
        .Q(underflow),
        .R(1'b0));
  FDRE \gwdc.wr_data_count_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [1]),
        .Q(wr_data_count[0]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [2]),
        .Q(wr_data_count[1]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [3]),
        .Q(wr_data_count[2]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [4]),
        .Q(wr_data_count[3]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [5]),
        .Q(wr_data_count[4]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [6]),
        .Q(wr_data_count[5]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [7]),
        .Q(wr_data_count[6]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [8]),
        .Q(wr_data_count[7]),
        .R(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized0 rdp_inst
       (.D(diff_pntr_pe),
        .DI(rdp_inst_n_9),
        .Q(rd_pntr_ext),
        .S({rdp_inst_n_19,rdp_inst_n_20,rdp_inst_n_21,rdp_inst_n_22,rdp_inst_n_23}),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\count_value_i_reg[7]_0 (rdp_inst_n_10),
        .\count_value_i_reg[8]_0 (rd_rst_busy),
        .enb(rdp_inst_n_8),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ({\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .\grdc.rd_data_count_i_reg[7] (count_value_i),
        .\grdc.rd_data_count_i_reg[8] ({\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_15 }),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .src_in_bin({rdp_inst_n_24,rdp_inst_n_25,rdp_inst_n_26,rdp_inst_n_27,rdp_inst_n_28,rdp_inst_n_29,rdp_inst_n_30,rdp_inst_n_31}));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized1 rdpp1_inst
       (.E(rdp_inst_n_8),
        .Q({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3,rdpp1_inst_n_4,rdpp1_inst_n_5,rdpp1_inst_n_6,rdpp1_inst_n_7}),
        .\count_value_i_reg[0]_0 (rd_rst_busy),
        .\count_value_i_reg[1]_0 (curr_fwft_state),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_bit_22 rst_d1_inst
       (.Q(diff_pntr_pf_q),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] (rst_d1_inst_n_1),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg (full),
        .overflow_i0(overflow_i0),
        .prog_full(prog_full),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized0_23 wrp_inst
       (.D(\gwdc.diff_wr_rd_pntr1_out ),
        .Q(wr_pntr_ext),
        .\count_value_i_reg[6]_0 (full),
        .\gwdc.wr_data_count_i_reg[8] ({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 }),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized1_24 wrpp1_inst
       (.D(diff_pntr_pf_q0),
        .Q(wr_pntr_plus1_pf),
        .\count_value_i_reg[6]_0 (full),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] (rd_pntr_wr),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized2 wrpp2_inst
       (.Q({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7}),
        .\count_value_i_reg[6]_0 (full),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_rst__xdcDup__5 xpm_fifo_rst_inst
       (.Q(curr_fwft_state),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[7] (full),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_0 (rd_rst_busy),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_1 (\grdc.rd_data_count_i0 ),
        .\guf.underflow_i_reg (empty),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .rst_d1(rst_d1),
        .underflow_i0(underflow_i0),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wr_rst_busy(wr_rst_busy),
        .wrst_busy(wrst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_DEST_SYNC_FF = "3" *) (* COMMON_CLOCK = "0" *) 
(* DOUT_RESET_VALUE = "0" *) (* ECC_MODE = "0" *) (* ENABLE_ECC = "0" *) 
(* EN_ADV_FEATURE = "16'b0000011100000111" *) (* EN_AE = "1'b0" *) (* EN_AF = "1'b0" *) 
(* EN_DVLD = "1'b0" *) (* EN_OF = "1'b1" *) (* EN_PE = "1'b1" *) 
(* EN_PF = "1'b1" *) (* EN_RDC = "1'b1" *) (* EN_UF = "1'b1" *) 
(* EN_WACK = "1'b0" *) (* EN_WDC = "1'b1" *) (* FG_EQ_ASYM_DOUT = "1'b0" *) 
(* FIFO_MEMORY_TYPE = "1" *) (* FIFO_MEM_TYPE = "1" *) (* FIFO_READ_DEPTH = "16" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_SIZE = "320" *) (* FIFO_WRITE_DEPTH = "16" *) 
(* FULL_RESET_VALUE = "1" *) (* FULL_RST_VAL = "1'b1" *) (* ORIG_REF_NAME = "xpm_fifo_base" *) 
(* PE_THRESH_ADJ = "8" *) (* PE_THRESH_MAX = "11" *) (* PE_THRESH_MIN = "5" *) 
(* PF_THRESH_ADJ = "9" *) (* PF_THRESH_MAX = "11" *) (* PF_THRESH_MIN = "8" *) 
(* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "11" *) (* RD_DATA_COUNT_WIDTH = "4" *) 
(* RD_DC_WIDTH_EXT = "5" *) (* RD_LATENCY = "2" *) (* RD_MODE = "1" *) 
(* RD_PNTR_WIDTH = "4" *) (* READ_DATA_WIDTH = "20" *) (* READ_MODE = "1" *) 
(* READ_MODE_LL = "1" *) (* RELATED_CLOCKS = "0" *) (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WIDTH_RATIO = "1" *) (* WRITE_DATA_WIDTH = "20" *) 
(* WR_DATA_COUNT_WIDTH = "4" *) (* WR_DC_WIDTH_EXT = "5" *) (* WR_DEPTH_LOG = "4" *) 
(* WR_PNTR_WIDTH = "4" *) (* WR_RD_RATIO = "0" *) (* WR_WIDTH_LOG = "5" *) 
(* XPM_MODULE = "TRUE" *) (* both_stages_valid = "3" *) (* invalid = "0" *) 
(* keep_hierarchy = "soft" *) (* stage1_valid = "2" *) (* stage2_valid = "1" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_base__parameterized2
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    full_n,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [19:0]din;
  output full;
  output full_n;
  output prog_full;
  output [3:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [19:0]dout;
  output empty;
  output prog_empty;
  output [3:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire clr_full;
  wire [1:0]count_value_i;
  wire [1:0]curr_fwft_state;
  wire [3:0]diff_pntr_pe;
  wire [4:1]diff_pntr_pf_q;
  wire [4:1]diff_pntr_pf_q0;
  wire [19:0]din;
  wire [19:0]dout;
  wire empty;
  wire empty_fwft_i0;
  wire full;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_5 ;
  wire \gen_fwft.count_rst ;
  wire \gen_fwft.ram_regout_en ;
  wire \gen_fwft.rdpp1_inst_n_3 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ;
  wire [4:1]\grdc.diff_wr_rd_pntr_rdc ;
  wire \grdc.rd_data_count_i0 ;
  wire [4:1]\gwdc.diff_wr_rd_pntr1_out ;
  wire [1:0]next_fwft_state__0;
  wire overflow;
  wire overflow_i0;
  wire prog_empty;
  wire prog_full;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire [3:0]rd_data_count;
  wire rd_en;
  wire [3:0]rd_pntr_ext;
  wire [3:0]rd_pntr_wr;
  wire [3:0]rd_pntr_wr_cdc;
  wire [4:0]rd_pntr_wr_cdc_dc;
  wire rd_rst_busy;
  wire rdp_inst_n_10;
  wire rdp_inst_n_11;
  wire rdp_inst_n_12;
  wire rdp_inst_n_8;
  wire rdp_inst_n_9;
  wire rdpp1_inst_n_0;
  wire rdpp1_inst_n_1;
  wire rdpp1_inst_n_2;
  wire rdpp1_inst_n_3;
  wire rst;
  wire rst_d1;
  wire rst_d1_inst_n_1;
  wire sleep;
  wire [1:1]src_in_bin00_out;
  wire underflow;
  wire underflow_i0;
  wire wr_clk;
  wire [3:0]wr_data_count;
  wire wr_en;
  wire [4:0]wr_pntr_ext;
  wire [3:1]wr_pntr_plus1_pf;
  wire wr_pntr_plus1_pf_carry;
  wire [3:0]wr_pntr_rd_cdc;
  wire [4:0]wr_pntr_rd_cdc_dc;
  wire wr_rst_busy;
  wire wrpp1_inst_n_4;
  wire wrpp2_inst_n_0;
  wire wrpp2_inst_n_1;
  wire wrpp2_inst_n_2;
  wire wrpp2_inst_n_3;
  wire wrst_busy;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ;
  wire [19:0]\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign full_n = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT4 #(
    .INIT(16'h6A85)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[0]_i_1 
       (.I0(curr_fwft_state[0]),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(ram_empty_i),
        .O(next_fwft_state__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT4 #(
    .INIT(16'h3FF0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[1]_i_1 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(curr_fwft_state[0]),
        .O(next_fwft_state__0[1]));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[0]),
        .Q(curr_fwft_state[0]),
        .R(rd_rst_busy));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[1]),
        .Q(curr_fwft_state[1]),
        .R(rd_rst_busy));
  GND GND
       (.G(\<const0> ));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "5" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized6 \gen_cdc_pntr.rd_pntr_cdc_dc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc_dc),
        .src_clk(rd_clk),
        .src_in_bin({rdp_inst_n_9,rdp_inst_n_10,rdp_inst_n_11,src_in_bin00_out,rdp_inst_n_12}));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "4" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized4 \gen_cdc_pntr.rd_pntr_cdc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc),
        .src_clk(rd_clk),
        .src_in_bin(rd_pntr_ext));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized2_54 \gen_cdc_pntr.rpw_gray_reg 
       (.D(diff_pntr_pf_q0[4:3]),
        .E(wr_pntr_plus1_pf_carry),
        .Q({rd_pntr_wr[3],rd_pntr_wr[1:0]}),
        .clr_full(clr_full),
        .\count_value_i_reg[3] (\gen_cdc_pntr.rpw_gray_reg_n_5 ),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ({wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3}),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_0 (wrpp2_inst_n_0),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] (full),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] (wr_pntr_plus1_pf),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 (wrpp1_inst_n_4),
        .\reg_out_i_reg[3]_0 (rd_pntr_wr_cdc),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized3_55 \gen_cdc_pntr.rpw_gray_reg_dc 
       (.D({\gwdc.diff_wr_rd_pntr1_out [4:3],\gwdc.diff_wr_rd_pntr1_out [1]}),
        .Q({\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 }),
        .\gwdc.wr_data_count_i_reg[4] (wr_pntr_ext),
        .\reg_out_i_reg[4]_0 (rd_pntr_wr_cdc_dc),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized2_56 \gen_cdc_pntr.wpr_gray_reg 
       (.D(diff_pntr_pe[1:0]),
        .Q({\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 }),
        .enb(rdp_inst_n_8),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] (curr_fwft_state),
        .\gen_pf_ic_rc.ram_empty_i_reg (rd_pntr_ext),
        .\gen_pf_ic_rc.ram_empty_i_reg_0 ({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3}),
        .ram_empty_i(ram_empty_i),
        .ram_empty_i0(ram_empty_i0),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[0]_0 (rd_rst_busy),
        .\reg_out_i_reg[3]_0 (wr_pntr_rd_cdc));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized3_57 \gen_cdc_pntr.wpr_gray_reg_dc 
       (.D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q({\gen_cdc_pntr.wpr_gray_reg_dc_n_1 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_2 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_5 }),
        .\grdc.rd_data_count_i_reg[1] (count_value_i),
        .\grdc.rd_data_count_i_reg[4] ({rd_pntr_ext[3],rd_pntr_ext[1:0]}),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[3]_0 (\gen_cdc_pntr.wpr_gray_reg_dc_n_6 ),
        .\reg_out_i_reg[4]_0 (rd_rst_busy),
        .\reg_out_i_reg[4]_1 (wr_pntr_rd_cdc_dc));
  (* DEST_SYNC_FF = "5" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "5" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized5 \gen_cdc_pntr.wr_pntr_cdc_dc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc_dc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "4" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized4__6 \gen_cdc_pntr.wr_pntr_cdc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext[3:0]));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT4 #(
    .INIT(16'hF380)) 
    \gen_fwft.empty_fwft_i_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .I3(empty),
        .O(empty_fwft_i0));
  FDSE #(
    .INIT(1'b1)) 
    \gen_fwft.empty_fwft_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .Q(empty),
        .S(rd_rst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn_58 \gen_fwft.rdpp1_inst 
       (.D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(count_value_i),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[1]_0 (\gen_fwft.rdpp1_inst_n_3 ),
        .\count_value_i_reg[1]_1 (curr_fwft_state),
        .\grdc.rd_data_count_i_reg[2] ({\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_5 }),
        .\grdc.rd_data_count_i_reg[2]_0 (rd_pntr_ext[2:0]),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .src_in_bin(src_in_bin00_out));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_cdc_pntr.rpw_gray_reg_n_5 ),
        .Q(full),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[0]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[1]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[2]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[3]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .R(rd_rst_busy));
  LUT6 #(
    .INIT(64'h8888888BBBBBBBBB)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1 
       (.I0(prog_empty),
        .I1(empty),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .I4(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .I5(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ),
        .Q(prog_empty),
        .S(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[1]),
        .Q(diff_pntr_pf_q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[2]),
        .Q(diff_pntr_pf_q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[3]),
        .Q(diff_pntr_pf_q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[4]),
        .Q(diff_pntr_pf_q[4]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1_inst_n_1),
        .Q(prog_full),
        .S(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.ram_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i0),
        .Q(ram_empty_i),
        .S(rd_rst_busy));
  (* ADDR_WIDTH_A = "4" *) 
  (* ADDR_WIDTH_B = "4" *) 
  (* AUTO_SLEEP_TIME = "0" *) 
  (* BYTE_WRITE_WIDTH_A = "20" *) 
  (* BYTE_WRITE_WIDTH_B = "20" *) 
  (* CASCADE_HEIGHT = "0" *) 
  (* CLOCKING_MODE = "1" *) 
  (* ECC_BIT_RANGE = "[7:0]" *) 
  (* ECC_MODE = "0" *) 
  (* ECC_TYPE = "NONE" *) 
  (* IGNORE_INIT_SYNTH = "0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* MAX_NUM_CHAR = "0" *) 
  (* MEMORY_INIT_FILE = "none" *) 
  (* MEMORY_INIT_PARAM = "" *) 
  (* MEMORY_OPTIMIZATION = "true" *) 
  (* MEMORY_PRIMITIVE = "1" *) 
  (* MEMORY_SIZE = "320" *) 
  (* MEMORY_TYPE = "1" *) 
  (* MESSAGE_CONTROL = "0" *) 
  (* NUM_CHAR_LOC = "0" *) 
  (* P_ECC_MODE = "no_ecc" *) 
  (* P_ENABLE_BYTE_WRITE_A = "0" *) 
  (* P_ENABLE_BYTE_WRITE_B = "0" *) 
  (* P_MAX_DEPTH_DATA = "16" *) 
  (* P_MEMORY_OPT = "yes" *) 
  (* P_MEMORY_PRIMITIVE = "distributed" *) 
  (* P_MIN_WIDTH_DATA = "20" *) 
  (* P_MIN_WIDTH_DATA_A = "20" *) 
  (* P_MIN_WIDTH_DATA_B = "20" *) 
  (* P_MIN_WIDTH_DATA_ECC = "20" *) 
  (* P_MIN_WIDTH_DATA_LDW = "4" *) 
  (* P_MIN_WIDTH_DATA_SHFT = "20" *) 
  (* P_NUM_COLS_WRITE_A = "1" *) 
  (* P_NUM_COLS_WRITE_B = "1" *) 
  (* P_NUM_ROWS_READ_A = "1" *) 
  (* P_NUM_ROWS_READ_B = "1" *) 
  (* P_NUM_ROWS_WRITE_A = "1" *) 
  (* P_NUM_ROWS_WRITE_B = "1" *) 
  (* P_SDP_WRITE_MODE = "yes" *) 
  (* P_WIDTH_ADDR_LSB_READ_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) 
  (* P_WIDTH_ADDR_READ_A = "4" *) 
  (* P_WIDTH_ADDR_READ_B = "4" *) 
  (* P_WIDTH_ADDR_WRITE_A = "4" *) 
  (* P_WIDTH_ADDR_WRITE_B = "4" *) 
  (* P_WIDTH_COL_WRITE_A = "20" *) 
  (* P_WIDTH_COL_WRITE_B = "20" *) 
  (* RAM_DECOMP = "auto" *) 
  (* READ_DATA_WIDTH_A = "20" *) 
  (* READ_DATA_WIDTH_B = "20" *) 
  (* READ_LATENCY_A = "2" *) 
  (* READ_LATENCY_B = "2" *) 
  (* READ_RESET_VALUE_A = "0" *) 
  (* READ_RESET_VALUE_B = "0" *) 
  (* RST_MODE_A = "SYNC" *) 
  (* RST_MODE_B = "SYNC" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_EMBEDDED_CONSTRAINT = "1" *) 
  (* USE_MEM_INIT = "0" *) 
  (* USE_MEM_INIT_MMI = "0" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH_A = "20" *) 
  (* WRITE_DATA_WIDTH_B = "20" *) 
  (* WRITE_MODE_A = "2" *) 
  (* WRITE_MODE_B = "1" *) 
  (* WRITE_PROTECT = "1" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* rsta_loop_iter = "20" *) 
  (* rstb_loop_iter = "20" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_memory_base__parameterized2 \gen_sdpram.xpm_memory_base_inst 
       (.addra(wr_pntr_ext[3:0]),
        .addrb(rd_pntr_ext),
        .clka(wr_clk),
        .clkb(rd_clk),
        .dbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ),
        .dbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ),
        .dina(din),
        .dinb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .douta(\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED [19:0]),
        .doutb(dout),
        .ena(wr_pntr_plus1_pf_carry),
        .enb(rdp_inst_n_8),
        .injectdbiterra(1'b0),
        .injectdbiterrb(1'b0),
        .injectsbiterra(1'b0),
        .injectsbiterrb(1'b0),
        .regcea(1'b0),
        .regceb(\gen_fwft.ram_regout_en ),
        .rsta(1'b0),
        .rstb(rd_rst_busy),
        .sbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ),
        .sbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ),
        .sleep(sleep),
        .wea(1'b0),
        .web(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT3 #(
    .INIT(8'h62)) 
    \gen_sdpram.xpm_memory_base_inst_i_3 
       (.I0(curr_fwft_state[0]),
        .I1(curr_fwft_state[1]),
        .I2(rd_en),
        .O(\gen_fwft.ram_regout_en ));
  FDRE #(
    .INIT(1'b0)) 
    \gof.overflow_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(overflow_i0),
        .Q(overflow),
        .R(1'b0));
  FDRE \grdc.rd_data_count_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q(rd_data_count[0]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(rd_data_count[1]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [3]),
        .Q(rd_data_count[2]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [4]),
        .Q(rd_data_count[3]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \guf.underflow_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(underflow_i0),
        .Q(underflow),
        .R(1'b0));
  FDRE \gwdc.wr_data_count_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [1]),
        .Q(wr_data_count[0]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [2]),
        .Q(wr_data_count[1]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [3]),
        .Q(wr_data_count[2]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [4]),
        .Q(wr_data_count[3]),
        .R(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized6_59 rdp_inst
       (.D(diff_pntr_pe[3:2]),
        .E(rdp_inst_n_8),
        .Q(rd_pntr_ext),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\count_value_i_reg[4]_0 (rd_rst_busy),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] ({\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 }),
        .\grdc.rd_data_count_i_reg[4] (\gen_fwft.rdpp1_inst_n_3 ),
        .\grdc.rd_data_count_i_reg[4]_0 ({\gen_cdc_pntr.wpr_gray_reg_dc_n_1 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_2 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 }),
        .\grdc.rd_data_count_i_reg[4]_1 (\gen_cdc_pntr.wpr_gray_reg_dc_n_6 ),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[2] (\grdc.diff_wr_rd_pntr_rdc [4:3]),
        .\src_gray_ff_reg[4] (count_value_i),
        .src_in_bin({rdp_inst_n_9,rdp_inst_n_10,rdp_inst_n_11,rdp_inst_n_12}));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized7_60 rdpp1_inst
       (.E(rdp_inst_n_8),
        .Q({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3}),
        .\count_value_i_reg[0]_0 (rd_rst_busy),
        .\count_value_i_reg[1]_0 (curr_fwft_state),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_bit_61 rst_d1_inst
       (.D(diff_pntr_pf_q0[1]),
        .Q(diff_pntr_pf_q),
        .clr_full(clr_full),
        .d_out_int_reg_0(rst_d1_inst_n_1),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] (rd_pntr_wr[0]),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1]_0 (wr_pntr_plus1_pf[1]),
        .\gof.overflow_i_reg (full),
        .overflow_i0(overflow_i0),
        .prog_full(prog_full),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized6_62 wrp_inst
       (.D(\gwdc.diff_wr_rd_pntr1_out [2]),
        .E(wr_pntr_plus1_pf_carry),
        .Q(wr_pntr_ext),
        .\gwdc.wr_data_count_i_reg[2] ({\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 }),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized7_63 wrpp1_inst
       (.D(diff_pntr_pf_q0[2]),
        .E(wr_pntr_plus1_pf_carry),
        .Q(wr_pntr_plus1_pf),
        .\count_value_i_reg[3]_0 (wrpp1_inst_n_4),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ({rd_pntr_wr[3],rd_pntr_wr[1:0]}),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized8_64 wrpp2_inst
       (.E(wr_pntr_plus1_pf_carry),
        .Q(rd_pntr_wr[3]),
        .\count_value_i_reg[2]_0 ({wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3}),
        .\count_value_i_reg[3]_0 (wrpp2_inst_n_0),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_rst xpm_fifo_rst_inst
       (.E(wr_pntr_plus1_pf_carry),
        .Q(curr_fwft_state),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[3] (full),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_0 (rd_rst_busy),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_1 (\grdc.rd_data_count_i0 ),
        .\guf.underflow_i_reg (empty),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .rst_d1(rst_d1),
        .underflow_i0(underflow_i0),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy),
        .wrst_busy(wrst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_DEST_SYNC_FF = "3" *) (* COMMON_CLOCK = "0" *) 
(* DOUT_RESET_VALUE = "0" *) (* ECC_MODE = "0" *) (* ENABLE_ECC = "0" *) 
(* EN_ADV_FEATURE = "16'b0000011100000111" *) (* EN_AE = "1'b0" *) (* EN_AF = "1'b0" *) 
(* EN_DVLD = "1'b0" *) (* EN_OF = "1'b1" *) (* EN_PE = "1'b1" *) 
(* EN_PF = "1'b1" *) (* EN_RDC = "1'b1" *) (* EN_UF = "1'b1" *) 
(* EN_WACK = "1'b0" *) (* EN_WDC = "1'b1" *) (* FG_EQ_ASYM_DOUT = "1'b0" *) 
(* FIFO_MEMORY_TYPE = "1" *) (* FIFO_MEM_TYPE = "1" *) (* FIFO_READ_DEPTH = "16" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_SIZE = "320" *) (* FIFO_WRITE_DEPTH = "16" *) 
(* FULL_RESET_VALUE = "1" *) (* FULL_RST_VAL = "1'b1" *) (* ORIG_REF_NAME = "xpm_fifo_base" *) 
(* PE_THRESH_ADJ = "8" *) (* PE_THRESH_MAX = "11" *) (* PE_THRESH_MIN = "5" *) 
(* PF_THRESH_ADJ = "9" *) (* PF_THRESH_MAX = "11" *) (* PF_THRESH_MIN = "8" *) 
(* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "11" *) (* RD_DATA_COUNT_WIDTH = "4" *) 
(* RD_DC_WIDTH_EXT = "5" *) (* RD_LATENCY = "2" *) (* RD_MODE = "1" *) 
(* RD_PNTR_WIDTH = "4" *) (* READ_DATA_WIDTH = "20" *) (* READ_MODE = "1" *) 
(* READ_MODE_LL = "1" *) (* RELATED_CLOCKS = "0" *) (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WIDTH_RATIO = "1" *) (* WRITE_DATA_WIDTH = "20" *) 
(* WR_DATA_COUNT_WIDTH = "4" *) (* WR_DC_WIDTH_EXT = "5" *) (* WR_DEPTH_LOG = "4" *) 
(* WR_PNTR_WIDTH = "4" *) (* WR_RD_RATIO = "0" *) (* WR_WIDTH_LOG = "5" *) 
(* XPM_MODULE = "TRUE" *) (* both_stages_valid = "3" *) (* invalid = "0" *) 
(* keep_hierarchy = "soft" *) (* stage1_valid = "2" *) (* stage2_valid = "1" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_base__parameterized2__xdcDup__1
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    full_n,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [19:0]din;
  output full;
  output full_n;
  output prog_full;
  output [3:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [19:0]dout;
  output empty;
  output prog_empty;
  output [3:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire clr_full;
  wire [1:0]count_value_i;
  wire [1:0]curr_fwft_state;
  wire [3:0]diff_pntr_pe;
  wire [4:1]diff_pntr_pf_q;
  wire [4:1]diff_pntr_pf_q0;
  wire [19:0]din;
  wire [19:0]dout;
  wire empty;
  wire empty_fwft_i0;
  wire full;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_5 ;
  wire \gen_fwft.count_rst ;
  wire \gen_fwft.ram_regout_en ;
  wire \gen_fwft.rdpp1_inst_n_3 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ;
  wire [4:1]\grdc.diff_wr_rd_pntr_rdc ;
  wire \grdc.rd_data_count_i0 ;
  wire [4:1]\gwdc.diff_wr_rd_pntr1_out ;
  wire [1:0]next_fwft_state__0;
  wire overflow;
  wire overflow_i0;
  wire prog_empty;
  wire prog_full;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire [3:0]rd_data_count;
  wire rd_en;
  wire [3:0]rd_pntr_ext;
  wire [3:0]rd_pntr_wr;
  wire [3:0]rd_pntr_wr_cdc;
  wire [4:0]rd_pntr_wr_cdc_dc;
  wire rd_rst_busy;
  wire rdp_inst_n_10;
  wire rdp_inst_n_11;
  wire rdp_inst_n_12;
  wire rdp_inst_n_8;
  wire rdp_inst_n_9;
  wire rdpp1_inst_n_0;
  wire rdpp1_inst_n_1;
  wire rdpp1_inst_n_2;
  wire rdpp1_inst_n_3;
  wire rst;
  wire rst_d1;
  wire rst_d1_inst_n_1;
  wire sleep;
  wire [1:1]src_in_bin00_out;
  wire underflow;
  wire underflow_i0;
  wire wr_clk;
  wire [3:0]wr_data_count;
  wire wr_en;
  wire [4:0]wr_pntr_ext;
  wire [3:1]wr_pntr_plus1_pf;
  wire wr_pntr_plus1_pf_carry;
  wire [3:0]wr_pntr_rd_cdc;
  wire [4:0]wr_pntr_rd_cdc_dc;
  wire wr_rst_busy;
  wire wrpp1_inst_n_4;
  wire wrpp2_inst_n_0;
  wire wrpp2_inst_n_1;
  wire wrpp2_inst_n_2;
  wire wrpp2_inst_n_3;
  wire wrst_busy;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ;
  wire [19:0]\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign full_n = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT4 #(
    .INIT(16'h6A85)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[0]_i_1 
       (.I0(curr_fwft_state[0]),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(ram_empty_i),
        .O(next_fwft_state__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT4 #(
    .INIT(16'h3FF0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[1]_i_1 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(curr_fwft_state[0]),
        .O(next_fwft_state__0[1]));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[0]),
        .Q(curr_fwft_state[0]),
        .R(rd_rst_busy));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[1]),
        .Q(curr_fwft_state[1]),
        .R(rd_rst_busy));
  GND GND
       (.G(\<const0> ));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "5" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized6__2 \gen_cdc_pntr.rd_pntr_cdc_dc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc_dc),
        .src_clk(rd_clk),
        .src_in_bin({rdp_inst_n_9,rdp_inst_n_10,rdp_inst_n_11,src_in_bin00_out,rdp_inst_n_12}));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "4" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized4__5 \gen_cdc_pntr.rd_pntr_cdc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc),
        .src_clk(rd_clk),
        .src_in_bin(rd_pntr_ext));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized2 \gen_cdc_pntr.rpw_gray_reg 
       (.D(diff_pntr_pf_q0[4:3]),
        .E(wr_pntr_plus1_pf_carry),
        .Q({rd_pntr_wr[3],rd_pntr_wr[1:0]}),
        .clr_full(clr_full),
        .\count_value_i_reg[3] (\gen_cdc_pntr.rpw_gray_reg_n_5 ),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ({wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3}),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_0 (wrpp2_inst_n_0),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] (full),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] (wr_pntr_plus1_pf),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 (wrpp1_inst_n_4),
        .\reg_out_i_reg[3]_0 (rd_pntr_wr_cdc),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized3 \gen_cdc_pntr.rpw_gray_reg_dc 
       (.D({\gwdc.diff_wr_rd_pntr1_out [4:3],\gwdc.diff_wr_rd_pntr1_out [1]}),
        .Q({\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 }),
        .\gwdc.wr_data_count_i_reg[4] (wr_pntr_ext),
        .\reg_out_i_reg[4]_0 (rd_pntr_wr_cdc_dc),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized2_48 \gen_cdc_pntr.wpr_gray_reg 
       (.D(diff_pntr_pe[1:0]),
        .Q({\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 }),
        .enb(rdp_inst_n_8),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] (curr_fwft_state),
        .\gen_pf_ic_rc.ram_empty_i_reg (rd_pntr_ext),
        .\gen_pf_ic_rc.ram_empty_i_reg_0 ({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3}),
        .ram_empty_i(ram_empty_i),
        .ram_empty_i0(ram_empty_i0),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[0]_0 (rd_rst_busy),
        .\reg_out_i_reg[3]_0 (wr_pntr_rd_cdc));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized3_49 \gen_cdc_pntr.wpr_gray_reg_dc 
       (.D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q({\gen_cdc_pntr.wpr_gray_reg_dc_n_1 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_2 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_5 }),
        .\grdc.rd_data_count_i_reg[1] (count_value_i),
        .\grdc.rd_data_count_i_reg[4] ({rd_pntr_ext[3],rd_pntr_ext[1:0]}),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[3]_0 (\gen_cdc_pntr.wpr_gray_reg_dc_n_6 ),
        .\reg_out_i_reg[4]_0 (rd_rst_busy),
        .\reg_out_i_reg[4]_1 (wr_pntr_rd_cdc_dc));
  (* DEST_SYNC_FF = "5" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "5" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized5__2 \gen_cdc_pntr.wr_pntr_cdc_dc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc_dc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "4" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized4__4 \gen_cdc_pntr.wr_pntr_cdc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext[3:0]));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT4 #(
    .INIT(16'hF380)) 
    \gen_fwft.empty_fwft_i_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .I3(empty),
        .O(empty_fwft_i0));
  FDSE #(
    .INIT(1'b1)) 
    \gen_fwft.empty_fwft_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .Q(empty),
        .S(rd_rst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn_50 \gen_fwft.rdpp1_inst 
       (.D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(count_value_i),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[1]_0 (\gen_fwft.rdpp1_inst_n_3 ),
        .\count_value_i_reg[1]_1 (curr_fwft_state),
        .\grdc.rd_data_count_i_reg[2] ({\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_5 }),
        .\grdc.rd_data_count_i_reg[2]_0 (rd_pntr_ext[2:0]),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .src_in_bin(src_in_bin00_out));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_cdc_pntr.rpw_gray_reg_n_5 ),
        .Q(full),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[0]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[1]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[2]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[3]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .R(rd_rst_busy));
  LUT6 #(
    .INIT(64'h8888888BBBBBBBBB)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1 
       (.I0(prog_empty),
        .I1(empty),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .I4(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .I5(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ),
        .Q(prog_empty),
        .S(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[1]),
        .Q(diff_pntr_pf_q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[2]),
        .Q(diff_pntr_pf_q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[3]),
        .Q(diff_pntr_pf_q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[4]),
        .Q(diff_pntr_pf_q[4]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1_inst_n_1),
        .Q(prog_full),
        .S(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.ram_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i0),
        .Q(ram_empty_i),
        .S(rd_rst_busy));
  (* ADDR_WIDTH_A = "4" *) 
  (* ADDR_WIDTH_B = "4" *) 
  (* AUTO_SLEEP_TIME = "0" *) 
  (* BYTE_WRITE_WIDTH_A = "20" *) 
  (* BYTE_WRITE_WIDTH_B = "20" *) 
  (* CASCADE_HEIGHT = "0" *) 
  (* CLOCKING_MODE = "1" *) 
  (* ECC_BIT_RANGE = "[7:0]" *) 
  (* ECC_MODE = "0" *) 
  (* ECC_TYPE = "NONE" *) 
  (* IGNORE_INIT_SYNTH = "0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* MAX_NUM_CHAR = "0" *) 
  (* MEMORY_INIT_FILE = "none" *) 
  (* MEMORY_INIT_PARAM = "" *) 
  (* MEMORY_OPTIMIZATION = "true" *) 
  (* MEMORY_PRIMITIVE = "1" *) 
  (* MEMORY_SIZE = "320" *) 
  (* MEMORY_TYPE = "1" *) 
  (* MESSAGE_CONTROL = "0" *) 
  (* NUM_CHAR_LOC = "0" *) 
  (* P_ECC_MODE = "no_ecc" *) 
  (* P_ENABLE_BYTE_WRITE_A = "0" *) 
  (* P_ENABLE_BYTE_WRITE_B = "0" *) 
  (* P_MAX_DEPTH_DATA = "16" *) 
  (* P_MEMORY_OPT = "yes" *) 
  (* P_MEMORY_PRIMITIVE = "distributed" *) 
  (* P_MIN_WIDTH_DATA = "20" *) 
  (* P_MIN_WIDTH_DATA_A = "20" *) 
  (* P_MIN_WIDTH_DATA_B = "20" *) 
  (* P_MIN_WIDTH_DATA_ECC = "20" *) 
  (* P_MIN_WIDTH_DATA_LDW = "4" *) 
  (* P_MIN_WIDTH_DATA_SHFT = "20" *) 
  (* P_NUM_COLS_WRITE_A = "1" *) 
  (* P_NUM_COLS_WRITE_B = "1" *) 
  (* P_NUM_ROWS_READ_A = "1" *) 
  (* P_NUM_ROWS_READ_B = "1" *) 
  (* P_NUM_ROWS_WRITE_A = "1" *) 
  (* P_NUM_ROWS_WRITE_B = "1" *) 
  (* P_SDP_WRITE_MODE = "yes" *) 
  (* P_WIDTH_ADDR_LSB_READ_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) 
  (* P_WIDTH_ADDR_READ_A = "4" *) 
  (* P_WIDTH_ADDR_READ_B = "4" *) 
  (* P_WIDTH_ADDR_WRITE_A = "4" *) 
  (* P_WIDTH_ADDR_WRITE_B = "4" *) 
  (* P_WIDTH_COL_WRITE_A = "20" *) 
  (* P_WIDTH_COL_WRITE_B = "20" *) 
  (* RAM_DECOMP = "auto" *) 
  (* READ_DATA_WIDTH_A = "20" *) 
  (* READ_DATA_WIDTH_B = "20" *) 
  (* READ_LATENCY_A = "2" *) 
  (* READ_LATENCY_B = "2" *) 
  (* READ_RESET_VALUE_A = "0" *) 
  (* READ_RESET_VALUE_B = "0" *) 
  (* RST_MODE_A = "SYNC" *) 
  (* RST_MODE_B = "SYNC" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_EMBEDDED_CONSTRAINT = "1" *) 
  (* USE_MEM_INIT = "0" *) 
  (* USE_MEM_INIT_MMI = "0" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH_A = "20" *) 
  (* WRITE_DATA_WIDTH_B = "20" *) 
  (* WRITE_MODE_A = "2" *) 
  (* WRITE_MODE_B = "1" *) 
  (* WRITE_PROTECT = "1" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* rsta_loop_iter = "20" *) 
  (* rstb_loop_iter = "20" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_memory_base__parameterized2__2 \gen_sdpram.xpm_memory_base_inst 
       (.addra(wr_pntr_ext[3:0]),
        .addrb(rd_pntr_ext),
        .clka(wr_clk),
        .clkb(rd_clk),
        .dbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ),
        .dbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ),
        .dina(din),
        .dinb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .douta(\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED [19:0]),
        .doutb(dout),
        .ena(wr_pntr_plus1_pf_carry),
        .enb(rdp_inst_n_8),
        .injectdbiterra(1'b0),
        .injectdbiterrb(1'b0),
        .injectsbiterra(1'b0),
        .injectsbiterrb(1'b0),
        .regcea(1'b0),
        .regceb(\gen_fwft.ram_regout_en ),
        .rsta(1'b0),
        .rstb(rd_rst_busy),
        .sbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ),
        .sbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ),
        .sleep(sleep),
        .wea(1'b0),
        .web(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT3 #(
    .INIT(8'h62)) 
    \gen_sdpram.xpm_memory_base_inst_i_3 
       (.I0(curr_fwft_state[0]),
        .I1(curr_fwft_state[1]),
        .I2(rd_en),
        .O(\gen_fwft.ram_regout_en ));
  FDRE #(
    .INIT(1'b0)) 
    \gof.overflow_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(overflow_i0),
        .Q(overflow),
        .R(1'b0));
  FDRE \grdc.rd_data_count_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q(rd_data_count[0]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(rd_data_count[1]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [3]),
        .Q(rd_data_count[2]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [4]),
        .Q(rd_data_count[3]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \guf.underflow_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(underflow_i0),
        .Q(underflow),
        .R(1'b0));
  FDRE \gwdc.wr_data_count_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [1]),
        .Q(wr_data_count[0]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [2]),
        .Q(wr_data_count[1]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [3]),
        .Q(wr_data_count[2]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [4]),
        .Q(wr_data_count[3]),
        .R(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized6 rdp_inst
       (.D(diff_pntr_pe[3:2]),
        .E(rdp_inst_n_8),
        .Q(rd_pntr_ext),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\count_value_i_reg[4]_0 (rd_rst_busy),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] ({\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 }),
        .\grdc.rd_data_count_i_reg[4] (\gen_fwft.rdpp1_inst_n_3 ),
        .\grdc.rd_data_count_i_reg[4]_0 ({\gen_cdc_pntr.wpr_gray_reg_dc_n_1 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_2 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 }),
        .\grdc.rd_data_count_i_reg[4]_1 (\gen_cdc_pntr.wpr_gray_reg_dc_n_6 ),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[2] (\grdc.diff_wr_rd_pntr_rdc [4:3]),
        .\src_gray_ff_reg[4] (count_value_i),
        .src_in_bin({rdp_inst_n_9,rdp_inst_n_10,rdp_inst_n_11,rdp_inst_n_12}));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized7 rdpp1_inst
       (.E(rdp_inst_n_8),
        .Q({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3}),
        .\count_value_i_reg[0]_0 (rd_rst_busy),
        .\count_value_i_reg[1]_0 (curr_fwft_state),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_bit_51 rst_d1_inst
       (.D(diff_pntr_pf_q0[1]),
        .Q(diff_pntr_pf_q),
        .clr_full(clr_full),
        .d_out_int_reg_0(rst_d1_inst_n_1),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] (rd_pntr_wr[0]),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1]_0 (wr_pntr_plus1_pf[1]),
        .\gof.overflow_i_reg (full),
        .overflow_i0(overflow_i0),
        .prog_full(prog_full),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized6_52 wrp_inst
       (.D(\gwdc.diff_wr_rd_pntr1_out [2]),
        .E(wr_pntr_plus1_pf_carry),
        .Q(wr_pntr_ext),
        .\gwdc.wr_data_count_i_reg[2] ({\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 }),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized7_53 wrpp1_inst
       (.D(diff_pntr_pf_q0[2]),
        .E(wr_pntr_plus1_pf_carry),
        .Q(wr_pntr_plus1_pf),
        .\count_value_i_reg[3]_0 (wrpp1_inst_n_4),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ({rd_pntr_wr[3],rd_pntr_wr[1:0]}),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized8 wrpp2_inst
       (.E(wr_pntr_plus1_pf_carry),
        .Q(rd_pntr_wr[3]),
        .\count_value_i_reg[2]_0 ({wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3}),
        .\count_value_i_reg[3]_0 (wrpp2_inst_n_0),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_rst__xdcDup__6 xpm_fifo_rst_inst
       (.E(wr_pntr_plus1_pf_carry),
        .Q(curr_fwft_state),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[3] (full),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_0 (rd_rst_busy),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_1 (\grdc.rd_data_count_i0 ),
        .\guf.underflow_i_reg (empty),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .rst_d1(rst_d1),
        .underflow_i0(underflow_i0),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy),
        .wrst_busy(wrst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_DEST_SYNC_FF = "3" *) (* COMMON_CLOCK = "0" *) 
(* DOUT_RESET_VALUE = "0" *) (* ECC_MODE = "0" *) (* ENABLE_ECC = "0" *) 
(* EN_ADV_FEATURE = "16'b0000011100000111" *) (* EN_AE = "1'b0" *) (* EN_AF = "1'b0" *) 
(* EN_DVLD = "1'b0" *) (* EN_OF = "1'b1" *) (* EN_PE = "1'b1" *) 
(* EN_PF = "1'b1" *) (* EN_RDC = "1'b1" *) (* EN_UF = "1'b1" *) 
(* EN_WACK = "1'b0" *) (* EN_WDC = "1'b1" *) (* FG_EQ_ASYM_DOUT = "1'b0" *) 
(* FIFO_MEMORY_TYPE = "2" *) (* FIFO_MEM_TYPE = "2" *) (* FIFO_READ_DEPTH = "256" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_SIZE = "12800" *) (* FIFO_WRITE_DEPTH = "256" *) 
(* FULL_RESET_VALUE = "1" *) (* FULL_RST_VAL = "1'b1" *) (* ORIG_REF_NAME = "xpm_fifo_base" *) 
(* PE_THRESH_ADJ = "8" *) (* PE_THRESH_MAX = "251" *) (* PE_THRESH_MIN = "5" *) 
(* PF_THRESH_ADJ = "126" *) (* PF_THRESH_MAX = "251" *) (* PF_THRESH_MIN = "8" *) 
(* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "128" *) (* RD_DATA_COUNT_WIDTH = "8" *) 
(* RD_DC_WIDTH_EXT = "9" *) (* RD_LATENCY = "2" *) (* RD_MODE = "1" *) 
(* RD_PNTR_WIDTH = "8" *) (* READ_DATA_WIDTH = "50" *) (* READ_MODE = "1" *) 
(* READ_MODE_LL = "1" *) (* RELATED_CLOCKS = "0" *) (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WIDTH_RATIO = "1" *) (* WRITE_DATA_WIDTH = "50" *) 
(* WR_DATA_COUNT_WIDTH = "8" *) (* WR_DC_WIDTH_EXT = "9" *) (* WR_DEPTH_LOG = "8" *) 
(* WR_PNTR_WIDTH = "8" *) (* WR_RD_RATIO = "0" *) (* WR_WIDTH_LOG = "6" *) 
(* XPM_MODULE = "TRUE" *) (* both_stages_valid = "3" *) (* invalid = "0" *) 
(* keep_hierarchy = "soft" *) (* stage1_valid = "2" *) (* stage2_valid = "1" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_base__xdcDup__1
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    full_n,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [49:0]din;
  output full;
  output full_n;
  output prog_full;
  output [7:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [49:0]dout;
  output empty;
  output prog_empty;
  output [7:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [1:0]count_value_i;
  wire [1:0]curr_fwft_state;
  wire [7:0]diff_pntr_pe;
  wire [8:2]diff_pntr_pf_q;
  wire [8:2]diff_pntr_pf_q0;
  wire [49:0]din;
  wire [49:0]dout;
  wire empty;
  wire empty_fwft_i0;
  wire full;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_0 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_7 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_10 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_11 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_12 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_13 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_14 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_15 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_16 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_9 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_7 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_8 ;
  wire \gen_fwft.count_rst ;
  wire \gen_fwft.ram_regout_en ;
  wire \gen_fwft.rdpp1_inst_n_3 ;
  wire \gen_fwft.rdpp1_inst_n_4 ;
  wire \gen_fwft.rdpp1_inst_n_5 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ;
  wire [8:1]\grdc.diff_wr_rd_pntr_rdc ;
  wire \grdc.rd_data_count_i0 ;
  wire [8:1]\gwdc.diff_wr_rd_pntr1_out ;
  wire [1:0]next_fwft_state__0;
  wire overflow;
  wire overflow_i0;
  wire prog_empty;
  wire prog_full;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire [7:0]rd_data_count;
  wire rd_en;
  wire [7:0]rd_pntr_ext;
  wire [7:0]rd_pntr_wr;
  wire [7:0]rd_pntr_wr_cdc;
  wire [8:0]rd_pntr_wr_cdc_dc;
  wire rd_rst_busy;
  wire rdp_inst_n_10;
  wire rdp_inst_n_19;
  wire rdp_inst_n_20;
  wire rdp_inst_n_21;
  wire rdp_inst_n_22;
  wire rdp_inst_n_23;
  wire rdp_inst_n_24;
  wire rdp_inst_n_25;
  wire rdp_inst_n_26;
  wire rdp_inst_n_27;
  wire rdp_inst_n_28;
  wire rdp_inst_n_29;
  wire rdp_inst_n_30;
  wire rdp_inst_n_31;
  wire rdp_inst_n_8;
  wire rdp_inst_n_9;
  wire rdpp1_inst_n_0;
  wire rdpp1_inst_n_1;
  wire rdpp1_inst_n_2;
  wire rdpp1_inst_n_3;
  wire rdpp1_inst_n_4;
  wire rdpp1_inst_n_5;
  wire rdpp1_inst_n_6;
  wire rdpp1_inst_n_7;
  wire rst;
  wire rst_d1;
  wire rst_d1_inst_n_1;
  wire sleep;
  wire [1:1]src_in_bin00_out;
  wire underflow;
  wire underflow_i0;
  wire wr_clk;
  wire [7:0]wr_data_count;
  wire wr_en;
  wire [8:0]wr_pntr_ext;
  wire [8:1]wr_pntr_plus1_pf;
  wire wr_pntr_plus1_pf_carry;
  wire [7:0]wr_pntr_rd_cdc;
  wire [8:0]wr_pntr_rd_cdc_dc;
  wire wr_rst_busy;
  wire wrpp2_inst_n_0;
  wire wrpp2_inst_n_1;
  wire wrpp2_inst_n_2;
  wire wrpp2_inst_n_3;
  wire wrpp2_inst_n_4;
  wire wrpp2_inst_n_5;
  wire wrpp2_inst_n_6;
  wire wrpp2_inst_n_7;
  wire wrst_busy;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ;
  wire [49:0]\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign full_n = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  (* SOFT_HLUTNM = "soft_lutpair212" *) 
  LUT4 #(
    .INIT(16'h6A85)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[0]_i_1 
       (.I0(curr_fwft_state[0]),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(ram_empty_i),
        .O(next_fwft_state__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair212" *) 
  LUT4 #(
    .INIT(16'h3FF0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[1]_i_1 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(curr_fwft_state[0]),
        .O(next_fwft_state__0[1]));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[0]),
        .Q(curr_fwft_state[0]),
        .R(rd_rst_busy));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[1]),
        .Q(curr_fwft_state[1]),
        .R(rd_rst_busy));
  GND GND
       (.G(\<const0> ));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized1__7 \gen_cdc_pntr.rd_pntr_cdc_dc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc_dc),
        .src_clk(rd_clk),
        .src_in_bin({rdp_inst_n_24,rdp_inst_n_25,rdp_inst_n_26,rdp_inst_n_27,rdp_inst_n_28,rdp_inst_n_29,rdp_inst_n_30,src_in_bin00_out,rdp_inst_n_31}));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "8" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__7 \gen_cdc_pntr.rd_pntr_cdc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc),
        .src_clk(rd_clk),
        .src_in_bin(rd_pntr_ext));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec_25 \gen_cdc_pntr.rpw_gray_reg 
       (.D(rd_pntr_wr_cdc),
        .Q(wr_pntr_plus1_pf),
        .d_out_int_reg(\gen_cdc_pntr.rpw_gray_reg_n_8 ),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7}),
        .\reg_out_i_reg[7]_0 (rd_pntr_wr),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized0_26 \gen_cdc_pntr.rpw_gray_reg_dc 
       (.D(rd_pntr_wr_cdc_dc),
        .Q({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 }),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec_27 \gen_cdc_pntr.wpr_gray_reg 
       (.D(wr_pntr_rd_cdc),
        .Q(curr_fwft_state),
        .\gen_pf_ic_rc.ram_empty_i_reg (rd_pntr_ext),
        .\gen_pf_ic_rc.ram_empty_i_reg_0 ({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3,rdpp1_inst_n_4,rdpp1_inst_n_5,rdpp1_inst_n_6,rdpp1_inst_n_7}),
        .ram_empty_i(ram_empty_i),
        .ram_empty_i0(ram_empty_i0),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[0]_0 (rd_rst_busy),
        .\reg_out_i_reg[7]_0 ({\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized0_28 \gen_cdc_pntr.wpr_gray_reg_dc 
       (.D(\grdc.diff_wr_rd_pntr_rdc ),
        .DI({rdp_inst_n_9,\gen_fwft.rdpp1_inst_n_5 }),
        .Q({\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_16 }),
        .S({rdp_inst_n_19,rdp_inst_n_20,rdp_inst_n_21,rdp_inst_n_22,rdp_inst_n_23,\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .\grdc.rd_data_count_i_reg[7] (count_value_i[1]),
        .\grdc.rd_data_count_i_reg[7]_0 (rd_pntr_ext[6:1]),
        .\grdc.rd_data_count_i_reg[8] (rdp_inst_n_10),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[8]_0 (rd_rst_busy),
        .\reg_out_i_reg[8]_1 (wr_pntr_rd_cdc_dc));
  (* DEST_SYNC_FF = "5" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__parameterized0__3 \gen_cdc_pntr.wr_pntr_cdc_dc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc_dc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "8" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_gray__6 \gen_cdc_pntr.wr_pntr_cdc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext[7:0]));
  (* SOFT_HLUTNM = "soft_lutpair211" *) 
  LUT4 #(
    .INIT(16'hF380)) 
    \gen_fwft.empty_fwft_i_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .I3(empty),
        .O(empty_fwft_i0));
  FDSE #(
    .INIT(1'b1)) 
    \gen_fwft.empty_fwft_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .Q(empty),
        .S(rd_rst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn_29 \gen_fwft.rdpp1_inst 
       (.DI(\gen_fwft.rdpp1_inst_n_5 ),
        .Q(count_value_i),
        .S({\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\grdc.rd_data_count_i_reg[7] (rd_pntr_ext[1:0]),
        .\grdc.rd_data_count_i_reg[7]_0 ({\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_16 }),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .src_in_bin(src_in_bin00_out));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_cdc_pntr.rpw_gray_reg_n_8 ),
        .Q(full),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[0]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[1]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[2]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[3]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[4]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[5]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[6]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[7]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .R(rd_rst_busy));
  LUT4 #(
    .INIT(16'h88B8)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1 
       (.I0(prog_empty),
        .I1(empty),
        .I2(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h01FF)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ),
        .Q(prog_empty),
        .S(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[2]),
        .Q(diff_pntr_pf_q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[3]),
        .Q(diff_pntr_pf_q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[4]),
        .Q(diff_pntr_pf_q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[5]),
        .Q(diff_pntr_pf_q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[6]),
        .Q(diff_pntr_pf_q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[7]),
        .Q(diff_pntr_pf_q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[8]),
        .Q(diff_pntr_pf_q[8]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1_inst_n_1),
        .Q(prog_full),
        .S(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.ram_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i0),
        .Q(ram_empty_i),
        .S(rd_rst_busy));
  (* ADDR_WIDTH_A = "8" *) 
  (* ADDR_WIDTH_B = "8" *) 
  (* AUTO_SLEEP_TIME = "0" *) 
  (* BYTE_WRITE_WIDTH_A = "50" *) 
  (* BYTE_WRITE_WIDTH_B = "50" *) 
  (* CASCADE_HEIGHT = "0" *) 
  (* CLOCKING_MODE = "1" *) 
  (* ECC_BIT_RANGE = "[7:0]" *) 
  (* ECC_MODE = "0" *) 
  (* ECC_TYPE = "NONE" *) 
  (* IGNORE_INIT_SYNTH = "0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* MAX_NUM_CHAR = "0" *) 
  (* \MEM.ADDRESS_SPACE  *) 
  (* \MEM.ADDRESS_SPACE_BEGIN  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_LSB  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_MSB  = "49" *) 
  (* \MEM.ADDRESS_SPACE_END  = "511" *) 
  (* \MEM.CORE_MEMORY_WIDTH  = "50" *) 
  (* MEMORY_INIT_FILE = "none" *) 
  (* MEMORY_INIT_PARAM = "" *) 
  (* MEMORY_OPTIMIZATION = "true" *) 
  (* MEMORY_PRIMITIVE = "2" *) 
  (* MEMORY_SIZE = "12800" *) 
  (* MEMORY_TYPE = "1" *) 
  (* MESSAGE_CONTROL = "0" *) 
  (* NUM_CHAR_LOC = "0" *) 
  (* P_ECC_MODE = "no_ecc" *) 
  (* P_ENABLE_BYTE_WRITE_A = "0" *) 
  (* P_ENABLE_BYTE_WRITE_B = "0" *) 
  (* P_MAX_DEPTH_DATA = "256" *) 
  (* P_MEMORY_OPT = "yes" *) 
  (* P_MEMORY_PRIMITIVE = "block" *) 
  (* P_MIN_WIDTH_DATA = "50" *) 
  (* P_MIN_WIDTH_DATA_A = "50" *) 
  (* P_MIN_WIDTH_DATA_B = "50" *) 
  (* P_MIN_WIDTH_DATA_ECC = "50" *) 
  (* P_MIN_WIDTH_DATA_LDW = "4" *) 
  (* P_MIN_WIDTH_DATA_SHFT = "50" *) 
  (* P_NUM_COLS_WRITE_A = "1" *) 
  (* P_NUM_COLS_WRITE_B = "1" *) 
  (* P_NUM_ROWS_READ_A = "1" *) 
  (* P_NUM_ROWS_READ_B = "1" *) 
  (* P_NUM_ROWS_WRITE_A = "1" *) 
  (* P_NUM_ROWS_WRITE_B = "1" *) 
  (* P_SDP_WRITE_MODE = "no" *) 
  (* P_WIDTH_ADDR_LSB_READ_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) 
  (* P_WIDTH_ADDR_READ_A = "8" *) 
  (* P_WIDTH_ADDR_READ_B = "8" *) 
  (* P_WIDTH_ADDR_WRITE_A = "8" *) 
  (* P_WIDTH_ADDR_WRITE_B = "8" *) 
  (* P_WIDTH_COL_WRITE_A = "50" *) 
  (* P_WIDTH_COL_WRITE_B = "50" *) 
  (* RAM_DECOMP = "auto" *) 
  (* READ_DATA_WIDTH_A = "50" *) 
  (* READ_DATA_WIDTH_B = "50" *) 
  (* READ_LATENCY_A = "2" *) 
  (* READ_LATENCY_B = "2" *) 
  (* READ_RESET_VALUE_A = "0" *) 
  (* READ_RESET_VALUE_B = "0" *) 
  (* RST_MODE_A = "SYNC" *) 
  (* RST_MODE_B = "SYNC" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_EMBEDDED_CONSTRAINT = "0" *) 
  (* USE_MEM_INIT = "0" *) 
  (* USE_MEM_INIT_MMI = "0" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH_A = "50" *) 
  (* WRITE_DATA_WIDTH_B = "50" *) 
  (* WRITE_MODE_A = "2" *) 
  (* WRITE_MODE_B = "2" *) 
  (* WRITE_PROTECT = "1" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* rsta_loop_iter = "52" *) 
  (* rstb_loop_iter = "52" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_memory_base__2 \gen_sdpram.xpm_memory_base_inst 
       (.addra(wr_pntr_ext[7:0]),
        .addrb(rd_pntr_ext),
        .clka(wr_clk),
        .clkb(rd_clk),
        .dbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ),
        .dbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ),
        .dina(din),
        .dinb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .douta(\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED [49:0]),
        .doutb(dout),
        .ena(wr_pntr_plus1_pf_carry),
        .enb(rdp_inst_n_8),
        .injectdbiterra(1'b0),
        .injectdbiterrb(1'b0),
        .injectsbiterra(1'b0),
        .injectsbiterrb(1'b0),
        .regcea(1'b0),
        .regceb(\gen_fwft.ram_regout_en ),
        .rsta(1'b0),
        .rstb(rd_rst_busy),
        .sbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ),
        .sbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ),
        .sleep(sleep),
        .wea(1'b0),
        .web(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair211" *) 
  LUT3 #(
    .INIT(8'h62)) 
    \gen_sdpram.xpm_memory_base_inst_i_3 
       (.I0(curr_fwft_state[0]),
        .I1(curr_fwft_state[1]),
        .I2(rd_en),
        .O(\gen_fwft.ram_regout_en ));
  FDRE #(
    .INIT(1'b0)) 
    \gof.overflow_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(overflow_i0),
        .Q(overflow),
        .R(1'b0));
  FDRE \grdc.rd_data_count_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q(rd_data_count[0]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(rd_data_count[1]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [3]),
        .Q(rd_data_count[2]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [4]),
        .Q(rd_data_count[3]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [5]),
        .Q(rd_data_count[4]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [6]),
        .Q(rd_data_count[5]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [7]),
        .Q(rd_data_count[6]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [8]),
        .Q(rd_data_count[7]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \guf.underflow_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(underflow_i0),
        .Q(underflow),
        .R(1'b0));
  FDRE \gwdc.wr_data_count_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [1]),
        .Q(wr_data_count[0]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [2]),
        .Q(wr_data_count[1]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [3]),
        .Q(wr_data_count[2]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [4]),
        .Q(wr_data_count[3]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [5]),
        .Q(wr_data_count[4]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [6]),
        .Q(wr_data_count[5]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [7]),
        .Q(wr_data_count[6]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [8]),
        .Q(wr_data_count[7]),
        .R(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized0_30 rdp_inst
       (.D(diff_pntr_pe),
        .DI(rdp_inst_n_9),
        .Q(rd_pntr_ext),
        .S({rdp_inst_n_19,rdp_inst_n_20,rdp_inst_n_21,rdp_inst_n_22,rdp_inst_n_23}),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\count_value_i_reg[7]_0 (rdp_inst_n_10),
        .\count_value_i_reg[8]_0 (rd_rst_busy),
        .enb(rdp_inst_n_8),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ({\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .\grdc.rd_data_count_i_reg[7] (count_value_i),
        .\grdc.rd_data_count_i_reg[8] ({\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_15 }),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .src_in_bin({rdp_inst_n_24,rdp_inst_n_25,rdp_inst_n_26,rdp_inst_n_27,rdp_inst_n_28,rdp_inst_n_29,rdp_inst_n_30,rdp_inst_n_31}));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized1_31 rdpp1_inst
       (.E(rdp_inst_n_8),
        .Q({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3,rdpp1_inst_n_4,rdpp1_inst_n_5,rdpp1_inst_n_6,rdpp1_inst_n_7}),
        .\count_value_i_reg[0]_0 (rd_rst_busy),
        .\count_value_i_reg[1]_0 (curr_fwft_state),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_bit_32 rst_d1_inst
       (.Q(diff_pntr_pf_q),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] (rst_d1_inst_n_1),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg (full),
        .overflow_i0(overflow_i0),
        .prog_full(prog_full),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized0_33 wrp_inst
       (.D(\gwdc.diff_wr_rd_pntr1_out ),
        .Q(wr_pntr_ext),
        .\count_value_i_reg[6]_0 (full),
        .\gwdc.wr_data_count_i_reg[8] ({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 }),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized1_34 wrpp1_inst
       (.D(diff_pntr_pf_q0),
        .Q(wr_pntr_plus1_pf),
        .\count_value_i_reg[6]_0 (full),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] (rd_pntr_wr),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_counter_updn__parameterized2_35 wrpp2_inst
       (.Q({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7}),
        .\count_value_i_reg[6]_0 (full),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_rst__xdcDup__1 xpm_fifo_rst_inst
       (.Q(curr_fwft_state),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[7] (full),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_0 (rd_rst_busy),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_1 (\grdc.rd_data_count_i0 ),
        .\guf.underflow_i_reg (empty),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .rst_d1(rst_d1),
        .underflow_i0(underflow_i0),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wr_rst_busy(wr_rst_busy),
        .wrst_busy(wrst_busy));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_bit
   (rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ,
    clr_full,
    overflow_i0,
    wrst_busy,
    wr_clk,
    Q,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ,
    prog_full,
    wr_en,
    rst);
  output rst_d1;
  output \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  output clr_full;
  output overflow_i0;
  input wrst_busy;
  input wr_clk;
  input [7:0]Q;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  input prog_full;
  input wr_en;
  input rst;

  wire [7:0]Q;
  wire clr_full;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  wire overflow_i0;
  wire prog_full;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    d_out_int_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(wrst_busy),
        .Q(rst_d1),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair331" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6 
       (.I0(rst),
        .I1(rst_d1),
        .I2(wrst_busy),
        .O(clr_full));
  LUT6 #(
    .INIT(64'h00FF00E0000000E0)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_1 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ),
        .I2(Q[7]),
        .I3(clr_full),
        .I4(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg ),
        .I5(prog_full),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[4]),
        .I3(Q[5]),
        .I4(Q[2]),
        .I5(Q[3]),
        .O(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair331" *) 
  LUT4 #(
    .INIT(16'hFE00)) 
    \gof.overflow_i_i_1 
       (.I0(rst_d1),
        .I1(wrst_busy),
        .I2(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg ),
        .I3(wr_en),
        .O(overflow_i0));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_bit" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_bit_12
   (rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ,
    clr_full,
    overflow_i0,
    wrst_busy,
    wr_clk,
    Q,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ,
    prog_full,
    wr_en,
    rst);
  output rst_d1;
  output \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  output clr_full;
  output overflow_i0;
  input wrst_busy;
  input wr_clk;
  input [7:0]Q;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  input prog_full;
  input wr_en;
  input rst;

  wire [7:0]Q;
  wire clr_full;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  wire overflow_i0;
  wire prog_full;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    d_out_int_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(wrst_busy),
        .Q(rst_d1),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair275" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6 
       (.I0(rst),
        .I1(rst_d1),
        .I2(wrst_busy),
        .O(clr_full));
  LUT6 #(
    .INIT(64'h00FF00E0000000E0)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_1 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ),
        .I2(Q[7]),
        .I3(clr_full),
        .I4(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg ),
        .I5(prog_full),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[4]),
        .I3(Q[5]),
        .I4(Q[2]),
        .I5(Q[3]),
        .O(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair275" *) 
  LUT4 #(
    .INIT(16'hFE00)) 
    \gof.overflow_i_i_1 
       (.I0(rst_d1),
        .I1(wrst_busy),
        .I2(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg ),
        .I3(wr_en),
        .O(overflow_i0));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_bit" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_bit_22
   (rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ,
    overflow_i0,
    wrst_busy,
    wr_clk,
    Q,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ,
    prog_full,
    wr_en,
    rst);
  output rst_d1;
  output \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  output overflow_i0;
  input wrst_busy;
  input wr_clk;
  input [6:0]Q;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  input prog_full;
  input wr_en;
  input rst;

  wire [6:0]Q;
  wire clr_full;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  wire overflow_i0;
  wire prog_full;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    d_out_int_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(wrst_busy),
        .Q(rst_d1),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h0F0E000E)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_1 
       (.I0(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ),
        .I1(Q[6]),
        .I2(clr_full),
        .I3(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg ),
        .I4(prog_full),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[4]),
        .I3(Q[5]),
        .I4(Q[2]),
        .I5(Q[3]),
        .O(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair232" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_3 
       (.I0(rst),
        .I1(rst_d1),
        .I2(wrst_busy),
        .O(clr_full));
  (* SOFT_HLUTNM = "soft_lutpair232" *) 
  LUT4 #(
    .INIT(16'hFE00)) 
    \gof.overflow_i_i_1 
       (.I0(rst_d1),
        .I1(wrst_busy),
        .I2(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg ),
        .I3(wr_en),
        .O(overflow_i0));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_bit" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_bit_32
   (rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ,
    overflow_i0,
    wrst_busy,
    wr_clk,
    Q,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ,
    prog_full,
    wr_en,
    rst);
  output rst_d1;
  output \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  output overflow_i0;
  input wrst_busy;
  input wr_clk;
  input [6:0]Q;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  input prog_full;
  input wr_en;
  input rst;

  wire [6:0]Q;
  wire clr_full;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  wire overflow_i0;
  wire prog_full;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    d_out_int_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(wrst_busy),
        .Q(rst_d1),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h0F0E000E)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_1 
       (.I0(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ),
        .I1(Q[6]),
        .I2(clr_full),
        .I3(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg ),
        .I4(prog_full),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[4]),
        .I3(Q[5]),
        .I4(Q[2]),
        .I5(Q[3]),
        .O(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair201" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_3 
       (.I0(rst),
        .I1(rst_d1),
        .I2(wrst_busy),
        .O(clr_full));
  (* SOFT_HLUTNM = "soft_lutpair201" *) 
  LUT4 #(
    .INIT(16'hFE00)) 
    \gof.overflow_i_i_1 
       (.I0(rst_d1),
        .I1(wrst_busy),
        .I2(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg ),
        .I3(wr_en),
        .O(overflow_i0));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_bit" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_bit_43
   (rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ,
    overflow_i0,
    wrst_busy,
    wr_clk,
    Q,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ,
    prog_full,
    wr_en,
    rst);
  output rst_d1;
  output \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  output overflow_i0;
  input wrst_busy;
  input wr_clk;
  input [6:0]Q;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  input prog_full;
  input wr_en;
  input rst;

  wire [6:0]Q;
  wire clr_full;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  wire overflow_i0;
  wire prog_full;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    d_out_int_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(wrst_busy),
        .Q(rst_d1),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h0F0E000E)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_1 
       (.I0(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ),
        .I1(Q[6]),
        .I2(clr_full),
        .I3(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg ),
        .I4(prog_full),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[4]),
        .I3(Q[5]),
        .I4(Q[2]),
        .I5(Q[3]),
        .O(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair169" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_3 
       (.I0(rst),
        .I1(rst_d1),
        .I2(wrst_busy),
        .O(clr_full));
  (* SOFT_HLUTNM = "soft_lutpair169" *) 
  LUT4 #(
    .INIT(16'hFE00)) 
    \gof.overflow_i_i_1 
       (.I0(rst_d1),
        .I1(wrst_busy),
        .I2(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg ),
        .I3(wr_en),
        .O(overflow_i0));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_bit" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_bit_51
   (rst_d1,
    d_out_int_reg_0,
    overflow_i0,
    clr_full,
    D,
    wrst_busy,
    wr_clk,
    Q,
    rst,
    \gof.overflow_i_reg ,
    prog_full,
    wr_en,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] ,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1]_0 );
  output rst_d1;
  output d_out_int_reg_0;
  output overflow_i0;
  output clr_full;
  output [0:0]D;
  input wrst_busy;
  input wr_clk;
  input [3:0]Q;
  input rst;
  input \gof.overflow_i_reg ;
  input prog_full;
  input wr_en;
  input [0:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] ;
  input [0:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1]_0 ;

  wire [0:0]D;
  wire [3:0]Q;
  wire clr_full;
  wire d_out_int_reg_0;
  wire [0:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] ;
  wire [0:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1]_0 ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ;
  wire \gof.overflow_i_reg ;
  wire overflow_i0;
  wire prog_full;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    d_out_int_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(wrst_busy),
        .Q(rst_d1),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6 
       (.I0(rst),
        .I1(rst_d1),
        .I2(wrst_busy),
        .O(clr_full));
  LUT5 #(
    .INIT(32'hEF1010EF)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[1]_i_1 
       (.I0(rst_d1),
        .I1(\gof.overflow_i_reg ),
        .I2(wr_en),
        .I3(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] ),
        .I4(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1]_0 ),
        .O(D));
  LUT5 #(
    .INIT(32'hF3A200A2)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_1 
       (.I0(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ),
        .I1(rst_d1),
        .I2(rst),
        .I3(\gof.overflow_i_reg ),
        .I4(prog_full),
        .O(d_out_int_reg_0));
  LUT4 #(
    .INIT(16'hAAA8)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2 
       (.I0(Q[3]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(Q[1]),
        .O(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT4 #(
    .INIT(16'hFE00)) 
    \gof.overflow_i_i_1 
       (.I0(rst_d1),
        .I1(wrst_busy),
        .I2(\gof.overflow_i_reg ),
        .I3(wr_en),
        .O(overflow_i0));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_bit" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_bit_61
   (rst_d1,
    d_out_int_reg_0,
    overflow_i0,
    clr_full,
    D,
    wrst_busy,
    wr_clk,
    Q,
    rst,
    \gof.overflow_i_reg ,
    prog_full,
    wr_en,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] ,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1]_0 );
  output rst_d1;
  output d_out_int_reg_0;
  output overflow_i0;
  output clr_full;
  output [0:0]D;
  input wrst_busy;
  input wr_clk;
  input [3:0]Q;
  input rst;
  input \gof.overflow_i_reg ;
  input prog_full;
  input wr_en;
  input [0:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] ;
  input [0:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1]_0 ;

  wire [0:0]D;
  wire [3:0]Q;
  wire clr_full;
  wire d_out_int_reg_0;
  wire [0:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] ;
  wire [0:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1]_0 ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ;
  wire \gof.overflow_i_reg ;
  wire overflow_i0;
  wire prog_full;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    d_out_int_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(wrst_busy),
        .Q(rst_d1),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6 
       (.I0(rst),
        .I1(rst_d1),
        .I2(wrst_busy),
        .O(clr_full));
  LUT5 #(
    .INIT(32'hEF1010EF)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[1]_i_1 
       (.I0(rst_d1),
        .I1(\gof.overflow_i_reg ),
        .I2(wr_en),
        .I3(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] ),
        .I4(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1]_0 ),
        .O(D));
  LUT5 #(
    .INIT(32'hF3A200A2)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_1 
       (.I0(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ),
        .I1(rst_d1),
        .I2(rst),
        .I3(\gof.overflow_i_reg ),
        .I4(prog_full),
        .O(d_out_int_reg_0));
  LUT4 #(
    .INIT(16'hAAA8)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2 
       (.I0(Q[3]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(Q[1]),
        .O(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT4 #(
    .INIT(16'hFE00)) 
    \gof.overflow_i_i_1 
       (.I0(rst_d1),
        .I1(wrst_busy),
        .I2(\gof.overflow_i_reg ),
        .I3(wr_en),
        .O(overflow_i0));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec
   (\reg_out_i_reg[7]_0 ,
    d_out_int_reg,
    Q,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ,
    wr_pntr_plus1_pf_carry,
    rst_d1,
    rst,
    wrst_busy,
    D,
    wr_clk);
  output [7:0]\reg_out_i_reg[7]_0 ;
  output d_out_int_reg;
  input [7:0]Q;
  input [7:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  input wr_pntr_plus1_pf_carry;
  input rst_d1;
  input rst;
  input wrst_busy;
  input [7:0]D;
  input wr_clk;

  wire [7:0]D;
  wire [7:0]Q;
  wire d_out_int_reg;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  wire going_full0;
  wire leaving_full;
  wire [7:0]\reg_out_i_reg[7]_0 ;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'hEAEA00EA)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_1 
       (.I0(leaving_full),
        .I1(going_full0),
        .I2(wr_pntr_plus1_pf_carry),
        .I3(rst_d1),
        .I4(rst),
        .O(d_out_int_reg));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2 
       (.I0(Q[7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(Q[6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ),
        .I5(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ),
        .O(leaving_full));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3 
       (.I0(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ),
        .I5(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ),
        .O(going_full0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(Q[3]),
        .I2(Q[5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(Q[4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(Q[1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [3]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [0]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(\reg_out_i_reg[7]_0 [0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(\reg_out_i_reg[7]_0 [1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(\reg_out_i_reg[7]_0 [2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(\reg_out_i_reg[7]_0 [3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(\reg_out_i_reg[7]_0 [4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(\reg_out_i_reg[7]_0 [5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(\reg_out_i_reg[7]_0 [6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(\reg_out_i_reg[7]_0 [7]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec_19
   (ram_empty_i0,
    \reg_out_i_reg[7]_0 ,
    Q,
    rd_en,
    ram_empty_i,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \gen_pf_ic_rc.ram_empty_i_reg_0 ,
    \reg_out_i_reg[0]_0 ,
    D,
    rd_clk);
  output ram_empty_i0;
  output [7:0]\reg_out_i_reg[7]_0 ;
  input [1:0]Q;
  input rd_en;
  input ram_empty_i;
  input [7:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  input [7:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  input \reg_out_i_reg[0]_0 ;
  input [7:0]D;
  input rd_clk;

  wire [7:0]D;
  wire [1:0]Q;
  wire \gen_pf_ic_rc.ram_empty_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_5_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_6_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_7_n_0 ;
  wire [7:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  wire [7:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  wire going_empty0;
  wire leaving_empty;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire rd_en;
  wire \reg_out_i_reg[0]_0 ;
  wire [7:0]\reg_out_i_reg[7]_0 ;

  LUT6 #(
    .INIT(64'hFFFFFFFF00FD0000)) 
    \gen_pf_ic_rc.ram_empty_i_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .I4(going_empty0),
        .I5(leaving_empty),
        .O(ram_empty_i0));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.ram_empty_i_i_2 
       (.I0(\gen_pf_ic_rc.ram_empty_i_reg_0 [7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ),
        .I5(\gen_pf_ic_rc.ram_empty_i_i_5_n_0 ),
        .O(going_empty0));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.ram_empty_i_i_3 
       (.I0(\gen_pf_ic_rc.ram_empty_i_reg [7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.ram_empty_i_i_6_n_0 ),
        .I5(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ),
        .O(leaving_empty));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_4 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [3]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_0 [4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_5 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_0 [1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_6 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_7 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(\reg_out_i_reg[7]_0 [0]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(\reg_out_i_reg[7]_0 [1]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(\reg_out_i_reg[7]_0 [2]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(\reg_out_i_reg[7]_0 [3]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(\reg_out_i_reg[7]_0 [4]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(\reg_out_i_reg[7]_0 [5]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(\reg_out_i_reg[7]_0 [6]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(\reg_out_i_reg[7]_0 [7]),
        .R(\reg_out_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec_25
   (\reg_out_i_reg[7]_0 ,
    d_out_int_reg,
    Q,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ,
    wr_pntr_plus1_pf_carry,
    rst_d1,
    rst,
    wrst_busy,
    D,
    wr_clk);
  output [7:0]\reg_out_i_reg[7]_0 ;
  output d_out_int_reg;
  input [7:0]Q;
  input [7:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  input wr_pntr_plus1_pf_carry;
  input rst_d1;
  input rst;
  input wrst_busy;
  input [7:0]D;
  input wr_clk;

  wire [7:0]D;
  wire [7:0]Q;
  wire d_out_int_reg;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  wire going_full0;
  wire leaving_full;
  wire [7:0]\reg_out_i_reg[7]_0 ;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'hEAEA00EA)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_1 
       (.I0(leaving_full),
        .I1(going_full0),
        .I2(wr_pntr_plus1_pf_carry),
        .I3(rst_d1),
        .I4(rst),
        .O(d_out_int_reg));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2 
       (.I0(Q[7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(Q[6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ),
        .I5(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ),
        .O(leaving_full));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3 
       (.I0(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ),
        .I5(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ),
        .O(going_full0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(Q[3]),
        .I2(Q[5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(Q[4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(Q[1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [3]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [0]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(\reg_out_i_reg[7]_0 [0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(\reg_out_i_reg[7]_0 [1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(\reg_out_i_reg[7]_0 [2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(\reg_out_i_reg[7]_0 [3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(\reg_out_i_reg[7]_0 [4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(\reg_out_i_reg[7]_0 [5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(\reg_out_i_reg[7]_0 [6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(\reg_out_i_reg[7]_0 [7]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec_27
   (ram_empty_i0,
    \reg_out_i_reg[7]_0 ,
    Q,
    rd_en,
    ram_empty_i,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \gen_pf_ic_rc.ram_empty_i_reg_0 ,
    \reg_out_i_reg[0]_0 ,
    D,
    rd_clk);
  output ram_empty_i0;
  output [7:0]\reg_out_i_reg[7]_0 ;
  input [1:0]Q;
  input rd_en;
  input ram_empty_i;
  input [7:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  input [7:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  input \reg_out_i_reg[0]_0 ;
  input [7:0]D;
  input rd_clk;

  wire [7:0]D;
  wire [1:0]Q;
  wire \gen_pf_ic_rc.ram_empty_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_5_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_6_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_7_n_0 ;
  wire [7:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  wire [7:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  wire going_empty0;
  wire leaving_empty;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire rd_en;
  wire \reg_out_i_reg[0]_0 ;
  wire [7:0]\reg_out_i_reg[7]_0 ;

  LUT6 #(
    .INIT(64'hFFFFFFFF00FD0000)) 
    \gen_pf_ic_rc.ram_empty_i_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .I4(going_empty0),
        .I5(leaving_empty),
        .O(ram_empty_i0));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.ram_empty_i_i_2 
       (.I0(\gen_pf_ic_rc.ram_empty_i_reg_0 [7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ),
        .I5(\gen_pf_ic_rc.ram_empty_i_i_5_n_0 ),
        .O(going_empty0));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.ram_empty_i_i_3 
       (.I0(\gen_pf_ic_rc.ram_empty_i_reg [7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.ram_empty_i_i_6_n_0 ),
        .I5(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ),
        .O(leaving_empty));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_4 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [3]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_0 [4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_5 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_0 [1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_6 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_7 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(\reg_out_i_reg[7]_0 [0]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(\reg_out_i_reg[7]_0 [1]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(\reg_out_i_reg[7]_0 [2]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(\reg_out_i_reg[7]_0 [3]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(\reg_out_i_reg[7]_0 [4]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(\reg_out_i_reg[7]_0 [5]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(\reg_out_i_reg[7]_0 [6]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(\reg_out_i_reg[7]_0 [7]),
        .R(\reg_out_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec_36
   (\reg_out_i_reg[7]_0 ,
    d_out_int_reg,
    Q,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ,
    wr_pntr_plus1_pf_carry,
    rst_d1,
    rst,
    wrst_busy,
    D,
    wr_clk);
  output [7:0]\reg_out_i_reg[7]_0 ;
  output d_out_int_reg;
  input [7:0]Q;
  input [7:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  input wr_pntr_plus1_pf_carry;
  input rst_d1;
  input rst;
  input wrst_busy;
  input [7:0]D;
  input wr_clk;

  wire [7:0]D;
  wire [7:0]Q;
  wire d_out_int_reg;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  wire going_full0;
  wire leaving_full;
  wire [7:0]\reg_out_i_reg[7]_0 ;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'hEAEA00EA)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_1 
       (.I0(leaving_full),
        .I1(going_full0),
        .I2(wr_pntr_plus1_pf_carry),
        .I3(rst_d1),
        .I4(rst),
        .O(d_out_int_reg));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2 
       (.I0(Q[7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(Q[6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ),
        .I5(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ),
        .O(leaving_full));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3 
       (.I0(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ),
        .I5(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ),
        .O(going_full0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(Q[3]),
        .I2(Q[5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(Q[4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(Q[1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [3]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [0]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(\reg_out_i_reg[7]_0 [0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(\reg_out_i_reg[7]_0 [1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(\reg_out_i_reg[7]_0 [2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(\reg_out_i_reg[7]_0 [3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(\reg_out_i_reg[7]_0 [4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(\reg_out_i_reg[7]_0 [5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(\reg_out_i_reg[7]_0 [6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(\reg_out_i_reg[7]_0 [7]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec_38
   (ram_empty_i0,
    \reg_out_i_reg[7]_0 ,
    Q,
    rd_en,
    ram_empty_i,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \gen_pf_ic_rc.ram_empty_i_reg_0 ,
    \reg_out_i_reg[0]_0 ,
    D,
    rd_clk);
  output ram_empty_i0;
  output [7:0]\reg_out_i_reg[7]_0 ;
  input [1:0]Q;
  input rd_en;
  input ram_empty_i;
  input [7:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  input [7:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  input \reg_out_i_reg[0]_0 ;
  input [7:0]D;
  input rd_clk;

  wire [7:0]D;
  wire [1:0]Q;
  wire \gen_pf_ic_rc.ram_empty_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_5_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_6_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_7_n_0 ;
  wire [7:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  wire [7:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  wire going_empty0;
  wire leaving_empty;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire rd_en;
  wire \reg_out_i_reg[0]_0 ;
  wire [7:0]\reg_out_i_reg[7]_0 ;

  LUT6 #(
    .INIT(64'hFFFFFFFF00FD0000)) 
    \gen_pf_ic_rc.ram_empty_i_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .I4(going_empty0),
        .I5(leaving_empty),
        .O(ram_empty_i0));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.ram_empty_i_i_2 
       (.I0(\gen_pf_ic_rc.ram_empty_i_reg_0 [7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ),
        .I5(\gen_pf_ic_rc.ram_empty_i_i_5_n_0 ),
        .O(going_empty0));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.ram_empty_i_i_3 
       (.I0(\gen_pf_ic_rc.ram_empty_i_reg [7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.ram_empty_i_i_6_n_0 ),
        .I5(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ),
        .O(leaving_empty));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_4 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [3]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_0 [4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_5 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_0 [1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_6 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_7 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(\reg_out_i_reg[7]_0 [0]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(\reg_out_i_reg[7]_0 [1]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(\reg_out_i_reg[7]_0 [2]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(\reg_out_i_reg[7]_0 [3]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(\reg_out_i_reg[7]_0 [4]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(\reg_out_i_reg[7]_0 [5]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(\reg_out_i_reg[7]_0 [6]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(\reg_out_i_reg[7]_0 [7]),
        .R(\reg_out_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized0
   (Q,
    \reg_out_i_reg[0]_0 ,
    wr_pntr_plus1_pf_carry,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 ,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ,
    clr_full,
    wrst_busy,
    D,
    wr_clk);
  output [8:0]Q;
  output \reg_out_i_reg[0]_0 ;
  input wr_pntr_plus1_pf_carry;
  input [8:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 ;
  input [8:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  input clr_full;
  input wrst_busy;
  input [8:0]D;
  input wr_clk;

  wire [8:0]D;
  wire [8:0]Q;
  wire clr_full;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ;
  wire [8:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_8_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_9_n_0 ;
  wire [8:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  wire going_full;
  wire \reg_out_i_reg[0]_0 ;
  wire wr_clk;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'h0000FF80)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_1 
       (.I0(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2_n_0 ),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ),
        .I3(going_full),
        .I4(clr_full),
        .O(\reg_out_i_reg[0]_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [0]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [2]),
        .I3(Q[2]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [6]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [8]),
        .I3(Q[8]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [7]),
        .I5(Q[7]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [3]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [5]),
        .I3(Q[5]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [4]),
        .I5(Q[4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h8000)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5 
       (.I0(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_8_n_0 ),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_9_n_0 ),
        .I3(wr_pntr_plus1_pf_carry),
        .O(going_full));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [3]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [5]),
        .I3(Q[5]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [4]),
        .I5(Q[4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_8 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [6]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [8]),
        .I3(Q[8]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [7]),
        .I5(Q[7]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_9 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [0]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [2]),
        .I3(Q[2]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_9_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized0_1
   (\reg_out_i_reg[8]_0 ,
    D,
    ram_empty_i,
    rd_en,
    Q,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ,
    S,
    \reg_out_i_reg[0]_0 ,
    \reg_out_i_reg[8]_1 ,
    rd_clk);
  output [8:0]\reg_out_i_reg[8]_0 ;
  output [8:0]D;
  input ram_empty_i;
  input rd_en;
  input [1:0]Q;
  input [0:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ;
  input [7:0]S;
  input \reg_out_i_reg[0]_0 ;
  input [8:0]\reg_out_i_reg[8]_1 ;
  input rd_clk;

  wire [8:0]D;
  wire [1:0]Q;
  wire [7:0]S;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[8]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 ;
  wire [0:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ;
  wire p_1_in;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire \reg_out_i_reg[0]_0 ;
  wire [8:0]\reg_out_i_reg[8]_0 ;
  wire [8:0]\reg_out_i_reg[8]_1 ;
  wire [7:0]\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1_CO_UNCONNECTED ;
  wire [7:1]\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1_O_UNCONNECTED ;

  LUT4 #(
    .INIT(16'hAABA)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(Q[1]),
        .I3(Q[0]),
        .O(p_1_in));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[8]_i_2 
       (.I0(\reg_out_i_reg[8]_0 [8]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[8]_i_2_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1 
       (.CI(\reg_out_i_reg[8]_0 [0]),
        .CI_TOP(1'b0),
        .CO({\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 }),
        .DI({\reg_out_i_reg[8]_0 [7:1],p_1_in}),
        .O(D[7:0]),
        .S(S));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1 
       (.CI(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1_O_UNCONNECTED [7:1],D[8]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[8]_i_2_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [0]),
        .Q(\reg_out_i_reg[8]_0 [0]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [1]),
        .Q(\reg_out_i_reg[8]_0 [1]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [2]),
        .Q(\reg_out_i_reg[8]_0 [2]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [3]),
        .Q(\reg_out_i_reg[8]_0 [3]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [4]),
        .Q(\reg_out_i_reg[8]_0 [4]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [5]),
        .Q(\reg_out_i_reg[8]_0 [5]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [6]),
        .Q(\reg_out_i_reg[8]_0 [6]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [7]),
        .Q(\reg_out_i_reg[8]_0 [7]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [8]),
        .Q(\reg_out_i_reg[8]_0 [8]),
        .R(\reg_out_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized0_18
   (Q,
    wrst_busy,
    D,
    wr_clk);
  output [8:0]Q;
  input wrst_busy;
  input [8:0]D;
  input wr_clk;

  wire [8:0]D;
  wire [8:0]Q;
  wire wr_clk;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized0_20
   (D,
    Q,
    DI,
    S,
    \grdc.rd_data_count_i_reg[8] ,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[7]_0 ,
    \reg_out_i_reg[8]_0 ,
    \reg_out_i_reg[8]_1 ,
    rd_clk);
  output [7:0]D;
  output [8:0]Q;
  input [1:0]DI;
  input [6:0]S;
  input [0:0]\grdc.rd_data_count_i_reg[8] ;
  input [0:0]\grdc.rd_data_count_i_reg[7] ;
  input [5:0]\grdc.rd_data_count_i_reg[7]_0 ;
  input \reg_out_i_reg[8]_0 ;
  input [8:0]\reg_out_i_reg[8]_1 ;
  input rd_clk;

  wire [7:0]D;
  wire [1:0]DI;
  wire [8:0]Q;
  wire [6:0]S;
  wire \grdc.rd_data_count_i[7]_i_14_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_2_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_3_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_4_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_5_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_6_n_0 ;
  wire [0:0]\grdc.rd_data_count_i_reg[7] ;
  wire [5:0]\grdc.rd_data_count_i_reg[7]_0 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_0 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_1 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_2 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_3 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_4 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_5 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_6 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_7 ;
  wire [0:0]\grdc.rd_data_count_i_reg[8] ;
  wire rd_clk;
  wire \reg_out_i_reg[8]_0 ;
  wire [8:0]\reg_out_i_reg[8]_1 ;
  wire [0:0]\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:0]\NLW_grdc.rd_data_count_i_reg[8]_i_2_CO_UNCONNECTED ;
  wire [7:1]\NLW_grdc.rd_data_count_i_reg[8]_i_2_O_UNCONNECTED ;

  LUT5 #(
    .INIT(32'h718E8E71)) 
    \grdc.rd_data_count_i[7]_i_14 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] ),
        .I2(\grdc.rd_data_count_i_reg[7]_0 [0]),
        .I3(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .I4(Q[2]),
        .O(\grdc.rd_data_count_i[7]_i_14_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_2 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [5]),
        .O(\grdc.rd_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_3 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [4]),
        .O(\grdc.rd_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_4 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [3]),
        .O(\grdc.rd_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_5 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [2]),
        .O(\grdc.rd_data_count_i[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_6 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .O(\grdc.rd_data_count_i[7]_i_6_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[7]_i_1 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\grdc.rd_data_count_i_reg[7]_i_1_n_0 ,\grdc.rd_data_count_i_reg[7]_i_1_n_1 ,\grdc.rd_data_count_i_reg[7]_i_1_n_2 ,\grdc.rd_data_count_i_reg[7]_i_1_n_3 ,\grdc.rd_data_count_i_reg[7]_i_1_n_4 ,\grdc.rd_data_count_i_reg[7]_i_1_n_5 ,\grdc.rd_data_count_i_reg[7]_i_1_n_6 ,\grdc.rd_data_count_i_reg[7]_i_1_n_7 }),
        .DI({\grdc.rd_data_count_i[7]_i_2_n_0 ,\grdc.rd_data_count_i[7]_i_3_n_0 ,\grdc.rd_data_count_i[7]_i_4_n_0 ,\grdc.rd_data_count_i[7]_i_5_n_0 ,\grdc.rd_data_count_i[7]_i_6_n_0 ,DI,Q[0]}),
        .O({D[6:0],\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({S[6:2],\grdc.rd_data_count_i[7]_i_14_n_0 ,S[1:0]}));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[8]_i_2 
       (.CI(\grdc.rd_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_grdc.rd_data_count_i_reg[8]_i_2_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_grdc.rd_data_count_i_reg[8]_i_2_O_UNCONNECTED [7:1],D[7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\grdc.rd_data_count_i_reg[8] }));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [4]),
        .Q(Q[4]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [5]),
        .Q(Q[5]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [6]),
        .Q(Q[6]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [7]),
        .Q(Q[7]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [8]),
        .Q(Q[8]),
        .R(\reg_out_i_reg[8]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized0_26
   (Q,
    wrst_busy,
    D,
    wr_clk);
  output [8:0]Q;
  input wrst_busy;
  input [8:0]D;
  input wr_clk;

  wire [8:0]D;
  wire [8:0]Q;
  wire wr_clk;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized0_28
   (D,
    Q,
    DI,
    S,
    \grdc.rd_data_count_i_reg[8] ,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[7]_0 ,
    \reg_out_i_reg[8]_0 ,
    \reg_out_i_reg[8]_1 ,
    rd_clk);
  output [7:0]D;
  output [8:0]Q;
  input [1:0]DI;
  input [6:0]S;
  input [0:0]\grdc.rd_data_count_i_reg[8] ;
  input [0:0]\grdc.rd_data_count_i_reg[7] ;
  input [5:0]\grdc.rd_data_count_i_reg[7]_0 ;
  input \reg_out_i_reg[8]_0 ;
  input [8:0]\reg_out_i_reg[8]_1 ;
  input rd_clk;

  wire [7:0]D;
  wire [1:0]DI;
  wire [8:0]Q;
  wire [6:0]S;
  wire \grdc.rd_data_count_i[7]_i_14_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_2_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_3_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_4_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_5_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_6_n_0 ;
  wire [0:0]\grdc.rd_data_count_i_reg[7] ;
  wire [5:0]\grdc.rd_data_count_i_reg[7]_0 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_0 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_1 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_2 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_3 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_4 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_5 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_6 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_7 ;
  wire [0:0]\grdc.rd_data_count_i_reg[8] ;
  wire rd_clk;
  wire \reg_out_i_reg[8]_0 ;
  wire [8:0]\reg_out_i_reg[8]_1 ;
  wire [0:0]\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:0]\NLW_grdc.rd_data_count_i_reg[8]_i_2_CO_UNCONNECTED ;
  wire [7:1]\NLW_grdc.rd_data_count_i_reg[8]_i_2_O_UNCONNECTED ;

  LUT5 #(
    .INIT(32'h718E8E71)) 
    \grdc.rd_data_count_i[7]_i_14 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] ),
        .I2(\grdc.rd_data_count_i_reg[7]_0 [0]),
        .I3(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .I4(Q[2]),
        .O(\grdc.rd_data_count_i[7]_i_14_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_2 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [5]),
        .O(\grdc.rd_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_3 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [4]),
        .O(\grdc.rd_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_4 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [3]),
        .O(\grdc.rd_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_5 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [2]),
        .O(\grdc.rd_data_count_i[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_6 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .O(\grdc.rd_data_count_i[7]_i_6_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[7]_i_1 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\grdc.rd_data_count_i_reg[7]_i_1_n_0 ,\grdc.rd_data_count_i_reg[7]_i_1_n_1 ,\grdc.rd_data_count_i_reg[7]_i_1_n_2 ,\grdc.rd_data_count_i_reg[7]_i_1_n_3 ,\grdc.rd_data_count_i_reg[7]_i_1_n_4 ,\grdc.rd_data_count_i_reg[7]_i_1_n_5 ,\grdc.rd_data_count_i_reg[7]_i_1_n_6 ,\grdc.rd_data_count_i_reg[7]_i_1_n_7 }),
        .DI({\grdc.rd_data_count_i[7]_i_2_n_0 ,\grdc.rd_data_count_i[7]_i_3_n_0 ,\grdc.rd_data_count_i[7]_i_4_n_0 ,\grdc.rd_data_count_i[7]_i_5_n_0 ,\grdc.rd_data_count_i[7]_i_6_n_0 ,DI,Q[0]}),
        .O({D[6:0],\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({S[6:2],\grdc.rd_data_count_i[7]_i_14_n_0 ,S[1:0]}));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[8]_i_2 
       (.CI(\grdc.rd_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_grdc.rd_data_count_i_reg[8]_i_2_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_grdc.rd_data_count_i_reg[8]_i_2_O_UNCONNECTED [7:1],D[7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\grdc.rd_data_count_i_reg[8] }));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [4]),
        .Q(Q[4]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [5]),
        .Q(Q[5]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [6]),
        .Q(Q[6]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [7]),
        .Q(Q[7]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [8]),
        .Q(Q[8]),
        .R(\reg_out_i_reg[8]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized0_37
   (Q,
    wrst_busy,
    D,
    wr_clk);
  output [8:0]Q;
  input wrst_busy;
  input [8:0]D;
  input wr_clk;

  wire [8:0]D;
  wire [8:0]Q;
  wire wr_clk;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized0_39
   (D,
    Q,
    DI,
    S,
    \grdc.rd_data_count_i_reg[8] ,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[7]_0 ,
    \reg_out_i_reg[8]_0 ,
    \reg_out_i_reg[8]_1 ,
    rd_clk);
  output [7:0]D;
  output [8:0]Q;
  input [1:0]DI;
  input [6:0]S;
  input [0:0]\grdc.rd_data_count_i_reg[8] ;
  input [0:0]\grdc.rd_data_count_i_reg[7] ;
  input [5:0]\grdc.rd_data_count_i_reg[7]_0 ;
  input \reg_out_i_reg[8]_0 ;
  input [8:0]\reg_out_i_reg[8]_1 ;
  input rd_clk;

  wire [7:0]D;
  wire [1:0]DI;
  wire [8:0]Q;
  wire [6:0]S;
  wire \grdc.rd_data_count_i[7]_i_14_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_2_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_3_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_4_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_5_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_6_n_0 ;
  wire [0:0]\grdc.rd_data_count_i_reg[7] ;
  wire [5:0]\grdc.rd_data_count_i_reg[7]_0 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_0 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_1 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_2 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_3 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_4 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_5 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_6 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_7 ;
  wire [0:0]\grdc.rd_data_count_i_reg[8] ;
  wire rd_clk;
  wire \reg_out_i_reg[8]_0 ;
  wire [8:0]\reg_out_i_reg[8]_1 ;
  wire [0:0]\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:0]\NLW_grdc.rd_data_count_i_reg[8]_i_2_CO_UNCONNECTED ;
  wire [7:1]\NLW_grdc.rd_data_count_i_reg[8]_i_2_O_UNCONNECTED ;

  LUT5 #(
    .INIT(32'h718E8E71)) 
    \grdc.rd_data_count_i[7]_i_14 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] ),
        .I2(\grdc.rd_data_count_i_reg[7]_0 [0]),
        .I3(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .I4(Q[2]),
        .O(\grdc.rd_data_count_i[7]_i_14_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_2 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [5]),
        .O(\grdc.rd_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_3 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [4]),
        .O(\grdc.rd_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_4 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [3]),
        .O(\grdc.rd_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_5 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [2]),
        .O(\grdc.rd_data_count_i[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_6 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .O(\grdc.rd_data_count_i[7]_i_6_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[7]_i_1 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\grdc.rd_data_count_i_reg[7]_i_1_n_0 ,\grdc.rd_data_count_i_reg[7]_i_1_n_1 ,\grdc.rd_data_count_i_reg[7]_i_1_n_2 ,\grdc.rd_data_count_i_reg[7]_i_1_n_3 ,\grdc.rd_data_count_i_reg[7]_i_1_n_4 ,\grdc.rd_data_count_i_reg[7]_i_1_n_5 ,\grdc.rd_data_count_i_reg[7]_i_1_n_6 ,\grdc.rd_data_count_i_reg[7]_i_1_n_7 }),
        .DI({\grdc.rd_data_count_i[7]_i_2_n_0 ,\grdc.rd_data_count_i[7]_i_3_n_0 ,\grdc.rd_data_count_i[7]_i_4_n_0 ,\grdc.rd_data_count_i[7]_i_5_n_0 ,\grdc.rd_data_count_i[7]_i_6_n_0 ,DI,Q[0]}),
        .O({D[6:0],\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({S[6:2],\grdc.rd_data_count_i[7]_i_14_n_0 ,S[1:0]}));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[8]_i_2 
       (.CI(\grdc.rd_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_grdc.rd_data_count_i_reg[8]_i_2_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_grdc.rd_data_count_i_reg[8]_i_2_O_UNCONNECTED [7:1],D[7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\grdc.rd_data_count_i_reg[8] }));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [4]),
        .Q(Q[4]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [5]),
        .Q(Q[5]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [6]),
        .Q(Q[6]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [7]),
        .Q(Q[7]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [8]),
        .Q(Q[8]),
        .R(\reg_out_i_reg[8]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized0_5
   (Q,
    \reg_out_i_reg[0]_0 ,
    wr_pntr_plus1_pf_carry,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 ,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ,
    clr_full,
    wrst_busy,
    D,
    wr_clk);
  output [8:0]Q;
  output \reg_out_i_reg[0]_0 ;
  input wr_pntr_plus1_pf_carry;
  input [8:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 ;
  input [8:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  input clr_full;
  input wrst_busy;
  input [8:0]D;
  input wr_clk;

  wire [8:0]D;
  wire [8:0]Q;
  wire clr_full;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ;
  wire [8:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_8_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_9_n_0 ;
  wire [8:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  wire going_full;
  wire \reg_out_i_reg[0]_0 ;
  wire wr_clk;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'h0000FF80)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_1 
       (.I0(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2_n_0 ),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ),
        .I3(going_full),
        .I4(clr_full),
        .O(\reg_out_i_reg[0]_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [0]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [2]),
        .I3(Q[2]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [6]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [8]),
        .I3(Q[8]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [7]),
        .I5(Q[7]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [3]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [5]),
        .I3(Q[5]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [4]),
        .I5(Q[4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h8000)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5 
       (.I0(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_8_n_0 ),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_9_n_0 ),
        .I3(wr_pntr_plus1_pf_carry),
        .O(going_full));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [3]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [5]),
        .I3(Q[5]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [4]),
        .I5(Q[4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_8 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [6]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [8]),
        .I3(Q[8]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [7]),
        .I5(Q[7]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_9 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [0]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [2]),
        .I3(Q[2]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_9_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized0_7
   (\reg_out_i_reg[8]_0 ,
    D,
    ram_empty_i,
    rd_en,
    Q,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ,
    S,
    \reg_out_i_reg[0]_0 ,
    \reg_out_i_reg[8]_1 ,
    rd_clk);
  output [8:0]\reg_out_i_reg[8]_0 ;
  output [8:0]D;
  input ram_empty_i;
  input rd_en;
  input [1:0]Q;
  input [0:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ;
  input [7:0]S;
  input \reg_out_i_reg[0]_0 ;
  input [8:0]\reg_out_i_reg[8]_1 ;
  input rd_clk;

  wire [8:0]D;
  wire [1:0]Q;
  wire [7:0]S;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[8]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 ;
  wire [0:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ;
  wire p_1_in;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire \reg_out_i_reg[0]_0 ;
  wire [8:0]\reg_out_i_reg[8]_0 ;
  wire [8:0]\reg_out_i_reg[8]_1 ;
  wire [7:0]\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1_CO_UNCONNECTED ;
  wire [7:1]\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1_O_UNCONNECTED ;

  LUT4 #(
    .INIT(16'hAABA)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(Q[1]),
        .I3(Q[0]),
        .O(p_1_in));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[8]_i_2 
       (.I0(\reg_out_i_reg[8]_0 [8]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[8]_i_2_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1 
       (.CI(\reg_out_i_reg[8]_0 [0]),
        .CI_TOP(1'b0),
        .CO({\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 }),
        .DI({\reg_out_i_reg[8]_0 [7:1],p_1_in}),
        .O(D[7:0]),
        .S(S));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1 
       (.CI(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1_O_UNCONNECTED [7:1],D[8]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[8]_i_2_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [0]),
        .Q(\reg_out_i_reg[8]_0 [0]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [1]),
        .Q(\reg_out_i_reg[8]_0 [1]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [2]),
        .Q(\reg_out_i_reg[8]_0 [2]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [3]),
        .Q(\reg_out_i_reg[8]_0 [3]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [4]),
        .Q(\reg_out_i_reg[8]_0 [4]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [5]),
        .Q(\reg_out_i_reg[8]_0 [5]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [6]),
        .Q(\reg_out_i_reg[8]_0 [6]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [7]),
        .Q(\reg_out_i_reg[8]_0 [7]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [8]),
        .Q(\reg_out_i_reg[8]_0 [8]),
        .R(\reg_out_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized1
   (Q,
    wrst_busy,
    D,
    wr_clk);
  output [9:0]Q;
  input wrst_busy;
  input [9:0]D;
  input wr_clk;

  wire [9:0]D;
  wire [9:0]Q;
  wire wr_clk;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[9] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[9]),
        .Q(Q[9]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized1_2
   (DI,
    Q,
    \reg_out_i_reg[7]_0 ,
    S,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[9] ,
    \reg_out_i_reg[9]_0 ,
    D,
    rd_clk);
  output [5:0]DI;
  output [8:0]Q;
  output [0:0]\reg_out_i_reg[7]_0 ;
  output [0:0]S;
  input [0:0]\grdc.rd_data_count_i_reg[7] ;
  input [8:0]\grdc.rd_data_count_i_reg[9] ;
  input \reg_out_i_reg[9]_0 ;
  input [9:0]D;
  input rd_clk;

  wire [9:0]D;
  wire [5:0]DI;
  wire [8:0]Q;
  wire [0:0]S;
  wire [0:0]\grdc.rd_data_count_i_reg[7] ;
  wire [8:0]\grdc.rd_data_count_i_reg[9] ;
  wire rd_clk;
  wire [0:0]\reg_out_i_reg[7]_0 ;
  wire \reg_out_i_reg[9]_0 ;
  wire \reg_out_i_reg_n_0_[9] ;

  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_2 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[9] [5]),
        .O(DI[5]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_3 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[9] [4]),
        .O(DI[4]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_4 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[9] [3]),
        .O(DI[3]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_5 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[9] [2]),
        .O(DI[2]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_6 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[9] [1]),
        .O(DI[1]));
  LUT3 #(
    .INIT(8'h8E)) 
    \grdc.rd_data_count_i[7]_i_7 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] ),
        .I2(\grdc.rd_data_count_i_reg[9] [0]),
        .O(DI[0]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[9]_i_3 
       (.I0(Q[7]),
        .I1(\grdc.rd_data_count_i_reg[9] [6]),
        .O(\reg_out_i_reg[7]_0 ));
  LUT4 #(
    .INIT(16'hD22D)) 
    \grdc.rd_data_count_i[9]_i_4 
       (.I0(Q[8]),
        .I1(\grdc.rd_data_count_i_reg[9] [7]),
        .I2(\grdc.rd_data_count_i_reg[9] [8]),
        .I3(\reg_out_i_reg_n_0_[9] ),
        .O(S));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[9] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[9]),
        .Q(\reg_out_i_reg_n_0_[9] ),
        .R(\reg_out_i_reg[9]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized1_6
   (Q,
    wrst_busy,
    D,
    wr_clk);
  output [9:0]Q;
  input wrst_busy;
  input [9:0]D;
  input wr_clk;

  wire [9:0]D;
  wire [9:0]Q;
  wire wr_clk;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[9] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[9]),
        .Q(Q[9]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized1_8
   (DI,
    Q,
    \reg_out_i_reg[7]_0 ,
    S,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[9] ,
    \reg_out_i_reg[9]_0 ,
    D,
    rd_clk);
  output [5:0]DI;
  output [8:0]Q;
  output [0:0]\reg_out_i_reg[7]_0 ;
  output [0:0]S;
  input [0:0]\grdc.rd_data_count_i_reg[7] ;
  input [8:0]\grdc.rd_data_count_i_reg[9] ;
  input \reg_out_i_reg[9]_0 ;
  input [9:0]D;
  input rd_clk;

  wire [9:0]D;
  wire [5:0]DI;
  wire [8:0]Q;
  wire [0:0]S;
  wire [0:0]\grdc.rd_data_count_i_reg[7] ;
  wire [8:0]\grdc.rd_data_count_i_reg[9] ;
  wire rd_clk;
  wire [0:0]\reg_out_i_reg[7]_0 ;
  wire \reg_out_i_reg[9]_0 ;
  wire \reg_out_i_reg_n_0_[9] ;

  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_2 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[9] [5]),
        .O(DI[5]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_3 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[9] [4]),
        .O(DI[4]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_4 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[9] [3]),
        .O(DI[3]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_5 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[9] [2]),
        .O(DI[2]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_6 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[9] [1]),
        .O(DI[1]));
  LUT3 #(
    .INIT(8'h8E)) 
    \grdc.rd_data_count_i[7]_i_7 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] ),
        .I2(\grdc.rd_data_count_i_reg[9] [0]),
        .O(DI[0]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[9]_i_3 
       (.I0(Q[7]),
        .I1(\grdc.rd_data_count_i_reg[9] [6]),
        .O(\reg_out_i_reg[7]_0 ));
  LUT4 #(
    .INIT(16'hD22D)) 
    \grdc.rd_data_count_i[9]_i_4 
       (.I0(Q[8]),
        .I1(\grdc.rd_data_count_i_reg[9] [7]),
        .I2(\grdc.rd_data_count_i_reg[9] [8]),
        .I3(\reg_out_i_reg_n_0_[9] ),
        .O(S));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[9] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[9]),
        .Q(\reg_out_i_reg_n_0_[9] ),
        .R(\reg_out_i_reg[9]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized2
   (D,
    Q,
    \count_value_i_reg[3] ,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 ,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ,
    rst_d1,
    wrst_busy,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] ,
    wr_en,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_0 ,
    E,
    clr_full,
    \reg_out_i_reg[3]_0 ,
    wr_clk);
  output [1:0]D;
  output [2:0]Q;
  output \count_value_i_reg[3] ;
  input [2:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ;
  input \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 ;
  input [2:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  input rst_d1;
  input wrst_busy;
  input \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] ;
  input wr_en;
  input \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_0 ;
  input [0:0]E;
  input clr_full;
  input [3:0]\reg_out_i_reg[3]_0 ;
  input wr_clk;

  wire [1:0]D;
  wire [0:0]E;
  wire [2:0]Q;
  wire clr_full;
  wire \count_value_i_reg[3] ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ;
  wire [2:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] ;
  wire [2:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 ;
  wire [2:2]rd_pntr_wr;
  wire [3:0]\reg_out_i_reg[3]_0 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wrst_busy;

  LUT6 #(
    .INIT(64'h00000000F8888888)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_1 
       (.I0(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 ),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ),
        .I3(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_0 ),
        .I4(E),
        .I5(clr_full),
        .O(\count_value_i_reg[3] ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [0]),
        .I2(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [2]),
        .I3(rd_pntr_wr),
        .I4(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [0]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [2]),
        .I3(rd_pntr_wr),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h718E8E71)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[3]_i_1 
       (.I0(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2_n_0 ),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [1]),
        .I2(Q[1]),
        .I3(rd_pntr_wr),
        .I4(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [2]),
        .O(D[0]));
  LUT6 #(
    .INIT(64'h2BFF002BD400FFD4)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_1 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [1]),
        .I2(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [2]),
        .I4(rd_pntr_wr),
        .I5(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 ),
        .O(D[1]));
  LUT6 #(
    .INIT(64'h4444444D44444444)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [0]),
        .I2(rst_d1),
        .I3(wrst_busy),
        .I4(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] ),
        .I5(wr_en),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [2]),
        .Q(rd_pntr_wr),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [3]),
        .Q(Q[2]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized2_48
   (D,
    Q,
    ram_empty_i0,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] ,
    rd_en,
    ram_empty_i,
    enb,
    \gen_pf_ic_rc.ram_empty_i_reg_0 ,
    \reg_out_i_reg[0]_0 ,
    \reg_out_i_reg[3]_0 ,
    rd_clk);
  output [1:0]D;
  output [3:0]Q;
  output ram_empty_i0;
  input [3:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  input [1:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] ;
  input rd_en;
  input ram_empty_i;
  input enb;
  input [3:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  input \reg_out_i_reg[0]_0 ;
  input [3:0]\reg_out_i_reg[3]_0 ;
  input rd_clk;

  wire [1:0]D;
  wire [3:0]Q;
  wire enb;
  wire [1:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] ;
  wire \gen_pf_ic_rc.ram_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_3_n_0 ;
  wire [3:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  wire [3:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire rd_en;
  wire \reg_out_i_reg[0]_0 ;
  wire [3:0]\reg_out_i_reg[3]_0 ;

  LUT6 #(
    .INIT(64'h6666666699999969)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[0]_i_1 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] [1]),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] [0]),
        .I4(rd_en),
        .I5(ram_empty_i),
        .O(D[0]));
  LUT5 #(
    .INIT(32'hD42B2BD4)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[1]_i_1 
       (.I0(Q[0]),
        .I1(enb),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I3(Q[1]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hFF8080802020FF20)) 
    \gen_pf_ic_rc.ram_empty_i_i_1 
       (.I0(enb),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [3]),
        .I2(\gen_pf_ic_rc.ram_empty_i_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.ram_empty_i_i_3_n_0 ),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .I5(Q[3]),
        .O(ram_empty_i0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_2 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [2]),
        .I3(Q[2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_0 [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_3 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .I3(Q[2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized2_54
   (D,
    Q,
    \count_value_i_reg[3] ,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 ,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ,
    rst_d1,
    wrst_busy,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] ,
    wr_en,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_0 ,
    E,
    clr_full,
    \reg_out_i_reg[3]_0 ,
    wr_clk);
  output [1:0]D;
  output [2:0]Q;
  output \count_value_i_reg[3] ;
  input [2:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ;
  input \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 ;
  input [2:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  input rst_d1;
  input wrst_busy;
  input \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] ;
  input wr_en;
  input \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_0 ;
  input [0:0]E;
  input clr_full;
  input [3:0]\reg_out_i_reg[3]_0 ;
  input wr_clk;

  wire [1:0]D;
  wire [0:0]E;
  wire [2:0]Q;
  wire clr_full;
  wire \count_value_i_reg[3] ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ;
  wire [2:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] ;
  wire [2:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 ;
  wire [2:2]rd_pntr_wr;
  wire [3:0]\reg_out_i_reg[3]_0 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wrst_busy;

  LUT6 #(
    .INIT(64'h00000000F8888888)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_1 
       (.I0(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 ),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ),
        .I3(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_0 ),
        .I4(E),
        .I5(clr_full),
        .O(\count_value_i_reg[3] ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [0]),
        .I2(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [2]),
        .I3(rd_pntr_wr),
        .I4(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [0]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [2]),
        .I3(rd_pntr_wr),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h718E8E71)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[3]_i_1 
       (.I0(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2_n_0 ),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [1]),
        .I2(Q[1]),
        .I3(rd_pntr_wr),
        .I4(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [2]),
        .O(D[0]));
  LUT6 #(
    .INIT(64'h2BFF002BD400FFD4)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_1 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [1]),
        .I2(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [2]),
        .I4(rd_pntr_wr),
        .I5(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 ),
        .O(D[1]));
  LUT6 #(
    .INIT(64'h4444444D44444444)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [0]),
        .I2(rst_d1),
        .I3(wrst_busy),
        .I4(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] ),
        .I5(wr_en),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [2]),
        .Q(rd_pntr_wr),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [3]),
        .Q(Q[2]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized2_56
   (D,
    Q,
    ram_empty_i0,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] ,
    rd_en,
    ram_empty_i,
    enb,
    \gen_pf_ic_rc.ram_empty_i_reg_0 ,
    \reg_out_i_reg[0]_0 ,
    \reg_out_i_reg[3]_0 ,
    rd_clk);
  output [1:0]D;
  output [3:0]Q;
  output ram_empty_i0;
  input [3:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  input [1:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] ;
  input rd_en;
  input ram_empty_i;
  input enb;
  input [3:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  input \reg_out_i_reg[0]_0 ;
  input [3:0]\reg_out_i_reg[3]_0 ;
  input rd_clk;

  wire [1:0]D;
  wire [3:0]Q;
  wire enb;
  wire [1:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] ;
  wire \gen_pf_ic_rc.ram_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_3_n_0 ;
  wire [3:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  wire [3:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire rd_en;
  wire \reg_out_i_reg[0]_0 ;
  wire [3:0]\reg_out_i_reg[3]_0 ;

  LUT6 #(
    .INIT(64'h6666666699999969)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[0]_i_1 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] [1]),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] [0]),
        .I4(rd_en),
        .I5(ram_empty_i),
        .O(D[0]));
  LUT5 #(
    .INIT(32'hD42B2BD4)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[1]_i_1 
       (.I0(Q[0]),
        .I1(enb),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I3(Q[1]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hFF8080802020FF20)) 
    \gen_pf_ic_rc.ram_empty_i_i_1 
       (.I0(enb),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [3]),
        .I2(\gen_pf_ic_rc.ram_empty_i_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.ram_empty_i_i_3_n_0 ),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .I5(Q[3]),
        .O(ram_empty_i0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_2 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [2]),
        .I3(Q[2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_0 [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_3 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .I3(Q[2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized3
   (D,
    Q,
    \gwdc.wr_data_count_i_reg[4] ,
    wrst_busy,
    \reg_out_i_reg[4]_0 ,
    wr_clk);
  output [2:0]D;
  output [2:0]Q;
  input [4:0]\gwdc.wr_data_count_i_reg[4] ;
  input wrst_busy;
  input [4:0]\reg_out_i_reg[4]_0 ;
  input wr_clk;

  wire [2:0]D;
  wire [2:0]Q;
  wire \gwdc.wr_data_count_i[4]_i_2_n_0 ;
  wire [4:0]\gwdc.wr_data_count_i_reg[4] ;
  wire [4:0]\reg_out_i_reg[4]_0 ;
  wire \reg_out_i_reg_n_0_[3] ;
  wire \reg_out_i_reg_n_0_[4] ;
  wire wr_clk;
  wire wrst_busy;

  LUT4 #(
    .INIT(16'h2DD2)) 
    \gwdc.wr_data_count_i[1]_i_1 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[4] [0]),
        .I2(Q[1]),
        .I3(\gwdc.wr_data_count_i_reg[4] [1]),
        .O(D[0]));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT3 #(
    .INIT(8'h69)) 
    \gwdc.wr_data_count_i[3]_i_1 
       (.I0(\gwdc.wr_data_count_i[4]_i_2_n_0 ),
        .I1(\reg_out_i_reg_n_0_[3] ),
        .I2(\gwdc.wr_data_count_i_reg[4] [3]),
        .O(D[1]));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT5 #(
    .INIT(32'h718E8E71)) 
    \gwdc.wr_data_count_i[4]_i_1 
       (.I0(\gwdc.wr_data_count_i[4]_i_2_n_0 ),
        .I1(\gwdc.wr_data_count_i_reg[4] [3]),
        .I2(\reg_out_i_reg_n_0_[3] ),
        .I3(\reg_out_i_reg_n_0_[4] ),
        .I4(\gwdc.wr_data_count_i_reg[4] [4]),
        .O(D[2]));
  LUT6 #(
    .INIT(64'hD4DD4444DDDDD4DD)) 
    \gwdc.wr_data_count_i[4]_i_2 
       (.I0(Q[2]),
        .I1(\gwdc.wr_data_count_i_reg[4] [2]),
        .I2(\gwdc.wr_data_count_i_reg[4] [0]),
        .I3(Q[0]),
        .I4(\gwdc.wr_data_count_i_reg[4] [1]),
        .I5(Q[1]),
        .O(\gwdc.wr_data_count_i[4]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [3]),
        .Q(\reg_out_i_reg_n_0_[3] ),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [4]),
        .Q(\reg_out_i_reg_n_0_[4] ),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized3_49
   (D,
    Q,
    \reg_out_i_reg[3]_0 ,
    \grdc.rd_data_count_i_reg[4] ,
    \grdc.rd_data_count_i_reg[1] ,
    \reg_out_i_reg[4]_0 ,
    \reg_out_i_reg[4]_1 ,
    rd_clk);
  output [0:0]D;
  output [4:0]Q;
  output \reg_out_i_reg[3]_0 ;
  input [2:0]\grdc.rd_data_count_i_reg[4] ;
  input [1:0]\grdc.rd_data_count_i_reg[1] ;
  input \reg_out_i_reg[4]_0 ;
  input [4:0]\reg_out_i_reg[4]_1 ;
  input rd_clk;

  wire [0:0]D;
  wire [4:0]Q;
  wire [1:0]\grdc.rd_data_count_i_reg[1] ;
  wire [2:0]\grdc.rd_data_count_i_reg[4] ;
  wire rd_clk;
  wire \reg_out_i_reg[3]_0 ;
  wire \reg_out_i_reg[4]_0 ;
  wire [4:0]\reg_out_i_reg[4]_1 ;

  LUT6 #(
    .INIT(64'hC33C96696996C33C)) 
    \grdc.rd_data_count_i[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(\grdc.rd_data_count_i_reg[4] [1]),
        .I3(\grdc.rd_data_count_i_reg[1] [1]),
        .I4(\grdc.rd_data_count_i_reg[1] [0]),
        .I5(\grdc.rd_data_count_i_reg[4] [0]),
        .O(D));
  LUT2 #(
    .INIT(4'h9)) 
    \grdc.rd_data_count_i[4]_i_5 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[4] [2]),
        .O(\reg_out_i_reg[3]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_1 [0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_1 [1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_1 [2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_1 [3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_1 [4]),
        .Q(Q[4]),
        .R(\reg_out_i_reg[4]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized3_55
   (D,
    Q,
    \gwdc.wr_data_count_i_reg[4] ,
    wrst_busy,
    \reg_out_i_reg[4]_0 ,
    wr_clk);
  output [2:0]D;
  output [2:0]Q;
  input [4:0]\gwdc.wr_data_count_i_reg[4] ;
  input wrst_busy;
  input [4:0]\reg_out_i_reg[4]_0 ;
  input wr_clk;

  wire [2:0]D;
  wire [2:0]Q;
  wire \gwdc.wr_data_count_i[4]_i_2_n_0 ;
  wire [4:0]\gwdc.wr_data_count_i_reg[4] ;
  wire [4:0]\reg_out_i_reg[4]_0 ;
  wire \reg_out_i_reg_n_0_[3] ;
  wire \reg_out_i_reg_n_0_[4] ;
  wire wr_clk;
  wire wrst_busy;

  LUT4 #(
    .INIT(16'h2DD2)) 
    \gwdc.wr_data_count_i[1]_i_1 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[4] [0]),
        .I2(Q[1]),
        .I3(\gwdc.wr_data_count_i_reg[4] [1]),
        .O(D[0]));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT3 #(
    .INIT(8'h69)) 
    \gwdc.wr_data_count_i[3]_i_1 
       (.I0(\gwdc.wr_data_count_i[4]_i_2_n_0 ),
        .I1(\reg_out_i_reg_n_0_[3] ),
        .I2(\gwdc.wr_data_count_i_reg[4] [3]),
        .O(D[1]));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT5 #(
    .INIT(32'h718E8E71)) 
    \gwdc.wr_data_count_i[4]_i_1 
       (.I0(\gwdc.wr_data_count_i[4]_i_2_n_0 ),
        .I1(\gwdc.wr_data_count_i_reg[4] [3]),
        .I2(\reg_out_i_reg_n_0_[3] ),
        .I3(\reg_out_i_reg_n_0_[4] ),
        .I4(\gwdc.wr_data_count_i_reg[4] [4]),
        .O(D[2]));
  LUT6 #(
    .INIT(64'hD4DD4444DDDDD4DD)) 
    \gwdc.wr_data_count_i[4]_i_2 
       (.I0(Q[2]),
        .I1(\gwdc.wr_data_count_i_reg[4] [2]),
        .I2(\gwdc.wr_data_count_i_reg[4] [0]),
        .I3(Q[0]),
        .I4(\gwdc.wr_data_count_i_reg[4] [1]),
        .I5(Q[1]),
        .O(\gwdc.wr_data_count_i[4]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [3]),
        .Q(\reg_out_i_reg_n_0_[3] ),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [4]),
        .Q(\reg_out_i_reg_n_0_[4] ),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_reg_vec__parameterized3_57
   (D,
    Q,
    \reg_out_i_reg[3]_0 ,
    \grdc.rd_data_count_i_reg[4] ,
    \grdc.rd_data_count_i_reg[1] ,
    \reg_out_i_reg[4]_0 ,
    \reg_out_i_reg[4]_1 ,
    rd_clk);
  output [0:0]D;
  output [4:0]Q;
  output \reg_out_i_reg[3]_0 ;
  input [2:0]\grdc.rd_data_count_i_reg[4] ;
  input [1:0]\grdc.rd_data_count_i_reg[1] ;
  input \reg_out_i_reg[4]_0 ;
  input [4:0]\reg_out_i_reg[4]_1 ;
  input rd_clk;

  wire [0:0]D;
  wire [4:0]Q;
  wire [1:0]\grdc.rd_data_count_i_reg[1] ;
  wire [2:0]\grdc.rd_data_count_i_reg[4] ;
  wire rd_clk;
  wire \reg_out_i_reg[3]_0 ;
  wire \reg_out_i_reg[4]_0 ;
  wire [4:0]\reg_out_i_reg[4]_1 ;

  LUT6 #(
    .INIT(64'hC33C96696996C33C)) 
    \grdc.rd_data_count_i[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(\grdc.rd_data_count_i_reg[4] [1]),
        .I3(\grdc.rd_data_count_i_reg[1] [1]),
        .I4(\grdc.rd_data_count_i_reg[1] [0]),
        .I5(\grdc.rd_data_count_i_reg[4] [0]),
        .O(D));
  LUT2 #(
    .INIT(4'h9)) 
    \grdc.rd_data_count_i[4]_i_5 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[4] [2]),
        .O(\reg_out_i_reg[3]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_1 [0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_1 [1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_1 [2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_1 [3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_1 [4]),
        .Q(Q[4]),
        .R(\reg_out_i_reg[4]_0 ));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_rst
   (\gen_rst_ic.fifo_rd_rst_ic_reg_0 ,
    wrst_busy,
    E,
    wr_rst_busy,
    SR,
    \gen_rst_ic.fifo_rd_rst_ic_reg_1 ,
    underflow_i0,
    rd_clk,
    wr_clk,
    rst,
    wr_en,
    \count_value_i_reg[3] ,
    rst_d1,
    ram_empty_i,
    Q,
    rd_en,
    \guf.underflow_i_reg );
  output \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  output wrst_busy;
  output [0:0]E;
  output wr_rst_busy;
  output [0:0]SR;
  output [0:0]\gen_rst_ic.fifo_rd_rst_ic_reg_1 ;
  output underflow_i0;
  input rd_clk;
  input wr_clk;
  input rst;
  input wr_en;
  input \count_value_i_reg[3] ;
  input rst_d1;
  input ram_empty_i;
  input [1:0]Q;
  input rd_en;
  input \guf.underflow_i_reg ;

  wire \/i__n_0 ;
  wire [0:0]E;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i_reg[3] ;
  (* RTL_KEEP = "yes" *) wire [1:0]\gen_rst_ic.curr_rrst_state ;
  wire \gen_rst_ic.fifo_rd_rst_i ;
  wire \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  wire [0:0]\gen_rst_ic.fifo_rd_rst_ic_reg_1 ;
  wire \gen_rst_ic.fifo_rd_rst_wr_i ;
  wire \gen_rst_ic.fifo_wr_rst_ic ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_rd ;
  wire [1:0]\gen_rst_ic.next_rrst_state ;
  wire \gen_rst_ic.rst_seq_reentered_i_1_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_i_2_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_reg_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ;
  wire \guf.underflow_i_reg ;
  wire p_0_in;
  wire \power_on_rst_reg_n_0_[0] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire rst_d1;
  wire rst_i__0;
  wire underflow_i0;
  wire wr_clk;
  wire wr_en;
  wire wr_rst_busy;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'h00010116)) 
    \/i_ 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\/i__n_0 ));
  LUT6 #(
    .INIT(64'h03030200FFFFFFFF)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I5(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFEFEFEEE)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I3(rst),
        .I4(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFF0EEE0FFFFEEE0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I5(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h000C0008)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I1(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000004400000044)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I3(rst),
        .I4(p_0_in),
        .I5(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1 
       (.I0(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0002)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1 
       (.I0(\gen_rst_ic.curr_rrst_state [0]),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .O(\gen_rst_ic.next_rrst_state [1]));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [0]),
        .Q(\gen_rst_ic.curr_rrst_state [0]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [1]),
        .Q(\gen_rst_ic.curr_rrst_state [1]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h06)) 
    \__0/i_ 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.next_rrst_state [0]));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT5 #(
    .INIT(32'hAAAAAEAE)) 
    \count_value_i[1]_i_1__2 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(ram_empty_i),
        .I2(Q[1]),
        .I3(rd_en),
        .I4(Q[0]),
        .O(SR));
  LUT3 #(
    .INIT(8'h3E)) 
    \gen_rst_ic.fifo_rd_rst_ic_i_1 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.fifo_rd_rst_i ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_rd_rst_ic_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_rd_rst_i ),
        .Q(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFEAFFFFFFEA0000)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I2(rst_i__0),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I4(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ),
        .I5(\gen_rst_ic.fifo_wr_rst_ic ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_2 
       (.I0(p_0_in),
        .I1(rst),
        .O(rst_i__0));
  LUT5 #(
    .INIT(32'h00010116)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_3 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_wr_rst_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ),
        .Q(\gen_rst_ic.fifo_wr_rst_ic ),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst \gen_rst_ic.rrst_wr_inst 
       (.dest_clk(wr_clk),
        .dest_rst(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .src_rst(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \gen_rst_ic.rst_seq_reentered_i_1 
       (.I0(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ),
        .I1(rst),
        .I2(p_0_in),
        .O(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00010000)) 
    \gen_rst_ic.rst_seq_reentered_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I5(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.rst_seq_reentered_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ),
        .Q(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEFFFEF00)) 
    \gen_rst_ic.wr_rst_busy_ic_i_1 
       (.I0(rst),
        .I1(p_0_in),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I3(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ),
        .I4(wrst_busy),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000116)) 
    \gen_rst_ic.wr_rst_busy_ic_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.wr_rst_busy_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ),
        .Q(wrst_busy),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__26 \gen_rst_ic.wrst_rd_inst 
       (.dest_clk(rd_clk),
        .dest_rst(\gen_rst_ic.fifo_wr_rst_rd ),
        .src_rst(\gen_rst_ic.fifo_wr_rst_ic ));
  LUT4 #(
    .INIT(16'h0002)) 
    \gen_sdpram.xpm_memory_base_inst_i_1 
       (.I0(wr_en),
        .I1(\count_value_i_reg[3] ),
        .I2(wrst_busy),
        .I3(rst_d1),
        .O(E));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT3 #(
    .INIT(8'hAB)) 
    \grdc.rd_data_count_i[4]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(Q[0]),
        .I2(Q[1]),
        .O(\gen_rst_ic.fifo_rd_rst_ic_reg_1 ));
  LUT3 #(
    .INIT(8'hE0)) 
    \guf.underflow_i_i_1 
       (.I0(\guf.underflow_i_reg ),
        .I1(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I2(rd_en),
        .O(underflow_i0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(\power_on_rst_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\power_on_rst_reg_n_0_[0] ),
        .Q(p_0_in),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    wr_rst_busy_INST_0
       (.I0(wrst_busy),
        .I1(rst_d1),
        .O(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_rst" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_rst__xdcDup__1
   (\gen_rst_ic.fifo_rd_rst_ic_reg_0 ,
    wrst_busy,
    wr_pntr_plus1_pf_carry,
    wr_rst_busy,
    SR,
    \gen_rst_ic.fifo_rd_rst_ic_reg_1 ,
    underflow_i0,
    rd_clk,
    wr_clk,
    rst,
    wr_en,
    \count_value_i_reg[7] ,
    rst_d1,
    ram_empty_i,
    Q,
    rd_en,
    \guf.underflow_i_reg );
  output \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  output wrst_busy;
  output wr_pntr_plus1_pf_carry;
  output wr_rst_busy;
  output [0:0]SR;
  output [0:0]\gen_rst_ic.fifo_rd_rst_ic_reg_1 ;
  output underflow_i0;
  input rd_clk;
  input wr_clk;
  input rst;
  input wr_en;
  input \count_value_i_reg[7] ;
  input rst_d1;
  input ram_empty_i;
  input [1:0]Q;
  input rd_en;
  input \guf.underflow_i_reg ;

  wire \/i__n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i_reg[7] ;
  (* RTL_KEEP = "yes" *) wire [1:0]\gen_rst_ic.curr_rrst_state ;
  wire \gen_rst_ic.fifo_rd_rst_i ;
  wire \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  wire [0:0]\gen_rst_ic.fifo_rd_rst_ic_reg_1 ;
  wire \gen_rst_ic.fifo_rd_rst_wr_i ;
  wire \gen_rst_ic.fifo_wr_rst_ic ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_rd ;
  wire [1:0]\gen_rst_ic.next_rrst_state ;
  wire \gen_rst_ic.rst_seq_reentered_i_1_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_i_2_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_reg_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ;
  wire \guf.underflow_i_reg ;
  wire p_0_in;
  wire \power_on_rst_reg_n_0_[0] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire rst_d1;
  wire rst_i__0;
  wire underflow_i0;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wr_rst_busy;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'h00010116)) 
    \/i_ 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\/i__n_0 ));
  LUT6 #(
    .INIT(64'h03030200FFFFFFFF)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I5(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFEFEFEEE)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I3(rst),
        .I4(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFF0EEE0FFFFEEE0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I5(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h000C0008)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I1(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000004400000044)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I3(rst),
        .I4(p_0_in),
        .I5(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1 
       (.I0(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0002)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1 
       (.I0(\gen_rst_ic.curr_rrst_state [0]),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .O(\gen_rst_ic.next_rrst_state [1]));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [0]),
        .Q(\gen_rst_ic.curr_rrst_state [0]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [1]),
        .Q(\gen_rst_ic.curr_rrst_state [1]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h06)) 
    \__0/i_ 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.next_rrst_state [0]));
  (* SOFT_HLUTNM = "soft_lutpair209" *) 
  LUT5 #(
    .INIT(32'hAAAAAEAE)) 
    \count_value_i[1]_i_1__2 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(ram_empty_i),
        .I2(Q[1]),
        .I3(rd_en),
        .I4(Q[0]),
        .O(SR));
  LUT3 #(
    .INIT(8'h3E)) 
    \gen_rst_ic.fifo_rd_rst_ic_i_1 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.fifo_rd_rst_i ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_rd_rst_ic_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_rd_rst_i ),
        .Q(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFEAFFFFFFEA0000)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I2(rst_i__0),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I4(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ),
        .I5(\gen_rst_ic.fifo_wr_rst_ic ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair210" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_2 
       (.I0(p_0_in),
        .I1(rst),
        .O(rst_i__0));
  LUT5 #(
    .INIT(32'h00010116)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_3 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_wr_rst_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ),
        .Q(\gen_rst_ic.fifo_wr_rst_ic ),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__15 \gen_rst_ic.rrst_wr_inst 
       (.dest_clk(wr_clk),
        .dest_rst(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .src_rst(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ));
  (* SOFT_HLUTNM = "soft_lutpair210" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \gen_rst_ic.rst_seq_reentered_i_1 
       (.I0(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ),
        .I1(rst),
        .I2(p_0_in),
        .O(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00010000)) 
    \gen_rst_ic.rst_seq_reentered_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I5(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.rst_seq_reentered_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ),
        .Q(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEFFFEF00)) 
    \gen_rst_ic.wr_rst_busy_ic_i_1 
       (.I0(rst),
        .I1(p_0_in),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I3(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ),
        .I4(wrst_busy),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000116)) 
    \gen_rst_ic.wr_rst_busy_ic_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.wr_rst_busy_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ),
        .Q(wrst_busy),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__14 \gen_rst_ic.wrst_rd_inst 
       (.dest_clk(rd_clk),
        .dest_rst(\gen_rst_ic.fifo_wr_rst_rd ),
        .src_rst(\gen_rst_ic.fifo_wr_rst_ic ));
  LUT4 #(
    .INIT(16'h0002)) 
    \gen_sdpram.xpm_memory_base_inst_i_1 
       (.I0(wr_en),
        .I1(\count_value_i_reg[7] ),
        .I2(wrst_busy),
        .I3(rst_d1),
        .O(wr_pntr_plus1_pf_carry));
  (* SOFT_HLUTNM = "soft_lutpair209" *) 
  LUT3 #(
    .INIT(8'hAB)) 
    \grdc.rd_data_count_i[8]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(Q[0]),
        .I2(Q[1]),
        .O(\gen_rst_ic.fifo_rd_rst_ic_reg_1 ));
  LUT3 #(
    .INIT(8'hE0)) 
    \guf.underflow_i_i_1 
       (.I0(\guf.underflow_i_reg ),
        .I1(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I2(rd_en),
        .O(underflow_i0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(\power_on_rst_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\power_on_rst_reg_n_0_[0] ),
        .Q(p_0_in),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    wr_rst_busy_INST_0
       (.I0(wrst_busy),
        .I1(rst_d1),
        .O(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_rst" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_rst__xdcDup__2
   (\gen_rst_ic.fifo_rd_rst_ic_reg_0 ,
    wrst_busy,
    wr_pntr_plus1_pf_carry,
    wr_rst_busy,
    SR,
    \gen_rst_ic.fifo_rd_rst_ic_reg_1 ,
    underflow_i0,
    rd_clk,
    wr_clk,
    rst,
    wr_en,
    \count_value_i_reg[7] ,
    rst_d1,
    ram_empty_i,
    Q,
    rd_en,
    \guf.underflow_i_reg );
  output \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  output wrst_busy;
  output wr_pntr_plus1_pf_carry;
  output wr_rst_busy;
  output [0:0]SR;
  output [0:0]\gen_rst_ic.fifo_rd_rst_ic_reg_1 ;
  output underflow_i0;
  input rd_clk;
  input wr_clk;
  input rst;
  input wr_en;
  input \count_value_i_reg[7] ;
  input rst_d1;
  input ram_empty_i;
  input [1:0]Q;
  input rd_en;
  input \guf.underflow_i_reg ;

  wire \/i__n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i_reg[7] ;
  (* RTL_KEEP = "yes" *) wire [1:0]\gen_rst_ic.curr_rrst_state ;
  wire \gen_rst_ic.fifo_rd_rst_i ;
  wire \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  wire [0:0]\gen_rst_ic.fifo_rd_rst_ic_reg_1 ;
  wire \gen_rst_ic.fifo_rd_rst_wr_i ;
  wire \gen_rst_ic.fifo_wr_rst_ic ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_rd ;
  wire [1:0]\gen_rst_ic.next_rrst_state ;
  wire \gen_rst_ic.rst_seq_reentered_i_1_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_i_2_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_reg_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ;
  wire \guf.underflow_i_reg ;
  wire p_0_in;
  wire \power_on_rst_reg_n_0_[0] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire rst_d1;
  wire rst_i__0;
  wire underflow_i0;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wr_rst_busy;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'h00010116)) 
    \/i_ 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\/i__n_0 ));
  LUT6 #(
    .INIT(64'h03030200FFFFFFFF)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I5(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFEFEFEEE)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I3(rst),
        .I4(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFF0EEE0FFFFEEE0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I5(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h000C0008)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I1(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000004400000044)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I3(rst),
        .I4(p_0_in),
        .I5(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1 
       (.I0(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0002)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1 
       (.I0(\gen_rst_ic.curr_rrst_state [0]),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .O(\gen_rst_ic.next_rrst_state [1]));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [0]),
        .Q(\gen_rst_ic.curr_rrst_state [0]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [1]),
        .Q(\gen_rst_ic.curr_rrst_state [1]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h06)) 
    \__0/i_ 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.next_rrst_state [0]));
  (* SOFT_HLUTNM = "soft_lutpair177" *) 
  LUT5 #(
    .INIT(32'hAAAAAEAE)) 
    \count_value_i[1]_i_1__2 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(ram_empty_i),
        .I2(Q[1]),
        .I3(rd_en),
        .I4(Q[0]),
        .O(SR));
  LUT3 #(
    .INIT(8'h3E)) 
    \gen_rst_ic.fifo_rd_rst_ic_i_1 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.fifo_rd_rst_i ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_rd_rst_ic_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_rd_rst_i ),
        .Q(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFEAFFFFFFEA0000)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I2(rst_i__0),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I4(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ),
        .I5(\gen_rst_ic.fifo_wr_rst_ic ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair178" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_2 
       (.I0(p_0_in),
        .I1(rst),
        .O(rst_i__0));
  LUT5 #(
    .INIT(32'h00010116)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_3 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_wr_rst_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ),
        .Q(\gen_rst_ic.fifo_wr_rst_ic ),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__17 \gen_rst_ic.rrst_wr_inst 
       (.dest_clk(wr_clk),
        .dest_rst(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .src_rst(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ));
  (* SOFT_HLUTNM = "soft_lutpair178" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \gen_rst_ic.rst_seq_reentered_i_1 
       (.I0(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ),
        .I1(rst),
        .I2(p_0_in),
        .O(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00010000)) 
    \gen_rst_ic.rst_seq_reentered_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I5(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.rst_seq_reentered_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ),
        .Q(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEFFFEF00)) 
    \gen_rst_ic.wr_rst_busy_ic_i_1 
       (.I0(rst),
        .I1(p_0_in),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I3(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ),
        .I4(wrst_busy),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000116)) 
    \gen_rst_ic.wr_rst_busy_ic_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.wr_rst_busy_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ),
        .Q(wrst_busy),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__16 \gen_rst_ic.wrst_rd_inst 
       (.dest_clk(rd_clk),
        .dest_rst(\gen_rst_ic.fifo_wr_rst_rd ),
        .src_rst(\gen_rst_ic.fifo_wr_rst_ic ));
  LUT4 #(
    .INIT(16'h0002)) 
    \gen_sdpram.xpm_memory_base_inst_i_1 
       (.I0(wr_en),
        .I1(\count_value_i_reg[7] ),
        .I2(wrst_busy),
        .I3(rst_d1),
        .O(wr_pntr_plus1_pf_carry));
  (* SOFT_HLUTNM = "soft_lutpair177" *) 
  LUT3 #(
    .INIT(8'hAB)) 
    \grdc.rd_data_count_i[8]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(Q[0]),
        .I2(Q[1]),
        .O(\gen_rst_ic.fifo_rd_rst_ic_reg_1 ));
  LUT3 #(
    .INIT(8'hE0)) 
    \guf.underflow_i_i_1 
       (.I0(\guf.underflow_i_reg ),
        .I1(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I2(rd_en),
        .O(underflow_i0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(\power_on_rst_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\power_on_rst_reg_n_0_[0] ),
        .Q(p_0_in),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    wr_rst_busy_INST_0
       (.I0(wrst_busy),
        .I1(rst_d1),
        .O(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_rst" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_rst__xdcDup__3
   (\gen_rst_ic.fifo_rd_rst_ic_reg_0 ,
    wrst_busy,
    wr_pntr_plus1_pf_carry,
    wr_rst_busy,
    SR,
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ,
    underflow_i0,
    rd_clk,
    wr_clk,
    rst,
    wr_en,
    \count_value_i_reg[8] ,
    rst_d1,
    ram_empty_i,
    rd_en,
    Q,
    \guf.underflow_i_reg );
  output \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  output wrst_busy;
  output wr_pntr_plus1_pf_carry;
  output wr_rst_busy;
  output [0:0]SR;
  output [0:0]\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ;
  output underflow_i0;
  input rd_clk;
  input wr_clk;
  input rst;
  input wr_en;
  input \count_value_i_reg[8] ;
  input rst_d1;
  input ram_empty_i;
  input rd_en;
  input [1:0]Q;
  input \guf.underflow_i_reg ;

  wire \/i__n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ;
  wire [0:0]\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i_reg[8] ;
  (* RTL_KEEP = "yes" *) wire [1:0]\gen_rst_ic.curr_rrst_state ;
  wire \gen_rst_ic.fifo_rd_rst_i ;
  wire \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  wire \gen_rst_ic.fifo_rd_rst_wr_i ;
  wire \gen_rst_ic.fifo_wr_rst_ic ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_rd ;
  wire [1:0]\gen_rst_ic.next_rrst_state ;
  wire \gen_rst_ic.rst_seq_reentered_i_1_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_i_2_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_reg_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ;
  wire \guf.underflow_i_reg ;
  wire p_0_in;
  wire \power_on_rst_reg_n_0_[0] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire rst_d1;
  wire rst_i__0;
  wire underflow_i0;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wr_rst_busy;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'h00010116)) 
    \/i_ 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\/i__n_0 ));
  LUT6 #(
    .INIT(64'h03030200FFFFFFFF)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I5(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFEFEFEEE)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I3(rst),
        .I4(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFF0EEE0FFFFEEE0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I5(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h000C0008)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I1(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000004400000044)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I3(rst),
        .I4(p_0_in),
        .I5(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1 
       (.I0(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0002)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1 
       (.I0(\gen_rst_ic.curr_rrst_state [0]),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .O(\gen_rst_ic.next_rrst_state [1]));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [0]),
        .Q(\gen_rst_ic.curr_rrst_state [0]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [1]),
        .Q(\gen_rst_ic.curr_rrst_state [1]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h06)) 
    \__0/i_ 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.next_rrst_state [0]));
  (* SOFT_HLUTNM = "soft_lutpair341" *) 
  LUT5 #(
    .INIT(32'hFFFF000A)) 
    \count_value_i[1]_i_1__2 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .O(SR));
  LUT3 #(
    .INIT(8'h3E)) 
    \gen_rst_ic.fifo_rd_rst_ic_i_1 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.fifo_rd_rst_i ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_rd_rst_ic_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_rd_rst_i ),
        .Q(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFEAFFFFFFEA0000)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I2(rst_i__0),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I4(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ),
        .I5(\gen_rst_ic.fifo_wr_rst_ic ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair342" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_2 
       (.I0(p_0_in),
        .I1(rst),
        .O(rst_i__0));
  LUT5 #(
    .INIT(32'h00010116)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_3 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_wr_rst_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ),
        .Q(\gen_rst_ic.fifo_wr_rst_ic ),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__19 \gen_rst_ic.rrst_wr_inst 
       (.dest_clk(wr_clk),
        .dest_rst(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .src_rst(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ));
  (* SOFT_HLUTNM = "soft_lutpair342" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \gen_rst_ic.rst_seq_reentered_i_1 
       (.I0(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ),
        .I1(rst),
        .I2(p_0_in),
        .O(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00010000)) 
    \gen_rst_ic.rst_seq_reentered_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I5(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.rst_seq_reentered_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ),
        .Q(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEFFFEF00)) 
    \gen_rst_ic.wr_rst_busy_ic_i_1 
       (.I0(rst),
        .I1(p_0_in),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I3(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ),
        .I4(wrst_busy),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000116)) 
    \gen_rst_ic.wr_rst_busy_ic_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.wr_rst_busy_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ),
        .Q(wrst_busy),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__18 \gen_rst_ic.wrst_rd_inst 
       (.dest_clk(rd_clk),
        .dest_rst(\gen_rst_ic.fifo_wr_rst_rd ),
        .src_rst(\gen_rst_ic.fifo_wr_rst_ic ));
  LUT4 #(
    .INIT(16'h0002)) 
    \gen_sdpram.xpm_memory_base_inst_i_1 
       (.I0(wr_en),
        .I1(\count_value_i_reg[8] ),
        .I2(wrst_busy),
        .I3(rst_d1),
        .O(wr_pntr_plus1_pf_carry));
  (* SOFT_HLUTNM = "soft_lutpair341" *) 
  LUT3 #(
    .INIT(8'hF1)) 
    \grdc.rd_data_count_i[9]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .O(\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ));
  LUT3 #(
    .INIT(8'hE0)) 
    \guf.underflow_i_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(\guf.underflow_i_reg ),
        .I2(rd_en),
        .O(underflow_i0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(\power_on_rst_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\power_on_rst_reg_n_0_[0] ),
        .Q(p_0_in),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    wr_rst_busy_INST_0
       (.I0(wrst_busy),
        .I1(rst_d1),
        .O(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_rst" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_rst__xdcDup__4
   (\gen_rst_ic.fifo_rd_rst_ic_reg_0 ,
    wrst_busy,
    wr_pntr_plus1_pf_carry,
    wr_rst_busy,
    SR,
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ,
    underflow_i0,
    rd_clk,
    wr_clk,
    rst,
    wr_en,
    \count_value_i_reg[8] ,
    rst_d1,
    ram_empty_i,
    rd_en,
    Q,
    \guf.underflow_i_reg );
  output \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  output wrst_busy;
  output wr_pntr_plus1_pf_carry;
  output wr_rst_busy;
  output [0:0]SR;
  output [0:0]\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ;
  output underflow_i0;
  input rd_clk;
  input wr_clk;
  input rst;
  input wr_en;
  input \count_value_i_reg[8] ;
  input rst_d1;
  input ram_empty_i;
  input rd_en;
  input [1:0]Q;
  input \guf.underflow_i_reg ;

  wire \/i__n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ;
  wire [0:0]\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i_reg[8] ;
  (* RTL_KEEP = "yes" *) wire [1:0]\gen_rst_ic.curr_rrst_state ;
  wire \gen_rst_ic.fifo_rd_rst_i ;
  wire \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  wire \gen_rst_ic.fifo_rd_rst_wr_i ;
  wire \gen_rst_ic.fifo_wr_rst_ic ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_rd ;
  wire [1:0]\gen_rst_ic.next_rrst_state ;
  wire \gen_rst_ic.rst_seq_reentered_i_1_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_i_2_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_reg_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ;
  wire \guf.underflow_i_reg ;
  wire p_0_in;
  wire \power_on_rst_reg_n_0_[0] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire rst_d1;
  wire rst_i__0;
  wire underflow_i0;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wr_rst_busy;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'h00010116)) 
    \/i_ 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\/i__n_0 ));
  LUT6 #(
    .INIT(64'h03030200FFFFFFFF)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I5(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFEFEFEEE)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I3(rst),
        .I4(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFF0EEE0FFFFEEE0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I5(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h000C0008)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I1(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000004400000044)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I3(rst),
        .I4(p_0_in),
        .I5(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1 
       (.I0(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0002)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1 
       (.I0(\gen_rst_ic.curr_rrst_state [0]),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .O(\gen_rst_ic.next_rrst_state [1]));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [0]),
        .Q(\gen_rst_ic.curr_rrst_state [0]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [1]),
        .Q(\gen_rst_ic.curr_rrst_state [1]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h06)) 
    \__0/i_ 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.next_rrst_state [0]));
  (* SOFT_HLUTNM = "soft_lutpair285" *) 
  LUT5 #(
    .INIT(32'hFFFF000A)) 
    \count_value_i[1]_i_1__2 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .O(SR));
  LUT3 #(
    .INIT(8'h3E)) 
    \gen_rst_ic.fifo_rd_rst_ic_i_1 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.fifo_rd_rst_i ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_rd_rst_ic_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_rd_rst_i ),
        .Q(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFEAFFFFFFEA0000)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I2(rst_i__0),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I4(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ),
        .I5(\gen_rst_ic.fifo_wr_rst_ic ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair286" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_2 
       (.I0(p_0_in),
        .I1(rst),
        .O(rst_i__0));
  LUT5 #(
    .INIT(32'h00010116)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_3 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_wr_rst_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ),
        .Q(\gen_rst_ic.fifo_wr_rst_ic ),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__21 \gen_rst_ic.rrst_wr_inst 
       (.dest_clk(wr_clk),
        .dest_rst(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .src_rst(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ));
  (* SOFT_HLUTNM = "soft_lutpair286" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \gen_rst_ic.rst_seq_reentered_i_1 
       (.I0(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ),
        .I1(rst),
        .I2(p_0_in),
        .O(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00010000)) 
    \gen_rst_ic.rst_seq_reentered_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I5(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.rst_seq_reentered_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ),
        .Q(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEFFFEF00)) 
    \gen_rst_ic.wr_rst_busy_ic_i_1 
       (.I0(rst),
        .I1(p_0_in),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I3(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ),
        .I4(wrst_busy),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000116)) 
    \gen_rst_ic.wr_rst_busy_ic_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.wr_rst_busy_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ),
        .Q(wrst_busy),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__20 \gen_rst_ic.wrst_rd_inst 
       (.dest_clk(rd_clk),
        .dest_rst(\gen_rst_ic.fifo_wr_rst_rd ),
        .src_rst(\gen_rst_ic.fifo_wr_rst_ic ));
  LUT4 #(
    .INIT(16'h0002)) 
    \gen_sdpram.xpm_memory_base_inst_i_1 
       (.I0(wr_en),
        .I1(\count_value_i_reg[8] ),
        .I2(wrst_busy),
        .I3(rst_d1),
        .O(wr_pntr_plus1_pf_carry));
  (* SOFT_HLUTNM = "soft_lutpair285" *) 
  LUT3 #(
    .INIT(8'hF1)) 
    \grdc.rd_data_count_i[9]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .O(\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ));
  LUT3 #(
    .INIT(8'hE0)) 
    \guf.underflow_i_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(\guf.underflow_i_reg ),
        .I2(rd_en),
        .O(underflow_i0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(\power_on_rst_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\power_on_rst_reg_n_0_[0] ),
        .Q(p_0_in),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    wr_rst_busy_INST_0
       (.I0(wrst_busy),
        .I1(rst_d1),
        .O(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_rst" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_rst__xdcDup__5
   (\gen_rst_ic.fifo_rd_rst_ic_reg_0 ,
    wrst_busy,
    wr_pntr_plus1_pf_carry,
    wr_rst_busy,
    SR,
    \gen_rst_ic.fifo_rd_rst_ic_reg_1 ,
    underflow_i0,
    rd_clk,
    wr_clk,
    rst,
    wr_en,
    \count_value_i_reg[7] ,
    rst_d1,
    ram_empty_i,
    Q,
    rd_en,
    \guf.underflow_i_reg );
  output \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  output wrst_busy;
  output wr_pntr_plus1_pf_carry;
  output wr_rst_busy;
  output [0:0]SR;
  output [0:0]\gen_rst_ic.fifo_rd_rst_ic_reg_1 ;
  output underflow_i0;
  input rd_clk;
  input wr_clk;
  input rst;
  input wr_en;
  input \count_value_i_reg[7] ;
  input rst_d1;
  input ram_empty_i;
  input [1:0]Q;
  input rd_en;
  input \guf.underflow_i_reg ;

  wire \/i__n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i_reg[7] ;
  (* RTL_KEEP = "yes" *) wire [1:0]\gen_rst_ic.curr_rrst_state ;
  wire \gen_rst_ic.fifo_rd_rst_i ;
  wire \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  wire [0:0]\gen_rst_ic.fifo_rd_rst_ic_reg_1 ;
  wire \gen_rst_ic.fifo_rd_rst_wr_i ;
  wire \gen_rst_ic.fifo_wr_rst_ic ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_rd ;
  wire [1:0]\gen_rst_ic.next_rrst_state ;
  wire \gen_rst_ic.rst_seq_reentered_i_1_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_i_2_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_reg_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ;
  wire \guf.underflow_i_reg ;
  wire p_0_in;
  wire \power_on_rst_reg_n_0_[0] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire rst_d1;
  wire rst_i__0;
  wire underflow_i0;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wr_rst_busy;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'h00010116)) 
    \/i_ 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\/i__n_0 ));
  LUT6 #(
    .INIT(64'h03030200FFFFFFFF)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I5(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFEFEFEEE)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I3(rst),
        .I4(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFF0EEE0FFFFEEE0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I5(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h000C0008)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I1(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000004400000044)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I3(rst),
        .I4(p_0_in),
        .I5(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1 
       (.I0(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0002)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1 
       (.I0(\gen_rst_ic.curr_rrst_state [0]),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .O(\gen_rst_ic.next_rrst_state [1]));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [0]),
        .Q(\gen_rst_ic.curr_rrst_state [0]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [1]),
        .Q(\gen_rst_ic.curr_rrst_state [1]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h06)) 
    \__0/i_ 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.next_rrst_state [0]));
  (* SOFT_HLUTNM = "soft_lutpair240" *) 
  LUT5 #(
    .INIT(32'hAAAAAEAE)) 
    \count_value_i[1]_i_1__2 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(ram_empty_i),
        .I2(Q[1]),
        .I3(rd_en),
        .I4(Q[0]),
        .O(SR));
  LUT3 #(
    .INIT(8'h3E)) 
    \gen_rst_ic.fifo_rd_rst_ic_i_1 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.fifo_rd_rst_i ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_rd_rst_ic_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_rd_rst_i ),
        .Q(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFEAFFFFFFEA0000)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I2(rst_i__0),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I4(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ),
        .I5(\gen_rst_ic.fifo_wr_rst_ic ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair241" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_2 
       (.I0(p_0_in),
        .I1(rst),
        .O(rst_i__0));
  LUT5 #(
    .INIT(32'h00010116)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_3 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_wr_rst_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ),
        .Q(\gen_rst_ic.fifo_wr_rst_ic ),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__23 \gen_rst_ic.rrst_wr_inst 
       (.dest_clk(wr_clk),
        .dest_rst(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .src_rst(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ));
  (* SOFT_HLUTNM = "soft_lutpair241" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \gen_rst_ic.rst_seq_reentered_i_1 
       (.I0(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ),
        .I1(rst),
        .I2(p_0_in),
        .O(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00010000)) 
    \gen_rst_ic.rst_seq_reentered_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I5(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.rst_seq_reentered_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ),
        .Q(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEFFFEF00)) 
    \gen_rst_ic.wr_rst_busy_ic_i_1 
       (.I0(rst),
        .I1(p_0_in),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I3(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ),
        .I4(wrst_busy),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000116)) 
    \gen_rst_ic.wr_rst_busy_ic_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.wr_rst_busy_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ),
        .Q(wrst_busy),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__22 \gen_rst_ic.wrst_rd_inst 
       (.dest_clk(rd_clk),
        .dest_rst(\gen_rst_ic.fifo_wr_rst_rd ),
        .src_rst(\gen_rst_ic.fifo_wr_rst_ic ));
  LUT4 #(
    .INIT(16'h0002)) 
    \gen_sdpram.xpm_memory_base_inst_i_1 
       (.I0(wr_en),
        .I1(\count_value_i_reg[7] ),
        .I2(wrst_busy),
        .I3(rst_d1),
        .O(wr_pntr_plus1_pf_carry));
  (* SOFT_HLUTNM = "soft_lutpair240" *) 
  LUT3 #(
    .INIT(8'hAB)) 
    \grdc.rd_data_count_i[8]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(Q[0]),
        .I2(Q[1]),
        .O(\gen_rst_ic.fifo_rd_rst_ic_reg_1 ));
  LUT3 #(
    .INIT(8'hE0)) 
    \guf.underflow_i_i_1 
       (.I0(\guf.underflow_i_reg ),
        .I1(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I2(rd_en),
        .O(underflow_i0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(\power_on_rst_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\power_on_rst_reg_n_0_[0] ),
        .Q(p_0_in),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    wr_rst_busy_INST_0
       (.I0(wrst_busy),
        .I1(rst_d1),
        .O(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_rst" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_fifo_rst__xdcDup__6
   (\gen_rst_ic.fifo_rd_rst_ic_reg_0 ,
    wrst_busy,
    E,
    wr_rst_busy,
    SR,
    \gen_rst_ic.fifo_rd_rst_ic_reg_1 ,
    underflow_i0,
    rd_clk,
    wr_clk,
    rst,
    wr_en,
    \count_value_i_reg[3] ,
    rst_d1,
    ram_empty_i,
    Q,
    rd_en,
    \guf.underflow_i_reg );
  output \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  output wrst_busy;
  output [0:0]E;
  output wr_rst_busy;
  output [0:0]SR;
  output [0:0]\gen_rst_ic.fifo_rd_rst_ic_reg_1 ;
  output underflow_i0;
  input rd_clk;
  input wr_clk;
  input rst;
  input wr_en;
  input \count_value_i_reg[3] ;
  input rst_d1;
  input ram_empty_i;
  input [1:0]Q;
  input rd_en;
  input \guf.underflow_i_reg ;

  wire \/i__n_0 ;
  wire [0:0]E;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i_reg[3] ;
  (* RTL_KEEP = "yes" *) wire [1:0]\gen_rst_ic.curr_rrst_state ;
  wire \gen_rst_ic.fifo_rd_rst_i ;
  wire \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  wire [0:0]\gen_rst_ic.fifo_rd_rst_ic_reg_1 ;
  wire \gen_rst_ic.fifo_rd_rst_wr_i ;
  wire \gen_rst_ic.fifo_wr_rst_ic ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_rd ;
  wire [1:0]\gen_rst_ic.next_rrst_state ;
  wire \gen_rst_ic.rst_seq_reentered_i_1_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_i_2_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_reg_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ;
  wire \guf.underflow_i_reg ;
  wire p_0_in;
  wire \power_on_rst_reg_n_0_[0] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire rst_d1;
  wire rst_i__0;
  wire underflow_i0;
  wire wr_clk;
  wire wr_en;
  wire wr_rst_busy;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'h00010116)) 
    \/i_ 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\/i__n_0 ));
  LUT6 #(
    .INIT(64'h03030200FFFFFFFF)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I5(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFEFEFEEE)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I3(rst),
        .I4(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFF0EEE0FFFFEEE0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I5(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h000C0008)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I1(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000004400000044)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I3(rst),
        .I4(p_0_in),
        .I5(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1 
       (.I0(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0002)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1 
       (.I0(\gen_rst_ic.curr_rrst_state [0]),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .O(\gen_rst_ic.next_rrst_state [1]));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [0]),
        .Q(\gen_rst_ic.curr_rrst_state [0]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [1]),
        .Q(\gen_rst_ic.curr_rrst_state [1]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h06)) 
    \__0/i_ 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.next_rrst_state [0]));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT5 #(
    .INIT(32'hAAAAAEAE)) 
    \count_value_i[1]_i_1__2 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(ram_empty_i),
        .I2(Q[1]),
        .I3(rd_en),
        .I4(Q[0]),
        .O(SR));
  LUT3 #(
    .INIT(8'h3E)) 
    \gen_rst_ic.fifo_rd_rst_ic_i_1 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.fifo_rd_rst_i ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_rd_rst_ic_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_rd_rst_i ),
        .Q(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFEAFFFFFFEA0000)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I2(rst_i__0),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I4(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ),
        .I5(\gen_rst_ic.fifo_wr_rst_ic ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_2 
       (.I0(p_0_in),
        .I1(rst),
        .O(rst_i__0));
  LUT5 #(
    .INIT(32'h00010116)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_3 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_wr_rst_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ),
        .Q(\gen_rst_ic.fifo_wr_rst_ic ),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__25 \gen_rst_ic.rrst_wr_inst 
       (.dest_clk(wr_clk),
        .dest_rst(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .src_rst(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \gen_rst_ic.rst_seq_reentered_i_1 
       (.I0(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ),
        .I1(rst),
        .I2(p_0_in),
        .O(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00010000)) 
    \gen_rst_ic.rst_seq_reentered_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I5(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.rst_seq_reentered_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ),
        .Q(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEFFFEF00)) 
    \gen_rst_ic.wr_rst_busy_ic_i_1 
       (.I0(rst),
        .I1(p_0_in),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I3(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ),
        .I4(wrst_busy),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000116)) 
    \gen_rst_ic.wr_rst_busy_ic_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.wr_rst_busy_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ),
        .Q(wrst_busy),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_cdc_sync_rst__24 \gen_rst_ic.wrst_rd_inst 
       (.dest_clk(rd_clk),
        .dest_rst(\gen_rst_ic.fifo_wr_rst_rd ),
        .src_rst(\gen_rst_ic.fifo_wr_rst_ic ));
  LUT4 #(
    .INIT(16'h0002)) 
    \gen_sdpram.xpm_memory_base_inst_i_1 
       (.I0(wr_en),
        .I1(\count_value_i_reg[3] ),
        .I2(wrst_busy),
        .I3(rst_d1),
        .O(E));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT3 #(
    .INIT(8'hAB)) 
    \grdc.rd_data_count_i[4]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(Q[0]),
        .I2(Q[1]),
        .O(\gen_rst_ic.fifo_rd_rst_ic_reg_1 ));
  LUT3 #(
    .INIT(8'hE0)) 
    \guf.underflow_i_i_1 
       (.I0(\guf.underflow_i_reg ),
        .I1(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I2(rd_en),
        .O(underflow_i0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(\power_on_rst_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\power_on_rst_reg_n_0_[0] ),
        .Q(p_0_in),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    wr_rst_busy_INST_0
       (.I0(wrst_busy),
        .I1(rst_d1),
        .O(wr_rst_busy));
endmodule

(* ADDR_WIDTH_A = "8" *) (* ADDR_WIDTH_B = "8" *) (* AUTO_SLEEP_TIME = "0" *) 
(* BYTE_WRITE_WIDTH_A = "50" *) (* BYTE_WRITE_WIDTH_B = "50" *) (* CASCADE_HEIGHT = "0" *) 
(* CLOCKING_MODE = "1" *) (* ECC_BIT_RANGE = "[7:0]" *) (* ECC_MODE = "0" *) 
(* ECC_TYPE = "NONE" *) (* IGNORE_INIT_SYNTH = "0" *) (* MAX_NUM_CHAR = "0" *) 
(* MEMORY_INIT_FILE = "none" *) (* MEMORY_INIT_PARAM = "" *) (* MEMORY_OPTIMIZATION = "true" *) 
(* MEMORY_PRIMITIVE = "2" *) (* MEMORY_SIZE = "12800" *) (* MEMORY_TYPE = "1" *) 
(* MESSAGE_CONTROL = "0" *) (* NUM_CHAR_LOC = "0" *) (* P_ECC_MODE = "0" *) 
(* P_ENABLE_BYTE_WRITE_A = "0" *) (* P_ENABLE_BYTE_WRITE_B = "0" *) (* P_MAX_DEPTH_DATA = "256" *) 
(* P_MEMORY_OPT = "yes" *) (* P_MEMORY_PRIMITIVE = "block" *) (* P_MIN_WIDTH_DATA = "50" *) 
(* P_MIN_WIDTH_DATA_A = "50" *) (* P_MIN_WIDTH_DATA_B = "50" *) (* P_MIN_WIDTH_DATA_ECC = "50" *) 
(* P_MIN_WIDTH_DATA_LDW = "4" *) (* P_MIN_WIDTH_DATA_SHFT = "50" *) (* P_NUM_COLS_WRITE_A = "1" *) 
(* P_NUM_COLS_WRITE_B = "1" *) (* P_NUM_ROWS_READ_A = "1" *) (* P_NUM_ROWS_READ_B = "1" *) 
(* P_NUM_ROWS_WRITE_A = "1" *) (* P_NUM_ROWS_WRITE_B = "1" *) (* P_SDP_WRITE_MODE = "no" *) 
(* P_WIDTH_ADDR_LSB_READ_A = "0" *) (* P_WIDTH_ADDR_LSB_READ_B = "0" *) (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
(* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) (* P_WIDTH_ADDR_READ_A = "8" *) (* P_WIDTH_ADDR_READ_B = "8" *) 
(* P_WIDTH_ADDR_WRITE_A = "8" *) (* P_WIDTH_ADDR_WRITE_B = "8" *) (* P_WIDTH_COL_WRITE_A = "50" *) 
(* P_WIDTH_COL_WRITE_B = "50" *) (* RAM_DECOMP = "auto" *) (* READ_DATA_WIDTH_A = "50" *) 
(* READ_DATA_WIDTH_B = "50" *) (* READ_LATENCY_A = "2" *) (* READ_LATENCY_B = "2" *) 
(* READ_RESET_VALUE_A = "0" *) (* READ_RESET_VALUE_B = "0" *) (* RST_MODE_A = "SYNC" *) 
(* RST_MODE_B = "SYNC" *) (* SIM_ASSERT_CHK = "0" *) (* USE_EMBEDDED_CONSTRAINT = "0" *) 
(* USE_MEM_INIT = "0" *) (* USE_MEM_INIT_MMI = "0" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH_A = "50" *) (* WRITE_DATA_WIDTH_B = "50" *) 
(* WRITE_MODE_A = "2" *) (* WRITE_MODE_B = "2" *) (* WRITE_PROTECT = "1" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "soft" *) (* rsta_loop_iter = "52" *) 
(* rstb_loop_iter = "52" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_memory_base
   (sleep,
    clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    injectsbiterra,
    injectdbiterra,
    douta,
    sbiterra,
    dbiterra,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    injectsbiterrb,
    injectdbiterrb,
    doutb,
    sbiterrb,
    dbiterrb);
  input sleep;
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [7:0]addra;
  input [49:0]dina;
  input injectsbiterra;
  input injectdbiterra;
  output [49:0]douta;
  output sbiterra;
  output dbiterra;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [7:0]addrb;
  input [49:0]dinb;
  input injectsbiterrb;
  input injectdbiterrb;
  output [49:0]doutb;
  output sbiterrb;
  output dbiterrb;

  wire \<const0> ;
  wire [7:0]addra;
  wire [7:0]addrb;
  wire clka;
  wire clkb;
  wire [49:0]dina;
  wire [49:0]doutb;
  wire ena;
  wire enb;
  wire regceb;
  wire rstb;
  wire sleep;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTDBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTSBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_DBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_SBITERR_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINA_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINB_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPA_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPB_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTA_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTB_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPA_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPB_UNCONNECTED ;
  wire [31:18]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTBDOUT_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPADOUTP_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPBDOUTP_UNCONNECTED ;
  wire [7:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_RDADDRECC_UNCONNECTED ;

  assign dbiterra = \<const0> ;
  assign dbiterrb = \<const0> ;
  assign douta[49] = \<const0> ;
  assign douta[48] = \<const0> ;
  assign douta[47] = \<const0> ;
  assign douta[46] = \<const0> ;
  assign douta[45] = \<const0> ;
  assign douta[44] = \<const0> ;
  assign douta[43] = \<const0> ;
  assign douta[42] = \<const0> ;
  assign douta[41] = \<const0> ;
  assign douta[40] = \<const0> ;
  assign douta[39] = \<const0> ;
  assign douta[38] = \<const0> ;
  assign douta[37] = \<const0> ;
  assign douta[36] = \<const0> ;
  assign douta[35] = \<const0> ;
  assign douta[34] = \<const0> ;
  assign douta[33] = \<const0> ;
  assign douta[32] = \<const0> ;
  assign douta[31] = \<const0> ;
  assign douta[30] = \<const0> ;
  assign douta[29] = \<const0> ;
  assign douta[28] = \<const0> ;
  assign douta[27] = \<const0> ;
  assign douta[26] = \<const0> ;
  assign douta[25] = \<const0> ;
  assign douta[24] = \<const0> ;
  assign douta[23] = \<const0> ;
  assign douta[22] = \<const0> ;
  assign douta[21] = \<const0> ;
  assign douta[20] = \<const0> ;
  assign douta[19] = \<const0> ;
  assign douta[18] = \<const0> ;
  assign douta[17] = \<const0> ;
  assign douta[16] = \<const0> ;
  assign douta[15] = \<const0> ;
  assign douta[14] = \<const0> ;
  assign douta[13] = \<const0> ;
  assign douta[12] = \<const0> ;
  assign douta[11] = \<const0> ;
  assign douta[10] = \<const0> ;
  assign douta[9] = \<const0> ;
  assign douta[8] = \<const0> ;
  assign douta[7] = \<const0> ;
  assign douta[6] = \<const0> ;
  assign douta[5] = \<const0> ;
  assign douta[4] = \<const0> ;
  assign douta[3] = \<const0> ;
  assign douta[2] = \<const0> ;
  assign douta[1] = \<const0> ;
  assign douta[0] = \<const0> ;
  assign sbiterra = \<const0> ;
  assign sbiterrb = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* \MEM.PORTA.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTA.ADDRESS_END  = "511" *) 
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d50" *) 
  (* \MEM.PORTA.DATA_LSB  = "0" *) 
  (* \MEM.PORTA.DATA_MSB  = "49" *) 
  (* \MEM.PORTB.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTB.ADDRESS_END  = "511" *) 
  (* \MEM.PORTB.DATA_BIT_LAYOUT  = "p0_d50" *) 
  (* \MEM.PORTB.DATA_LSB  = "0" *) 
  (* \MEM.PORTB.DATA_MSB  = "49" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RDADDR_COLLISION_HWCONFIG = "DELAYED_WRITE" *) 
  (* RTL_RAM_BITS = "12800" *) 
  (* RTL_RAM_NAME = "inst/master_fpga_gen.axi_chip2chip_master_inst/axi_chip2chip_ar_fifo_inst/axi_chip2chip_async_fifo_inst/xpm_fifo_async_inst/gnuram_async_fifo.xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst/gen_wr_a.gen_word_narrow.mem_reg" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "511" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "49" *) 
  RAMB36E2 #(
    .CASCADE_ORDER_A("NONE"),
    .CASCADE_ORDER_B("NONE"),
    .CLOCK_DOMAINS("INDEPENDENT"),
    .DOA_REG(1),
    .DOB_REG(1),
    .ENADDRENA("FALSE"),
    .ENADDRENB("FALSE"),
    .EN_ECC_PIPE("FALSE"),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .RDADDRCHANGEA("FALSE"),
    .RDADDRCHANGEB("FALSE"),
    .READ_WIDTH_A(72),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SLEEP_ASYNC("TRUE"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("NO_CHANGE"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(72)) 
    \gen_wr_a.gen_word_narrow.mem_reg 
       (.ADDRARDADDR({1'b0,addrb,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({1'b0,addra,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRENA(1'b1),
        .ADDRENB(1'b1),
        .CASDIMUXA(1'b0),
        .CASDIMUXB(1'b0),
        .CASDINA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINA_UNCONNECTED [31:0]),
        .CASDINB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINB_UNCONNECTED [31:0]),
        .CASDINPA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPA_UNCONNECTED [3:0]),
        .CASDINPB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPB_UNCONNECTED [3:0]),
        .CASDOMUXA(1'b0),
        .CASDOMUXB(1'b0),
        .CASDOMUXEN_A(1'b1),
        .CASDOMUXEN_B(1'b1),
        .CASDOUTA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTA_UNCONNECTED [31:0]),
        .CASDOUTB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTB_UNCONNECTED [31:0]),
        .CASDOUTPA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPA_UNCONNECTED [3:0]),
        .CASDOUTPB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPB_UNCONNECTED [3:0]),
        .CASINDBITERR(1'b0),
        .CASINSBITERR(1'b0),
        .CASOREGIMUXA(1'b0),
        .CASOREGIMUXB(1'b0),
        .CASOREGIMUXEN_A(1'b1),
        .CASOREGIMUXEN_B(1'b1),
        .CASOUTDBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTDBITERR_UNCONNECTED ),
        .CASOUTSBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTSBITERR_UNCONNECTED ),
        .CLKARDCLK(clkb),
        .CLKBWRCLK(clka),
        .DBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DBITERR_UNCONNECTED ),
        .DINADIN(dina[31:0]),
        .DINBDIN({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,dina[49:32]}),
        .DINPADINP({1'b1,1'b1,1'b1,1'b1}),
        .DINPBDINP({1'b1,1'b1,1'b1,1'b1}),
        .DOUTADOUT(doutb[31:0]),
        .DOUTBDOUT({\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTBDOUT_UNCONNECTED [31:18],doutb[49:32]}),
        .DOUTPADOUTP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPADOUTP_UNCONNECTED [3:0]),
        .DOUTPBDOUTP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPBDOUTP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_gen_wr_a.gen_word_narrow.mem_reg_ECCPARITY_UNCONNECTED [7:0]),
        .ECCPIPECE(1'b1),
        .ENARDEN(enb),
        .ENBWREN(ena),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_gen_wr_a.gen_word_narrow.mem_reg_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(regceb),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(rstb),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_SBITERR_UNCONNECTED ),
        .SLEEP(1'b0),
        .WEA({1'b0,1'b0,1'b0,1'b0}),
        .WEBWE({ena,ena,ena,ena,ena,ena,ena,ena}));
endmodule

(* ADDR_WIDTH_A = "8" *) (* ADDR_WIDTH_B = "8" *) (* AUTO_SLEEP_TIME = "0" *) 
(* BYTE_WRITE_WIDTH_A = "50" *) (* BYTE_WRITE_WIDTH_B = "50" *) (* CASCADE_HEIGHT = "0" *) 
(* CLOCKING_MODE = "1" *) (* ECC_BIT_RANGE = "[7:0]" *) (* ECC_MODE = "0" *) 
(* ECC_TYPE = "NONE" *) (* IGNORE_INIT_SYNTH = "0" *) (* MAX_NUM_CHAR = "0" *) 
(* MEMORY_INIT_FILE = "none" *) (* MEMORY_INIT_PARAM = "" *) (* MEMORY_OPTIMIZATION = "true" *) 
(* MEMORY_PRIMITIVE = "2" *) (* MEMORY_SIZE = "12800" *) (* MEMORY_TYPE = "1" *) 
(* MESSAGE_CONTROL = "0" *) (* NUM_CHAR_LOC = "0" *) (* ORIG_REF_NAME = "xpm_memory_base" *) 
(* P_ECC_MODE = "0" *) (* P_ENABLE_BYTE_WRITE_A = "0" *) (* P_ENABLE_BYTE_WRITE_B = "0" *) 
(* P_MAX_DEPTH_DATA = "256" *) (* P_MEMORY_OPT = "yes" *) (* P_MEMORY_PRIMITIVE = "block" *) 
(* P_MIN_WIDTH_DATA = "50" *) (* P_MIN_WIDTH_DATA_A = "50" *) (* P_MIN_WIDTH_DATA_B = "50" *) 
(* P_MIN_WIDTH_DATA_ECC = "50" *) (* P_MIN_WIDTH_DATA_LDW = "4" *) (* P_MIN_WIDTH_DATA_SHFT = "50" *) 
(* P_NUM_COLS_WRITE_A = "1" *) (* P_NUM_COLS_WRITE_B = "1" *) (* P_NUM_ROWS_READ_A = "1" *) 
(* P_NUM_ROWS_READ_B = "1" *) (* P_NUM_ROWS_WRITE_A = "1" *) (* P_NUM_ROWS_WRITE_B = "1" *) 
(* P_SDP_WRITE_MODE = "no" *) (* P_WIDTH_ADDR_LSB_READ_A = "0" *) (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
(* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) (* P_WIDTH_ADDR_READ_A = "8" *) 
(* P_WIDTH_ADDR_READ_B = "8" *) (* P_WIDTH_ADDR_WRITE_A = "8" *) (* P_WIDTH_ADDR_WRITE_B = "8" *) 
(* P_WIDTH_COL_WRITE_A = "50" *) (* P_WIDTH_COL_WRITE_B = "50" *) (* RAM_DECOMP = "auto" *) 
(* READ_DATA_WIDTH_A = "50" *) (* READ_DATA_WIDTH_B = "50" *) (* READ_LATENCY_A = "2" *) 
(* READ_LATENCY_B = "2" *) (* READ_RESET_VALUE_A = "0" *) (* READ_RESET_VALUE_B = "0" *) 
(* RST_MODE_A = "SYNC" *) (* RST_MODE_B = "SYNC" *) (* SIM_ASSERT_CHK = "0" *) 
(* USE_EMBEDDED_CONSTRAINT = "0" *) (* USE_MEM_INIT = "0" *) (* USE_MEM_INIT_MMI = "0" *) 
(* VERSION = "0" *) (* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH_A = "50" *) 
(* WRITE_DATA_WIDTH_B = "50" *) (* WRITE_MODE_A = "2" *) (* WRITE_MODE_B = "2" *) 
(* WRITE_PROTECT = "1" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "soft" *) 
(* rsta_loop_iter = "52" *) (* rstb_loop_iter = "52" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_memory_base__2
   (sleep,
    clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    injectsbiterra,
    injectdbiterra,
    douta,
    sbiterra,
    dbiterra,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    injectsbiterrb,
    injectdbiterrb,
    doutb,
    sbiterrb,
    dbiterrb);
  input sleep;
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [7:0]addra;
  input [49:0]dina;
  input injectsbiterra;
  input injectdbiterra;
  output [49:0]douta;
  output sbiterra;
  output dbiterra;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [7:0]addrb;
  input [49:0]dinb;
  input injectsbiterrb;
  input injectdbiterrb;
  output [49:0]doutb;
  output sbiterrb;
  output dbiterrb;

  wire \<const0> ;
  wire [7:0]addra;
  wire [7:0]addrb;
  wire clka;
  wire clkb;
  wire [49:0]dina;
  wire [49:0]doutb;
  wire ena;
  wire enb;
  wire regceb;
  wire rstb;
  wire sleep;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTDBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTSBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_DBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_SBITERR_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINA_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINB_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPA_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPB_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTA_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTB_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPA_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPB_UNCONNECTED ;
  wire [31:18]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTBDOUT_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPADOUTP_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPBDOUTP_UNCONNECTED ;
  wire [7:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_RDADDRECC_UNCONNECTED ;

  assign dbiterra = \<const0> ;
  assign dbiterrb = \<const0> ;
  assign douta[49] = \<const0> ;
  assign douta[48] = \<const0> ;
  assign douta[47] = \<const0> ;
  assign douta[46] = \<const0> ;
  assign douta[45] = \<const0> ;
  assign douta[44] = \<const0> ;
  assign douta[43] = \<const0> ;
  assign douta[42] = \<const0> ;
  assign douta[41] = \<const0> ;
  assign douta[40] = \<const0> ;
  assign douta[39] = \<const0> ;
  assign douta[38] = \<const0> ;
  assign douta[37] = \<const0> ;
  assign douta[36] = \<const0> ;
  assign douta[35] = \<const0> ;
  assign douta[34] = \<const0> ;
  assign douta[33] = \<const0> ;
  assign douta[32] = \<const0> ;
  assign douta[31] = \<const0> ;
  assign douta[30] = \<const0> ;
  assign douta[29] = \<const0> ;
  assign douta[28] = \<const0> ;
  assign douta[27] = \<const0> ;
  assign douta[26] = \<const0> ;
  assign douta[25] = \<const0> ;
  assign douta[24] = \<const0> ;
  assign douta[23] = \<const0> ;
  assign douta[22] = \<const0> ;
  assign douta[21] = \<const0> ;
  assign douta[20] = \<const0> ;
  assign douta[19] = \<const0> ;
  assign douta[18] = \<const0> ;
  assign douta[17] = \<const0> ;
  assign douta[16] = \<const0> ;
  assign douta[15] = \<const0> ;
  assign douta[14] = \<const0> ;
  assign douta[13] = \<const0> ;
  assign douta[12] = \<const0> ;
  assign douta[11] = \<const0> ;
  assign douta[10] = \<const0> ;
  assign douta[9] = \<const0> ;
  assign douta[8] = \<const0> ;
  assign douta[7] = \<const0> ;
  assign douta[6] = \<const0> ;
  assign douta[5] = \<const0> ;
  assign douta[4] = \<const0> ;
  assign douta[3] = \<const0> ;
  assign douta[2] = \<const0> ;
  assign douta[1] = \<const0> ;
  assign douta[0] = \<const0> ;
  assign sbiterra = \<const0> ;
  assign sbiterrb = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* \MEM.PORTA.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTA.ADDRESS_END  = "511" *) 
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d50" *) 
  (* \MEM.PORTA.DATA_LSB  = "0" *) 
  (* \MEM.PORTA.DATA_MSB  = "49" *) 
  (* \MEM.PORTB.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTB.ADDRESS_END  = "511" *) 
  (* \MEM.PORTB.DATA_BIT_LAYOUT  = "p0_d50" *) 
  (* \MEM.PORTB.DATA_LSB  = "0" *) 
  (* \MEM.PORTB.DATA_MSB  = "49" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RDADDR_COLLISION_HWCONFIG = "DELAYED_WRITE" *) 
  (* RTL_RAM_BITS = "12800" *) 
  (* RTL_RAM_NAME = "inst/master_fpga_gen.axi_chip2chip_master_inst/axi_chip2chip_aw_fifo_inst/axi_chip2chip_async_fifo_inst/xpm_fifo_async_inst/gnuram_async_fifo.xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst/gen_wr_a.gen_word_narrow.mem_reg" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "511" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "49" *) 
  RAMB36E2 #(
    .CASCADE_ORDER_A("NONE"),
    .CASCADE_ORDER_B("NONE"),
    .CLOCK_DOMAINS("INDEPENDENT"),
    .DOA_REG(1),
    .DOB_REG(1),
    .ENADDRENA("FALSE"),
    .ENADDRENB("FALSE"),
    .EN_ECC_PIPE("FALSE"),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .RDADDRCHANGEA("FALSE"),
    .RDADDRCHANGEB("FALSE"),
    .READ_WIDTH_A(72),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SLEEP_ASYNC("TRUE"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("NO_CHANGE"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(72)) 
    \gen_wr_a.gen_word_narrow.mem_reg 
       (.ADDRARDADDR({1'b0,addrb,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({1'b0,addra,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRENA(1'b1),
        .ADDRENB(1'b1),
        .CASDIMUXA(1'b0),
        .CASDIMUXB(1'b0),
        .CASDINA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINA_UNCONNECTED [31:0]),
        .CASDINB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINB_UNCONNECTED [31:0]),
        .CASDINPA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPA_UNCONNECTED [3:0]),
        .CASDINPB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPB_UNCONNECTED [3:0]),
        .CASDOMUXA(1'b0),
        .CASDOMUXB(1'b0),
        .CASDOMUXEN_A(1'b1),
        .CASDOMUXEN_B(1'b1),
        .CASDOUTA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTA_UNCONNECTED [31:0]),
        .CASDOUTB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTB_UNCONNECTED [31:0]),
        .CASDOUTPA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPA_UNCONNECTED [3:0]),
        .CASDOUTPB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPB_UNCONNECTED [3:0]),
        .CASINDBITERR(1'b0),
        .CASINSBITERR(1'b0),
        .CASOREGIMUXA(1'b0),
        .CASOREGIMUXB(1'b0),
        .CASOREGIMUXEN_A(1'b1),
        .CASOREGIMUXEN_B(1'b1),
        .CASOUTDBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTDBITERR_UNCONNECTED ),
        .CASOUTSBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTSBITERR_UNCONNECTED ),
        .CLKARDCLK(clkb),
        .CLKBWRCLK(clka),
        .DBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DBITERR_UNCONNECTED ),
        .DINADIN(dina[31:0]),
        .DINBDIN({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,dina[49:32]}),
        .DINPADINP({1'b1,1'b1,1'b1,1'b1}),
        .DINPBDINP({1'b1,1'b1,1'b1,1'b1}),
        .DOUTADOUT(doutb[31:0]),
        .DOUTBDOUT({\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTBDOUT_UNCONNECTED [31:18],doutb[49:32]}),
        .DOUTPADOUTP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPADOUTP_UNCONNECTED [3:0]),
        .DOUTPBDOUTP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPBDOUTP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_gen_wr_a.gen_word_narrow.mem_reg_ECCPARITY_UNCONNECTED [7:0]),
        .ECCPIPECE(1'b1),
        .ENARDEN(enb),
        .ENBWREN(ena),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_gen_wr_a.gen_word_narrow.mem_reg_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(regceb),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(rstb),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_SBITERR_UNCONNECTED ),
        .SLEEP(1'b0),
        .WEA({1'b0,1'b0,1'b0,1'b0}),
        .WEBWE({ena,ena,ena,ena,ena,ena,ena,ena}));
endmodule

(* ADDR_WIDTH_A = "9" *) (* ADDR_WIDTH_B = "9" *) (* AUTO_SLEEP_TIME = "0" *) 
(* BYTE_WRITE_WIDTH_A = "41" *) (* BYTE_WRITE_WIDTH_B = "41" *) (* CASCADE_HEIGHT = "0" *) 
(* CLOCKING_MODE = "1" *) (* ECC_BIT_RANGE = "[7:0]" *) (* ECC_MODE = "0" *) 
(* ECC_TYPE = "NONE" *) (* IGNORE_INIT_SYNTH = "0" *) (* MAX_NUM_CHAR = "0" *) 
(* MEMORY_INIT_FILE = "none" *) (* MEMORY_INIT_PARAM = "" *) (* MEMORY_OPTIMIZATION = "true" *) 
(* MEMORY_PRIMITIVE = "2" *) (* MEMORY_SIZE = "20992" *) (* MEMORY_TYPE = "1" *) 
(* MESSAGE_CONTROL = "0" *) (* NUM_CHAR_LOC = "0" *) (* ORIG_REF_NAME = "xpm_memory_base" *) 
(* P_ECC_MODE = "0" *) (* P_ENABLE_BYTE_WRITE_A = "0" *) (* P_ENABLE_BYTE_WRITE_B = "0" *) 
(* P_MAX_DEPTH_DATA = "512" *) (* P_MEMORY_OPT = "yes" *) (* P_MEMORY_PRIMITIVE = "block" *) 
(* P_MIN_WIDTH_DATA = "41" *) (* P_MIN_WIDTH_DATA_A = "41" *) (* P_MIN_WIDTH_DATA_B = "41" *) 
(* P_MIN_WIDTH_DATA_ECC = "41" *) (* P_MIN_WIDTH_DATA_LDW = "4" *) (* P_MIN_WIDTH_DATA_SHFT = "41" *) 
(* P_NUM_COLS_WRITE_A = "1" *) (* P_NUM_COLS_WRITE_B = "1" *) (* P_NUM_ROWS_READ_A = "1" *) 
(* P_NUM_ROWS_READ_B = "1" *) (* P_NUM_ROWS_WRITE_A = "1" *) (* P_NUM_ROWS_WRITE_B = "1" *) 
(* P_SDP_WRITE_MODE = "no" *) (* P_WIDTH_ADDR_LSB_READ_A = "0" *) (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
(* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) (* P_WIDTH_ADDR_READ_A = "9" *) 
(* P_WIDTH_ADDR_READ_B = "9" *) (* P_WIDTH_ADDR_WRITE_A = "9" *) (* P_WIDTH_ADDR_WRITE_B = "9" *) 
(* P_WIDTH_COL_WRITE_A = "41" *) (* P_WIDTH_COL_WRITE_B = "41" *) (* RAM_DECOMP = "auto" *) 
(* READ_DATA_WIDTH_A = "41" *) (* READ_DATA_WIDTH_B = "41" *) (* READ_LATENCY_A = "2" *) 
(* READ_LATENCY_B = "2" *) (* READ_RESET_VALUE_A = "0" *) (* READ_RESET_VALUE_B = "0" *) 
(* RST_MODE_A = "SYNC" *) (* RST_MODE_B = "SYNC" *) (* SIM_ASSERT_CHK = "0" *) 
(* USE_EMBEDDED_CONSTRAINT = "0" *) (* USE_MEM_INIT = "0" *) (* USE_MEM_INIT_MMI = "0" *) 
(* VERSION = "0" *) (* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH_A = "41" *) 
(* WRITE_DATA_WIDTH_B = "41" *) (* WRITE_MODE_A = "2" *) (* WRITE_MODE_B = "2" *) 
(* WRITE_PROTECT = "1" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "soft" *) 
(* rsta_loop_iter = "44" *) (* rstb_loop_iter = "44" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_memory_base__parameterized0
   (sleep,
    clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    injectsbiterra,
    injectdbiterra,
    douta,
    sbiterra,
    dbiterra,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    injectsbiterrb,
    injectdbiterrb,
    doutb,
    sbiterrb,
    dbiterrb);
  input sleep;
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [8:0]addra;
  input [40:0]dina;
  input injectsbiterra;
  input injectdbiterra;
  output [40:0]douta;
  output sbiterra;
  output dbiterra;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [8:0]addrb;
  input [40:0]dinb;
  input injectsbiterrb;
  input injectdbiterrb;
  output [40:0]doutb;
  output sbiterrb;
  output dbiterrb;

  wire \<const0> ;
  wire [8:0]addra;
  wire [8:0]addrb;
  wire clka;
  wire clkb;
  wire [40:0]dina;
  wire [40:0]doutb;
  wire ena;
  wire enb;
  wire regceb;
  wire rstb;
  wire sleep;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTDBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTSBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_DBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_SBITERR_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINA_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINB_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPA_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPB_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTA_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTB_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPA_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPB_UNCONNECTED ;
  wire [31:9]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTBDOUT_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPADOUTP_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPBDOUTP_UNCONNECTED ;
  wire [7:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_RDADDRECC_UNCONNECTED ;

  assign dbiterra = \<const0> ;
  assign dbiterrb = \<const0> ;
  assign douta[40] = \<const0> ;
  assign douta[39] = \<const0> ;
  assign douta[38] = \<const0> ;
  assign douta[37] = \<const0> ;
  assign douta[36] = \<const0> ;
  assign douta[35] = \<const0> ;
  assign douta[34] = \<const0> ;
  assign douta[33] = \<const0> ;
  assign douta[32] = \<const0> ;
  assign douta[31] = \<const0> ;
  assign douta[30] = \<const0> ;
  assign douta[29] = \<const0> ;
  assign douta[28] = \<const0> ;
  assign douta[27] = \<const0> ;
  assign douta[26] = \<const0> ;
  assign douta[25] = \<const0> ;
  assign douta[24] = \<const0> ;
  assign douta[23] = \<const0> ;
  assign douta[22] = \<const0> ;
  assign douta[21] = \<const0> ;
  assign douta[20] = \<const0> ;
  assign douta[19] = \<const0> ;
  assign douta[18] = \<const0> ;
  assign douta[17] = \<const0> ;
  assign douta[16] = \<const0> ;
  assign douta[15] = \<const0> ;
  assign douta[14] = \<const0> ;
  assign douta[13] = \<const0> ;
  assign douta[12] = \<const0> ;
  assign douta[11] = \<const0> ;
  assign douta[10] = \<const0> ;
  assign douta[9] = \<const0> ;
  assign douta[8] = \<const0> ;
  assign douta[7] = \<const0> ;
  assign douta[6] = \<const0> ;
  assign douta[5] = \<const0> ;
  assign douta[4] = \<const0> ;
  assign douta[3] = \<const0> ;
  assign douta[2] = \<const0> ;
  assign douta[1] = \<const0> ;
  assign douta[0] = \<const0> ;
  assign sbiterra = \<const0> ;
  assign sbiterrb = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* \MEM.PORTA.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTA.ADDRESS_END  = "511" *) 
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d41" *) 
  (* \MEM.PORTA.DATA_LSB  = "0" *) 
  (* \MEM.PORTA.DATA_MSB  = "40" *) 
  (* \MEM.PORTB.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTB.ADDRESS_END  = "511" *) 
  (* \MEM.PORTB.DATA_BIT_LAYOUT  = "p0_d41" *) 
  (* \MEM.PORTB.DATA_LSB  = "0" *) 
  (* \MEM.PORTB.DATA_MSB  = "40" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RDADDR_COLLISION_HWCONFIG = "DELAYED_WRITE" *) 
  (* RTL_RAM_BITS = "20992" *) 
  (* RTL_RAM_NAME = "inst/master_fpga_gen.axi_chip2chip_master_inst/axi_chip2chip_r_fifo_inst/axi_chip2chip_async_fifo_inst/xpm_fifo_async_inst/gnuram_async_fifo.xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst/gen_wr_a.gen_word_narrow.mem_reg" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "511" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "40" *) 
  RAMB36E2 #(
    .CASCADE_ORDER_A("NONE"),
    .CASCADE_ORDER_B("NONE"),
    .CLOCK_DOMAINS("INDEPENDENT"),
    .DOA_REG(1),
    .DOB_REG(1),
    .ENADDRENA("FALSE"),
    .ENADDRENB("FALSE"),
    .EN_ECC_PIPE("FALSE"),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .RDADDRCHANGEA("FALSE"),
    .RDADDRCHANGEB("FALSE"),
    .READ_WIDTH_A(72),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SLEEP_ASYNC("TRUE"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("NO_CHANGE"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(72)) 
    \gen_wr_a.gen_word_narrow.mem_reg 
       (.ADDRARDADDR({addrb,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({addra,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRENA(1'b1),
        .ADDRENB(1'b1),
        .CASDIMUXA(1'b0),
        .CASDIMUXB(1'b0),
        .CASDINA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINA_UNCONNECTED [31:0]),
        .CASDINB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINB_UNCONNECTED [31:0]),
        .CASDINPA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPA_UNCONNECTED [3:0]),
        .CASDINPB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPB_UNCONNECTED [3:0]),
        .CASDOMUXA(1'b0),
        .CASDOMUXB(1'b0),
        .CASDOMUXEN_A(1'b1),
        .CASDOMUXEN_B(1'b1),
        .CASDOUTA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTA_UNCONNECTED [31:0]),
        .CASDOUTB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTB_UNCONNECTED [31:0]),
        .CASDOUTPA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPA_UNCONNECTED [3:0]),
        .CASDOUTPB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPB_UNCONNECTED [3:0]),
        .CASINDBITERR(1'b0),
        .CASINSBITERR(1'b0),
        .CASOREGIMUXA(1'b0),
        .CASOREGIMUXB(1'b0),
        .CASOREGIMUXEN_A(1'b1),
        .CASOREGIMUXEN_B(1'b1),
        .CASOUTDBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTDBITERR_UNCONNECTED ),
        .CASOUTSBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTSBITERR_UNCONNECTED ),
        .CLKARDCLK(clkb),
        .CLKBWRCLK(clka),
        .DBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DBITERR_UNCONNECTED ),
        .DINADIN(dina[31:0]),
        .DINBDIN({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,dina[40:32]}),
        .DINPADINP({1'b1,1'b1,1'b1,1'b1}),
        .DINPBDINP({1'b1,1'b1,1'b1,1'b1}),
        .DOUTADOUT(doutb[31:0]),
        .DOUTBDOUT({\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTBDOUT_UNCONNECTED [31:9],doutb[40:32]}),
        .DOUTPADOUTP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPADOUTP_UNCONNECTED [3:0]),
        .DOUTPBDOUTP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPBDOUTP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_gen_wr_a.gen_word_narrow.mem_reg_ECCPARITY_UNCONNECTED [7:0]),
        .ECCPIPECE(1'b1),
        .ENARDEN(enb),
        .ENBWREN(ena),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_gen_wr_a.gen_word_narrow.mem_reg_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(regceb),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(rstb),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_SBITERR_UNCONNECTED ),
        .SLEEP(1'b0),
        .WEA({1'b0,1'b0,1'b0,1'b0}),
        .WEBWE({ena,ena,ena,ena,ena,ena,ena,ena}));
endmodule

(* ADDR_WIDTH_A = "9" *) (* ADDR_WIDTH_B = "9" *) (* AUTO_SLEEP_TIME = "0" *) 
(* BYTE_WRITE_WIDTH_A = "41" *) (* BYTE_WRITE_WIDTH_B = "41" *) (* CASCADE_HEIGHT = "0" *) 
(* CLOCKING_MODE = "1" *) (* ECC_BIT_RANGE = "[7:0]" *) (* ECC_MODE = "0" *) 
(* ECC_TYPE = "NONE" *) (* IGNORE_INIT_SYNTH = "0" *) (* MAX_NUM_CHAR = "0" *) 
(* MEMORY_INIT_FILE = "none" *) (* MEMORY_INIT_PARAM = "" *) (* MEMORY_OPTIMIZATION = "true" *) 
(* MEMORY_PRIMITIVE = "2" *) (* MEMORY_SIZE = "20992" *) (* MEMORY_TYPE = "1" *) 
(* MESSAGE_CONTROL = "0" *) (* NUM_CHAR_LOC = "0" *) (* ORIG_REF_NAME = "xpm_memory_base" *) 
(* P_ECC_MODE = "0" *) (* P_ENABLE_BYTE_WRITE_A = "0" *) (* P_ENABLE_BYTE_WRITE_B = "0" *) 
(* P_MAX_DEPTH_DATA = "512" *) (* P_MEMORY_OPT = "yes" *) (* P_MEMORY_PRIMITIVE = "block" *) 
(* P_MIN_WIDTH_DATA = "41" *) (* P_MIN_WIDTH_DATA_A = "41" *) (* P_MIN_WIDTH_DATA_B = "41" *) 
(* P_MIN_WIDTH_DATA_ECC = "41" *) (* P_MIN_WIDTH_DATA_LDW = "4" *) (* P_MIN_WIDTH_DATA_SHFT = "41" *) 
(* P_NUM_COLS_WRITE_A = "1" *) (* P_NUM_COLS_WRITE_B = "1" *) (* P_NUM_ROWS_READ_A = "1" *) 
(* P_NUM_ROWS_READ_B = "1" *) (* P_NUM_ROWS_WRITE_A = "1" *) (* P_NUM_ROWS_WRITE_B = "1" *) 
(* P_SDP_WRITE_MODE = "no" *) (* P_WIDTH_ADDR_LSB_READ_A = "0" *) (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
(* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) (* P_WIDTH_ADDR_READ_A = "9" *) 
(* P_WIDTH_ADDR_READ_B = "9" *) (* P_WIDTH_ADDR_WRITE_A = "9" *) (* P_WIDTH_ADDR_WRITE_B = "9" *) 
(* P_WIDTH_COL_WRITE_A = "41" *) (* P_WIDTH_COL_WRITE_B = "41" *) (* RAM_DECOMP = "auto" *) 
(* READ_DATA_WIDTH_A = "41" *) (* READ_DATA_WIDTH_B = "41" *) (* READ_LATENCY_A = "2" *) 
(* READ_LATENCY_B = "2" *) (* READ_RESET_VALUE_A = "0" *) (* READ_RESET_VALUE_B = "0" *) 
(* RST_MODE_A = "SYNC" *) (* RST_MODE_B = "SYNC" *) (* SIM_ASSERT_CHK = "0" *) 
(* USE_EMBEDDED_CONSTRAINT = "0" *) (* USE_MEM_INIT = "0" *) (* USE_MEM_INIT_MMI = "0" *) 
(* VERSION = "0" *) (* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH_A = "41" *) 
(* WRITE_DATA_WIDTH_B = "41" *) (* WRITE_MODE_A = "2" *) (* WRITE_MODE_B = "2" *) 
(* WRITE_PROTECT = "1" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "soft" *) 
(* rsta_loop_iter = "44" *) (* rstb_loop_iter = "44" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_memory_base__parameterized0__2
   (sleep,
    clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    injectsbiterra,
    injectdbiterra,
    douta,
    sbiterra,
    dbiterra,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    injectsbiterrb,
    injectdbiterrb,
    doutb,
    sbiterrb,
    dbiterrb);
  input sleep;
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [8:0]addra;
  input [40:0]dina;
  input injectsbiterra;
  input injectdbiterra;
  output [40:0]douta;
  output sbiterra;
  output dbiterra;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [8:0]addrb;
  input [40:0]dinb;
  input injectsbiterrb;
  input injectdbiterrb;
  output [40:0]doutb;
  output sbiterrb;
  output dbiterrb;

  wire \<const0> ;
  wire [8:0]addra;
  wire [8:0]addrb;
  wire clka;
  wire clkb;
  wire [40:0]dina;
  wire [40:0]doutb;
  wire ena;
  wire enb;
  wire regceb;
  wire rstb;
  wire sleep;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTDBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTSBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_DBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_SBITERR_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINA_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINB_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPA_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPB_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTA_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTB_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPA_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPB_UNCONNECTED ;
  wire [31:9]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTBDOUT_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPADOUTP_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPBDOUTP_UNCONNECTED ;
  wire [7:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_RDADDRECC_UNCONNECTED ;

  assign dbiterra = \<const0> ;
  assign dbiterrb = \<const0> ;
  assign douta[40] = \<const0> ;
  assign douta[39] = \<const0> ;
  assign douta[38] = \<const0> ;
  assign douta[37] = \<const0> ;
  assign douta[36] = \<const0> ;
  assign douta[35] = \<const0> ;
  assign douta[34] = \<const0> ;
  assign douta[33] = \<const0> ;
  assign douta[32] = \<const0> ;
  assign douta[31] = \<const0> ;
  assign douta[30] = \<const0> ;
  assign douta[29] = \<const0> ;
  assign douta[28] = \<const0> ;
  assign douta[27] = \<const0> ;
  assign douta[26] = \<const0> ;
  assign douta[25] = \<const0> ;
  assign douta[24] = \<const0> ;
  assign douta[23] = \<const0> ;
  assign douta[22] = \<const0> ;
  assign douta[21] = \<const0> ;
  assign douta[20] = \<const0> ;
  assign douta[19] = \<const0> ;
  assign douta[18] = \<const0> ;
  assign douta[17] = \<const0> ;
  assign douta[16] = \<const0> ;
  assign douta[15] = \<const0> ;
  assign douta[14] = \<const0> ;
  assign douta[13] = \<const0> ;
  assign douta[12] = \<const0> ;
  assign douta[11] = \<const0> ;
  assign douta[10] = \<const0> ;
  assign douta[9] = \<const0> ;
  assign douta[8] = \<const0> ;
  assign douta[7] = \<const0> ;
  assign douta[6] = \<const0> ;
  assign douta[5] = \<const0> ;
  assign douta[4] = \<const0> ;
  assign douta[3] = \<const0> ;
  assign douta[2] = \<const0> ;
  assign douta[1] = \<const0> ;
  assign douta[0] = \<const0> ;
  assign sbiterra = \<const0> ;
  assign sbiterrb = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* \MEM.PORTA.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTA.ADDRESS_END  = "511" *) 
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d41" *) 
  (* \MEM.PORTA.DATA_LSB  = "0" *) 
  (* \MEM.PORTA.DATA_MSB  = "40" *) 
  (* \MEM.PORTB.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTB.ADDRESS_END  = "511" *) 
  (* \MEM.PORTB.DATA_BIT_LAYOUT  = "p0_d41" *) 
  (* \MEM.PORTB.DATA_LSB  = "0" *) 
  (* \MEM.PORTB.DATA_MSB  = "40" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RDADDR_COLLISION_HWCONFIG = "DELAYED_WRITE" *) 
  (* RTL_RAM_BITS = "20992" *) 
  (* RTL_RAM_NAME = "inst/master_fpga_gen.axi_chip2chip_master_inst/axi_chip2chip_w_fifo_inst/axi_chip2chip_async_fifo_inst/xpm_fifo_async_inst/gnuram_async_fifo.xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst/gen_wr_a.gen_word_narrow.mem_reg" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "511" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "40" *) 
  RAMB36E2 #(
    .CASCADE_ORDER_A("NONE"),
    .CASCADE_ORDER_B("NONE"),
    .CLOCK_DOMAINS("INDEPENDENT"),
    .DOA_REG(1),
    .DOB_REG(1),
    .ENADDRENA("FALSE"),
    .ENADDRENB("FALSE"),
    .EN_ECC_PIPE("FALSE"),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .RDADDRCHANGEA("FALSE"),
    .RDADDRCHANGEB("FALSE"),
    .READ_WIDTH_A(72),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SLEEP_ASYNC("TRUE"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("NO_CHANGE"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(72)) 
    \gen_wr_a.gen_word_narrow.mem_reg 
       (.ADDRARDADDR({addrb,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({addra,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRENA(1'b1),
        .ADDRENB(1'b1),
        .CASDIMUXA(1'b0),
        .CASDIMUXB(1'b0),
        .CASDINA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINA_UNCONNECTED [31:0]),
        .CASDINB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINB_UNCONNECTED [31:0]),
        .CASDINPA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPA_UNCONNECTED [3:0]),
        .CASDINPB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPB_UNCONNECTED [3:0]),
        .CASDOMUXA(1'b0),
        .CASDOMUXB(1'b0),
        .CASDOMUXEN_A(1'b1),
        .CASDOMUXEN_B(1'b1),
        .CASDOUTA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTA_UNCONNECTED [31:0]),
        .CASDOUTB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTB_UNCONNECTED [31:0]),
        .CASDOUTPA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPA_UNCONNECTED [3:0]),
        .CASDOUTPB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPB_UNCONNECTED [3:0]),
        .CASINDBITERR(1'b0),
        .CASINSBITERR(1'b0),
        .CASOREGIMUXA(1'b0),
        .CASOREGIMUXB(1'b0),
        .CASOREGIMUXEN_A(1'b1),
        .CASOREGIMUXEN_B(1'b1),
        .CASOUTDBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTDBITERR_UNCONNECTED ),
        .CASOUTSBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTSBITERR_UNCONNECTED ),
        .CLKARDCLK(clkb),
        .CLKBWRCLK(clka),
        .DBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DBITERR_UNCONNECTED ),
        .DINADIN(dina[31:0]),
        .DINBDIN({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,dina[40:32]}),
        .DINPADINP({1'b1,1'b1,1'b1,1'b1}),
        .DINPBDINP({1'b1,1'b1,1'b1,1'b1}),
        .DOUTADOUT(doutb[31:0]),
        .DOUTBDOUT({\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTBDOUT_UNCONNECTED [31:9],doutb[40:32]}),
        .DOUTPADOUTP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPADOUTP_UNCONNECTED [3:0]),
        .DOUTPBDOUTP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPBDOUTP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_gen_wr_a.gen_word_narrow.mem_reg_ECCPARITY_UNCONNECTED [7:0]),
        .ECCPIPECE(1'b1),
        .ENARDEN(enb),
        .ENBWREN(ena),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_gen_wr_a.gen_word_narrow.mem_reg_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(regceb),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(rstb),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_SBITERR_UNCONNECTED ),
        .SLEEP(1'b0),
        .WEA({1'b0,1'b0,1'b0,1'b0}),
        .WEBWE({ena,ena,ena,ena,ena,ena,ena,ena}));
endmodule

(* ADDR_WIDTH_A = "8" *) (* ADDR_WIDTH_B = "8" *) (* AUTO_SLEEP_TIME = "0" *) 
(* BYTE_WRITE_WIDTH_A = "8" *) (* BYTE_WRITE_WIDTH_B = "8" *) (* CASCADE_HEIGHT = "0" *) 
(* CLOCKING_MODE = "1" *) (* ECC_BIT_RANGE = "[7:0]" *) (* ECC_MODE = "0" *) 
(* ECC_TYPE = "NONE" *) (* IGNORE_INIT_SYNTH = "0" *) (* MAX_NUM_CHAR = "0" *) 
(* MEMORY_INIT_FILE = "none" *) (* MEMORY_INIT_PARAM = "" *) (* MEMORY_OPTIMIZATION = "true" *) 
(* MEMORY_PRIMITIVE = "1" *) (* MEMORY_SIZE = "2048" *) (* MEMORY_TYPE = "1" *) 
(* MESSAGE_CONTROL = "0" *) (* NUM_CHAR_LOC = "0" *) (* ORIG_REF_NAME = "xpm_memory_base" *) 
(* P_ECC_MODE = "0" *) (* P_ENABLE_BYTE_WRITE_A = "0" *) (* P_ENABLE_BYTE_WRITE_B = "0" *) 
(* P_MAX_DEPTH_DATA = "256" *) (* P_MEMORY_OPT = "yes" *) (* P_MEMORY_PRIMITIVE = "distributed" *) 
(* P_MIN_WIDTH_DATA = "8" *) (* P_MIN_WIDTH_DATA_A = "8" *) (* P_MIN_WIDTH_DATA_B = "8" *) 
(* P_MIN_WIDTH_DATA_ECC = "8" *) (* P_MIN_WIDTH_DATA_LDW = "4" *) (* P_MIN_WIDTH_DATA_SHFT = "8" *) 
(* P_NUM_COLS_WRITE_A = "1" *) (* P_NUM_COLS_WRITE_B = "1" *) (* P_NUM_ROWS_READ_A = "1" *) 
(* P_NUM_ROWS_READ_B = "1" *) (* P_NUM_ROWS_WRITE_A = "1" *) (* P_NUM_ROWS_WRITE_B = "1" *) 
(* P_SDP_WRITE_MODE = "yes" *) (* P_WIDTH_ADDR_LSB_READ_A = "0" *) (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
(* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) (* P_WIDTH_ADDR_READ_A = "8" *) 
(* P_WIDTH_ADDR_READ_B = "8" *) (* P_WIDTH_ADDR_WRITE_A = "8" *) (* P_WIDTH_ADDR_WRITE_B = "8" *) 
(* P_WIDTH_COL_WRITE_A = "8" *) (* P_WIDTH_COL_WRITE_B = "8" *) (* RAM_DECOMP = "auto" *) 
(* READ_DATA_WIDTH_A = "8" *) (* READ_DATA_WIDTH_B = "8" *) (* READ_LATENCY_A = "2" *) 
(* READ_LATENCY_B = "2" *) (* READ_RESET_VALUE_A = "0" *) (* READ_RESET_VALUE_B = "0" *) 
(* RST_MODE_A = "SYNC" *) (* RST_MODE_B = "SYNC" *) (* SIM_ASSERT_CHK = "0" *) 
(* USE_EMBEDDED_CONSTRAINT = "1" *) (* USE_MEM_INIT = "0" *) (* USE_MEM_INIT_MMI = "0" *) 
(* VERSION = "0" *) (* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH_A = "8" *) 
(* WRITE_DATA_WIDTH_B = "8" *) (* WRITE_MODE_A = "2" *) (* WRITE_MODE_B = "1" *) 
(* WRITE_PROTECT = "1" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "soft" *) 
(* rsta_loop_iter = "8" *) (* rstb_loop_iter = "8" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_memory_base__parameterized1
   (sleep,
    clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    injectsbiterra,
    injectdbiterra,
    douta,
    sbiterra,
    dbiterra,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    injectsbiterrb,
    injectdbiterrb,
    doutb,
    sbiterrb,
    dbiterrb);
  input sleep;
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [7:0]addra;
  input [7:0]dina;
  input injectsbiterra;
  input injectdbiterra;
  output [7:0]douta;
  output sbiterra;
  output dbiterra;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [7:0]addrb;
  input [7:0]dinb;
  input injectsbiterrb;
  input injectdbiterrb;
  output [7:0]doutb;
  output sbiterrb;
  output dbiterrb;

  wire \<const0> ;
  wire [7:0]addra;
  wire [7:0]addrb;
  wire clka;
  wire clkb;
  wire [7:0]dina;
  wire [7:0]doutb;
  wire ena;
  wire enb;
  wire [7:0]\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_10_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_11_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_12_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_13_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_14_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_15_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_16_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_17_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_18_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_19_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_1_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_20_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_21_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_22_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_23_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_24_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_25_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_26_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_27_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_28_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_29_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_2_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_30_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_31_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_32_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_33_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_34_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_3_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_4_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_7_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_8_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_9_reg_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_i_1_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_1 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_2 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_3 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_4 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_5 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_6 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0_63_7_7_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_i_1_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_1 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_2 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_3 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_4 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_5 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_6 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_128_191_7_7_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_i_1_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_1 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_2 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_3 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_4 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_5 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_6 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_192_255_7_7_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_i_1_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_1 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_2 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_3 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_4 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_5 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_6 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_64_127_7_7_n_0 ;
  wire regceb;
  wire rstb;
  wire select_piped_1_reg_pipe_5_reg_n_0;
  wire select_piped_3_reg_pipe_6_reg_n_0;
  wire sleep;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_DOH_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_0_63_7_7_SPO_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_DOH_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_128_191_7_7_SPO_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_DOH_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_192_255_7_7_SPO_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_DOH_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_64_127_7_7_SPO_UNCONNECTED ;

  assign dbiterra = \<const0> ;
  assign dbiterrb = \<const0> ;
  assign douta[7] = \<const0> ;
  assign douta[6] = \<const0> ;
  assign douta[5] = \<const0> ;
  assign douta[4] = \<const0> ;
  assign douta[3] = \<const0> ;
  assign douta[2] = \<const0> ;
  assign douta[1] = \<const0> ;
  assign douta[0] = \<const0> ;
  assign sbiterra = \<const0> ;
  assign sbiterrb = \<const0> ;
  GND GND
       (.G(\<const0> ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe[0][0]_i_1 
       (.I0(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_34_reg_n_0 ),
        .I1(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_33_reg_n_0 ),
        .I2(select_piped_3_reg_pipe_6_reg_n_0),
        .I3(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_32_reg_n_0 ),
        .I4(select_piped_1_reg_pipe_5_reg_n_0),
        .I5(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_31_reg_n_0 ),
        .O(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [0]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe[0][1]_i_1 
       (.I0(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_30_reg_n_0 ),
        .I1(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_29_reg_n_0 ),
        .I2(select_piped_3_reg_pipe_6_reg_n_0),
        .I3(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_28_reg_n_0 ),
        .I4(select_piped_1_reg_pipe_5_reg_n_0),
        .I5(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_27_reg_n_0 ),
        .O(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [1]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe[0][2]_i_1 
       (.I0(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_26_reg_n_0 ),
        .I1(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_25_reg_n_0 ),
        .I2(select_piped_3_reg_pipe_6_reg_n_0),
        .I3(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_24_reg_n_0 ),
        .I4(select_piped_1_reg_pipe_5_reg_n_0),
        .I5(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_23_reg_n_0 ),
        .O(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe[0][3]_i_1 
       (.I0(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_22_reg_n_0 ),
        .I1(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_21_reg_n_0 ),
        .I2(select_piped_3_reg_pipe_6_reg_n_0),
        .I3(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_20_reg_n_0 ),
        .I4(select_piped_1_reg_pipe_5_reg_n_0),
        .I5(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_19_reg_n_0 ),
        .O(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [3]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe[0][4]_i_1 
       (.I0(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_18_reg_n_0 ),
        .I1(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_17_reg_n_0 ),
        .I2(select_piped_3_reg_pipe_6_reg_n_0),
        .I3(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_16_reg_n_0 ),
        .I4(select_piped_1_reg_pipe_5_reg_n_0),
        .I5(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_15_reg_n_0 ),
        .O(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [4]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe[0][5]_i_1 
       (.I0(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_14_reg_n_0 ),
        .I1(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_13_reg_n_0 ),
        .I2(select_piped_3_reg_pipe_6_reg_n_0),
        .I3(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_12_reg_n_0 ),
        .I4(select_piped_1_reg_pipe_5_reg_n_0),
        .I5(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_11_reg_n_0 ),
        .O(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [5]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe[0][6]_i_1 
       (.I0(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_10_reg_n_0 ),
        .I1(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_9_reg_n_0 ),
        .I2(select_piped_3_reg_pipe_6_reg_n_0),
        .I3(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_8_reg_n_0 ),
        .I4(select_piped_1_reg_pipe_5_reg_n_0),
        .I5(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_7_reg_n_0 ),
        .O(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [6]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe[0][7]_i_1 
       (.I0(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_4_reg_n_0 ),
        .I1(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_3_reg_n_0 ),
        .I2(select_piped_3_reg_pipe_6_reg_n_0),
        .I3(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_2_reg_n_0 ),
        .I4(select_piped_1_reg_pipe_5_reg_n_0),
        .I5(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_1_reg_n_0 ),
        .O(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [7]));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][0] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [0]),
        .Q(doutb[0]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][1] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [1]),
        .Q(doutb[1]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][2] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [2]),
        .Q(doutb[2]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][3] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [3]),
        .Q(doutb[3]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][4] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [4]),
        .Q(doutb[4]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][5] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [5]),
        .Q(doutb[5]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][6] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [6]),
        .Q(doutb[6]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][7] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [7]),
        .Q(doutb[7]),
        .R(rstb));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_10_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_6 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_10_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_11_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_5 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_11_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_12_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_5 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_12_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_13_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_5 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_13_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_14_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_5 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_14_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_15_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_4 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_15_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_16_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_4 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_16_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_17_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_4 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_17_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_18_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_4 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_18_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_19_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_3 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_19_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_1_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_0_63_7_7_n_0 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_1_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_20_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_3 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_20_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_21_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_3 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_21_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_22_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_3 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_22_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_23_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_2 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_23_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_24_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_2 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_24_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_25_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_2 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_25_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_26_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_2 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_26_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_27_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_1 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_27_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_28_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_1 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_28_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_29_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_1 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_29_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_2_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_64_127_7_7_n_0 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_2_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_30_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_1 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_30_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_31_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_0 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_31_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_32_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_0 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_32_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_33_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_0 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_33_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_34_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_0 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_34_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_3_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_128_191_7_7_n_0 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_3_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_4_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_192_255_7_7_n_0 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_4_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_7_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_6 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_7_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_8_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_6 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_8_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_9_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_6 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_9_reg_n_0 ),
        .R(1'b0));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "2048" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "63" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "6" *) 
  RAM64M8 #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000),
    .INIT_E(64'h0000000000000000),
    .INIT_F(64'h0000000000000000),
    .INIT_G(64'h0000000000000000),
    .INIT_H(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6 
       (.ADDRA(addrb[5:0]),
        .ADDRB(addrb[5:0]),
        .ADDRC(addrb[5:0]),
        .ADDRD(addrb[5:0]),
        .ADDRE(addrb[5:0]),
        .ADDRF(addrb[5:0]),
        .ADDRG(addrb[5:0]),
        .ADDRH(addra[5:0]),
        .DIA(dina[0]),
        .DIB(dina[1]),
        .DIC(dina[2]),
        .DID(dina[3]),
        .DIE(dina[4]),
        .DIF(dina[5]),
        .DIG(dina[6]),
        .DIH(1'b0),
        .DOA(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_0 ),
        .DOB(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_1 ),
        .DOC(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_2 ),
        .DOD(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_3 ),
        .DOE(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_4 ),
        .DOF(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_5 ),
        .DOG(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_n_6 ),
        .DOH(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_DOH_UNCONNECTED ),
        .WCLK(clka),
        .WE(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h02)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_i_1 
       (.I0(ena),
        .I1(addra[6]),
        .I2(addra[7]),
        .O(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_i_1_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "2048" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem_reg_0_63_7_7" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "63" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "7" *) 
  (* ram_slice_end = "7" *) 
  RAM64X1D #(
    .INIT(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_63_7_7 
       (.A0(addra[0]),
        .A1(addra[1]),
        .A2(addra[2]),
        .A3(addra[3]),
        .A4(addra[4]),
        .A5(addra[5]),
        .D(dina[7]),
        .DPO(\gen_wr_a.gen_word_narrow.mem_reg_0_63_7_7_n_0 ),
        .DPRA0(addrb[0]),
        .DPRA1(addrb[1]),
        .DPRA2(addrb[2]),
        .DPRA3(addrb[3]),
        .DPRA4(addrb[4]),
        .DPRA5(addrb[5]),
        .SPO(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_63_7_7_SPO_UNCONNECTED ),
        .WCLK(clka),
        .WE(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_6_i_1_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "2048" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "128" *) 
  (* ram_addr_end = "191" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "6" *) 
  RAM64M8 #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000),
    .INIT_E(64'h0000000000000000),
    .INIT_F(64'h0000000000000000),
    .INIT_G(64'h0000000000000000),
    .INIT_H(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6 
       (.ADDRA(addrb[5:0]),
        .ADDRB(addrb[5:0]),
        .ADDRC(addrb[5:0]),
        .ADDRD(addrb[5:0]),
        .ADDRE(addrb[5:0]),
        .ADDRF(addrb[5:0]),
        .ADDRG(addrb[5:0]),
        .ADDRH(addra[5:0]),
        .DIA(dina[0]),
        .DIB(dina[1]),
        .DIC(dina[2]),
        .DID(dina[3]),
        .DIE(dina[4]),
        .DIF(dina[5]),
        .DIG(dina[6]),
        .DIH(1'b0),
        .DOA(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_0 ),
        .DOB(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_1 ),
        .DOC(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_2 ),
        .DOD(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_3 ),
        .DOE(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_4 ),
        .DOF(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_5 ),
        .DOG(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_n_6 ),
        .DOH(\NLW_gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_DOH_UNCONNECTED ),
        .WCLK(clka),
        .WE(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_i_1 
       (.I0(addra[6]),
        .I1(addra[7]),
        .I2(ena),
        .O(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_i_1_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "2048" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem_reg_128_191_7_7" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "128" *) 
  (* ram_addr_end = "191" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "7" *) 
  (* ram_slice_end = "7" *) 
  RAM64X1D #(
    .INIT(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_128_191_7_7 
       (.A0(addra[0]),
        .A1(addra[1]),
        .A2(addra[2]),
        .A3(addra[3]),
        .A4(addra[4]),
        .A5(addra[5]),
        .D(dina[7]),
        .DPO(\gen_wr_a.gen_word_narrow.mem_reg_128_191_7_7_n_0 ),
        .DPRA0(addrb[0]),
        .DPRA1(addrb[1]),
        .DPRA2(addrb[2]),
        .DPRA3(addrb[3]),
        .DPRA4(addrb[4]),
        .DPRA5(addrb[5]),
        .SPO(\NLW_gen_wr_a.gen_word_narrow.mem_reg_128_191_7_7_SPO_UNCONNECTED ),
        .WCLK(clka),
        .WE(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_6_i_1_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "2048" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "192" *) 
  (* ram_addr_end = "255" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "6" *) 
  RAM64M8 #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000),
    .INIT_E(64'h0000000000000000),
    .INIT_F(64'h0000000000000000),
    .INIT_G(64'h0000000000000000),
    .INIT_H(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6 
       (.ADDRA(addrb[5:0]),
        .ADDRB(addrb[5:0]),
        .ADDRC(addrb[5:0]),
        .ADDRD(addrb[5:0]),
        .ADDRE(addrb[5:0]),
        .ADDRF(addrb[5:0]),
        .ADDRG(addrb[5:0]),
        .ADDRH(addra[5:0]),
        .DIA(dina[0]),
        .DIB(dina[1]),
        .DIC(dina[2]),
        .DID(dina[3]),
        .DIE(dina[4]),
        .DIF(dina[5]),
        .DIG(dina[6]),
        .DIH(1'b0),
        .DOA(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_0 ),
        .DOB(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_1 ),
        .DOC(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_2 ),
        .DOD(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_3 ),
        .DOE(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_4 ),
        .DOF(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_5 ),
        .DOG(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_n_6 ),
        .DOH(\NLW_gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_DOH_UNCONNECTED ),
        .WCLK(clka),
        .WE(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h80)) 
    \gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_i_1 
       (.I0(ena),
        .I1(addra[6]),
        .I2(addra[7]),
        .O(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_i_1_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "2048" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem_reg_192_255_7_7" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "192" *) 
  (* ram_addr_end = "255" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "7" *) 
  (* ram_slice_end = "7" *) 
  RAM64X1D #(
    .INIT(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_192_255_7_7 
       (.A0(addra[0]),
        .A1(addra[1]),
        .A2(addra[2]),
        .A3(addra[3]),
        .A4(addra[4]),
        .A5(addra[5]),
        .D(dina[7]),
        .DPO(\gen_wr_a.gen_word_narrow.mem_reg_192_255_7_7_n_0 ),
        .DPRA0(addrb[0]),
        .DPRA1(addrb[1]),
        .DPRA2(addrb[2]),
        .DPRA3(addrb[3]),
        .DPRA4(addrb[4]),
        .DPRA5(addrb[5]),
        .SPO(\NLW_gen_wr_a.gen_word_narrow.mem_reg_192_255_7_7_SPO_UNCONNECTED ),
        .WCLK(clka),
        .WE(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_6_i_1_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "2048" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "64" *) 
  (* ram_addr_end = "127" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "6" *) 
  RAM64M8 #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000),
    .INIT_E(64'h0000000000000000),
    .INIT_F(64'h0000000000000000),
    .INIT_G(64'h0000000000000000),
    .INIT_H(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6 
       (.ADDRA(addrb[5:0]),
        .ADDRB(addrb[5:0]),
        .ADDRC(addrb[5:0]),
        .ADDRD(addrb[5:0]),
        .ADDRE(addrb[5:0]),
        .ADDRF(addrb[5:0]),
        .ADDRG(addrb[5:0]),
        .ADDRH(addra[5:0]),
        .DIA(dina[0]),
        .DIB(dina[1]),
        .DIC(dina[2]),
        .DID(dina[3]),
        .DIE(dina[4]),
        .DIF(dina[5]),
        .DIG(dina[6]),
        .DIH(1'b0),
        .DOA(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_0 ),
        .DOB(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_1 ),
        .DOC(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_2 ),
        .DOD(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_3 ),
        .DOE(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_4 ),
        .DOF(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_5 ),
        .DOG(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_n_6 ),
        .DOH(\NLW_gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_DOH_UNCONNECTED ),
        .WCLK(clka),
        .WE(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_i_1 
       (.I0(addra[7]),
        .I1(addra[6]),
        .I2(ena),
        .O(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_i_1_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "2048" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem_reg_64_127_7_7" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "64" *) 
  (* ram_addr_end = "127" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "7" *) 
  (* ram_slice_end = "7" *) 
  RAM64X1D #(
    .INIT(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_64_127_7_7 
       (.A0(addra[0]),
        .A1(addra[1]),
        .A2(addra[2]),
        .A3(addra[3]),
        .A4(addra[4]),
        .A5(addra[5]),
        .D(dina[7]),
        .DPO(\gen_wr_a.gen_word_narrow.mem_reg_64_127_7_7_n_0 ),
        .DPRA0(addrb[0]),
        .DPRA1(addrb[1]),
        .DPRA2(addrb[2]),
        .DPRA3(addrb[3]),
        .DPRA4(addrb[4]),
        .DPRA5(addrb[5]),
        .SPO(\NLW_gen_wr_a.gen_word_narrow.mem_reg_64_127_7_7_SPO_UNCONNECTED ),
        .WCLK(clka),
        .WE(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_6_i_1_n_0 ));
  FDRE select_piped_1_reg_pipe_5_reg
       (.C(clkb),
        .CE(enb),
        .D(addrb[6]),
        .Q(select_piped_1_reg_pipe_5_reg_n_0),
        .R(1'b0));
  FDRE select_piped_3_reg_pipe_6_reg
       (.C(clkb),
        .CE(enb),
        .D(addrb[7]),
        .Q(select_piped_3_reg_pipe_6_reg_n_0),
        .R(1'b0));
endmodule

(* ADDR_WIDTH_A = "4" *) (* ADDR_WIDTH_B = "4" *) (* AUTO_SLEEP_TIME = "0" *) 
(* BYTE_WRITE_WIDTH_A = "20" *) (* BYTE_WRITE_WIDTH_B = "20" *) (* CASCADE_HEIGHT = "0" *) 
(* CLOCKING_MODE = "1" *) (* ECC_BIT_RANGE = "[7:0]" *) (* ECC_MODE = "0" *) 
(* ECC_TYPE = "NONE" *) (* IGNORE_INIT_SYNTH = "0" *) (* MAX_NUM_CHAR = "0" *) 
(* MEMORY_INIT_FILE = "none" *) (* MEMORY_INIT_PARAM = "" *) (* MEMORY_OPTIMIZATION = "true" *) 
(* MEMORY_PRIMITIVE = "1" *) (* MEMORY_SIZE = "320" *) (* MEMORY_TYPE = "1" *) 
(* MESSAGE_CONTROL = "0" *) (* NUM_CHAR_LOC = "0" *) (* ORIG_REF_NAME = "xpm_memory_base" *) 
(* P_ECC_MODE = "0" *) (* P_ENABLE_BYTE_WRITE_A = "0" *) (* P_ENABLE_BYTE_WRITE_B = "0" *) 
(* P_MAX_DEPTH_DATA = "16" *) (* P_MEMORY_OPT = "yes" *) (* P_MEMORY_PRIMITIVE = "distributed" *) 
(* P_MIN_WIDTH_DATA = "20" *) (* P_MIN_WIDTH_DATA_A = "20" *) (* P_MIN_WIDTH_DATA_B = "20" *) 
(* P_MIN_WIDTH_DATA_ECC = "20" *) (* P_MIN_WIDTH_DATA_LDW = "4" *) (* P_MIN_WIDTH_DATA_SHFT = "20" *) 
(* P_NUM_COLS_WRITE_A = "1" *) (* P_NUM_COLS_WRITE_B = "1" *) (* P_NUM_ROWS_READ_A = "1" *) 
(* P_NUM_ROWS_READ_B = "1" *) (* P_NUM_ROWS_WRITE_A = "1" *) (* P_NUM_ROWS_WRITE_B = "1" *) 
(* P_SDP_WRITE_MODE = "yes" *) (* P_WIDTH_ADDR_LSB_READ_A = "0" *) (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
(* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) (* P_WIDTH_ADDR_READ_A = "4" *) 
(* P_WIDTH_ADDR_READ_B = "4" *) (* P_WIDTH_ADDR_WRITE_A = "4" *) (* P_WIDTH_ADDR_WRITE_B = "4" *) 
(* P_WIDTH_COL_WRITE_A = "20" *) (* P_WIDTH_COL_WRITE_B = "20" *) (* RAM_DECOMP = "auto" *) 
(* READ_DATA_WIDTH_A = "20" *) (* READ_DATA_WIDTH_B = "20" *) (* READ_LATENCY_A = "2" *) 
(* READ_LATENCY_B = "2" *) (* READ_RESET_VALUE_A = "0" *) (* READ_RESET_VALUE_B = "0" *) 
(* RST_MODE_A = "SYNC" *) (* RST_MODE_B = "SYNC" *) (* SIM_ASSERT_CHK = "0" *) 
(* USE_EMBEDDED_CONSTRAINT = "1" *) (* USE_MEM_INIT = "0" *) (* USE_MEM_INIT_MMI = "0" *) 
(* VERSION = "0" *) (* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH_A = "20" *) 
(* WRITE_DATA_WIDTH_B = "20" *) (* WRITE_MODE_A = "2" *) (* WRITE_MODE_B = "1" *) 
(* WRITE_PROTECT = "1" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "soft" *) 
(* rsta_loop_iter = "20" *) (* rstb_loop_iter = "20" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_memory_base__parameterized2
   (sleep,
    clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    injectsbiterra,
    injectdbiterra,
    douta,
    sbiterra,
    dbiterra,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    injectsbiterrb,
    injectdbiterrb,
    doutb,
    sbiterrb,
    dbiterrb);
  input sleep;
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [3:0]addra;
  input [19:0]dina;
  input injectsbiterra;
  input injectdbiterra;
  output [19:0]douta;
  output sbiterra;
  output dbiterra;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [3:0]addrb;
  input [19:0]dinb;
  input injectsbiterrb;
  input injectdbiterrb;
  output [19:0]doutb;
  output sbiterrb;
  output dbiterrb;

  wire \<const0> ;
  wire [3:0]addra;
  wire [3:0]addrb;
  wire clka;
  wire clkb;
  wire [19:0]dina;
  wire [19:0]doutb;
  wire ena;
  wire enb;
  wire [19:0]\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg ;
  wire [19:0]\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 ;
  wire regceb;
  wire rstb;
  wire sleep;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_0_13_DOH_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_14_19_DOD_UNCONNECTED ;

  assign dbiterra = \<const0> ;
  assign dbiterrb = \<const0> ;
  assign douta[19] = \<const0> ;
  assign douta[18] = \<const0> ;
  assign douta[17] = \<const0> ;
  assign douta[16] = \<const0> ;
  assign douta[15] = \<const0> ;
  assign douta[14] = \<const0> ;
  assign douta[13] = \<const0> ;
  assign douta[12] = \<const0> ;
  assign douta[11] = \<const0> ;
  assign douta[10] = \<const0> ;
  assign douta[9] = \<const0> ;
  assign douta[8] = \<const0> ;
  assign douta[7] = \<const0> ;
  assign douta[6] = \<const0> ;
  assign douta[5] = \<const0> ;
  assign douta[4] = \<const0> ;
  assign douta[3] = \<const0> ;
  assign douta[2] = \<const0> ;
  assign douta[1] = \<const0> ;
  assign douta[0] = \<const0> ;
  assign sbiterra = \<const0> ;
  assign sbiterrb = \<const0> ;
  GND GND
       (.G(\<const0> ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][0] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [0]),
        .Q(doutb[0]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][10] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [10]),
        .Q(doutb[10]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][11] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [11]),
        .Q(doutb[11]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][12] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [12]),
        .Q(doutb[12]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][13] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [13]),
        .Q(doutb[13]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][14] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [14]),
        .Q(doutb[14]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][15] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [15]),
        .Q(doutb[15]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][16] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [16]),
        .Q(doutb[16]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][17] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [17]),
        .Q(doutb[17]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][18] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [18]),
        .Q(doutb[18]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][19] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [19]),
        .Q(doutb[19]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][1] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [1]),
        .Q(doutb[1]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][2] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [2]),
        .Q(doutb[2]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][3] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [3]),
        .Q(doutb[3]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][4] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [4]),
        .Q(doutb[4]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][5] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [5]),
        .Q(doutb[5]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][6] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [6]),
        .Q(doutb[6]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][7] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [7]),
        .Q(doutb[7]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][8] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [8]),
        .Q(doutb[8]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][9] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [9]),
        .Q(doutb[9]),
        .R(rstb));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[0] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [0]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [0]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[10] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [10]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [10]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[11] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [11]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [11]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[12] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [12]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [12]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[13] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [13]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [13]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[14] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [14]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [14]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[15] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [15]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [15]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[16] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [16]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [16]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[17] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [17]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [17]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[18] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [18]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [18]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[19] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [19]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [19]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[1] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [1]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [1]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[2] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [2]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [2]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[3] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [3]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [3]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[4] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [4]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [4]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[5] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [5]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [5]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[6] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [6]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [6]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[7] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [7]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [7]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[8] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [8]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [8]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[9] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [9]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [9]),
        .R(1'b0));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "320" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem_reg_0_15_0_13" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "13" *) 
  RAM32M16 #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000),
    .INIT_E(64'h0000000000000000),
    .INIT_F(64'h0000000000000000),
    .INIT_G(64'h0000000000000000),
    .INIT_H(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_15_0_13 
       (.ADDRA({1'b0,addrb}),
        .ADDRB({1'b0,addrb}),
        .ADDRC({1'b0,addrb}),
        .ADDRD({1'b0,addrb}),
        .ADDRE({1'b0,addrb}),
        .ADDRF({1'b0,addrb}),
        .ADDRG({1'b0,addrb}),
        .ADDRH({1'b0,addra}),
        .DIA(dina[1:0]),
        .DIB(dina[3:2]),
        .DIC(dina[5:4]),
        .DID(dina[7:6]),
        .DIE(dina[9:8]),
        .DIF(dina[11:10]),
        .DIG(dina[13:12]),
        .DIH({1'b0,1'b0}),
        .DOA(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [1:0]),
        .DOB(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [3:2]),
        .DOC(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [5:4]),
        .DOD(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [7:6]),
        .DOE(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [9:8]),
        .DOF(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [11:10]),
        .DOG(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [13:12]),
        .DOH(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_0_13_DOH_UNCONNECTED [1:0]),
        .WCLK(clka),
        .WE(ena));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "320" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem_reg_0_15_14_19" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "14" *) 
  (* ram_slice_end = "19" *) 
  RAM32M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_15_14_19 
       (.ADDRA({1'b0,addrb}),
        .ADDRB({1'b0,addrb}),
        .ADDRC({1'b0,addrb}),
        .ADDRD({1'b0,addra}),
        .DIA(dina[15:14]),
        .DIB(dina[17:16]),
        .DIC(dina[19:18]),
        .DID({1'b0,1'b0}),
        .DOA(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [15:14]),
        .DOB(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [17:16]),
        .DOC(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [19:18]),
        .DOD(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_14_19_DOD_UNCONNECTED [1:0]),
        .WCLK(clka),
        .WE(ena));
endmodule

(* ADDR_WIDTH_A = "4" *) (* ADDR_WIDTH_B = "4" *) (* AUTO_SLEEP_TIME = "0" *) 
(* BYTE_WRITE_WIDTH_A = "20" *) (* BYTE_WRITE_WIDTH_B = "20" *) (* CASCADE_HEIGHT = "0" *) 
(* CLOCKING_MODE = "1" *) (* ECC_BIT_RANGE = "[7:0]" *) (* ECC_MODE = "0" *) 
(* ECC_TYPE = "NONE" *) (* IGNORE_INIT_SYNTH = "0" *) (* MAX_NUM_CHAR = "0" *) 
(* MEMORY_INIT_FILE = "none" *) (* MEMORY_INIT_PARAM = "" *) (* MEMORY_OPTIMIZATION = "true" *) 
(* MEMORY_PRIMITIVE = "1" *) (* MEMORY_SIZE = "320" *) (* MEMORY_TYPE = "1" *) 
(* MESSAGE_CONTROL = "0" *) (* NUM_CHAR_LOC = "0" *) (* ORIG_REF_NAME = "xpm_memory_base" *) 
(* P_ECC_MODE = "0" *) (* P_ENABLE_BYTE_WRITE_A = "0" *) (* P_ENABLE_BYTE_WRITE_B = "0" *) 
(* P_MAX_DEPTH_DATA = "16" *) (* P_MEMORY_OPT = "yes" *) (* P_MEMORY_PRIMITIVE = "distributed" *) 
(* P_MIN_WIDTH_DATA = "20" *) (* P_MIN_WIDTH_DATA_A = "20" *) (* P_MIN_WIDTH_DATA_B = "20" *) 
(* P_MIN_WIDTH_DATA_ECC = "20" *) (* P_MIN_WIDTH_DATA_LDW = "4" *) (* P_MIN_WIDTH_DATA_SHFT = "20" *) 
(* P_NUM_COLS_WRITE_A = "1" *) (* P_NUM_COLS_WRITE_B = "1" *) (* P_NUM_ROWS_READ_A = "1" *) 
(* P_NUM_ROWS_READ_B = "1" *) (* P_NUM_ROWS_WRITE_A = "1" *) (* P_NUM_ROWS_WRITE_B = "1" *) 
(* P_SDP_WRITE_MODE = "yes" *) (* P_WIDTH_ADDR_LSB_READ_A = "0" *) (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
(* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) (* P_WIDTH_ADDR_READ_A = "4" *) 
(* P_WIDTH_ADDR_READ_B = "4" *) (* P_WIDTH_ADDR_WRITE_A = "4" *) (* P_WIDTH_ADDR_WRITE_B = "4" *) 
(* P_WIDTH_COL_WRITE_A = "20" *) (* P_WIDTH_COL_WRITE_B = "20" *) (* RAM_DECOMP = "auto" *) 
(* READ_DATA_WIDTH_A = "20" *) (* READ_DATA_WIDTH_B = "20" *) (* READ_LATENCY_A = "2" *) 
(* READ_LATENCY_B = "2" *) (* READ_RESET_VALUE_A = "0" *) (* READ_RESET_VALUE_B = "0" *) 
(* RST_MODE_A = "SYNC" *) (* RST_MODE_B = "SYNC" *) (* SIM_ASSERT_CHK = "0" *) 
(* USE_EMBEDDED_CONSTRAINT = "1" *) (* USE_MEM_INIT = "0" *) (* USE_MEM_INIT_MMI = "0" *) 
(* VERSION = "0" *) (* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH_A = "20" *) 
(* WRITE_DATA_WIDTH_B = "20" *) (* WRITE_MODE_A = "2" *) (* WRITE_MODE_B = "1" *) 
(* WRITE_PROTECT = "1" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "soft" *) 
(* rsta_loop_iter = "20" *) (* rstb_loop_iter = "20" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_xpm_memory_base__parameterized2__2
   (sleep,
    clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    injectsbiterra,
    injectdbiterra,
    douta,
    sbiterra,
    dbiterra,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    injectsbiterrb,
    injectdbiterrb,
    doutb,
    sbiterrb,
    dbiterrb);
  input sleep;
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [3:0]addra;
  input [19:0]dina;
  input injectsbiterra;
  input injectdbiterra;
  output [19:0]douta;
  output sbiterra;
  output dbiterra;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [3:0]addrb;
  input [19:0]dinb;
  input injectsbiterrb;
  input injectdbiterrb;
  output [19:0]doutb;
  output sbiterrb;
  output dbiterrb;

  wire \<const0> ;
  wire [3:0]addra;
  wire [3:0]addrb;
  wire clka;
  wire clkb;
  wire [19:0]dina;
  wire [19:0]doutb;
  wire ena;
  wire enb;
  wire [19:0]\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg ;
  wire [19:0]\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 ;
  wire regceb;
  wire rstb;
  wire sleep;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_0_13_DOH_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_14_19_DOD_UNCONNECTED ;

  assign dbiterra = \<const0> ;
  assign dbiterrb = \<const0> ;
  assign douta[19] = \<const0> ;
  assign douta[18] = \<const0> ;
  assign douta[17] = \<const0> ;
  assign douta[16] = \<const0> ;
  assign douta[15] = \<const0> ;
  assign douta[14] = \<const0> ;
  assign douta[13] = \<const0> ;
  assign douta[12] = \<const0> ;
  assign douta[11] = \<const0> ;
  assign douta[10] = \<const0> ;
  assign douta[9] = \<const0> ;
  assign douta[8] = \<const0> ;
  assign douta[7] = \<const0> ;
  assign douta[6] = \<const0> ;
  assign douta[5] = \<const0> ;
  assign douta[4] = \<const0> ;
  assign douta[3] = \<const0> ;
  assign douta[2] = \<const0> ;
  assign douta[1] = \<const0> ;
  assign douta[0] = \<const0> ;
  assign sbiterra = \<const0> ;
  assign sbiterrb = \<const0> ;
  GND GND
       (.G(\<const0> ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][0] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [0]),
        .Q(doutb[0]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][10] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [10]),
        .Q(doutb[10]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][11] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [11]),
        .Q(doutb[11]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][12] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [12]),
        .Q(doutb[12]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][13] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [13]),
        .Q(doutb[13]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][14] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [14]),
        .Q(doutb[14]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][15] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [15]),
        .Q(doutb[15]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][16] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [16]),
        .Q(doutb[16]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][17] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [17]),
        .Q(doutb[17]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][18] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [18]),
        .Q(doutb[18]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][19] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [19]),
        .Q(doutb[19]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][1] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [1]),
        .Q(doutb[1]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][2] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [2]),
        .Q(doutb[2]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][3] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [3]),
        .Q(doutb[3]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][4] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [4]),
        .Q(doutb[4]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][5] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [5]),
        .Q(doutb[5]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][6] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [6]),
        .Q(doutb[6]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][7] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [7]),
        .Q(doutb[7]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][8] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [8]),
        .Q(doutb[8]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][9] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [9]),
        .Q(doutb[9]),
        .R(rstb));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[0] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [0]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [0]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[10] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [10]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [10]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[11] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [11]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [11]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[12] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [12]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [12]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[13] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [13]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [13]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[14] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [14]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [14]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[15] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [15]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [15]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[16] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [16]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [16]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[17] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [17]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [17]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[18] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [18]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [18]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[19] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [19]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [19]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[1] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [1]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [1]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[2] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [2]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [2]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[3] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [3]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [3]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[4] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [4]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [4]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[5] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [5]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [5]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[6] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [6]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [6]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[7] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [7]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [7]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[8] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [8]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [8]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[9] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [9]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [9]),
        .R(1'b0));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "320" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem_reg_0_15_0_13" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "13" *) 
  RAM32M16 #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000),
    .INIT_E(64'h0000000000000000),
    .INIT_F(64'h0000000000000000),
    .INIT_G(64'h0000000000000000),
    .INIT_H(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_15_0_13 
       (.ADDRA({1'b0,addrb}),
        .ADDRB({1'b0,addrb}),
        .ADDRC({1'b0,addrb}),
        .ADDRD({1'b0,addrb}),
        .ADDRE({1'b0,addrb}),
        .ADDRF({1'b0,addrb}),
        .ADDRG({1'b0,addrb}),
        .ADDRH({1'b0,addra}),
        .DIA(dina[1:0]),
        .DIB(dina[3:2]),
        .DIC(dina[5:4]),
        .DID(dina[7:6]),
        .DIE(dina[9:8]),
        .DIF(dina[11:10]),
        .DIG(dina[13:12]),
        .DIH({1'b0,1'b0}),
        .DOA(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [1:0]),
        .DOB(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [3:2]),
        .DOC(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [5:4]),
        .DOD(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [7:6]),
        .DOE(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [9:8]),
        .DOF(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [11:10]),
        .DOG(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [13:12]),
        .DOH(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_0_13_DOH_UNCONNECTED [1:0]),
        .WCLK(clka),
        .WE(ena));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "320" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem_reg_0_15_14_19" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "14" *) 
  (* ram_slice_end = "19" *) 
  RAM32M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_15_14_19 
       (.ADDRA({1'b0,addrb}),
        .ADDRB({1'b0,addrb}),
        .ADDRC({1'b0,addrb}),
        .ADDRD({1'b0,addra}),
        .DIA(dina[15:14]),
        .DIB(dina[17:16]),
        .DIC(dina[19:18]),
        .DID({1'b0,1'b0}),
        .DOA(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [15:14]),
        .DOB(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [17:16]),
        .DOC(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [19:18]),
        .DOD(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_14_19_DOD_UNCONNECTED [1:0]),
        .WCLK(clka),
        .WE(ena));
endmodule

(* CHECK_LICENSE_TYPE = "zynq_bd_C2C1B_0,axi_chip2chip_v5_0_20,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "axi_chip2chip_v5_0_20,Vivado 2023.2" *) 
(* NotValidForBitStream *)
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix
   (s_aclk,
    s_aresetn,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wuser,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_bvalid,
    s_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_rvalid,
    s_axi_rready,
    axi_c2c_m2s_intr_in,
    axi_c2c_s2m_intr_out,
    axi_c2c_phy_clk,
    axi_c2c_aurora_channel_up,
    axi_c2c_aurora_tx_tready,
    axi_c2c_aurora_tx_tdata,
    axi_c2c_aurora_tx_tvalid,
    axi_c2c_aurora_rx_tdata,
    axi_c2c_aurora_rx_tvalid,
    aurora_do_cc,
    aurora_pma_init_in,
    aurora_init_clk,
    aurora_pma_init_out,
    aurora_mmcm_not_locked,
    aurora_reset_pb,
    axi_c2c_config_error_out,
    axi_c2c_link_status_out,
    axi_c2c_multi_bit_error_out,
    axi_c2c_link_error_out,
    s_axi_lite_aclk,
    s_axi_lite_awaddr,
    s_axi_lite_awprot,
    s_axi_lite_awvalid,
    s_axi_lite_awready,
    s_axi_lite_wdata,
    s_axi_lite_wstrb,
    s_axi_lite_wvalid,
    s_axi_lite_wready,
    s_axi_lite_bresp,
    s_axi_lite_bvalid,
    s_axi_lite_bready,
    s_axi_lite_araddr,
    s_axi_lite_arprot,
    s_axi_lite_arvalid,
    s_axi_lite_arready,
    s_axi_lite_rdata,
    s_axi_lite_rresp,
    s_axi_lite_rvalid,
    s_axi_lite_rready);
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 s_aclk CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME s_aclk, ASSOCIATED_BUSIF s_axi, ASSOCIATED_RESET s_aresetn, FREQ_HZ 49999500, FREQ_TOLERANCE_HZ 0, PHASE 0.0, CLK_DOMAIN zynq_bd_ZynqMPSoC_0_pl_clk1, INSERT_VIP 0" *) input s_aclk;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 s_aresetn RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME s_aresetn, POLARITY ACTIVE_LOW, INSERT_VIP 0" *) input s_aresetn;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi AWID" *) input [5:0]s_axi_awid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi AWADDR" *) input [31:0]s_axi_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi AWLEN" *) input [7:0]s_axi_awlen;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi AWSIZE" *) input [2:0]s_axi_awsize;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi AWBURST" *) input [1:0]s_axi_awburst;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi AWVALID" *) input s_axi_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi AWREADY" *) output s_axi_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi WUSER" *) input [3:0]s_axi_wuser;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi WDATA" *) input [31:0]s_axi_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi WSTRB" *) input [3:0]s_axi_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi WLAST" *) input s_axi_wlast;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi WVALID" *) input s_axi_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi WREADY" *) output s_axi_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi BID" *) output [5:0]s_axi_bid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi BRESP" *) output [1:0]s_axi_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi BVALID" *) output s_axi_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi BREADY" *) input s_axi_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi ARID" *) input [5:0]s_axi_arid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi ARADDR" *) input [31:0]s_axi_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi ARLEN" *) input [7:0]s_axi_arlen;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi ARSIZE" *) input [2:0]s_axi_arsize;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi ARBURST" *) input [1:0]s_axi_arburst;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi ARVALID" *) input s_axi_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi ARREADY" *) output s_axi_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi RID" *) output [5:0]s_axi_rid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi RDATA" *) output [31:0]s_axi_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi RRESP" *) output [1:0]s_axi_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi RLAST" *) output s_axi_rlast;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi RVALID" *) output s_axi_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi RREADY" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME s_axi, NUM_READ_OUTSTANDING 16, NUM_WRITE_OUTSTANDING 16, DATA_WIDTH 32, PROTOCOL AXI4, FREQ_HZ 49999500, ID_WIDTH 6, ADDR_WIDTH 32, AWUSER_WIDTH 0, ARUSER_WIDTH 0, WUSER_WIDTH 4, RUSER_WIDTH 0, BUSER_WIDTH 0, READ_WRITE_MODE READ_WRITE, HAS_BURST 1, HAS_LOCK 0, HAS_PROT 0, HAS_CACHE 0, HAS_QOS 0, HAS_REGION 0, HAS_WSTRB 1, HAS_BRESP 1, HAS_RRESP 1, SUPPORTS_NARROW_BURST 1, MAX_BURST_LENGTH 256, PHASE 0.0, CLK_DOMAIN zynq_bd_ZynqMPSoC_0_pl_clk1, NUM_READ_THREADS 1, NUM_WRITE_THREADS 1, RUSER_BITS_PER_BYTE 0, WUSER_BITS_PER_BYTE 0, INSERT_VIP 0" *) input s_axi_rready;
  input [3:0]axi_c2c_m2s_intr_in;
  output [3:0]axi_c2c_s2m_intr_out;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 axi_c2c_phy_clk CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME axi_c2c_phy_clk, ASSOCIATED_BUSIF AXIS_TX:AXIS_RX, ASSOCIATED_RESET aurora_reset_pb, FREQ_HZ 78125000, FREQ_TOLERANCE_HZ 0, PHASE 0, CLK_DOMAIN zynq_bd_C2C1B_PHY_0_user_clk_out, INSERT_VIP 0" *) input axi_c2c_phy_clk;
  input axi_c2c_aurora_channel_up;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 AXIS_TX TREADY" *) input axi_c2c_aurora_tx_tready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 AXIS_TX TDATA" *) output [63:0]axi_c2c_aurora_tx_tdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 AXIS_TX TVALID" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME AXIS_TX, TDATA_NUM_BYTES 8, TDEST_WIDTH 0, TID_WIDTH 0, TUSER_WIDTH 0, HAS_TREADY 1, HAS_TSTRB 0, HAS_TKEEP 0, HAS_TLAST 0, FREQ_HZ 78125000, PHASE 0, CLK_DOMAIN zynq_bd_C2C1B_PHY_0_user_clk_out, LAYERED_METADATA undef, INSERT_VIP 0" *) output axi_c2c_aurora_tx_tvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 AXIS_RX TDATA" *) input [63:0]axi_c2c_aurora_rx_tdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 AXIS_RX TVALID" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME AXIS_RX, TDATA_NUM_BYTES 8, TDEST_WIDTH 0, TID_WIDTH 0, TUSER_WIDTH 0, HAS_TREADY 0, HAS_TSTRB 0, HAS_TKEEP 0, HAS_TLAST 0, FREQ_HZ 78125000, PHASE 0, CLK_DOMAIN zynq_bd_C2C1B_PHY_0_user_clk_out, LAYERED_METADATA undef, INSERT_VIP 0" *) input axi_c2c_aurora_rx_tvalid;
  output aurora_do_cc;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 AURORA_PMA_INIT_IN RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME AURORA_PMA_INIT_IN, POLARITY ACTIVE_HIGH, INSERT_VIP 0" *) input aurora_pma_init_in;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 INIT_CLK CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME INIT_CLK, ASSOCIATED_RESET aurora_pma_init_out, FREQ_HZ 50000000, FREQ_TOLERANCE_HZ 0, PHASE 0.0, CLK_DOMAIN zynq_bd_INIT_CLK, INSERT_VIP 0" *) input aurora_init_clk;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 AURORA_PMA_INIT_OUT RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME AURORA_PMA_INIT_OUT, POLARITY ACTIVE_HIGH, INSERT_VIP 0" *) output aurora_pma_init_out;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 AURORA_MMCM_NOT_LOCKED RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME AURORA_MMCM_NOT_LOCKED, POLARITY ACTIVE_HIGH, INSERT_VIP 0" *) input aurora_mmcm_not_locked;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 AURORA_RST_OUT RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME AURORA_RST_OUT, POLARITY ACTIVE_HIGH, INSERT_VIP 0" *) output aurora_reset_pb;
  output axi_c2c_config_error_out;
  output axi_c2c_link_status_out;
  output axi_c2c_multi_bit_error_out;
  output axi_c2c_link_error_out;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 s_axi_lite_aclk CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME s_axi_lite_aclk, ASSOCIATED_BUSIF s_axi_lite, FREQ_HZ 49999500, FREQ_TOLERANCE_HZ 0, PHASE 0.0, CLK_DOMAIN zynq_bd_ZynqMPSoC_0_pl_clk1, INSERT_VIP 0" *) input s_axi_lite_aclk;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite AWADDR" *) input [31:0]s_axi_lite_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite AWPROT" *) input [1:0]s_axi_lite_awprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite AWVALID" *) input s_axi_lite_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite AWREADY" *) output s_axi_lite_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite WDATA" *) input [31:0]s_axi_lite_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite WSTRB" *) input [3:0]s_axi_lite_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite WVALID" *) input s_axi_lite_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite WREADY" *) output s_axi_lite_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite BRESP" *) output [1:0]s_axi_lite_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite BVALID" *) output s_axi_lite_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite BREADY" *) input s_axi_lite_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite ARADDR" *) input [31:0]s_axi_lite_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite ARPROT" *) input [1:0]s_axi_lite_arprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite ARVALID" *) input s_axi_lite_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite ARREADY" *) output s_axi_lite_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite RDATA" *) output [31:0]s_axi_lite_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite RRESP" *) output [1:0]s_axi_lite_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite RVALID" *) output s_axi_lite_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite RREADY" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME s_axi_lite, DATA_WIDTH 32, PROTOCOL AXI4LITE, FREQ_HZ 49999500, ID_WIDTH 0, ADDR_WIDTH 32, AWUSER_WIDTH 0, ARUSER_WIDTH 0, WUSER_WIDTH 0, RUSER_WIDTH 0, BUSER_WIDTH 0, READ_WRITE_MODE READ_WRITE, HAS_BURST 0, HAS_LOCK 0, HAS_PROT 1, HAS_CACHE 0, HAS_QOS 0, HAS_REGION 0, HAS_WSTRB 1, HAS_BRESP 1, HAS_RRESP 1, SUPPORTS_NARROW_BURST 0, NUM_READ_OUTSTANDING 1, NUM_WRITE_OUTSTANDING 1, MAX_BURST_LENGTH 1, PHASE 0.0, CLK_DOMAIN zynq_bd_ZynqMPSoC_0_pl_clk1, NUM_READ_THREADS 1, NUM_WRITE_THREADS 1, RUSER_BITS_PER_BYTE 0, WUSER_BITS_PER_BYTE 0, INSERT_VIP 0" *) input s_axi_lite_rready;

  wire \<const0> ;
  wire aurora_do_cc;
  wire aurora_init_clk;
  wire aurora_mmcm_not_locked;
  wire aurora_pma_init_in;
  wire aurora_pma_init_out;
  wire aurora_reset_pb;
  wire axi_c2c_aurora_channel_up;
  wire [63:0]axi_c2c_aurora_rx_tdata;
  wire axi_c2c_aurora_rx_tvalid;
  wire [63:0]\^axi_c2c_aurora_tx_tdata ;
  wire axi_c2c_aurora_tx_tready;
  wire axi_c2c_aurora_tx_tvalid;
  wire axi_c2c_config_error_out;
  wire axi_c2c_link_error_out;
  wire axi_c2c_link_status_out;
  wire [3:0]axi_c2c_m2s_intr_in;
  wire axi_c2c_multi_bit_error_out;
  wire axi_c2c_phy_clk;
  wire [3:0]axi_c2c_s2m_intr_out;
  wire s_aclk;
  wire s_aresetn;
  wire [31:0]s_axi_araddr;
  wire [1:0]s_axi_arburst;
  wire [5:0]s_axi_arid;
  wire [7:0]s_axi_arlen;
  wire s_axi_arready;
  wire [2:0]s_axi_arsize;
  wire s_axi_arvalid;
  wire [31:0]s_axi_awaddr;
  wire [1:0]s_axi_awburst;
  wire [5:0]s_axi_awid;
  wire [7:0]s_axi_awlen;
  wire s_axi_awready;
  wire [2:0]s_axi_awsize;
  wire s_axi_awvalid;
  wire [5:0]s_axi_bid;
  wire s_axi_bready;
  wire [1:0]s_axi_bresp;
  wire s_axi_bvalid;
  wire s_axi_lite_aclk;
  wire [31:0]s_axi_lite_araddr;
  wire [1:0]s_axi_lite_arprot;
  wire s_axi_lite_arready;
  wire s_axi_lite_arvalid;
  wire [31:0]s_axi_lite_awaddr;
  wire [1:0]s_axi_lite_awprot;
  wire s_axi_lite_awready;
  wire s_axi_lite_awvalid;
  wire s_axi_lite_bready;
  wire [1:0]s_axi_lite_bresp;
  wire s_axi_lite_bvalid;
  wire [31:0]s_axi_lite_rdata;
  wire s_axi_lite_rready;
  wire [1:0]s_axi_lite_rresp;
  wire s_axi_lite_rvalid;
  wire [31:0]s_axi_lite_wdata;
  wire s_axi_lite_wready;
  wire [3:0]s_axi_lite_wstrb;
  wire s_axi_lite_wvalid;
  wire [31:0]s_axi_rdata;
  wire [5:0]s_axi_rid;
  wire s_axi_rlast;
  wire s_axi_rready;
  wire [1:0]s_axi_rresp;
  wire s_axi_rvalid;
  wire [31:0]s_axi_wdata;
  wire s_axi_wlast;
  wire s_axi_wready;
  wire [3:0]s_axi_wstrb;
  wire [3:0]s_axi_wuser;
  wire s_axi_wvalid;
  wire NLW_inst_axi_c2c_lnk_hndlr_in_progress_UNCONNECTED;
  wire NLW_inst_axi_c2c_selio_tx_clk_out_UNCONNECTED;
  wire NLW_inst_axi_c2c_selio_tx_diff_clk_out_n_UNCONNECTED;
  wire NLW_inst_axi_c2c_selio_tx_diff_clk_out_p_UNCONNECTED;
  wire NLW_inst_m_aclk_out_UNCONNECTED;
  wire NLW_inst_m_axi_arvalid_UNCONNECTED;
  wire NLW_inst_m_axi_awvalid_UNCONNECTED;
  wire NLW_inst_m_axi_bready_UNCONNECTED;
  wire NLW_inst_m_axi_lite_arvalid_UNCONNECTED;
  wire NLW_inst_m_axi_lite_awvalid_UNCONNECTED;
  wire NLW_inst_m_axi_lite_bready_UNCONNECTED;
  wire NLW_inst_m_axi_lite_rready_UNCONNECTED;
  wire NLW_inst_m_axi_lite_wvalid_UNCONNECTED;
  wire NLW_inst_m_axi_rready_UNCONNECTED;
  wire NLW_inst_m_axi_wlast_UNCONNECTED;
  wire NLW_inst_m_axi_wvalid_UNCONNECTED;
  wire [62:62]NLW_inst_axi_c2c_aurora_tx_tdata_UNCONNECTED;
  wire [3:0]NLW_inst_axi_c2c_m2s_intr_out_UNCONNECTED;
  wire [27:0]NLW_inst_axi_c2c_selio_tx_data_out_UNCONNECTED;
  wire [27:0]NLW_inst_axi_c2c_selio_tx_diff_data_out_n_UNCONNECTED;
  wire [27:0]NLW_inst_axi_c2c_selio_tx_diff_data_out_p_UNCONNECTED;
  wire [31:0]NLW_inst_m_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_inst_m_axi_arburst_UNCONNECTED;
  wire [5:0]NLW_inst_m_axi_arid_UNCONNECTED;
  wire [7:0]NLW_inst_m_axi_arlen_UNCONNECTED;
  wire [2:0]NLW_inst_m_axi_arsize_UNCONNECTED;
  wire [31:0]NLW_inst_m_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_inst_m_axi_awburst_UNCONNECTED;
  wire [5:0]NLW_inst_m_axi_awid_UNCONNECTED;
  wire [7:0]NLW_inst_m_axi_awlen_UNCONNECTED;
  wire [2:0]NLW_inst_m_axi_awsize_UNCONNECTED;
  wire [31:0]NLW_inst_m_axi_lite_araddr_UNCONNECTED;
  wire [1:0]NLW_inst_m_axi_lite_arprot_UNCONNECTED;
  wire [31:0]NLW_inst_m_axi_lite_awaddr_UNCONNECTED;
  wire [1:0]NLW_inst_m_axi_lite_awprot_UNCONNECTED;
  wire [31:0]NLW_inst_m_axi_lite_wdata_UNCONNECTED;
  wire [3:0]NLW_inst_m_axi_lite_wstrb_UNCONNECTED;
  wire [31:0]NLW_inst_m_axi_wdata_UNCONNECTED;
  wire [3:0]NLW_inst_m_axi_wstrb_UNCONNECTED;
  wire [3:0]NLW_inst_m_axi_wuser_UNCONNECTED;

  assign axi_c2c_aurora_tx_tdata[63] = \^axi_c2c_aurora_tx_tdata [63];
  assign axi_c2c_aurora_tx_tdata[62] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[61:0] = \^axi_c2c_aurora_tx_tdata [61:0];
  GND GND
       (.G(\<const0> ));
  (* ADDR_MUX_RATIO = "1" *) 
  (* ADDR_MUX_RATIO_ID_WID_0_TO_12 = "1" *) 
  (* AFIFO_DATA_SIZE = "50" *) 
  (* AFIFO_DATA_SIZE_M2 = "0" *) 
  (* AFIFO_DATA_SIZE_M3 = "2" *) 
  (* AFIFO_DATA_SIZE_M4 = "2" *) 
  (* AFIFO_TIE_WIDTH = "1" *) 
  (* AFIFO_WIDTH = "50" *) 
  (* AR_CH_FC = "128" *) 
  (* AR_CH_FIFO_DEPTH = "256" *) 
  (* AR_CH_PTR_WIDTH = "8" *) 
  (* AWB_FC_WIDTH = "2" *) 
  (* AW_CH_FC = "128" *) 
  (* AW_CH_FIFO_DEPTH = "256" *) 
  (* AW_CH_PTR_WIDTH = "8" *) 
  (* AXILITE_WIDTH = "20" *) 
  (* BFIFO_DATA_SIZE = "8" *) 
  (* BFIFO_WIDTH = "8" *) 
  (* BR_CH_FC = "128" *) 
  (* BR_CH_FIFO_DEPTH = "256" *) 
  (* BR_CH_PTR_WIDTH = "8" *) 
  (* C_AURORA_WIDTH = "64" *) 
  (* C_AXI_ADDR_WIDTH = "32" *) 
  (* C_AXI_BRST_WIDTH = "2" *) 
  (* C_AXI_BUS_TYPE = "0" *) 
  (* C_AXI_DATA_WIDTH = "32" *) 
  (* C_AXI_ID_WIDTH = "6" *) 
  (* C_AXI_LEN_WIDTH = "8" *) 
  (* C_AXI_LITE_ADDR_WIDTH = "32" *) 
  (* C_AXI_LITE_DATA_WIDTH = "32" *) 
  (* C_AXI_LITE_PROT_WIDTH = "2" *) 
  (* C_AXI_LITE_RESP_WIDTH = "2" *) 
  (* C_AXI_LITE_STB_WIDTH = "4" *) 
  (* C_AXI_RESP_WIDTH = "2" *) 
  (* C_AXI_SIZE_WIDTH = "3" *) 
  (* C_AXI_SIZE_WIDTH_INTERNAL = "2" *) 
  (* C_AXI_STB_WIDTH = "4" *) 
  (* C_AXI_WUSER_WIDTH = "4" *) 
  (* C_COMMON_CLK = "0" *) 
  (* C_DISABLE_CLK_SHIFT = "0" *) 
  (* C_DISABLE_DESKEW = "0" *) 
  (* C_ECC_ENABLE = "1" *) 
  (* C_EN_AXI_LINK_HNDLR = "0" *) 
  (* C_EN_LEGACY_MODE = "0" *) 
  (* C_FAMILY = "zynquplus" *) 
  (* C_FIFO_DEPTH_LH = "256" *) 
  (* C_INCLUDE_AXILITE = "1" *) 
  (* C_INSTANCE = "axi_c2c" *) 
  (* C_INTERFACE_MODE = "0" *) 
  (* C_INTERFACE_TYPE = "2" *) 
  (* C_INTERRUPT_WIDTH = "4" *) 
  (* C_MASTER_FPGA = "1" *) 
  (* C_NUM_OF_IO = "58" *) 
  (* C_PHY_SELECT = "1" *) 
  (* C_RD_CNTR_WIDTH = "8" *) 
  (* C_SELECTIO_DDR = "0" *) 
  (* C_SELECTIO_PHY_CLK = "100" *) 
  (* C_SELECTIO_WIDTH = "28" *) 
  (* C_SIMULATION = "0" *) 
  (* C_SYNC_STAGE = "3" *) 
  (* C_USE_DIFF_CLK = "0" *) 
  (* C_USE_DIFF_IO = "0" *) 
  (* C_WIDTH_CONVERSION = "1" *) 
  (* C_WR_CNTR_WIDTH = "8" *) 
  (* DATA_MUX_RATIO = "1" *) 
  (* DATA_MUX_RATIO_ID_WID_0_TO_12 = "1" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* EN_ECC = "1" *) 
  (* PHY_CTRL_WIDTH = "3" *) 
  (* PHY_DATA_WIDTH = "64" *) 
  (* RB_FC_WIDTH = "3" *) 
  (* RFIFO_DATA_SIZE = "41" *) 
  (* RFIFO_DATA_SIZE_M2 = "1" *) 
  (* RFIFO_DATA_SIZE_M3 = "2" *) 
  (* RFIFO_DATA_SIZE_M4 = "1" *) 
  (* RFIFO_TIE_WIDTH = "1" *) 
  (* RFIFO_WIDTH = "41" *) 
  (* TDM_ID_WIDTH = "2" *) 
  (* TDM_VAL_BITS = "1" *) 
  (* WFIFO_DATA_SIZE = "41" *) 
  (* WFIFO_DATA_SIZE_M2 = "1" *) 
  (* WFIFO_DATA_SIZE_M3 = "2" *) 
  (* WFIFO_DATA_SIZE_M4 = "1" *) 
  (* WFIFO_TIE_WIDTH = "1" *) 
  (* WFIFO_WIDTH = "41" *) 
  (* is_du_within_envelope = "true" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_axi_chip2chip_v5_0_20 inst
       (.aurora_do_cc(aurora_do_cc),
        .aurora_init_clk(aurora_init_clk),
        .aurora_mmcm_not_locked(aurora_mmcm_not_locked),
        .aurora_pma_init_in(aurora_pma_init_in),
        .aurora_pma_init_out(aurora_pma_init_out),
        .aurora_reset_pb(aurora_reset_pb),
        .axi_c2c_aurora_channel_up(axi_c2c_aurora_channel_up),
        .axi_c2c_aurora_rx_tdata(axi_c2c_aurora_rx_tdata),
        .axi_c2c_aurora_rx_tvalid(axi_c2c_aurora_rx_tvalid),
        .axi_c2c_aurora_tx_tdata(\^axi_c2c_aurora_tx_tdata ),
        .axi_c2c_aurora_tx_tready(axi_c2c_aurora_tx_tready),
        .axi_c2c_aurora_tx_tvalid(axi_c2c_aurora_tx_tvalid),
        .axi_c2c_config_error_out(axi_c2c_config_error_out),
        .axi_c2c_link_error_out(axi_c2c_link_error_out),
        .axi_c2c_link_status_out(axi_c2c_link_status_out),
        .axi_c2c_lnk_hndlr_in_progress(NLW_inst_axi_c2c_lnk_hndlr_in_progress_UNCONNECTED),
        .axi_c2c_m2s_intr_in(axi_c2c_m2s_intr_in),
        .axi_c2c_m2s_intr_out(NLW_inst_axi_c2c_m2s_intr_out_UNCONNECTED[3:0]),
        .axi_c2c_multi_bit_error_out(axi_c2c_multi_bit_error_out),
        .axi_c2c_phy_clk(axi_c2c_phy_clk),
        .axi_c2c_s2m_intr_in({1'b0,1'b0,1'b0,1'b0}),
        .axi_c2c_s2m_intr_out(axi_c2c_s2m_intr_out),
        .axi_c2c_selio_rx_clk_in(1'b0),
        .axi_c2c_selio_rx_data_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_c2c_selio_rx_diff_clk_in_n(1'b0),
        .axi_c2c_selio_rx_diff_clk_in_p(1'b0),
        .axi_c2c_selio_rx_diff_data_in_n({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_c2c_selio_rx_diff_data_in_p({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_c2c_selio_tx_clk_out(NLW_inst_axi_c2c_selio_tx_clk_out_UNCONNECTED),
        .axi_c2c_selio_tx_data_out(NLW_inst_axi_c2c_selio_tx_data_out_UNCONNECTED[27:0]),
        .axi_c2c_selio_tx_diff_clk_out_n(NLW_inst_axi_c2c_selio_tx_diff_clk_out_n_UNCONNECTED),
        .axi_c2c_selio_tx_diff_clk_out_p(NLW_inst_axi_c2c_selio_tx_diff_clk_out_p_UNCONNECTED),
        .axi_c2c_selio_tx_diff_data_out_n(NLW_inst_axi_c2c_selio_tx_diff_data_out_n_UNCONNECTED[27:0]),
        .axi_c2c_selio_tx_diff_data_out_p(NLW_inst_axi_c2c_selio_tx_diff_data_out_p_UNCONNECTED[27:0]),
        .idelay_ref_clk(1'b0),
        .m_aclk(1'b0),
        .m_aclk_out(NLW_inst_m_aclk_out_UNCONNECTED),
        .m_aresetn(1'b1),
        .m_axi_araddr(NLW_inst_m_axi_araddr_UNCONNECTED[31:0]),
        .m_axi_arburst(NLW_inst_m_axi_arburst_UNCONNECTED[1:0]),
        .m_axi_arid(NLW_inst_m_axi_arid_UNCONNECTED[5:0]),
        .m_axi_arlen(NLW_inst_m_axi_arlen_UNCONNECTED[7:0]),
        .m_axi_arready(1'b0),
        .m_axi_arsize(NLW_inst_m_axi_arsize_UNCONNECTED[2:0]),
        .m_axi_arvalid(NLW_inst_m_axi_arvalid_UNCONNECTED),
        .m_axi_awaddr(NLW_inst_m_axi_awaddr_UNCONNECTED[31:0]),
        .m_axi_awburst(NLW_inst_m_axi_awburst_UNCONNECTED[1:0]),
        .m_axi_awid(NLW_inst_m_axi_awid_UNCONNECTED[5:0]),
        .m_axi_awlen(NLW_inst_m_axi_awlen_UNCONNECTED[7:0]),
        .m_axi_awready(1'b0),
        .m_axi_awsize(NLW_inst_m_axi_awsize_UNCONNECTED[2:0]),
        .m_axi_awvalid(NLW_inst_m_axi_awvalid_UNCONNECTED),
        .m_axi_bid({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .m_axi_bready(NLW_inst_m_axi_bready_UNCONNECTED),
        .m_axi_bresp({1'b0,1'b0}),
        .m_axi_bvalid(1'b0),
        .m_axi_lite_aclk(1'b0),
        .m_axi_lite_araddr(NLW_inst_m_axi_lite_araddr_UNCONNECTED[31:0]),
        .m_axi_lite_arprot(NLW_inst_m_axi_lite_arprot_UNCONNECTED[1:0]),
        .m_axi_lite_arready(1'b0),
        .m_axi_lite_arvalid(NLW_inst_m_axi_lite_arvalid_UNCONNECTED),
        .m_axi_lite_awaddr(NLW_inst_m_axi_lite_awaddr_UNCONNECTED[31:0]),
        .m_axi_lite_awprot(NLW_inst_m_axi_lite_awprot_UNCONNECTED[1:0]),
        .m_axi_lite_awready(1'b0),
        .m_axi_lite_awvalid(NLW_inst_m_axi_lite_awvalid_UNCONNECTED),
        .m_axi_lite_bready(NLW_inst_m_axi_lite_bready_UNCONNECTED),
        .m_axi_lite_bresp({1'b0,1'b0}),
        .m_axi_lite_bvalid(1'b0),
        .m_axi_lite_rdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .m_axi_lite_rready(NLW_inst_m_axi_lite_rready_UNCONNECTED),
        .m_axi_lite_rresp({1'b0,1'b0}),
        .m_axi_lite_rvalid(1'b0),
        .m_axi_lite_wdata(NLW_inst_m_axi_lite_wdata_UNCONNECTED[31:0]),
        .m_axi_lite_wready(1'b0),
        .m_axi_lite_wstrb(NLW_inst_m_axi_lite_wstrb_UNCONNECTED[3:0]),
        .m_axi_lite_wvalid(NLW_inst_m_axi_lite_wvalid_UNCONNECTED),
        .m_axi_rdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .m_axi_rid({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .m_axi_rlast(1'b0),
        .m_axi_rready(NLW_inst_m_axi_rready_UNCONNECTED),
        .m_axi_rresp({1'b0,1'b0}),
        .m_axi_rvalid(1'b0),
        .m_axi_wdata(NLW_inst_m_axi_wdata_UNCONNECTED[31:0]),
        .m_axi_wlast(NLW_inst_m_axi_wlast_UNCONNECTED),
        .m_axi_wready(1'b0),
        .m_axi_wstrb(NLW_inst_m_axi_wstrb_UNCONNECTED[3:0]),
        .m_axi_wuser(NLW_inst_m_axi_wuser_UNCONNECTED[3:0]),
        .m_axi_wvalid(NLW_inst_m_axi_wvalid_UNCONNECTED),
        .s_aclk(s_aclk),
        .s_aresetn(s_aresetn),
        .s_axi_araddr(s_axi_araddr),
        .s_axi_arburst(s_axi_arburst),
        .s_axi_arid(s_axi_arid),
        .s_axi_arlen(s_axi_arlen),
        .s_axi_arready(s_axi_arready),
        .s_axi_arsize({1'b0,s_axi_arsize[1:0]}),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awaddr(s_axi_awaddr),
        .s_axi_awburst(s_axi_awburst),
        .s_axi_awid(s_axi_awid),
        .s_axi_awlen(s_axi_awlen),
        .s_axi_awready(s_axi_awready),
        .s_axi_awsize({1'b0,s_axi_awsize[1:0]}),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bid(s_axi_bid),
        .s_axi_bready(s_axi_bready),
        .s_axi_bresp(s_axi_bresp),
        .s_axi_bvalid(s_axi_bvalid),
        .s_axi_lite_aclk(s_axi_lite_aclk),
        .s_axi_lite_araddr(s_axi_lite_araddr),
        .s_axi_lite_arprot(s_axi_lite_arprot),
        .s_axi_lite_arready(s_axi_lite_arready),
        .s_axi_lite_arvalid(s_axi_lite_arvalid),
        .s_axi_lite_awaddr(s_axi_lite_awaddr),
        .s_axi_lite_awprot(s_axi_lite_awprot),
        .s_axi_lite_awready(s_axi_lite_awready),
        .s_axi_lite_awvalid(s_axi_lite_awvalid),
        .s_axi_lite_bready(s_axi_lite_bready),
        .s_axi_lite_bresp(s_axi_lite_bresp),
        .s_axi_lite_bvalid(s_axi_lite_bvalid),
        .s_axi_lite_rdata(s_axi_lite_rdata),
        .s_axi_lite_rready(s_axi_lite_rready),
        .s_axi_lite_rresp(s_axi_lite_rresp),
        .s_axi_lite_rvalid(s_axi_lite_rvalid),
        .s_axi_lite_wdata(s_axi_lite_wdata),
        .s_axi_lite_wready(s_axi_lite_wready),
        .s_axi_lite_wstrb(s_axi_lite_wstrb),
        .s_axi_lite_wvalid(s_axi_lite_wvalid),
        .s_axi_rdata(s_axi_rdata),
        .s_axi_rid(s_axi_rid),
        .s_axi_rlast(s_axi_rlast),
        .s_axi_rready(s_axi_rready),
        .s_axi_rresp(s_axi_rresp),
        .s_axi_rvalid(s_axi_rvalid),
        .s_axi_wdata(s_axi_wdata),
        .s_axi_wlast(s_axi_wlast),
        .s_axi_wready(s_axi_wready),
        .s_axi_wstrb(s_axi_wstrb),
        .s_axi_wuser(s_axi_wuser),
        .s_axi_wvalid(s_axi_wvalid));
endmodule
`pragma protect begin_protected
`pragma protect version = 1
`pragma protect encrypt_agent = "XILINX"
`pragma protect encrypt_agent_info = "Xilinx Encryption Tool 2023.2"
`pragma protect key_keyowner="Synopsys", key_keyname="SNPS-VCS-RSA-2", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=128)
`pragma protect key_block
dheoa7qy6GoRk6iGRBTcCyKnJw4WEJjXQUofGqUCrTBz9TXbAVyuWPyJ2ZLFLnPZAmbZZC1Jttgt
3sdvH+vCSqcQNzzuIgzkA1hvpVV9ZOAXL5oM3VuRUrz7hnAt3lSLNEpBE6p/6gtJ+w+92f2WwwUC
21rbkp5TyIfkzW065sE=

`pragma protect key_keyowner="Aldec", key_keyname="ALDEC15_001", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
KFbn7tTAdJt5tIuHXM4J1CV/u5oPGCBiZ99rYke40eWUgexxUrV+t0ZAJs8vm2t/6KyPrJ6RzNhd
85vFYVJRpJtzZLGB+iYTXXU42O2ooQreJllQFZGb/aUh+DngKaiR53d7RC3eR62md7GC7YA7Kg2/
koMLbR7YrRJko0/wcNvftUR+doOj512xDuEaJrIAWsviMj/F2TO9fxXGe0HanjHaC/Eij3g5E3d8
q2lVpHFwah8hb0TD12rpE7vS6ZPp/W2GX2uhCE4AHfzii4uEkYoDCmSRTxo27ruqoJLDBK0u997A
Y7PEwQUPVSHwpqHqjexjrUauUjh6XI5w9/nkCg==

`pragma protect key_keyowner="Mentor Graphics Corporation", key_keyname="MGC-VELOCE-RSA", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=128)
`pragma protect key_block
ENaxhv/CPhmdw9dS/ZCpvmkAQ75sW2WjIDmxy3qcEQq9fZ+/Pqca+zGebtobkKK0blL2RH7StPik
kJrfpJ2fwBCZMHHvziLC7t8YGcyF+wXLzOHrc0PGSnvzCEnebbJ9d9qiIr8/QmIa+RNYtdWNne9X
ND0P3GzcTYgNiYsQG/w=

`pragma protect key_keyowner="Mentor Graphics Corporation", key_keyname="MGC-VERIF-SIM-RSA-2", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
syfsvQAbWS4UqtSx023kV/BtyZAf0ag5qNRKpm858vck3W+vsN2lhK0cxVuyDeNlmMl7oy0/W3Af
jU/lbPHSWbIr2sAhtmIPobNuMnEc89wXsVmtKIahmtBvE/q4buiuN/U1miRDpjCYM69XJDFHTjnu
9l9PNIo8Y9f0j+LzFrnJilWXBEnhNNw/EdjUE7WtVrQ5NDnPMveWrbWZYVQb9xPX+kw/RARam6Ar
rWYa1Wk6ZpFazf9y4jKW6Nx5LzWpKhtc0PR5EEiyDOcxSSQz7BjQGBeWjhp9ewNVJRZFg0Ih9/2L
64RbYKHxA86Qe/ffHFYW40e5BCR6+Zy4Oc073A==

`pragma protect key_keyowner="Real Intent", key_keyname="RI-RSA-KEY-1", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
AmVDziCOCiswI//oMKbTwV9Y4cyhGqEhT1JnUisd+4dqLyq1TUFpOLn9mF7li+RfW9W1m4jKYulD
kJA5b4eFJOO/cpHbqrV6KfIF/IkppLiGJ7oNvZ29e8H8LVUigdaawOL7IrW8uXFDn3td4VZ7l/0J
enSZ1q0r/gNcCRQRz80QSsxyjtFvgfK20VeSyoWLHSexf7L+rfes9Phl0ijrOnYt543aCo0gu3AM
GLApxcdXgU4TCuDhraNXQM3zRgNiv4ixC/332IXO05SOkgJve1s0vrAcM5sr63Z04a5ISE0KH8Vk
0UDsukCNzKhC45Qcts/BGTHwSugPzGqfdpfUWQ==

`pragma protect key_keyowner="Metrics Technologies Inc.", key_keyname="DSim", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
iF1nQIMjUmtQOIrD8A87pTN+7ZsiWnz9Xj+r6hwpM6UwgAecu2jUCfftCYO/LLpDtsnrmiy1lg+W
PUXfnW1liM3UzmeeeTZ787pEdodOHGHIFjqahII6nAliVZteg4pXjco+ZZ/Yua0D+E/qX7hXtZ+X
wsXt38YVsjpzpcy+apfzIOfut7McxcGx3nreYhFCJK8isYHJfWlB1OqOYLLcH/pGb4s1f440XSZR
8PsGKoUQWWoucw1zcGD3Ye9Lg1a/Hblay/0LKoYXgoBmBXdjuRUZKj2yB/c1q8uQ2uatHOy03kKp
4LYjRJWz54HZYCv7uv4xitpIi5vgN/YiPqKB5Q==

`pragma protect key_keyowner="Xilinx", key_keyname="xilinxt_2022_10", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
XGpd/hDywwUv3qEUIpSpFU/aGAqGAolbfoqID7yTM63Aw0gYlvUK/0UJU5x/lboCkdq6HcDUvSfM
EtLfDZ8/XxBxevgokJwml+QniFy7PDMvjE0eJeqcG70FZeirS40Zl2KrUA3CjGMj9N34nXLFVVZI
67050hdyYTwKO8KpfxKOF2yDpNYzUZs5HA0dpSkO6mSufNtthQLI1JOXRRvEIuEs0yjOUHxI+Mg0
s2QNxvyBgOqrtiEUWSW2P6GyBgb2KS6CimKcv3HQqmHmD+LSYXyHjnRdZj1nsfvdeuZTprGw8cQA
3eNDO2XG76mTmc1pvu4zd2SKBW8reuxARL7DOQ==

`pragma protect key_keyowner="Atrenta", key_keyname="ATR-SG-RSA-1", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=384)
`pragma protect key_block
txIYBGYclM3WJyFO/GAY6iTCGrnUvaBWMRrewSXZS2VCcKdaSGkooZc1KcOMcdAxduXl2PR88DEi
oA4lOnikzd6dZKQunJbA7p+ze4GUE7VLY2+Ol5+Ts1AmgGAGn8XYwaw+trP4hoeD+VdKRRZCenNU
4/7UnBms41jy1M0TkThv1lqzFnPu4tOX1sUOKas07WQ/6k3CLqv6TQma+HQo1mG/OA1SpsiOQxms
vKoPd7g2sBzHbXc8w2xrvNgMvt97kNSOxS6fWeod/8O+5UYSlU7OCt6ponbgPXJa365II61l3/4a
3sqnka/RMhjkinMs0HpR48Wh1uDgPFzwmI9aHUsvKtP14DDdz+TPqojEgT8pdTCOdoc9H0DnAQN6
9ft2KqjfUJ5YZACEDZ+izfLWob3iuuBJ8YmOjGV/ZMulzINgefeD5awRSjwzx0z4Iy4lLxoC5t65
bnWFxnX10h4H0isknHNdxJ1RPesYSLpI360LHACanMI59GUZ2vApLAtQ

`pragma protect key_keyowner="Cadence Design Systems.", key_keyname="CDS_RSA_KEY_VER_1", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
H/C+3tbi1GTKqCxcSXccD8ddO7CbBTWKEaKQsuXAyRh0UO88wtwBzQOlYtOrF51zB85n6YhsaDcS
J25DMNfjhsnDtTzED+dirm+l1FNsykm8KfwtoQfLSgYZ3onOaOpzSaVy4kMEeTUhTozpWODl32K7
+r62PPCBtKKnaszI26TxhTdfv6oh29UtSy58AAmQXv13nMnFvDMfo3w18e2bzT0+Tw3Mzwe6mrRw
LVkRxSo6Esg8aIpqLuvsEg4xtaSfxrcfPLzcvd6iNkPpw3mzzSpJoQm6ABjBA3DM6RTaghMuDcGg
fM9t2RmTFaJZ5TXN0GGYtNkKAexEtliN/lKhOQ==

`pragma protect data_method = "AES128-CBC"
`pragma protect encoding = (enctype = "BASE64", line_length = 76, bytes = 571488)
`pragma protect data_block
Z3bUkVwo8EzcohburMLg6E7t/N5f+zdRB772Y2O7PayCBAq4f3JBwbUPxEXuMdqIGr4vfxqmY2Y3
WNxfjqeywEamWBdCNtiSQjrf5rS83RFA+Z7yzvPj6ScGRUN3uNWyl3oJljzAC1ifIl4Xl8l5fMFc
YFayH4szVrN2JUrvxipdNrX7t+DFpS/77GAgF6JA7FhuQ28dqoO2WA+kM/+/Ope6faxOfJrE74Ee
4BJAlRdpyFsPHzME3gGpS4FYzlCXumlVIU5ACFRVlLSnW+cmgZnWo4xhYmZRccEcuy9X+hTFwJfl
c6k/T/T2VIgjZC6EWH7evqXphGfhKmC+kPGqr6+FjW3iNF6Eo8MSuObiQX/1NiRv4YT0IFOaj4qx
YBKGRvjl3lX/g0PK7cPh8ZnhROTJwZ5TU9POxBYV9txHFZQJfdSTAf4dRj/veYonedvUq23lsmvI
HRpM2EcjdtJvHta3PE9/uMLFlwNZmW3PHK8MQX9AgL7c1tWLWKN6UNUQJBXpJ5QM8/bHHhyjrFxW
e5IWYCS+x3T0zZTtuv0Qq2ee7Bq1ljXFN3Jbs1xv7RHFUg4eUaUcD3g6m7/ewO6hYB90ddVAT02B
Hcr2HQRuhEc76Zb1JzlFyUnDjcrVs5gj32ODmLLuPXUp5sjgoT6hcO6SPEk1kH1xri9qrS7E3ZVu
FRrtFVMdnM3IZSUL4FJpUAFD5x50e1Wexf4eIq6E1AWQXXKLUw19dcylE0uiyXJVenKJFplQ7cco
Rjk61V0V8AxaMEd+YqWZDMPLfymH98UGqDow9OKZFxnT3Svg8gxcMdf5xrCebrdAbjbCsl3nueU1
GyetDfaBHMWbCrOHYY1TVpb2YWRtFlykBmcVp1pNNfcYh9MnpJrvEnQAHezYlW+/XAcaKFps3npa
Moi1p/M5sBxn77PPbs1fUSB6GdtejFxjQ9gX95NZ8kqo61OAsRPlM/0gXXf26m+MRhuynshknkZx
WBSkAMZL3Ty3/uosqjMVNVEYKd2q/sg7Tx6ecU78J22y6dEM1dCo9N4WzM1xfrQqJOYx/izMbvcY
iMubnbtrbCq85bM3uxL7LCUHHJpadxrBdLe2i26m3iLrq4CPOofq+oNIFU2fac0EVHf69OO7xKQ6
3TRgJLOB1HRJ3o13DesxORHGG75OAojSOFJMwYxfju/UAxWQTlPaSQFNIun4jEZa1sX1xEG22mCw
BslytGKxpkMxLpzPZ+rtDq7JrzGqNG+4rgZlA4vnADFssI1O7j/VbMh2090Ea/LxRVaKamYXlxli
1zB7YCGALPPVsyxhFcjPnU2wNGs7jJJ5+3REd+oTx16ZoRFbjgTD+77fSIEu29Bom+AqnDkqSPP5
nGyoxw/BZCNk5KoVHhZj/+NDz73nJadl+vt/9yhi7+djP60FSQBRouisvtsTHkqCjmPsE9TSeau+
ehAqXwKAkGna6xpP+dWmTWre7BC3ede2nZ64nhM31Gt0hu5r62qE0pH+cLn9RXjBGAjQkAABWsm5
0xRyDnD4zXwZBePawx6HSu5pwba/kXCjOh2Q0We6NMJAZhFcbSJlsT5E7PNrvV4JB8OgH0r2DDia
lyBg7xW0h1OeSGJxqoGNaS2wVFOz9vZdc0ypjyMXFmfA/7G7nv78TemVvJBGgrD/avLGp/jw2sDS
YvHxwfofs4Q35dHSb7RMhO8teqdGSqE/2t+gAzWLGYVueRGXl+Q/RdLEM8xSUnERbeKmOOe9g/Xx
c6N4ahHKHqWSZK7cf1d7u4WzkC/QhXmyrZSdLom4z1rM8JRbdSaogQQfwn7lCQC4cfsgxGrQm+dI
WBSdSNYCBNNPDLSSOr0c7DfB5CCRz2T2CGIE9udQDgVlX6IHN2CgjtU8WnObQ9yTHNmq+oW7vX+S
TzYpqz+vPfXvKpibWeSvXJW/vQoo4GMFXanhTZAC7aMVgvmJvdoOxLnSxooBspnkDFOYVt5evL8E
KPEUBhGmJcisSpfGzVoUNIf82ySzZZw1gY+EY7baQfcffMNssaKyLE9d74gqG4XSuUSi3gKm2va2
5Tm6q/iKWHryGByMH+1bg1quLBnPS2Mgy9jCs7UxKVdKfxXeYKP65BvCWo48uCIeC9yOvV4pJfbl
BMXYwt/damLAbrMDssitHI+xlKkfYQttqsEai196gy8qxvBFZaO6OBdsgrMjldJDbsZ95eTt5Sdh
0oMexXsW3cRROuu7CwsE1bO4n/tg8d3uiSovqI8hv5b78AYNwYgSDXn5izmY4dUB1wzI9F9+Mh4L
JkebhN7Tq2r/IymZwPFPvgYfcapZSZUkizaaHSmPg3C1B5G8XEJBQRxwl7P/BA7HeG7KUmbJ7CVE
gduEbwio7347YiaFChz1ug2cEpOvInTp8FcJlUDJva+jZYJZ5nGUpR3Lq7lZzVdBt0pZupJVCYyi
ZlfFr/ZiT3DOu5NuYzp0n+95vWzgmS2D8507XgDlQXdVOLhPUrGHM8fJiwCBNhBzcfIRri1vHL0O
A6GI/6kHMjEQOrpHQW4Tfgk+zLq8FWg3vyEtRH+2oAx1NUWREtKNQuEor6Cd6AjnkRL1lN73RXP/
prETHJQNMA5QYNlinZuVYg/GgbNomhvDxox++ALeAkc/LGoWFZovapvRO7vviBnWq8xcflrwZ5N7
q63qNh2tgiwMVtBP0VY+cO6z3IW4OatkCOxmFo3cWQi4AoLcT2PmKR+BqbyIFdGpOZvlEBec2q/z
Datls2sZ4ZsAssm4L4jQHBKWUQZKhR2mMaphOFcS7S+P8ctvXu6MPQM9cwBm6xhQTDPkqAn22I0N
Jv1qTZk+KDeRqZrhBg4AAB9LjTWJU3CZVJvbeeQpmmLO9MzpKH7UlgpV6H6HiRRPeGMAqesMbeQ2
arVF8OO6PPuUxJKzo0oRVaG0lha/M+7RCN8f/35SRnzOwV9E8pvLUtco5mmFjLemeMpNGalNyGS3
LY8f/VM/3Avag/1al6kUB4+ullOXI4yd+mAX6t2NKOn6FqaKvOOuMJWDtzPC9KFq7Kqg0UEjj8gr
r+AQHVkma60M0N1Cyc5tekrpMZnWn6vi+0ExCNmLCfO4i4Ja81d+A5fZHX7IWxKSrPn+u4WBvgGx
YIZyzlpgWeyOLvd/Fh/Cxr7dZNQLlgNxHFtJlOiCdh3GKwpY9g27IHavmWfnPfmU4tSX+5NL7FQJ
DsNYou7Cbo2j3sn4VxOxi0hrJdyAToTPLTHaz3DV/kZr+xlvdeTJzdHZiv77GHv6+tb/m68sQVfS
L4L/ILkpmy/ki3RXDE+iYB+GnOsZl+nyC0uZ0sy3V2cErL20RjXHXgE9jWXNReDonYIUr0RRZcCv
gwxIfu7IjxDHJQKProaMQusECLVFrbjx7EUubVF9zqj7lvoIBPb0p9cKFlwvfPUOIDrblJqvm+X9
/Ma6M1Jl2FtcIzUf4YaRY4lPHi168moHjEH5uQ4EtQ/WfEmBTewdCiUaL//uU5IFJLI9Qb3nmc5d
9nknG3drZkU67vSN+IePzWwqg9Z3cGUE3v5GP1moRzWRoJdGaUKYCaCU4UWeL8Vgylsv55KE6MWw
iFm7TFE7JNegujaOQTkM4rMkdAzvj4Ci++UBueZ4WDKLvVwCtUwhpg7NKSBYIYCJou9zP2wjNh0v
7Ki6X51wAM1eBJiqlSyI4PVZ1yl6P4FrZNbrez8z36/tjZ03gtXmhJMsr4zuQknNPMFhUVbCcTa4
RDLvPgD2CS2AMdTUsUHcbYOe/LFC5Q2OA/nLlvuwwuuwVPrcbgGtKWvTo2eoe3Ozdt9tkcLN0+1F
0vwi+S1rbir7Mj6EqrCLg5BdsMQGgH414fLq5uU3M6vlSZHnFe4lP1kLb52039kBde8vjZYN3IFa
qWYHsw5KD7soZhInuc4Njx7pIxg6xrG2drCgvyz6ZtOC7UTkk0hN5SJu1F7v9iXqM5xsB7puiRC7
CIFb5TY2ko4elJ6XiXh4X6j160LAhJ31cE+35+MUs34yS2PqcdMypbq/ATwGuc+HyKvwxI28cYTv
b0pigECtl/N/s0Y2ltd4OGg7MjPJq1pGhaRmrHT4OM2Dx7DphycaRcwaI5rX0W+L491S5KWNfgfb
MbjPRwrZrShNscgl+TAcRVG4kHtOM8KLHf+L2chmW5FfiFQUpAeYvsk5ZlL83ps+vuV9YIUaSTcs
kcg6bRNas75zrRb1XueTQBr5xcUzbWmIXJ6vURfRiXVKV8FJIzuI9cCGYytzmdEWXDLd2oBwwswg
DQb/5DUFmlIbO1kNRUAJAQL9VJAT6VeFRo76PhK3TsJAg+5NDEACipAGFq7LdORo0qRPwXdk4Gvt
52cQScaM8/VTIRJjxVZZNLYoYw3dBkTzxAViV8Z0ZtJdJOt7tTXTn3+h1GjSuLXng9ShRE95/S7D
7KlrS9dZONbmkQB6SJDhfsAk/9daJxFWd4ZhhQ/stmSoh8pSSsVNFAJPue7vgpY82IQyyaNcEf48
TiJNve8ThJvhBV9tzmJaqAqa9g9gkXpG+A4zVf7Ol3kkL22VeqLYkbwTWeea+8Z+ca4TyOY60LeO
aQNZ3X3OLtPKAtjBDyu9i0AIOFOtKiwJwFQkMDvTa1CQ6veedDoWxubY0pXc9Btalv4j+6B3wfMW
HmeIzDHkB1LtHBxWDG+MZIq5peYcFx9LpYz5xf0PCUbVg07CowMJi8qzRV6epXpJJ9WCkHTKrDmd
f67OpvcbOrbvGPEkAwzAWO4RzRZQmcwQ4/g072CMxH04o1kDv8juGzctCpBkgmfR6H2HWRWS+ixs
QOFNIm2CJaY0NP4sGNhi7z5lSQpVj0LdOs7fQ+T4tvj2CzjvNDjg2UrdQWsw+XGxoB6G4GK9vzb8
xFSW2ROFQJeyzJgniUzSDz9GB/NsdVNcE2HyBBnNqcEldfb5TdXDuMPaTXQNRvnFY+QrzQJ176zC
Y9kYLpF70b1Z5a/KqUUX3bsqIZ3mls90lS3kzP0m/JSSIkU0/ndfv6EquMSNfX8UCvE9kuH+zXlU
XCUUQGKr1SXIr9RAD+7PS8nD4HncZzer1x9TIv4cjawzorXfASFvpYgdT8ZoX4AZdqjx+ShZuEoQ
wMx6PAQX5i+8/N1OhFwx8mcRfP/hYoP7R/7JeC6EReHJ/A1f0BGJFYBqGutLKcUpux4iOo+Up1w0
bL+qLFxhIB8pTu5lEAkoMOq2mBG81GaaA+3+GjFZgr+JHDCT0UI3qeVUWMM7w6DLIZgyofkJMfTM
bkwMKzvJJTzCOAc1dbrbAFCeEksoaqptC6jyeRfy9QlSfRQQPGK4u0ytroCbTPnIUnyuwSYvWViI
udq+K2fsUIfDeexbbmcTdNOgQ1RP3byOfqZHpVoeYxvQ9f29tcaovZiZ7oNq2M6IAIium6bAkPhG
YdJorPP4b3F6R8wknEzRWufqVenOaR5IYc0LViCXcrC45XvO2YP1GaPyN7KjpfVkwjKAHdWDqoW/
cGqt1QR5auNvZV3QBmuDJQKlOF9rUK+3aiYoQv5brYvBq2VHHtk7DeBURem2ZXxOdwHWBtJqTliS
odeOgd3Xugb+TCZI2qatBegUi/5/s1F96gXFBDecHJi8mCwc61a133lPBZ1nONRi09vcSVC3b8gq
YncGT9BWD5Wui/UNrMXot0abd7AmVKw4BNsarsCdy7+Nn41c7hMqPLu0upt2D8N8cWqmRQqY5JiQ
K2nf3Dqw5Le6ioKg6qNAsonguize7uBjUsz6RdlzAkdaNf05svvVBkfK/eIwVXKiXy7DrZotxoBS
Cw/8xBieGm3w+ehYYYZMS/e4KQBNIN6bBOrw1nN+UZ4hw97lBQ0FSqFHc2us2cW0HTPUz15mc5Gp
v+5H5Xzvfcd8CkC+N6bwbfwN74GJ7YgZmZKiDRgBYHcsX/+Dka/aQLicvOXXQj4NYXlAJzYtUyQR
abKXACVLnHWBnV/QjkG1OvUtsAVk7Yi9Y+wQa1Rc9KSreYROK4c/A1Xc9JQ018gkqYYFVY/3hrdu
wjAPxUSgIWIROmZVgk+n+Hk5ofSf/nhke5fz1cEwZpfXTRPL675xd3URYzg+aoJqUgUhGq95r/pB
RZdZgh1/RLy9mOR4SOCyxTrz5iBN2sjd/O6p6SBjQW3SNWF5KHvKBY7ZQM1XH7yBDq8pf/+BmNzY
cfY1747mOLTbNSRtpKkK7iwKwFJ/9SU/R6eGhB4eIhucDSneunSe8OtLWIq0yzvl0m6I+SRhbYwG
FbyWu0dI54fxwd6AJVbt4pOeNmRVPRvzCi36yTYv3UiUzMxTcS7Qay4L7IinAlWDdc0hpPcvsAh3
jqnXtlU5fFa7nXvIfkkEILnuOVB9Ff1KWmU8Mr7GnMpNmx25o6VNbCtVAb0k1YhLTLmvvbRrbWPL
eiKbTrXVgYFy1kA90RRFo3m04LXcxag/z3tgPdEXb0fqFMqWXPaE41trziYvAbNKuX2Sfs5ltIBQ
Pq/JfgCRV6g1ncKBrzx/Arp/BaZpaxZThy3Cr1mHJhs2wJle9gVKxAGI7DKmd10QmDiuRJwgf4hS
MRupL9lJTkih4FYTY3INa2ZzteZqiXEg+sXM5oVPiLRwkq4yHkZOBLSL1NaCQ5FVKF1CcG5eN6+a
YTWGPjhxS5t5h7/TshmQXPUaW7pgKC7nPJkpK8qTzmiBBgb8/D92y3y0tEsB0kakE58BF3UG3FWd
10etjwLKu3ahlT6d5im3RQmi93NeLe9HS7gH8kZyhmuP6snntk2Sywali7pyqucijhs+aW77g47h
8cZee6ePhgE0AfyrnVvvaq2jH3aCJ69sGFvlwN/jWJ/AlY388xsaozNI4bNERoIKsRE/VtOnouqs
Q6uCzjRiqz7bkGHQQOiMh8teqtca5QWU84NKn0JwEST92EhSAoaATrKlJ5kInon38QNKECwz+Mnm
TeSE6q/lwnnZYQqbL8Iyd/rL4MROPYDP1fcJOPpQDYKZ2UNRNKIejgJYV5IwxyTm96jduGFP8drk
anQVo5rDAvWi3Xtqqu9afXI/UdCoJ/AgmDhQ4gunB9uhOFSUL7U3xeH1CwLquTI5mEaOjXUT/kaV
fz9k14puWWl9z6+dK/iWPN28mjNkcVTBE/RMXj8LbksB1mj482PLCxAlsiZ217FiFBR44xw6RKx1
k2w3Q2GLbpvYvbvvc3DXh4wqJZ7FlpF1jB82uGLDTiGyvQk6fA/Ip/YLJxgMRK1xEIoUecuR9NU2
ryI0i2WW0ZGCaHYbjSS8NhoF0DF3D1WfjpdD4gsET9M/mwtHj17BaEx9C+tUc0FWNrOWFEAHEWoA
+jyjfexGMNZsTpWiOvMkkmIJpRibZjf8nLLPP7ygkRJygGrLzm6XJQjvYJzqmv51us/Dq9aLZy7I
ra4Xaas0ittx/w14AESNo01/O+hGkXmXMyW6yzpVATttDMF+YsoGs7ury8u2JDkIWc5EfpNCnEpo
2GjS9WiQ7a1f3bjA2pMtBcG6v8EvU+SazvHW03/4DWhuXqTSSbMRGkb3vfrM8pjuVX42lugj48O5
8aIwL7dJC9dVE9i/mUPgBjYpZY5wddYKCmy3dE71D3UI1NKH0SqCRrAKvq+9Ti9FsGFMpHLFVb3K
ENk5BMmPt9BR786GoxN0+3bwwwG0xjMGvA9c7M0l23h9t3rrLHKuTG588JUJx26S+ddGLhaP4+uk
ElmmDabkGt3/URXqdPb00wTkTpTI/GfcgKQxcndxvY9FMyesZIucLVgLGkAB6JlbWuq1OpqBp6d0
n60JfmPcjZrcvJ0npVh3BTrHUUgRDDPqUN60zgtOsJ6/75mp4a+QNVJI3wYs3vOSIDzYPtDk6AxR
EU+sxQYrLeRaLnJE1YKwyxXg8duzWfJ4rwo0q2vKRqr4UkmuLM4g2WE1XwZ3dGknpstj9NQPNEhN
Rn9oNdqrFPfJP7iVgdUaAWpN+iw7KanrRtjWCrBGERww9G3SmjfIMDC6FcR+UWHjkJelc8iiIFdq
whW7ro2Y/iybnrjj1y+/ZrCwn/4bUVn6uR3h1JoBsKNcyH+aJ3RWUSlQ/djRVw+o6ATCFHRDKMMg
ViHSD6b+j8Z90vDBbdtOvWIfoU3BPowocPV1vOWlItQmJIRDhvN9hIObujZ1H+/i3JIWgRxyaEkT
B0TNKK9iIiFMDHvyzs6EzJvHksUrNNwFa5NpSuwJhaMMCUwuYWbn6AycC862XyRzjNnHayOk9Ngt
AyaByDbCGvLzOckMPQAOWKyHFumrCr1NpovWhl7Z8zAWK845SmJUDy7q/ZJPeimVnkU1Pwsh3nqO
ntYBGjq0C+2pyGMRNoeProa8uA/cFhwifbCjJ3XivcHtCYCicmb8YrJ+aUh/RVBjcqx62zxSxQ9W
FcW5Lf/kulgEunSluqoTZRRZn2W2RvF8Y334Dd6rKW6SidnnfZDTne3jM+D22H97YKTxiYCALZTo
LNX52hjEQui1ZxtuP5S/ZyWfwS9g4cxOBSV5zmp3fDEGXUyukdF2dN3683/0XS0Z+nJRxHArf9hJ
lAS+ZYSMoLz7r7l0z7O96oPi35FxljBA1oYMz7r1/ZAzfgiv17jB9Tv5FcigFR4W6rmHdwvxlWC1
BrJwvGRXMQKz2As4nyi0r0YYGdZZ9NPuwqBiqnugFtXpyZxI20Xcby6vMCLkv/OBFc3fK/XTYbhO
M5OXIF+hB7k8PURsxzZOFj+FVtItzwn9shV7GZc4If66UJoOM/O1rKCnT29ZmzF8t50WLOEfMakw
sy6K8mvP3MGPwXuHlZP7W+iW+ehjv8clBOAXDvlPZ5NkM4W2dFWIjp/2kgd24az20Qd0MUjspxmv
nX3ywxn76XKn6o48hP8w+xd36J+KC9WBRalq/hKlrSUvds8lPfwcxEChGe9yEcxy86vkBAOeUCD4
mWEZVlo8pkbdD/fLw/gr/cMynOJwsGTffWtwQzlqq2FDe8MC1DGbjff1p1aCMOGv95VDQZmpR9uZ
ekllYqkWq5ITvPZMDblUJV0M/C3EEIdvTZGos6roTm0X4bgdpiQJzqIkaPLK1bhXpnSV9oDI5wha
LNEa16KYixL5JVkckQlvkAfHEtTFD6KQ758C60gsNuH9akiUeQNGmCVtTd1v4ECuyxI2enWjiTwr
s3e1auR/9LmqHywXWPVLZA071bHzWZT/xAnxUvUnPW2EIrh38krWy5xI3htf5Fz9gHqqJEiM0rTh
XhGQvCUAHsthhQgU6Xx95bOzPet2Xsul7k+Uvez5aKCFCCHT2Y2AsYS8FhUfNrKvlW8jAkTQkP9S
7S2rxYpQ6MIKpNEck+rJqkwpkzysTPp4hqegNCYUUYgWaeHko/vOGGSinmzCMdTEnaUz3tmApTVf
+LbfYbX4WxR5yZLyBpzTAlcDEUb5Y8Tv2Z9zl4gfsI434ZyETzidj3Fy5gWaM2g9goX2L+1ooQO4
mgrvqTbWljIAOo2imBnEPhwZVVv7ioLrgJ7XQg+XcQkwmZLM/rT1VwlN5Yy12uY9qwpUIa3eZkdL
SGXOL8Dcw45RtOloVSZpZrs6VAfqrAuOepDNj0CVhKnCYDWJ/DSx/Dnv8oU+CYy+qg1aSFdxi3Qm
TAO8CDpOHEqKRByiZITlFd+i8mb5hq2FhVghT9r/zDMsthqlpmdQ2eUORtehMLuA9vuUHuzkPii6
UIUzEdVq7cdBSWu47zw1QOov4cDL89uLiKALM0iRb0DVXsILFRUxIhtthckyn34SCW+LbRW/wbAR
hf12Qtg+E5XRUAGxNgsythOYppEJ28QTRasyKApf3XzjxQZ6QWHWJ2PZE0TJjdWgWqG7hV+mJj6D
+NYxT1+UkUkTe+bImh4sqsv/pOowC2XzFBq41A3bGOWgwlm8yQuxQNlvpe7G1wwZ1L3OSy9pbcXW
RVS/nZp4qmpqyKwzdZmq9FP0cWrKoXSSgFxB0QqdAhZGeB5j5s3l0E3ZRdtsGH7TY3sAkheYkfOh
Mi34WGHHZYG+Za1zE8mHvJ65H4ez1f7nWp5CcPdqNdev1jJT3hUtIN3uCAPFlJOzF+60B8oyA4D/
VHpMXdVbRc+GEo8Ljz2klFmkTjhkRuqK/ltMh9DMwUm1cDXmYhmqfDyA9ubK4DIcDyh+As5wrTm4
T3jjHDRqLtPE48XeGQdDSnjr7o7fnNjJW74NVbbdNgTLtJQ+otT4o57mksna/jcp9vMoAZkrdCUC
Q9Lgee6w+KtCFpmNTEeGBaGvhFeTxOMCDtTd4qEUI6MdKVcpnTCtEG/H+whuq0j5Gu7UvNoG9XiL
Tzg56xB9zoBAIZlcEgd7IScZDdetuJtV51DpvCnCJDExokIGVrWeC3DJDi7x/vZRQ9A+/BImNHuG
jrU8w2JKKSqsr4rWTEWWgj6mQyDrHfznOMr3EPpefgnl/lcXZ6uNvW0depXOKa5qoxwsKSs8GRUj
7+iXz2Lznn84vgurSCnf9zbnNjVttJt2r1uusM0w7XF0KurAyAH23OO31qXCpS4xWl6haKKKVhVX
lReBmaXNb3oO0JUulPqViALL34+mKBN7U7EbV+3fpK/cxW2/iE53cwetyJzfCFHQPh9SvOc222cr
NyWal6f5Nmqk8n6qVTIFRCCaKdgyE7UvzpAtuBX6cF8OQCSa5Pdj89ndUWAQATNKsDQcUEkatm6/
/DFxA/CqQWQnt2W1ZEZknT3xAVVkxeVPH/T8iuC8q6XdJ5+yVIvJ7lYnt8wqd75/uYAI/UvGGRDw
77Y8lhHvRbYWNP7UodrQhxg7YqF0/p7fue27Y8QpGSlrpM/7DjtpDxcSJe0DI9yG6Rw49sRhmhTo
xyktnrWkfxNbivWk5nLHtEHY8f5dydCrGGbaQqXeCmBlIAb5KuzKUTE1CNwxpu20Zzqjs5fF4/qM
DnNJ2InP1sVrbcmgTs+GeqyM0ca1h35TM+RQdP1/GEMjjFdnplgaorvR0Mu9jK1wtm8IMLWhMGsR
snauGh4kj/mcMZl/RPq6h4ffaNTm2lnBvK2anxJuuWzRnsN85PjDW7tAXk9/aMWbwbMFhyPlPYiW
18HX+RWfa8fN/JwzAinXFZHjqo6epHZH5M52E2q74D/0U8yL+7nB9g17xvM+E/lApHm6VQDFaJF+
yx0ILsd4LVoLTEhmwTRsAeGo84rxfw5ax3v6bH5Csa+akI3TvcScCisewqA5Dyp1/avFSkpXLDGe
hhmpPZRrBmLDhMWUVj27fMAWKO1PijC4AYSRnFXVyYb4J6Jk+O+hq9kYe0uF23/kMyE/2XnLHbgL
S1ZipX6QjPfPOIt5OFsfrFpWCROCBRCT/vrY873Z8TyIPTbXFiXEEWd37v8ctN45CjGGEkhNe4Mw
tAU6LW7zzrgeP9z4B1DRbyzlNwpAMoI3LPYodcHsoQ5WwTAACY3piOhrxFD437ZKOKok574GlpMD
nWk2eMebFcFoFnGcwrxSg8t/agFtFKVZN9yJ77qfB2exeiu7lekT2Tx5Sz6iMaXAXW3m/2SkS8KE
OI4xOAHVY33q3r/1ZQd/UxOsSiT8o4vmlsuu9CD5CenzKxXObGno9KVb/Tix1nM/y+EmDUBGXUUz
2c9EGYbdCR8oOYoOXcYmVi2/yUB7MEb3YCyy8L5iF67EaBcottDMHqUbKbPw5Q6MiNHHp/FuvpZ+
xR2lZv3TBuwNCkoMj/+jyHUzKXIo/FymbAtf8I6vN4YBD/9WFofvTPv3nIbE9HKrFDeQ6kNHdU8q
a5LdHCVbmCtE+78LLDV8tUtrGkbthbPKq1l/hFTZZdO+Rzdwm4mChesrv0beogv/pHe0Y/Cp2BzJ
7h+OAsO4Kf+hoaxF1A99EHnZhVU5TRWe1uNE3wPktz7BpkXGKBVc8U86Ll85enSGcYZ+tRs9UXtS
SAWB+nGnpskhhaph31J+7YIFX4gNg4VUf9Q6awhbDljxa8A+f58A3WsCD6zOz+GGgEnQ1NyIk6IG
E5gadJAZfd38ZzdDr+4VhhMRVSgCE++LFpTUMMttmmxHPlzPsboC9OLyTaD0FCYURc6qVeju2LQe
lYicR8jqBpdF909SLkOd99G1UVoJ/znynEIK78DV1a/Y2k+dzRv0teSv9K9f9qYvG7jYCY875dHu
xRL8F0Q9gF1Qm35TrzhU9mQnNPlKf+eLYXsne2/xu+RnBBb03ARZEeGV5AbmMJgWrgKaKfoBD/rs
JwOzb6o4TUHdQreCV1YM65hGwCYz1oSd+B/I3wXi+6AKVvWZz3oIS1lYO7aqLKeDx+Mqc54FBYke
m9gJZ/+716YPRuX3zbETP1F4reprMSqkH7mHeRA0u2rbWUrQv3NgaHlsPkBRggMlzszkmE7o2HjO
cEPmNYzS+22sewqr6mnqfacdeWj5m7pS/YHWq0sUqWagHNAXDVgKFlBbAoSIQ82grfz58oNQ/9pU
So38ii+2pSRCGKbPSgy1pDrg2t5ZuT5vuxgp+gab+3f8LRFM6/Guka1fsY+GY/1M1sZWUK6XHwmw
D3RVSq5j3KCpQa3axIlyDkRb24eJLrXWVC2Fy2XZ1zrBMn8hgLwqcAeUlPuM5LpxEDpn3f8KZibp
djWq7F9bZm9KW9ry3DAhKJ7Zm5ock/fsTuyBVcArIYtsWgfIu2MMZST4k7p03wxOo6U/5m8NqJSi
9feT44iqd7QQFpi7k4A46DLTttdcQad3pJVog4RuIU+eK2TwwTzi2E4v9CIu+h9hzkDQ701Qcawu
FIointLXAdtvjgpBtlFg+4PixKBorZv/W0mXQU/7pevpdRK4FMBMIFxX+1QAwOmCOO/8JqQb08fn
IGMJlquYGO/M6Nc0aBo2IMJhaIsd1lb0ytEXgTZAI+9zHj3UGb9VwEvXY1jmWykXhGQD4StMK7CM
UW3w9JkeKXVDI7FKIxZwb6LMK0hVpG7Hm7DBLsZXO7SC3HcVhH9Wn0YAePDD/Ht/x5ifRKB7tjtZ
YzZSxnVB5PmnBcK9+yC06xdBDYg7TomBrNfRfTxAVcZcE/H3zjoz+TGTlRVm+j4hyxdopBvAb1AQ
K2ra1Jk8ma98W+AhWBTwGeG9z6NSPugPOJ2ofLtT7trqyI2sLcTZ4ZRYSwOij55NBLz3f/Y7c9PL
bfNBG/wi/BYDFOFO89NOlCaXwo3djHsglbTNrlV4Ypl3NR9jzm7dGsoKZdUxAcaQjwvjklPyD1B0
Lz+B0cvthJQp6PH98Nuro1w8UjNjyLn/uJz523Egbtcbyw8UhAHiQHotQbAqCGA+vn6tAZFwqBpT
UO2Eo3sf6tgKYkkgguqLoWw/RZqChjzv9VTuTOz9L97xScZDOPr0r2oTEe13BbE9PfASu7IngVcm
rC2mUKJ9lkuAuxSDk8gdk6TVUbk7NWKn+dEW2dMzqkdgrYhglEq6MDa9ippyS3qQprd4yRJJVZ8o
7HfAY1iv1aeEF1Qw8a65N8tDV2ysJAerscaDNy5uY2KwyRiqP3KLtGFo2WSlfKH4j8SUjLrtac4C
uwEBwWWOKbs29gsuA5+wOIUl0o/p+SeRcJSz0rJCRsYTgWs/2TTF5w6RVhB7Wqu+lJqSd0c4Wjcj
7GpDOhRDhGtvbamIlk+Z8vGihxeqUbfRXXDKdwPRFRkokS9eLLoyyuT/1/EAZ+mOwfwCfobLBNCY
U5kfte6Nqm7qKXbZ3eYrqDPNCnxxQ48HoTxJB/wAkanVc/QJazdaK7RI9LH9fqgaK8CJViNxpoKv
KvQhktT0bP8p+DSWy8breGSj1h7ou6GvmSuzsI8SJ+IijnMMyjVO5OrarQi3vmDuRxYXGpYkCCJ5
D2PoOXa4i8269MgDFojLCUNRWiT7xz4DzjHRWRaHDHgRFo86dlH1SlmFha2pitRK1FzMv5nL6u+V
ezBsLgElGBJHLHlChmUM47Y/W1m/RHcD/Ler0WQxhD/XT8zg6iq2vAHdN8nut0cNFzsdlnGD+Iei
GraqEBr4+EgRT9sTGMVdDa8kOS2t2dRrOE+vlzmNIyTtYitrjrwkRc6336VtoBBZdlQrXcMK2VCw
XUkk9yjALDmJdnxvN8rVoQXu+CgqvzlAfyVwAEdjVaIBgkl6t5MukHuvKaqPBb4YQsFZxtB8sXzO
yii5dxcAkSQr+xhv6Kz7zmUiUPQy2O35WtYsVCL9dK4hWZbE+tVl+v3A85OE9ahJrx8mPiW94Oi6
WG+m7HGkG9Vp+asVMSVRJK1OWomPGVBjXCIh+red5uyriu2Bw6uh97A8v0h93jXp/s7l0pIgz4ID
1iITZB7qOOrERDF0NkeuWqPGEc0gpnZotweaAD2Kv+EJn48IhOrsUh+5RJbOYDjmNAu5BatXPLKu
MvFUF91XrRkhSO5p028fwFLRDT2wN3DZFby/MKuGO7GAYIQGpHaG//DBpbntTgRGQHPTEZh6bBPK
IKIymr8ryJXgFGic09SwhwVcFHoXqLt/O0QT/dhPLtRvVpKmG6dGK/slagvFw/q+55jJE3j4icfK
3Fjffh1ttszAsvK/wXdAt9yzjdTZexgLvlOzIFmpO3w6PpdiKwSo4PslCY9dHZoxlk2FDrYj66+j
jwMukpDGe1rEa+Ee9e0OgS1q0ib93R7+37zWoPVEA/nb3qMdQjQao9Ua3CIzBBqmfqcGnuZlrvXT
5/Zyk2IbaYD+ED6smaq0qDoEoqhG3mKgYZUHNHrxLuTiEovaXebu99xBh+CCkaN9HfReSuwkxnDa
2WCJfmwyPcTJA3pijHhpzpilSBOhkmqoOnqe38+8B/0hxTCQdSjVoD5SV5d2V/Dp1iS5nvmeJtvY
63fcH2Pzi12Q1/J1CngCioHkesWIckWyNQfwJ5cAWWsRKsIzWYy6HBZ9eRpXBTgRccaBu+KzY4S/
ELNIQe1GfJvPAwTPuPfYC9lQhhTUTrjOSg2w0xCuEHdSwEK3RqjIEf1/zJHlR/k908c5LjvU1uTO
q1+Z5DlHFMiaHBAl+uYsw2DqCrjWegcP8vqgB0CGyxhDuk5gQ6YEjTRmQSV2uhxAOTFFRsOPyYME
WLl4IdIl6CmWESpaKBXQQI9MkL0ZMkZkY2no0X2FpbHvKKqcXBQrSJyjJt95YKU/l5FdKS9DXaz5
NVMq7jIGNM7rWN7mLCJ2WIhjJqgYQO+Sn3Gz+fMI3XhBAo8/vxdrZRmdJl+AjaVk4yYAv8GUxc6e
o8i/NTAsm3Xm7u6sGIl1qFq0ZTnAdKrRYLcSLVzvetQxgueBUfuo9hKrJPRjSXm725V2873P2FZr
KsVa78e3U1uUJfJ3q0ignclfmAQSdVkwuSiAY/mXL+h93pDJD3Y5t41E3ci6yACE8WE+XW0DE7eQ
Kp8uAvTQ9CLsLGOuEGOngFch5uwRYia1mrQT1QDZNNkQCei7omS4jHLqjCa+HiTW+UIkrlsJP6Py
OKDUrAiK73vgxXmY2jTVPdvGMwiBn24HjYry0fRRaRPV1mT9ttL/l65VWy1300HRZNS4U+IyRU06
A+oLb9fvi1W9MYlIkKBpHCefiEQXA808+8DhqcD2xcMj6Eh1fWa2IwGXqB2FEInoQgm7EYSwL2Lt
qm8Q3tFjO07zXvWyrHVtICuCbIOKj0pR3/EaEvHMsgi4hcrAi078Kx6i1Dxu5X6bxEdAVFqZP5lv
bsEppzUDbN8Qk1mWYk8g1+rYb0lxX6u/cwIZz0GYa8PpM9qdN9PLCW1HWuQnGNcH8Wlt2HcGgGO9
SVzJhrZ7g54wNrbwGfhW6u/mpHvMj/xjjd7FRO9DzkM2MwsrowuKkd/uyYG43KoAF2RLl0oo4Hw9
s/TKiV5pCv0p8Ub25wCkqlk2yLPWevjzUNzjJX8tSky5RohWrnM3FoXA1R9zJ1QndxBpous2EmqS
dN19HImNRotwumwhQ3LAjNJaZpxkCy2iJmV43ukH4JMfpEf49A87P9cUMcVSlR9RChxIjyOiP/Oh
nVt02qolnlUyz8ElzOxJjl6Rb7IvZs8jYqk7mm1lrN+e5j8t+JX+Jnb5CbXamS9SFS/oyT2uZdnH
fYiMKg8oID0SDXzYu/VvGKSRclJwTPP1UZqyahTzHqpNDNdCdZtL/MEuNtK3AAfkQpgdyOR3Jt0J
J89p8eZ7jenC1uIi4TWwmPbO1DA4xqQRzQ7u0F70XD009v4hZGXwIr7QzAhsCCbkR0O6GBfyh9ds
6XSp99H8v//NG5weAqwsd9abKXNqcCp32A/zsjK2CwBdfx7JXyAr3N/yI452y6viYuZeM5z4wAFO
TxRvIHkTj+aHwB0GEqsnsou6ffsGllICkMaC10odhALViwaKgFWk/K+3sK4geA/kAwcKEcdovA0m
wRNjdcZh6jSNv2tV/FTpkxDck2HNCeQ3YYpZpIuQTq5XgNBDrAhGqML3Z+CmKdqnF0mxQ1ModLDg
IiWzCIX4eJyOEyG/ZHe3xMvQDulGWFY7dtb0QGplleUt3/IMDaqye0JclrEKPBC5QkE54sKTNC6o
WQUu/MQjWoBXXKbgQen2lnd7AFE6CYke+Z3TQwpmbDBq3cfLjNvks/LvqBspZDD4bgDScD3/UyxR
OeNLwNUu3PhYWI6lgiehmd48jAIs+CCdDTu16tBYB64IzR1Xiv0r6gDkeKm86nt4bdkCEishZjsQ
e6d0ycdC39nPOXYT/MpSvPLkQjX0OPcZ6kt2D4ANffgN13WmOYMbAzzjZxRfngqXaUmdQyWt+Ly2
yJ3iHQfS4ZApG8trrUZnhFiEBfecPShNCOZYruCpdA9OWccz+hH6ayKgZ2NtsE7uGpuUou1eqnOi
tp/L0yht3Jr7lYURe0sEM6h2dRvuQlabTfZlAI8YadyiQQTAiEzQnyfdzCatrM0s3xPr8eEuwrLx
g0Xu8nWAd15vIcyDh+ZbqWEai1v7mNSA2Hj6GyZDcGU/D9IYczwHM4RX3R5+/FNtLl10TSr4mOLz
KyHratTnlWOaFYfcUW1CM1GY0q09yIehk+CAtTvSH4vYQ0vAm8Fpo3dd+ZpTpvhwRzlZVJlMqWFg
J+MovWHWZoXcIe+0gWH5s1LeyGByo2hSjmw8m/OpGqOvwv2uExqyjd8vMOF47WcLC0dDBIwjvhOx
Fglv/5v/MKclpPDUEpyZWPNIZjjJ9qUkKsnvCN4zjw/nmqNShd/iovr1o4PvrHZl0fHFfDkqlIwi
rpRXEUSRYqNeQiCGsLy91XDWCDRs2ZKTumHFN4PuUILlOgLiMpf7kdwTWxKY+poTai75WSGqsmxU
SOJQXWrYiE8U0TET3Xcor+cEbVZMIopP46rGUBMrsPpRy0mTQqIbBJUtoGCf3pbcoWVnpkXwPCr3
nD1ZTc1/vnghhmqs0WcUvRygs7Ek6Iq9s9GkTH3n/94owWofsGrXeXaQCySHhHMiIrRi/yVUkxfy
gntWCK9jBR7KUa1A1O3M7zTw4q5myMmrnesZzDLB3mPKVeogdXfjz+Oj1PiwZnHYsKieM1ts/tFE
MuU4n+6SIoyS1LJshCR+2k1Y4Z/jU5Pajq2PqSD572u0+tJXBsWunKMLdbjfs9MsMm6DMwpsluek
7p39n9L1a96yYDBoaAhrHxjPzKdPsroZjHfTLp+HQvbTPRbpW39SJ8ugCnhIgvGq1q2Td8cjnS5U
rl0krezZ4EWJ1IefIDyqhtMGOA0kjtYLbdW3qjIl4uT1V0aRtegZLtMRje6As+a6eHAiudzy5j1r
fJHEpC1P4CRAZ7RIxvBy+Kv4ExHWLzQsq5bQzsyz0NNiA3jkTM+20c7HkHZbKfCKS3Tr8gKMd/GE
pEPrhI6T9sA/I/iIu2RmAINt/Z/GBSMi2eStLXsT2cU/yNyEZcXJ4diox7A6i//KDauliXzrCepP
15uIbaF0qthrl8osBrRWwfY6qz5HyMnnZIu1rr6Iam+QCGCEeyBTR80E9CrYELA8CF+B5Jn1SuPV
XpvqKaVvY0OgrO3s0PEB9vw7J8cwg8SvIWbOMvLW51VnK7RtUimYxTrCPE6jyik6OY6vAlrxhLsk
B/j26yqt+tlpsG6QKohkvrInTrOgyEMogIbK/pGhDTolkGCI22Q1IOQOQdQg2eZEq1C5w4UALdwh
2tWL6wd8KzrT7U5XxbEHsAG0M2wha2r2GO5pH0gnsR50eVx3+yDV0+S0T4tKBNz/OxMDJXCarXTF
C/oz0OlUB9gopNT9LYW4Mr3ZiGXLHstj2g/cW2fTc33TKDElrQcejlmWWeTf4IeuelBWOIN3wBWR
xVnKP7MeYLtzCYJvUVA7PkkVAcSTdyfHwvxwFFR2uq7KfKMbgQ4xHMiCdahFuCd2yhhzGswowdhi
3Vgo001PqOpJHL2jzphZUjlnhjxz/msyteC3qQMYEMT0+sTbYX8foSiI/gOrH6pX7UuRy4XerIva
5A94jO26qvmFLNdP9K4unW1GbNEHDia0DVvQ70DBtQVtIAy8kFoaox2HmHA83CcDXO9nhCO3SrkQ
sb3AZ7fLQpOqRRV1YV1yCJs86LQAprLe7LBW18WsOU4NOkJTBxJo096YrjdtIABqpJ6Q+BInMDnq
fp6efF+qsSAXNa+2FHIc5DMatoNwvXJpG1vqpCgHfw/ec5cpk3o70/wUjgpv4QmgdATwEupq8URy
q+PZa+AhPLHRyP4e3j23B6GQ+kO7oa3N9OqsfBfJJqnWGoTJ1Nbiiz0BB0xn2yTj5WBgBIvJ+Z7F
R1LHXvhCWJQjGc5RbF4wvvrYFitG0Bjpm3apEEDqGRZzwACYqne+3Gi/yvdmVxVsgEGg0wJmZ7Kw
gSkXtD7tRWLCZWpVqiXvjhCT01CDLy54ZVXvg8shRSKRizTdP4PtLoMiGQbjkJHgqFTlrdwhqLmQ
uMRVWiOTljg/e/Qh7IkZxUZvgaE8+l1L4G3DnMHzhCyVb/L9tj/lAJZR2YuRK1VDWDVYF67SNOB5
aa16DP/xAC2ESUTOQxKYUc1UUIsx2WwUgAnVUo94RFVs9WXXR1NF0yrrzlKwHUwTYvD12fxYvwNk
UH6Itwyt/EaCLCxmhvM4L8bUHWphjfifaCE+l5+Xs7yfivqDJaG/wUC/eKIHjoIuajwAy7lSnlFw
bYsmDflPfHHimyOrXPmed+9NochJE2E0yTiwe8UDbGG9c6yTtSrVNY0mfg7+rsJK6L4198fdpUON
JgFycXjVQhSTaDHHeL03NOzH/C25zs2rSr7TqUAvo5DJUkvjf0H2a9FJ85TdhkfHgEbRoZRk1ozg
TAjW8VpXfe8UZx5RdlptqmoG8FS7H/JvAV6aUu/k9G6GqfoNJtc77izpB0MCb0bm0fUHYlsJ3y4Q
8SyBJvnJnBzMsAX+d8XZXPjjlm7/eGCPhg1r3hWPl+myP9Z7PeoqwusMUiJ7UsUi69ETC15UQ1Xp
bJe74awunOJ2UmfiM9t1p67vT0gAkgwXni6zklLKSLfX8G5ES7V/4RDQIZbrOwXooqsKoNuqRsWM
T+uNXbhFdHU2hLs7E7OZFXjQ4ot69kTla7XY5u8grJUAIGzZd8FssRY+3TXOeaaSprcra7HGk0Sc
NcJLAyXKCZKIhqQVEDUFkHeR2mnoIrFEHTP6qYJB8lqpghFd8tJXXcixwmvp+K8fUB3CEOCPUXFU
WcIigUwxihyNNeqtFQHACVe9UkyTv0flLRw6UXtI4Q4GPaXk78So3rcFp1N1kh6sX0/XrPsobNTU
9lEaUOqIGBMKHGd6PUOpwjmGmodsLuXHRDusu8byPs4aX5raXu5zU/U9hINvEpUm2a7tPktB6+hH
DbZYFzT88SIatJ3m6wuq8WZybfW5Sd5oC+6ztUQnyOZH4Ir69RLBze/GJlQI1k9Y2SF9AzWYZpAc
gZSWuNPbfCwxB3uLDLbDsBQD3JAlSmeGZWGM/FOgs945Br0NGwfwd1BWMI6rnQtGnQPEQ+7/wkiR
5J+6h5Jd0/hEn18DkuSZfc8XInhbl2GJMN7AXfQhch5mXOwaQnRsXYZQKj5rWtFowRTxxLWLQleP
NxNpL5ktS/8qzXj+X2kKKDAVaFj8ljFJ4WbxeC/d8AOEkGcJm0tK8EqfM0vQbA0khuJ+na88ZVT2
K2pQtoQr7Qna5aiP2FLpfrBpodSpLOYF7tORFwf1AR5L5DYzCsUUyuXHkeH4YNp1Pn4GVEOh8xxY
teY6d/wZ5qLp4mv1RjtPHMfJDdVmEzbx+3hhme1AMO4N0OfmN+ajpJazNWVlL+8fOIWHh78wV63j
2CMgYExTMgdo/BKuoKLYsDBNMWN3MfKxWUXQvMsc7fqO/8Womeh9FSXGdbCz6gcZbwF/ghszXfCq
605E6mVwgDzDewNKpHE0imQEIsLao6YTmsqkPZNsNIdysPQPPFZ+inxPvbD0q2J5zLrIQ06+77r6
IiJxfc2U28kYkFK8cjV3sbBc5rUuTKxCDeKWrex5tt28TfalPmHjyDs3iHtTgd5Q2/spQ/9tyJDQ
rLPFHE0I1QlgHoV3yCYJA1Odz+rYe7Lvgo3wxMblOA+RZQZqpeOAM/mWUjikB/0Z8fk5V6DOtN2e
tgO1vMiqeFilSkdP8jhpaL/fO524Nb6K9lVufeDOePdWOvaMOmYcRoLL5k0xixuG/VGvnjTYzhnM
+eqWP0gva7yXx4BxGTYSNnXNAETPBVb1mXy5TrSQjb1iat8oeeLTpwfWMSicAuUelrpAtC9FebjU
cPHIytomoYYxEVBcV/4uNCx/A+sSQk3KPs8ztZ7Ba/DjDi/vvokbpWlEAaE5ccfJOXY5ieBm3KzI
4Fhl1TEezm+bnMZpOaqFVIdgh3voT1TuoyMvV1reacm6WjMhRgvjeedECXoHh5WcKkz14wh16FGH
QeZHqHGv6anTKkUhKzsrvNhnv9VKr8SeUzlpsGc7dFAkXNrqXtjPXxR7aaB1zsaOLvjQg6xt/ARX
MVdgQ+G37d2F+zyukrogtkKAt6AJrpzF3+cun+3mmrAtFfmE4Uilep2ly+gWTRr/hWra/jdHPnQU
WR4OshV2zYf+BAobC7a64tjZ6mheQxI/BCqDkHV8f/pgU8bn52D1CI/2mrccM5kTfC8nWnItRmfU
SIwOxemciK/SuG5ju4dpfd3UUVQ3Cof7CKPGNp7M5klKgVB3p8tcTIgcanI2KUIB+Xqig6s2y6ke
D0hrWaBf6zFBvURYblbiw1lFnwMWJ4AD4B8hT1HfUtIqk0ERjum0GFu94mRqX2QgIHyjinM59iBu
amELnIeAZqgCr6LHArQj00EoMWJyNmAt9EliRAnOOplzgsUMu2Kab8xO3hhSAs95zJho5BWfPuWr
Ut+ijvBH0Kb1KbEEAEZMehyrbD11jm/VTA5+Mup8c1bpGXlOISdsAlLCLSGt7gXpyig6zjICuh7Z
JDo+FuRgCdj+slFzxCjjB22cDWOgWEAR5VWdbaTCR1SJVOflN7+cnhDsndee8ADis6fffg4vjyjg
IHEzAWcuvz1gO44MZhQHHYNbpmmcWuP70wT4KfdwgFIG9MbON0KoqL14LlLehS2jFlK/lIbEZcEr
ALwmfTACIM5gBogkDe2vOysJVD2FrPNVoly/QJp1hQR4FGUa2SBYky+LPgj+AzGKH6pgykOrF0cq
Q7Rjhjam4Dj+ScWqjS56PwE7WVNrjlJlZCP0VKMyj8BqjpaaBk9ap2Oc471i29XLdtDk6ST04OqL
d7PVDz/UwCEVv29NvkV7B+ID62RFkOrEopPTRPg4/Ck0DPGRxeZX7o1g6hInIKfyQeKWkUsrAYK4
OCDfPimaDwR6pjXUJqei5/X4dj5fm07oFBl2Zh8WFG3GKOJWdLluDj7F8+gXBL55ubV37xGjzRHU
Ye26D3ADcqqGI6TYPxtfopnhtlBAgDeUrb1++foXCH2X4leEAX6htmRsDh3LJUn11W5OwpT53+3X
gtyXGYwhAQ/DPMDEYGVFlxhxwS0Bww6KqyDeaPchZ6RCRTCE/EENOHtVv+y7KZn3Wtcu8kUjYZOM
j16q+iJGiS5heKbMevmuopA/P/xd+EOBmjb36/A3Pf0WcfMJ9LCECiXVNRmkBXOcuUw0qq3Q6z3r
3ih4qxETCUvMuk2HVjM4dcGmytkxaW2mYaVcvpzHPZy2+rdz/9Mub2CJsIQ/o4136/G6C4xXTh+5
4kyWDa9PVrOsxWhctSFdDsC3nOm6E243blzz/YbCs6iSSaZOnZxyZGGrMAErvkayvsJ4/ToBZJwp
PmjJ7yPqqfGpqJxIO4Agva79gSsV7koAyWyOz3+hdXaj3huX+CIn1oQI2O2sf0ti7Jt81YBBzmjm
Ulais3QK1ECuTgws55Arfw5ki2uXM9jryR73Iylm235Zz18zuVxL+VtAtGAoJ7rYNcWI+wE3Bi7n
t1bZl3VLt9qFUIxF2J3kn4JhMG4kG+as5KHthJ5m5zqfl+Mx9d+kMuMf44EP6IdVxhkEidQXAtrI
5Y1GmL62fy+5dokVWjNhcU+lVWTz13Ax71UjJMnA152hjVl2qItGoe1w7Vf39hDk87ka8HxX7OaP
iRp2JBdvBwP78AyidbodSzy24kV0TEhU+YmvvVnyh3OX+DtzqoutyuDof3dVdTDNBU1GFyiJgaCS
QLDgEbdKnuVgMaQi48QDRNrpx5lqCEY7LsUb+FoMtjISaIh4BRa+z7OcHT3/QH2thqZMARaif3WS
iOkS0fFHEJdoZSMnz8GzGFmmhkK8oADoh2tkyex6yxnhkxs0WFRr77OpkgZXkZObLo4kfOpGG8K8
RD9FB9uPnC1313H2LVlRv0M6RfTH13t4CUMku9qQQKvlJoPSqde4CV/Y/vOsgYRNDXyUDTWLucdi
jXVUs5bm2+g+SjW5Crf79ZpNOJM7zHpRCWRpyrOJ/Ddws0HHDlpF3KANjORySkEQQFtKjbtMlFLq
s+p2eNa8/x/pmGivglWVGtcsKBgvwLToOtpnoDUDBkEseI+yj3OQIM38eEgD/Do5sxjzZ2togvsG
kUiQl+gTYuCUjkYjnPY/qvENXXSQhf6i+5Pe/8knw1qpxZauc0ykzRzIc2tULiUZs3E6gmmF/IUU
mVxXy2Sp4QgvIV5Wi6Vr0i0A+Rxr/06JWQUkKKlE1zlEHk/4DYtZuxoI213F6xLj4NZybIxUsKh5
QZKPeEtjYdtSG5yyr9WDhV5i+BgKYz8GGcAv81D3MAxFpNHvu+Uu42d3KEtNb1eRkRyj8SuZcxaR
H/g1lLZEzSHoqEdJVZeck+k7r8rvr0a9QSnWZP1hcNvk5HtAJ+Rxi03NtzIC2mK9MJyTQTZx/jpC
ctdO6igFCERMSVG+6o+sOb79nD5FJqPJkiN7VyHqJH8eXf9Z8zdivDjyloqAJqpjVdfqfWHoF+Jl
izbd4X+QDlFtElNaMQ26EJA+1QxhOVg23KuUAvOM0BknNxrQl1yjHplaEu94up3Q+TaRk3Kdd6sq
klXsrbzAUN/GkXNwDmobX6X19H9BxBrtX+PDPAFXh/7szGn1pxToNQmwt2UG9b13JNqOmA84lq3O
dsSFSOIR89nnwb7X+A3rvmoRtm6svQuYDuLZK7jnC0xsoQBd0+JU0ESlt0SzHq+4nNUIEVjFlADU
qV6OeEvFMwX9S4+LXv45M5a47ml6nL1sRSUgAziGLPNpkpcRvRd8dhvEA8zTHm3WiauDDN/QttcC
Mg7Aym1/ze8GwlNgG88SDsXA3Z+1tplPDWPPzL6ZGnkiX5MsIcoiUX/9kFeGGx3Ql3vrRL/O0o+i
qPtCufFt3qxDqGXUlqL6jLZo8QZYokvpTG5So/QdqZ6AgHkOWCuCQSZHS7d5PEku62zOUIkAFFGJ
daPYQunGVNZqHkFb6kr4sVEunkrlWtjDPh6oiR4dh3bRJ7PtF5/hzq+eLdYu+ZLThy8WlqhghGFw
ZpFGQ+zmO9Za07zdgKt5D718UY9sND8bLg5ri/qNM3ykGwMh6peZRtXdEacNJqD/H+JGT44wz5TQ
MyNnJ1GO8fx7yZzTmL1/hC/e9UxAa5CXUq/EHubeqqPLv7OY4jGDToM1E+1/g2XC11DEcbIdEkjD
vA1H59Elu3uERxtrfMuWvdtUA+ZmmLVg7TcjmvtwaIHjgNF92MuqIgEJEfEqY3QMm1MM8kkuV1H3
RZEou6jaw9Xy60hs5qdaNGqHYjZ8pCnIAr8CfkQ5pzjoLbuMXHZLOXHajjo2UUnPZwDZJDlcYuyv
C/Z09Ws6iJht498lxn0SmVJoVKl92Uxw/sFKhFg3Q5Xr3lnS3qeWEjqMbe/ggJSDTEIXKB28Jz7C
QsWeZxFA1iG6L0angf4MIVf9Ejg0gNRohdOTNDQPrxz3/06LgRfHWEbnTs+Nc57eF2tgvJG52dGd
VeZumzOVZ0C0HOwZpXou+eUrWhOZJ8ghRS+2EYrxO9bkf6BStk2dFQYd1q56qhTWIiJ4M8Bg8JGg
VcsD/dC7INZivmf4Gb2E2puxMk6i7g0DArjJdqq5B3sfBQKwoNeJJGjwlvP0lkEJ1BdR8Trnx9yC
FBRjW3QonJo9B79sNDZUEZuWkAdl1b2kzUDnUFjShowkfHhGXIUb6pKhcVAoRnzbdv60KUAk/2ml
gKnQlx+gYzMRc5SGa9uvbkyeDpa2ewnqZHSvFwfBr6o00XAjxRQ+K1LrCHliIuNqlLHZBY81LdPG
m7T6xchFW0AO5jWE4QK9BU/P1mBwaSYaYOaUaHTFzEqgIQ+AyLZim668gFvtUaZec5mLEiCJjNcL
i8XlxXs8hcX+RLrzcC5Nn2+sc5HpxRr2IAsRwH7hYzZ9p5VrmiF5iwSxiyGVVHGlDhKJrwyHZeiN
5v0lmC5YcMZtTTeKje7DjbHXjxWJF/4woVSyvZDjq2qffvocpc8j7wnIBvL/+kqoOuJQMItfUQF+
Xjl372fKVvXFG2ONI3xOwYKQBHqhOVB5xXRFNbxA+j8TCu9ALNzs8nM4XHCczG2NJzDdN6S/Y8BU
q0Oe8hl0fHVnEiLeKRSYrWJEJRQ1mvO6C/YhvoieQhzWhImUwsLoFa0gt5Lv4pHtM+PKeM/QGQTH
kjSVMVg4F1DENbwVbo3OUdEeMA4ypXajEiq8e+LBQqbWZtTLOVxBNQORCzYhEBFaiUf2QHg8bx4N
zEm5QX9+EylTMKW4nSlRBeHEjdLavpJWb8SUA+edtf1NAwaxne5KCvxhCs7vtuCXM/KXs5iDWGr3
OJ6/s3dkiUC3Ut8F7covEV1Tjk14Br5Vwh62T+awA/9esDUBJgbQM0LWu5mgz/Wv3X2zXpNDEQDc
ySAruWpgPYL8KZNohrPYX395WRiA3h4RuH7dD7GK8vnghpMbw8pmncHQPsnjrSH71KEs97RT8Wqn
g+fKAiSNtsPVh1J9mY7uWj6oeuZth06OxeCKjVNaoeBYT9UxWWE3H/hjZXFXhQosji711n3G+cFO
s8DeHm65huLKu+C3btthQj5GIXt7TLLtVm+GqMuJQivQcza1C4IBUVtu8rkP8A87ADyJ52xyKFqM
NcWItC3DSn7HS/rCdg4pZCac2HyMi0X/qbF/ULo7q0N5i9/ib6V+ea+V2Occ0lsW9RM2jVwcjCNt
Ges7zVXX7Vk2+pmo4QOcUkuQ4vKaQrK+e1TCiBl/EAuUaPZZtiLr7IW/2zLpPfbzOAXKmqgt2fkC
MX8fiIotVr9CXRlOHVYnw1AelZjjlYeCp8NwlqXAob4MCSisvD99tey7Wg0EcdAxSSZffCdR4e8C
ZJ2PEFjt3kR9G5a9XQjUQ8A5d/8z9p4CssibycRmPz4N3jPHKJgPjZG5P9jOOS6MgB3TFI33LWF7
fPUsoxhnS965kFZTkI1fPx+07igA1KDgnJbTumKX1VbUbgYh1Hn7dT/0enkMnC6k/eyHtZ5lSOxe
5VOzyYMwFEQ7nSI40IJBpIBJ2F12KQLY9lhcGdzYRLj8EKd7aPV96x2lrcRprkGHoeW0bf/ccoRL
+//wy8h3gyjZv1g/NVT60I/Xg2K7bmPYwC4orLiCJDOzEo4LfqXNMDnCHn0bVvBrg6+jP62nsfCX
NXqFp9PS42E2KOMlD6UkdW4vOhaZrjdz84kGTHhORy4U3M87HwYp0B2XSgN9GpWVFGIbTmFMSviT
uyfIWeUGiuRqSWa8Oe+eV/N/pK635Rn+W20MrcqyfUqFdZcognmgC5tBF/e83V/gF8zx8o3Njr5y
85AW6eo/KKIO6U72/QVUPJl290fkvN/AapkMCQzCH6HhALxVC2JNEKGDy057xI2H62kkgIHJHyPm
wwYitLE2g/18Hd4GdTE+sXWOtne1Up1NykrkUj38hFVKc7WkZI5QYDnQibxy0kB4cNdmRJGt4uSI
+Rt0iiSOUVZX2a1G309lFRJiKhbOGsHz/tWyUDOJVXm4oCzwtdh5xdteo5NCEjz7Y7wDsBK1AtK3
PQ0PeIk3YxH0aPnVweNY/Z4kG+K0Pp2HzfjYF5DvVEnqAdR4jGWkSYOsZwk0tYMpGsqm40bGNFmT
Wfil3lgULyywzFUrY9CZ815zJEao7DVnztkw5Nvdb1RZGcUznXhTEoiX70TKouMIwbWUHb8ckOtz
FYGYAqxFPaJBvXWKukLqR3NcVR4sE4uLGCwhepkuDv+CpKrejBQVm82kx9qdVxH4Z09lcT4bNXx4
1zEjCsk9pjZRimhI76F1cwilPg0A0F2fOJ5eGJsSB8dbC6iyNdxGi1YV2KBY9iKw27xCNmHw5Zg/
NipGSNOBZxWZ/D9c4G6mc0Bq19G+660q2fjOgcqt8uTgs4HnIpPfkju1/POxpsf5ZpDl/u59YKoX
8ki3cCTrsLYyy2+/0IcAYHMqVFKMbwPDiUhL1nRqq5aFhhydv1XE2Llclik6vEXg4GIo3D9KdHQs
jOAoWNqnNNPebazIsvFCWxtG8D06MlT27ZP+A6MbMfAXyxLzqdkP7g5Wp1YE8skDnA7ZDArjQwk6
2nEibmxyCiLh24EppRKzlQ9mOaQ88v043dgpG1ddmf1pIEJRMNKpocv7l1JbhtCUeo9sDZTmXDkU
WH6PjnVnQ9pwYvmGYRyWF6CsNu+WnA4XcqHAluB0InvTE4j7ljSR1EpeXgFAyttOdR1OlhJPuCWd
USDleEkjbi0nmt6DDjymx9FRBo6wsShzHZ66jtI9jAMl3/wQf+5Ma4R7eSouz06Zt7wVj3orp009
ZuXcpcN2ZqKOZ43X6PX6sD7ucSJsei3oiPSVSD0qo82YUvE4vJBMzpMeV1X09UerR+QAenyKkI1f
edmfMYBH3N9lPx47x8jbbEtg1j2HRp90AnLlpWmlcJ56I/QtYa6kYlJ0YKhT2JuhIEkdGGLKaWWa
Eq7us4NaIyZ9676sZyJbXR6px0MCpNcXxqcFjBrT4+01g74q+S3Lqh1zif/2k/eaRlyAagLARttZ
DtREVaEM8UOtBhJKIeeYYnSsaes6sEaoz/6U9uoKajU0vfFCx5JhV/1QJUE1LWwyyiKcuUW4DrzC
MzZdbmcYejk6BIdUY8I7/o1FI79Y34PQzkT4BbLSwKKqzsfIHO8h0cQ/1pkAHexQoTcjHQ7DJLd6
jb+BMHWS51VHaXw1vXGj/7p2OJ7US6AlObcsFRkQgaJqAMHCZcTDqYa0l9klzQnqEhMlizVqb762
CFpMKgnnJKptAGz9B24hz6vKF2Paq87rXWcVJExoU/wGIbWNBa5zTIDcEIfG6a74g85PToKKQjGv
rPh0wZ2YWFXif31fa0l1UAhAeoclyR62W33L+qa4b12sNn9Le769wXzn3L9d7CghpceVlZSNtr+t
hxCz3gM30Bx0EnH6gy4XZepSaBqimy9RgdBztXWn3qCttymD7FSyczRdK8jUuKYym22HXEo3aGpo
yrsSwjPNPkmb0KnPTUEIVqRnyex/CLDvQWqXGfhAA8Ai5XY+caR/c3yYoVO7z5mXKO2phKOH75c3
uDUSq60Kiiul0kpMrkCr6VR2pBi/UyUNeSetJpOwrKyQc+lSCwDlWK4ZHvsL1phDyoBszv7GPJRy
7gNmv+7PyPy1JWEB2HuET/yZNyTQf+9B+OZ68Lu143kyMe6dUOw9K8kqJCzvHW5/LmDMAN15qgQZ
aO0c1QBQTW9+wzVg00HXTowDgVYuqlGhts+8g2J7FJs62oGLuhf6TOTIQcJfNFTQUdgInr5vBqIi
NvClp+Qgfb2r5/giGL9fqmnQu61K7TkR3y2ftSo7fckAvNn48CPi65KJ7wvJr9gEtBt59TX8QBMF
8hKbVnB1WE0xsfIxNhGNAN/n9SWfj4NNhuhHRgx4XysLTkoyzACraiS50BFDt0wD4bLwETpMFhqe
spmdiu/1zfysBRdaFO3Otc2si7I2Lq1feuK6nsx696+NnNbJYYsZqzJE1vYFCzOo4MwQSEiodDbQ
mvNS70RSHgEXjp+9WsTgNLcFpS1Mme2Ed/FuM6OvCgf6R7M30N2DpmzxXJgB44+LLJeLvgn5Ec07
UfPqXXwn1PnkuXiCpqf9HE6wGwbDyj0tnsy0b/I1R7aP1H6Sab4KNgqv9ugX1p7GEX5IX13CyFKj
WNOYvTe3zKNkvFDB/7mcSN6crBujVPnzqVAZAzQl3k8XVQeKQPAFfRrdzweME0tOU2IgJWkg5GjW
er8JGc/Ehvwz2DPiJvfZ0ggVW80TUffcDELkoyLquXGWXB8eAR3IwZ0zT/3zPpsxLsURfqk2Z8Gw
iQo9NJINCD+KjksA7todLsaFwq7CunwJM+/Mn3FNAwszdnV1Rvob8s+e59CIFxHmtRcaoC4C7XBt
uQjI4GKJtAAr8lyELp1x46y8cxzgg1M/2413dbQAKgiEzCENFd1+A8TptHUYJ+dd6wo1dm0JQOL7
2Vi0ozjVMsjrlm55clCZwNw1mUBStW+niH2kkz/WZAZ2OYu7Gz/+emEpB9O0ln+DqVWgAcpkcqEe
Bgj7FAq0xC0yRlwnI3zbSgdcfImUM7iDV5np3nE2napeGEVN7J4lxw9zcECvAsB2iWG2lFIoa2hv
t9W20norV5gWo1N98IdAvVWZk/gwrbGD//eFBCuJW+g6x52p9flLk1Z5ji5GO1T31dPlnp/yxT9F
hi8RAbiDx5WU73SiK83rNv+40oTH1B05XlYehWs6pK6xOkPj4367HmAPIG3uZ35pt2ac0rakkCUG
qu2KFPK3RF4SyrJ9+gzInaODYAU9gP1gBPrF4qdz5UP2nt+JOFNOjOdnscnw2seW1jODjNqyH4ur
qA/gMqSpLbZgtueXFBghgErynxRhqjqML4JhqMgBcVFPLqPkcyXNEsx/O+9qlTWreeNH7RLeDKT1
KNxvC9JTBkYpqc7i4VC4aPoIipRx3jj1YqpaEIFIMAslrZoFC45DDUzr7TDdqRYHxgzbvQ5knyR/
BHazkStEk30FcnYScATUSOpr1+DDjdXIF5SOhoaEkvtAdNX9PSiI19SRkN4i10zF5p3i5RWzVJI1
z4PfjXjgSwxPVq5hRLxS7Zm9R1eXcv6B6xlHIY6hnU00svEsNHM6Rj8YIxhepKNV3d5Xbc30iKXa
l/5weWV9/w4hJLLBbXHBGXJivkNB3Q1uktifwFfaBrK7lXg7adRRBilqTz5lTCNNHP0fctL1O+4S
FBIL2MhAL96l1vxz1eISx9k1mxUwRfPRU+TWeR9aru/Kg7nm7fC2ctDbO66b7VUexcnYC7GG90iJ
EkDbMEeDZVfdkVgDpuwxilwOQHtSD1eqmxWE5yA73jUAWDeegI3g1EXX37ACjJN8HA9CIc7tz7Qw
I5fhsajtCAc/0gIxP7/3BnTPlPyxSEUfLJyy/K69WMOJ5CZx5nORRQi5cXppHTbWw7JVtM55UG3A
RTRq1FehFSiyIB55U0ZI7m+p9wP+BEUdZ/GdPtxi/kejP8mV/t8p55Upi0VvZEnYnBcXj0r4mfz5
wxIXKAzn5mL69j2OvdSZneZcLD0szaJ0/sZ+UCKH+yt6YjDsqqYaqrSlWxmrUpCbNjtgnpIHbOfH
eOFtEG/FK0VqS4rfVoxduFmz0dl/KlKYFV5M5Ghq/XFI1Hki5IS1kC53+adzrdWeSH3siPbpbiYc
RamDSzjq1gL7ZV35voQjS5GsLp0qJcn2khuxFfnm00vrQputbVaSHrqwzMq8wEhA4pQfH8dCxgiz
Uxg10gaIHyW7el6omJtjIZs/aQm8CnRWHJkOGVn9rnPYme+u/A0C/7Vx8kV07JHUS4RwEe3+T+2d
6bWts+dA11WgNHMFOL5cMBlGw7higZBdeq+erXUSA0rq8UegGfv/R9xFJqJTHdI7me2SfyzyAdko
4B5T9WlzqqnHg7Q7bEaoynY0beVomW476rvh9TzY7PsQfWH6iQFs5Jz0ZIsUMyejDzYCAuRt7BKo
BM45B3aity9UjMgR4b0YGF9P6jFmltugzEp4ji99VxTfoYblrbuciY1VQ5WiGvHSC/NSRxnL98A2
TGSIIgCBxDYA5U90ogapwttAU0cvL246Bx6ddVJ+JcocYAAjf9AWtcG1qs8erR+0j67XeBsK7dXR
QWiuejalk6hMNx1QAbvgNNuNdsBQfazgRBItigx0sSLXMcPE1U0JYtYanA7lbPRTnX0ekYw/C1p+
Bo1Q/OLm3Kus3SQaJeixvp6wJgfgV5/t2EJyix199aquTMebC50KLuSVorNp/LEEntPp7AAoGC5Y
64PpjDZtn4fbcrEnO9u89MPuPnhnVJErb1491DjcHeEvfL+J44uQfqY4PG0RlrfogAnHymTP0iLu
ZrkhLuTaPaEqpbmi/L0wAnI6S45rU0/Sl/FqzwHwF1/w1pHA6yWk1qp+Erccs8t1d4WDXOt01nQJ
UYSHpqX8KjhKYh9AaH5uDa4K3Mv7tC5K7pvPynAtA3BES6v3aCSdALWezHakJ0dJGS5Umr7xaPLl
oWTNL0j6Edqe3d5zsu/MKlVM6aLMaMI1tMxanVhRE9Lz1sQWszG6Ai8blWG4ErwmhtXw3X+iPMuz
UFJI4jJ65mXleKZ4ojF2AGXOetlFAPrvIu9ASqM0Gnvr6VLuhU1MRVHkTCMq0oFAke4aR2ys8B1h
K3jcnT3OqZlzpSe7xr0kwM+Fr62dvWlqsZd2wkmAbuMcUd/TIImUKyrlkKEpD1RzGa9bNgUOS6NA
q/7AlwZdWMxVQNwUnm6RpkFB3wyzwzPtAaQ33sPVv2WXoPLtkyMypjP/GhKXHaO3bzy7Ro3ehth1
JicfMoVm+8Ucono6tBYf2zEz6h9z7F0ZfD9oLmpCxM2HBlZrlpb01QbfQv2VFjIBycUZFtmhRoOn
1u+//aZe6tkKE6j52z1Ax4z/Xp+VR0pZd7/NHtW1QDFj9xZdXAb44YeJamT+cJf/p8ee/oj9KYB7
Lvn0cf/h7C8K5n00faLaAPdPzcbb9tguh4V8jZDCU2TEBeg8cDIKdAvmr9zCBiwVfZkRfi87chU3
dZBvE4ZqXTGMLV71nw/djhUEldM1BSL2xKu0/EHBgSLjbswXVRLTy2Dd399cOqHVzkV2fga7Avy6
qUmtXerVlKjvj6rIj9RXx111PnoaWNOEEFDZh48e3AB0/C79Y7x/bCmY5vPYd6ojeEzZhbcO0FYF
muifDYpztsjU9r4YGO1OO2BfVC80d52l42WUxO2KrEhdyp6XKQCRSz/yADNo9nUBTsXGx9XMeoVR
X2Vy4QWBHdertHSnk4DdFRYg7J0B2kF2pQLXLOdDG2Ea2TyD79qiIq5C14aECYtBUOmTreVbMu6p
F7/9++McvylC8CU2ovCnAkqK+raqTEy4TFHhuRfWu91bI1raexZIaD5hrrhZtK9cKSNFH7e5NUDo
4WnSxZ7IOrCCk8pEDGol1EclNNRTln8ACbXzCPR1bENRVTv3LH0mdSzbcw4QBTq1WdPE9FhpJPhK
iw7s/P/895BvC17Lz7GfazHOzsh8STm0C4+zi9ehKUiYO/pKgF2u1h6uRW97trYFr6EIgWT/gIj3
EwoxX5XcUaotJ6Y+6Woknl5zhAeMafZWf5B3Qnwp+VzFasF18J0wQJQW2XXOe2cFNeHBK188wvkg
C9yiiuecFJxnRRxBhVWGLQBdVDrq5uNBYGSPL3q8vt0vLrQaMC9vz8zNzfqpekWlW5ENAjHFos69
kRK0xNCAjp33kUxv28iyHs3JnJiuKHdOu9LZkNzNkRnJYYImmUXnqa1tNvCaNHgUtg/n7gmG0ryP
mlY0tGNwnxlNztlEvoOLJ3mueizAVhFAJB0hOso2pi2mkhBcCgj/Eqg5W0IGeAu+41o7Tng14hb5
W0HO6rXz/DKP/dQmfJTfw7ONj2dLXYhQMI7hhGBKKkTWQrPShHr95NTPowG1MrHN1sn1i6Ym7MYf
Ad6r2FBVu0QcqVHji9XZMIAN/RJz9TYUkk4D46DSyvCkpRrfs5f7IDHnZgV288AWdgkXdux9tDPz
7ZuN1I6fcoRibKzR+M4Vca4MkbKzGYR/p8J6241QQ12oqGS5e+t98zQc4aCtlSDJfxJRYvNfFSoB
NEZ/zpJx5g2/rNAx86NpkESQbN6X3iv8m159tw3Z15W2co61esI+wL9rwziuATwIe8ZIin6WNfD2
OWWCt4w3wvHsQNjUN40mCiZ12rnlW/dojNxG+AWO4qDDZ7Dg+hEn22fgXx7hCPSJVGsWvACcpYci
/pkdUSDpknKpwsl3JWwTDd8yp8mXdByatX8b+i7PKsR3w8RP1SZ3mS+DNFuXbKOB+kBsss1C6Eo8
aNNJlJlaIfXoeFvy/PyGhl+PDFG3DaAgMh/zpWzI4A4Rwn5yDQhtGB8Hgrqv+QO5V89pZwtOCRL1
ayyLw/GBeYjQ9g4btRQh+OfVd6aPDbjW2cugWTZqY/Qgd3uCcCm9RzNCPQfJ4dzGYbhMd7lenddg
5yrA7XMTbDlIi8WSQRGBSBJUWohRG3gc0lv+RQTPh55OEf1f0Mf7XQ8g6wnhDSzKTfxkkqzNVJus
R2UyTNmrjLTcj73JSBUQZz1ArDDKUgp707+QQbixtYzs9iyGb+5m6VrDjsA65bRyxvvIdlvpYCjB
c3pGtmENMxBiLkecj0cMgL+g2SFfG7e86v6QpEFM3bMFrpvHrmUrSoXxQTWtIsMuMlgLxx7BVQrg
yC2IyA5GIG2LY27mLr/cHOJwk5xeG7T+95YTzhZB44tGM4OMF/JVFgfarpYNPHsBcM9uAk+jzl5i
ASlkMSaPYx8kszwYIdbsYeFhqoTnhn0iJybGZI0kPazQS9a84OwEH9nF7bqfO++ZB08LT/XqbX7m
Em/itBmroQb1xDZ+L04N3lMN1Dwx/S/d8GCoLRXIipmxYI7wi5nvkzPBheWfq+u7z/Mvjvlu9kSM
skwH8dhRZPX4ioJbdI3Gf5SPDBtJFqIRez+e20IK+FWpmgsup5xytg9S14jgLqSc5xmWSYCeslw3
SwEKI2ULqULrIhgM0+5p1T+1HOWEKl/55+QLq9sZZbUZ6voO+ol0alRAr6yHKKhqKa1RlTHqHQy8
a5pGylhya61g4eBZ5tJcUhbSsFc+bByDhcdDjtb29uL5L1p67gbhcHE4nXpAZyLkLRwJ8OpEwCpF
7sN7l5xn8GeNRIkd4WqxnVaCk9v43gPVUAv8xdYOWs6sYCHVB1n3m19VLeJaD8Gg5oa1w2b0igzl
x0dD5OobczvX8MxgrSTjBTuRWhL3goTpW/WjMyjAwP4SaYhTGrb1sVCFjYDKYc1GlsRsDa+r0CFV
qvAt0ujQEl5FjN3AYa/Vf9czc90i7xYoz2fb+RhFndIPASxp1wK11FPwvde4y4G3Rm+0IhQIhzn6
uIccQewlSxfK09cEib5s+Vb7Ls6TSOLeI3aEXI2OqH0aSJnZRrSb7Mp0zgDGoWgMHd/QdeduYJ2Q
R4C8xPHAcQ11DLXIrFhGAaNBnTrrCduGu+mDtb37zYsGfdzJ2l0QOBL9HgyeMMqHRNRupvJR9uIJ
V8TO8t04jG1lZI1T7WKlFs4A6ppZB0JJnug/ThH1b5l5Whd7idllwcsFFEVXkKRG5pmiTs+nYkNi
jzL36Ouf9wZpFn8p82lEG7duk2hlyrP7kkNDUk7IWMoDYW3DiMDnlRT3X1HKy40jioVlxGTPZ9C3
F5UkSklP9yKyy4PKHDIo6fxYYbINxmTTbV95iCgdRVZGQrnAyo4j0v5U8KxGfJl+E943XYlXDkNJ
cdIa8n/iMfCMSTPj6W18tvrFbeJkV5nk3gLpOR/2jC6xU66jn2XMB93rvbqNpG3rDP7KvuviIujA
10QuxJ2Xn7YUNgYkBYsYOrOh8r4VPlKjBWIbdr+tYP+6hVsDa8IX+YecxJW7jkuR/QddiTNQrkJc
tJeBdn9PYA0bIWkfo+9fe8vgY3uzrXRYZ507fls1/hGhwRVAc4sFziFGlzOwUDz5bX3aQl6jWN3Q
AWIIs0K8qIgiqwT1sId7Pb/OAyed+G+SKZTvV9nUuzlaeiFCp4p3CyTG1de6M3/iIe18MI/iGZnn
PDVlI8u/+k+5eWFpAbdY9+jMKNeewGTkygxB2k7f/OujmNFypF5cJIynXxg+p6ewOjfA++VPRE3y
zS4OTEeTNvZoMin34foGaczLtvE3VJiXQJjSdD5Y4PQr7a6zVZnzqxKvhYOExDGcW17mhXeP1MV1
4kocPM08PUMXNRP7V8YHqOWuJc3Z3IMU0jRx0VE+QaXJQc9wK8+8dAC9wVClJ9yzhePYmkUt/iv8
vz5B9MyXy8pFIVSwx19U2OSoH/cyif3IZ0TR+OASOObVkEhvp5KWZXxyiere1a0shvgrCmpR7w68
9y79tNQ1x0vlmmb8JIsdaGPpM4g7qoNpisL2r3kvehl6PHCKaZ7q+1mvlKo/KU0A3gC+LuMmMtGS
YgzFgvO90n/Ru18nyxF8nvbT+2uMPLOn4MP4xYq9tlJeRhC10HIYCxJ7BqDDza0SDVnI2ZSgPnIS
9NiYFSaMEF0v+o3bLVamwRUxNjTzyZRrGQEgRPSIIAtTLxkrutA8zEHg+IEZfNN/XWhbLpWn/Dzo
D4WuV4HGLa+77opauQzPUjvmwp/K1+K0Q7PBVmRxrPUXICK5EFjutHuSIEFL/+Urju+dObEQnqeV
++ZW86WazFsASFA5ej2tsw+YhjvDtiD/5fMdIkgmo5/1Z8vAQhIJNiwwlu5QVCOcNgNFCUJEVSMA
h/jTzin34xAJd0d/DbgqGQKqd+tX8tQXWNujEMfQygTzq3WrK5vTxbk1RXuwTraICR/3QvT5cWKl
JSkalkqOBERjWJZs8sAdFJY6IgovBafsjeLU9oOPQ8WNxqj+BTMHPxlvU9zMZk8RajU8OiqOdWNK
GAlrp/e5Mp36MbbXBb4YjITOwEDFfVRWEp8HE4F4SBlDVuyvkLXPrsdYR7tQnBQPNQY9za5z7SAd
O5nxy5WqH4bUJeV7HrL8aUL5WtW/gUHL12jkIl6I6y10rp10m8Pvdw9lDYkkkKtMExA3WIN2Eu4x
JH787JP6W2IneAPeZpIH8kcFC6UtHzw21lgiyHM6z3undG+ayyxzOH1NFO26yzFqGcsr2Oz2c760
XwK3bzZMTFZqHv3DQRoMgd3H6E6MRyWQ8C9Ion76LGJv9MlhYxwKB2fe1f9iYRB819m4oaR11322
vOcnMpZtr0HO2uCnU54gFL2qlFaB9EKRrcjC28dsDJ6+z0xvaw3fp4dbB5TyGJyRNL/Lvj4W57Fn
jWaWJwmdcr5dKt2zF381oZ0XlcirGJITpjBP/l8P4gTJ4L34zjxy33vJ6rkcSrqbGu4imjC+lXvr
g8wP5Q1uKvtyRC9JXdnnVPdEQJRGhczJlcQkZGbwl1Cx0kClZMQbA2UhygRgbkweXEirElxqu9tS
1GjtXcbtmhGVWe3M2pK5NP9eASZ/X1gBQTjIvFuSrNMq5NopvcE5kGQZljuZ411AYfQJEKh6Rf28
791vXLEz7rcoPxsC55SdTevBk20nDeo9yIlaw2wbRMlv5+Kl0Bp7OYrc5N88I1Q1AShjjvjojnBw
6sTkjQrvbCbe5xGNSjOo+LCPh4lCY853/koHuU6A2QAzEx/MzKfdyC7lePLTm/S65qF+J8yd+ne3
CBVXUBfdBqZ1z9zMDaY156i5azHb5WOcWvL2cuL4Ilj+QzCGNZ5r6BKoU1cGMhkK89soQ6q4IayO
FeszH0ifMGqRUB2JpBhmamUWBNcJUUW3scI/9d+ZLg03R3EKTFDXYOmzXry49B2gzfSQkBvqiu7P
4gU4u2VmFbfLIwflXpyK4EKGYbzohLU+jCrw+VpEQi2Vmfbb/gOwCmo37MYnJMl+BjFz9329BgXJ
QKN+utMwipnN20VIJkvFSDYwkWXGgeZ9TaAOLHJHv8QTPwP/Oq+wTLHCz7UJQaw7BY+nGkKd1wr6
RCu8jCUx1EngLfnWIT3NTyRICZvRG4muRy9KWjksgwxFune0HLj9hzsQT0kuXk9RoIS9gmYUEg1z
jJ4QW7GqA/tl1RhMZS/6LH5xb8N9r0zAuXLlfB+8/P8sMVSIt5lsuMcPjymrfaPDzM3UuQcGLO18
24S7YMSUD1viEQyRsQ0i37U/rWG/RaPiYETR2tpVpfNyWmn0DvOHUHvVqgJr3EZLoUe/VQ8UltLB
+94+oCSgzs5faRbUHo9UCet2/epUsAA4Y59O9z1MWj4fb1QdNIWHilKyZ+3hYmIIaHSrEtCZI+qu
v/hpdcZSBAer8ItbsEnCMW8La14geCEkbt5wneZZFw/WDqi5/fVqmb6yLlWeQ8YrckR/jJj187tF
8eeq1gbHYhIumAUQNpOdI+vTSqiMbmAb/hqYW2/qKQ1fiIcauD04ZwZVEyqFJ2qIg1WsaEL3iyUU
1n6W++VEfUldKyvSga3zLMPCGEI1FPoOMgYl3lXxUpMgnVH8cJ75KcV6aTWlISY8KoxHy4IcnWTr
QJBLW5z5bNGOJ9/NO6I2kMb3sQsUXnsD7un/Vxnzs2DXpxlKCptE/R2kRQmhIzS53ZQpmRX+03fp
8u0LN75JuMNUhzLtaYpGObnRnuQ0Re7zC81o3rxUo6qbn89XZq3pLnZDZOhr0JwtdcXx0MUSzC/d
WEFfchGirxgABLI699QwNLPRVYNGkLAwvVyHMTyvMLBzlPcFtrCjc/REaxQjqLUDXYFgB/puaEUB
0sjf8LKosvN71LSuQ55kBeyOLTg9Lw+pJDQeYEAw7XwO4OhghPOdRbpd5hKRrXWaYvKnV5hsh80N
s+RmvNRcybmjVoPjTbvnFMcidrXbxrjTAcgAuq8g0qZOxz2Pc42F0iIQjQAEPmnf41aZ/4wI8TEG
OHpju6iu5EBI0qLT3Ca5SgrwCalJzexyiEtf+4rvgdrg1+fwXtAwRf4tFlrLYNfSDMKMlmeP9VbH
6+WuA4wDdAB6oArT0vlOMhXeWSEzQpYt6x6gT/gj7DlgfHIN2KTXLcgXq8oA7fTkQ1XWIpAY/qKA
ktw19PA7w/I91CVgMRJV2CludwVoSf1WBRy/Ejs8ErNOy7sNZAa6wobBvI+DS476TJQYOSyQKArb
2izRehz9DEqd0jpGAjIA4XTyFpNVowNo5eYJ0/mUSH1xZL0nYjQ4ka1wm7cap82/97xFmX9pP8OJ
nvZf2NMc+isd+eOB98tI04gdChksxO+HmLgfOCQD4dU/XxHXaH88EYs6Aqat7jbtAnw2ZZK2qd4Q
Xw/k5bOZ9SdXT8kXh/4L9OHs1XOtbD6K4iWe+6uqvhKz4AwvnROz0uc4ZkqYJh5L1EsJBupDQluK
mvMuvooGlclhFB65saArTqKifSRHm+kh7HozdGSuaKfY31u2rNQ+LZ3QL3L6UhfiwTB+E3CSd6pg
5dBq6cmU0I2DWvrshP51WRn+T6H9Vg/v83dJuoQazKX5v2gbfcHlzsos7kTzaZIZTC9CdauuIT71
xZOwI6aeqzTAr3cSAdqnuMwpETsmBjgKQ06PLCwVpom2MG5iSBnjRfgSCi5goHj+6RMFu3fctY28
YYNP6jAIY0hr1amjDVDe3xCjBc9nl1kjOlJLwU8AjPonhw8VGO5MCpNf6y7Xay4AqWO/yHLdLp86
VQdZOhnMh4/UQ8ls829WpRYLkEAZT3dDepdXcdfFFRW8xgAHySJNl+x9YKr+GJNi6SnIp7zK5b9e
Dq45mXxnmhshMB7lcvKsI5Gtrfsnrj/PNuzcQmC9ZG2r9Jf+ukO4jwTDqZ6JqgSbqgHtDil1LogO
JmMgTyCVf8PLk42sZA39a/PA7EPoDeUQ8WHqKB7uTk+attVWGb9w3fpySsZzquAitZdM7ddsPVwo
gXn2xwvzEUKhQAkSLKWw2CqbftPQY39+/lD/BBjHSdZBVq48rEyBCHIAR7Ny95wVEgHXu4vSs4wn
IscmzMOk7Z3ZWcjIg4U1uZtFqnDMTYpS/GqivYhpsge7pf+fwTjiSHImmriwnVIxlpb9tv6Wq864
iNmT1kmS+v9SpkmzgijZNAHuSxDfbdltZgmIGzvo9R5RM0WNrhKyPtWSk4GnkS04NrFKitzPJDXH
lLzks6WKtd9H/IsnVs1TpgHMuhTl/J7TIVsXnQhL95ABWjr0owVr/iRUvjWJfrrqXxXZ3fNe9DmI
KfLZL1kmO/7TN0m7kOrBod8Sm+L7bXmzcAePNsHrso6rEwMeDWxzBzR20FfK9qH722fltkY+vFp4
ZLYybgMqy4IGGGP6ykf4y4EQt8yzw9c9SZSJQ54ZTBxEJmWWEWFpX7xBIS+a4lcqIvB4v3TFj4q0
8j7VLtKuytd+gAmHS+tf29PsQ+v7eI9XXbGBxBJsbPd14l9xrjGDtrYg7z3m2/23ikxggGI7EV+O
WCpTNrswMS8V9RBpmq1K8pkEg6ct6zgQv5a4BjLR8EG+xtejPdHMrRqqD4hj0fZP4ko2n9oHY2az
vl2HT1JAh/umzzCkfeHQ+JaKCy9yei66re8Dt7X2/rDWaID5bAXeT1S7ECl4GWUW+F/3rnYKW2nY
8eZ/atWva2xWRbzwW0wdFyjaQZYenzh3OUUS2dW7MxzB/0XIT2nA339rFFV9Dtlcu3yLxr+P0B5P
isZx+2d3HWLslr0M3m16SpdWv/b7T+mRSbBE+nyfW3XC6grkkCbq0CY8enKNn8zMWuVEcpLl5WHh
rDbFfQMCjzwDDC2jdubNKh3VnH240YBrYAkH369V6IhaMjyJIbKZLek5Zhs0rAiTJZlVdEyUxhb5
FHy0bdzuF0Yi3arOric1Qau8+5wm62qaa/pkr/e/4JmaFqOqo2Q6/eBPM7kdiZRt3gD9o3+icVD7
CLglEJ8IVqY7l386WbRwBgNw00IoFPb9PYzwMNrfOC4tvOHVIgoUm2hpnJ6YOt4Ucyim3sQ8JiG9
oP4rEuc5CoqFq0x0PpFB3k6a2d5HBDGX1EQqd/OgPPkjWSq2Mgajwk/zDiunni2TofS7Epx4CuoD
re1mFOH0jEEad2hU1v42YfTXc4rNch7NsM+C8YofFkyn43YHgotgQyKGtAXwo6mKNdNG/hph/dpH
E5HKaCFVFY/6HfcrjvzV91ioFlHrxo/P+H1yqS0JWEyg1+SPDtsuLLKh8ODfUXQIRHERC7YwuBVq
diJL8pyqjwrPsrOodu47icFNBbApyiNdqOWNv6GlHDvqxp1GOWuu3ksHs/4N269KDYvpUXvlcc2w
vLRTis9jpkhilDbIEGg9q35uyXlpDpKgq09Kovm6s9iX/+8hk/9bX6Fcy6Eb5J98w6QQtJWg+nKS
GhD8+uDKct10PHW0k4kT08GNuKInTlRRPXuxa1dWmL9KMjIBNv5tBF2Nwn90y7gHQCdNYaGh9zsM
0rzIyyvmilfatLy2Tg/Jfp97ehz20JYA6eWi6vY+5fpgNDzlZieMaUqWEx1z5i8Rp0Q50SPoVG0z
B9SWRRH0jQiu0nmUg5lDbC2jng7EvZWZboK7fidIZtwC2oSemYfXCpjIYvYYVaHO0uxukzzU+TCe
A5un/Y56F4Zy0Mbe51uShgK5gUDHLm7GQzERHU4cCtKYlhW5pDLJ4+o9IrxCBAUL9GVfHo1pZne5
2HnvpuGNf3lcwdQsZoC6g8atTIooa3/S2didraHd1/2pnntd8kMkuWCxowW8IRStpf+Xv4VREP1d
o5MiMmut5aU5qRIjIv5VYRPVJm4hQFtjbnvidiOMdBruWDGil70PU7uUnrPXzitm3/ctLMVdGBrI
tKKjf1dyXpKkuarowoAFnPP5/r2LE0qv0Ctqbl3IMO9Gj8lBcp5GsuZVSzpX8GzUUvHhe6Ct9deU
28cmkZqctef/FazAJbaJSAq8bG9Goa1Q7PeQEywQlCKZbxbbVN/YCP0RWZpN+LJ3/4S9nYd8aPnz
iJJTXcCKAehV/YGnL2rjP6O77imsyNrC5W1Y2gHjvZkOTbKHeroV29WU5mWnrCVZFnNf+RV4iqKi
KUrOEX0cYu3ueR0nthD8s4YDv2iYObpdqO9yvahq725KWC9tzMLPBATI8RQJ0BCMBZPCDg7e3uk8
yN0wbZxjJNA4a/fsizGjg4IWtzhicu9xHPi0wT6YIs3CjsPI1hfiCO5/gxEr3EMgm305tQ/yqfOP
pVrbBLxVvSbN8VeGrKE2jcLv40ccZTSGB0cVNv7yh6F1xySD3CBaythrirm7/6NteFeJ1chCj2B1
RzKT3CN1tRL3DTq131n3aBlNS40jsREHXq30sdocQjRAq7dkhPrU4ioeBGtrRsrqzFrXLrJbNwFn
HNU5XMCOqUzeY/pMIAlyHDmsVO1X0eISaLXV3CX2iTO8Hasv/cjjiw/cyw6QorHdw2Ga1RJBONNM
Ne+s2+t+lTMbngpPunin4W/BcTKjMGczDnVqzbwxL34yhVdS3jXKqUa95EAmPdYMaUTiWmztJY/4
sXXdcmCquYpL4K9c7AWTjylonK4phtxhkQOx+CWVM8JbgEjEvl3+OT8Ho3IrxbLfNvbBSKOHIPEh
+raKRSHk099x3+HfAPyxgwhyb8y0x3FoIvRvSPo29jAiWZCjwIMJPPGZ87kbPRkOEYYzAe72zr/c
A71ILlDXRPoznBCE5aXpZurfvNBOZH740IVd73klJO2eoEQfLhU1be2faDZgFLaGclTHGLP4UH9f
oVwnw1084ocO7XU1dzywsSKJOkroK0KXZC0jrZ6K76UEH8eNMeU0bNLY0DWzzvjvjxCV928vjGea
LTUScp7LWtfTT0OB7ejFtXYgju5y1hMSAqNH+hpSdtLw8/ZQDia1yKMwMvHx0QRXlC2BqvSr70AQ
+K1SW1IxhIiE9rmgM9C8IB+8VL1MvyUnRV6dj1FQJHj13Dt+srOeRKh1Go2a1OPAaIsKdkC5qFb8
Av5ZStoMvFKQaPRZA05abDyWr1RnmZX2Uz4tPZfjfLLd+8W4pExqH7fX6o8uYa8b5qS//F0Qfhef
7X/jUIn8PzsvUKkg+cC2EYaBqOGfHKJrhHBkhlmPxGyldToj2A+1AW3NO67AawY/zm70toQTUft4
7WOYc0+rkMqhSsrHai28fRcf010JBe+WX5SQXzhUC+qMeUoBFwJzZulBRHlNZaThJnDqJjzGRIeu
Gv+L9AA+8zpoM1W20j/hjeYO3KumygHyrGXVOUKpEBVEJPKnb3iajAh8D+VmB4cuPkqtbi9KT6+K
X0Mq3jLm/iBLUbgKBXcF457nIg+IIVdY1kxbtJfxqNuYJWoQ6AT2XtnPgmMs/3JbB/d5P85xmtst
ydI2E789BWYMpHBoyrnURXWRm7deOWTN2zevbHdY88LuEOGGH57UuCdDwOTmCl/2kxIGwjsIVZo5
zG8IIgOf9+hTTSE+PuLcMOFoKRiby+6iHODQIDkqiuHZp87d6kiZuycFv2+1QgUjdE5ZzI3+eSha
Hsq9fRoWsMfLyUv+3jBIxBPnTs1FD1MZqkXopfz9G46AZDXQv9x5ffHgFhKc89i46K1qYcwalIhr
Mq9uNnzJILWI4VQ/TOZ+95JrP5tWY13xdKlkeMaY7dAQUyqvzotrXhMHH2j0TdjTLScTQ9eOYEOx
jbPji1EsKogDtp0wyG0yW1oesQTUWQzIx5XNphu9LPy/bq4QRJ3QM7QE9L+vU6xotWMqvqNb9/WN
HsUOU0PUSa8VakDstrLXQuGP7bzWl7AfTEOGyJJUutgnXMkeCImYSFbY/pOxOBjKQfciKdOlHZih
tvFgCMD3FZgy46z8ohzrNwUVckJo3dYD/Uonc2SbYudVeJoPugkEmo3WAYk0BzmRqzQFiyXfyqux
oNAp/r3fU2yg9hAgsQLGcdv7RcpkquqOLk+2h24sPXnGVJI7OtEecVMQXBrTvlyKgGslFD0Aeh80
wovkv6w8NcD3EMVix0D0MLmT9le6l/V55iE0MpPHKPShI+fkMRzLthY8ndqP4E+XG+vFb4znLunb
65tXoue7JHgAheHGTQD8Q++ojn7Fgz0o9zv8Y5Ytu0Oxk/ZXtza0Nuv0VCTHpulfVXTiu+pu2e9d
kPTvYcLhlIrnKf/MfGFSb7LVWr2FEYBYl1GQF+adXFtAW1xiZ1Y5YzhS1IgShpya1vDtbnEngS04
9PucZvxMkU6VPVAJXH7psIoUZ6HcBD1tCaYD30FGAQtKXUc8botFB38QIm0j/5JBNxO7ZFDzX86k
STBwiTlxFK2Snnr5bQBBTpm6JvGptvqtqXVYCft9hmYcqxfeyfjLIEwHR1mpn6x0OK9TkJ1mnHTB
aPG9AcsvGFATdcVXLIVQxFUMjqvxwGkj2Mfl2q5HMDy+4DIW7/8kNxzxk0ulVX4i+eOUMF4VnI+x
Cy4q5VtVExhD0Cyx8XZjsDIv4WygszAqbvZOw544taU6Du27Hgd1cpgBbiErYLdqC+9cLrmih6qZ
Fz4zuUOHY+HYryGxk7T49Bcr89fa4UpG+KfdwILBVOlbAIutH44f7Gi2owIe641mDHW0XqBHz2p6
BXiURJD9FuMpLMaDgzai57k7H5z5l+YILwqYW5Y2GuEv+ywpHwrZvMzjbUF1QcRl2rM+lp3rdh/F
dPk58rqJB1D2AF1ifi9vLP88ASSY4YGSxKbes+w6hMF0HQvp5T2+GPCAZx03N9F63wrPW2oZ9UM7
5DLRHMziLpN+JOdxme15FrzDy5VtHfzpuPHxpvNRCSDPnG8Q2VsQmOSfo2uhKRBbL5W/bNEpl7rA
0yC0BVw/U6n7stkb6NRptBMvWvjKi1btmsOTjF5c6ua6OOBuWBrkE2+kWkCx4mCYz1/Kke41NLmC
VfTdpnP0k+Yae9ncM5vVeoU6IiQOHRcL/rqJHo6nK7oaHNkccXPd7oyBMDdPEwQj53dcypOPM/aR
SbJqQt0ZmZWM3Vky1ynwPUoCN21HJ//k1LAfrU6kmD/+j9fuP4uJJrjoYR0/DeqJ7BVkxXTVJ8nV
QBY2sfLpshUG6jRHywgB7B+S5Qunnjb6YUfr3vqkY1MUSivTmcIzZ689dUE5/7YNDcNbA06fN14d
G8unxyNuYI24I7YCdraLIK/QthKw7H6JB7HFo/YsChSMCEXOWmYkLRtVoAUSU5sV/8QXYxWGU9+M
t1/ixn7qudamoSeUNrFyVIfUiJmYWEqk7JWzLvfjOBPnEULyyywzSbs8rGNPeZwNS9aYQrkApxa4
WUzsIrtl2kEx7LXew+Z3giJr2SgJZ+NJZr4ea/vrT1PdQoEOZmfzarer3rK2KFnQxiTtxUKI4v9U
g7JPuJuBrbpEhhWb9uh6Qvtu1OL+wZ4oHiJcNVmjauhGnG24LM12flKhyvJwtgJUhQgIMVadVIpr
Jj+TSQUc/lOwZpFtApUDBxBUjhdGvmAOFMd4CR5OICjF1mWssnFiWzXGZ9EtmWbAcG7TR81WPmmD
S5Lde7UzzddfxRSTfnHaOf5d7dsuRHOQZbnl8pPsZjHjW4a3FVd4Zh7Ld9RMuDhrD7yuO2aGrVcd
X9Pwg6nLUhX2uxSyaibo2+Dlv6zjFq9TFpR6mwSj4RVtdX6EkhhvKQTfRIb1lJClLo6L1Rckc9xZ
LvM23EPZTdshRdvd7MkTYv/uRJklmPiEP0Um4DyZDRKw03r73E9fEkpcjn5jHRYjbUX0c06cPVI2
ROhxFmpcEJ5SuEYephpSyiJM7ZSxkQn+kLDe7VlnBa2F4gD9lr2r9K2v3sRfNN0l7nEnJ1qs/MsZ
TArWrS/eRIce+P5FsznB8j5Z3+hG+myPBri+Q9C8dZoFcv7WT7D5Vnu5ID/137/8z1yXRs9eu9Nk
f6yxlBgAA3xLdy0y9kGgEGrpUdZIMpNpPhI+cfVYvENmfSFBmBL/YZFT5JzTmhIShw+ty4B52hZP
JhLTpvZcfIShYYPhSj/q2fJ3bDqIT5+/peqY46g8Pq2dN+JVc1YsdNbThvQQowBjNadgdUPGacfF
E9Fu+x62MQdRMOwypIN1cfyQk5l0UULjxavCR9FrpHTViBUAb/CrhIzSTWJ5AvL5czf8W7WdNKRZ
32AdDOmkSS5vPWSDHYuUH2zYGMh3Jq2gyc71BS+owl65wbN3i81c5FpbOgfJlRGIPmkVlI1bRXhz
lL7uqWFM0zyr73NtMCkukRIX1cc2Y7yxNgGdHj+Ag33Z8AVYQQ2W9icWwatVVKmyYRZLfJ+9HmOl
Ik2frJ6HOhD26er3P4FVtVcf1OG91aCnvu/w1zUUDQ4D8fta26pRIaxRVDr3KNLVW0pKjlpe5unE
ROVL0MkJCAv4NMGGSz1Bfj0VpGjexGui24z2PJ8Jt4wOUjKA/0J7qIkcSyEBuSSuqQQDbxJBgkdx
po2RTrdDvwOvuMc4gmmwb70+NC9/NrRlym0N29l6NdR88cykANsj4fIr2TwLZwX/o2LS9ACMM2UD
9HZFxtXqsWBAJGyDGqT+OQwVUBupGpJsU1EaoHJ72lAqbOa3QGPq15ASS1b2UPwuiZpxsEFb5GyT
0gOG6b2f/a1uafWJ4aQ7PWOt/sU5zUSJlzvl/mS9jNr3h+49ySBcjokzkISuKusziRciK8Aar/iY
00VHc+GJLEheeg2dWFCfbguDZVkwt8srEJ9xux/GhZkJJNBSq2hK5YYRR3d6F7NGR3XyzmIasDcU
o6EnAFLnjYX7sTjqEkODLfrXb8irv3pVATLaeOmQaSQnpwDuiWwsxumVG6Eg2dE7SxEun36ULgOK
ciVT0QOmPG7kmIs34AWSv+ceVBy4whpxjUc+yO4umxAzYuocoikMzPcYsisR7akAEJlgBivWdpIy
mU0grqNnpAkYlwGjYCw//4dq+xQ1xt8X574PlkkR4enKEfcAfuFPv9u0r0Z4q6nuLqrl7p1vPMhK
e8PgxPX18eut6WLVgvDAeYSeCTMCYSn5hIvDkmrZYMnENfIee867pIUFM+ktugP4ZYoKfmnHHyYP
Oz+RGklCZ/riZKmYIbULF1Z2pz69JpnZzdhcjy8kRqhV28UR0DbEjUol8xWWM5SiIn1z0N7Np1Fy
9/iZvLKpb6WyDEIDsAOb3RlFDRqT1S8oRJjOBNzdLG45KwZcUpP4gJZT/IlWRtqYkCsY5z5E6W92
SFb1Y20paUFMe1XBJYhgYrRbdGGswGhMyLL/4GxjyxR7ON79DTU0K4maWQAP0pD4Btm/1gkvRPFL
lV4PcoSo5FL7OEgWP76jbfDkf0gfR/VxdGxVymDW22RAgUA5CChJffBmvAPDEGlC/onGtygZkyFM
bJG8Q7tL8Vv4O33WP+5NHdaMjgz3Ryrzx4IlMEKHux+OckynCMQq9xAgPotkhylqTXLDjSKvHU0W
FCY0bOfDpKRPsstFZlb0NPh0cCNx5iFuLCLqV2Ifd3X78MNnB8UJWm88udUphG54863XXLJEecGu
2xtoWCW1QYR3cZqFStsAIEfauaBzhVMDwKNMGXlfZoDO/ef7Foy9zIkpYTMnIOBFqgkqmyT0/nla
7hH8ayrn+EnlRx0XdSXLWfoP9IoPUO1lL8meE1kgUcSefAqxHe3iOYlm9Jcn8L5+JhOz7G7QAjFD
h3nV02dvZgzqpM9GzC7m+nicU0Ukpc2U96PPRaS8qufNvb7uVBh/ffKMbdBmSHGgJ1AcaARGWGKp
z27iv1Ag2uuWjkxMALF7CsR3umG3LpyE9f6U012gpbJXoaLnO1UscQKBtIpA+TSAfsLvFuAGI0rJ
tue1XCU/egwyqmq5655n5fiCz4+cpPJwhoQpmTHCOUnO1huyBFCHCJQNpeCXlJXtsz7iZ7OwB7Xd
k90yjNvgGnkv4p9WBiEUjnBi8//tJRjHa6UUp6ea/Sne64N0DRErl80+RfB7+4E6FrjuFsHzIM0U
UVYu1ismNxpm2XjO+B6AuSsajKDuac83Bs4QHD/a5YU6tJo4jnfMbibpxd6m5NxPg0mf83rd+Stm
AABcaVpJKHm9/f8WhKdJoj9v6cNNhXDbn/Ds2l73qFBH4C/DXghn6NTM1N0fv6w3uVI5JHU0dWuE
iuo/oCXy110iR9ON0oP8pcD+4nsASvsKDfF84Nrt1rj0V9Fc12SPX8dhFU/UussaD9k+b1ayNOvV
d/MXGCQKeJkKEncuyC3ejmYoO6t0+FYP2c3vVcfM1Q0tbRoN3QckH1tfj3ampjwfPcxrPnHRV8Jt
m641AEtH/EALQhxhhSc9KrQgKHa93wrphzTVIoOkLa/4QJhljVfgVBVgYPdqJksCBHF38ip1FpsA
4z+7FIrNjmHyLfkGYsDFYLPlEKxcylYaXN1LQe3mvD8sN6K/UwVcBVBBVvz27DXT9uQvuFURWTR8
/WWFWNsILhu9U0R3rduvU345M+jN3kPzAATsLhtONzn9aegWbrZqwwAHIbpfIMZ4ghFCZUvB29ax
5DTQfFjUHCmuoKxGUHOp5WYOLJWNjFs6DzMSzxJY0ri5Bd9ApJpCLVBfC1vxNyAOd+4OyDCQ+NrE
pJwx7u0+8ig9qokdyBWzUJYDQAe82SArJadu/oH8qYDu2eiEOxBbrFlyw5qAJzMC5vEQfmh/zxH/
fwfRtCzg409uUH/TPbgOehlFtW3HA/mw5tYK6Auv2xtLpz5wlFka7nBSCmHAKIDyV2oju9IvmYXR
oy2svnOiXoswLPaci+5EJO/u+fML8iG0r6XS1s9g5YvloxlrC9xx4Gu8zLXcmGEPH1JP/7ltqr7/
JrQwAXsutIbGD4BhSDH3X4aV1p8/k8lBeFcCIdgaJC9WU4PAC4dXxfEWutl1/Sgd8tXoMTcQHiYL
/eLikH0gz7hVwjyWJDGtV123339kOVar8LsFs8Op2WcnDaqP22hQ0rxsJnkQupSRMSdmzb21tJ0y
QZh+WMnNZdbP+Em/f45uxwNCOFiROlfvZ+Gzeytqd1/hb4G+1xIDUGymvv4rzyApG/YpEvIntHV2
Kk1LCz9q18NvjpP3cN3OS1AIKYWDz0Eurmi2c9bOLfMEUyTg1fcZAyPGFQFoqBEJDPTsJs3Lm86D
f3bAu2EmU6vWssHuY2/FdX4zRxMinbaD/TlNPAWE24Dzwa/xVfzatUwEG/GdU2qj2K+HKQaaBCNZ
eL021gh+Xxs4OMpHk2a1pxGQLpp+/dUlG66er6unvOXdimGpHdX0H81l96SWePyAiJ+Ha9FGM9FA
DAKVGq23m+eYuqhGjO+moyDBug/vnkTirR7WQFPtni3I26fc2eMKnwN3QcmaCJODnfNtzd49tUqb
z5Bg4qvqugySsdDHNXuXD09QdFX4OjrTTiJCXYEHZ4C2LmrX2AgG3aVApRSDce7yYOwRSzfiHSL4
cLwgAaGnh/3AV3TG21/geq7JhzlJH7zq/4C5wdSApHpeENaKsz0j4FuNdHbrSym1lP4btD7w2Kfo
jLJ3iiJxIqVyMnb1Bghk3tM2J9M84Tr2D892gGOQN6MbIRmUlcbQnyB69NMqnvUnPON3iRnpN36N
RZl1NiPL8bfLdBq5sQK9lbA1y15UQYdRfVZBcqmu6JJ3JyhEkW07nMrEFCD3EDXTGo8o2zk1AGI2
I7d5APREGbhJVDAPIcOpf+zTlhqa8pORp9WYSYvoqNUnem5q+pt2UlhohCLTICCIMakacW4rmLCT
JhURhqMKglTLeelO9fZE6nJDprxoHhdfSzkfFBLMraxKxnIUA1YzhQ65OGfryIls93vvg0IoeM8s
lY3feqNIUea0k1gqdJKJUltFQRQp1x3X0OYJJWhsz/gHGfKENrJhHpMBqNuU4Sy1s4GbbNWLSfcr
gbawpMTeWtYo0idWps7eQD5XpNujNlftBrlWXQxUbuGRxZRw23WWzBcPza+haVeb3x627sBO7WeN
6wxTZGoeh2KLWxRy0wCS1LEjTEn3EgEq4RQHk8JNCK5KIqvRL+xJ+FpR4iVnKzGLeeEnN3tpZGSf
ukimQAFHUde2yoXlD8pIE7fymybNVse0vpj3oJU3RpKcNSFGdsvp7vHK2NXMaqfc4zrLYb5oFqMq
xSHGB+0Z/5ZfrflGxPeJazu8WxgpMeiRUhQ3Errze1I8Lx/i2jXhZkwcSq4r61FrPkojbY4WwAT1
sNGCt9lPajOLf21jQPxflrHksGMkGBO8gdoIo9/+RK5tuYUzaq88F0itmuOL/oBg/bBba6OPcWyB
bJrZjCWi6VoZ8bUYdCPbpm2gUVWUHE2KVPUcF9Z18k0RuyJ9FtCxa932+6nsYHwNEn/kE59KakVF
+Ocbg5DCq6KSXInWa7irR6gOKCiFp0MsemiQHZy+jL3HiYc7BFsPGriqE0e2bptSwA3D+DrBKpbS
84Ec5+dc0EPE2Q2uYVoMLyF3D1TwA030yNZ2I9p3x6lsbi+y2rNk52yUiuKSQxHOizQ8NbYswFGq
D7Sr/3wQKDblTWrlhIDdENQyY3MsLtPchtbWfPhUmcVwyFzT7cXtvWA2bPVBnJ2Ai/xrM1yU6Nxy
ia9UO248BjZffpmTgLAwSgu/Vc3s8ig0PyoIS218qNCur3XhWNcQDcjM66IU/dmgBm7rUZNBTB0X
Q/5ce2EM9Lj29NbPqJi7zGhMXCeZLHoVhHsGkLsG+r7hnqoJDwxh3BjPtDTsmpYfpeDJey0YGpLR
o011FhDuiNGYLUhFLlM9ci1quLuoHwV+rsoShtM98wQl/ltjJl9adGTTin1WMILFTxQPhX3medsb
lleOqOIjExQPVIZM7tILmog2Xo6YcPzu4Its1GuPcnxSeSdqq79F2016nOW/umeYIrxquSCzKPYV
htZ/6fF9vbqx0fA2F8hbBXYHLIL14YQSq/YD+mwHIWPFruXk4R9X1Fmr7Z/e47s+oSze7tmfbkju
Kgg1nBUM7Q0HvItFhh1GbnQSD6qBfRx6jgW9UCGdd/Cft9WjkoTiKCPKBeUByNfHe0lUSVXStngD
UwCWDtI2vIuyQFglaHyVKz+Dr72MYjDqQCegr/lOr3l2dk9DuNqAWVK4rvjasb4n73KAYavfubBm
Rjd6whRHyTiAmdjRWI7CDgzlR2WQbpof2+yM94HEqWFzrF/hK91E9cVkN7GkP49X7XS3U6UwDPtX
UJbAIo4NCZyZ9BUAP8iIOfC33zp9Yn2gVGsms3CI84vs9ZU/jSMvWAxRfzeENeXfqHhWvDos0H0h
jU9xPOKHu3y3DDhO9EV4ndg2ByIQLh93ciPFaS7CVTjh7pJ4JvL9/311YAur6lAZDmxVtgQInuzH
EjGiNGx3Ozu9AQitrLOa2RsJ6k/RayfiiMlTQaBMbFaYDiO8VadXagtiv+9NA3F0nk4qjS63CGqT
hGHQ1xlhMDZJXyfTatnSNKCdfoixXjpJnNXrmLqzCKh7DNV0WOLT3Il+EiEWPqG8+MX76WyT2g93
hXRX45ffS+PPQbgkY2rnNlm/rvF5SM0UQi96JPtm2isX21fOfLaft1SLrLtu6yuXTNMsZBTgT4W4
8uThtHIbkKcwwaKEKzAkY6QZStICiBCOisRRj9WJs1YwzdYlsBhchie0aKO3+XV4Jorkwgn4CKnX
/Mv8iVfshYjIC0/PtiphOioCEB8vzV379F7XOqt0yAS+WhYY7Gu1bR/RYGsPHFvQ2lfJSFGjCoay
ev1iq8RsI2YGTOhnh/igFVkjbPVfXVjR3cR/9FybBwt3LcCVR+LUaEedbBTjhttTDmKNvx3Tid0P
zJwCdovY9RRDUI7OA2Ny+9G9n1zbMCDB3fXMf/tMyTYk5lio/QnnDF8NEZ6oGuruX76NUsGwpZxH
cWNhNOQSaaiNROYIOoEkZmH4cmTzLJUsaYb/pE1DWREvtQwZdG7uJkOcNy14/rwYXsmv99e+WVZH
X+hyqu+u2YKBGAM+MWcLbFMeUJB6Cm8mGOKmO414vOXMFNUEnaobJYHHUmP7RMp9C34podaO51g+
bfRS3rGXSem2z2n5TixIywZK9gKiExwpR+1STdzhh4+W41oobicCnxFTH5a/cpD1yY0150DCAzHp
P4+6S7PYZFm3kmggDYyjG/kcjVFMYdJDVPlC8iWQNnwixETXghBIzq1G5efY6spBaoj8hvrUpzEv
SNY2LnZ2qsUoNb2vQtJOCeqZbmZRSW6d/X0kG6DjRiZDJG4a5czb40awm2dV/Q7yciZu1l8G2iu5
MoCnfQ2ARLL8D+X87HvNIyFycfSz5LawJO10vq9oVFqTMHGR7/or75j4/Y7yn1Vo72OwFgjjMKlH
tbxbcAEittFHDZPN2YQM6+D+iwE9csdmhwg1/JW7AqYuZBdSZmFts4x82oAtUNYOmVBg3HtleDmX
16sJCh4fR8EFozCu07o4XYBgD2UJMvO41zzwlans3FMYhMq/VbdZZITEHQomR3TjWobRxDBqlzL1
uC+VpzOJJODza4lLGrNj/9ERSXnuKb0D5raijhpwh4VOmWXdYa52waGo6QoJw3IoOIbyDuXcjuL1
lepwzxbhSm2t8IFjqOIffBZiW0l6wcH9nEOSnfr5cKkNsa/UrF1xJE7f1f4Eg7/cAKmSN0P4OXPl
R2TjnwjJcqPQQHZ31bOblONaJefmUfHCEhEmJRFw0tu/pzAI7SFjTsCLSjHUedwCNm3POn0FfbHF
lq79Ai/2KTTvaikOHS0PYj3B1wa9kNaJqgTeYdxlliwglBo41W51ALGSEBsreoqlJ8I9HKbFqDAZ
meMrbf7XMMRIKtA/dT8yrorMFhhr9iY0Zi0C4lZrrtY+y0OVRN2mgDGtjgms0YcERH8kjcm0t9rT
KAQTlFP4RgSEvnJjUuJsuJmJ3EKFtRzDRQkogkVBHaKy0uJhmVnW8vhCW50GgbeUr9z/aI8/iX/u
yTgNLJPaQCTEN4qTWdqLoYK1QmET3GAu/NgQVKFpDOW70WoxzCmcEtYUdD+V5vIw9HP5JW8M7Ftj
dk/lMYiat0TXincYsq1vSPr6K9BqxOfP4TBSVvehxFWJGktpyoa3Ma6+C5jhwChPuIiTAJqg1Nzc
btNbb2KLnJY88LEuVpxSyx7Z4aGN+Dr2+xVWy+dyccY6/8lmYtY7rmdGw7WR1xL81G2eDysboXB1
lYrvzlYG3ZFwm6/zUGcoQtFxA49DMWyg98rmU0O0yQEltKUe9swAW2d/LQJSzzPhwEQ6BSBI8Uwo
bdQnFLUJih3CKWL1xLujiiaPnijbr9LeDYUS1n4/HsFCr13LW0ZRdwuvBI/q4sC19OC1QdU2Vsi1
iMEyCwuuq6GVtI/ktSOgebnoyGadUUQmVmzIwJOYOwfn/pIvd4mywXxrCkFlEmkImkYZDMKZUgVe
tu79TpDeUAFMz3kphD6klexDmmLRYxe+jz134++zzHT03ZpTCbwxdG2nQcy/kXMboRd6XhCts8fX
LqRTZIuBfibGdcq0HvFiBTUs42/CXetKCMIKq0a2bG05dFlHFHxaCOSuFLXVX6YGcVvEhtlReBBD
DaNFy4pR05mEzhzV+d8Q8BrA2ro7sr5Jm0FR++FLcPBLHZC3zTG1BjczbKO7lq59/NBlVSBlCdSv
3NBdPPbiQmnQv9PVLjEb0B9PG+aczjSDutJqaOQ/U82dtgAwqh+v0lQmekuw1/d5cVmEclFyK4Cs
s6K/Y/KP8v/TDpbfIz+9aP5U6Wc2tvEfu6ij0UrUzxKOOlA0Ansm03Vlztrq5VjL/BEjAiYeZyYC
oX5Tb+HYGfSR1aoLpTO3FqIB+cqV7s4fINvxCrsJjfpFA7Ihxgoq4hcLy+bE8T8qOreonhZqDhum
nYYYtEU7ccBUe6XV1bduzNLqfN4yn6NUf5uKYU1A05bodNa6jYnqmuB2B7fDXTBqJ3q0+7K9tNuW
3IxZHyUHG1CTvtami5ITIPhxndJB+Fp9AXIL7xYwgwqxeLQU6IqQ2QI4PqcwxS/BeYiN2xUWSRKg
/tTqMrNsUmuDuZ2lMaaOlZOYnfTCtA7U0alXOACPbQSSZZUeQfZwQNK7sffApzcputQQ+fjNXmwm
MYUxeLS3Q4bjxluT+ffaOhghTyS7jHh342rWj50Ix4ELA9ct4Pva7kmJPfvTR30PlJaSMWMnoVOl
j2Rn5GFNDkVbszeCa8HimSS63OfX0PzMv0wiEyZSLls7SPRpl1Wbmrb/PijfYtJI72d1+CVwqEaq
CCYRcL2IdCgNdNSkNgFJjs2Yev/ex3rLUxSzj9Z8k/xw8xzuIxLQ/355I2lAasEx3DXGflhXA4r/
8lYs4nCUr/Ks5CaukFpyuJW6dMIFP6LAdRSkXSHdRY7J1EvcsWJrkuxUiNdop0r7dpW/nzZuXGNV
lVaqvyAl5chw6g17AV0mOpKN3hQyocx8t+IVgim614VG/r7BXgcdxAs3vyXCfMT3cMXWjRYbMatC
d7XKRM91eUPOny9IwhJwOCyFuOrw07C8081yBT1u8ggNhwPdbvOJZKv71zxJAyO5AnmDbYH46clG
jBE7SlXialzeBWEN+6fqI8b3oPsqhCf5h/ByptBDCXyvKQp9nI41wX//OuS7HJyz2Kt/6FZqm6jb
jWD4/bhpIZS4JEtFxdvkpArpF9jPR4FIBbdf94tELrZA5MN/DMWmiNvMjv70zbowaxARKxKwsoBO
RuTvn/2FdiP0QmnwlJlWWEcC8mJAbPOWGnszpS79f4VTY31SSmmffxbj5J6fS/pbX9DP4nEVBy97
FJ95cvz0TAFops/Z+6EQf2HZ5UlGMRpMwsVE8bafxrx82Wh+WAkjnkR9MoPdgwJ6hbkmv55AU/bX
skuqiCP4UDi5E0rYpgk+Gbuz4lLtoQ1egbNcJiiSvJLNAF/UaaETuD8RtALNUlKBPzUQ7gQTJ5cs
uIiJCCOca9trlfgvPKSMbAb8oZinahGsvJ3rXqL/zYmNBk1AjwYREtFdFggzyFe/e7SQN+nGa0ai
hP/b7CS5kIqSTnmbKrhL68XKsIFZLX7Sk4CtIc77EnIqyDmyonERtJBn1YlMiOxPjpGvFMf+OlgS
PikW1n+Z6rYmi9epHWwzMSoK0UoIWbZyZJdnMAA5JsoG1okBKiYWEJ58QYpd7jdbcXdHm43SHiJc
1bGoSb76TBWXMPYFYp01DpdVmWzbR9wyR5aBFt3tm+QytjFTQ1n54VcIphg2J+Xkk7M7lUhxiCnf
j9Yw80Uljp9cWoN99zRSoRMKmGGLu1px+pAzV/29fCKlqe+Bx4ot4eOJjZrP89DNNlNBBxHxE4ZN
RxZNzAjnKQQFgxof+xRH1o2aBlIkiUwUic2yAJoDedzlBL1/9NdeKsaiBn/PhWtadRHjEFUstVcT
krLmGr61Ailo2xa1wTAypWElZHBCidepbT80uv0h+LxZefwW0yts9qJv/oFfpp4Jh4/DnSStSWPl
r2cna3Ocw8btW61GddNssocCiurdVRioUXulaq4DTi1F3owm/9qKp3em6ZUE7pJZgyevIKcUBpQn
CRu8EamMJCpq4sJCi2peUKGtk7kr2JIdJcM9SogQ6ETOjkWhc8/Ly3gLpvcmdIYWY0UiT7EAVbsX
7pnY7G6+X2x4AwlnUto3OBiNtg2IhE3Y4mvFOoLis7pDBuc92lektCYQbW1o1j644LpdpG5JMypX
74TsWvNlkB0yE0yy+VTL6NpcQk2yO3WMhBuLTMQjk0K781ubh+CXIetbm9LTmR6hGET861r9Z9DO
7zjUvQy14VVL6nYjaxmpR8Ki8dgqmt2y4W4Z8awjPzN4E9UNKJWTKC3M8IMXWJBtbY/G8kStP8JA
iYpuu9FvnbdqOycpdzk+TY2X7PmzFHWnmv+I+u+zDslErEMmUZhILP6EFzuGWmTiQMaIKHTG6U2z
uGfI4EDS6M9tLeUeIoJVFSUDXIP/d+fwBIyk4DS57V6zb6K8QpLcO+Pzzb08gzqG5c1Ql/GsHr5b
2gfO4YJkiHwyO1fosp5Jl3zWWSjNGNL3zLms3AOeQPy6G1JzjuywastqIp98vpTAspoqGpq36R8/
qNS6p2ctttfglKzBl01ASghCjBBYHTeTOEurJXm+2uFaez5r4EjHawijYrQ9erssnKJFkUjeQtqy
4W7KV66LRLbNHlG2VMg3Q+actpoIzB6c4JHuC0ab+7cQH0oFj1tXPPn3ZByXa/Q880WTd05CZy2I
M/Alhx14YCieagZfmfv9CU4/BEYcwDxZVGFdZr/3+0L+JyIszRS7+Pc7jDFJ6Fj3HhhwFBKyW24y
kATo/MdcQXdovJxGbGuenOZufFpmcGwxWeduhT1dLiH83t9rHN1Mmtx4jD7QHrANGbP5KL8McpvN
RLWsLmnpdJCYPJZZS+Pli2eLb/WVGR/A51E/yXMbE/Qb3itzNY/ydFhC7A5x8w14WB/IrZNpLf3V
nQbz+Z/TQFCIqxvp87R+7zSVVkKkp5C811zw5B3MmuIbvTxg/CNBlselcjKGgWu6ac571hYEpo4B
Z1ovFOvIJA7/byK89SZkgQP/EiypmeoMUv/sY7L0eM+YLnnet+P8btzpJ8b12XZkWUSGDNNsyHam
vXzPlKs1RHnv4UYgg4cIWpb7Hpo/hXBcNApDm4tzLhtZO1vhtSrVaT++hXfgWW2uMFucW9hD5quI
rzDM9gLMvHPR14GFWrvZHUDLDoyBuKJOlYt31Ems/uECaEIJu1xuKKkn9ZiIRDSMYv5MrIrOQTs6
Qs4n4JiNjdvlZnwUjzpimCsKl19KoAulilr+rfhblPIkpWAxvNgNBLdmpqdYsCutOi0JmEYVpfJ6
MAKzRW79KLGQ1cW5HBCGYFJ8QmWGaQ+EA/G8/erU9SVmORs0v61uIyFH5me+siiQW2e1XiSP0jdb
+FY9VTVjhLY/PDFX8X+DD+crMe7ozDVbXKPtwoH2Hkvm79hHwBSclg7gn8KbLo84zVK4FO2UxHSc
/zEzKX+ks5ITQafFHAMGzAIeKCaSaLDaXhavPTa2RdHHm4qTjcGRGy3deRnla71nkftc47UJATrC
Rpz4b5cV8y/ZO03gYIgZG2Cxmyh821wKcLxJnMoBvS2FewrNzXMRPfg3QEZWwePhoCqPc4WR6DhU
SiFj7kofw9MnVn5AMiQ65bBCA2GMMLNy+3YUTX6xzR93eCVMVX1+1yPw0NQ+/+lQFBjvQ5141+KN
X+rO9UO6CI0NVmhN+SVxjIVzWlbSjZhh1guvZzOxfaVA/UXDDEN2wzqjACdJW3tzRlV49G43iXOo
leAHthWVoXK1aJUCoDhjgMDKq9rzkCHO3NxCbxF85t6Vkddw3bMiaCgh7xscTGQBLXfXup+eBkbK
4ZvI1iqFLkcT39Uswb+qMWyZT/OnkBUfaabUmSWruhAdTIrQP7monTJGqexo5Sh0ZwA146Jo/zo2
1Pg979ivnMweWxMq+N0BF/HGA0fKnoznXLLR6Yj/2rNplbslYDd39LVugqMY/xCNXwqyxyFdTTtt
GhY4Ha0AHyYVa3u3UdJo2eAzfAYyeEeqUVDOBt9RW+Cj0wf1p4lBggd2gS75g+yqqrrRtRgmW872
RMFx4EYpKi6f0II7WzVhemb7hDK86f9vdE9zamhq3ZMdcI6EMwbpPMI24njR3BMd75B18xdbKCmk
amEjshNueZc0asO/At9zWrmijJu0oWA1ZgTj6WNyDDlTxxNPF6DkE7Yio+K6KTviyQ2EChqKPIk6
QaRcYAn2J91We/H/hIabR+6QOUMxfuzxq69N0f04xZMz7c9rqQfo3gfoq829UuaYqkSgevZzpt+G
xANe1Yihh9c+yTU5CKF/wh0NJYImafIQ5dLRuuQTV34yVbiGzyyTMys6SQxU1DJanRYtQlvmQwiC
/0iQDuFIVNS9Ad/D6Adk+kOnhpZ4c5n8CCI4GWCIaDMdyT+kcNvZwnUMoAS30SSFcWYUgIQcTIMm
9hwpycWZsR785sBGiEw8v0z6ssE6tnXzTTQL4oqP8nmFzVBboj1yi3zc7juGMlImyxw+OZ4cGBpN
RaP363+oBYXzK41BgsKBKy8G3DWo7X2WaSKubNSIfSJmikymQFwPB0W1R5dE7QVWNKc+s4XTzkR2
fJ7XkfytqenMfzS8S6VsUrG6bdFQi5cadTiLwAEzymJTWYDgnD3fF/WWgWuhw8pSN0ueXePsSoi7
JgrGD2bCI3eQ6Mmy6OQy9gNcLvwYi2F2GMUT3gYP0AEb7sgp8UE60DPRvxm6vMJdEg1FpwYVqWRH
Q5Qi4CgkRzx86AvBe57BPkYU9RErZF9vVUaSm0H+z8Tiy7IBS/G3PmEhx+2l4vv7nH5rG/Uf0cps
ncP9CGiJ7tFzX2CPs5B97Bd3+SVAL/njwKOrgqjZzHuJCyXBYXAD7ZKkfxtEjwzONYp4UlwTz/oz
hFUz1admCsbl4iTFaGh32wLNqjmhfbJl3IZbslvEjCGpcJq2SNQ/ALebyknSe2y8DLb1/XiimaVg
ufTVU0f62MOCdnz/xsTXEWohHvl6fuvxXAb1BZjz67VvVeacQhuP9xJ7QJ8fpocoxLVoJvk0DP0g
+qpAqEXXsHNUia1Bu5n9vuHmbR2Ujh562BWyvci7d0r+OF51ZbuiVkqvzs40PhTT189+gCoryawJ
MDW06WONG1yLBlRJo4z+AZUW9Uf+NVckj3jg3pkovNLcuz4ZcMbWYYv1emw47DZzLgpJYy3qpH8j
1f0t5csG2C6D0N/8PFnP2frxIYnONRbPDcgm9Mni28fmzxnEsYZflStw9YYhYuc/tOr2vWvL2ry0
YNgCkpOUyFpy1KG2hdxM7FrwMHibaaZgTgxwEb8dot/S79KP4j2G3ezUifSSJfjEg9j4kPKm4TqP
2ubcy3HSugNmdWitXBHWiplRpUiMnEnRscF5nJlw7DZEs/iEPF65z92zGrjSQzSolXfocF70f5xi
ocNLlgYU8UdKWTD4T0WnkSZTWfb4VLVhUa+hdtWDhk0N8f5PpWYv+p3CUdpez4DaEfMNOnhYeuGH
n0fo/cJPZ3Vg7OGzIGlP/kcrwJxDaNnjI4SLnUgqnLcXtFTp+J123DUMsus/DK5kfORxDEn0Y3cq
LaJdI2x/Vvt1UIo64kvv8ZEUKP7BxWHDAb4yXmet3orsFlw7T8VLxTTzbHpQ6N6KVnsmPnF8MUG/
nlNTPhls8BMczMtC70GoX8HvYdh83trqnp/xghUcpMcz6yGZA4sNav4vZUCPsT9jm3wiLsB4xR88
j7XRWbscVAZoMjCjlKefgmiUy6XIA6vcRH+NkRvKoCctWgriDIWvkuez17YCSNHKw+wmpyNI/gZv
2f7wR4BYWAWdormTI8UeTd7fzbNXzuaHGw9EJo5ShCXJ2EBLLaUuIQY4rTaGTGkxDwKDfPWD+gBW
eScnlZ4AF+iQOnhEIzUEPW/UJLBVD7jz/3NbZpYbN9BVapn9XvQKQ+ORqmI/l2uiBQwF3uXSMjMy
F0mXETxg8lfJHZyo7S7kuhFSp4g65Ip0SLAInvQst7evR7EqxuIm132jEZtqAThtXnp0HRa3GpMz
DxBYqaf/+avmhAxt7xhlY36u9isLjBmcEt11xiNR1j4PL14KtT9lLszNuK6PRysJmaWKmo8WBMJR
P7kzygdSJGcMFcfaz3BdTQsiCxiB/m9oHMHs1WrI6N2WH9JbtW2Hrp/tDcKxxQIMJCNqApglJ9pK
ZSu4f7mU3NGZ5xQ3a6N26fP2EZdBWPMoWWt5opANISAB5Cw/xqAfdOPFiSAGj6+GjeNdzncCfzod
JLa6/aZkfAyDTISmRz+4ORGiYUNxMWYWIAtPTrDLY00sZX/WuIH4kuhV7LXDDe5+rVPUc00W9BaW
uphNZliKqgwg4GoCaDQ7jBPTu4YfprOuF3ql2v0uJGbklonwT+YubTiJkj93Oj21nvSvny4YKt7r
L4lOZ13Sv7JzIFU7YKdv+uK/XRJoEhNqPT1qRsv4mSOFWqs23bl/G9J6PejqdowkyIyCiL3Yusim
IHiyhiFBEPpNOd5BKEPf7yydeD4RceYT459ux+Y70Wr2ziFnAB3NX8OkxE7GmISUvlPNnraKcgg7
eT2keYm8udhkOsYgUE2GflXCquxfXZV/smoVDNQAHeUXB2tTC1tvCOguD9a+jl8v/3o0angRUvuh
L6cOUMZKx+/0sd4HpJyXVuMGqX5HHcsycEQ37a/cvI7vSQem8j6SYpBw0MLs/zjkeilPqBMItAFq
r/+1l9o5avptN2GcDyigY//BC8m6Q00pNf57oOuDIOb8poNThp4nztLLaZUVp+D3Bf1pYGCGz12s
lNYjsOE7FvBUBboledlAI8jpGVTK4HF/O1e6WBhteUwcuY/EW4dhGynVYmP/w3XpsAxPkIaDObYa
8xHbm4HEbDP8AGO1t0wvDVIGMn6G5U6k7n23RUNSQiWMvIcUf1WC0PVYm880D7ELzm6OC7jCvlpA
xn1ImJZOKLlD38eAYN++G1NqadeIGJXWOMeyGOIgy4ClGS7UivyT2MWa581QiGOhDaiWUaIKj40G
W8v8AFKUScayeASO+n7+5GWFY8buB6RQZJdYxNxBbn2Phn7SkYnYKeXDp5D6M1jkFXNwYLy+krEJ
z+Fk+FWkMCcIxwekxzbwtNjvrHotOMg4v0fLBEAYt1Bs0Jk29Ukk0xaMl9XPVeYJ7HciI99Fdz1B
AhniHHgU+sWUCh/vBqTOsLCggpoHMYwIFnjzuqfua8bvlOIFadjxH/FE3AA97Qd+ft7gFg368qaT
cRN8A2fcYiRhSGT3rJ9wSpgUfqox0UQ5lBBIVsslvielOIUuoQqZfjyA/kFnAdruJ4bchX1Hei2b
o4xRBaQ8ogCgcEIn3iPIC7U2IDhrJy4tl8OYfTwXwTHAY1z0VXTsY4c2diRjOtTOgXesYRX/sd43
RXL30pMtyUG/c68pss7xkJgPIBzs5KCh+bNuH+ShReDxx7PBzRyI2Oy0zNhXLnpvfxkjlTFMDs1l
p2BvEcw4ppt+ATffgIKkPDkMI5CHVpTyDM2u5FfXSBMLl+3VWHpcW0rVgWNpzRaE7nRcFBrv+Ced
+Ttz/I5FnCdsCULGGP8S2oEG25X3FjoemKdDP4kc+0zOT1Jn5aEHKjAV9DGUGAO3ZcZ+Oop1EOHm
xPBD/VWLPwi8csKx7VJSLPh9hW/L8QI0vaD8A+FW+y0aHrhI8ejYeYbW0SrM7m2bSwqsiY7yXhnI
7v7A5OQBC7IB3YqZ8wpnbmoXyx5S0FBaqLFsS2aM1ovt4FpBfVOhWy0Qs/DWoPpKBr26p51nVDdJ
qpUDca7o+JNm6eCvrOG69D2osVI/2a3y6CmCDnuSSaFsLl3+EyYawTXV4rlUUH4ZqIrlma3H/FGD
TPlhySWmfE/N1KoNHA+52h5ceP/Rua/4jq5Z/ArwcHJdPFYDWfvqnQ393P2UK4O2zsW9PDyYlgZu
/5jHtgA+sIqarVwCx8kphOPnPrR98SVN20bZ4UwWUjAwfw8BCP1fl8fl6DFhMjO5jC72xmDO2RR2
BzDklz3AKlWZ1FRpgv+aY5jmdgVNpN795YoVv5/vdcot+alMIaKsWIC2WztLGEqy6K+Q5f5ynyme
Fi29rXrrq9JjfOLFvWuEKxWVFMeTPbVan26U3Vvwb/C5MkxL3+rXjtyFBK1ulsngh/8JXAE9OwO3
gTvosWHJ4m9KJWt8TTfiKRSrmWzNCodsdisKoEmfGEb2v/CsJmcHLN+K4BpQaYQTJyxlAVcxzj/H
EwUPEEaqBAp3iM9EcyKOcNyxR6tMNwMHT2S/N9WU6HnjS9chi3/TMXDd124ricfQVkfiqjYZlZQy
7OIRO/LEpsA3ZY8vl6i2QBwrLiIWJm4uP6aWDG3sg55zbEfJYluVa8WGl0HROZT7kq4LlY8yJuFg
CSsIA0tLJJTCQEeKkmON2hiChMHJpnfIckp/3nUAaJZvyiNJY72Zy/oCAPRqrjhycnNDP1HyCQP+
+Jx91yAWBdFPLHMliZ6D+ESxngr+3BNb5yiQNwKnYTb5eyDA/AJrDCf59qv4FkHxEIOQq9iiDGPA
H9NhcH8LjejNbmM7S/XyAV3FfJXGK2iRPznjDgnBmV6tLy3jve3solExeS4X9hUE+2c6dqk5QdML
0E/COrGDxdpr18rG2f3OVP5LioFHpR43xzffdXwmYzFnXkYi93oao1fr3MWcTG3BLKtasK33hVvb
e0DuNp84yXf7vk8A4rU95nMibqvm7y2pw4knn6+y5Kg5+YBIUT9qEki+JWvXkQlAKYW0Uh2fQ29J
gAi633C8bQb0g46XTvdvicOBq2zVkePqYFe1BH5QhBurMJUfIOmJDPnSG0zGLh3zCM8wic4YWhnQ
nuNXj+KUEv/9A4V5VzsjYjjjhH2co6u8M1/h/DELuB6tNrWOiTfIqUix3zgNrSweJbw8XzaZ4bTN
l2+jg96EZuOjCB3LmgPR9UZcs9flI/fdAZRaRJeCDhWyCnQmP+4MbFbftU5/kyloHv0fSIF5Nz4i
iTIjOothEo81DMsKth85jeQeqWeled7737N1XV39P79uqY/wvfFFUn+3N+MzMXg6IUOGhilfHahk
m2dqHhp/lXvSpz07s40MJKtERTTxBOa5O5Ew5PB5XndPrvceY1/kslDGMjTOKDrFIYtEnU3ZtmKg
V4Ac42iFPLA4KQNHL77+S0QF5NRxoxDoGl1laRMEhZwI/JnfA19THiuy+StOm4BbOvYPWWbFaKOv
Ik/KaVdhPNJDJAA6jRhrXmgLMjdCZShp7T0GxMSHXguut1JkcEZ910zmiVmbD4Y4y1exeiZage+p
4auf2AYZUezWI+MsqaFP5Nv9YF6dMje9G+CZ9cKODFce29zDInRize+JqcMaTrhx8eRYO0ckNZHC
3v3EvZvlNRNV9onEzdmuKo3GgniUpeYk0UladaTB8R1y5NM1c3uxfQQc3WfGxEETFoCoKHRFSR35
2LFznw3MpRE/gXfqrYrkMx1CFw7kkVtfdISHLTaFLXUqfpnmCZ1jHM6/Ygigshdu0uxRJPgDLa9G
QM7k1eiAd0+wNEUpVAFD13PvzYz0Uwht7/sUmTaefKWuUerWNMVh8CnyBHS8KGYs3E7JS+6h7lDR
yA519MVYLXdcDqA/lKVQDMrW/7AsU16VzeauXbsQ19pR2DAet14jMZMzdyt0D2hASGgUSRXj/Rjo
KXHN7urdphagMfeP6Ouqt3c8m7dxTQKeAAPq1xXS57M8pBvjp0hWhFB3oKJVY3/oVGa1xRsKpNZh
OhJi3Qx5goOV3pemM9MMgYjTf7JXKIuRp+YKT5ZBrDccGqhZRSQzTCmpn5VuBV8wYF2QMFiiTSrY
4buCmPKSJiiBANn3LY4hACoq4lgQY80Wr4cN7VXs3JMMEoowzfTvTWNMfj1AmIHhsEB8zXN4lxHo
s3qyis3GnH+R7VuGBtEVy6Cj5kIIwhUpjMy6C/C/f/Kq4oLQr0uG8j525hksh0OfzytJG/pqCufz
4MY5uqxK6FmX+3fsTTbeGEJ+Le0y2a6GvSDsaB2KlTwApr5Zu6okoybslGZFOV5/pyXoDxr/VRcm
PJzcnJetPil5S+kLFFrhfIxB7FxHMm1JQufJ9KACXBCx5/IAlXxNsbr3fw3o3N5LipXWY0u/+Sre
K9+hYdApKYyjmci/B/7kub8/hogAV56voHWlEVLWK7+AP+I8tyPFNbp8yQ36gYRDIvpwrAiN00Zs
C3uJc9BMv2dzI8w9DVUy7rCb0klTrg6g+0Wk6/V4Xu8cdFl6k6mFs8QbNg1/yJPILBBk7HH4oSCV
ZD2vPLl7HlVb+1flylpaQrj2n9h0PWC3k0J1fP3DN+U9Y5/TCJvTfBVoNl3HD3WAtKTyfc73yRL6
1rXTzK7QXRFucGGjr6bPC0tseH+C3Nz0yJPMjJOs7IdG5Skk+1x1nMZhwc4V/j9h3G2uThErMjCT
lzHC8zBOcDfKjQuXhYdg5nl3bVUMNHxj5wh7FIhYtTkLDUmGuApe+9yZvMXajDrQeD9SjsAksIxx
XuIjkH7nWPsjxAhMnINMzlkjRxl5vzJWfWzn2+GZRBqYjpg7wEinQsg3A8RnmkE9Bb4nKURqQQYO
TYjuNcJZTucW8y9PR+kO9BTayzAK8Gm7H/dM5IU4+vwmE4YVHqVU+D12obHjCq1G0o4t8QQs1CCq
B2sAupuQ3qalb0A2ZBlJxx4NLFXarjyHXHXExjFUJHS4n360pl7hgIQe1bdgcrYohhYRN5UIgg1e
s3CcnmdxDW0YyhO4piPUIKB8ZJsaXU2baXqVdX5lfWn1ooFUIopgQKNRjFizjRq7ETIbPCm2mjk9
DsfgZpOn43es4Wp96JynnEpjScFt5YvI1pbtqmxrny20SRdFq2Wcv8lKAo3eeWcwlkYFBpSfyhgu
JzDq3L3lSkvPLpXkLpWyf4sUTKZDdW+Q5Q9xoGwrESrkx6tXGd3ZGCWhKz5lHH7G90TTUrG9Jv3L
uxypO0Y/KjDVpz/qGcGu5LzQ8VYBnpphqje1m1UbGHN2WFN+maPhk+7+kOwPMFR+Cys/QvSNHkVe
arkf5XV3frR5y15mAAU33IAbhG/KgQW76Y441l5wvtXT7ogYhwgGlc/RBs6DxD/ErjbcM7JdiQre
qH6iWQH9BplQn9KuEoBXaLlE6N8HY+uRe6jDx4pdeYled2x4YfdxQEHFsCT8PYP61WqQpd9aM6qu
QkpQX0m4Zurub3zV2B3i7C+3bYyRKs7NbHg2X3ZJcSveZ5tjdyAmkq6xDWoXIaXbCUnABYRdQvDy
xQJNzOhPR/yC01lKcUpSmn1rqTMfVf1HFHswbxnE5z6iVwONFoZ+Irl9l5G0Ko4kxZ8QBvwX0yv2
E6B0CVrT1svyr1ShzwboxyDU/gvC81nfP/g0Y9/6vOPoArPstEYXZwmgo/EyxH5EkDCAp/78npaP
D9xJh6CN74t7r3kCdYmEYtAOjAgv72r5mDdaPlCPENFDqqHSfGgDQLrsm3GPGX4xRliMf2iAwI4C
SZDC0M/uyZ0zFszi6INyohuVf1XbZ+fo0FXTtppoVKD+fTLHwsM0rB+fTgKiZafpsoOOT6+mGR5j
PKyVtzLcTltt6LDSYES+n0bu2Gdk2jRvLxkzpnZGe1iOCLz8dQg/vjkYoer/7rx54Q8SLSA5wPFO
EdMZ7gYokq93MXMqs9K8gP2g4j5qgBZGfVRLoNH8JAjfYE7GZpWOHl1WcRI5WNOQL6wp72MheFcB
LGkA8xd3JFG0JBHOPMrYkGlGmv474Lyu8iES0DJFqd9AG7y1DSmilJ6nsSWrOzfQHLHmEVVQMWdN
yG3ft2IOzg7BLr5KAEinY685Z/97T0/RC6h4gCh7ewzBP8C+akHItvR49KISvpGkOQP0VCq1WDe1
oKbOUnP79OkFMkqD7ZntWjodoJl8JdzbiukZ4YaiHGdaw34LIcXmDRnDCaFkOiwi66o1vPa2dRXM
dVXkPUj42xzWoIleelOXCQS7f7xggUTqVAAXxwisGwbj/3m9kscsu+9dOceR5XCukRy6iLlur7fp
Xlk1m18n21eSD5n1shhCW/qypHPThY8XcDag/5UWVIb+jBFWW78M9oSEJBUGzpfC4oP5aHA7f6Bq
rSMYsAyo4VwybniEIQMMCoBe2bGiVJEJT0ElZOw6sOlSimpL6EmzWwSQP+MqQczOqaSuaSv/lclj
WmtHLh5Z4DVv0T9AXAnbVhrZE7DfmI05rqVg/8qox3qL5vTzVICvxVbshhtPDTp4NGuIVbHQUrKA
EmiOBNpwDay2br+mXqLEtACBMqxzi1ScKXZa3ZCpItXDHCkUFZgfDZdzkqk4eSWb5AM22GUABI+V
gNl6SXejpc5AiIOX8bOVH0RZtfcF8YSXO3AvQdJlOrrWFfwt6kFScg0ljKCIfFIjU4vORGEcczZm
1zY2UOT2qOV0MLef5SLlQYhlHmQShYD0QUiwZiqpMLCpRKVJkjwUarU9lQn98w3Hgi6NMVlE8zD9
uveo1XblUbQBhIphV5BlPacUSyLT56uxKncD6zHIIuGeEBDSxphrlHSYUOZfDaLAp+2kgL9JmRMd
Lxn/pKRFezp+JPt5FZUBRAIEZcSbbAocaFdoM9UeFI2DSGKsSiVNnGFd43j5Aksw6v9KVV/3NEVr
jEEECveshovHdnaKuQJbcW9qqIPKjb/W0swbKVFCUaASF43S8RSVK3Mkk34C/67ON//uKjGoiltF
DabiwwgJg9flSGXbVxePbqlYIphvHRKGpOlphO6Yr02haQ1zxbxbTMhzUCMG+q2pI1WIbIH3g0kf
8p3n5VwmlfLAoS7M4rk9Ql1ymmScDu43MM3ewd27p409nC0SYb2/4QL4HV/mC8uv+rH/d47mmrez
yhWttvyyugHNhK/kEOO9Enyw4b4GtwkTBsXX012xnMPZ4PiucromMfgnFWkTYkEc6nXgXObF862t
Cl7h6KNr4cCFVhwfsBVnD4/5gw3qp3x6lvbVKmWCYbMubDD7v9hXFB3zmYDQzN8nRn4+7xIK7Rgf
zuS0d2mQIRqm9nfWobuXwN1Jr/CtmRALe2VImul0l7VcBV5PwffurJlpBrXYhnj+RnAwlLn/4smB
Mu6E8yTBl3ZnwX9DWSwAvD97Hiv9pObJtdPKWqM+fsRtOqi+TDBj/kcT6BNbuhozDRPJU9KlP14y
59oCc7eZ6ZkXa3+3UhStjr2aFKahIYfbpFrrPo3Q6qdtcxe2gurxj1iuoPcXyr3OldrKfkZJyzKF
K5LW0TbuaQdkW6bqcWJXWBWGe8jduRImHAZ1Wwpf7S9i5O4djR3853hdNw/wiUxxS51GQqf1FDHs
17MPz6kSVxgYy3C9TW2JN+pQ/o2o9+CwruTGRd/NeNJPK0LOBLr4c+bJvxJvJ1Qsj+Givdv0wnIT
RcAp8bVgqHh4fSHwh1I/rpUVtisOazqFvNHmZMrB0GknL4INvKAQIy9Hez0HOnjvim1TII3CCZcT
JfC2bgFt2sYQCjygOExqflWHrYGR9PHRMLwpX/EcleYtjEOkvBJnQZmztuS0NoMBrY5C82sK3YQT
wVutmQiim1YfUefUK8Kp/sQU4wc/gbyabWbVmlhKLtg8bPelz2zyIQydfug3Htsh1onknLNYxlTk
nRI0F6vqk4qgbnb8Abf93N0Qf9ViwuDyC7lRGTh6E6FyotdTTnbq90YVdJ5N9or6RdCGBzpS+tzd
klh8Ho3Vs/1Ltb0rX9w3PfBSuNEtjxFTkJbMPllK8il7fEK4sWcPc6ytjNfmMH4tT3uEcAuWAujs
sHka9DPSl79FwBzoQ/j/UwmQMBnwd14mT/oBLGZB7JKXFYwQPaKRVdt+uvsq9UxPvpWVQV6pMC6L
OalG2kKymWz2+vhua6m3xYhK5tWlPT6TQ0iQVaYLdsWaS6a8Iusuxs6ijQ5SQym1a1V6MHqlCj2s
5PrwLAcqAHXrBVHG9wI8+mr7Sj8e702Ngz1tt7mU8iYYaXBdJn8v60bqeO5kGxJUSeFKZtuozFDi
ZVZv6sVvtR0Lp4o5gJGx7sRQPvf9kiTsOns9zyYCuw+vAs7IJZEVl8M5rpf//X1mvWcXRpHPxBkm
DsJ2/UrXxdGjAT/m7D+VsPkVmMVglFA1G2cX+XUDqyk/BYgGfgryL4Q4RKvZ7nn6SJhgtiR0n7XU
g12H8M6+iq7qBS4QOlzx9Cc9nOcnmoAEiIiyeN9wvAs8DBtEFyyeK7Ft5GwTlBZM9m9yjD3JQS6k
gkhzTVYpg2CCJ6ML67VHBpuotz78XGdxLvfqoVdrUG+diwlucRjiD5d5GKrFcu1DPKMMEHj/79bk
P+g8X7vvv7H9V2UkcnMYXkk1mWuJkIBduWp/q5ve5gZTbwLnIEmdjfZ+2zOnY9O3da01PNtGpS1w
1dqjl/dCw3esfkmTtNZ7a5CuBJe6/CTYakKuzHonYz2OX8YSXdQ46Od6bkhVjMg2Nx+hKmZ1UDsi
vPEq8qhJKdQxVJZzgV4A5tAT5s3W9VesBFCWSkMJW27rbTqp8I0CMuy/kc68zYZBvPP8FcA4J36t
d77cBUnbKm3Lc9g78ZKAt0dnYMit6KLg6jzFp6OjcJ2+TsvnSUry6BkBfM2cKUgXGUpQtILOdcgt
RRBf9GYSEAsr3iJ2yfyj5Oq6/ORL+oOaxvSGmUIsITflTI0KADIRqvLhq+aI9bIP4BPKCQNxW5UV
CmWraMTqezTCBJX+3AL+dQae7Vqy3NdGEiZtMAtCGHWqfk29J9MGWQcrDj5aA1D5nNRp0ghGIMgI
Mr6LxXzeQ8KgsD8nNlcC6qumKrPEekNozn9MDNOUI2jTOKUJ5tPKGJ5AG/krn2kmDcU3mWbA4RVS
9N6BsL8ZhU9kffSr5KNxKqVss7/5Fe5LbGALmKB9Iopkie5/OaERP04TZj8Vu3lU5rZDDKRGOHh7
yewQ1bmfXYDfKCBjBjjnA73Od/6o6WpjN5s56VsbtArhpinGjKAYf4p7fe8S79pEtlXqqZmCpGdx
3AHRktcRTizzOShy/OBorEUDg3RZeWxqUGMpZ3+7EWp1LvnJhebNBLOc8enc1BtOf0RlBz9SNyq4
0IbcjPhcuanxT+q85oInCaTI/4KAjJKoH65LdnJ2WHHw7tCvYjK/kJJvVFQMbpCS0lItevyry82N
rPkUZg/M5GDqbmyW+tfKPi5Nt0jKbL0saW7gq635nv6+KasJKWGhgPzWBFRgfZ9eR6+zOHJsiocC
aFBzcKu//MLnf0ca6foTNuyklq8QOhc+hs5fISEh53uJcNaZz4BGW7Ut9muTxhAS81tx/S0hx/FQ
kDcP+MAWpKyZCzhHUS27b9Q2Vee/uqViiDtPkLR4e4BPx/BqXAFQgWrlECg2DayI+pGH+kixxXRQ
CsbbAVT/7+wXpMpKr9wd1ZKi2oTYdkBcXZMDG0VgMZL5bKfOHzg3FGp0M/Uw18GAh7+KLHvaQDVP
jdgA5neG8p6IUOdIGLQt9/w8TNi/0CBbt97PvBRykOcVdMuDbS4tQ09axZ61TDgr8WGvKWMCS+ba
imbre64FCaAUsx0FVE29v5y9aMm2ts4gaJXfJwdy5UOagXAHbFMEsin9hfo4iVvtqkEwAWsf7gr8
owy46shbNGwBjir0aoADm9c3WX9x4HLYivONdDmR0D4apibzXh/i9NJS1bbaPo+uxakMKv1IGhZP
riHcOUtXM2sK50Fqk/RnOf2lTrEWjtax6FxQENslFGdhw95SJRSPuA7O8e63MR9AEmBbnuzqGy81
BRbX7wK1OerWJkgO1zgC2ztJ4lE0Xc8RNN92NYPijf6SJibG9owxmVHIWAv1hqLpxj75oQeDU/Tq
p0lq/99Uf9SQmwCu9yvj9D2MVoTWeusElEBdQBMVwCMfBQS3ZxwxACnvE9GhX648pN2C4BsGU96I
voln1uuYWUHF0wG+6BbwdYeshsGC1K7sCt6dxHfk7LErU1ZrTlCU+8Kx9jmbEKizxTpmDDWIpF14
8Z+AH+bm7jOLwlaC0UpT6A8DD6hIS3qjK6+weQC+OtoBw7d9Nlmj1fi8I7RYkIOhDIoAW4g/24/c
j9hK0Ej+Yqm5hCko5cxy8fu5oawWrkv2dgcmwXmu5UUhFZr7N0LW9/bX0alBQQynoHmwoL/ljsIK
stNFQ7G+NcmiSF59j/UJjm8QqDuX6Ulj1fCLMXwNtpBLp2woFaap2enNQf8vKR40dFHG1oFAbP6i
A7BuZDEWe/hQVGTThpMpNry1t3tCIbgcHS/AHds8PSaHViv4t31+C4Ba2gP9rah6GHpFfC4qufsC
NGaH/NZvXGfMpE5pRlqmZAh6Vza8Gm8V3dzepz8sZd7zgOIZUbvDXwWbnQWO3F1O5kas/eUoNbpH
Z582nj+JuLNgVUhJD5oJ2HlIBstohC+pJ0yrhdL17c9jGdK9hc33erLxsh3pXh+hrqiAO0GUPHl6
60jxTXtQbmCZdc1HM5xr/UjgyFcVnSKNEBOgBVq05gyvR6TKGf2lxaWJVlxqhEVh9fWN/zIyjOHF
B10QYhV9pJNJjA1Trjws801F7vw0P8pFAWYazic4ndfYJFWpB3Fy0/PleL1HbjgOUTvx4tU9tmpj
ZY4+k6Abh0qfeHpC5AVr7KopBaMwGtDua5ebzoW5ufoZ9qIDUG0SRPm7lHSeXeonnk0ZtMlsk08E
Bbp1rlTXaByTHTl/DkPlz/xETzw4//OYurz2yHmQj3ebQG31sSadSKpIevmLQB2CT2Cod74I5uvh
sVOPsKOrm6fwEkjlEwmeolrxI8Upy8R64cijIyHaiJ1hJPGq7MDziEAO4FJ6+ZQ5JVN89gfEjigu
xUGEHfRgxqui6otmLHhGy1rP8O+MQR+VrT3HDBo8MiGfbuaSHOHtRF2rIBmerIV5Pf8mu3hEbTIq
I5jcc+SiIuEpPz+A5x55WQeLVLw0GXmg1X5EAZcE5fUVv4r5RWyJDNUcsr/L73OpUWCz94ySGonU
+H6G/2n6ZRntAh3kQHPjsHarqMTQaYcZXK3u0sWMi5XhYn/qN092As0rK5TbTc51jcjs/UYGFx2q
rbUIrYy3X6eDf71Nhd94QBvZVdav5c84IfRRJ4VgCNUJzt5DFr1vIFf+s7+U2IwIaXY5+OdWURcs
gTH1BnJjVuXjAtU/wfbCRvb9X86660vDsZgGVf4akISUIcuIbB7QnNQgJPxj0wI8VpHH6MX67Yr3
srlGcrsohDxJNcsB1xi7C0nC4qLHmNK/8G4s6xbmX5c+pL+ZZVSb+EMdCMcwC7/iyPu8NxyyphPy
Uo360cYiWhMStqRptHPXDpvfwd41G0zfukIZTASL/9UdarRVw0CMmEHGVxI1YrlYGc0Eb5yKdwu9
q9defxS76MPcnazVqaphKYGE0EY+MSfFwzBuj6VYdALmCEzv9i4jujEYab1aSDoZcxecdVTmtqIa
FV/jF7WVvOCA2gIE0xrqeVg+dTNKUHaHZJgpqHBQtnnc+eao0JzPkzF3/W5I0RgEL0UjdN6pLT/H
oajz5w6OIeICcHrRTld323pbK0lqBe/av1OBb54fp8IaGcSms27zueTg7RYrRDEXX1ek8pWUJDBR
hOxgqWZPbfx0qZSekziXrvnXPz3DQio1Lc4q1Q5t3bYJM67isAvhf7XZyaNfsANuQV4uHFUwgDU5
YMy7jZZ7uYaI2w2X7bEPJvVwbn9JtXmA5IW9Ra7bfH1FgO1qAB9bw1dVqVsO1Ce8L4wqb24TneJv
UaWd8Gh7Yr4QmRfwG84u0hd6obuqoIU33BEcYt9FIvE2RweV86vDHu2cVHMSIYzLkgPbLMv8iXKL
+KWfDKQX1qPrvAVoi2nrswi8s7k9uKNbOXK3BH4COAm8Oibpv1IoedJeCO8HV+OD1IYzsuyGp85j
0D82ZLtK7ZgBe3JDWQULWbtPZH/aaPV8YkRDZsszjyxydxZ0W911JQQ6Io0wbQVevtmXivOnJSiQ
WoTwB6hp4WTcWeb7IIIAUNO58EZ9uYyt7CFKTTGVkstDQTo8t0CRi693IstyCBLPXJ/z7bgE85Ga
hz6Me+PiutpNVyJuXXVvTLFa7haRK0Xiajbmiw7vV5GzQOtV1qAoC+86tf6bDBceb6jyjWY31HM5
amufP+1NRq/bf/3pL2LBZ6Am4BQ0HDBsONxe2Q43+jaKAG+vxhcS9zcZ39ktftIqHiT0NbMoQclc
ZKjXiRbXdyqkeO/ACJrq+r2IGi9rvJpte1eriaGaO35HAvnLEqQTolCmnPw2qv7HIhKfos6FTRb4
ib4wpgBcITKsChFzJQaYrqqCVXtswvlXVloYXjb/rCzcz3CwPi008y/RnvTzbUugVp1dIZr818YC
eJd64oQWY4uXwgy3EfVa016aqdw8O5PhQWX96ln4kwxq03ZphPE0Yp7+Jxg2W5e6MUH+79vcV87w
c26rKsffqfo4cSnkNJuSbuar/66ud5cp+rM47jLGwPh58RzZ4cvU9/zbVG6XOjA2jA7xMbwarKNZ
eWFT6iDw2tczPHy1kWEWAiQ1j1uEsAqRHRsJ4OUl30//2aDwzoDMpdbuzvpELkuugQD8jATqSjZ3
V6uEW2jVHBp+9/v//MBMpoBZxZOOJZcZ1vxt9NCJkU/RgKOikLIK4ic8k7w5tEE81Q2UfhvWHCIt
wQwO45x0i2gTwB+dend7cda71KKH0tSqrZsBj/zIQcCPWOKg89beD3UGVyE6W4C1FQx9voW5VJUm
3GrBdfIrhHEUaKpBb4pwHqWhJaej4OzLiGprYliyOXr9DQA5ctlBmnOQyPjg+Jt4YE0RlM0J9exx
j4q+k2ZpGgxb4nZu04zwXx71rDaL999tFkjNyjDBABYywrxjC4hSjSeWS2bx+FKuZnc96q64jRlb
cJ/Ek6Kdzxfk1/9y++iUxiwKaVeOQFTPKECUQc6uGIigO4kNV5KYJVt1wYrYBOnWalFA9j6N0bZU
UCFEKIXgH3ZEZRIrpqF9QyUE31hY9chcKJwkxe6XUL/Wf9/gdl9u3fCRf/K+8E5htdxNgGZWX/xS
XLgqlqmDUetSAKC6MEc1NO61A+x3GG06nEygF5snsnaZfz6NLgJUK2cCirIzMhI4DIyZD/wJ5kW8
tnutXzSe1EAjANGQEpYNO8RFN49qJxuGBKgLz2dqV6i4WVu4zsz6AdDRx62LMxENBT6Yaycm2N9Q
OiMLMkgZQG4q9MRC41JELy+Wl+OVoHpOdvdrUbsWLSetg/OkeBeF2BXo88kCkvwKbhIwPThEgCE7
LUFofEqZaiMJUE4SnGaH2gfxTmvHxdH68J4OqGg7aOWYeVemmgg1eJVly9nv8rxzjtNssvfxJyZ6
9fmGHyndubejDDKJAAmfqm+sMN5xwz5cUKbqYeBi+0JPDKEOAUHjIajn/eO5WMLDBaKiBxmYNOoH
u61K9aoSDnHB+atBUHdHqLVSsh4iuMcY3sfA29DexhK+ocR20p9UcVz3sN8OxbECRGb/Q/dFEADg
eDztqWh8OQ825ROAidOcs1NHrtdlgMUTP/qHUfb6F2Rr9qcqmNYofTu8V3MxOQwNhSf2uadLS2Om
sO5mnh+iDwmfCCFga0WLpTysPsUasPeCO1nWj1BfQpYrmqOanMUHKGGI9s1iCEfm+k/4gpLccbMd
bKqhkVCybWk7WrZpFKQRyfOoPJsmJ0cxrAkJDp4MllGYbGLVvbjOzzUY9QhvbpefkEhfWlrmyosG
2xYQoNbRa820JIVqHg/ckZ9oz+q9W7aqrM7yg8uNw+/SuPtbljIIBj8SKI9kyQX9UsXkcN3XBUmp
UUtdcAwRPjMn2OaKXLW5mPuo7qCljOxYKbopELYX3qMGypoQCR5sczJDPlf6mjSWkBSqv0QlF9yI
ESxsn/pkCdsrS7ZG0FOqD2ugd6LZu26EG0T3WvCCu+3uEe1L3Sc1PDLYCu+PFUtAzl3fz/wWHIJy
6PXUwp5gleywU4hwycMfl1K+RqXF3OhWKxhVAzCtkpkV0QMWu4o6k74hpvvkmO10zi3tMpXtumFf
z/owVAWiZexVaZQozatNYTlrsU8VYCxrqXrHwlSU75zSxZLfLd+dyyymQPmX3iGqUiMT3tHhXnN9
fC4TRCIHhTm79my2BTnIqDblaD694fTIE6RICOjtuMTxI3oH6sQbKPY/vW/p3Q/vSWpLoWj7JRe2
vR1xSKFNh5DVEagAdxsvLtjWsg6IbFEqfqARIJGmk8Zjt2eBaZpzemMKSRnPqDsoqbN2tpOkFNl5
VpY6OLpYWbbFumJFeAMGZWou8R4/Ufj3+U5imobz4jyhYWuEthBDXibZtnrtQaHsnyjFr16PC59z
qhdqmmyC7S2bXmZtYpsn+X2T3GDzJYUZUyv3CvUF0MkwQ8KOJjWppMSA7GewoppyOtt1u6FEGnd6
Cscyt3E02HcqHhADZUVmO1lvuWRtu83PSoMeniwM7tvz7ShI/91lYt96ovUzGipnu9XxlH4A97Bf
At3KX5YibUVcmbQN9pM1KGmksdWw7TNp7be4IJiwa5am6anhgwgK7y1nSg5r82M4I/vw+S0LRbOu
Oc2yPu4bwfcbDwbZdFuK3I8iHTo/nRXcop6L0uYfwHDFG0i1MBcSsVKkNtiLObuG19SZEgt8U+wd
ANiORdezGhMru9l7lkV8XaGmrtHtJXHoUxFj5emW9tqHWgMTII8llckadPz84Mdux5jSYPtQWyuC
hA1SQYDsij+1+7WWlR8AEV9E63cmHm/7ugxPyg9TWP9Ii3fRSeOemkyrQnJqwOn3oRN0qkc7RzSC
cH7mYw8BFC45TzRplunJ/PRzAaBe9QSCvK7IsT+vxL3yH/ZYHGP7ApmVqkOZk/fp/6wm7dDMFj49
qYUPfz4bfKVosXa/2SxnXHjJ2TsKe3VTfXycC4WIUcX7CaIIp0w597Iy4SsIt3ZMajzBisbWV/rW
mTAkSedOMebtJWPeqBP7of1OvN7XLPiUfLGX1JD8JHySEvLUea5NGZ3yt9m2g+nAj2WdZghyn1Ot
ztSg6lH6vjTIYltXa/Nu/gTEgpm0yxfPOEzie2p6aRcXz/0EkBBWd1QdBb/wGsqEY/OyyRrlADVQ
80iLrghEtRgk0LaAadGoHvQNZW9SpaEFf8+OPhNm4/39/63BgdAv6mXq+0Ol/uIVFhnil8uaL3os
+Qo89LeOrY3GiVUIb7oHc39CrkZCAw6MUYixD6B8Tg7WRYi1iOApnZEDrwjyNOOpypGUhS2x+lZ6
fm3okbA3EHInxvh3QeyHSSGhoDjH/1XY0lyXLUpxti+Ky+EbXh+JoR+XkZtbNgOi48CVoKnQ8Bst
oKsmkLGTQIOjkxWfHSzEgqQi/DgUYWPRUOWssq5ksrLrbWWRq1ABEhUJ2pQL+mPsQdatKmbnijmR
a0173Y3P2SmlCZHrEE4FL1egh5Tn8oSHxr+UKZQStwod8IA7aDgpBM8fi1amatudMKWLdQdnI5rK
6A7fiBuO/VD5Z/TZJmobKKbjYpVGXjo1/0kQElI9NNTNd+OUj31he7MwGO6WG1oLehjOE19DVpm1
2gg0c/Is1WDSuuvAzPXic6/lhDITAw7hXsTHeHxA6ArGj0Zht0jV3OFOY0wnfG4SRX567A2a32xL
5Qx6UEOmnTChQZUMAvHjGM9CcXzNaLf8wAsVbfKARnJ4Q/Qnaq40afwpU492UjrUSbdmga4H9AGf
QF7y6fg+JBZRBuA1pulzlBz6z9ihIHnYHjfPDOYOK5wc+pX50nFVPItmUPaYOo1mX81+UW4oaq6c
TrEptQFv1Z2XZx3m2yLAb6m/Oit8OOc62EfPbEn60w7ep2fE4FE2anx4X2SRzjxe2f53R/bSIJ3S
qy52oxlfVd//CF1Vl4HzdGiZczq/1SlmUrpAkBOwzbdHTIU53o9CTeipm3OYz4/FjSu3GhinqMvE
7yadOGDjt1t84+RKFQixlsuzyCYYoqnS1XzwMJOVSQKA82C27HiY28qHYhCxIhMWs9kvnZi3OWuj
cj0sjpOI8r/wCJRJ1TCS2IeJHZjL2LhEzfDRlc9KoJmp923EBoP+szExddWm/FIQKpLLY8vpR30P
3UR9j1PG8DqZMqXHvCOeuUMQ8Nx/JBoftHD6x0mG1VH0bOLfrbwJCRYMUqVbl5pMIO1ro0VBb8yY
Mp3XWgE2DDWF6RSREiclhY65Zm93QSMYQaroSxN6KZSN18zbwi3/bUqd7kMY0rwbhLlUTa2qVEFw
5Cd8eCHROviczMtwRhciqRxknJwBroLdXt5d4jPkMfGyLBzFhxN34rhq1UsEjs1CBiwF5OxT8ThS
hiAc7GZJtryEJ36CXF2PoTwYZOj3OZ0F0Ga5Mt2gJ+wmU/FfHZ8i1Tjb2H3qnXWfAW1zKyUW7sP/
Fz1HhYZVSmrdDk6Cup810MR0Dq4fzkRFs2i3dZEi79FT7a7ARDEXDmskO0BHcKTrj8nyF7xM23g7
Z38NuLdxIP4hEyx+B9Mjtq0aaYOYx3TUy3I06kW2K7rz/n5vpVxX6qOW70jo2hM+1v7fpZsdLjGM
APAKDy1ipt7PSVSIroPcxwttY1yaAkvmQoV1Khea0TH2wxqQnP5OHXuNNoypePMUSeZRSZj0o7XH
7hPxQu0JWOK1qNkHuRgl10CMy1vMsUvkvXs1f2jXkDxGUdzRGJfTQtgdJXab/KZIT++oohpqW5AZ
attZlJ6jKK60wwLoU+cLi34elJDkCMYnaBJ9ZJRFzPFrde73GK2W+9hFbp5bNNo+HxccRc1+yxsu
N28tWRqAA3ueKlCPoUSJKTSaXQGEbPelV4R3+Msxvjsug571o7vm8r8tOcX4putxU5l5J0X7BRp1
ys9uXyf3bFfO50oTAViW+dbakgd4wKcRTvzOguSV48tlY5SrHX/BogDThvDEiQRgUSg9DA1OGwfN
8nb+LOFARpQ8JbwJkryW8V7kYWDLL+K+FkIw91SXjerijFtkg0zKAyiTGFwPhgc6mL9TIbZ/J7ae
HDXQXV6Gakypy4Lz2OlPRcWC/EuDrpcJkTfKcAB+EA10SmMrBtSB9C/T3iV9mmZHDxbh8ZLGQqqS
NcZeSlA3cEnYVb+7kOS/yAlhzURzxygjvV7jIvRKxORNE4ec1CI60Dj3yJu/r2V/5Tcbw6llECBQ
PKVrSxZUFQTvE1+sztPZA6imzy6ogXc6bt3N4IkRr+yqspj+gqWaKBJqANSB54DofN4E22/AtJn6
WWzmnmqIwMLvxs3hCSQqHRrj17/tDFN1vT5OLPZ10gB98DgKm9fJWdtr3YIeBjBEwzdHr8xdvshd
jypvuDZT0Xlp8uvURGBV4Avb/im51BOUFM+lD/ewEkiWspBo9OLsfWhmaCNlfLbsJy2Cmli8HkAB
/BuwV9AmdkSkTOIFqPYLlrkxiz1DbAIuRr5PSXVT7jKtCY4sxVuBISb9i5UTD4wMeTZ0gJZhhvdz
vUpInDGAYAJaT2NhlPPg8HSDQdIXBUO4mERdyqsmlR9I14BXdEv8/Y3v8y+9CZFSkR3A29QuXGui
OcF/yXIeiqkHnkGCs0tbtLVYt+QI+aji7dDtZl/SdtUbqFdb+7DFGO4xPuTLBFPx8iX9DGhkYROT
nQ1dqtoDIuejKPjxZCzvmtF9QUETYARp3WOs8ds4JsUAugBIb0jjBBVdJcXPGwSGh3wlrrb9bHx5
btq29HE740d6VwugolTWPTUL0higf3jd2TB4nYBllRfWyZVnF95fLOCUzfHweSTeDBtOqDfzLz1I
B0HP94uehj3Rr6J468ujrZ6eZkFeuKMaFs4c/nDh1E3BdMwnM6cenWxtuj68o9VMI0DbSTURru1q
pnYN92ij6n9rJYJJKlTeC591m4DaTYTIdx5Rk16zjULkCir+VKc0/+zpp7wqFHuv/aoL7dPJ1ehf
I449sGAgnRsQgc22Hrtw9gFXjHnGrrePWnnPDtn9ibuazuICq+ci4e8O+4rtQ1nzkSOTCwsQAf5R
kVrGoFi11pt55OWpqpzlT8TsSrmClJTg3yslftFKU4l8bcR0GDyr0yYUitasTlS0vxU4waFB77L8
VxAp5976qEnjffGp06DeUiiQsHn5Rl7tixvuSxIPVZKjnsHBmNobphj8PY0sinIdOp+eDNJW7Owo
6HHQd0eKGnTI1c2m4Uj9KquFF8H0MHe8wYp1O3x7tWx4EXFMqSACeorO9T0zKjCaL7/GsnmXUKRv
2dT1bsmSM/sCrT2QvYyYm+HkXII9O+QYCn9mTsDv2uIb90ScWaDt1O60F99XYGHjMiOPT//t9wHB
AFDoobDxGxFNEDUNPbU/QUmIiIFQqbtaBFd97yJKgLK99IBPPQ4dEWxrgp+gKMUrhTXwbIkGi+qY
3tP0Ciua3RPf2yxyMopzDTViXju+mMtj/b98RdWWDvqyEjVbWRbHJUpkHkOHRZxsan/tVPMC2DkK
qQx3TCc914JdI8h1bFge5j38gW8RyfYElopQgwcGBRcNg//TiCysMalFKgiwBPU6oN6zFfBgNQzs
j5c1X/6AnQ4zXj7YpN4V2vkmbzZnZCkOAUj/66eR3ZN5rFUPusOUOXiqBhXVkH9jqw5kLspCAPam
zv/Pl1RALP19MJjh1iFEt/5QNtjGx96AUANw6+tDifkChDF9wXO75yFCk+LXCA8F8Sd0MSSywU8G
fQIcZQcIm825iAAtUWs8u0mY5rOMUY3k+XgEdigH7/bps5uuCog2C/4BzsGJpV6UNV17vcBK1Hj7
ua9fdrVXy3Q9nkk4yxJvjesJvjZEzDIlihLk4fBo12WfoAqkx0DKCQ0VfyFKjHx+gGPZm6pmK8tK
J1p6mCAnykG13vq3H447clqNCXIbAU1RY2cOx/IVaQA9XEAj7kWfJtLUhDDe3YuengyPmJeKMT72
HxbcF+a4PvlOdx8G1rV8fa/+lsYuuPwalV7HH7opK+EjSmaJzlPfmO64NIx0xuMAXHPMVrENTv6F
r8P89s0bgf8lWJYclDxFEVZ/QUVZSwsV02QkH2YXTsn70k8H7TCJkSsLtCZZIGZuQqBHm8h/K3v4
Cobb+ElISx55H8+GwbGRq7Dktud209FKRfjAGvNT74l9EVBa5USc5pgPhBnbVRhN88zfSg+zYf5m
ifQ5LSLln3T+cx50VYB1wor5mPj81yrNlLbMqtnpWUrtZsBdb/5IsS5UAOngvF3QoglteIIqn31x
/g5V990SLO86g4qNmsGXb7bCnRy1YS7MNYro6HBTl+ejh68oP7LoHivtg+Vy4lUNToU+VRLIbfVX
6uxhrsQTlJPagFCWo9EYDUgVXBMmYSMVHP7lGNDHoVBP69sSsE7ATAB/0+viZZn2/VqKsFotFGb1
vaVIEg7KPn8tzqGtZcRNvMier1dQJyhKqTt0l6hI63MpQE6f3DN8Hrp5mbsKWQIfCwCylAmYVWRL
4pMsygWhFliGWJbDZl7KovVD+S3CSzKS++vqG2bxLu/uyJRJ4LbadyZEh9G/u7z6RAlcsUp/Yqui
wTOomQ5hwz+s9zO8iO2mcruML1D3bbrV9gduSKJYQvkaDFOn9OtrWNjuE0HVxdpsivU+HnqSZ/JM
WnQq0rBfXcVUUOO8R6D5xmO8Ze/F4LfwvW1AO5q0B8MMv6Vy5UtDJSz3rSKAVRNoshFWE4Ihz+pF
U2ZRjURelS1GeJo1cTCgEaaRv9EBB6v6FaPt5RsCY7wS8B5V5ohUJpSDt+DPi6U/tcqfuoocsjbR
6oc7Sq+VuHxiRT31Lmtlg+9dpPHg4bLy2piYSI85WcCISKv/Tw6SbXucfRXGaQlfSQcyx28ZN1rT
wZW4op47hz6Z7ENPjAPutWJkCcJcfw5fjr2rkeSrCFOvFMCquEaLM4qie6v6C47lvR3hPZSN8KjP
lUHOAcbWj6h5ubk0VCEl6+YhpxlKzR+79yASWsm1FX2L6t3gmV/WLCXpUTSB1GmbG3Okj0O8RJZS
NynYLURSUqviePKza+4g6HKSoU1sheD0zIzvhFa9OfgQtwfLA2lKkyFqEQeO6eI6t3SIJr/GxcsW
lg4OBzku7Ti09mT/wKDCWxM2cTbfk22pB/ZxJS/kaZSva9D9cEG2P3HWHvjC/Tv9EDp/PsdhCzLN
uH/9M1JutOm1Yr6aPbYuJKgeUezbxpHXy22PipDLgU5Gtap1LDnjmSqBeo45U0HIukmtm6KrOvGq
ToQmy74PjOR3XErHj6vM0Ap0eFG/WjWoH6q1MGgo8TwhcQmVNK4YyDV3wOVOMFmfgDjcS8siPlXd
EUT95YR7A2Ar0Nsd0znbbCURzI08KdXMmjqIWQZbpxPy8korJVKAEVMHZRd37oHN1KR6rZZc0Fv6
E6piEu+1jLhhnxxjCRMGbDBEf4cKIxrrxSB4IGSDZeFGAGGQA1Huv6c5a/B0nRs4xw9bX/APq4qy
PI9VnBs4Mm6Eo4+erxAECOS9r8NFljQW9baKVYAG6ptxvRYNWB4XwROq8uILrJYCi/b66EFomy2m
9v+bR3HLpBfUfATkhBTNbJ+qF3DL2L6jN9gHq+xiWRFjwDouFQ2+Dp+lkHwgUNWTk/BNfWeuC/9V
sopHnXjJiIxm+6cQZOA6XXu5nnF4jkqLp6lk6cp4z1WstgdolrSb1b1p+mKen2Ub08VxfwM/A8A+
l7sN3mxYoAw7TwLzy3U9zhmmrAy3E7+jHbL26utH7awRAatdPPFJ6sDs+KTZnyi69rLDUYpyvZGQ
5yHDMIUyD7cuxCVkOi9nkYBHKSJGT/C2TfZZEJ3D2pMGBUhxN85P3SKwfms7fCtReuVq9XaSYg6N
dIYLbFP7g0yR9AWioPYwAFv5I8Jn4Je1oRn1u9PlBSjVWtGuW9RC3n/8AL/yLRUVz3zTIn4IDYDM
q8Hz/zy7UFy1AKpCrlNUZLJEDBvqEeIOXC9wBs/Bhp4Mx0ighggvIEyMoVi5wlTPjGViAWZoOXaw
Fwm8rJBB6ke5YzDVK+meZzrnJEG2C/ffycS31caVQmODPl3LaYYG/CMwofhIwQd8HewNXKBxk8aW
ZTno8fUYf9kt08NgmzK2TBIVoTp4fIGonJ5pGb9AtJG2vdiH6yGkOCbB5mhFo/gh1RLXQ08niNSd
zREj5kkTeUC1si9GZT9hLSkHhbS4oMlki2tJBDjDsnHQAqpEEA+mHLnzIaMX3mb1FiDvV3qZ8gxi
bOCkUVEzkYL1VC1kjFKeRx+oU8Wvb+po7k1QWkNDMMhdHoPfD+IItvXbvDHKXnstxh4vSlzDv+vZ
cB3sRXWSgsZGwk//cstoIh+52KBbEtNkdqug06y9CoKmJ6N6W9R/UQP0SdLgJvb83FK9kIS2Kbd+
89oXDJgyPdry0Nb80ZLvOTbhdFJ8hYBZc8f+SVgV++K2Ia9AQ/vtaUpzBs3GwPFL13DSrWuzBmni
90H7ViXCtmFIV1lpX6EkAjju5mdE9DWsWL/qxxMlg98McAJQ7foE0cqrunwJGUcbbR7vMwMWbMhy
7muXWGfG/GCpCRnipHtWn2Atk07U+6a/kum7NSf3t6q5a0YLygiA7T1tucv3tXfearf7sQSMHwiQ
Ox+DyWSdAe4J297OdLtAGnD9KLDLR9vgujn68RkQLSwuwDwlSANGzfJX6CYVKi4WjISibVAZLcRp
z7d6htEXabyrIbxkMyf9nffcTmyi50KOm3VVpIKC7RMUxTR726EVw6CJcBWeadEVRrr/Ha3dxi4t
43q772UvGV5F8YJQh0q604Pou14IO1n/ZcbQx0Znhal7mgEfgWu4GOETBI86qAELhuU8tYD58RaG
NLz2OGlJhUk4grNdjspe9aYWljg9Yj8TyrBqJkggmgutH8FUHbLPM7+fDbhsi1MqKta9MYv5IGLi
uuEfB3wXk1VE6n5jtoiyKnBibGQoIjaDGlKpr/1Mt/c4ynU+OxvfYGkPXAI7q1wXax4rMGLX2tw0
OtUziVpiXe97aAwW4KiUEf6ueeV0Gow7DuBqD6G1Y5T9HNa2TChZYvoRVwvDLNna5t7l/7VSQtWC
Y0lENsU3Ieq6/kdaCumEYiLN/DytkQOhbKxT/v5b51NBW87PhbUj91yWBwgIu/UGBQ0B6O/1KpNO
UTRiHzXbf+jCgvtbCzXtxI5+67H0LSS3SyqFyZwBZanR8dEwEtSj3or7LsFwr0w8jseyfifDZJBc
5W1lWZAwlQPqVSC44R2KR5UX3TI3DrRjhbFr2RuCTMxxxcqAugL2EgZnSNy/issjvL+CSdNn9WQt
i52uPIsiS+FmMb76UIPGbg4xBpUP1FQIRVZWatwmcXoeEiottkNIeLv8ZLSex/vG6eLnP7UBwTqY
jdWzf2CRzpwHe0WQLDa1ZCZcwutu5RwTYm9Lo+Nc3MmJcpF4nICbXUnF0xfh3iyIdPnR/p8cZ5Wv
1ZzsNNR86EgaDI4Z2/m8AZQca+gy7z+5BthxSmrjGgRDG5m+HmbO+8ll0ENgs9nk0h9YFRrhhDgv
XDijtm19ys3aepLF3GPxrgwJSnYF45CUTQ6q+/JRP5ForIRM+O0XjOq1rFutTryusTlK5Eyh5lGK
fs0DtoQX2IhuVIndQB3+kdyf9XqeZ1kebsLfVYNkLJ6zdKvlD0MydQWi0n6th88/wSjuE/ud8MWD
H5GfzUsqb7iceMjL2fwcb+JUfv+BndGDlI5U0cSF+6euA/4eqy8oVfbSktoUZWtVTetMLIWeLDbm
8Z4H82663EXs49RK4fcZ31yXbKIqge31K2Kutx9sS6/09l3eL631bCXWp65FnXTDES9d2OZc7dBp
GYkFhx8ylDpVgm6jA1u5GTWPRfOMSwDdRzx0f7HKKaWH8h+aAV7T0LguyFjVVNNqIayvUozD5VXu
+ztZ4vjW9yHJHG8skL3nnHFF9vNlZThcORf4tWM7KUIADXb1ZKpqa49RhS9l4jwtZ9b6EK96fN79
DOcSbUz/0RCewGYriLMDfoAJ6/cCMqYXoQU2TR+UrOWCyWs6mS605FVXQU1xPyk+D6HwFGfD/rjt
Vm84XSNDF+u68c/JglUwYEXApy0/1mZBP7xq5F9VuBElKO8SqINrE5xDWFAbt2rQOnkfzaw8qHyW
knMO00X2YNP6aoVJLkUXRv2SA/K0FfKJhe5LaoYWiOs9Jw04jok4RZcEFM91QBty4mO60j0QmHVn
38I/UCilpV6jYOb+jA7S3Q1gWPbongfzwfNBGTzo2DZnvFwlNWoOgz3AFNgAAvNVXXtpxyctScEk
pdbcxhsXBbanukMY5iRfWTt1BSeVM303nnmPhv1joUf1VUBywKLYZRARaZdP5QTBPdSHwgFb9ak0
qFxA7HVJTd8CihVpBhveuObwgauSferQvhYz2tQelqGNR0pI2ub9Z8pJfuod1md8iwI8sQQcuou1
c5NoWWB0a4oJ6MVcaoRSsawILoSptMCl7H4f2lfSCAKFNkt1ohaz7nz8k9YQKDaVN0ml0nKVpmIR
TsuaC+YbdBYCBn63TkC+9X8grlzkHilq/mmZZhJTyME3are3B2ry7hbRXfqi5RDbvwFKNqWUACrU
cf68jYvJxcWRE+4wS3OeMyYjkTpBQW+2FGI/zuCmagXpRWyliZujpXJrnIUS0CEtpM9R/ICwReK0
bOpmeJrnBfBmwDPozPP1SFEzSxN1QTtfW0cur1fpUDMAc2uLXrydYpQSSJJi9NOLbRbHCiP6in8O
oOFXkLVeI3CIbymfieP9amCfdnpUViSakLGMeOFGuO7DFm5F1ShMJHdfBmnAAFsdeLCuZS/7bc/t
4Ke5UsEnLGH4k+A2bDnEGVMcDNKefo58woooqTLTxaI0aLT+/C8vcEPBJWP/lXKJFhEfuXrpUhY7
a/A/muVgiHQaCErI0m2xhn0XY0s3Hkprl/hKvFgw+j8szYW2LuwXuiCUcq4AsKbjEAXXBRktvB/t
XFwMD3LH+N1VWpYjaMZ7Y+rOltsRw4plHkHFUeP3ErsnETbuS0eX578WBHBFpKTy0U+qT96O+cWK
fC6o+fiMJkHIT2ZaMpBFl65e9ZWyIkqRWXTjwZQ2pNhv/kKbLr4IUicV4XmbNWkffxFsoUctk2d+
bYh3v4reCeJYp/ibOFoq0plV/ag/xZXbag1xJ8dbzewhKnzqEPtBGhxmjLOGRscLduf1sIHvV2fX
q9MJQ0KnqtBDCRS5mg3pbIBvmjdHZqTscuTnvwp3c3LPl2adxvPabaaLwlErX66jPwj9elEcz4Jp
IxcGxm5Fu2GX+rZMZRfod9jAIArIpOUKyIQOb0Zk1xvF4x2OGcUtSgkTS3mayrn/quDCTaKESr8Z
g2WkyWHWiSz2xmLnNkBPN8LZWxNG6qGxK98J2Any7TKtfk+c4prdCCBKiIgDPIpbDx9FeMvYYk+k
+J9KubLLmREIw2okqeni5dAoD9MIu8rmm9lpVy7Pl5Nxxy//j8K/ovlzo7Ox2Ee68D0n8bHrjY+P
tObWx8zL4b7cJRSlPX0WOhqd0qIXWAH+7zlEMOwGWJSZahwg2grSTD3PkgpY+WB7ZI73+sC/bQj1
wRxGNWpQG3mYmkAoLvkvxPnCHqanONNsTt5q5MiuCXPTNPZ2odUlPw9HQM6aG7SxfxkfVzmf1DgT
+IzrnJFBgTcS7RvOUArAfDBpI5GMwtMfCvMbXC3f0z3imiwZNJS77uj+/swWp/ifpd6AcC195LLN
utwkzoxPgkG1w/tRZFN1ujBPmyUz9M3FW6Mrur7fv4kWAQgAON69S7JZ62RZA34OcTzk2MSilxir
xMJIx2trVYLbP6h64kclSPv45Lc5Gj+35uXJXk9cJBeb6IPHE5ka222TrTy5dtXr5JhFMRBXqswa
0xFkxK64Y6KSB8FgJwcE8jbIkopWY712fBukqqDRo91BlTz4gHy4bhmohs5i+2AFEETV8fIDrVHe
RlciR0O18wu5LkCdSamovhryfqWy6+DqVB3l6Md/NlHdxXJZtMDjgiXbC5+P0Q3jqeUmuFpniNTg
sNkJZIyAZ4Qm/eOp68pnsHVvMo8lu1yWnehgYXpOHZfdBGe+Ka/AFh7ZwxmaPPfRDI0zOdBKyVm2
SAA0B3DAVhTA5iRRMSQmEDlUKZMqMfvfnL8qFHEBzfFPjUcxElcfhxfbwQ+QhPjRurnIC9MFzQoi
rTsb+eJWDiKxLacDYqfmobPTAFP996uNUk8yDS2sF2tRBkwehfKmpY0R5nTlSqOqPo9VDUO4Wtug
eEJRFJVsxTsv83i7GjIeU7f2SleMwaR1hVQBpnj02PVoGwD8a84qcAS9jkwuqBf2OeN6mOI7sDxh
qxDkse4xRsgn/TPul/KC0tWt2ts+3Ws6pu9gv0ighopSTjNok0UEjhX/Q12QfVMt9AXrWmcy/ShI
ckIaQflKzwTFVag6v27T7EjjZTnR5iPGnoiPlr+ba0URr3uIanouBxhl8aEkdwj1YJMkOyx32orX
aR4qXO1nsmLSc+0liNkO3TK31WdjvWu/01Gn4YWrDMPI1kPGrRsSuvcqWEZsm/jByYM7QMe3SYXM
5OROjZYnLK8amvFP7fb817Yhk9go44yFNzBLfeNAbhRTbyF95DfjvvlJtYDVRKai9EnKDmzbvMZx
POXIV5QD/Nhm8kzff7SYLUJi0Rqz5MT3K7KawE+FINYcVSwuPP6SajBb0s0X7a4IrmYkayCAgeTB
MNUSbPrGnQ8Ecf2ik65IhxCYJAzpTmPNVuuK6wUDrVdz8KAzdi4VASDKZurWfKT03KJmGN9QhtN4
z1sr4eGdeHavd7CdSJDEwqw42pVyDbH5B2PKBPKmxkCW3f/GogvTiQLiftZ2RZtwXrQ8uKywlK38
2SJNbk3sFjVuC8/tdMBjey/7NoAGYwJwiEWe4wm9vhuO3unNN99KjgJNIt7diamcaDnxCXWtRvIf
HhUzZELuHJmtQ0O0bf+yh58L8SXA4SHHMxrRqFF+kgNf9ppxu+aiouyg7wWsiFX6Vk6oKWZBvJLg
Ps77/Z/OGi0pQpOAnar+JXw+qqrFMaWCPA+iHub+c/09aztYudVaffBsTzhGyQIcmTiD7bI+hwoD
eA0YyFD+Y6TtEzn8qtshFYZSLkehJrRImc/hEVMnhvrkS0tn5asIqKo1GwmilnQp4hA4XtHun125
xvaaAsfilc2nVDzR6YbSetZweel1fQeWS8mlclgpxInTGHCXhuKzjv8l+CuwT4YJSOpZQfbrLrFj
1uY4v9JVZkdJipNDlkUlIDUxi1uFRdmK/P4g6c1xMwck1l1MrrjHkOKeyg7xsGYCDL7JguzH/0cr
jpzLW5uG485yXzBkNV8gETW79d5nH64z8q+rNL79Dmj5ElWXhVnwZTqn0Ou7dUyUs2Xo6ZpEuxoL
6O3MTGdCo0t9WLJie55NFsTF4YxbeJXDzqc7kxjAuM6BDJCJk3Cqu1bmMV85AI0A7DCCYargmv/Q
Hazek5Qik2TmxfKi5RxFSDbtyMZ/YEq69UE7hvG0YflAKeC4P8VPgJSeEeCPNa8N8P6Ag3XrrMPM
u2aLWoQEFb8tMWcLfHXCGrHmSjtdKmxLk5TVv2OeVyHLddXNRTkV35ls9hICO/DKhnqrV+/FFszL
iwmZ3HmtqSqVy30Ceg1Oe6OlApZgJ0+HSFYzOTS29gltok/vPSUmwdP+r48Clkkk2BVZzJS0MaE5
r6V4qoMpM3OT/oKq+gw0SjMSrrBLiUwNYA/QwYzQaJSBi3IxKFTQD1V3ot8PJrjUYizSm/MKU7eO
L8eejVW6HdNVfvLvnFzYQIMZzyLomN35jtu4GEfETiikX8uQEkRFsZ+SFr0T6qxKVd337DjC4m1b
SMsK5CSOgFWD3qbL2FaVnk5mRx1E+XSvGemJl4ssypTW1R7K20Va0Dki6IuzptGnUkWE/z268aV/
xHPqDwTQuyasWaluLwmTxoSO/CNpEz2IJodmfDOmjZiw8KP6B+5s+UDiPdDfWJ9q8ihPOmenlphy
aM+M7IG7skhG4QdV5BEVSVpIl8aR5nNruZvb+MxwniSjaR1fPnST4Izg3T8YsWNi/VLJWw6eNi4I
d/54pwZ6OYjt44BljA7oZJUYsyJocRTFB11jlq2GFVVJmoDsPKpQliaC0OHGwBS6bKSP1hRComqn
LfZt53zTYNoAMFfwhc5O1YfTNz078TnJmidEyKsIsp/49l/0Oy4HgNPnR8dfjmebi9O5JRFZENTV
gMX4JNZi0uFk1681QN82HKT/rqGZkIfWqjUyRdSy/xN/g5M/F2lklm1I9FT/C1jCs193/hyF0wao
ZmncS6kfMiar9WBgnbGelVGMf3y/Oe9ALUeqhur6Xqcvcm5f9bgFHzwgwZdb+j5wVkcFDgfebWjr
VN/hDwW/nkM/pFWo76A0JcQ4RcbPSN6pW415/4/iO0G6Vx6bJwjxHQnBXTqazkrWeWk03l26wmpr
L6TnHH0plTPF/ayZ/OQiJYJuuYhWN1VXX7hkVBWO2I0arE1eQ+pnVbeIsC6pBFFvjaWcAQwZC3aK
rodndkIiLoGnS+9kYsgk4MDREG4XXF3aGTycAmzHiMAwpC9d3ssAC8KxNqusDyhzLN4dcNMkEXRc
Be69mMXN/YgI6/25xHet2MjwSf7apSB2bX74XVyfUvVPZiH9PvsSSDuU/JYb446Nwn0W3YsOryhE
n53aOgMq2mY9diZKWXSrFCIqNPQD1ebW+8bmx8JeHbf4FEJ1CaV+OY0MvrvcXu5TrvQZ3OnZWXGa
vO8YlR4jbDHIRLcJWjMihzDAsXJ9zf5XD8Lj6b/sEJ2glhNLTgI9rkGL5PQM19b9oDl9xT9AQlLm
0EmkmcIM2j3eO+iZeGUE307NaWyYd9lx1uYqTGlQCrRStmtkwg2wCYcBy4GZ+Z/ovKXjrQbKo6ia
p386W0scY7L30qtstyk0WhqsBfwn7OoxPoWfUvmfYEdnMxmGKqtEYwo5mbmJcxpmeJAkmJ3jIclW
g0NjjC/kudSMgDCISRdPtP39QCwIhQZ0sLllJd9M2O2GrkIDIkhsL4a3I+zqAxrwL8yEM7tHc1X0
0fv3aR8JXVcuEE6LBedlJSmOEeO3LxisXjL3Pn2UTcfxozd5ELUue1mdiaP40+KSaDrnNv9uNeOj
49fgR9+jfpB1M+HfAHIeDRjeRyC6o4OyRARtqnInKMVD2kxgc/hcOXwU6B5DhU0L13JnMavLkCTL
2+Tj4XzJa6ioM5g9EiaUdkQ3qBszFQ/iUzuw89SXWpduNuVglYPDghf8ietii1mABGbKZN27atzx
5RpvRRa/R3h2gI/Hwr6kk7x9d/dGeE4wPt/Zhvl7rtT1YaMCHDuTV9jLhKnzsaue/sLE0AxP7Iq2
c2LztVe33/M5vA4xFW5y37QVirNyt//bjYJOBic9ZXMtr5/lLqHxnu2Xj/O5pWa1Jz1b7zUAXeo0
qrFPAX3XGww0ynS3lWZQv9cFE4n74fEFG/yUUhBph3R6FyZCCKmtdPbek7bStb0jgImdu+AucLzw
s1VVmDgWU58aFCYHb00yv+KBxv/cQ5nfUhGop8/kKps8ZzFYogk+ILZyVCE+PkQdokceYX+6fzpi
Y1eOwaxqXP8du2/XXt9nU0/FxLEVCYTPl5ZpaCEuPYj3eS2K/RhuTq8zs7rK3SIpQB/JcDs9bFng
cce0RhPTlsm8IMXwboGudzmTSAe9yAAmSpN12J6qZlxrFsnaCAuq4OxIHsQo+xwyVkbYI0VdyflH
kXmPiwxcw6WchkjC58vdt2+tlhK2u1plxPDCeI0D/LXbm7iN1MJJ2szvtf0UMB/KPL50Y8sOfY/9
AEaXyo5rYgRPih+PM8MCdgj3Whr4NRpFkrS13I6HqwkxCLKMnTycWrqerHNpmH4n053UoxHG517m
9snFvdcrrbquhOc0rEXAxOkSLldGue0gQQxAzoWjzUX8vq5JlDRQFZPmwGHqbu4DuqXpjJiq/PWz
b96fCjQljhPmm7tou73lXzea+wWPIRmtN3lG3w2gmRJYwA/TeJzx7Vh8Zu/E8sQnYyBO9FdGzdkZ
8+NWGKQM++540YRcc6CLW++fmbAHjze0NuKY7ReAxS/+8lmrefEZmgr/2v5pPqdxO2YlQu6HhurR
dlZvYDoB1o6Cv+2H01dUbubZfrL+AzrpKqKnLhtxCi9Mw67Bmz0sNH2BcXxlpnjxxGtTbt4nkjhs
TBEi8Y9wajXvM83Vyj7hbXDSBr/j2l1GpNNLU9iZ/IiS8q4Fev1YlIak8gB8C7uhkzP/V3cgo0Gj
4oMOMp6mHPqGtYDnoJx+Cpfsh3mUdbK3Nvu5O9AXbwGdTULrtJhLxxovwGEgudLGdhf/4TabR5JW
3WwblH+IqwlmVFMV66oZyylAy+whxXECidiiCyRAqIAzrTmFWlrD1xv+TyNe5pbHJ/e1DYBeWOI2
SzyK/hh4QJAaAFni1PEJIGAtMZWkQvj218Z+CO5f3FeF+tLcTevLSPS4MwRq+gWABo45JU6h8and
XCjQ2mmnOfzXA4yM5DtiP0ZYJhSkd1qlqTJMzP3DL4UWiCONb5U63m3ALD6VtLBUfcxG8khbBlju
F4ZCnwziIJqy2rBDp+zQvEsFTOBlpmO6TugNSfDpp43LS8asszBmwsf44h10BLPBoMwpBkM8xGjU
UTBwXXIF5ujN4Jiyr/OpYO8tdmGa7KJzD4A7AZ9Jxqn/rskR3log+ompLLTVjmM3SAkZuNGCOy0u
VhUHeAl+4MeRHTF02725ZJE8fuJfKo8RM7bHtUiYTbMW5lABDKV+EXWvpHbWJWXIg93ZbuXW0NBc
F+CY+TDrDsLTudApDY5b7Ey5K+jfYGvS78xGeOUtQ9ME/s5gPtG5KtgPxz6VPoCbMH3IaT0GVBiP
EuJ4Wd+HGENisuN4yc5lr6/i8h9jtIJt+h1lOj3eI7VX+mjc6bsO1fjqArRaRDc+0eOSuohUVHx/
QMlNszmEb58Ha7R4u8EJ/vbLCENaV56G61ZZRCpe8KjRkpSbgcxa4e/s8IYC2SA2WgCYMFjAZQN2
gY7HF0+SwPx3yUo7i1LdESXMNwGbQYy92eTPCo9L86gm4V00vpWj6xcvqNpCqYOsMrPjlTtYnY+5
YCOIJKq1yfjyJAneOR7xp9nUJDPiFsNT9/Cy8tWLsU+nUoiC9bsI21Diaep3W5XiE+6etj8DlxwC
3MXXmF2aUIwjnj2F9HwVrrNa4JkCoWpGUpOGiJBkJptRyWUmHpkxftLSp+OpeZQt87Me/8lAJo9O
VHy9gtSQAxmuuzyQlGjE8ErxLcO6hNGcIX8Vd0hidpc+y9+kJdhHigPqsYysBxfMDw2rIXqbFguc
hPNuILckpHIzpS9NPSyD45ACzmzYOpqPF6Qz2BUKETvPn6X1Ou3j2RiBi3BjDwUVIFuuxG2cj+4F
go9iGIGMNS05gitHmHObXvunC2XvtvrhCltQkiH0JxUznQfx1OvjjZ7JG4FRd2LQAaTUoQCA6tSp
rC4t19OKcSSYL6UBQgszRTpSFLWDKc5tez5rdr+FMizB9n951n2HK84omoh+qYEu8zQdQuA6jgK8
qi6PlXU0KQbT5C5khQnJQYekhYBSorctlb9pGy6gojoypdor08TAuTOHdYaWVdzJp8QzyYw84lUT
tKbvC+bVLpSuXDUnC+x1C3KvJ0J0Ui7a0KEMkyaYIflQrnRUOPTtjvPW/0IZQl8xz4C49j3IQ4kO
zAuGDFp41WRcwcVy67/cxXpMCGyvW9+wPMjALrOVOXXR1E+LFr37uQHm9Q4oUq9PfdWyvXly3t9H
jfDq96sBzq/UCMH3kftJWDBmfmfXEL5xBICFq5Xa9a8ZGbqunh0Z9VZgwi8jPwbXnKkT7hAKW02U
WWzRlNpe+jdri8UlRNeslHJkIVqkgpdiPQ9E/uXvxYeLeU1gdPjRtVzqWjpA949YBIbnBSTNy1W5
rVJQvt+y5pyaCCulPn3OYVAZnSA4EVgrwz77Ppu0QQiuMXXTXV5BNH/fHWH1uVXjJUJc+nhOAUmX
Qr2S8ly0o+egveuQp5Zw2HPy4aqGAGYp5sjDwcJ4dSYeFeZVwzRcU2xvLDHdjH9Tj0SNyjS5bcT8
60+LrQcokGZAYHosZSiu2cUF3DGKGr/nyK27UmlwGu7zZMaY6XCzt1bEsVf88XA80Bps1+rQhAaH
Os8q+qx8FA0MRGXfEtAKQqjv901Rt2Hd1vBOfuoCh6Y38XtnFdar+kmO3AeLKHeStrqQG86RSXcw
iyAakx/KLzDc+mgyBwfTI6DF93NEARULBK63ByusqcR7Asrx+5pCG2NkizVrpNZGQ5s741LrpRkm
2vcSyVWK1Gt6bEBKILX+dmrqQQmK/yQ3TBIltIoVi5HKrvGB9pJYfoaCq+waWOrJ9qCqiHKZBc+X
TFjG2jtJJ4BMBvM5yWte98KW8CBwnO9RbL86t5d9UTL0mtWFacC8U18WQCBaNqcKpN8YetAV9go3
UJwDrDzXl/YzPO1zavZADmua6xv2jh/qzn1hqMX+cohEVOKZ+YwKjtGrCrDxNpEWAlJMR9037eMu
eay7Jzzat9J3Hoc9YLSedr7BQBpxITkHgCc0sv0hVZlmlrTuu8CbtwiS+VjmlSrPnqMaEY05q7Ys
tqfuIdYVF95nfgo24uxAOHouAyh5yp9reilxqJDSngUoDUC7EnVMpWQv7OU1z1tgDhu1M4elKl15
w+NYUTKxFRnNgT6RwsxWZJLOzcVUWYOmCbW137w+zBVoYBv7VCHhg64XTKBGxanySPlhZDOrF7Nd
bVhA/LskPeXhzTJgMDsMr6Fw8Z54XRhb4ltigbSv8br2Ua7HvmOVnRsoDI+k4aa/M6+Z+WB4KYe5
6udQjaZJKniJRZz9VaJ/q8/WUszr6OYH1jW2eXLvaJjecj9vyxKEXOWpo3fiDZoCvcSafePHIZQI
hsq2jba8QIHQgls8TeZrtEp8ksg1XmHqforkZQQx0ikBqmzg7ClE4tD9yO5/KR4pVQukY4L81zEQ
DMO0B0V6D8sFRo29CpKqZVgE9PMe7vDlXy/PPma+h9U6ApOrgqi3T0XeP+YtAorTMtmTrrkV6pDS
vX9+bS5CjQSuh3TaQEb5bGKVJqaCwLsHyfBgwwfTOgfQoGVYpDhbdrSt3lM+T9h5iPCnnLFJedFl
IlBIEBARVHwBZxvNUYyBhpxdBFXpYtg5zztyn549IinIg/ibCjivb9ZTthwtiL16J1wkLMMHjtT9
ks9/+iZrDrN7xKf9jGFcCBRpu5xuz7qHhyTCCfJQhzX5hqOQKSFYc/zzrNQAyQIStl0VD4tHcubU
PJ7til8KvNlWdstGAKpgDwL6e6h4sMv6jlyoDGuCjaJZESAI+NKYeCH5QnO84g7tgWLBOssmwD0F
Y7/xgaSFaYYCgcuh4CJW1GMp0/7ZnZ6ybWPS/5Zpz4aBEM8c0XICJdxUuxi+AgN2cx4DTqhfesp5
hFCxpmgZ43kXFMJguS7Xw0AG5QYrUGhaTGZCKkB6OlP69Ap6AmiSx9FYLLqNj2eZY17CgCdwrEut
B8hE18jFsZJK/pE/Gg3AdNxtpBL+KmSeO86HMdZM6kX7Z2EdjUyjzQlsaDER7RFNT3ml70IJzBGd
sWUA/8FK17PdYxbN+mkawVab+gd71pmUvW+Akkp8QFzz5MfEMuMtnkzsj93zGUtDY0Fg/xWT8Eym
yzyMRayzd6l++zx4Jk6mxKVd5Zb+9x6iTKUlwIBx0Zr7h0q3+7Flvy6zWl083N11P6hVy7hQXqTj
/Wov0BixfMfn9CAQOhufXy5TO91TDwrlf9JNV7KLf5S02jT47MOusSynBgTo2AJEs9SjgPrl/2fx
rrm3Y0S+zpARfGJlrs8aHC0kp+C/Qvdp6tXKhVOxeV2e2UIjpVnQXFOC2NGrTc4QiFk8ojMTTT9T
P2geYl4Vw7JNe1rKi0PJkkuTfYlHV6ZTOJC+sEYyEcp5CLSiPQnL9Fbc6i58xqAv7srXNxR7WYKC
n7nWysWm9Fv8+UROmzWOv+kBzwiRAPc0AZ2PGh7AuSmu4PDMvXQ8RgbQgk1cxYgG5Dm75x+xFk2s
3roiCHriUnegadqAGZv4MgHNFL9Xlhxhz6wU1jdtx47yay4mlm27tgRe5GxY9MxfeZom/zd3OftM
Kmton3DBiBbKfl2NMkcDgvCQcJVZlpPMMwd+UGAkoJ8+OuK37JfTBRkF/g5CkWn+xluPxLb7RLUT
t69nBgNT5EVZ7YeYfumUERDLW60noChcPb5q7TdgUjTIZIUKjO+E80okYzRWSOh9iWavSjazVGjw
uqkhM12t+aWW+xz9Bul+8K0S6SIbZ7GRYsUyrfM0Aa2iaMZWsdmnoP6PyLVHqjYEBt3lTWP1gwB9
i4tQBCJ83A/2ZrV+wl/xutpqfn510kvI3zeCxKccGTChyqVt98UkDQs+/Thgg0cS0XaqhZpSuyOE
cOVQjxnRjSjn3GAXKwCkPO8ZccGTy4eTTqbfVOvdSAMr7z4+PcN/j73UrE5QnxtWi/xuBd2cCiko
hhWK96a1eFdCi/QQRZ07/hxMi7NppPAol9U8grL6xP3yhAaHZp8GRX+GRbObPfxEZZNuKxRSc44c
uqt8y0405HpDwDC3Doff0ABoO9Ya1W/qK/TC6BmA9/NFxo86mMISG8501/t1R2AW5l1RcoPx8Jb6
8xKC/7TWEeX2OaKNDzhpRYIiwGUifyYbkHJH6YLZK1yQsxSwI7luIdhPWmH+pktPEsFAsCDjMFJC
trvOISt1e76ecJfhLLG+BKRDgSqUf75+4KDFZnf69qe4uQTB/sIZsd5WP6+C/uXSyixrDwJE6bj5
09qben6Sx1ksdkL13whBsZkuza8eqrmri+hr3/ljIWghabK1CMUsRQRV+n3Zg7E3ie0R0/GGOLpH
w0mB8u460sYZGt7Bs1Ci+783SnqwOKR778qfMyDqn8oqgCMkjUkMVk5EqSE7dQEw3A5Rz3e0mtQE
kuXZqWSXXFrEoGnxInksb93pNAnArg/WRfIf9D6RxHM1rF7app7IZx/tRqQ6WX/r+r84qdw5IoNy
MBynHQ7LTGFBGuz/4M4S0Qd28tgruLzJqeeesG/bsPGyqQS/O82cd0GUIraEuQNcScg53Cn3ZJ3l
nyOpXh1AU6tjPyKqoqm9+v4nbFzMDICOdkLGfTmsol1/T0vwOpLSfsgnkSjB1dZiaTNnzfjR4OUe
J83KwpvgoLIp+UbDFNQiyRIzn/gTulhCtfqiraWErBdUpbfkJfXsYyA09QCoIUCvcrT4DP9ry1IY
23/MZ3y6K5FbrEMnfkTUmXtRx/48RQYRUWnswzSC+RMmSI9ChVTRbN8Ybc4zwvR88fqk91OOEYPP
R8aWt2O8vBqQn3LAk4ff3s2iT81+KdXE2/99u6+F9JE7QliHCgj5WIZpPGY/+/z21CnZKWMfzA42
S+k/mna7V1yxOyMS4Jk3nOP/Xx3PpWPSkoCOY3h0jMFcogCuaLkINVzwq1xmglB+Rn5bBVpUqnxH
wSVWbndcQMk3a4iGo7YczLlcRSqyY9OL/3pZEBMvkFy6WEliODfykXw0RnZ24QYSAMtC3yizfO0g
yYmv59+uiyGCVxV1/Ignaw+r6GhaoGa0cwojUCQJ9qOPfhep6tVd6lMPrf2xyZ1Xm2oGqwiiWU85
SfRe9z+aNezMWafsEoRizrKjumdbrSUxEQP8br2Us0kMW8XvEmK3Lri6WWLZwFUyQscBPkT0BOGF
KoD41e34rnFERfzlNQOXxmRjh0KfWpqVReM540Z3mmo7GQEE5YyEgy9TL0qQ0UMtje0XD3/K8W3E
5vu3yL1NS+CoKC/In7aykLIfohlTd4R21OhJAMbo8SsOlZMUNLKDErqbztFa/I/Qzw5KEU2zs2o+
w8JH73VZoCpiHB3U/vxEcnUTSynXhTMK6Xmv8jgRiJCtHO4JgBMGyAj+0+CChxPhRNlhQANQwtee
4CbCWJ38RU8hMW9T6wlWFAJNTUFIaMcvc1KcMS7ajF/yskUdunBqylgRWfOGpg7BJrMnvQmznruh
i1AA/SwFC2QB3likeuRaF/kw96cCE5ECoV87AbEBabiPRe/zAEylVYPpNmBcnsem9okCloU9bGsj
P+FDibip3y31JO5K7jn0RMD27dQo48tifPJkaZfBJuVfoGddZS6xl7kZ3JnkZPSSLIRwUnQAuGEc
6vFnSQTvuFmgJh+dnunz6R4BaLTaKsKJLeDUtXp+RKYfAS2xG1EARlbR8ku1KOZZ22yR9DUNoNtK
WQjFC8Sr8gILNDByfP9Vh1kBJ26sN/AV+NFVVm6HNV8zh2MMdqgolPGCfVMYuOBTKArESSqD5aWS
FgeOeMo0FO6ZcG/0BtVqniNoMBzKKoqwdt+7saTHBRkNtoW7sEHid/axe0UxZE7DN50rVqV7BNCb
xAt7Ekd0UMeQ7yZQyju05drUdDobaM6iiqUeJ+LqKxVznjHC8fLTQRFzZTaVteGDqAmAHXPQ6lKg
ZmKSkermSioz4H/tiohIMImtK5IMyD7+G26A3h56/QmuvPZNR/esCHDVPoAWkP192p0qrhBBoCuN
DxKGbWe6j3CnWEXFXZqXavkkbJh1jxhelNrYve87S8nnnoeQkLmxxGqzHuPjiVFmjkmTXdDpvApg
mytQ5c+srpRihRV5hfbVRf6m6AIeXql7cn8edc/w4o26QByfKCi4FV1LLZE8+83DuoDYyNIYkXHo
wZuDxcNnLtm/Cgn4NqIThjRSK+Sb/h3ZN6S+vedqc0VVVvudKhr5/TX3o1MuUq+47iWkEzkgdrO0
UMRl3uzrMEEYAAUIjWnoYDleBNxVLfLk9bp5VWEOyhSe5y2VtFlg+sXDwKQ2bnov5DFbTqkrgcOL
mEJHrqzCKD4rbaYYcydP1BaiTdu7buQ+omOfgUf7KqpyrhzUMrofFowcGz60CGmscoT3oENS78uo
I/QS+8wKKrVvr58kvgdAPgfm82BZ+aQbhdPGMMFh4WYdTCtcMGuY/kGGJP2yjYqgi5ON0Z2zH1WN
sBEQTWSfg/p1jzpQ/pMuqk24A1F9uXo1HUrrZU85zaTEYszCDv97e2ZKz//SmvHtA/xuVOxt/jAg
afLpwGyOqctOvpg4gKRySB0/FkDeNYNxJL/rGnOp7paHhgsXJGCG25IUo2tRYpThVfq25H5OQ6DX
HY9BScTfilXL4jhR+jBjM6qHvJgC6kPCmSszS22lpYGrH2Yzf6RgGcGmj6X4OtytgFTUwPURxz66
qCq0trPKee5o6q1iv8W89ULhiwYp/th+hfdzzAsA1KE0+VJe/qj6Odd1Ros1EX2hbO7LxG+zOrok
OS5RQbeag9JiuQ6Qm/DZ87zUmDheMg4oMx4EhnqFQluq/lCirnnyWBiRjq+e49MTITzpctFuXy80
QZ/sYRmQ9jomy9MtxoriG8v5MOS7OCUszXGyKEV/pgIfzTgxTFpWp9a53/tnCFW4m+71vV/CU0oP
yamyjBu1s6kEif8+znDRc7tpox6CY/SJUPa85LMi2Oma8p50qh5TqiORnaFPhPJexqDXukU3xi+s
U/9nzRe3kRqE1cJajuEyvpt/Gd8guZ3Lj9038c4Hggwrvsl+jIpkw8Ohp2p3CAv82stzpIpRD8wO
J3fIvmoU849MmiRT7CwXzB5zzJz++Ms365FxnSYmebrl7JD7wBcAU1p8vNJIFCfoPa/mI/SileHH
ToSw8Gdjh7K2RMJvqPOklM/bf42mwSFqZ5SZCRL2P6RcXHKvWJG4W0STZiYlxO+740wrxDTWRjsF
Airpi3Zp7lMO2wGMwWF7XzImuHPEb3UTRJM+w1I4/BoXmCIrJOvL6HhXJ8PxITIlTr0ie4Js2Kti
8Gg+yz9vF/GXFB/WZ+gJzafS9femtUTg3n3XzHG87MxOHX3VKi9rEErDy5SaWsZHM3ZCv06FzjEB
+rHoCppdDx5VaXUPpizaEX2qkwWF2LZcBq6EJJMRWQHSozGvfvUXVP8jwbdfpTpwISEe9jYdOw1L
nwBMExZ9IgoHIMJCmpNjOF+IQ/APYhdrnJNMDItEEvv+KiUGyYPKWAvR3l5WS7ATmJ1WawRxiSse
lSjxbUOaRRDbeURjT7VkuTRoQrnjNp/5bapFFIOpHpMK22HQ47A9YpQdKLCatzBoh2avuhFMc080
HEuHm+f8OHs8Mge36zUyK0f1t+OmJ+5FD0E6lpXYWIxckyMkaeuRWkhIJw3ebH4z1ex/Wz0Lv2tt
x4kvoxOwuuAxN0L3qYwEvgv3gJniKzso0fH4FrrsGku4aU+vK47rbJmgvG1rD5KhQA/zxnuQv4XS
9dNVPCfSExJ+SZJ5xLGL1Rbq2K4U05aohJdMi7g5bpCb6+7ebpp83ckgsOi/mPhn403gJYetFucN
x5VyqbT32j4xWA1lEKdmEmrZjXd1k008U3sU1w2HQT1xbX0T6z2kwJB55X7JnE2RY9NWzcokOqan
RYcHYdSEybEPfZu8b5H8ZLNn1uuUu+xmwjF3/6BWiDAGN1lvifn/sc06DO9aKkw3cGt99LUryn7j
8FJemQnEwdZPgZLrEvKOSwxFnqr6ZnSp+cqjwQqUZ+2stdpKbwed1H6ExAMYzdALbghjYknCYiR/
JZbOphnWa1Y34POT8GotHJ4yC/723INv8DYXhNeC14p6wMBQHsGC7ME3RwgoA93bzf+MoPwZ+FGV
PT8WVp8fcS3zpZXal2MBehEf/Ic9HtlVVVijCzaHogRT1JS/BEsKkO3UfS/E8aXtaefyx2ZqQplb
dlNtv6Cr0qbMlEBdyx2ZcQm81gti2Gs0hpdhUy3705f7Gca5kgCG4hz67Z8vWk12YKVo2PRxMwn8
vx2STXmoVko9x6C4YX7RGPsr+YBfp2seIJNl03BjC9Xr5dddR2ULaFKCnZCCUoDmLCs9IpTa+Cw4
WWEgDlqgSGTkHrp0QX5yNADj3uedz/Jl1IGFl7Q1Ju9o13ZrxDQFtmcewSzbO3g+PuKVitBqCQL0
QAaLJMPPfGseYwngona7mLM7fKY4HOBxWaHAdsmEeYdEq9WuGggb9C1dvWYswsuCwie2pNsG7Run
COWr8dJHWmEzsTYGg/HB0WX9g8uVxHyI6XtYOOVo0q2BaAlmmFBwtu3wDJnLqPrdFB+ujrwksgOE
uvIw2flBztpabx9lUuOTW9mUVZfPKnf8wkQlPXmkvXLN7zq+R1vvbkAEkK8deHvfRLUkFrstYW5M
6VjXBBCy54iLh2xUFY2hegzblz8840ea/XEXtLi3qDWCcTy5vA83birr98QEmf2ZaAB1+b6+gIML
wdOtG0OCWucEupxFbOho9tRMYXbTUgDmydzewROEWyfXr5co0k4bDK0CI8R0EG+VkKZSoJrWUOno
fRLs9PCijvc3oU7iN5BhruBPWVWKzjJAYTT33F1cIKE9r1t/ogCigzuKt0hWoCBSgUrw7rUi4RZ/
Y7AYUAhXwR9ecBsg564I+RygXd7bUMHDJH22HEfwMR9VjtTooocllhFNx836mxrqeevaRpsyQpSg
TMRdYTAcC6eyHSY277LcIfXGdyYlVLds+rrpe6jRJheoCcM9M0KJT9Kbk4SmU/O2BIBoSCqLNrJs
/grXqGkRZOmX/Ga3/xCvjMaRyQy5ZeV+FfI0ptvHlS0SVZdEXntf4MR4++jTzemDul1SRXJOU66x
WC2V/6UWmlWdGsfH52MidhyDkGMPGZvggNdaAQCg+Rc8rK6mIsVXp82/gROvQz8S95+QuxaNG9lM
lkSNmeLMuxuKtxwNSew4jlx5ON0O5NvI5OJPPQY69LxZuPghiozVJnkpZ5hPCCW1J9f/Fl58HUVo
3QfvO4O9CWJlRk69ZSbzJqI+HeWBG8r0IQGjaenUxNt7WRmVjcHYG5egPsy75DdeAFRg/55Jw13Q
tRBCsKR85dp9GJGr4+XPvbo+OviV3QmqLaJivzBtpEParYe4jGpPiAUv4p8Z5t9oWlNAxEKquJp2
cqis3NwOn28D0r337jPHhIQLbz8IIqkcopO7ffk5AVkvckNeQe0P56pPfI11eqUXpwoI0ZgU/5O2
F9SX5uXpbk53HWx/cutUF7MQnkisEUS9hAWX722rMP7CJ9tbkU2QHDfJHBrz/yT95TPgj3+cavWo
ozQkUoyi2T/lkpR8tfX3rNJLIvurx4Xycrf/drR+bqYCtIZ32To2bq5ucJ1N9p0Qq6T/7sEbVFI9
mxEdAikL+k/ohhMbCqBfb/eKt+zDgiYQMvK43VuXgEQI9lWZKxr3LWeiqaE3yVuyttAryKo00sRl
I9nw4CAV1XcWcFdvwc5qDWihAb3lr2QRifPbyd/MRjPF3lMDnf2YIUzByInlxH0wp3PIbPcJH9sj
2JlI1mESvJ0/kVLzmWwcygvd6Ps8xGlyheCKCki8YO9QuOaAhDFwf26BPEFyH/vm6fxLQ3DMhMqf
w/dPlPW2pA0DQxwr5WZnkNY63lvBJ1FZf0vis6ubMMIYAdU7mNL8r535xtVr3J7u9stSWsqrBZkv
6Gf05j6Ilo1Os7g+Zfy4FczOgH/2+uVrhaOkSNI/BuUZ+P8tu6+8cCEUmlqkpI0whxFEDOHkLd3g
zGVBY2aFAjVTf0zlRB02nxpZO8vx60c3GgCA6HOkWPRjNhdXJZRzHfuxgXQpRm258U3ktavs8Vop
VBKE6hpPigQxZy3l14xqPwTkN1cIryr+aJ9IOP9sOPD2jn5yWkO59GCEbI5acnb7OqVh9jYT1OKq
nd0Yhh3+s3B4S5Vpz4KmNjXoSbhL+o95n/GbBLp7Q587m3SPVZo5G7KnAHABioUGwba3Rud2oEdz
k+JUIWd+UoyEhGuXn2hjxtALo1eOlPoo4Who2bpO1PWEAnSrkdYW1S+qhY+DcRtHthfANkctRwzA
FfppkPm4+fyZMK6mTISfFweAGjs+K13icGzS/dTlLILA0z18it9MalnEH5O4c338iS9wzLr44SnK
4Bz5l94PZR61OTULNMr8We/UGrzX1rSZP1yTHeaXR68p4Vgg9C7rX0AKAMnLQ4x7bWE6F4RH2EHY
/u53vaKdk/80Ok6+Z0Vrs8A1xzQr5jpsBvX/tiZ8wMcUDhB7mvGS0PwlfbBWeQNjyZBKeVSq8u8E
I3lciRasLOneqVupwX0xy8naucR5+90zKlw3NHKXVe8I/ZvK2UP7CfSJEh+WfkkbebRscMVdpQdr
bCmaC7wQfQpwk9PKSIZZGL+zCBYPO6zG4kfv1emJXeHuPaZWObF3Gcqqlel0wyQ9XOBrlCFgcA7o
S0SGu1aP+Y3HtMnB8XFs/1xg16FyoAihvQroy3PKrXCF5jPE9qVtbsLm2FbdaI6zAwk+lr7Bdtq5
bmfdNHsvDYdw3on7RPw7R9HZSneq2NbHfpDPq5xysXzqqRxmu+pbrzVdGI/Rs2oM+q+xztyQMlIq
tH86KcX9SXA4Zxn7sgpc069Kd+t0sKzpOPCAF6OEC+Fo6tTB6yOT6VmQz7ITcdvdLvFjzgEkq1KI
VOQkL/OqGkLl4wrcQro2osCTYSH/11zGy/DQOcWXKHBYYPiLo3lW8aUOtaF279rXSUJvnliM1o+B
8IYuepGQB9Kp4ezL0KqM9BZc/nQYn6mgneuzvcDUwtAIEs7ehGqDURGX/jdNDVOiTNe/oEDcP5TM
L5CuMfogFB6mh9KDSN2CKqm+AW+u6GtJV52o/9Mi6jW57QwhrRH8kWlsSgjLyH4dgA7ad4dn8IXo
jYAjhoLFxKSnq5W3xLWenrxvLVgYZ/VAt1xP92jWIpFLtkS4gbLWJmvrFjF46SRG5J6Zy+X/ceKw
1D5Iy/koUFvpgK+bU10CWXQ/V6Ja+Vwns6m+NHbq7hsAKPKlyS8NFanvLcC15ZuKEbLxSgOBUC0/
jNf9AQoLC9Ol/4lcY26czwaVwERv3LYpydCtayfieCjMk+3qR8L1UxJrnLtHohqbZGU7KnJbYmbQ
OzhVWjVSzSRnQwWcczgFJbkw7lE7HmRua+9fv+35wz2XueqBGFdARwpTa+zOZIO+AZeJqUp/vRS5
9OZytPUChy75s5gaQDivQvVzns12OrNMSjQdgCaEmk4pxjwV/8yeUxvu/aLr3+sXyp64aq82NTgS
YUTu7a1RqYxAZ8lcVTum7V3DFog8hyu/Fr0RH7+XIUu3NnNmYro0YEf4EYqJwx4sWPAYmxB1MlAt
lLISJiR/LWecJQwTMxhQlmt04ZcAH7c7pump6cKhlZd/Sp6zKJKnjAn8S5mWUb81L+uO5x2mQO+y
YmeDPJlUFzZrj0fzun0Hk2m4DOk9ZhCWmpdCxAVXwiGueLc1a6qRe8KWKIsP1IjWCJdAd9dO+eFn
yJsvi+50/1h/bkSl5CbOk1/8TT3FDkz8F5Of4ZfLcpVt4Zzd7943RFjnw3/ctkrxsgS+1zmEG1FT
GTXMmp12Zfgxqh0vVwxZwx2Jzyu/z8aQAdtiS6XZEfjy5Pd+mhznMIg4d7usLXFFMKMnnfCrfESK
ZFr0QQdBiizE2a4gjcK8cS+MXYxevQE6GVaFjfxhv5dbcw6dOJoeu80xPNg8hI+vuKn4XxfK35fB
k7zDKwwI/P2ACIkBBXXUDqmrHfoGjiNyg+OVw+WMRaaqcIWy+0UX4wy0IZ0eg71GepzROSuQxxbq
YrP/CK2YfqY7ZowOySlgLKFrC4Ifa/GrQ1Pnljg4Kn20YSc0jHqkepBN1yRjMCAsiIALtVtXJho/
YJl76HZEbs2Brou3nrODY6b/Nm1/JhZy4Tb4qq9V8AIp28E4Gr3DF1YUhKUNw+f8jQ5BbIl8R3gM
wMsexDuXj6B4WH2elO7t1zay718VBpFWQWDW3a1Vn8BX0mkL1rBqvf2gGNRuQlE/zvDYsOtLedFi
48tddHl1T9vHoPrFMMv5ND6QSucxQvDqjc4Pp5Z4LVj+iPwJOQ6P2AMvRfE1W5cTeuSd8zPas/nl
yrwlj6O1LlV++2DsMcG7kGhpqAz3GMxwE6x1Q8V4vIMyo+frw0xC65MaGZMtOQ2n/R1450AHXieC
f6On+ZFOPYleserqPzhgqQGl1OruDzB6nYU8xf1K64TUTJL8vsmcu50Li9Hcv+C6j3Rg8R5njOuA
9eZKD4K+EgBu/CZncLx0ayd6OBn6ogJUB359vuc+mUTH+GTbIwI6PvCl9iItafnBXo3s0lIspk3C
BIU6uRLmIlNTIfuftsJqeZD2omi51N38k/45Ogbmzc5k/BHfMTVcV1u+l1O3cxwYLUoUR+0/kHaV
tbUekBpXqnzGh/H8RBEc1RiQAhaTGjhQ85ALhCD/c9JhhHedSrfSvw4z/Z4ASGVdh4m+rKUWDADy
w2s+7lJzlxsVPadq5BfZpmMX4poTook9jHPaHyJKbAIFf7MZE2akhXQMfGGpTviH+Vwh/FtGbyFn
5LCCHccbwhsDMbfV0IbrDbU57d1hoDH9rwUtJ7ps1GnQL8zDwsORSmDgaHQDS2JKcfGqu6Wlv32T
WoVRzfhzESflcY6OcdhfWNmIdwnB1b6QbTcy357/S1gOKg4he1LoWKBXtrpGgw/GexlVaGgjI1C0
oIS3EQFm5lxqgZFYZjYXTYuRdVYTslwCkNNRnw9om+UQ4chLy40LnbgbJ9BlicPeBkw1W7gL6Nqu
Nh6ZIfNuSAZUHjnFtKbGktSKfQWTCg8brYrCL3RB2bDSR3foZEz8EUQhwyKXdTwzWucggIwr03y8
2lWjM0lB4GyoLb6ramTI39WzdaKC3j0ZGm9k6mToM2LzQhms9I8grCTuWw63P79Qy5bxL8tNNBDv
dcdgYGF+Bf5n0a3UwDKqANn0p91P9L0udolzJtaaEbOPTfY13N7I/ONQuBmIvOxzYkKiJo3/Lxub
RfQ957NZuTZ2d5Z7ZIoSbLiQxFAiY2NMspEDtSE3KrdpWLjJ6NhEpPZouBzYH8ee4rleVEwUymfg
2xKFqYpRUDfQ1lPkIFZlkwZkJN8SpyHa9KP/2F7bn+ndtrqdEMoMEsdVonb2KQjeTXUZ9RL8+roE
WJ0J7hcVTq/J0HfqCVLU5lFo5mRfluGyi6E4nroU1YcqzuHjLgh0J/BIPzj5W87ztzayrWnoTuKW
G3pgUSp2TV15htRW6ZWy4cxOxvCQZn3H65rh1KQ9XF71KZjLPZ6tIG8+AXHwCA+Dj4pb9n3C1Xit
M7h9KXbz3Fzlo8fNbZToKk2oCNZfwI8P9uULCeGhBYcJgmMpkzuPN7uzXSnrdZ2bS0+f97PXWPhY
+Ojzu2XVRlHM8TkoLXZpVxi0qU+DC5uEkqC/IQMRfT5GUtb9JuaRM3d3YFlKEd0whZtt4b73Pj31
iKXz+qG9kwGyvrp0IXBDSIqxhy5DCJ2zdLRcwfx8vdXPbdlYjx6n54LEIMhM1v2mYz5JdLElAjQK
E3a83UECnRt+/yE08XmyX3HupXunaIO3lmeDnCk5a6EX5yG3eWUs1WSeHO4OHrP0UpQaFAJmjsCk
p2ALr+Xmjf0n4YJWFNV65dJMIcrhQcsR3vD3XxE9Bj62bgamSx6N1TAy90Pi48YBGIosyKt/zFk6
9Xr2rOtPSVCwLTbH3XhxGoP8sIPXIm66WnpnQNXOxitjpIB0jovPF+3UmbCs1gMbfy85tfWbhXqZ
xLnG3ia91FaSUo1vEpkwHAD3aso/Kad7lmJijNDqiyOR+gh8AGv4dOlz6NINA1rACjs763qcMAD9
NsTT5uvwL0XjcbrKUP2L+hKEKbsKThQqZrgKpQqkzAW5JNrbggHB8BlkovumtKaCnGHKXsmG0zdU
X8eLXKiB806GP0AqilHkXEUXFrRrWrAt2eVJTgqM3nyQlb+OyfcIKD4iv8f53NcHfXgmPa1Zmejk
L0hmwG5fiS/4i/LMXqL8lG9Vp8+Ucx3p1RRJQI048L/zy0KvQ8hDQanogGaJ3UChgMTeKsvjEurF
MzZ7NH4onxB3sUENiJ4ftniL05fTNG4GwECNqSUS2tdTpvEnL/8l0OQ8TFD+MCXkkAXEHS+eU7Q6
8vzay1ATIz3WVYiLOCDj4kOdvWzkhsyjOtYdU4bFZ7VjWXfnQeWlrs4I2R/IZV3r6qosfRJdNGS4
6ly/EpOfXthUlHdewxns/vyvGrzjG4LLOfkSXF4pw0gZR5SZfJ8pA3noSm0AYAScOJOvx1SnaCp4
Pd7iKvazPFiVeiv6ombIrKTIXYPAn5kVSLcnOOAZ39c50mSWUZafKVR6rbIsZQP7w0s18GryP96a
dzAGmSlipKWWvTjKBVatHilRRpPzcrjGk4WF/sL9pQe00YmzhhGgjmKm7bcuBd8N1EHjKkgB1EoZ
tiFfSgXkxDOsBl2Ge58MQ/Y08Ws6enXvajLpJnXXQD8HwXKW4+lTdfjAKVX7Wh5kOByNQXvIV8AU
QGc0X4XmbGhL4MuGqUREKhLeXEqperS2gc3E5+4VO+M6QpYQlC1ETSqpMQq12B33B5vPx9RhqFJP
Zoou22lWfTepsMqexPsvXjnXwqcA999qlFa74GxiN8URwYINZ0ImDggxG7Ff2WmGVwJ2z5FEN/2j
dbk2g/WCi0CvqFFW482VnMxt03rvm4Rh35YZF0ol0NgCuA/72i4WNXB2I/I9/t1+DFjO4b3kmrWB
PZSSBNvEsvJ0JdQESPhKrAPeEiYkWsjwlZb/7k+4e/1HdF+K5HkWM+zLYflTykwnieYztT8BVPF+
b3K+3dJJHDaaZOw23GnExIehiXZ9C9hVQH8ow/UVs2I0D6LsbViqQv7F0iTOgCGNPK0EDaBNME1f
mFmfIlRpW0u0AZ+rdkkoCXBReEDPRCkha85Y/0zFtS1KYQmNTu28+8nQy45wNp8QNZLYHoTedbHt
e4BKJKJ9ZgFEOS42tI1gBLW2jwquFaopqCjH+8pASEEUoMDtf3OXlCWCSdY4slh9azk+QxZT076P
z7awSS2/OmTt74trIz5c2s8u4MNKqITelOjZHHvdrhmuN2f7JyWdf+iQOuLUhM7BweYXrzj7WKoN
XAZrC2D/i4OCYpt60DUALQyaQJIElF9jsZVBJP9Pf67eOPgkkbcOJn1N1AkPhY9s/CaCoeybrM+v
hiM4qvw2D09//RmL8CH8XSMrveTwGTERu/6HHd8LjIoG8DPmI9WcCM3zg35x0Ud6OygJA/dIvH99
DQLfYwAwaP7Dp+xd81to4C/euzXAqbDAphdO7xYxWqRWrOS95/5jRJAPRoYFCuUBMKheO/ojMxw7
5YkSnqo0rpj/Xh3jURMG+Jfkjv+r0xTBlClpp6R5bwfaEmO8FRAbRMe44zo5a+eNXtuGDpYafefF
bPINKSFs5rZ0ZzDzI+hTQb7BsiQDIJAxzQHANwXKBx9mbC3oT+A6jYjQ4MUNQggDGEfF1/IALVtD
PgsAjXA8uHp943L/+FyWgyYK/PpavHHDK1JbDhD3w9ROa/K+6440lPO5A2CTBAkjGiUtkoA5mSbB
fxPk7vS2DA8UxqqufSt0W0ZWUzxStC477P1SoHsA/qAqp1+7xOev2Hw+m9GBXKMazWZD3CEZA0kR
EovKApO2Xm5zGMLTCfOIKScgOUlKamI5wAvbrfaPuMYNTIAnarq3Xm5ksMLcU1N5+/LnnAqeT6Dt
q+rG6uPBVYQE8t4TuUMJePWf7gOZu0nFN68u4xe9YGaXHeEzAQpKVo5X6umowgl3A/tz7uELprtN
yo8NeG0iEnGhmxu5lkWwobZPAwvBcxYEC+DiDLW42pARtXrgyJaMPFulSYrTM8XWfqp9zO3htVJ4
wR7SoNbtIeqwRkjgeMJLQSLKSbjnbXRdjQ7BADGL6lCEOWAyVnQxEUaDslPd1ACdEmTb3tfM+Cuw
J45/V4WKcTKAtHF9ILdSmPSqkPp8sOhAhfztGXVOY6rXDUpOj/UMCDoUjJ3jFVrh7sukCovtqS+h
X3X+Tp/ZwjBX5IbBZ5K8FUHZ9GePN+1d/IrW9ADofE61M3I9U5m8m6FReP5uLYND79OuGIJ14Yd+
8dLwm4AWmODhzy+AqjyOtZ8gB11a7XKyil13/MnsiTNdMadBoEx9P38RDLhkRmRfR5am7UyrYOZD
3W8sF3h+9Oiq5LfhA/WOK3RUMu5LuAS8oRSK0vYvQqkEz8YXA7xQy2X/pqFACNDBjbBQA6SMFZNR
iBFyavOPo3IuILBSR6Xxr2q3xbM/0KgeV5OpSb7VEhIAzh8/i9+fcv8yCzZWs4DQ6d7025+L9cXB
rYXYfQH1/FTfEL2HmTr955g/JxkjaiONEElwd5U6XP0EigzraCfT0L10hQrOHWeiy8dSxEUV1ddv
qWYTPNWUAHzHNL6cuYZQcFzECKFrxLLO2VZZJHwFW1UzjtJyTjaCt3tMqHnyx3qWI1OjvkW2iil0
5x2jj1IbsZTMHbKN79MLMHXVjaNiez4Fx1oaY+FEfAxs4HCsLpU7YFkxEfMZ9+c3m3ju0s0NQ74/
hI0WVFHYhTZ6H7qpc3BeUrV5lpqoCwKIi9SGj2gx7hRXlPInJPODRElrdZ2c3in+gfeCJPdwKLff
5VSkxm0fGLzlaBQiwEcalidEfuPFiXDp5gvJbeYq2GTU/Hu2/6EPImlGefSibD3Sb7X8MPLgKHmL
q5JI4L1RrCyeKjtEQORKR0/bjojLFg/nmaDQ9v6VwjknpwL8WJ1pR5/JbIBdhqNkH5ZQmM0DJG2w
oRhE0ZHidOZs9dwY8oDSENVJ31wZ8A9XZyR8NGDKShsj2p/WKyCdQkuk9ucNUDpeMbmq4m3Q4XWB
l4rHx7CfIaai20t3k42CZRT5fP3xAp5B1VkqHkR8J2u4cKipyAwfpZVz5czeJkhDGKefsOVsNbsZ
EIisPSumKBpHFruGPURs234iRMRzCBWVwvG1fxiTuEFjxLXNo0YBI48tZZKL+D4uMo2EGwjn4Lsl
ecuXWu5kPf4XQCReyvL0/hOrVfmVJh9oC+K7gZLQnyKM6c4vf4KUZwtMbeF6p2gX0/81n95AACXH
AK2FQvrH1ncXY1tVtHBUoFxa9ETPmRzsAMLqrjKhMAQVLeMgPqV/tzd7OYh4vNZWdxLIK3BhmJws
i+WeovvkcQfvbrk+fCcyHa6klt4CsWwZhkxsaLzuAGeyMZvDCob3hoyC/WYdGfz4gcOQWp/aS/JH
Q0qjVwDp+sk07TZFEuirzat9HFKcvay9ObeN2OywYs6gUZjrNQbqQq6TJ30uRNSi3pS1KjEnjRXi
4waLEjj8sDKZzdmRcgms/l26RN46pJqfBA4+gMPBnAyW2/AWXm/OBEZ+m4JGp3WLriq0+XjNVq92
1MqN6zl6k4aoSrG6OkEBciqbOrB0RNImN1gG5cmKDgGVNxFvo9rM7Qo4Md53b3aqv5F/dBFPz+D2
CnSGVBqQdKxdLXDGRojk32TWm8S5vL2rgFezLYkMUK/w402sRvfXLe5rP+mr/QJKA4XIRPfSJkm+
DAPuwJgkiRZynzmkogq+je358edRMKj9zPrDN8NSAHMn6ho4nIelnjLZnPGPI6W27AEW3xG4VElS
VVAotLi90f2EEb9n1YVhvr984QCfFwAiQc7axSgerYNPcP0JG9P5B1E5m9kn0ty811F9xU3QQDVg
JiSczMVJdWx9GWwyL2LC+hBBkwiyKDJjHPdzvRZ+ezdEK3hEsnMtAPcUc2h5qnCndqjtKvncQrJi
flYcwh//vdj1uP0i/8QSHABQFxeW6WH+jLaVMxFE0B200yP4g0an2mta7XG3KqPXAA90uXRjREo0
iFMlRUo1j0UFXMPDuIw085jM78t8PpYPuOFX47dEwk8A02YEvo+aoKkutENOy3pJTJenRPpVid88
f/crDN9a3WaGDKf3ciTH2PMt3MNgXGC93HCeZa62FRAdQMPdANprnZnHQVSLNtu9xMzunt7gnJAA
snLjCLoDKISar0siG5q1yTODGlZ2a7xLBoJCt9h0SdC8Lol0u7FYFgyJrZaXrGrqmrlOkl52S1Uh
OAg9TNy76WfcKQQ24fz/h0dHp03FE4aJ3ijTLQVJu0Se71y2Ro0+sgXJJv9rGeHS58JNOmh3fngZ
UvKNspIqcZhMPhkgsVGL5hUiDZSvSrB8xJMVoWEwoJkLQvQWq+p/MeAyPI0ZpEWarkTzR3iOiHp5
l4Q460C/hTy2vO7JaC/JFyn7BNWSSBfa/rBfLBGCdIlDKf2Zcbj2RrunM2PWMjIeFr+XIopfYRLx
fWBra9HKxLnKB3vvssrHMR+vbFovWWbrOuTvhl/+/4CW/7jueVSUBSS4+kTbj6LEmndRMz+0/ab8
FaTmSo8QnDhD9gY1Z77LZGYfW12PcsveH1+DLrCuNJYnoB1SRbouQ771SBJHFNQSZHN1aBmYklt/
/aWt5hxJRdjqk6BaTLND/DquhmxYl8DheKcx8llNN9NVNxHHZNNqgHozuieDQ0p674fKFgK63soH
1r9ecOW1z16uDy28mQ5TOg8/nfVARw/twXh0wxed2XmOKm18QsXuBPyCNEp9a/s8lEPG4oQPpu03
X9OtAYZSNcSR07he6Mooc/1af5TiIn0qjDffvUNqF886N4F1Ct3IUgOYrtyR/8dZkVcjUPPDY+GL
PY5tJivNaboH2GMgPyfZii0gKlHNhjsTmtuSfsNPKB6lmN8Lod+vHol9MjZImwflCMf162Vp3Lim
dq/U9V+8hduHsMypokEjXnyOghYB/DutNvTOKiHCtqRdyuyZYTdMK7hoB6aLiwmTR9g9wEo0q91s
rIwTQi8THmy5/JxWnxoK3vK65kpjXbrC5Wr/vQZW3Qxilfn+rTwbwHwKexcLG6hVl3usHTYyky8k
KsZgRR4/JUVHeMUkp/l61s4inl3ahZ9JojSursuziURyi5lJZd59b+/n4eycBQZRqWL/anV98OFs
p/p6/tud9tQSkgsCvauz3IQJNJWbLZJb5AQzSi6KKdYjBAB37/IE7ZtrVUzU+STMAyW0y/s3UmCv
6Zkzk8gy7GzTocwF11K2DbVV5TC5w7GwiEHw6NKUi5yJOpk+m/olhdU8kTDQZXiZ/qy5KOSvL83/
bhtiqYPVhuWr0A8nXKCvbxZIiQ7d5um0G9RgeBVu7LBb5JGJIBFISgqcryc0WOMBM1CYoJlmWQyu
6MS3J9ILUDIfFUHwUVbiIgqKjMx9Ku/gPLaqCMQ4kJRdLKSWc6ieyDLc+kXtXc7wf+yK6aQRMZe7
mG6ZPqAbEcTuaAr9dw+k68w0cUy5iZwWN6YULuDGWMsic2PoyIenVHqmHMEmuQSFa5omuA03mYVf
dP55gsWoQyFakS8KQx/5p3by1pl5umUB2vLHkYyQae+22zrFJPQcIsv7o2I/Sj5UVsIwWHW55pyI
MjxiGjmRy91Sn1zJM9rXYa6svPbw4nGIDavDXoxBhPaSKJb7O5Rj++hsok65KpGgedlR84QudxT2
zMPNnMRoIzgOQF6B5SfWQkb/weKhYtAnNKe73mUQ0/+i48Or3k91s/5cO1+OddrOzsv1xHOVtsa/
r5BHWuOB7gXY0t4S8a3Fs6oKPoZIxQmFvM913zIZNw3ISgPFsdjEAojIW6hF3h/aNTd3UQAHgUW2
PohJiiNWBsmVf9Ohkp+4fsFNHn54X0oK+U1do7MYDFyj3aM1S3kbCrcg0ilg0luY4j85NOLj/9oZ
YdItBmpa5Rcq9qR065KrjIJ62Kvmtxb1d2qTMgwrDKEsYbTsRHdeBflue2JYiujkKTbnu3mRxCLx
peMDOX5IrXhJjO4d0+wVFN+fuE48sZGKE2CFCjdCb0W3o/tG0gpzFONEP/qJQq3wD9szseYSMfQT
7N2t3yTzdbzl3dHi9YqWggwEsAzkZFTtpwMqvOlArZDz2nsDud0AkXqCGEHJ3KuK3wq1XJ/BqP/L
5F1p+6bFI/BIRF6n9dNBwwaYS+P9/jyStuIz57BvYy5j+5S4I4dFK5o6JDtYGM5pZvsUnCT6eY8B
FhJS/yQiCOnTWoQjoKs+oU8/84DcStZ6YNqVD/5yfpJJzYYEMc9DsDwk692vQNXVJJenTtD1Ifa4
FgB3cCAZ36ce1oHOwfGSrvXSXZN3e+GVtqyk1g0pRGL9Sl++2mh2UvbkW4dg9grvo/n/fsFjiBWE
ZO0Bd5OHuFDQ2/9ClXTZ9/ZX/sw35kFNCoD+ghZAS2NzneFyAxJ5WZXizccr6A4UQK6I3EwfGMkh
AqEFLAVVoJ/j/TRTyRoXF1AaIYWJKF0gGwG68lEmE2l77ytj7uUoAyUKtruJQJHBXRgNrrTcA0Ko
7T4cpqCvt+wtFkVcqftkH1N3+7D7TQfkA72FOh4pjQ+QWo21jTaQpAHHVfYl67+9BnBmOhySzQBM
LeMelTPQPpwka00MoH2WqAiKTHebPQ0wcy343pq01/zb2vGKsWXqR61QR4u6+7JFZGKUdI1zTf9g
FUvoTpjbOUSE3G4B6s0mq+U4xSJH2/stulr++u2FqVCuWfG3Tmnv2t5Qg4f68XGjUThkSAHVGZqr
IrHsCOfKfFbZ8G8wtiMOnIfp14kU8OB5FvTt8LEO8YAtgrAOScOSDcptsQP7TPO94HuMApdQ8keV
r+TG0UmXqX6pAatNHicRg0o+Y0SB1Sb50RuGletRzvyzrRLWeHEd9kEMOXOw613v/DBpL+gljiPp
QGKHUsnoujUTKd3p4AWJ7uzXXIkWvVe+Mw1ZMzUonvTBpvpcIwlgENjvN1KOoQXTecJsyftiZcTX
w3TaDPe054839l1aw9iRzn8ZhVpQo7OpH1eH3+7HBp3ulruXBRObITrLEFbFbVpwMLTHeyAko8c3
v9kas3MXv7vA+HZ7AfmNPKeKuYnf2X5Z/O+skM7Mo6hS+u252Kyr1VHjCNTEeiTf9e4y0PhFQLrf
vUQVbHaTad9CRcItSL9TIdO10o7dWjU6BHPEJXO4I1WuQHaaAg78bRbV4zcnYmUaRDQx+hiiY4+x
DUsIXMxstuo7X740knly6HPIaM+Chjc8quejWQIhEtUW3vUpaNd6a4LXFIs86VlSF0jzgqZeHnom
ZELFLf4zfnrA5Gl+ipnBWXfHIipitI/VKPJZ8LMQb72Axl0QPBDg1jwxoAal2ZcDHW1vdBNzDfIs
5m3lh1iyFn0uj/eYJDGTra0fxF2c1yK7XgfQ9DUUnaV72YnPaOiPF4Gv1MLmSA7UCtEfAWEY+xqs
Z/yfg4GoMu7OVLRKS5drFEhBrkd10OzPymqsHSXATlct95QG1fAVcYBDdKF6Zr+1bMx0RkdF2Bfn
FxnVl31wWmy0J0wXd5gb28Y5jPxhtHfRJgx3oliQOLj/nydDCWc6kDLLrpRLmLq/IHXg05HapS72
IVQMMnP/THlxDX1RfX2qlq/V+ajBk3gxiVbGs+/eRefNsUS2aZhu7m2pCftdNF7vP9bw2z0+Q3o0
l5jhV1gYX2V33Sk+JwNxdraPKzmnNWXJMt59UdDM7ICwSiKkfWX+MEztRQ4UZKcfPu4xGnBg0lxg
sj5RzjHorrX+PCxgN4ulnoyTXS6KTtodQ63COOn1uW+ccLnM839vRji9YVsJ++0Yj4VSwNtyRJcW
Twx6NGxC++71rFqpg5LdGfLVDAr9bhd+026v6VHahJdjMglFpW2hl+N1fTD+B8QB/gFp63pGLqNN
pIMUJnijnwLRKtxdHw7zsQftUsAYeSRWOqeNLLiyP7zgcefK/YJWGWbcDmr/tyoJp+ADkU+MoffA
9gSUBSB5BWJ5f4eQ35L3x58dgBRcQWZl5AXLTX+30taOwdiJwu9C7CJn/GjcsUqeEKRA4Fbn7B8z
5+gp25zwBp2yh9yl7LNLfiSgghd85swduXdoXLz8rkveK8Mz5yEQPgPBwyJQbee7VQxtPtacCRZl
xdfkNAwE8GGccgLVfiD+zW/lyG8ocispueUi6ofq3LH8fqdr7bTG4SwGpUmyFPYRM05r1O6yyz4c
3mZ5CanLIEp89tpmBYKfWRayA+SxHyoyBB21TziIt0s94iiEfYPwmtngriXe8/rn0kd1bykcM/T5
P08SlLLhRkVYa+mnwuAt5bTepK7fmeyVVo0RoCDkBljmKdIwd1JhZoDd4QUr3FFJi2kLIBTYi0WX
J8v0kBya9ECctfgd6lgifQ6WP/97zWia4cQUxxn0a9hnVjlTB+PMRZ8f4+hGLjWF8jjuSFzMSUfs
ktMy74Q5Xu+X0Ow/3tMlEz27SKnQ6yO+fQ4LkqrXqMLHfEBAiGYWe4HlWYUya9j2rR6RwJ396oOe
Mdt+xuGhjrOIKkKCNH4YNIZyo/lE9ofty1RPPfveZdta76ZvlbwkJ+doSowDS3CerrZJEFRC+QQb
jWD4Ec0SqIk/ObP7jxog5zRXNMmyINqnSaFndvCRX6TZACskiNoQ5pbWXrO4SlSKxz7mSN51+H7B
GYuq1rYrkQMDhdomsSkqO/b08Mrr8i2WfpTZLWHmBal743Soz23t/dypzr4VNYyNekt4GnbERdQz
0lSATnvDuanY1Y9B2ksuBZreZkqmWyy6MjzctOrEVr6vluPuCRsG25tlOblAXGeT3S8a18Q3Svj1
hgcBylxlAgC7b+3IWpsKz+tFATkkaRMl5DeDymCgomqVi5HUznJhRiu3JpiRGfF8LDbhEy+Fyd4U
gMo8W0tDDICAmDIidiomNiXthDQihq16E1hVqE3kNSZE7p66cocYDCjodiKZlFClGuU1LY57bRfj
arl5FEkLtaapPNBPx88X9lv0W+z7motw0uAvngECda7rqh5NUckeLMfsOwY8LNiKSKRGdcQz9waD
iFtQzGUVg511z/jG3J68BqB6is0YmIX8zpC0HGRVhsa+06SV1CDm5nodNo5R7bS+2DvS3qnCOaFX
tfLcIINanr6rTiwfLTkCXTxDcwF3ZgsN1rO8zuzEDLE56Ph5Fuz7xjGwjT3HbsfsxcEGml+7ipiA
plfGvd2ZudoYdvNq01gAtLrRIAtDLY3UNcZze2iq8hgi6oxAyl48hydRgEAoXjU4GGABbZFhGobe
8Koy6iBg4o5gZ39iy/fSaCtnwKOjBOAGCZrVL8Th8STrIXSM7SFcBlNj1FuU13PLc27p3iG9yAMc
1AMbBZ5/tds9fPIpJyXVYxQaMp/SpxAyOVJm0bxdaxjrLEx7Op2eUAhPt5ObzeJVUAl9sZ+4UmwS
ZfaFhaUx9zY8kLHPSNavUp6uU16ok+w1fxc1Qo1MnFVFB1qxUIrkJOzkE1Q2/FVAn5y5WR9MZJEa
sn5OVwu7z60n3UdyqDv9AXYFIuqiGCfOxovCTB6a1iDw7BYsTk6vPg0e5+nG11iMgldzo2Uav88W
taK62ibVJTKtRN3VgsISh5UWYeZhNgMVqOiM9M9JbIRIS5hIDeoRseyYI5LRAVvDZfE87mr6oDlf
PFBDDKtU/plDbLemhZqUxb+LqOLvSiZgnLZHzK78loXQdzCpRtyX1xmA2T2JGw2OWI06HXUANf0o
hJaA5lktNyetPt1IKhYKuSRjI56TiTMotZvz0huBYpNY6B0Kdk3IXtmxX2glP+aMOi9MmfvjMS4r
hy31v/komgMBQsjg7rTOY4udsA7DlKC+NUFDYw3r8zrqedv/AFEvwRAXpc2pHc7090eK27iOLFtF
o7VLHlfYZs/C4QqXbzGvAMawGkR48kuTOF3tlDlzTE2s51wI7qNjbJobg/qeMnPPXTr8XR3uij1T
1urKsnImVw2DjyvrE43frJWclYYkVKsveFVeq3MRAyii8tsCJJvln1krtoA1FlYm/c0+j3v4kOTo
4pMEV2Mvh2kOVoQeGThUlc4JWENdGXJ5A84JaiV5o57LhmwgOMKzVEOC8Ouo4siOTkHHHAtVMSic
hjrSuWlcwVHFVauBfJbfqRFrMe26b1pXmaMZB0cb3apy21qHwNJQav8IqtUXBx91dxkQadkIfohg
kJE4LXx/sbgRfBgLcZ6hO6vwODxilx6/3iAGH2PF+/S+8Xw4eQoUB30KGq9OTRQ7OS7hGIq2ngkI
qcl33srkiN3me80277LrIq0VyHdNl3kgRHzG2roCVGWKTqip4B0xgKpI3q0ZYOQlXVhZQkI98Djy
gXF99XM5bY2rYnh8pnbQsBbmFb7tOL8ezasCwTNuVIltYTsiiP9sQHok/8iIJ9ebZ+//dg5qqoGr
We0nkzxZPjuS7a71y1ROUkJJ8rNJObzJ/8salHdl8T6wPo50Xl8BUjI3rJOMHYZiZns6FFsReATa
4R3TSR5QuAIM+yUpM6MNw/GKz3CKZeKvIIgJhatflEgnOo8lo38HoBQaIy0w7S36OmjKhJIQl6+k
8Ia1TCSHxCaaIC7KhlXiQEaAmCM8ixL/cGOkUcvRy2j8XUUNzSVnVuR+tyWX2IFpfuN0u7rA1SxQ
19iztbEpGYOgL+VV2n+enZAfKrb1v4ILoJOC1Y0av//QIw1eOG2OwVIRqXKIG5GpP/lRWGywe4Zk
Kk3vm1LsvZVcZhxZJRK5/urbwCBMZFnc0UWGS5pvTvC3bE0VqSICmeEwCtS/qKC/zajmc+1TgTC5
RpIA51biTisCYdAv1ctnvrYopuv8ARqZjAEBZOKa7ROxrxV2Hdc6x2uS7MkUMCmg5ad0FaN6vlxf
aiLCt5tR+AKTEZww5nNifCBbfaXnQmzj4LRsLFVmjpAVlZLcaDLyregOMeGIM2UeZrGAxTGH6W/u
IWrZqD4MmS2GDkDFb37D67zD1GQTIgLuv+xxq/0eOAe+lqrvKMLNEaU7d/khOf+Ur2129PdWwtm2
S3mZBxNsXJMIX8q3Rx8/Lsl62mpddy776/4TKKVC/YKYd9S2G/DPbgLZCGbYiY3JWSnAOyCNObjy
9UMMS/HOQZsWuFLmS4i9nHsEgt7gJd0gMqsAleWcdgJBVtklumoqZyTImMwS93kjywEZwAzyyiQs
h8WpAEuaSqi+aU0ugJcUx97zCq85hbwGrC271+7vyKrfnFJ9Pjp2SljlYCSC4WOT49/yabgEEG1P
CxInlepOtnYuxAJwCP72uHGWanpU/ZexPX76UOAEZ45Cc0Inf3egHnyw1IjyyG7FJf+J++IqvYYz
ebnKiznZOsSK515QsxlVYOERV5SBU9aUwYCquQu4CSXR10JrKUDYAcOCcH/t0qY4e7idCZZWPxXl
R9ggJooYwUWMkv2swwgBszTdZGyiArVYSyTn7ckfERhHmAgM9vXNDW9mqgc/1nQweUmcGG7ggOt5
J1Fgi8+fR4ttETquTY4Vzewr3KaP9zmCt9FdqRo0WsDQ9CxrjWZJqrSW3aTvULF0Jb3dxhuBRxFP
ewDB/yisCkb6jlY7EzeevtG2h+a2XoMVfmO6IcqyUkZkoZiAxyxoe/UnUmxBMcP0VnCH76lLk/2G
XVBgfWkjxemEJgo2fD3L/jui0ilol0OCHVWFWORO0Wca+aRwf8ovOf67QXfLR9A+pJLk3ExcUV43
eg2iqWtlEsHI+CoLkvyIOhGaYfqKm5+mvaFGzYnn9g63uExKZrwJeeXKutLyJSjFuXe1r/e+jbkG
6bIecQEDy+IbuLF0tjbPxxYvxKp1WJxUChvdVm9WxonO7XAHSPQo73/L9EVfcpcLknBDyANCQiZD
UUhwXZEtJHBu3DSvJlSGwkQjOk6wycUuQOOCFkCrAqWXEU98ppUKk9yc3oEIGSw06EfMJDzWEjN3
Wn1sk9fw5dIzgu49Ke+V7BFFjSip3EAhHp8VsXs1B9HAYKAd2aGoY4soxNqDuR+F507MIdwU1VyR
P3cu2jybbPoHYuOi2OuAEDfBvQcMahE8Fk6e5e4asvJTQXEFWDzbAvYQCG8qywXG6+N/7YYZfODZ
QLVm1I4OdMqOG98i9oqkPR926zKDV6L9Vvl7zmAevT3k4Yt7Sh8yMuCiaNSLFOa/uZqbY/Di6blH
s4ENrvuWSqlIeW21zHTJ/JgApx2EV4a+Z7Q2TGllgpabXJFyr/G3aXP5wFjXPDJPT2zh+NFQBrfW
NB7B8wSmqGWJg56HV/oXEzZfYplZyz55bouf/2OzjIqRouzP5B+KPTesM4ExW9yAnGzYHh8A7/80
Tby1eb1a58TsnFhDh45y6EHcOKtg3DVAWUbJF3JTn5ZxZkUgEuhh3V/qkcXstdLs1toREcZYLnYP
yrLAoF8c/r91F/AUL/AxqKXysv8ZYQwaP0gzA/xlORGcymMYo8P+h5jlkfFYTNxydHriLi6kTeaT
6rjOIYOkZzJB6vKl8HmofkUY6Y5uxwNRr/QWScAR2ztURvZk9Oi59egerRri4XK59Zf7XGTmjA4A
rym71WhSEU1R/rVW8DhISw9iqgG/vXakeXfT94nyZgmJi2HuH14XiLVe0u0WHhKkHBS1z0y4Eoem
0IEaioqTrSQ5Nr2hEOY2zUZ7+Tl1ocFSDoFcWSH8urjBLc9HOkQAezoaEMGrJCb1WXROHpcZkEgk
OquHN4CzSfdGGY1OcgI3z0t0+mwJwCzDTj069aRj54U5Bx5Uua6xsfH4pNWe9SR7agQEZb87Lrwx
N/cNj/p8+p2RbjXxM8Uwmb6rqabIGItNz2WwQG1Nb1EgJxLsj18A/rh4OHHxCR32XgE1+t0Qx27d
wttcyqm3ImM2y8x4RVszWvn2KnEQeV7eo9Dnvcs3NI/w5bdoxGM4N5yUXqNZR0f7USxPw4EzZ8f7
cApM5KrwK8OP5HciVAZa5kz3BWh288qQz6T9ceGaUEWIy8jKEPzsQaVntW9PLde8LCYLUEcKUjnW
XqldXaKxZo0800RonQ0OJ7bwdWytopQ3nIza3IlpYBHAtVNIau2hH8LV1NUSQ23vAXA9vUOk3quF
66pTWtB8J00ieG9mP2l4nme3WLkaq/1FHRXPHLlxVHWRRcNIZzOI4CQDFoh4WN6FNvWmrsPvyW2b
NSKZJA69ceJqlR/6vhCHorac2SBYEGl2LdTWvSb9NZ430GcpavaHcY5eL7cFkcCG7kVdJGD48KXf
wm/87jODgyBv5/jZ3SQpnNYQxgXJBVnZTPt1Gu77CyKJZAC+xgjp4/Mh9eWZeowjkVFMRHL8bxid
9s6WE0ezbs+oZp5X016NNHGc9IwuBKQs8skBqNEsGS7qhdeFlZdwhkpmOK0+DrOvSy7uLSVS+Jl5
WIgoZBRoNlo0XjGc3Z2jQIT7aaQAglW4vX5lAwc8Cj+1Ac6OgZ392hJhBT9q+Y7DC8XgrScFfXtc
1BOJtdt8jFu4mjk+Z4HErf1q5YipPsZJXlyL3SyI/WzAxIlJQQjQPpuK7OAwb6Vi268zgOYw6z5R
FRhh+gTfFvubojQircPW7KJL84QS1Z1Ner8Et107Hk65lIOzd8o3G1TRsxT0VPxQwl8ZFg7jZg/a
NNenU56j7SA77YT54C4XGxuzhpbklSGczdiKz6LTeFMzv1Pj0eEptlWgDNPN13/KuAesRiQ1/kd9
Y0sQ9gmaNwfpzHkpGYZLDp2JrVkcNtcbYHxEywRrJZ/XBj2hILsM8P7VSDJPM9pPkuq7G7w+9iSm
UoFTfbIVmbobA/2ox1fBlq/o8j9mcpm99VbrGbymX6lXqAaUsboC7J4Vk3hZthDpN9v3AnaNM2ff
LvJ+6XhN7aYg3jPRZsZuoDPDqSDucBF3vcakHkRuS73I+G64PGxxTWpU2v+2xkWJNbcTZ+0VGYhs
nOcdhke6H6hAUNs5/gTQtMQjcoAt61vU0zCb15zIqOj/Fx6KTxgycLiT4IbNurqMn/xyXO47UiNv
miUwtINmzdOTjXhmow5bzTDvgr+WWA4M7ADxxC7oTgOe5Bhh3qpjU8kusX+eHmHz38Tp6Y7R+DKB
Xt+9UpZMeix4nWRB/xQ4NRuSeM3grBLuHsrXt/KsbwHNDDk0prdxrVktZfSOkrBSswK0n2thSZi1
wF6PgUXuFAiGzfh7OvIybeBfZgKJSIqXbtz/bHIIXU3uCcb++SiJ6ftR91lLzjDYLfIJeoEbkktA
Xf5OpfX1irn9HTkk8LXl/s7QP4ZehYTqn/z970reCbb1w9CacPtMOXP6gO+1qARi4a3df6x71ufu
M91XgHKNWjXXAXRY04GFZl1CdMwJJwT+RcqdWndJwYWtLF4N1ChEd4X3L6batCvxjk+lo5aKS8pF
tO40jS73eD3v3OP1La9xxSKmgMLUFG2M5jYB1tw2d6H1yuQ9JhmRqjep6/4ElTOg9RUvA7nhwZ7P
a5+MjnT/p9uDlizeQa8lorzuqx0Sl5p61tyFy2GCqe2l9cYBbBwv0gS8VL1qxzpr2SEoblUC5crp
LQBzgVOjTo1pNMEcki+GDS43QWiV6iLM3NixNu/OaiHBvIEWdn8VGIKdeDS+7BaOUX+ZSNW7YC8o
iUnAty+Bd7ML0quJ9pnyn7omx8qmbCTiUfNPyjfKTJsrc4qZOce1Ar62un4FLnZKLcgU3dwBuDYa
7Y1WbjN+ojtTQTbP6b9V+T9vFxHX8PbvdCc8Y7Wv0xfaiafxoG0B2Ybdv5B3v05tb6uEi0hUdwHZ
IqneVKFwolfiUyz8zmoR9DS0wPdAYImUMl02iNFpKoSMllWIJDJ596CkfNCLoCZYACySzV/mRq5C
tjo1yvlVok7BWQotBRzVt/d7kcmPnyLJuInqNQWS0XJiVIf6TEb6VUYDeGaZIVlvNqIa+32azrtH
MOPDHaSmkLSkVvfA+0grGR1PDnBzEvGg4V/JostvHjnohm9MXvG+SaJBoEQVUW4IILHfgfrOaq7J
Tmfp17Hn4qoYhtIZy5iJ80D3c6wcU60lESztG0GJ2eFnt3pRLAUhSIEegRir0EW9RL2Ax0bYlOGt
CpjTta0Vbx2sn3OICez00A1awy6DQJaqn4yG1EJs0OBAq1AGZUJn17Zx3/mjW6xoerwj8N1tJJVo
xVVJUNCRfvE6Pw1YcX35kHHArLS3E4AzIXhg5666aP8QwN2bnZRnu5mqPfJYZbNTzeSpOcbLMcld
zpONZ4eMYdekj+wCtHAu2zhQNW7WURR9vGWiRfk5gW0wkt/tc/0LDWw0ZuIEFRSb7JA3W16XajCd
jtv4uE6igGWjXQa0l30w1PM0Z84AWpipk9Tb5BFXO+mTivnqk0LFJ/d8wi6z0Zt5gkjGYV+xZLEO
v6BJu/cMBrcPVAr4549gpYMKz3Wm5SPiQpJRRQkq9vlGnW7sNN6wUmrktE3fgo3wwiCNLb9JE/z+
0XrKFn1vF7bEgVjtPOe0IW0CY7LF1Hj+UteWsPaqo2hSdSZiwTTTRGTaY2gUAv8/JlxKQYar4C7L
TMBZC4Yi6cXnq8wcWnTIXax+i4eQo3GED0Hu1zTZpS5LmKEu2mbUvAjNVq31t1dZIJlJcXBxFrc4
R/cwvHOMku/422Uiimd7XZoIJvWEEjt8+4UzkDAo8ewf/huJz2jWYe1PqSlCbUoPq6D0i7MW0D1l
WIoTed7LBO9OMlJ3V0UAhNKpTZkGeysC4uEKkX2Vc+C3jr0HJu7VSZiPxMG1VpvkvmVaVxP5GrgZ
Hsj9iydlwa6mFDQF/HuO3iIDgy51BumfDWQUF1KxCMFFmcgNWytr7LAU1O8vsy64DFA1KTE0tDq5
p9cveYzxNTEgaR1EVc6Ro40mqvzVA8HlbtBbpz2DLxtf18jIhbx/8GqRACfBUeKiUwiXT5rJTaLd
Opq09u+cO9rKsx2wJlVOPn0Z+EvgSh4Dp/CI2aFNPaCPKXXt7ePwwjXla+KeyKCtTMlQnrvFYhHO
hUQhamZ6k8hKt90wq6Ql5r3l+TgqmR5abA+jtHwl0mGSaoTROZluSa/TcN8uPAHRk/9lRLV//8cG
w8NRQY8ZibeQnlHo1+qRLO+idAvDs/LYZRljf0b2VDXiHO36DoitFEYxUsUXqschtU09kresLIBY
cEOkMohTNaVJdzr3UW4UnKmr5Mijk8aVx6ZXHjLgykjp7ItydjWMIujqcMiARaTUfDAupLrA8HAh
EWgQ3dTrbCiyCkqB2Im+34F7h3kpr9pZW7U8v8qA8DLiO4/6n/vu4ry8l8klmdWGIYkoGYjjOJhu
aGqexxrKzSji15Ecw1LCyQOnAEsHVXxIsoUqtzQ8xqIppY/HQbVJVlQ98PAMLba22LBoOw/PpWgq
nHk7l2/VXXulKWGQ/FkmIUX561CK+CFuD7gNTmYdg9F/LVyLs9kFfJjHwl3auexIGfLE9FnVUif5
tPeyNwX1l32J1RmN2K1msDC9MVO03UUY/qUZeiZBbZKPLRV6w4HV99k4SA2vH+/IG48hiTBh5X1T
V946ft3PeqefearvPbF9s/Qa68ybU3Iyad6TuTRQjetw+OASEFnkM/QZh2gv0pCj4gceMBZS8OWG
jlMqacobc7glzGjq6yHj+kNS+Pwq5pV/XqfPEqdTnDa4RTno4bAuzmRpA91cuSs5+Lw+LQAghf79
CZVdfKkyqOUiZL7rSDcaL2mLjnunl3xyjPdrtuwtIag3k2eAY75ZH8VjlsJPMVOD3EazwEE4u94D
jRuLpllR3IsBHf2kfLSzxkmRHjbAk9la/1YIeYJNPSZhlk6coeMolvUI9aCwjefbYHD993GgpWib
/DEj9GOQXJLgHetcIoY2Dkn8rB6+DKWz+M/0feDFk64ihy9Sm05a+GajNYUK5Unj90MbFtZ5YCC0
X/m59Bxhkcxnt3Vc7GtmcdUEbMJn499Qb3zoAZMUdzj7rvcNysLp1mjlNzb0qZ0Q1ZHvaYGYRSKJ
Uu3lCP6T1MZMuRnBjE8GBYvkHqInNDZAOdfo9LqXKbBUsqCL4N4iyVcjUihCOOSBCKkqj0ImCuui
JPsBkly2wWYuGA9XJV/AQp9VsjsHfN/bpTOK0VOQTQV8YJ5E9xJELy+kaU0Vh++hFdCqV7UQaX3l
z6qsiVxaE0sYBLvEo/qldmATgslIikm+PU4Si1NqJNEJeDYR/NrG/MiDUbdUDoiJ5V3E+ubj0KD4
OPda3ia8QyOLUYbB3N4nE0r46199xMB4lm0stzWyA9+hgHliD5Jnf+IuWBHqvI3+LKMHxM8QGzat
RadV8T/MsLEDZBTlCUryGGMYZrtGDhJWbNeCzXAiK+rG3LELJ5W782fLzXJlX+jzI3iLByr0eGVM
2lBnU/zU3xtNAvH+t4NvYidifeq8rv3ZrrsWWys9ApMN1NOaAHuQqMotIyp88moXeSnbvW+Toqni
+9mZ1F1ctpQVzOVgG1TwVlPI6IrZT6ujQNh2fZnNQ8ZcI0ppRQT/js008D2MTNc6tzs4PTGzmYWA
+iB3HlfbXjIqfTNfOytv7V7b9LIaPhKd63N6Z1VRxtMDgj582IaktKeeSavzeR8vHccK+pw+hcMP
q90KGwgO/uW0i173eoXanWianIGRu+bXcvuMi4M3gEL/v/DQ9k3ijYjq5n7HqxAS0WJ//DKUJ0L3
fDxl/aQNWWs9/7IUvsh150dYeX34HLVBLSfDrq31wB1KToSdalZ3Xa7NmOrwtUWSCVYIzecfoSAj
yxlVIBJ6CO9m/bBNV4ILOGHVKQ0CNvaOAcvILboU/DC7KZt1yBB1s5+BvTSvQb0ZCPKJP1+a11Af
VB5We4ezUD9eN112JoelK4pqvE2qvjEQV9ClFTqZVcHaJtb5RhQTs6jtN3eHMkdl7EJ5EoQQNjsk
mg97nVwT2YpMPK0o+BAKIypnr79+8jqkk0vKQLO93dJ+GT0y+Dris0NAWtQquhmy6FgMQN2Y5bIv
tdKNJEgcikiaBdKqWkkvsGrm665Hz+AxCm3mdbtk3/lVpR4Y2+s0U6HZw2z6jiUauZPVZTLyvTyO
QO9yHoA4bKjOjiWAMXPsaReaW9pYEScr+u1PoZwB3qNvcVC0XQdEmcExp+zg/Yw0UcnymJv8qgTk
oVudfeBORmHD5QiHE9PG+G57kUL5eqIodXImHnKN0ip9WyRZkBrXiogOocyzQd5W80jM5S17ozhk
LXh4ydvnHuH/dwt0WZruDc2BjE/dGL82h3s8xd7DtfO3cMqh4fD55pmzm+74fEH0+T47zUiuOGig
kFwV7ZgG+1H3L1PArtmjZAEfNlgk+wlPADVjbBGtbaLcqHebD1Lkor9v7jZqnF7RYN2Bft3SSqoZ
kAXZu3hdAHhtyh5ucHpgW1X7GLx4gOyq+12f4wuXmXtRUzvd7kat6YYCWwliz6OXofUMgBLjX3L6
f0lwa3iS8HXfNCdnz9nnZs//dr35yQTQXtfImh6ZcKBK+rmmTX4yHdwM8F/tL89ewN4rAXfD2VTO
Zb9yb092RXFU+gPjWUsXHvCQnWZsuT2eTjObPxncjNCRysXvV+AIZxDOzf8K8oNOjiPVcQDpBqd8
Pv+lIEtDaNpd45dHZL5mNgmZQYN/1OXfvG36W+UDRE5nfxXAL/0xWMs4kMb+OJIFORgfYxmAsR2c
G1GgG0peg7lMUW+xvosluip7lfRXpSfvnTiWfnp7x2ZZwFXmceR+Gbs21zHTUenuB3gE6hAQ3zti
n7SeVR4ooRIw1QuoNK32UNHEBWGKuHy0srBfS/7pTYXfgvIyCzbo2mvG691b+ZJYIjwvsMGJlKvc
CJhkrRIqJp6cpiiJVY1b7Ou6p1PJjSUqKH7pyNwQ2JTcsoKM5hOEEFEhiRjo5nBhq6Q8M5gkiFrG
DsmLFUJ1tbO2x7T40qOKR4YMShHL3sliZPJfDjx8HZ4XXNNWoBfJD2E4XnQEUtuHAy6pAZbe7jqB
Y9SPSKJRDXibCOzsscRnQYb2wN7sLQaDKd6XU/vWDp4jy5uindPnWEkk7K9dfC9riIZzjhVqz3gz
ABjB9NqhQqESNqf93Sh45LOPAEjZTvrP19VEmgcj2awH5IxUN9CyKfeL5fZ76gqH0p48vnVb8uwc
daLVBMfqrhgVK5H0HcCpSsrN2FoxBuAYOk8+DE3EJS2YhLdV8Ry86inaKEVHd3ZmTCctrSfpdakF
4MJLpefcFccSqpHsntIkv5jdLAWeft0RX3FCEOKGbVne69eShva7RNAzqxLqlTeZvhDG4+YXTOyu
k0/1qjEZlEP1I2sebeOOFNiJDcMPN6XHZLaSBTRrmyJhUyU3KaQsWio7TcKGH0CwdmnfNF/QpGZY
419196jbCa560F1rPV3t0jtO4ndM/WJekUv89rRN5wOy2QnfG/aS1QVViMv6E2PKGCtVBs856UhT
Ld3XEUqhltz/5HoJCeoP5u0wNlt5JuhD9zFFTP6RpL93WUtcT0Tfa659DHaeftZ23qEqhjkN1e3R
8dFKeKCBjGwe2cE5sxxL3Odfw67IlkVECYB17lgmujW9F6rMKI7P643QE/oKpxINH8n0ZsSqzrdp
TxWsMuwhYOg1yX/8Maz2WKZCLJI0UaZvLC9M3j1+Dl1hhN1aPzfVfA7eaJ5WDK9uoqXyqL7kyzel
6UaT4uhEjMYYqsRzRBUqbYeZVKgdkQytURb4tM6DuBBn7gDXL5Mcbhq3FheeTOHR1EqjVMBRdz+K
9dBOKggDCuCpriHFODgSLMn9ty+GbUQ5167so0Sqo79/Qg8TYohG73c/d30wQngiFSh7COdj3Ttc
olB/EKxcnrRtl6tZ+mi72J2CEuAu7fB6u3LKnWX3U/dIykBWOX2LAz6r7SZezYg2DEmQ4V3055Km
pVwEbDP7YSfqGHAy1smVytPtYV19ZYuP5xVfvEFpDpoaEe9Ooq843l+PfJIr2v0Zoo2Vxu4FAsnW
69dwt2UjwR6kR538CTQiBwpdZ9yuSttrBQ118v3XiF97J7Kx+CdM1vncVRqZQsuHOyXMXwDsVXUg
8tENm47MqNvDABGf8DEu6C55CNnRqQa3YpJzxs4DhE2zJKYMFopVoMNlPOTOVPY9lTXsx5I2syVO
ZogxYJRhIpNf3VLVf/koLuwOhcx8+YtcAdUSJbG7ZPuIKWc1x01nDxX3Wkly1+3k7hYJTTCOM/OP
lOwI+S0gUjfFz1DJD+424rPw9IpqZ3nLfb69aCdcu4/YzcDpyPJ/b+5Tv/X5cyLGeRbj4j0kV0w5
t+KWw2E9kKXfdFKRuZdi5wg2XEmJXHys9yIn8EmUEBxs3Ni6pltP6kTO4NwNOetG5t3H6HUTHVsH
HHXZdilKeqBhhAWlJeWw0Oig8dEqJyUwEp6NSDp/1L/ygv+1wurE8vsZVTTbk0vxc77zHrJsYPMu
moAYD7jRfSQO62jh2W0T1n167Oo3UUke4MKWul3P/2tHm2ToVgJ9McubvJQY3eWdXadoJj/tqWqi
7xnCsGJzAIusgze5r3mA4qCNibCoRdM8JC0G9SioRr45NQWorKRShmVW7xtGr8/yb/+9HLbf7Iab
6TzKmSKrIMYEni/xzfz5PGOufQz4u0Chq16IU6b3Z2zR0ihXhDOos/LX9/QLpmOsXQ8SC+I1crbF
pr/+k4vCbNAfTditZvYBtFr3p8qvIadbAxjlDoZSuteQUjEyJy1Ypph07nIl4TvdINYTIfm2/+bd
QAHR2XII5GZfChfsrRO71BrpDOWh5uZV5hYqE2qu3Qx/p6xiWPkXPCRXTn6MsnYK9LrswFJKEO8V
BPpSYfVEypKa+q0qp1CxW72x+ZwzbM+8Tdt8FNRJpgYXm3gKOXOSf+clCaMn3b+bXlLUQ4NP6Qji
nAGBtOPyo+oa4YSkWtJnWonxuyhDO2qApbcj8Bb9K/h8Gz39d+npQ7X1yf1eH06aAxvlIWvaIlGd
u82E0QQh7EfA9hWlNewA0md8C3rqY9aA5a9YhqI3zkBnxDYiFBTD5w3LPCD+dytWPd8mlo9VQ5ya
Ylq77q6S8snPvPh+xXyNY4hTbDJeOKZ0aDpzLXlYsOELzwwWWOXRx/NyfjxMnJIs1yEy72E63sun
7fR5XNV7+rUzOjQLUPFUjrTMnb0XAzy6ZZqBtT4HqxFZ+CoVXn2SOSJ6KbMPpqctGygT0kYv5vs8
Vh9YWy7Lb2wzXkFF6/z8dxIMgahBYIgmblmBBMksua2u5Y/+wOmgvv8tOtlLRY5tkMkyfuT5IeGw
vDN/U0RvXJ3CTvbWys8QnD+55lPvdiajeTgw72CaWLHOCbTFzwYWBRU75rXv3a7WWcPbO5N2FN5f
w0sXTOQ63Xl0F+MvxhKg3mFmHObK7Xh1fAQsYLkZ9euOyCFh1s0arltkmz1TKCQet2+Si1DRGnGI
8phcUPimpIAdm00FjZUO/RMpfAAV+o4EMMSjpYSP233mpYJUmemalZG+Avwdk7xYNBYf+PBmgMHc
yfA30Ed/EFmatthShRoUb7wCr7PkR8MtKEsvDpWPU5TqQat08ys0uoRMQPS6G5d+wI9nnrlEc/KU
aEmnu98enqrFgVNhDeia0zTzdlbztAyjVBSA2LB27p6L9+38q3pnQcQl1R86353wQPIWq6vkUx6C
Uyd4YN5lXmwsuA519UKYXGkTaDIO8o1LwtMi2jyC2qwyucK+FkRX5nRBY9CRYdOHs1kT9KhoC2Qq
FgaFJksnUFMF9eyHuLq3INp3L4YjhGeqpTKoyfNgmlaAYtLONeCRUzIpZx4xgQuPXNrCdMVjsygc
mwZE8feTucA/M1A0xAqTDqJnf5DJ2jsgHUfSOy0Z2A4zYOgzDQVT79o+WWueUXk63V5Ugw6DYb39
jY8UmyP/p3OKseqK9QY+onKpj3/QKvRAs7Feda33QwyaosftjQoLTIeXE6hhGJoS+kYECv+ePmYj
to3dYfIkwi4OFCOoFGbxrYdrik6VyMuXu+iM7guRRc6R0Ka4q6QancBYZm/cy4lF9IUaX8O+nimg
Ie9tcgOJQCNHDdZIsPBUM1C84UpCuYR2bwt5om4QZAO91KFjOc1z84cal+a53+GQMvWxSPxPOQFT
tlYTkB9k3xrJFZy8wvV9N0CZmDEO1A7OheAmcy0kZAkKaNtbLlz+2lO/JFFQ4LrYMviTViM+uJCu
Q9o7zqCjOtO45VomlGjpM3WDDZVguhsjixPwtnkGEepYkXoFcF1LWvUz1bK8exOeZ242TBFnkTEo
LzHX34lcaKPHOenAGCQ1ERcGSuxzKk2zAImuhinOQ03Y24BlSgWarigFL02sMeNEaQN/H9kKfvre
9mWvQVPCZ/ILr/cmH6fYiQ/R8H1TpmGbovgjn0Ouz7EFySq3Q0lWzx/pP0jHh5UslpWUZZafcuG2
7K3Sn6hi88lKRXjus6Y06gakJ3J7yHTQ8dt2k3JVVW+RP216VAe3UXAlyiYBqQL5bU2b5qqlOBRq
DxRNsVpRIDcHtC01lrC3EPJ+oHDzgebHGCCAI9MZIpigcml9UG4Yc6nFEqszZeKB7ic71tPRiLUG
BMb5Mn17F99ImdKOhz88+1Ey5fSImmH1qJVXMUh3q/Zv8TframsX0lwJQUp+fNderQzVKUhnsuPu
d4g3oI2CL6Oyhl+Sqd9NKvkTONug/rmKNhAerl4qghsueQvSS5nDNu7ZbN3JaJXDplVJfnKKWoBN
A7tcCy8R2RUHDursrU6rd3lipx48N4c+i1ebkp5aoCW2gqV+z8FxFZR6Z6F4m1tVkGrKdr2G3Hit
SoLQ6AOjk3j0a8tOpEJC6otBcaK9yslAmWXv3BOELd2KzsE6nYuDI0GvYFfLxDjS7NzVZM7H3whb
SDEnqZwE9SzoXOupXFSSAoZt5T4kiUO4tYvKoRdR2yVI6iQFOFbhyMVyHtzMFpqumlNP9CZjYAB2
ACQlT2b5UPgxgmRonBx0KOMYYGjcTznfKvYSt+vhvdquTDeb2QxvUoGUboTsnz5HHwnzgn64oeid
/mvJPbKUiCscp1PSoPfPzFQJIMCqQB7NrycL1vATyvk0xFMTr1huo6ELmgM8sSbT2NlrOV62tvo/
hPZOr2aLvcsVSZtrfUQuF7NVkDnreYXLfGNVscZ4RTszt2tsOXYFZ8Fx2aCEgf4vPCclurN6JTnC
zrv2q/5Hn4lYvOw+jfQzgSoR8V4dmMSmEdVEA28+qvf5Pt/ohocbX601Wt5+spp1hxsRG4VmYhLK
URIUUeM7+C/ZDGmOTfByZpsAEB9iA7buW5YPLq21FhvsgvD+I++96RkHy/lAwABUOAjfN+CqUKJW
cChdajda72wSGiIJtGrKCM1BMogzZXEb0IKcrV4BulSZ8zuJt8A5nisECT41+3nZuoxoroIbFUFL
TI0JsAlFybIbiVXHhJbIjZOe6m2cJ852jmWP4LKanyoomdJzbY4IzOGtKb0UGsKcls9C6j277HYY
66z5TghUJ6xfcWboSoyWF5I6gRInAkvI7sGd+3seF6b2MudWpHV2rQ9pIGt29tNIib/mfw8s62H7
/eVh8ObYA9hsCrzsWMar083UEhg0y0/hoslnqCj1rP4JqCBhNbB/M+7Ixl5KHLt67/+jcuOciajG
y0kHKfBZ2vgMLSkpbKMwDHC/JbQPcVkfJsULBmntwjNjxm/pB3wJvx6XdzZQ1tJuWr8gLZgQ0ftQ
6H2kSyAHiaSDSIY2/CKbJZ0Bcn0RLxs9Zj9JwZXUENcfMDVCiAQNDJZxZxXSXOe6qeeJLGaTR62E
//yXIu+bKhGzsm+YifEuNv14+BX5oRNvGFCqINQMkRDjFjskzuJS+thNglULAJJB4li8KbPSwQtb
xx83JNQylme9hRnO+CUa+0002wuTR8D24J+yO9EJXgLBqO7jMAC0h4VHmWAwa2wQ5qh5wURSlba1
NKAJm2dhwrhg4GWjQm4I8+BkexvKxVsgAEuq1211N1EVSkVB9K88U3PBRoWaTRvNRDCMFRJie/Ca
Ax1yjeCT20RQxEPrQE6hS6ODwi6kv1mhPi03B/ee9vICdiWqUin2Yudn2zNsaIgZfdFe8vWJv6qP
ILISiMr2avoXhtweh+Evzw/giFApPVudJcPSd+Rq4/DLEH7vumD/81SFhI3HMI8YnpaPHydVCsvB
gzOpQdwSmVPZfBAwkPXdq9I8bESTBMW2aXbhtsex4fxvmxxM5GvKAl0VIp/5sO+G5U5/zpz83mz9
25dGyvyPMr5a9VnLrXZMC3zp9l1x+71s5duGNcmG67M7+jipe6Nj6/k37xiJYnbhehz1reRh2wk6
v2C/pFy+dEuGCjEEjh+COq228QZcQXsdX505MPYJSg/XkYUfNJRVFHBTEjWCMjqomZwhP1hidDcW
4CEfdoN3Nmye9QFHKu9YCEP7pWZlKBcnchEnCk8DG4P7uvLMsfjYo89fZXEDHbVh41Rc5RGiVVYb
XKCHBSMO21lXBmMk9yVbPz08FH9Zer+rlVXBqhDAoYsEi7TIW15JWQVHuze3d3Tpn5h+7pkaakdT
VZGQ1TxiQN5EIPuuCE1VERmvn2xtUmpIlFBlbsNnneiDYc37EHjx+tGW9l3RKnNhntttsIvyOWjy
f2ynDVr4kIXwXwzgF0R1CkZ6yugvyFAlx9kDLPXHFF1d2iMQeODJ+R7jmDFCjC2TSJRKKw5hbv2Z
3dFl3cgXGF0FmNaYnydqYZXtIIMPDK3iPtJdTxmvab9lrhP3dqruDih4VMCAsEC1wcJ90VKkpj5/
5YUhbtEOD+ru8o678rr1Ddq+lfRSKp0yI15SIo24ERqbNU2zYUchcbjucZAM9x+8FTOm99sRlLXY
RCb4mm+KSJavHeogMtCSVgddVynuCx6542WcdqADoarTwjykwTJyVhbV2+3oqHUGpSD75FnL/CcT
zs03DFrBN5Sb6ixbjyM+mT2Ynw3qbvbLi2qmMhKAWxOKZN2S37pXNNVWI46V+cm5RI3xUwAegRl7
xt9Isv+xAepNuaCK/oM4LXOfCzafSn7HUfWw7EVaTWE7kuBn/5rGgIgLd8LV86drm5XlbAd5T7J7
1ZgxZd3AzxeqU8jUHumPQxzeGP61bHVbZMNYwVHnOnNKPHlCPEsuKImBbABbTK9l7IX0V1p3CQh6
4rkaORU3SKTB5akQMP6UMYOqDd0fpJMSTJYCryATaSf7wHjfJYu9Rs2NPHIUkscGTbxd9Yxidh8w
4qA8E04179aBAbLlfT52ih6+LhiXsOEafN2miYtO/yn33krVDh0clLMlP8kDpGXnqJVZcmiwa+So
WELLvTiz6Jrltqaf7ExbejTir5nGN3HI+yC8wWAabCOoHUXZB+XrKpprg1pArmny4T1/MDmqx1T9
+YR1df91JxM0eyn15nMxxD4vIg7kSBL01NYxDAPBMvUUDIFOphBcUsQnumoW37avjjrjG9fns3Za
fSaNMNyy19jqGh+gYsDHliwzehXEioSeKNxmpUXcLrohm2TZqZWVYO82atEujI6u7jSn0yOulFFM
Vv9RlSi8fsY6v+9yGpaGhRS6j+joFX7T2WCxBMToksw/CzA51TiwrHm7WxijGR9p+fcqW3ZRdmQT
Gq1iF6bavXdMV9rEK95niszC6qxjhqWR8FxD/LK4PIFkNkXhYf3T1fRal/twPTRFamdYise0uni1
ftk2UsULcYnNSoUhtIdBGGGhvCsR1i3F9lnKOVSfnJfrW/VNe8TPSxYqK780FaZWxakvVjqRznNF
JZn5b96A6aebxgEuKE7YscuNY8F3oGCRr/lXnjLaaoseXLHvQLTmUcrTwV8WgM+Cd6Vb1aQTBshd
I+yrQqNFd61GxqbsUbS/XGXd5wmOugvLlNmYIq44lZhi1LfegR5k2bSV4KA9CLlXmQ8/FLyZmQ91
GCPoNtLz1gzpblxqbiP5Posp8ne4DUVRCKOHNj6Cvqk9/qGtCVUcfyyoJ+uOkCwV84IFwwq3apAl
nFgXlWNDcO+pgqMSi4+8+bs6Eag8EAXirM4JIi5pRkjIoDZXir0DwK5IYo9prQpC2i6vRTqGGU6I
HQGb8v6xr9oxM4K0c2cXkBT7yMM5KsJ49BHKOTMrNw8PgTaLMdcZZzMST1liY0ch7oEc5Z2vFGa3
9ukc9mW7qW0pp6bKjmJ4CR8yxLgjAFBrBKMkhGIDnO1+hUG0wQod2inHAuRal4Xc7JoJP0p/Z1PT
baK6tUXR1e0QrQi6gdz/l2+C0F9jaRDLcaQBZMilXY9/Yl5vHWkKseVhgHqf+fDi7JV34/uuN+0s
0qUWzgilZMTYb8beTQOsRjWADBr/ZbKLRhCuIAEGVeBzADDZbr4TgKO4FHLegH2F9bDNP8AQybYE
2lAr1v8uWa9A1Bi+OfR2PPBqr38/o4blUCqcIPBaUQhyaEPCDJpb53+fwr/M7v73eCsY39m0wb4H
vYTB6LtZS9/Rme2T3iRLbjUvUV6PZlKFDBTpEcg1zDqa6ayYHcGUwnRTxRO84peGSm1bbeHouNOP
zlN+tkvjehAJXFVAD3CSqhvdru4JlC1SnEOudK4UDUgQiFyrSspiYIFeaf8JzgW0xswP0FaafHuM
U3fHNLd6f+JBJKJLk3GvTXwl+w3Fff/6Nk/jJI35yBIBcqxTbOhppzkKNd3SrxAAhoexIM/1lOKK
ru2NdPLKDDwUF/9JBZi4k0lK0E46kyryTcfJ/qr24QUkgG17EWymPszAXVkpEnv9Bd+2wXM0FVeb
Y12FJAUh/3r0OWH8T6yAxxnEVw0YSBzgNw+U3xaSMpm/uhy9JWPtKRDEf6gzM9xoh0i0haGpU0KX
gn6eRA7485MDyAOUJybgkSRj0Nxr8zL7VcZbEMivQZaeKPooXxbAkogWbEjJ4517XR48x3+TdGkc
FQp2ypXSwbXMp38EJHtflz+icGTEHSLVxNn3qdb6y1Y2VT3hP9IbaZ6DD/JeD8BT/ATltwoRnFFg
mL2KgxxRdJADj9ngRBE+KVSS/AHTHQ9pCxGM2jfd7K5u28rLtPV564ZNiKHMPZSDAank8JmGNBLD
bExWIvzXARBjuTFcLs31O6am/bz89Hui2rWBHxgMrbJGZGa3rON2TYPFr/Qup3CVvJIQehXoCLRK
QCPviR6zLuYX97YkkTOicpiESaWLFUyZvPewc4SGklAmFeIMCI4uuVYjSt4v4+UdMVXw/UkIh5pY
BmKN/UjV7SVpiR2bnS4TnW5rwUV2M7+ezsGZ9Hnxn34c3QF/edIfDlDueM1E2/CPneI6TtqiVhyO
IFhsYG0vOMJx813fAIoY+vstBv5po2n4JW1fiNpf00wEew/komxpMesL9U3DjEDhfdlL6gca/7nA
6blnif942tmtWOnXTxqG1zbVl2XY51cUbJglOrYLZ5yIXPuIC2hsnGVY277S46MOxb2++/jAXJcg
DVWj/+3idpeHMzymFuz/WFSaDFNbKBaggNb0e67FQ9p4f7RdP7/wF+WBR+85FL0MXAzN2BUjOptc
DYRSxCahos2+YOkbZL1ip6nKMDyd++lJUV/0d0kNAjIXjJoXMayi9B1htcC84OdETjCTdpgxC2Gq
x8kRuL/upwFtIA2L4/V32ABDrin5Bp5BBa43syRK74Olj9XMDOVJqzWZYXXBMv1IzMk1IrkcUAF/
s72o8w7FpzGSGuIu7NCom4a52fAjTw55Tk7YVm3vrEo7VPth5bfCMkgd7lYZybBEdQedVl7DKgQ/
I/HSF+NNnfH3kE+5kCi3onNNUZPZTD8I86g6OS3eu3uiml7xmY6W8MGi7hjxbM7a+atY/z6gbhWv
ZkanKU+1miJVy0qG7U2DIhzTvsFKvxvOuXE790WsC0kWb9GsmoR+jIywbVCMlxItJKqZsGTL+1gR
KT1cRgnPWEltuO7gDrc5W+4cdamdgpkj2vUErWW9+T4uFO6fMoQoXnqKCcw4MlDdMgsXXS4Qp3ZT
nC9F1FzZEkYEVeU482EfgulU16bGE/Bmpjmnlqoi8prYRrHsr3cvs45SIR+scp0iqNayYCPpIeyO
kywYsi7f4Gt2scAZs/JCs2Oj052S7p1s9KFkJdsE+OjF7HJ7XYC0r0Uh+RyRDb61PrGGbIk4ZW6N
LoR6hL/jRx2YfiZbFvBnx34kr+KW1m3KtTeXU4aeSFox73D0QTC/CBSzFJMwBgtzg+eMPx6UfGX+
2iEIGWfr9ciObs7pEujD9FYqpd47i4B9HjCmNBjg3PgXvZfTz032BPpwOQJ34TPESUNKY/TUnsoC
2ln2v8CIMAjEIU/VaEZzth20z+f17ReyVl1AYSr/K95mbhsRS/FnGOXFss0h13KniY5Nicb1qTsG
+v/P/Rua2Ng9plLjkDv0OH+6pxb6OEUwQBdLWMfmMe/q++FKdAkiPyn16q3YGOWfXxiSXJ28bbCc
bJI3fT4gPcCj+uoBH/mJbnbM86OB76r/fMsUb6AqpzwhCM+DxME8Nb1xaUo/bGYWVrTa6gWHHntk
VNeKAKvgmw/OWGRQM7GPwEgQ3SFram1yviknbpiJUZNgYnh6/vrhg2KqmMxzqVHMFztzIxIWFAco
uecNz9WLVM3/u7vyY8K4SY1mm6M4rZSpSR1ClN/NuMqmw+jr5GPJ2SWsKTh6YDTvf/pWB3GGX/8P
HiWQlFwGeR01AmvCCQnBLWzrjrDnwvm5jpuHSM+ReaTOav9vKV6cS2j6/o9Ojm9EBbRzHlTB2ayP
JBLCWIf6Ct/oM5YLF0LJ10At6qq5vE78MLg3qPbxQ4Cw1sM3QDcvX4lqJGmNvE0QS20MSacxedbK
qkzJtgEnpZZiWZ9MtWIHqAOQ2K1ab5WL9kvYmLZA3FGZjniloccUiWQA+uXMqLhQWrP63xOTwYbB
FJhH1mGVArxtVNTe9Pw+OTbgnFd94h7KArif6gzj6vgKTMjU8r1r8rX9lmIcJuETBcm31s/ucesZ
GF/QM7fHmvJwu8cJJrn2cb7/8n8QFaw3TJGQZfRKSmH5VNzax4LwCAoO+w6Ra9ZvBEbpc3njqxHS
rakmNxsvCzqmtg7aIayMSjEztoeWMM0957Ad6eFbgThhje2etaZfdsQ4L4t1iNryD5t1nXZwuEib
mXxIyNSUstV+d+pv2nHa7rPAYsOMeCohypy6QcITYX5jn8MD7ZGuWK230YtUwmx6dykafvHnpD/l
XjfT1WamUF0BPC3sA14RtEcdlzQcVVCu9I+l7MoqTfpEyM4p0YXQdeIPe/Sk/WmTHXkni5tOGD8T
0E+sXB8gfrO9uNTv3M9gpLjO2pUcjeYjE5T/OAiEMyZlPxm9VREnwZqv3y3wMM1kg7yhZ7nHmCz7
J0lqhzf1ASqikWS+p+JMoZXt3pELaXoixuM9hHI3tpHJY2FdRP3R2wdUm3hH5ZA6Tuqz4otyjH3V
lvUta3z0cNjLowHhmghhUog7EvNVNNtu4Q2NjPD6ObS9CYT//Xc9etWPFlXFZWlAbDM6cwEYRzEj
ZaXqWBf2cG20XNdyhgejcqh1/4wh5SeB5Be+LsV2N3oykrmmcY8Ynxq3ypAaEI1qLoYw6OVzpHk/
qwWR42CFNOHfK+ts1IFopUI+rnDV1wN4J2/HL/Y0Pn0p0mieq3RNEmUxbFNAlQCAP2rv/EHs8chs
c4y4GI462Iabu2jqLY7VqBKlW5FgWkmCzCu4bu5CSH4QLPsVCccGwjxALZOcbgPuykuefAlv7NYJ
nWrfgmW0/zkE8Y0gCOn1U3ULLY3q03sukNKZcMhDcJH3ONlXZjJIUy56Q+g2wfeITtkfXhFjHqXJ
t8xJuMG6g0o3yOKvjNA/1TJiuCpRtjBd6p+MPWu8mffcjUXunbhUPgTQikKt5DldtHP/IbVV/enA
UJDpwRtZMllKMXZt3hfshos1I9/aq+WggCx/Gjn3fI75Lo8wr55WdPHShpWLJIPnwJ6VG+eSGfBQ
9MhzA3h9l++p6XVpOe0LuYhdkv4p27GRAObnonqYcoP9WUtVpZ5lt3KWllZBnCllcpBz8j2HWyQj
++5N1AyKc3lYs92R9lSKLXYZ8FAUKCq44lDa/FGZ1oYAj5N6YiZXDq+uidHwHPH8HFt2aGgBHuHQ
qKfMlTmM69o86dQ9bgOmjwXROeWkWZpAjXqjXFlld5TaSMkn4HqJnf5FHg65PKY8O3kvTY8NveCr
0HAxw/D7cYiJnRucVYPGULmk3o8dUsArbumOsmL6HxwJfq3MU1QM4ZN3NRMtwpWPujowrQ3fc1el
BDyoyM+3NCBiBU5Kw/BWR0yo5afKvttp2JKGpyTuYCTuFwnSmEjymuG0MGbwaKwGxRCiKadm6Qyl
Wh+f/dYG2XtBxGcQcSGIskAtQXgc7RowIa1JJrQXRMa9dkBJabc9/DAgUBBVD3I6XP+BcrjE2NB1
dfefE2NeHDa9Xe/tAhUnYtlhbVtPIGcCNNOtPqKbh8NciD2KwK8G/wTHZmFQxNZl9t9WrM5Lcrzt
gBo2v8jTzrr3lSsHGZmNa0nxuoPcfkWTtDZuW7cuaj9eTHcGLrLZAhcHTHPkBstvgSWa8D+SYMFm
lexHdmSzfkmbPe7Z1xyfbZDhdpjXt+7AZhVOf0WI9GPS/yz/23VeOd3MunHER6FSsbRwrM4DRJLC
Vg0isE1m5GpK0YCXyYbaYNkPBLyD+HXza1Rma6tt6HMRYjPdAEJt5FaKavhaQMZqIp1ifZFahnzO
xX65mCyJL1Ps1K3S9D+JRIFummB+IhR7K2A+upIxTftVw/t0WNl1XxFH4zj5tXrS/yWNoectwBRW
fDTGalhDvJ721IJ++oc5immHVgtuXIzrRMQ5Q8a0yRx8+A4DkkxWYSWUe/K4GozuHbLXu1vaQvPc
QREHNCw9/QCjwYV6LOIz5vhTuNWtyZ6UozaP2AN4pyi0ST7q7DY37XRaQhAkM+hRTWlZL4xF/wY4
uDky3TZx6c7fJiH/Nx8AzTzDv4+5HhC0N1ktg7CPyGmFqxkyyMRxkWM7D7sDoMfnocOGz6mcTnGk
CGfAHSEnWf0AgIj249qVLS8zHYla5KNqR2ubyb3DG68UqeJfje5ChKr7AtYK0DnB68WQoxPAG7lj
sUWv7x96v/08DpLoiUjDF/T5Xx/LFOn5vbC05jeVUHx8OfgwiLwuHlyZ/fWnvbB41AJtmsWM3sA1
Q1736Fayl3olH6A266IQl0Pf7ROf5pyVfqTOj+otxF0pcu7XXa9HzPItp707N9iMgvk4LSk2HaQ9
tLW/JxthKXsgQVonNYCMFpfwuEjmtgooqxe8oqhYqvfuxiQlZY9Sr/QC66fxZQknqIOS0hBA6pzv
ny85aUj0RBLPiAbBNrKE79EWQxONQvOgWzGCUuSwJriXDfkgiJUFp1Zmm4UK76WgMl1PxfIRz88Y
vMwwoXOschnkR6zPAjE0/3kztk4xB7+jIdtuL/X5GBHURokrVvuwL3GRGmmfNR3Hw8s+d+GeK/c3
8isKeFiStE121CUzV1JRbXC6gA6g59PLLilURSPNxBBBCx7I7SfjUJ3fkOnOScLYA0jUf/ZSHF9a
MoH0aTseaJeLdobHAp0EdJW/uwlkgIQF9l5O9KZqOHvB9hgRH16DJb1b4j4i7tIuKNhLoYuNWMQl
m4zEARt1CQea+yzJfKMmXgnckJw4Xw1U8BglAdtcNZ2G8Ci7pCQgYATj/0uq+W5QCnbISzgCjY9T
x0SSkkw9A4riK1kNffxysiR8d4mhU8DWWXaTrJFFpe3SyuYiRMt34DK4PRRyYRgdPDUiRpoRW1V/
McCIvnyr1+rDSH29/RMo9Bt4EjBKAsARwTPhIYhDh4OAbeBJBpecP6vju+cPKvLaZX0qY1xj/SVA
9tV7gQAGsp89bqmONUhlM7iz85OibXou7xRhYR/kSvFSzkpl0uGe/HliM04Yybvx3dxGyCLhLOYx
C5pjURw94dNH/+DqRkHIORimGB+sXpHyfdOThVNbNW3o/8/7TEvDhaXaMo6GA+vVdtN9v4fvV6/d
Sfl9I78QjiayGDsF1ACe6lVCo/ToxnOwwXa3EWpMv9YFrYoVAZbeNpcqxKuTuS2vCucNfuTB4spG
4isQVYdytR1HhH3OF5Ly3L6aO20Vl0OqXnGfYbtVSKNWzoe8bivSbbMctF29PHhN8elLMwxarAW0
NgCvC4w2hHdaAbe9qxY9M/Cg1bp3ikJAShQTIOA8XRdx/QT+J2HBZlyrvsYxkBHj5mkVG1iE0Ipy
izl5J5ui22s9LL53UV5lErXkS2951FOBSGCqckAQNdQebnMMhvzn7XN+mcquLeU6yrahxNiMhJRM
gQuCb+dLwpSBXR9ANJDLIKZnv4yWBEddtzBp+FqPFE1UIse0nVmDWP0w/3RIW0oLgBVCS7r9+mav
ZXnYoHy/g24J8jYFhEbVfEAjKWLasQSOd/BwVAherdhU+25ySLEuMOxfjw5o/LvOSjKah4P2vTkD
bLy1kg+DHlDS41JkMiLY/P+u6N6Puzd46ckViXih6GJk5iQR5RMIE4HhAESuafpF0IBE6OKJzP1J
tJlj8uO1PxX4ut95dJ/GHJv5/7UO32xn+wwIko6ZQIlDgU3x12OzrXw4f3EIDTs/3RE7qEvWmKZ1
bqBFvjPcfnY65cCjXUvYJLCZ4yebnHtpX2bYg5Znkqop2EuPpX3ekatePE2kaBZhT3aIVcWK6+g5
QblzIXYjE51wIXC0dQ0FHakl/ZMn0gdWVhzHk2R+YN8OY3Gx0uylyy+z4f4f2K2XtEC8oewRMQy6
9oKOeTIIIFyCeUs29FRffqIFDNtThvGdjosl5HozzFfpZAA6HF/sL4CXFUQmDKzyPXKg0Ab8IWAN
Fl5ARZ4iTAPACmTBNlV1qFekzj0/jxOLYuaMPBCdt19Oa1XcS+E6323mIpMKLiwQg1OSS896yLFZ
mFewE35NQs3RpCt+pkTUDfB9Qavych1crOGuA2XNuR6WVHCysdzuXGshfgM6w63VckAHZC9Arwme
rLamhqh8/WjgrtA4/sPBYqmm+CXuq/b9WWwSYDqe3R/QHfITU7cjJSAQFHw2WGp8Rddcd3JXgHL9
BljONVEV6y72w2iQga6cZLil5rTc6u3CQ2oyTQANG4sLn1BoPZqAYQWz58gqOL9JSiMdPsmrmRYh
431qm9t+xEk5DoLAsghmyCr6b9hVIxx+3fNTD9JM8LqTfoDUsn170YN+wUXXrwXG2BKxiZnCLbnY
gIKRtk5rAlniy57UPytsswPupFIKoNs3GZ/wqIzA462Q+5XFojgHBhy7MIKUYSfeWDzHNSIEwP4C
KPrXvmUad1i53EerwR9y7MnH9FHtn7pAoa7MuxpW+/MeY9gk5x+ZomRUTisYJbmxiXvderpmK39y
44uEnN2jMsmAkbkZ2k1MnPVaT3y7Ef9ikOXs32fFLciEFsSBwVdyQX1srnKFUd1Aw6wXgLZLpwSZ
RXQ0Lr8+hG2NhDtCngWio1FF+t18re8i+VGV57hG68ssgb4HZRzwiryOKk4Wl6G37w7qxnMHA7XG
fowTlW/22Iv/xbkdiubAdoGOlZanvz2jcd+s31LP2WXWe19xJkfY8XibfnxrvfqogXvv+4jrAw01
2e/49/h+keLT+7lzOJnZ3HvcRKWE3i4Jx+Gm9XN/94V5HAxeQq9FgNIAKfHc72s8GlOBVUyD7vOh
gXNxLxoEBh3dQdrAeoL9qTAiBALk2bv7VDSvC01IZwgd91C3FcW43qBSL+EPYxIw50n9dlhbteUg
VogiBVcYCfiZcIobaSnlHJKzN3vs3xMPNlE2XvUmxveIooEii6VZDM+4J+GaMCGybn9Z5JjyHosm
Fl89sSfpVRK/4FmHOiiSuxyxqALvLKnCmcftCELkYswiFbodW/zVEUpVWrC1XlLYif66fmtHhXhG
EKPAWF904ztAB186ADyrEzqtfhryHtYJG/speUjL+nwoLLfjE4q0j6PXxCyDlTZlhq6O+qvo/yS5
ZjGosZcR7iYtCCvb8ck1uA2x22ypfuFQEbOP3C2b3kFjNgYnC0pCZNtwyhP9507re1jaIywRjICA
kJcWKbRIpAvoZpXIiwK71orV8blSakZhaIGAyErjDbfLRpTKe6p6Sr9eDSPU7YYAmN8NRLeEpqPv
57OBQCw3OPW9l0cIxm1HCF+tGf6GzTk1k5Gi4JVdlyFf1FApzcl8SWrUMNBEe1vSrUFxYVdq5N6b
mtOXF3qwgS+GomB4qBm1SJTz4RYk162qTZfbyMnReS1otvsZ+Y378KlETI0RsD0EWFLCEYmNmcoK
fc/ySYZd9N8oeo3TBtq7ko5FZ8Iv+G861v7R9I6zNyBmuf7+MSdjPLHPt83wbZRvNnSsQdBn0zbB
2RRK9YR5oCJXNiqlvtW3+MueNLS85DFneVQPq+3ecZ1OAULvtEt6aMxsKYVSPz8Go2QgOToFwEfO
IqsYne5RguSPrMEMAVm4gLEveSX+7LxqeEvZapHE/Y++t0Q4sr4kdoIAFUVC6johzn3bqqp2flFV
MdGwq5GDhHJceDvAhHKn7mgQuuJ8k/Osbdz0BslrZUSc/NZHcfzd8LF/TLb+1SHoPnfXmRPRt2Qq
QgpdezuNH7RB/qPKhu5AYbRvyCaYpKBrclrgYsskh6WHpsTL2vtscOAgYflNCB/+U1Xs5HMXdkwz
rsrmxzs4cuEgW9PocXAMGLDeSevKYaNQdKhusWSnkjMA/NSUPCE33BLFQ0GP8BdsWVFdAMUmiy0h
GOfDsmZxGAR3XUBa7WRrSwvDuan20vQ/pGL+6i/zj3U+FHZRFcPUR/L+zRPJgGM1BFBLshTTERJr
rr5fAmrS8+vnyz9FJ18uhsID9+nC7bVqnfpVV9maSe3nwf1LSqyLLbFQCx0jwiWMoFMvDczAe8h5
XHVTMVH1UW2X1WrqG8mRohswS1XI1ENBLWItjdvYUR1tOO5N1SUC7hB59AXLVEf1Jl5yV8Gyjb/U
dDP6WxkGP1j2VE4j3AHIm6VTU3OXzdIipltMrGAvHY7N0lTnZltcXDcKAUzFBBE3t1/rRi2+kju4
K7n3xEQLfs2mGiW5hyA/26Rcm442TlrQpGspBEBKZuWr18hVEkqPbINKGA2wGuUrwtATyLnmZ8Ur
1pJcdf/zUXw2Su3h8+wqsEYCiguWIanZAMnl+845F6VhgezyRNNlreAUmdgHEId+ijVg+sN3KmqZ
hQP0eG3auKHjGwmIzPy4i0sPZRTZncnacBGmTz2LQF+KUSG6m0A64h0uiPvA/UziNB+cRfHlpMLC
bgnS1yLZDu4PWiu8h6XrdjYoDSeGr3IcduGhRRvHQa8QDlkrSZ9/ZMD8udRCIpo2Rnqd69frphIn
x2/oxssjDSRkhMV54Abew4umre15pliyH4A121yX+pGKf/Da2v/fNALJqY3NOnQaCdd2F1PrsB2c
7uKIeRgKKmg4jYPkDUoYqwUiL0h5/0hKWlXbchV4NKGvHJDAyQ4ttJmdUhHfI7SXjI5AyJyxcwQj
/YCh3P6vvxxUAJWZXzMmBhUuWVAtCfCNloMrYnmOMlwHcr9/GxSiqjLeV8I24FcvrAIQ4hCXQGCB
2kyiws2V4rEHhcLIEAOlmVA1zbxGAz3gNOdbraqGgbXk4YuXaIfxwGxg9iThQ1/TWMDcnT6i+Yd1
Vt+dBoIaHZFmPsILFRU/X2saLV4iNEjSB4fwgemK5IOZmPn+HP19Ht5xuK9BmIkKIxT31TZubYkJ
uuTuzQ9hf1z9lvQ2y99+JuLR6a3I1xtpdxVCJI7Hvfg2BxQDjaRKDF52eh9meptLZBuRHOke6HU8
OA4JKxPHbsjph3wA8eLs2MjXstaCZVH4YIblPjTcXHB5CyOyrMrDYZMcoV0oJuB9SRUWAAqUpYjR
sTaXwT+fBjxmzp+1Hh7T8ED7mXXjzpHAXuyfgVchQ0Usy7QL0v/1H/7yK915Lj9b54Sqeu1woFZu
9nYzazKrW/JO3kTgN7VFUfg7tKkLmXBXpIJ43EDpX/4qCO0ldfBEH36oaNndVaZHazIaYuIWHzfn
18bwWiT87XwpyGUv0yuU0sxzbBfb8ewUgFysvVme9u71FAqampLrg+MIZPPRAaw4F52sufHXmEsy
o6k1Pi4sx57yU5c1APgNMM85AkDzFCspAF5kvq4+X66QlmievjOaV13qP1hE+BZxhHkeZFVcSVcW
efovMZ5ESKHrSv7QiDw/jWNb3isKuXeAyTlvMasJ356wOyv7Xhf5WE4o/AVWrOsDTkX78Ju95lIy
nUaSLILBnzt0pKfFVk9RUHjVyYzrcMlNj/HToyFzAs//ObjS1GKaG+7jvlJxwV8wRlCQ/U+7Pyw9
taeBViTq4d3U2IsPGK8lsrOEPhTN9TF0RiD4ZKIRgKmLatR+FREp76/+EKGbm4RG9GVX3SkqIn9B
B7PeDjI6M1LM7frW1p3Jxp3Z9nUdRErJnQwCv1qD9+rPX1oxgFZ983q1drNAwZ+aOGhozIkTKcbO
3dmUjKcbscmOcJcc0fWar1S9to3APLHQ5Kb55L6iytQ4k0aJeZoez5xGpdMKCxuLbnBfygM/T21S
tCSIHhC95VCplSAfujSp/ix3wZ3KjGM/99E5+6OCmmH5icCJtJhQs9RSx9MZ0J3+TN7uJHfX0PC2
SLkv6GDisTnp/aHMjvi08e+1ULaRYe0MfLosDHVgYNv94DmnKaHVlE7PGs2l7ZbVbGuro7toADeE
AzfO2UCorfeeSZ8EwJkwuyQpZii3zRUwQG/kT2HxUC1vc6ZNq+WbtTiaF9cMcWiMMYAhuRd6xRQt
t4FZ/Tlj7raQ/9iT5aIC6QZtzGRNlQhaBZBD7NGbv+s/h4/KP2cB+W9Y8W6UiCluLisUUKFGjR+z
bIhtJRbma2/yKPQU9cTp4xcy6yhnvfPlWUXX51sFpM5Evkb+/0n2H/kQaPLzw7hBQuQHm7Y2dieE
pMYLt6iqRcv+Ydr9zJAktIunhDxXSGrsKgAkdlSUA4aYwCIsO1C06/1pO+t1ffy6LvEb1kk/mu2J
Ou5HPQXUIEstjlcxFAJy6kMeWhGrQKCe7JuKy7C8iI8TN1lMIb8LsdiJn/Tk74hpRcCAkArUqK/D
bN0PYQAAXKqEFOrDQDMTdFRcMr9o1o94kC2L/LQISRmqmKjmyxHaK1GTH3BfdzO5521QafIAiE1x
d99KIh9/ZJg/Ux1znz23xZoFX9hej6eMT4Y+GltqXSskmi4qbqZBv8EBoEwQ6GT1oSX6u6CeQKp/
joHj1cBA9jp1YQBQzM/Jcubjjk4RJllJVZ7wvx0h0mOmju8fHp+7j4dZHe/Y8q5k9Ffmr9m6q7pK
6pQ5c3gydU9V1fNqDJG9yoyHOvxh0F/4q7LMjS8OHdX4lvHYxC46EtELbsJGm4C34uiqqeJiU7y2
0y1XUX1LNERrYGL6gmA4Ai65C7b7ERXcKqMFJWLVSN2imggpOGMegedAuOp5Wih1psSSvHyGwM04
gdgIbPifaNAJ2VUCgC5FPlwg31tzGOTOUndphm90xUqvWVSuyY/7CasHk4qZk17ryrTwcHtKQgh+
HVUNqv7UNzwxVrElqQCv80y5fSZeYNBSIHB+U5Qq5dmp9ihgf3cQTCi/53azP+n3nO397zRVnJc/
9c5GxnhatkrsjnCuZjkpFAa2H/uV6meF0n/khdzkToUaFnyW5tdZGdMX60pj7vmpFevkaq1NrNnv
Bkmu6EDbKOB9JApr+HuSpoBxCmPHi1+nI+QoG4ojqu7I6qBEqorQV/j2Ktl+VURHmBWNxGBHSoPl
yJqqyNZxW9EyWPf/qdszeFqhbuWCAWJwu5zowVSRfRAAlrr9kdln3OAJaXUO+Qt0UaJgbUZuB58V
WpBSVDlOXM2ZQRYadaiMyPetluX8auQcJUBe5gf3InScJ8RKm/m3msW/1jpdF32q41S/P/Z8p4W4
lOwKYQeVuZq9ZpmFe/EcguVj92pf1ABtAtcw33Eu+T3yASspZFbqYYfqtb2rPhPIcp9pW+6AtvaY
a75lq8zIKkLM7EjoZreS+FcF+wylr8OoU9edAHhcpktyrc0EM77SoW9rokgUZhan/7+lRVep7gQb
3pKWvggEchVzta+0jPmCkbD5igCF1MHAjA622W2gNK4z1/eGX7r6UAR1nwK1bze0xEVR79+eoTHq
66Xmxyl4bhZutp9MY9Vn9iBArcC5xjC4m1QRTwPTgiMIvkgShRC96maVUcezt4BCK+uHby05lKQ1
4tQiQsSgDQxiVfw7itEw85ACwsjQ/w8N13EhoyhPNhIhGLTeUuKR0J8OYlMq2McHRteN6R40xez6
7TLdrWqGO07CwsT9+S/KacRBJskjGSMYM0NUL3ZPq2wfadzhoAYSACzx4O9zGui1SoKUIKqHMxqO
npO1l5c/KiyoWwT0YV9Ru3YNzS8B+i+nBAT5rgzfj817i3tezyWNfx1ts+fDuGXz947g2NSqGvlV
InAXZY4EAnGgbkXtrqwDPaGHD/ZeRCqLIfEtcA0eECTxSfu0koUNmHa607x3fXdwFLaBTpjG/QB3
sHPBlBMV59feqjtgFBm9INwOmc8N3qnsDGEXwb8lEG6NAivZ07E+/3hPBsVNxwcLKgPkc1x8+OmW
bt5XSMVoRF5Q2cEANFLJQEGppKI3ZJrvcaV14xNJEBE2EtERaX+7JU9onNoWytgalo9MlpVs2yCJ
FaNvQLRAQN0soI0FQhF6dZP+Hom1O/m7lY0ecmunH7xtPdkQTePYvkyANyDeG91e1ykZ4iKQK8TE
6cKEaSd5deTm+mKhGD1eRA17sa/VHbAi4Nnt0boFEH6GpLCwScQEizbdL9pcQA0Rp/PD7w60a5YU
jHQQxR/lJXv2KdnJMfml0X17tYFFEkmyBmj1sArTuxIWZsOidEVsFFDDqA1CboNfJZmtLbZiCd9/
i44Kb/bR5jFFrYr5g+cGKdtJ6yTRJWCRbWFZPiZeytkAMkTVXcthfvlAfMO6y6ofS3/LSWNWI9Qq
NJ3JYqDzJy4H5pNEfx3J4bzviE5OOqzphgVsIpz33efEgMh34jju2nM7yHaOIG1aVIqM+5ncTElD
hidw96+5/PYXPv8uSUu1YOUDFU7SUNqizwzN5g8DsGTNrxAgdVllz3cBsT/rubTJ9RZJ3UwtZjbO
MfOSvI01lVtBVp/G5DzPMwYM0WIbEHCF9nWuEJ+LtjmuRL0k/3UKBbUUsAelXAUt2m0zNzpubbbd
+p8Nwq28mWvXE8pqdz6ofZJrCAYHyjwV9XTLl0IIxB2GMfY8+uD1S93naGCa2JkONMbNs9yHmZzy
59DZ9yzHP/dVii7Ch/o0BMJDxQrLpa6k0cmw8EynPG7Y+Eoht5SWQT7pU4qBAtcAJe9wHoScax7w
ucwexxt2vh34eVHRGSRQ4F/vgH4L69mE/iuwDIsbhAvBGs/9JgDVbl/GIta4D0aKcgs/1pP8SQkw
12eAPcx64s5G+l1unENgx/GrSdY3XW/58HkuhK8HhRgXKnzvHm2wTn+++F/3TWD6NcxhVlWdzUDn
kbNQQCybm/NAzAr3e7qN6Xqi9ehp0Zso1fa2QQlA0b/thcEVxMPh/WKCyRIW6tNPfijNf6MU1A6l
KyFQv265xcCYjstqKHJ+XCT7C04a7nmPAyeNB7zQlkVX5Nqrf0bfWzas/TDxCJp1/Rgac9thKV/E
I/jjHyBD44VYQOMC3jCCedp6gfWsBZ745BJAVbpLXNq+KuAWfgiW8KIW9Dpp0UKGOsuM/P6b0Ktp
lyRySQKFqHiHGMa6SAYjlscPo0LZixXR5A1LKnuhQ7Krn/4L7v9LUExF6tPcUM3NWr4m8a3rPBNV
XjOSNwSx1+/Yy1V5EL/KYc/wNmBQGVAUg2cp8Ty7J2XpbSb1nX599gxO+0DyykFUzO8MyWwqdOuC
zLi+b8Ql6Afg9/MRGvgT4LgD+vKMaXim75S/1jwIHCSHzFufbns8LCFcMZCyzhcdkYc83AN6NXPL
L4htD0H5P6KSvecjAZ/eSnNEKvKVBJWskdA4KMfFlzrNgBwaPEn8FsAI8FriAJjEIonBM6uYIxPE
M41RdPeO94Ysk49ILUcp4lETEQY411jzr5gJA94qBmJaTXBpv+8xe8AFttT6igZ4Q/Mp17W6Ibm7
+0O9s5NjV3HuGkVMtZzjButl6JZKOCpCwzsWZmurN9yUKbrc3X4Nhu0TS1w1cgaYONmnvpS7XFGj
soQYfJIGIRMw7af2HkvbspLSRNBOmErcexMqTwXbJYMMpXi7/saOMCRy7eAphxRmjPds/CeTd/RN
7U4qq4XzHR0UvX4/NbD7uO5MWX5pxonFg9ouqI8YBH5/Jc+ru0HZRZxi2zfmUxD7mygc3VFXCzXg
TDlcCzaclNEO97OhJ0JRQakjGr2QS+UovfAdyQeEYVkvBawUbq6Gom07+Ph1rmW8I3bk2wT83Jhg
7o3IKjKh8mTGd1Pm6yI+KhE79RjuC8NZMNpY7r/211c2aFwHSvPoKF5QRlkGs6fp+8BA7p+ajzuE
+s04wcM5F7ZEEm0L1fmJzirR1VmKwGX2+3w4Avnb0PqD7+CBKjKgdj3R/NbUKXdy8sFDNy6VwgcX
CFtgptMoh9TbFxn6yCjSDikTYqVZb2qmeRzpOHn0bHg83DE4x3RPWJXtm9Ne0zRXbV93VkS4tNiF
jyzq3zGni8RO/pt5NnnoQ2XOMpIoYWBhGrJktC7EjfHEEPuFZiATuToRnagKUXrQAd/riyl+2p+Q
Ei9wCu/zei4/+h2Qzf4N+bnq+MLmN5bECBWGwRaCj7cCKv0L/kddmIJ1k3hC8TXXVx8j+qAi4jkK
lzY5z44yHjBF9iVLwSVjCqRBKVlYh4rdU69mzZH+FOja9rOtJvfGovmsVgx8W5ZkgBVYgMtA/vRT
PfzSHFirT6oV7wTiFa5u/uvV3PVUyIbbv5Icv92rIOzFn874HuPDiIwg4MN0v/6/sRRJUqkH3EXI
anXJ9Pv/jjcVFUYZu4clo1Ud+eksYY4DXXyLpnOD8kzbvq2fDQ00ycTVkD87n+Kf1T1a9oMJL4Mb
meED2ZIjw6PecaIN0Zgsy4ZZuJRw+MEwPULdyA5GAgeWOpnjn9YgaDYcW+oR6t1Nrv83BznYHjDw
+10DuRw0PDrO+TUplaYZU/VdMq6mgGPSKiX6HGiekF67yrdqK8dA3rTMLDLoOVpCr3KJ1v+U3mZL
mxJmgXXWVXiq88S0rD9kjBSm7XZNeVaytEE2EBT2lBzmpzbw4R+08dIhXt3GkS2ywj/8NIzEeMeY
X0nnr6tZHe8XBPme9aIGMGwhbGqEteXD0QGfFuj9xjgDSvc9HpSmpylaKZy3mNUWuI69VfAyELVr
KXPsPoMM++8q7WLzJqFeYY/fQyYVkzlybfgxeT/8IgbnmhNoM/cWGHu8ZKUwV2crPtarUoAhU0/8
+Chc8D1quapPN0VZg4OChXUzkrUUYaFY2vw8AKGLx/USxXfFEmr6jhBu1dLBTPjjYEjcAIbkmCZj
xSf0F+8AcJIrpouWnvEX7X43Onl7/eU6aK5+437H10dda7PTEgQxsJZ0Lu0W/wmd6NmuEeMx7sV4
/73nHwzopSW3sTDSX1FHpRMce0Rt7zkIC7rdi03P7DU5bvS7ZrEqCQtEAq0ZMx9uqvw2LTvwJfjO
dFiGeRVmgbWaSsLfqeU8NWKW+MuW8dkLN7b84YSrSL9DlfcB5cgXtRwNnj3wXFwFI15JudFhn/Y8
JI6+Q2vtk12q9VHsyRKg22s+JBIOozxodrTzpmU+Q9hvKPaNQKq0ywYUkIcTXggJzQbpAKn8qwhN
ullytMPTE5C0WGMiBMt4nmxdHcoa4dKjTcPWU1eCT9w0aAcqyct8MzjkCqiqMHB2xEZDnxhbUMl9
Aktad4+MMe0NJEz2HUZOaW8NRih781If2fn7dkcM/z9msKcW63BFIQtuKlODJULKTWRHw/VHZBC3
ivJE12rsYLnn9urdkZQ7PswP8cjnH0q0yp731e0Mjzvb2vIED3Nm76vTKj7LOB7l0HDv5MjyuOpW
jeM2pkjTYWVFXoI2nMRJz+lCKg74v/hQFwF1H+4P4iz5t4Paa5ppc2RoUTW1RI0zMoEJUEqlOhEs
tFHZHT8gwS3Z6jkN7mFJppgP7TG58cfISR7B8FeqJrIiT6SrCz6uBPzTzeTSAiJS1NSZrrhNoiSH
s07haEamqyq9wG83DIoquZMDLDX5FVZxa9CtGlixcp2JTP3Nd0X5FtmtMfiYzvcmyTjoDHAsb4eD
Fi/RakQvTWcjGSxXeAaqYiFhANPaq4ugAIxz6+EAjEp/CGFyIDJVDmfO+peFGWEpSe3XaTo7wZpu
/cqEyfc2bYty4zd4BwyF3gfckORcHzbu/EJGRsg2t1/OXvtQiKjFg32a4rtd/8+oo3yJ4+2BqiRb
3Swq/u5bRefjnTnThv09+GfUvn+l0FZDtdgTWXHg1nNAPj5ChdFfYOjsRbYMMgsL11yUbayJhqSK
YsRapyQLXc2e5NGHQ4GSqBPIYlw5ZU/9muaYogtyP+uMB7DSzu6JoMP1kNurIvaretFzS4yBN0dw
EHdU91VnU74oESoWPDgclUco8UDut7sk+VOKdu/EguHRST0828W7PSyFjIqa54F1sNDdkiybkO9E
wz0pNy+ReOE7me4cVn9WyxFumF81OyWckczfAQiLIkRsB9Pqh366C19SK+1e6B0FA3xV6QcMuKpS
9biHQMXNc6vaKkUwKQkPT6Vv6RKC4U69ogI6FrDUXeCj5SwRB1Zepsr6iLIEudLlLvDacCUyn8Nv
GwnX48kKmRm4hSbIBxDeiIUpMhmIyiI3RcBVVtbdgnozC2DSudBRUAYhBLXqZ1LsyWhhL1C5sv+K
BCLyXUZ+PQTioOdWODkGjSK/9bwzA3EyDIszIWHQiJDTBO6WQkVWU9u2o9XOJuyKb1eugtKsbMBy
++TNVlsp7wBu8JSIXsH3GFXc/IRpTSa1RARxEYqBzHb1Z9oeIFMO5/HSPiE5uXvtCY7M/ISEunKY
Z6799f5l63C0s0KOMNsiMFNnqEMrvRRPNsCMVMsR8S9nSGTWz3ShPRV+dJMWLe9AfyhT6lA6tMpa
CFPlFhg39M77y6+XTKaMLtBwYLlOEar/f4mWlK5fz1K59ZCa5MZ5vefzXAOyeEBmdbcIutAD8hKa
UWCoE6vwLwH9DH/WXvR4MZjaPkr0azYDMLY+Q++g1URBb6c0tb+vcYBojKE8oTRrd7rvI4NaHcJ5
5AZCJyay4IGqgHNzQ4otzEhaXhz3vhai6tq2lh3oFgEpX06s5Ivhtoa/2giHPp3h+XHWz93TuuTB
YcdS432uhZW3oYgGhOxNJWh2Cti2UDXQRFM892kB2VmfYT2cesVq5GOPfB2Ewk9V2k3PWuDX/cHS
PU/R2KQKj2m8CxOYB7RR8Fn9lA1i9bQGPFbZrA79Qhe1Vhm4u5Z8BckipjsvrHY27SudFEaC19ee
ss2ounM+pHnnEQt/uW1M2vydnKr9aAOn1RX0V4iKXNMAcKXKI1ouXBYJXrAWzaeSBZWfXxiLdTmY
HatwNLbZH1f+I+0NY2DBOCPmmJilgXpWaYAMag8WXcWfQDiXWB84qiFXPFEioAfiosvEOY/Lym/9
HtofyS83My0PhzjB9ySlxzF47pCuNDjXJYimqZhWsw+Vf3mPiXzeQsQHNCulyFCfW89/bQBMU4+4
EbW/zHS89RuyZICPQojlD7hqyBpUIc8cej1DCTf0Mzgx90qk32W9SfL7szQXfuJ2Hns7agigc1/O
NopIFisBa3fTrR6AgoCc0XEu8mFrmREVMy7FO+97Ij81W9a8Zimd0fmmyPzqtu4ezmQLLS7wtDrF
CcS5puB20DRaALcpszq0gnm5D7+XV5QlpErusaRvKu3YXe/DE4xYnalP7AdbKFo7uE2j6BOshF/U
owlFOoCe7ERdLXfY3N1XmW6N7shq8K0PwQvXwpxI9ToJ/hk0GKfl4t2OX7Sx2lT/2ZFoJ8ljT5g6
KaSLDNZeIjG9igCWrrvuCb9zuFWYm+iem7CzCWEgTYr/gvTbJZ/4Anx+fbiUa+iINa9LMBx0dmq+
BaMhBFcXAV2RwF+xxBfohVKC1Sfw+OEMxnUQFKZQVfQLGXIbi2QB5WYjQxRygKMn6dzqVbf/xs7R
xmIMxKSupzLjOOqK5fNUsDgJ/O2SOSutuhGgsT0Dd6aA3w/Gl9dp/VDowOoVE/5UCdbLhAgD2f7I
srFkqEf/IvlwKxMqnbYXw50tD1WdMmxaoACrGjCYX004XlKRuJF3ISaBp/VAPK10BDE99UxN6ZY7
o74PtyIpTJlVZgtL2HlAyFVWJSjasLYRoXCM4mDyQncpMHWhA1x0gQm3ttbGAwfLQeWjrR6/RGqU
osffG0SmIOgcj2vIHBHTkXfXVvimJ53SLvbTmYQMcdJhw0WMOKNNb+YCSrt8b6+dCysfqcZxw32L
I5kPCf/Lh2I1jZn99iVzvAXK9hq1P4EELLDEBz8l44WeIpZyUfns+YMhC2nj5Q+sZGA8KniG0SF1
6nVjwyBh16ffZt66vclqlAk8bAwwXytoHRCi1Ojwj7gbZfc8qOsQzFxJBX4Vltxd83/bFn6PGjhV
1aMwMbMLACwNNzHahAevNlOAUqMPMuaBrn1yTRV4Nfzu6F/9oqwr82krX02Z9aACo9nU4KzXi4bg
57rU5VgEMZ+gQ1fQ/h5NJ2dXP4+2CrubGNsoWfz6Z2pGoVfAOTZUPGfaQS5VlnFdC74pWYcn2KyB
dfauXcI/SpQ2HRpuIYNg9mVpaQwY/uZXzY7cKsP0+MMztU5PKKXugPbWmx2e0Tw02NoTkqAtY6CY
/I5ggB3CT3VWUi5cxkrpEz5v6GiAMhDyKX71Gd4EJShtiCCpHvkaJVlpzKWlD/d2M9m8tTPlZLJa
7lrW2x+P8huWxmmxrpjjcbGumHEP7ipLrLXzgWvPB1outsnAznaA91jWC3cZef/hL7LqHjt/NXG/
ydHHYwVGx5boZ9pySL6uhyQzY0MVRdJZ+fnevKdG6lt32arqCYjnoaKU8H3xysjJO09qVRzZIiXd
qTZRQx3a+bkoe9lhQnhrd/HzFB2mIpSDTSvLbsh5WZN1NOEI3nSZT4eAVFK5mKc/k70We7yj3Yr5
moCg3N+H6tSANFp95WTJ8dwCj08nmoUtt92WeVbpsGPzSxNyG36jeqj2OK5cYGo2g7ZWnrzfBLM8
oAKK2oh9vp7zARNjW/UEa0q+VdnzPG3e/pS0yV/4Yq6BfCltDs/gg6UNDzdFbV1KUfm+38qvbspD
8STUZ55OLNG/bqfphcSn21oTAGl26qv1AlRU39fweMiipjlXbQis89G1OQ/CqzM8dIjKLfWhfa8h
YRBW9eiyI2Q3lIUJR7vBYBCEViX0UnJENVJQ3D00U4XkY5JCXwlKp6EXIdsFxDWzx32rjCGZl+Ih
t8KpJtlAK5j75H7uKt8KAGFFZJyz3rxoekV+6H7XcyWCU22YOMacNpassR16SBNbPu81x/Pg/7Ed
LEBIWYapKxjoVC9i9fH+KoDMnZm64z4Coa+TksHvcyIlaNoSg57XWLYgptBLNdKJ35gvMtaqsNUE
/KEG5XZ2hSMRmRExRJ8knMNef/kk/jDYs6zgo6jkODW+JsNjO+3+8cY9DAdHrOUgUvf83Pk1h1ck
1E+lVZY9xuV8AyZjEHO0VL1X4Rfe9N1anHZfu0eGm1sdzU0nziQJlcPGVp+Tgujiknf+4kgzJlI9
ugbCZFiq4Fxpju1lExRc94GlYjjv9T4Cb4/bIU3Xxb6zRqilX+vKzDj+JIXEXg5xr7v3ZXTCtc8u
GWvGONIoqUegJyVWhqlDKjaML+wZdJ3svAE9vaYCIgzPcOS7S4/qlBSy+MUm4+YrSapbH8t2eKW4
4U1SdicQ4+9usm/JVwSwHg6VEyzsKIyi7wkOovYPv2EVpZJHi3tjCPoobRtI0wLP8tUFfpuXO+oI
wpA2r3Ku8fmootNmXJXYSaDxuDhqdVH+UYdwAvBpzx/8Hrd2y38expibbkq3mRb95jEAbJIMEhMG
WSyxZoenipi/NgxtTGX9boGV41Pvk2FKTRY/9yIIQ+aZDd6sLrzwgIzcoAS+Bl1nvTtK0/Hn3xJx
kaT9apir9PvwZvHdA4QX6usHQ51asTKKYsduWcDPJ9M0/quCFs0UCX2QlIZO9G87VI1YyUdDkDz6
vvK3YFbeqimXOHMjMQoRTEYyUt9O2K3zcxEqcoWuNIPhgInAIDjM5RRXshwe7p9Irdydx06Lyt4V
OfxuAZacsG/uBh5CsCbuFTf8Exo2P10/Owu2kXJvR9NCkS9LM5lMuoloX6zxE7t1bzkY6j2tVpZE
0cSnA0ynMNCcZobZOpKgiDO5oOZWwGCE0FmpAMlzW1idF9pkHj9DkDb5cwkUvgR0hTuKiYzMDB/h
6fRsqtXaPgKJt5hocdvrfvlq0zVLa0vsoxXNFdmyTxex7Kvgl3duBBKKwF+Ge5THDKkF4Gtj6b5J
G81NkM67GhEBZK4v5fRKVO8mHYw+s/5xUmhyVUuzz+LU+z/phoJFz0FzfEyzCBDI/Wt8mYVgtziu
/0KsK9Oi21Lf9fK/1BAobQ6o4OaleoMlAksCdoM6B3Q+oRcmuapdfG1kuFBzPt9FHZga3QEsijIH
jxonBlm8BGKUjGvjeY0mdO3fh7AyT0ErQJv+Ml0fkKEUYUfp8/ILAI/8bjLTXKhX5l8mdQY0cEyZ
HMCV/2XY8VPhW3GSFDqseSalGXCPry/HjHTXpOtjcQO8guH3vmQOfjW+clF04ie6xsmqeaiTks90
FexLf+pnZXhpHAK3DHXoqPkxuYNtIc9uJFyLRRN1Uj+qmg4qYPz58p3r/A0Nw+gzhU6NkI1LA8G0
E9YZyzUs77uZzgk8YhlAXcp2uiE7vz4XHjFf6XgvzprXokYN6KYFN8V568/hQpAU5k5Wyayvaovk
LNEYe5rp7CBmTs1jA7uQmqtQPi59BDk6wjimum0pbky873ZBc/SOEO+SBM/hHY4Y1kFk5fZhVpvG
9/TRwcgZaSCd9LPaEGFRVnKZdYEP5LlsfSqqwq7h6H5WfuB5uAxuAnzpmXV8L42c8BQuI82H7+iD
noavNuvVLaVG84h/+P3z+07hgfVl3IjGmYxQV5LbD4+GxK+6tuUIiEPrc3Rwd8E6uLp5G4SFbL9B
COkZ0qUr9laQp/QjyXZkbIsfS1OqwaSk8BWQZNYN44XSJB5vINUGrcxFjubAeJKgABFmyDUGhFB9
4kO1hvdZuQhXJVNIk+6ZJ0SUy0v3gB7shDuVkjLvUq8AcchTSUJF6fCkOSUMd23fMH5TYOjxMrJw
PywdiJjASMbL4HvlIjszvTYtH97wUh97BggOHqydRfLMrjBkOw6hyJHbNc4vRa/AncO34DE8usiy
krsTG0bkZteY/+Fo0xE28xmRfgddQWumPwUTz+vw6eSO/7mXy4VGBOrlNZBKAn+NLBgruNS2O6PH
Hm6jDCqOy83q1SIyoapui0CUJ6W0unCOGS1z+6ikcHFru7XIEnqVzWqHexZc6JyQDEiW2Q6HtBpN
llCEQ+tntcNFGCpRMmSf4lzJn79762QJli2Sauq+3oVOOnAhUD/cSaPIhCcuuv5wJnrFQEp1Lo7B
RR0tOLvS+YZC60sWgX0bS7Gx953ct8j/oMHFCqH3cXmr3JGjKJeS6++B2Uq+mOElH1A0h53gYObF
BC5pGF5BvY4AQjFmebaYBqUUi6McfEOcMubSom7OGYV9jup22Jxj7TVrsglkCP+Xtouqi4JiCHxP
QIouSan9C5Ccnv1VgtrGjx4A5FasfElzrW17EGABP+gYJDWTzWJiAcTkuiBg4QxhkaM/1B3pja97
HGJaaoaMZLoKgPMIqadJXSAOy/iq/b8rdnv/cz7M8B59XfoF57hoqMSSuIEHihlS7ibKerKXTApb
3jh+LFrmDLCR6MFquxOIgEoZJ2R3crUEMhRiY5MfdqKsPE+T6FHiF8bAeSfBMnV2Xq6/HvxYQ8gu
uQhV7q8sOSxmFu4AAlzPef0iGac6uwqrHRHeUih3lwGBLVNywqEuRRtJVAF8zhSfGNWgZcOYZQlT
sPIlWjMxBF/xsH13J2F9QQQK4qHLfttVUbrElbl/UiZhU/37agH63nlL+xKjdAaUkuus4hc9O9ym
/ZlbUs3kBjZ69kpm5Q+d81FNEyb5iLCFp0hvA/7gMrToEWGe4S6vQiN4MKj3juSkHc7I50Xg+d6p
sokqg24XlXP8KNHkFcCF8vS3+888uViutZlMmEIYDWWQLoiXemTrTGEa2wN3aip5O10B/9WWoCj+
FTKhMy5T6KWka/NJwG0h/wbo3NRCe9Xj3i16yLS6b9PYKAX79LISILH3/Ib6b/ZDzm1jwyNU5A5g
imHVdf5hewvQUhs0mP5Q7BxmynlWZCA8xRUI/DHzV2HN2is76t8EPzOhHSJw1aR6eL2geTjd7/OD
m6MSWShBP88jvRhv2wBC3oGmFwJjb3+0R6mVCwxuLhGOoYhqO1s/Czb+GQbCbXfI68RzgA5fiDVI
iStpVUtDlL4JevuSofPrvg2BrSdAhxJawzilqV+81rlrQ4ToHwNoBEVppeRin4hLvniN9I1xbukT
65KO2wMMw+HKOSqzdsIkB7bX8QTyDdlcOqWU5+MwoEMIA/2O8HYI8UF2ZUkDh6CmfhIuidDCyQPk
a7ZQmSzoQ4jqafobAmZ3FDoOPK6PEU1wDvXEvXFs1dhTFTZ0SOMySBzFtORmcJr8AeosxDoBek93
6w1SOb7wQx2YheT3eu8tmm2ItLacDBDlk/hgQ9bGwDR/HlxsZzcX5FDOWo0zrWy54ogEEV/jQ7dh
Fwhj4O64goJtvgjIL/Q/x5X1ygUr0PjnAGBmMYEAQ8aj9xjblQRvey+FulgII+4Q9+QjeX/Apop+
bWFmLqbeF5wpNDW4OMOuNX2IfDFpw+0/QKb4K/4yBt+Xa9fUuLjoNDGM6Qf0L2Wq+xzKPbfq5Brl
kWOw5qmp/fKXp46mw2e/teNSTvWDtq5grr2JIzBBn+sCjBKuSh757OSZ2xTRN5hiQrP+XqoXtYCs
tcvy0RtECXaNoi+ySreJ2+oIiLm/kjtkuV1XzsVgk25gebjLE3XdpMa7Ck97JW0PKGZfZWjM4mOT
Fvg1Hto7Tsbur74AuJMA/ulQ0wbUXscOWiWpK0oKECGJdL/BmRFYKtJ81ARs56NlgHqiX1p/Tjt6
OtGZ8ynMYtcEJ6svOB4X7PEe9TIitrqKuYJ/jBaWdgoFFIkuqMwNQzBG+2gUrAVvTzcaxKn8RXKe
pPaWNeK86pk2jiFjcUfHDdvfrZIYwmsPdTCgbR0v6+kYrNdpGPdlGvcDMFoBcvGfUaGeAXIVqAJa
Yl861Yjq3F5tMuAWVpoJzoLVxjegPX/lCUOVM1tPO7BIKDvFjO6/dkK9w6MeTZjIqfAoc0d5Me/X
IGesa1P/AYh1PJSaEg+MPgeRnuLTof8CcVOVEuz4aL9V9xh8O01pTc112soMdtF2OutWZ1HObytl
zgreH0AsD7a34aX6JxTuCFwmGHzFMMEgHP/j6ZENnPqsa2RYB8L+FOUmhe4QaIMOn+dfkwg2scrF
nN/weKIjh7gHaYXJtyU9oTSd0sRYw2JBTsklYgI9gNnKIBiYzbOrNf2ntYobazgAaCfiwaTrC1FO
7JqFo9zD9zhOmn6AJDnXS1KhX79r2vlpMPzQRPFFD2+H4rw3McpJzQCjkIAXNL7s96fggvYe7SEg
67GDAiAA2JIfT3XvlrgxmkNBp77RTh/DUcZJzrfBTnuGc+G80Yq0Ze8yqpm7R71iYJNMO2mYKxuQ
brg5w4s+w0F3+I4mxJWRUqdivaSnDXpM/Ey21vqGhEC8tN4bgX4jNs2kubVGzoxSLklEfrZRQIkS
lHzQXpK3KCpZV3vrq+tEOLFuf5ytSjLNCOa62fPG8UrVZJwMm8AnL8HJOO3MPn8aRVrKHohnBPvB
EKRlu8AZMk2qGkGKIOzW1iOpAsxe9OhAOUfg0OVPdUGSiiaSNPhfH4sP0kEGCTbkMzrJgnL9J9J5
lYmuUCkHySEZihtGQOx3DlaCW9SZSHNCyuPUcPvZrp+aMxTsmqPRvs5iOZ5zKu0R4LmxHxAW0GvA
2gtnOHRphsVCi5iAchgx6hkBwYG+FfWUsPZO5OCWzpXTCPNAe4KkClx1r3FSdt31sEuby8QboOhs
3oWcLauIb7iKH4GyO/9fGgeZgcmjlAZrmDv8+uDPyZZhQVgzjB/GtCZUz/akmHsQyKe8OO6FQxLM
uq7BhVX2SyZtU8X/Mnciz4S3xvM4gE/PO4BE030tmsA2s4rpbjAGEQk5yoi6KpOsQykVUsckSJQK
R0unNfNZHl8L9ibI3x1CqsSEWvtfi5uQZh84Z3/URJYocby4JreikRz7RX7aSaI+YWEnxWEtmVBK
cIzntrBGU1qtCPVgwlsUO6REwmKN6j8SG6cvrRDigdTzjttfFpFWG4Mp0ROfIEfTAe1G24xAmJ7X
1N4ROUpQVT2xvDfhk08HNh8sNe2hX7ZLyqeXh1e+hqVTPUY352WO0bbwhdeiAUqL8MjYcnSK4ytp
j7I1giPiyEe4b6pkFZXnKp8tm6WC2r59FCkk8HT1H5lVOPCM2/lRSmpeMgDpfzYkXaeJbyKHLf0O
ZLG4CAAz0kfdrK2bKKj/RNntFv5LAfJHV1zE92BLxUQZKu2e9Ywxg5YIl0sbmRo3bROUPiJgY0cj
z/D6JeVcF0LolZgqUPq4sl0WcxiW7n6z5KxZcwrXjUZo02riERH5CwUrruheAVpgcUpZH5IgMgFQ
MvWpJhRsu2q8Nqi3gldiQwxW/F2tPjRCINAfoVLtb+hDZe1/PiFVaceIDIhvyRkjynErUz+aZcBQ
A3lkgmddjVblkzeyJUuWTXiOQq7q4/xTh/9oF8Y5ElRom1KD7ZcS6VjpFcR0zAz9wl55TpH9jR8V
yDnrZ2e6Iif3UU/7CCC1hNl18xoKMl9EITd1y8b7HT8kDHEJxavMyCGjf9XmMHgfavWI+MAhrXHq
5p9RyAEg8kxskfTuuH8MT1Ut6Do6zFx7O4Rt/ft9ElLZQxYJvXmNMEwUF+rejwlY+gO2QUsSnebr
iemWmGlu1wS3FP76FhljNyX9yiApE0AOISTsnv3qScvn2uJ+AGc2u7Q35QY2+MiX1lZB3dxIQkeP
H3sD2ZfOSADcF8Um+2Rr2cEqm7kjjSwd1onma1ZSmGdtBh2hnanb65Cs5qi8RpgBxihEIzO0J3PO
K4SaGRhx5GIrYEEHkNJeEoT++fU/6zLzPWCH0OCUTz/Qx21jIilOiXH0bY/UeWloTDN8nXVGO0nf
Onn207ufmUPmVNPrIlhhA1llIfSuv7G7zhv1F+wYnQRPG1f2No0QQEhqMTleFbveBkNYSpmHe+0t
4W8bSt7GN8b+HmpnW4strzkZUSY5sv8BgbJmDvTAh9QEU7IM/eeAfJn1/zW5lqiELjs/i8keebD1
DhrvxwTeh1GBjNq1xos8o62Uer9Y6W5iIVmYaXyjj16s7Hq/hfTpidwop1dX550+G/RsHLOymrR1
6a08RRlm/gtcf0tcQToPhHITYRcG6SsSh3Y5JbDFRSlvvi/xpZLLmceNyZQ8glUzCxMTxdNht7DU
doVf0qIfVfRBguPHslCd6lC4T0th/JF2V+rz6buPJOnGai47uevlBfMeC63zDsC29OAVy2Fh7Vhx
xpuCm1yeIsC458QVrQbawLhD56CDOra9hCjbw2B24DGdvTB6wEP+6Z9vzdb4vftkkwCAXiG/7W9V
CpZB4v8zkbD2mHrckBmRnWeQEg4WFKlntUt6x4LCSKO6K2tDKUhBbMxHBciyyg6MNoh+fdcFW+fb
7gXSMPdtWKc8/rhjzq88il7bvINug0luQSNAXhwNyFZuWjtCwE36BDRPzgThIdOJfXKbUUoqoprB
6waQkStZSXLmv8L6j0t7F45w9ugHLNUeI+x87ODE2tgK9JzpEgoeh7/VYtAuXEZIRde1Qc+Vx3jm
e8ew+w/R9zhRCXhAlVpRhAYzEOfE39xgfj3BGo3gl+FhYRThCxJxKnB7J7na0dX8ZP1s0/1uWv1f
mV37bt3h1HOecmH7wJlmGze1eKzk7P91L/ZF4rtZMWttAZt8HKaDkerLym6mCpo7w5RWfihsdnfN
750A9gtZEMuUNom46Yk3I7DjCfryQrIfJf0Gshhl4ZOTTJ2HAMGJAfRlWClOGZf30yfxB/zek8jn
IPtdQHne6f8kbmGGQntOQ6OV/EdAE6yA4Izx4M2u6Fztxb9FdpnNpPh+0EbaaeTe0ONHcSSJ/6Px
FXKtNRPbDV7CyzDZw63hfDCw1n/75JGdo8U0Q8/MnXP0McPH0gdbVzFf7t+KgmtL5+EZzsP8Q4re
3/czldXYTP956dwqud+dIGQ79dPjp8K1CNd2wOfEmkp2RXDf/1YzhW7mtWDybQlHy0FV+BHnLTZn
yu1Imh3AJNKIi/JEFsirY2aiOXi/HurS85wWPWJ426vI+ZXX4JfMv08aIYbGRSBHMHKHLfxcpSap
nG4/WsPqPb5wS7LfsDbdRt4jFkMQ0xkVJl/epkBm7VTdKOffkjQ0FCl/a6Hf9DIg0dX8wwMI+s1b
6gexawDfxgwHG0o7cpkOcBSqzqMKfuUU5pSUlIV7dII1N9FjcHhs02QPuh04owWISfvzy1zl2jLM
RdbRQ/BXDgzLaN/yeuYLafe6bspP6PIk1TmARGW+072dsCCxwL2hw0y4zFSSrRFrx5S4d8u3+iUU
tCJHiZFyy7ZbZ2B65m0oHVtrfBM05QEp2hgYxPW51kG0JL0SjT//aCxyQtSdk/arRI1GA5N13q40
t6GTLtskSM1qi+jFrJiRYRnHlJpsO3ZiYIk3iCiRBy3dnhgjejlHpvL7Q4EOesvZaDiCEG07cuUQ
uR87ayr8sw7NSKRaG8Au8yDO0XVuYgtala6n9Vg4Y+ZrDaqMCBIBvWmAmO7NlQ/YaTZ0EBFLzEiN
0PtGdfSSiaX+YEz0mShfZeChwcLKZOP1RgYQLqrtTuN+a18QtCNsDzOPApvYMfigztJZXFjAdado
orKFkOeHBhKPdlcac8dE+OK9A4vvGKRykXsSFYtAMhpt0+5z8WcVQx/KrcgIC1eTTyXSPrjXiVqq
ish6ZIMX2/kKjAA1zVjU7awykIy/zi43NnOIo4m32+PT1xnBsTS+WzeuUHfD3JshLt5MDM6f42pv
mzmvwFgeZemLG/Ka96aYAWFBttOO+OXoRksfYNdELb5pqKV6cOf84j7K7XFvnVTQra9SgmsbumyV
OS1TtYIx/oexUuasjXO95xuS5GL4aT9cFSr0CH8mienzOFGsYSpteOQDNcimcOKKQ+XCKeEfzThR
RblVuznKCbaEi9OB1jUGD0exnHQ18stpQfYB+mecGUCzaTvtoNY34oszlib3oQPZ8ZghcTTvpxmP
c0oNd/g1es4zvruC/LI0nlPITC4AeN77Ni/HIGY1ri6a85eNhu+aDkR/lrnLMaDW1k4tm74EU6yz
TMEmByZjp5H504RpzSylZ57DkP9aqA8krgi2un/ZHWZyrhkK/7FnlcuXHNkJAmCCCgtvTzx8+zBo
lbGnkuKMNWYhK2SVH9GAnUVqr1b8g5UHIedBQWOtf/+kptf3B8sfF1z32HCCajyqjWU9scQzEURV
ZcfxviFLok1VJt+B3JhJ6dwckSjhPzXhcVXz61aeAimxEJV/1qnEFLAELZYDRDmx2ZFsC4u+Sa/a
v0U6pE6lxeo9i8G6YbHFeK4aLByeVI+TkVIWQ6K+TyStHHvjfSYMhtCSFVWLsIOhMk0LSKQdVt87
FrlIcFuUL3f2EpZKbgTjHaPoiQoHeQrt/SEAhoQ4d86AzkpqYS9UEvT6MSH3xdHQjjOwgYelrWIm
93TflkGFIwomGTumOVfKbFhEeqcHS136lFuUQ6iTjmvDM9G7AVg093rqnCwXg2xCs2R6pjL1qvoc
AG7uIWOoHVDH0RCfYrFWMyjcgSBauO07Ezf3hBYf4Uug8YnKPdOr5gbC5ToqPQPZUG1IF4N4SCeG
E+KococWF5muNe8JFsDCyNebBPeyzclFcRtfW9LjJNvDFct21C9xP5tAzGk9siPqY7dWl8JBK0hh
Vx+WD2C32ZsOMFbbWHWvvbhtR+xXtDU04jPSGXeb2mD/HdAqz9ypgqsh9nmAxt65E3DgM3CXv9Dz
lKlyD0Kssjyt/mNLKGUemj2cF6BRX+7PSKgiLZ1GjL+Sf1yCzn3qMbDq9LEZn+Ml/w8wEBpYuFWa
+PiyKmJiBfQopg4m3Find6ZWMN5M0FmQDzSbh+LBeDS+oFPFPYc13lkeu+g2ScLB1YXlKbd/ezkI
T2WEoSRk8pXS7mOYjb1ryIN1gKY+UK1oqRGfAmK3f2A1VjPyHaYEMdI9uLEgZ2cQD3uxaNQm0jaN
hU82yxzCvRI93v/FTLhdB1iLNERZzXXnb4iC3xN2jGeQ5KA4WVpj7cheTShESkiQKITC8izk1inU
O1YeXjMcY9+DoRg0vEEXDW4w6SHO6g5W8zki8s0Mv66XgKifChyx1b8znSCCDDscu0Vcv6THEnkM
EaqvfB2Hmbv4PfB0J5D2yxmWk2VwM78QlWYtumgPIgTaKh8j9sXt/enxyqi6NYZivUdso6LS4a2r
L/N1Ikf5huOefYPf9lOvXcxPp8HDADiuiCJapVb28We3oF1J2IU1H6nSnN7nnSHvpYgRcJCyUrh2
r65PoLgfChEKo7Vw7Zz8B8k2r/wuJSNUWnP+E+ZXjh+djM3tYfyd5iXm/Q/8+6j39ZlL5cEqklD6
apz65Oe0zF4FoM8NoxbPhhta45sg96ocKlxfuiNUJzv8i8DfZGcPneEkk0SAP58Cv4lCcAvLL9i+
D3CkghhqUlasC8s/logzpJ15Yz0/pC9YNtFVdsTytchgiLRXsSX9Cmozz2qYH+Qj7AfCy3GFBrCP
VcGaMZQZyC8GNONgSbSrdj93AlVN8um0hmGRZ1P1HRQPyQ6HM4VOCBWf4BGig+/cOlFzyHRz5olt
HOb013SCM+r7l85q1jughGrvc0c6M/Q0+0RMr+DA+wHBrfTCtiUj3M7YHKDPqWkCnHD42qeVGzJh
FMQOwl9D/tFEynhpdWqmk/FK1HbBxh8hmXZ4tYCOd3WRjhf3yiAa/7u5Cy4SMNWOvuWSUhN1mRw5
s6Xtq9haI+cDk0aePO6sQ1xdEOdp2Xbj1qqJXVElbKwhRHD6jmvllfOKghz9Y3aI1QQxAH5O01Eb
QuaMM3xGW19muyFqmEz+Hmtx40N5Lq8dWD8xp2yq38d3n5+fhtPX9rxsooN7+m+pSTByESdVWyB4
EPraoSkHapX0Odfsa+kwfetXphs/XhPklffv7Pkok7SDF0P+VsAUqyxEkLO88ICo8/NArBP6l3xn
zIjac9PcHV/JYINHUpvi3+GTTB2zQi75wj3Wmn/dOAyCKJkHqgVnnMrr9sCrFoKXsAy1MobpGyHP
y9JjS1i6uW1uktdT6W+JeTSim8kcfXt6jPQvkrMWvsUP5Vxpy5rsp6XnamBD4Y3DTT55ahLL9HrJ
HhrsyI3Dzv7AlW3tTFaKUEJpiq76vWl5obsxl2OjNfwShSBeIWUru0ldjIHjH3eQ3kizHoF5L371
jAjbY7aLXpCsq58ushlpjYA5aBGVOg+8usfoaZSdJ7gTq/ZIp88HgDa2GywjC+sQdrcdllYqEC9g
Be/wedVxSiTgohIkGAOAdTVh7br3r6GYOSUEGSzBXZ4myu+Jnh0xnasvuz/Mx26qG7m5Sw7LcSLF
i6xuD9gTC5ox5PN8Gh116M4rf6ME31FnhML5IkJ22t5IdVKHo/7/+s10fLZzNFkSH8h/s6fmwUc1
aUT5HKhR5IHXzXNH2MqyfEcHxb/XrRM+Fa5j2X0PtGKzPo0By3Gs219OpP8iA1vr3obzIqFFH8AG
NzN0sTfPzCYpPdtz8O5QBG+y8ijn1E72vVEYKq6JQ/aWTAjTAhB8bSGZYoKshrkZkfWVsuXl8+8V
xH4wxeaKfaecxunxNkFrs45ZB5iNpHVeSqlFwz+sdRFP9wjOAvg33tZhZhl1Jlb0F5RAaiB/087c
LbVZM5gFeiOV8oim2uR0nB55gZtqfpr+soxG19feSQAKXFnr7n+H5flLYgnM5QF6f3bkNaDBPdCt
BeIn/KhpGAWIfJ4AqZ7yeCgYTvxYtFg9sXdh53t3FUpr66aSnH4FwRBjfzRhNcSAsXuk2ovCBDz7
wKEJ/YxYfFys5et/RN5iXqvkZ6QsLUyfUCFdgywJJ/ySc9aamXWQSnLm8AifUPfWZxSOsElBRioB
p7jmZ4NQC3GoHp18ISbYMnZXNgKumqQkPAhX/miO6D2pNg3f9hWrJMds6T9gL3vhQwPKXPsA654B
7OjQn7KeodZJEUeknp2CH/CoW7suw7JFrWUgBTcGfCHwpLasxhTk8ivwlbbHhukfnO4g2YELHKb8
0z3MVirEkNcz/fqFFQE+EFTbipUkAvJYyUeHtRcJZ/YdXhIzSGmpGiiqkAuYlWLTQKWeqGS29NCL
XnVhPnT/ctF8mZ+OHr3IXxEjPLlIWXoLTU3wkQG11Bu76+h+5ZdB00eOVGMpox2WunGFDFkYXBcG
+Ma7vpnSlYDrac2m/Pb25I8HxYLObtB6Y7c9CB8ib7t5IzIJuPq7KCWFYyDfl2Nv1dzYT7VHJLKn
OiAChEesRdKx1o35kLvuVp2GyDNxnFIixk+v5l+nhBE+rIA2+px73NlbneSrbzmj84jNWssnY6vh
9I6cSD0mV2QGLjGvxdY7p1oLaeGTcj8PUzwwaxPHkmM2uG0LVAy8IXi0A//8BEDTh2AMuOb5rhqQ
WHHr/hDc3vDp654Ykrm7QL8RBbdeiPolvgXw9pXSRDW8D7Cb85PGB9a8hwozd46oXZW6/wsAn5DP
TgKBv60M5y67vGULKvyJDlKx5gFDrOWzy1xDU1XsNzbA8uWVWoBUDwXqCecOZdBlHEnhEkD9Aau/
+xkJt27aKnXGrxlSpbvHIuj9yW8MurQ5IiVPCVWGaDFdBDPMe7p3jgHO8fknHoCHblFmquWyGTSx
hsH+3EDEjqj2Pnnw0/0c8dxVP+KwIM8JytEXEG7FV88VLaJVR43Hz6UugtLeIb6iJz28BKH2RIa/
yM96G8iy2C3NudCpK/LXpBVhK/+3bsPNnR7CH5U/iteoWJjbklpNzzauQ1W2PD4BGkyXGOPDaxqQ
hQaAh3I6XmZgM114/l08y6CYbZxyrBcvOvJ/MVMPHPWRj9Gu74zQ+1Mm4oiUiGgOgsRqFeGq3AMM
84jvZ7gLsvHZvRi1ZYIDXeU59D6RmzXtT65yIdiw145XJotFQfJv23kWIXvicSjmUJU+pteNqKZX
yt5c/VMrSkjMVGdbPDMztq4xkT0KVM+CesbqMou61G4WrDVfMt+Ut7KQvDXLfkoXcCMNYxgJ8VlE
IHOcDob0JgEmpa2d35bVwaXT7jm6PNfhkp5eFMqxaXaINy652cvhOFucTf5TS/5ISmteUHjSesNd
ihkqSryS7e5cEeSyu/uj/0teIWDztGmTgCvHvUp9VJvoV49Ao4bD3cB4cfrpRM5dH/44X8jQy17j
WWuaHd/T0bfD2LbUY2RuLG0mIEbcgskYnWWrqf7lFfLXDYt36BGCemCQLT26VaPtoZ2wx+U5m9cu
IsWsKVBxvCZPGSaoYqe2M7u9SQUU8u2YlyrOimr6yIK9VTqr8GfKeh1XzTIMR2wEZYG6WLsyIH38
6bU6/vJFXckwJdEQ/MlBJs081NrFCtVUSEgcawU+Io9HsWx4hK90yy6ZpHj8dSgjNeK9VbZBpAdU
QFoizcYO6EqKMv6REphCJWxDbQ1y7Z7YIJ1gSuQhwHfFEEZ+vM9AayJALGFGxxgtqoWAnWCYdiQN
MvKQgjrLSfDS2K6Z6GgETWyULzknri8gFsPy8occG4C3LE5eb2YaHCDesm1KLuLKdEGIERyBQqvU
gha/qNt8OikmfqMSc+NFc40VaxcbYcmAuwv33izlZEQ1YQpXb2Gv7EvKdPXP134lhHMxQH7l6Wx8
ZdqwyjLL1mQMZ9lUDsDSXwJkPEaY9KOS/FTEapeZ/GOmbMQt7pLHvuY6dR1XFcFaR/YuJ7sZVbbn
lNHY3EQDCz2ZA0dFPOhXAtZrQlYyc6urmxzQ+PSOtIjKGbF/YYzLLfDOgZIC4Bwnq++UYoT3djkR
W7YgvwJyae5o1BoGXdGJfwXzKOxCKePgAreLizKEEExqVZ8ymOvWNilDQSbMoYsScmer9uU2p9aK
kF1/krHwTFuRHHMsPC2GwA1n+6k+0HLfkGEpKDTfRYJFCbV8x5wY70A0f72MaBZ9Vl/9COly2yBz
yWqiojdl9S6kK60/XetH3kKXVZWpjjQiixwGFKA1ixqieCxQi9Yse9b1LTeStl/fFkE/cpac5opY
2FwB46ry3Qe8F7xJWfYO5FS0clCfwiVFZlIm+ZZaq4bqER8NpvKOQiDX55yXICo8c3GKJ2dDn98T
8uCC4QK1PQYLnBQnrwOP6GIiKsRz27ms49iYVlKTtKHIEFxbh96u7j45cK/rRYrLspBS9DlV+G2U
bY+Z/gFhbcA1CyKvw2rR9Jf+o+GsIXA/zd/oHcVVNHdTV9ts5aMENdil+4xoUW8ml0vtcjFL6r4L
m8sEIDw8UQQrR49q+NxG9UkoQtnxeT1M1JSWXJfwuvLGYUMi+/MMTjNOvH4kxLqJj9WZiEJcFnk3
yXisIxWK8emrTABlXtWy5UUQyAHROYTeueMTXT3QomGvI6ObYiqYLrj0ud3MPMLsQ5CqsPPtAHe3
fapPz82QZZdAwrUr0oVmd7g9OQws1os8HN0yaHP8VpgtoyDMJjZJ1MjHelBuyHdE1DJ7kxUbYrVL
31vFpA8dq6Od2qO0PHHs55Xwr+cRObNWJgbDsE4hNzt1rBcvflEoO6+yMw5d5I/XSv7i9C9tGJSS
PIhpvL1swmwH3vOwQoyp9cLf1XLbOp+4GJAwjbQDndl5dzYYkkVAPDrxQG5tp0fx9hN68Yx1vJxA
TxMHGxGQ2yy/reR6gz33G4jLyv+HZ0kAANJ1NPYfA2vfeMc5pFctH3a0ciBoD2gckB1Xp9vfxV1c
rTGx7GB+xH/4z50jswmOLLc0TadWrqaqFX4H/hnn+6V7MehiBBj4vRc2A3Jnp7Q0hN9Y1br09aXN
xps+UnvSrTqh9FNQ+czPlCtVnkL72N7scGzYfC2HTrfMT592sPJXZnwf67fUh6Rh+YwKyJIjwKU+
YsMxAiNf5bKFca9rjJoXrith9l7e9bsElL6b6lGonSdYMPD3jl4D22Tc4L9IKxS38dt0zuwm6VwB
+qGCsM/UjNYXcm5nuoiYUtHgkJz57ukdKhAWaeZmPpA/2fTKixPE/xCqI8IXVVtDEXtnLWvbM98Z
v87lOqjckdfQQlu2Wy64SWpeDV4ffi9JEhWO1w2FxIZJA5YCnbb3rRA6WZaXvNhVSM0zyJ67/QQH
F4czyGwD4Rb/qgtFvv7X9/JnM3AnOPR2qQ/4OKAP23Xa1AIFkVEezRlRr9EiJWwLkRKuCvJPoiJz
Ual+yAN1QvNbkMIf0VKSlK16iitcfirPCs3ftUTy4QlpCoKngGoE+G0YFTDJNHk6DZLA5F9gOHQY
lAFMcthtg6rSACgcSNy4h7eKI1U2lE8KBAM2LU3RSFdAXE7i4irJOQVoCNdyKDVJ9odmytEJbqp5
DYXgFig+wZyUerLfRFhlX+bxr+JCnQqywpO3d9WYFCLmY36boTwUQGLxbQV/AEhrvEwdA/Ctpg2R
35CcYeQzLhYFMbRPZVmjJULYlYJr2QO60CAF0QGuhnNOqSqXGLj5plK6BHAgWhP2/2QDBPDEokd1
/VkMSPZBnq+2Dw+u1+n//d+l+h6D3B69BwK5+T1SMqtcQZOnNAbYmanZRX7WlqHqAnFQZJGNdpJD
wLUPb4pU3tRwQ76CFoR+g0PBcT0ZAxH3ysn6xFUtRqTgCc0wrQ8PV2sE6aGMI0K691HfiVK7TYuq
HqE/TdVJzn0ZashqWsBxV5hAyQ6jf1VtRn/g9YI9ZUrpSNUKegQnfZh7djn2rSqfoWJopXcvUhcK
WxNUWGlsVvh5vtGA51ZY/oqiMCuUnGngm84rRigtIdXG3hoAgclfxYUiwUmmhYcJQxVdHTvVWvDD
PKtzWPc4vvjfmw9/IJV09KWdnBHZjNKpbtiY5ZQlBndL7oBw8/Viq+QtxdWUmLyskZSY5SCpg+rh
xL6yskxSRDAem6RgePNXrjTINuzj35ZYsc1Jn48G3ldsjzdnIuoIR6mT12NYvlc3e9+r5W5W/xeY
VS6mEAKV1LkRhfADKLQljQGzIZGaIoz+yxf6DqAalDH8LVYrNViDmFCKHnBYw+CcXwpgbBnW7yf3
LxXZRJm50UGpPzGAHshPrcxVWitXDdsDXjVdltmgKjv5WRIoa7JwFz5RWwJLaas/Fx0RDp2xjsrM
QlYVHWODulB8g5sy4Dp9Y6zfubtw6pMPKkvzJEYi9wSAaDF4WeHncvU4u+XkVCpioSj6CtHVEQ+/
oFi7x60u6p07latd+Qob7JJQI5u8ttjHcpClmX+0S++3WgOXqdakuVjeRnPqmg96aADY0qJuv1ep
6zkcFQIgf6vkG4I6dl7cbB8I3uiPdfbPSLDVdcackFuSjhzu5JaiPKUGNRUb1pJdDhrW5CEyEjyw
/hpBoN+kghdddyJG4GrWVBAUS/00ZNGo2CbH+WtcV6m48WLcy8ZYFQ878BfYtiEOkGxsit2yqtUX
6Euo1eb7Vr/TZ8awsKuNIJJuZ/XxTnuI2vxjtRohRLj+AwyoGqJoUylx/1uzrmklfb/k72aDeiJd
+zoGz3aLU6uYnY1GYd60JFZemFw0nxkucsyoAxst2DrLopN50/x0zx/3bDQtMjIPv8gPofh+I2Pu
qGtb8rHfKQgNUq+G/NTtMgaJ7tDKRO3DQ0Hkb1r6/AGUNz3cSXF7oLMEtoF4rmevMJ8/if7QfEOS
U7Vcu5fpTT1Ws9l1hT8dxG4aptBWys+a1g07Se651fywBYSYnGQcYLrrD6vo8G3UbIE0e5H269Yq
FhSYazyPRzXoYqBYk9C4Prq1pvVpHNTF7UZYP4FuP4VoieQcB2tu0XXkYvwXCq+7vk5ZQisuIw5h
51sz+QampyLJ+Urpb/8hPsj1TqA5ok9SErvIeigza/3NxwXhtleWnQxIAY1RGJRkoC35xAEazWaw
MSmhDJ5O1MabSivkAJCcBmCX5UeYY3TAV1flAR6xw2WAs3dGiMQRdyDEvTUm/RRICVH0VjDUb5EV
6QSuyBiFEx8nzZI1oAMw5faAJsbCvQcEd8RYwn3Z/3pNErE9tR1ga1fIeb8MQV83nV3PIilmJfQi
HHofvt2JpBF3mFj+uO85MSqo8M+O3C9Z/kp/XP85YlHr2Z0+1fDZr1BA7Cxl9X3MmtsvPeQNcp/j
z78aQIloyMPfwbao+2YGnoWDLrftHWu6D9m//W9co5qbFDBpYNj7K/Kr2rtQk5/O1KnhRXzc9DIq
Kt4/LYIlB/T0SMFQfGQjz4LHCbugLyUSUMXdt79MLUDz+kLslJ6nglqdEDyANpVriXqPnXB0pDkJ
DlNOuA9IRRB2ecd0C+r4xFXDqD05VPDwZ0S3ywXhfgZ2oDaTUCLVK18cx2KhfkwZMWMcul/pM3du
Gyj57vqGkcIgFu35cW+7j+TtxPldnTq3iPMedK6UEPXUn+2rF8499TwCdleRC0bYBeyXsiuLQ60/
nSPKhX9f1/aKIy1XCmOPOHrujx/ubh/73HwiRrqoHFQ8y5hoeLwXT/HJYe4zVfSmFHw2aM3WqjAf
0NbSfXIZ03m5IHdJ5u3trMsXvPb9v3cF2wt9pRlMZKRn1DQvtzqTsAuPPy6v1FXPAKQg48nqmhEV
6FjN9A4JjlOj1YKRTtcRtYTxIdBBPJCNLcUjeQ62m1W5eYNOtNdlr0qvYZ1osvWVOVGS1aoLfeap
Yd58WSDCpnTkTXM9RA9dyTyI8quzae53QdvxBWjkvG3O9qkK5o1k9Uv0RGk8Gv3wwYIY5DnrmvPg
Mt5ckoMqd4Toa8jUCKqrQVhgm0E8GQVn4EWw7aEN5F9cQOqyzDrbBJoqEOu0n5E6VgVUE3n+Fbon
CqxOzpXvzf8ukn1nVFWSNO2ZW6Yo3rklRaWk47DLSyERX9+TlZ3gWJN/SWJ2y2P4vbP/O5fMkh3b
qdjgVTANn48ElWzZnXMsHWQV90A4T6D6ZObjap/LYl+2d+kW7H1gzp8d+/60ltq70mQ5sh3iUzF0
txCPsHsy+GOmgQR4/2pNrTtd0+fgtwzK268lkhLv8chE9FY6W2XXhpod9xvKbHpy1mXqRM3qsMdJ
PT3rzMgWoKg5OfREwj+t+7Oi4a01dEe7XJy8BHYq6nWj5VbS0YMpYElDv6QjPCTaYl9F+aNF35aI
MpwFPexZ1Ey/L1f5qJLjhq+HRuyw9JA3fijKWR0ZdBp4T/s+w5rPYGWMfxdlQPY44qSwSHNfpZQG
IFs6DDcWllYnyNuXVzjhOBO9gRHxKMMGSn97yfDYB+eVyTnsQxvOBSD6yfXC0xXMc0OV8ruX9wn6
xV1SvmiACkuZD77QoPz4haiLcXaxv/0834G+uC1YTBv1M+nEW1gIjxFXgNk1xuq8cyVGOv2vPq7I
7eWK6satP8v8EGsi95GfH3kYYEPR41VMA43NwhgKyg7dHJvgXqSDoRWDL1YpdBajGnrWBcCgclf6
DjI7RjYssQWBDkUxgKe/2Anzbh783qFlhOtZYiyEerBHVJDryHnp7sbI0weqZEoIXrZXCYXkxk0D
lUV5Mp0OkvJu1ceC8nOvwTanOIlIk8kakWeAXuJ2gKMaNJgaetcL+vqZifQKRt0RcU5z0UHnhDT2
9ZYR1hioQjw6WsyfVNUitBmIXz9V+G7hzUosOUVJtMe4/FieSNVVUFgEjXeddoXI+W38PWhIvM0V
+NgewV3Pza9eb4obQzEGKuzbmI5XnY4Jt5EB7uPEpb/KjkqHG+B5eEHPWzqKbya144eymgAiCDVg
DgZG33wiIvIrP+I7VBFHw9+JBvTsaquRzvPT0V4yYTiCj2R0KQyEwRV9j9crJwVUx5568rLkKSCn
s5MSeZzZZwJrT+/17Kmnvw1AT4A3Ry8fP6Mcjdv1fkqXMWYYNqPXt1UluJQFyIXbt064aCW2fOhE
rTNipCnP7gqZ339K6mLyba36mX0E86eCgxgRKTRP+2pVXdTTPPSqb8BrzFnWj1y1BkAsw0i4rVQl
1U3yq95/3hFYN6UVb1mnTSmy920fHjYk52FsyeA1k7GNx0jNVI5g2JpDKj8i1wBqpNfQNjGJ1JBC
awVLgMAmS4VAcNiunaCyry8nq/3xUZQOrRmoPYlluRMbyne96j1KrkLtwOBEJv4gEIOckcTe2l2A
yEZ1PmPxlo0+WJz9Z0xHynGL3SH96eB5+sFQO8YxsV5kqq/W10tO3LLkKqbiJ6EaWL5++xRT4/kB
6FskX5bT/mgfb1gn3+nkdGaql43EV490NqWiKmUUljTi6jXGEdJwZOt1Fu6UZcBFSG+NJ+w8GoP3
jHkcoBXrXOeDXfD6AVuVkAlqfrFZdKg4ocMmlv30MvNpLG0taY985451Qb8IEJXEd/t5fB6Q2kU1
vXvdVrQN1MSljES9pBxQHKkYI4wipZBTFjBQPEUZlzCiHKb88a2fJfFUM5wPuJ+qRVr4gZxrwIo/
KvpjdRJ9e/xtHAyIObMMzEQWhC+G7Jf2w12ALLWOckJr6n+CEghGM2PNFHo6X7VSfDFeUjw68IVg
Y87TJWd89toJxLTLbbXZtAjFkwfIZmSmMP/sVSbfaNIJXBYcjBw1S+hp1qiNkhEzb10viIylZrA4
h4v8bKFCXUPDU137AjILqU/o5YIV9zrB3T3G+5aReIufsIFF9CyHWrrV8gFZSVXHCsNYb1dx35lP
lf9SuHaTTxlbYm1O6FUdVVfwVBG3vDQ6e5/eYZpwaLcMQnHxcxeAqnGJuZlDyqWmvvd0dz/SGdJu
TYN0yfZJmQ2nD9gVjBk9oz0/fEuPs9a3XhQbP7WNuwlAAmTFeMAo9/PtauPjmQOOmQRoN7tHeYav
sWkKJuVWcyJpQ87bJcUIaHWwBGO/j0/C1sZyqMy6stJ2PKZqZ7j0vXIQMpPy2fDpQC1OZPJuhepj
d84kJ4K2P0lDx+x89mam+BbYU2DOZeBBSBlB8zWC3Uj2SJLrxp0ZnUhpVCsG923mZAfQOBTbMXo4
g0eihXHed4uvcOxMR+KV0o/QsM+tv8SlEDppGPzswP63YOJTV2YLoXWrB9104LWy0KOJOYgvPBSr
+/J0uETRxiYMKW4UbplZU6YgYawxfBqQV15dChPGQ6eGE9HPvzrFt75r5ygbdbHg8sA1JiYenAgC
idz2XgLBqBgrrRQTTaUpIycjHPZ/df2avP6F3Aiqo6fupw8pV8KXT36cm2l3YdhQXTkypvyv9WBu
lgK/n0MrayczDxVMCTu0BazQ+qY/NAXxM+7fE412VyNUolG36FM8ZiQDZolDS4BhyWk947M4wJ2x
IFq6pKNBBDG7Xh/JG8cYgdTxH2dFAtjHyh/o0cIJd5zwG3owuAAk9njztszr7DDlcaea20e1CFZp
+T1AWVPtl9sI6pGdhbkUx08U0nTRAopF8HFDDM9BCpuafTjEFN3i9ejR7jI+iZucoeG8ev6hM3WS
mmW+D2Xf0MvXMGlRclWRc2X5j7kqg9kW6JHLB3Isd7/xuuqi63lWuul806/Jd/fQ+V6GfVIeLLaY
wl6or9MZuXiH2vHzX2tliKGU++6n0pwRLisxUbhlmXSZ6RqDkRSlIjGUPaf4EiGqgqp6ErvILM/2
dd2odmEBca7y1YjFoNi+sKlVcT86feLNbsWmKI0eDpeqvst5ZWlCaVzWV+vZW/jxSJOTULXfbzOV
SddmfgGWi8K1SzkPjcCf6hJ+XHlABC+vP4i1Mhbe8yc9cvh9/EDbYd2i9DbkXy1GgASvOg6M57QP
A1inUMh3Ph/RsMtkqa0pI5gtTVn/Fjl1anQ4sH3+GhruOWb+r47wpzqiBsr9OamYgqVxLOgzp/RQ
Wbc/y8NUo48ZDuWExocsIoIYlEUrRxRRZ2LMKRrKSMfvk8wtf3TVsk176r0InFcN3eh5DoN7mhGU
MwJGF2KjyIJTiu8sM0bF7aTVc8/jpN02s5BLhbYumJoWxgew8kLdr7UIt7E8kLDWF/0SQWsa8tI9
H02djXxnNDAf9Ed7LPv9kr3DC4nXNnib9BrSKjD4LXFlFqhM7BKQdaIU3JQVwkj5IKuWUlyoAIUO
eefuk6F5i2Cf6WY4ZxpffVFYg+clk9hSIjXf/6zuPSITB6CRlJHjMWyH+1GTe3MYltVLao91c6a/
WqBwVaanBtME8tPscEj9oh6UegIm8lFJGzf1ZmayMlDY+fm3ltsl6YEOkjrStycL4CDMh4NQJrvG
rSs6CP6AAYOVll8+s+oXV0mX2HM5LEyj0UNg1JuZzXbtjiR1BgGxcUy/1RgQw6U7MFTUvuIWt2yU
j6UWuXuiZpDu4ZXoRBrt/ZkP8wSb5bE3KD95BhyI84M6tPhZT4WKoU5gFC9nA7Rh/lCkjrqZfgIz
09pa2bYkDdsqQtLDOxwHHR8u+4zw2H/JA2ku00AW5QmG4Njnv5JPS/172igQLcsRN7qmDDTqA+Jz
UXGjR9T/5akb4pSGViwC5RiJCc7ssnBDko96lmylVim9o7Srn16CCm6H1F4YUzQnbsa16YpV5LyK
8pTUbM89ydISmtKfB/S1JvErs1nOvreeNwlTGNhUXjUI1eaAWz9A6ttE8AJM2HJ9H65XwTKfUUuY
zASBR76RI1hHY+nOMQlnP4zLSMlUP5e3azMqT/vJL0CeGAflN3pAIpFpiKJ9SKbb5frKthjZJn2H
hZC0ZRtWMXSUhMwaXE2ryi/vLUcjS25wUxzZC8GxEA1wkteSwo/O29YiV5yuFTJ+U+Di51PX5Mjr
Y+4EYYYe3hHsoftxrrMkydOCRFjDaDlC75ecHB/E8vPE1lYlNprp/fhVF7uf7GQ5KkzacjDS49bY
QdpeZ09Ax9W3oIS8r6ttkXt2sNtE3WaP/59gB27d+ngjtjHO2Fzry7Le6JNOCySytsZAIHJPemCg
XrHhg3JeAeXUHXKoD/JhGzsTa9qNUb8Gx4DUYiZ3srs91PnNiD3Srv+98PrwDwc2FomZhg3OYxiH
qRvyklMGT8Do8e/LE1RqoMjQO8zvlQSeotxxr0PLnmgPMe4fMALFCFjs28a7UN5ACHuVjUaTNGO5
30P4nMKaw240BBJhTJG7nCpNy4ntVTEWKvf1lkiEN7VnBKFRpw53LMoA9SMwxu001ZZFbYXPhPE0
tuExbgoXvgjbkp6hL942dHizB7GbHRH5z+zG0Jl6WAlz0XgiJsTMLu7k7c4pZyKyATeZUriiCKOn
Vk6hbzD8kCdBXQ/Y5zcX7LINOJSV7ucKE2vi041qievgnDX9ilmOXyoJ+ZzXuDplF08FceHaZrEX
szt8lyA69q1+0R4SyIl8uawjTgHpPKJaSm9+YOdU8/04dMdsJq4qdf6wIlVo0m3OzaPU12w7Ixp3
BbcGbJOc2FiHwUZgcwVkfEJd3or9zjdUbd/pzBgr53g3tfJJqCXDqYshLXXUIzL8XwLFBf4sYjhB
OgL4oOE/0PqgcTQVwxJd548288qtKCxFmoBeBRNd46TotvFaDiI0swLVWomuWW/eB5uVc6BaJFr7
iOadXVaVn+n1mJsWrIjmkqNtcdNKecwge9Q4fjLjxi5hc1ebkrENnTd5KS2Nd9o4Un5C0LKTx4vc
N8AEMXgPsNXQ/weKrFtHCCFIWoFiauORojVdCGfUa693q/nUL18E+th+AkugcPW0gq9OjOear3gM
I+hMZ6E80V1E0qoE54uubd4M38kiHEDbMccGUiRI4xvwjdv8eohiuGqqdiHzB5Vol6UGSXCfKTq2
zmkhUFw0lcnJGcqiE0qlb+ehQ8g+c/6B+VvTFuqu6Xzl1Jh04buj+JoqinBD53f46dWGcGKrtshl
9B4iVSoTihRmvdFWKiWbjYOVG6MYp1eklm1LCYyNa8SmCHyU8lwrmT9Ql3lylPlst7EAJht0pk8G
6CH6gfE+B9fF+efrbBs643RWG3cK8IlJczaMYaKA5IkV8WGBFboB6ay7dsFglhHFnBe+9DfmTXcZ
ONtIb5yCZF6+MncIjShPo2dLXI4mtA/oJ0mddP+199QfX9CawNMComLRWQtgTH4KiChddL908GyJ
9bmSNChBPn/791g8njcHcPSKEoJOQPty35j7Yh4aAtFFQNjU0d9MLD2tKHa8b1pTo/nFCoqmM+eU
bww9BgdmZfOB7zTZfUFWW0O9IS2J5t1LLQatgj7R42GSi35HalCK2OFZo5iJdN1IMhKbX06JqHSu
6AOAuurk1na0HMrYsMDq954ojgy8dbbKURgzCE6qSBUEPwajxEW7n/3z7tI6kmOby3YZHesjKg2E
SK2PzbsSNdtnAeAvCndbj1T/Qz0MxLf/6v0Bifa9L9gufVEtKflpo6tBTYMFsmqMsvf/ZGzeLJK4
Q/Uh0XWhYHKj+iuSUR6sib48vk56fGOp9zftXy7wldSugVVVnGqhwNgNIPuzZcmipRGaTLUZzEb4
MG/ZQHG7fDNEyGacODGZIeWaEoFdcCbnLXmEbLjZCdkPf7ILJR4HpTyAbjEw36RJDUC8W3w4CxUB
Af3IxTU1hmU1PSyPwH6tsR/sMF+bzh/OqGl991XNx+r6XHNgJwM4DbB9mUKvPe51BfoNgnxPu7pq
0iSY1+gF+Phvwvj1O+PyWIXGwL+9oTBPdMybeXyxNPQAaQnkJU/WZWn+k13mYcfldugSsZmXeVPy
vRETQcSNobAIh0uhmbBY1kC9zHfnmfHr+1gHr0QeEKwnw1U+itlcX1tBCMhgCOHOZz8eJjih2c7z
6cjeZN0xCshX2r119DBxOpVjokInGTglZDzIxOGRhMh8C85CFZeJhZXbcTkuDEVtB/QdTnP7uafu
1/Lx70gp4r7RFwkMbnvAP+3Zi1Rrg57IpTu1CLelFYOtbzEgKFZDVEG/5b9uxBqT9lHK7yTQTUOQ
tvFySx4Ftg7KnpJOd9MG4VlSUZmFjBAtbTxAw1ZH2a5rDmLFzD2PKGZGRY63DXbEWGPv9kPDXD47
dsp0Ftz+Xapt9goFDE1sndh6GQ4dAgetxa0QMDoSLjUB2PiztNaEPHMYUIch6UrhdG8VEM2NQ5qg
7zpPAjL1XrHeMMZfyRiFDUFEOFof8OEh1WTw8ujLuaRXHju//pnYdom2jrEqb5C+No1vOkEqUQfz
Dd6JES56OK8nqyEZKayIagEini7vw4cE4Tt2dWREjvEvxzO1RO7dmqrJqJE+Q2wvp/VWaNwL4UPd
pxLn0mtuuRjx18C+Z/es7424+nfATZoZZX4b9vPV9ODlY0CE43HtT4mHj8oRpxfgFp6BwaMGya9z
zUVpVWHcKq0E/1eXlvKamFLjMtkMhTNtjE6brjVnTyiWyz593pn1coek9Ynp19noRz40gGSjdtnt
zM+7scvlmX35fVJyt6UPmSiefNptmgB7pkuiIMqvmPoS3kYVzIbssOYujGzPhF1r6dk64uWHzWXf
2b630SSvuXihn+Q6OQZWu+EtQ0XUCZLbwc0sob2+RRWdenTuWosEk2w5OiWQafA6W8P54ZBNSjd4
9lAkD1XWGWWjx0ld3JqoyJ5lLsegfbj7OU1oIg1x0hffFapDWfMXU/4HXkG3UhPwEzEqRiU3MmLD
q/zy0Oq8lHvWQlAQ1H/Mpfd4xnAarfl+JoH0no3fGnKsP8eq97cp9gESN/CO3AgbEFigjboPidyA
wNBGmGHE+UcxYMbJa/HaeLgfCU1lWP+vRR8WVcIj3EcjER2caKhYgdaihgPQr6ZTwakCW1Pdgt3i
AJv366COY/aQts0uFbXPAs9MUgDQ+rt4OulJKlkfGb8CrJiIAtyjigjIxi74VMZGsixcmQh4pVCI
3VyOVWqOK/YT6sZRwPukKGUFBvPSEe3aHqgItvdxUhTtZWoDUQGeS0kZI4ibcme0WkLbGrW6RYn7
drD9j3l73pAuH1A8EN1yCfM8RsZUec0WY/phhpmhpF91v7GtYc2HW2W3MZK9Oa5FyMf9bvJwnkPR
ZFfidn1EKczt8T7/t4EGlouLuWwOzj/OC+8hHsVeSciw1X9KGazOXUwPJBnTzA3hwwPdpne9L3KF
ryJSjkHOPqMuy0L5iNUXdXznKe1GZHxKWL8ZBHLvjSgeR6lzpAhdlmeqJ40I/rSQUok+U8SHz7XP
qZb/5O5CFhMp0TE8KvnNeJj9FxCZD2ikkVA5+L50kIGkEjHYtcXmuovUgqI6+FI1KXnXNHQ3XD2U
Ml1g52LpnYgnk9rcDthM2z/NYJZhROlmMpD34Kj3L1e8RA7jsOI4EV3sHycbZHE23QA3wJzkarTp
ORZOT/eszKqnRz+iFmb1MrIa0AesbHT8P9GvVyGtYAMVwjfSWzw39qPBNWyQsooslb5uGwrhix9g
8DLLlhtP5Lo+rAAqSrVsGRweP3zt9ok41CdHqaNun9sUw4iVo1UFk63bD7arSbV5Kn6HRf7HMPVo
UGXylDcX9sTMa3yMeSEMJjCoOgM4sy7fBucSfFQcKGkiBO72kD/twqhKZ1nTO5SnAWjYs8FNk9pr
dgUaVddRBNCyDNZgKBgodHtW2FOvW1gZ51Iu1c1d3NEq6vXgOs7OLUXWRC8PsUiSeSS+RIgMrifg
XEUE/4h79Z7r+TYNjQtcwwFaljdWPAn+lAgiFbhG+U2ILzX0NiXg5OUPTyH2offa3EBpQsO5QuS5
J+278DHTju6q6ePq4NhoEQyGtIpo5FMXfIgBipATNwkkG7ljjQRS8d5QmR0nar8QGBTOSrp9Agy1
YGVhHLhXkec3YseSqnpUMYSQaosrq3IVcQx7DWO0PGkJoAfRAMsMbWKJIDwUpu+8ef7YMsxxnHtk
hSGv2wlf7x5moAo+RVkBOEcIBbBxNCFWXAFJLDOimsk45060GQJHo6oUxDneJb83kr+fqbna+MXV
IeDTflfiogYLma1LIKO/KZAX4+rWuDQWoShvp7SvY8ABxOKchQDzWoROcPX/6xLfRVsrY556pCF+
Is2iIyuOPPT7l0Bt8tB/7WMlx0blYtQyiXB01pWqr/tHplzJ63rQrFr6EX6u3T7dPf/15runOYZB
10xabmxdxmX9HxBPlKOhAmUvLQeN417E12CT3oDN/QOxVD+8miFYmnlq9IEt6Yx3Sae53EF4sTwC
dDHZlX4B1nqr66vVaqROyzyDGbHmu5r774kTWPRUZ9rcKGkftksxQ9Hy+Vs0UeZQWTEq++qfLCmb
rH+QtaMfuSU952qq0bc5A831Wv762BUls9TPwALl5rDJBEfMdQ8ws9uDJo3MpXSLRCWQd39Kg6dO
688YAzvbtvEQau7sB+NxWgzxQ2YVNjH+DjAyT1uwITXFMzqgR6W5TUBEixgrD7hNvDK9OVICMAV2
2SnHCxYnUC4QjbDZLiX3wrzOMo8fccpmzNzj0PgcLsDJvckSWVFC6ZYnksNVyozK0LXNokgScLrs
ipTlTmKhPDxJ0kuCmgH4buxYZYFzPN9YHQGMueQJ4ouoKpaCaFzYgLRSSPnlqMVPAzKCpTGCuYP8
fE0HLhadEb2sebB2Y+CX3hM3to6ux/QhX2aqwD8kfvBphIT43P9hVuTOiLTA6aZgmL/K4MhryCWB
yAWKFec1Qn25zpm6imKhYFBHaQ4OVp0yuJQAA6I799aHkjfeSKkdfTcVysiKRaJYFFysaEdvYCCq
Ay7PX8jemQh2LFyPUYpGxf49urLpucJKyFth4CFDgD2WLSEc1VoaCbj1Sm7JfiRBZ68rUyMOLY6w
ueXZExRecYCn7y0TNwdpRoqAsyRxi/O/HDFRx+1VYm1G42Q7KnnVMHtQKcHIzG/Yu09EmGLc1W8p
jYowzWh9Tx4m4Gdcw0ifISovkrBJ2XL3C3cBHdrhxRcGsnLqjEdWKdxYRC3p08p3peKv4BuYhGxw
U4pTPO/rpILn0UAs9Ll1r/HCsRdEEfQjwoCXxJirldH6cBINWTlZ86GfGGPDE1jggRWNtIQuxA+u
+m5zdUxIAK7GuKouDlMKEzJ2nmpG4Bfj2hwSo6++g4DmPEQj3jitQy+UJ/EIaLF4u6n4MQF0JUjR
nPxuvRc+7s3A8Lhv5nLbii/OJey9KVRg2DaZzYMM8oxcyzEwL0WOtCFIRgttq74z42PpjyS55y9b
sOZBVh/Sxv8epqQFz2jybiCCjPdLOoiEEXCYh8sTQ9qagpmEJAZp9UyPYPFeJZEPvYKLsIiXG97V
yP3BcBLkfkRKBDdvt4g0fH+LnI+UbSk+0Ai1FxpyI1q0BrxCURTzVlwBgMN1IopWIQmF6Ah5XMUb
Zljzt5sVrq9iwp8lVv4l8xQSzhqhXaxiXr6gWn3C4Fy4wRX8mesL7BQ/bOl1DaW/NKif+h3UwIzq
Ar14dGtui43+sMPa8CTWESpOiYzFjRW6J9zh1J15spVrUAQTXZwpTL9uHULYQt4jmeSbaOqc7Qdz
dcaQo3RGmYF+6qbTf8jXn9hcOY0C5rYPgfZowFCRml5zkBhtZbo0Mlq1GgyebmwwnRd/p5m4hrSf
CUHGikpabQQvbWCoDJ7yd7cj7R4dvBZ+9VsGSxs70uhvmf2bI1OsdIL1DNOJNA2Q8vDkZcR6+Eha
iYtAI+hndffAIDgOMMU4GfkQzLMnF0BK1EBqv+9bkTH1OEiRocq7zcUdM1NcTiNlFCszOHk45hv4
ck7ldRTqDUuVDEWJJGzjnpyo6Zs2U3AJJRYPjCxSz2kAU0GNGU0Qt8fKg9U7DxYEC98YCW/4xQdR
jZED6bz283cHoNV8MswjqZ9OJsIp0aY4dB1rG7JjVO1++beZkg6NgeRWby5x2QA9drcRA8D+YhET
4SUfVbjur+cse2cfH9oLbP6+QedBguf/XOIfxYjYM5LoK1A+JIulpWE2F9rKEO0/T1iHZzAlEiTL
duJCRPd2n6TKaqRX0GEn4aaWUODC2kOo4e3nMDC/WV671eFMNMIj2MYuych8fXGV3K1QY66juD0D
+Wis0GQblLdrivKPr2+mcuI0gjZdU7QF4+MJghWAxU3pfWBQDPcQyDvfmjLeWB40nCdmuYDoHhVC
o3TLK+8VUnb5Ck2gXs4vH3d54/j1r7m12bYOOFMmC7JBN5J0rb80kzfjU7hZVIjSDEfgU5tlYXwz
ym/V1FbuKnxzHC8lY4sJXY8KhiSk+EOEIwUrwdBo1IaRuDhIxdQc6+OM25uMRMAeBdN5e/8UDato
ucFHZH8UyZ6yQc0tRlYXLAi9fzKqe59e25Ixrx1sixdcpMDVXjKAkqV20QGw9nMANPB6RTIbBsrE
db9r2mQBJMCw1Ky/GdNLzoW5HkO946+eSgrKBtK5N83URaQ0npz9VATaOImV4WQq0A5KSaSLruyg
X9lhIk+gSvlGz1QQGEvrs2xq3LIv3Gu3N3lcebqtg+DAR1fdVtPeutOd3A8k7+4z50V/XyUba6Cw
oo+OzRPkX9PdRin2fXyJRHRfNn2aRf1tn80mkTQWNRHAPmORxHJ2V7+MTi6nFAdKC9vbUcNpRjvr
DqhalXL1cqyrY0zlfAGn3K21hdewa7gUyQ1yDscjLm40KiTTI3wjP5ojZ1CaYr3mp1keNoM4roHh
MjiDuIotQAOQQ+FlKf9cNOdjoPEWoxgPQF5i/+Ht+8qQ0fXVmb+5drzc0T2uU9TyGYDV78xXWWgg
UKHy7HI/mqF7e+O4kWkSHt6yMLL1zUvqUw9tfvPutrHJIZK3L7vTgGXqy0Dg2xl6syR0lwx675hW
MFCii3ODDrmtRvko7ArkWzudajxTU6knPx2uAUr0nEXSXU5wqKQmUNpKrRY9Fap44g7LOMPKAbqr
jBaTteWG/CJnCKUw1UbpytKNAXgF/Ik3aM+IFx7MR8YTqbTKh1PEFReujBArVd+pmNeWvljkSZpt
iDcLDAnYV55xk8/IOZhnMMvvskpN7JIDDI7aYhzZzE5PahNGa76Wkmcc491mhHUuzGVlr8WDf6kk
vM1D+MBLLH9/XSr5t7LByQjuyrrpW01jQexk/Tu255auWwACblVu9tUr4ebnQaAZPjlXq1zeDlBH
Awuz/SfkcV+r70Ttj5EwL7TFmqlEHhT92qJRBSxiamYRCBlxoIY7XmtLgc6gPsP5c0gykhsRu8JE
gd+SOfZDC808K8Re8qK5YdggCrEDLA53xEZ9Y9Q7DTdwoD6trQ9BOXkusj8xLbx5cR5ItYtVaRSe
O2fQpOtj5u5AwL4S7+imXyP8s274E/eb0ctI1DHp5g7J+sUQ0TVmK45RaHnxetXI5cDw4QPW88y2
oQeQeH2kJZCJ180mPHCcqnJxwFTgzQnXq4fNT8W/12KqGOXE3k+uiRtT4eiZrPFhOMAcIAwEQq0Y
j81WXQMmG9sCEojIWsgd7Puawr0+RJ8qUgI0zDguyXGRArZbBcorw0FyNnMpqnfnLynWpy2MboIz
hHNFvV6L7yQfJJpHAn++DRY0dECJ4/YxJnnWL8zoJpPiUJIDrWu2TN4DpkL19qQSWoUbOaA5Xc/P
fHNnF5y2ZNGzmygCNGwhmpdfgYWuuuPwzPEJrS9YovNtmlWWUhi2AyA9q+dh72j0UbVFYt9nnIeQ
PiM+J1ZbqRzhRDzlatJpMgsrOBXbWmDf4m7lyvGKO2xPiSXjGNoz1M38ad2qCl7l0kSmFr+m7vsu
poqvFTfYvUeUJK/62lx1+xEQ7Wngn1rKzMraT8BlnJUF8w+cVvsMsD57Hcp3oi+IePjTZYWV4kQn
V4rabUZQimOwG7C322+KlzYOBF03zkuLwJzqT7sAWl/anibtcsRwqpF6+bGHxNS2DkSAPEtRdlBf
lGgOoFNBQxIgXUQjX5ZOtqO/uXzdattqmvqjMt01+xSLH8NGKhn0JMhENnTKkmFYRjpsMwDQ1NH+
NShTeN6rt0s3mpcVEYQV9uBVW9/wgthf1ICMS3tEJK/QjjvMxXMPKskXNdbfmpAe06huFXtYaA0j
KS/p1l3skEB1pbk6hJOIKfDOKqFbEfeHihREbJJs8ds3kjSyRvGBbTMyGHeS+UoU33dVs43Vn+P+
YhM6q3/7wSVx+/63YkJz4UB+ANWwSuRts411sCN83YvpLSYIIuH1f0ueZpPndu//iQ++Xf6ZqbIJ
JsvRrWr5yLcOti6cYi2rbiND7Js98+P2An3jlU3MXOk404R9mTJolpQmGrvaPMGvmvPln1buPIm7
GeX5LQhc3+K2//jE1EhJUrtAuyyFZFIFhltPMoSxneHGFKPNujVRNh4fpR/fygnkh9cQIeoqUM42
iqmH9/Z/2uDhvvExPcs7Ybesi+z/eIDlCfMrrNbRTyY+mUhDyCnG8rUR5AqbcMw/teFpb4SfQkG+
pTRHInhXOPOpetQ3uzwbiAE/Sg0bRamMwq0+ImpzLa3KrJK3c52MHqIo7uv3vr8zYVHcaMObpN3x
OZXrlT4mwAV+JXjC1ptDqIu69B2fG/3cF8nK0lPDym9SgmPOKzTGUL+gCGh4TSSJrWLMqGInXSmb
DBAsnyeEamavfqDzcCL2nPeVtIN7x537bMbSriwGaFu8tFQremy80cc5/dSn0N9B8Pek8xGbs5V3
4EvEjTz2fSxeyabyExwxye3LY/XvGCEEkqM5wpMAL2OmxCfqcXPkUrdcV/qg1RUDBi72W7tv9wyX
upEaoDmv9leeh7K/NTh47QjYKfsvZDNQMVbU/EXgE+c8SW0exrvcfnEz44/l406Kd/3KPnuZNtgD
7sqUuMBEC0PnuzQox2F2t2gjx7XALGKle8YE/HiVHYLrzp+kbWyiCY9stgniqnhN80QmyhW546dt
4TE7qdLDov9uTRaPjhW7T18MzW97i4nSfzMzk9Joc6Hdq0we5odp1pLU3ONhJGT47zn4UFmjC5wt
sV61ULBCw2/Wt9JnjRmiv8OB+CeDR+PEjGA9JwZ40fYAFBjERN1wJNnlBykeaCxlCm9azKMNYhom
FQyUJ4RcUZskxG/L5HrB0o25iZkOXbfnevpx9mpTEZi+TUHZlwZBnk1FJ52VNOzLtzRxYMP2HUZS
UdVwmfpPUxKvek/Qp7/cq4wvkRqQLIaNIkme+VOHBjczjWyqv7kh64YLwuUZEZH04v1Uhvxd8T9V
O1+saOlr/XyZLjwPxOx3V/FGJ5v1wIk9RByqtx8xQdNN7JPSvIGgxmKCoNj/B8PXhRvmq8PfJ03D
+Ake5i50zqZewh/esC8WSnei/Fg4lr6ZB6wE9lLDKfdW/JrjgzgOxQngS7hGS2A2govgSyrfbLrc
OOCc029Ue6R9GEhvxXXuMx0mKU8npMC5nY3hp5r8BRPkJE3n7qP6JV4XtIBq/3BCWZmhjZ1cQAbs
oxcwDggJr9uWWlv4PFSkPm/AqaGmZGWCf5AG9By4Gyr/BH+A5fAWfsB8j/j4/BYKzmIq+EypDVt/
ntGDm8cE/qauvjZg1nHp0QxRnrxXQOLpfKQb0ev+udvxhtOycnQsNYdP0O0U7RWzxDP/wVTGwdi8
cMhjvkzdy4Hts06R8Li+abkYr2xa0inqKm0GsbsW5c0mdX3fjSKhjEUMe0UYw8s3EwrpPyRlm7+6
tkYDYFSmNMDgnUNQ11kDxr5v0FXLy0ccG0/xRmyg5gqzoht1y8i8+5WK0Jw+xd13S85JUtlm1gdX
EEAZ8Ez7sXDXdhhmeFg/JcmGPbrXfQgEzANnu6n0S0ZGIOFizGhwxksR/gTjSiUHSwg9hnfLIcm9
HzaFprBBdOWEotJKhW4r6VNeLyb9/D1M4wu9OTc8paijxYiigZPoSswYZMBMW0GKNGVpO1uYijG+
loRP8KgkfoNVGlWGlm/A4bm5DMGIz1FXcr6nQ/YN+3iW7C5UsJD1qyx48ptjtw8l1I5EsyO+ZteR
GRBrBS20TJZw06IXVML436ea+Y3j1qhyt/aopv1FSTq8vhnPzve4HnGy6KtPaRZ3qyu+J9yhrjiK
n6gaINit1eYO1gr1bUO8Pf7Tf1RPksPWoCbsHPp9KvM1sdLpHXfYkuiCWnCj3N8HwQuVplt64omA
1jbIJolY4xlYjTelmK8lU7kMV4D4o8ZCZC2Kw5JDWtj90x3iOmfPMz9kXVPbmNUIsTBf4iAdrjry
7I8hGFlhrbaYbUXi01DEeANuT7vTvbvHXySWLrGIEFd970Z/+qH5JxOOZ+xA9BmM2n0Rcstx9TCf
xZw7h0Wb3TE8jkJ5kL4OOGvBeFLQPg5C2H04Vy2ygpOGexumvSNONtwBygZHnGeHX+hW6BtG5yU5
Pbe0sHvHi7knMNke+cIh6G5RHktYcOrchYQeVgPL7FlMycKkTgbH/B7cO8zOUxuWt9yiizVUC5kT
yLEz/+5JBnpigMBjen56HNZAGAnPKTBV3UkGpg4+ioMLaQJWGo85B9EEwARLTaEMQR1kxv2CMuNo
n16kVOCyVpu+L4JVGMSDHf26YTVW79IgdAaMEqTjrVseBU69Y0ioy67CYpkKF88pFiCK96Uvxb7Z
06Uu1fhFhCpGP4HsX3TfKkMgqjrkje3siVzImz+48ls4Vb6mgLpJH/kWDKkMZ7kwOePXqkymqMmS
APjS461FrkqjI6O+ebd0nNROCOuZJclTYroej+VLqxGzP/nawpUIymitgXngByLnGHgK15oGqP/2
Okwso1HfDCK1XATkS4Egouuna9RmMxsgNcqU6mtf38YRP0CXdAkCAnNB3Alsbe0T58t086QL1m6V
rBhpvXgyGT2H9d6FF5ETNTxIdxnTZsMaiEY92twIDM5jIKg7ZZc5sJUEpxWhotBcXT6r693aQ1Ws
SAopvib5WmJ7SCkGIcLnIcEAofCT6mQEb8re9qklh+bO8Y58QNRpUxU8Zbo/W8k2wdQ7w793omz3
gc6QCbB9sgddTMs5RyYaWigfQYYXnKoTiIQVQWcoihUggbXEXJgTb8wDtQhgpHoCRMXfiKzEFW8f
s36CuF7Sz+1vVbuADezJ/R5OUhTYgAF3eFkRQSPSi5x2KxF4wphsc1XUkYHYntWhiURj3E3mAwao
KnZ0jEZRIbQ+XaDxscctt7VgWk/BZj+FE+cqSdmSZ8lnwTZlCPeL48Hf6pDefnhvDkadId6pY1J8
1Roecdp+2JpAk2jm2bTR5WdEAmWmO2BgRH/Sh485zXfk5xu1ngHjvJC0x5Ei0PnKYAYYFZGOmPNk
RA1kuL8DHjYm4pjm26q6LgL4BxAMAT1ovsK+DYtJ8mwxeBtC69HGSxahqVaJlh6txViuuqxQfceN
ffxT7dra5AOH5H5pwazG+mNTgL4JGgWuMURJ4kF1gxHjfbqJClGb/O3+DU/8PsSAizQEHzZcscFE
xGbFgSRW6IHaQOoTdSJ8uQPDENyntjLRUcO5eDff95snm8oUBOxKJTqbHXtOM3TCsDWQU4949U2H
W0IPvJvSHzcTyX9EjqczAeTLO9vEjZg/atSWCAPpwNqZn2z0qlg0v8OAQUWyNFB8xPKQzh2Na9Cs
3yp+5YfKNrs7Gb5D+D3pjH25Ze6TJC6+b0aVBrwMpRjdXR4+Ls0ZzVqNywwnK6DTu+sU/Zfc34EM
B+y0YYVyi26M+F5T/hXn3NcfR82LhmwEgo0fqBZHCu1DgkfTIsva5gtpsODl+Pma9j8EYByWamqf
H7gQQuvPZdH9BlmgOL2pZ975kk3oa4TnMfjAKJHqzMpkZFQigDajHOrloMVfSFmGyoB0OXiLNJRy
FjtWPqKhoP9hJgIaBXYeaji5g8wsbuhV/6gLi2XZ+9gVYc/TKqtCBW76TV84bgjJQjmDFyjzfkgB
3IKDjqqhHW7ATgOXWtszUCm/kgzO4tAo1zNpAvwt784dXTowLkXjP/GGMA8exa9G3OxfAo+TT6+H
7MBkqdPrC32NBc69Pwnv04Awt2zWTctZ7zKWIQh5r9sXI1katUX6vpVRFKQ2s8o2f8t1QpBaIAf7
MZS0y0xmUdu9VSpW7dZB7DgHehK6q2grBa3m07RAYc3Q8v/fQ5ToJJV94KQr2utzGzEgMZEYXxzQ
Jb/0AwlOQ9lKjehDWJXK22yO4Bi0CmH1YYqcciQJ4pbiMHFXvn/+jUKNNgk64ldEGr2pl2cEHp5w
fvi80fzXagD0/YVGvXbbhS3AuSiMSnqFw9rIbuCB42EhWPdOpCLbnphfaywHeeok23h6wr/ruS8F
OBNEiB8QHCmg1qVI5MjNxfsQ5wSdW3mNqVvjF3AdBD+X8nhkXcigOxXV99BERH3btqoiTdR2A7AP
nMcHTrXfeqPiWg9wTTMem7wOpxkl7kTNb5C0lez9Jfu34OFigoWO93iTPVmUOH1j1ybGT7bhu+DS
mOEWKQjBTeAKAItP7iYxY0o5NLGCocH6r2dbrss09u4DBKpF19mq48ltNwf6tC/GYBDZJZBgqkVZ
hY3hZOjR23KZtKh37GJzrhCJuaA2m6nKxNMmaQpYLWqYSz6WiQ+wntYQO6JIRE4U6FRrC+PHzym4
xK9uhCOkj8BPHYnN/IqNd4SXYnlPmiOvOTGz4nan93S+7qwpDYsunm/8m36gkqSFy6YnkLzYjhww
3UPOMs2Cwa0cdoh2apE7sX7yTvVwLqi7nrNrYoXyTrVNupam+NvOeBzbxpocTEv8H8PnUxpULpr5
vEguQ68kWjK2aaksubC8Mn14bWpb+6T31Rjuu0NDrH750HCuwNxuPIYFMgCob+EYrAc94eG0MsOb
q8pPh2RQoecyTBotqXXV9vjGaCiCS2GUxB+ysJ9mx5362xerXqFaXtjYCFbPh/eIqW1df07YDlof
uBp+zejZNcWfBtQx4/xyOkuLVv3hs7/pThkCJwtgp/4aimXSEqJuGb5SgqKsaED3nDFsleUbTfSV
U+6xXFW+62dkww0Wejvi5kFonWUIHr2M628u0zx0IMXve8iYaQSEl4kn2pofLzlXZr3tRc7jBmmx
bdRRb6acZDUbW5E9z/IMkiPKnbYR4L/5CwJrP/LfY1dz6TZvNad9WL165eFfXBXVzml3mJfMK1Lz
+wSNPJ6inXPv5v4Gj4SZaWyE7Xiv/j0oL2Oa8J9CvGNg2qF4dw9ywITP0yHFefetjy8zdxPBS7av
LmC1FUR59maLGWGmAVTyy3Lk4bCNjkAg70/lsPvWLZWmKDFQIY0NzwAKZxkP29Oo+eJDAEoaeZ+m
nWK/ruhOIRsn/II7feMxdIoIKHuj7eiym4m+6G1Q90IPJXHNh5e+ZNBhSWD/wHrYzBxQHkSG1gg5
dt7gV0NM148oSPW6E5pUnc7l3cD1dL3l5hN+kuBOMo5MIznAXWn+t5QZDCmlpUQQpxbqzpwAuGFU
B/k00G04GtJ7qcRVUnxAHLOvY49ZYttNVhEDIiOmfzd2duxKssKduEYg+fmouK/gaBCFUE7bEShU
HTyd+RO6dlbSi7rO6CZPaHYq+zsPrK7b+8RIpkE4i/6S9S4OSHdOPHMysRQoykTumnYB3++dMgJL
DkMecfaXQ7BDNgi8q6fAk59QmJbbF8nNLLrgwZOwG/Xi2dlm1reIC1U2JsMYYZkrCxg2Q3eRihLx
jh3SOLA6006jPtBnIq15IH6yVxUdTo2V9ZNJo45Zr/V6GD7OppuLnkUOdukM6SIm13Ln27kOklKw
OxlKq8fZ3CCvhZ0XV8qwZDXnSDeQWGjkqlQPT8O8z5ataWN4+uuQRuyNHZgND+HnTz2TgY4+5uvU
1p3haW8OW9gKeo3Lh21SV41ESP/v6MLYfb9r1CKt0V5K0Tn2yVb3e/RJkEPwVMrulvyPeI/y7JqN
O+gy6HLORsG9VtbxhGEdENmjqv9gRnKbTrFID6PX7jRWz/6dlpqaCr1oI/3keSTj9VWThUtc87EE
8yt2MRqYzJyPfLMEwdSW8ctTUAEzTzynzAShoF2yAqQ6sTdIDy3a16scjcGE0g8yTW7ZHy14Wqhn
DzILhZKDoQLADsEOljaXAHH8tZtaXv65HP/deNnKRNWlvUeu3kwkEsYSRgtRUOmcfTyh3JaByQ/4
dKf2X4U3Dm7PONcydtk5axbsc9H3A8P+GHxOnAVmzzM/8nSmHcS1h+ESp7K5cQb9YqZZyKc2rMLq
Phbl1wCA2QOKV16chT+s3MYkBkwJ3WyxZpobTw7fzoY5p+p9eKcrZX9xU4sV0ShyogeyAKO7rU+7
+FVMTZVMZvkjbqn/yHR+qq/XYZ7WESxsWlCvPjWTf/nbCzMyemBwoHfVgR5F8DzoziV076bfpTKk
tCraLKQCXihDGFM9H5K8QJ9cX5ojGh7mi96Ga1pPDA4uqzK6gqzGSphMp4ZL2xzuXwLRsRDkES1q
vrLBL68pdmCy/lMb3xuOaAVv0KbOgC4d7zEUTWVybmYcGzyqlKihvARquMpRmfuIQB1S2QOUsrHv
zFJ7pH/bNGeAk/uZKG50psFsd2IR3U4ZvplXoDS/QyRhi8ST/FaWnMXr02bBK8DANZJUl4fSEcZx
1+V2lWdv+E5HweVARThIhg3y6dESkPpA5ZtaSKEzwkdvMvq3bwngstIu6chMF043BblFylYLgrEM
pW0DKr5QRrwoorBuhTHG2o0rFpzmJ6MY+IbKIXdVppOJr0O0/Q7Pj3IzVJ5SqF13wxpiHQh58Fhr
lovgsqoqECxeuGkj4rODqW1gQc12sbY1kabIfx41OJMrNuhJNbEpx1My+fgRnWhVVvE41yN0lM1w
PXPJR+tvyskB24AvrMjMrbaYKVUxA7e6utyYO5Iz7rfR5xdmwUYsAJqm+ZcG3kAcmLa6opmLQYxK
cJ5748lU37F4byB5mQVELU5g1+18IkFnq24KuFKLPHxAucOtfcZ806X4MlaHt44p4olUh3yi/12w
LkrlGUQgvuOARaym0ssgPR5ehPIdRwbWIGe1kEHBlaIOyllyqPr6pk9qP/jrspup06VUN0UVs95Q
B9WbQR4Pa3UhUGCcwEvK0HDfK7tELILud28EWwYCYFPOIxXfaUP+eE0rYwRQic9AMWDG+2Kzk8sX
86ikpVruWPAQtDiWpvDyKosPzS72pHDrHDJZjuLKrDkac37i1+KnL8PAS27BOqwpildHVAErwnPB
GtpnKUjZv4FRaU69n72y+JE63LlmTX2+t/m4Auq3G2u3aEBNARGn0Hpr4n2HEUW5b1epzw2bH5RS
Th1KKbQei50pcavokch/sdxpYxHJ74TDpLyi8mDfaQ08z9+Aid9Jgx0KSTa+83R0eX9kSVdDo6qd
RCdDAcqYZkkMO3S5bpmWGh6sB8JO/A0z7POYpDzJooqQYR7yHl2HwlVMwQCa9Rc4aT1atWO8JioP
ETcyyVoyZjcekrY2kwJxqOeS5UNiZ2oScKJVSo1biT596zjv0T2M0KK72PVkKuVsrwx219DSG+zM
qLY+6j8piHf8JbF2MsqdlxEP46A74ldiXa4TrM87U3iJhuX6t4GiOTirnUecqvA7HUgmvJ/9apVH
xLA/JoX9YqmkJOsAmOpfrSl3zb79Fbn2gTpwK25BHEOnVHT/HUOtmeHnoAP4qemCAa3TX5XBQVJ2
0dl13gs/x/EficPswdt7oRgA3jcAfBDNPo4shUeQ9xNQcOnBe81BQPEp8Xhs+UEeodBnpg5Ufxf7
mn3EfSqrVioMeqWeqtjGAshHkCz7KUbzrVFbo/fGQDI+B0MCaTZOoOCV/4aihwFNPvgnb4gy4f4Y
z5OAdleZZZIvNF/nniSl+ySnnxMOeBBtWJc/uXY+qkaCGngWJWnOIqHzyptTQUCsYE0O+eI52CTG
0Im3GBag1Gagug7lmfM6yaGT4BKXgzlZrc9gscn8JTVcLZ3QfaMjpmBAKJlzPVTzBcRKdsZVxXNS
LvJSFQ2r3pklJyd/K6FVWWMpyJpQBTBlzDul3032+E83S/zTCGnCn3BjXjRDG0L2dWK6tdLFZtpd
xdNcdSolW3n44Ggzx93vrZ8TwWkeXOO2CeJbOFjdZRFXX+oo9rdb0vrLQrKDejnmEC8b+8L+Sauk
saU3WcNDILzGPPcppgOS3uo1xUemxj+icDn/KQoJb+VIJJoLSzH4J8o0gq84EwrGmpS8bqdejmXb
ciDWhtYDyi/ofeV6rITjFOM4/kS3I0PgiDXQ8FsjlrRpH005H4lFMGL1sAr2qmIWW9LfQ59gwh3T
aUleIA2POTIEUZUD1WawaTHeaMDV0+HQaFTRGi1b+A4BJeZ/1cqAgW9GrvvJVazEBfyCVZy4nxJy
n0lLIYH0EoER6UtZkT+JETDzIhpsfDAkgKuetATLp0A6Sy3xoJEA0lpXK4KubyHm68XTNU3n8CRL
WhIRGtGfT5J8RC58yEEGkmacbHKLRwYjisOjn3CYtnu8x5DSbzNfekZjd/Fwm0eAXJxkPgo1Rfip
j28bYUYYR0LQbm7/gmfsrNfvJ5DcTxtXnfjpvPyR5cD1K9WKg7oGSGNq4H1NgFe4hc4ZfVr/bXeC
YRVvo2ije1V7RSf2jAfncv1nZe14PoSKP4G/CFV2md2EOeDXpJtNMH4uKPMBcVteuc6rk4P26hzW
+/1aLae2ilkroKJ76KSaFXbfLo2D/tHBinY4w6qvpuu7L/xU+m0jWKw+92zjGF5jeaV2BeZBYJKO
aPjdaZDgOhguPku+CFkqD0NHHGseedsWVt8KvXi0mJ2/548hEJk1JZm3Owg/e0iitezRIdtCiMKX
lYfZHkQWCGEwpqbK0kJpo66wvolcVrGgx//sIM5nAr4wCNX5rtK/A/Ws2Zm0QQRDohOCFVggC+vZ
/cjjFIhupMVObhhb1ZAGvtFLLK1K8J679DdEceZaDokS0CKH0w+b2ql3kGurdszLR4oBq+/iWKD+
X7LP0P44o90hsuZFRpErr9NPXSR498QBc4R4NGARw+LUNAxSYlY7A5IkI0D2jhJ1aqOryPg+JN3v
YQ6sNwrahmTPcMV1Ae4EC762bLGt1voM/uExuBeOqLuiWn4m1wdVxW6eGimM2R2znLkpD6ONUmuQ
lml+UuCIGSGm4i7rQghgR3I3NRALf72tiy+9qGIPsC+N2gSMELxenzFMKWzpDWnk0IwbNq04yMrF
II8enQvQy/ucTqk8Z0SKTuEnDW+hOSgTs8vYU8gyAaqIRgNcNilY00WnPGm9ELZZA/Qt2ziaGFN2
nzvf9kCfeE7NuXRqC8OiLKKGESc9MBSyvnj/wZ5cxueBfuyrcyjkIoGo8/x7kNhf3NObVZ21ZQOp
RDjBU1DhF2oIivRUdCVUftGluh4FmSOK9jPuipxN0vyDswE5fkJCS+2y9HuQetWLvcJELibyWxUC
6GfXx9jvGp9hT433sPUWYxc5czkd0W8VJoOhJi2PAW/UHrKBRlLnH7j3PqqKOBp9/gS3x8hJWIV4
ifofmYc9BrFfYi6YlDMg8kpwIXLhGHawJchFNJGyeJM8QMrCu2MxwXG802eZosYG+q9z8SF2fcN3
zNZWy4iI7lLz47/R1FANTXxjThK2KcURL8VZP9N/ioICrdUWdNXyKFkG7BwR0DIk7SE+6+kRG73+
g8fxT4PJR7LdtdYREgcnU/+Ad927K6AXT6efSOzK7Svb9iHGHGfK2D4dw079F3wRTnADggt0keRi
rEfa0o5/Hnd8JcG+fDJbstvqHFnfrlASFejC3FccY+fnpvaA4dOZXAUGy67geVEL4VM/50kD3Yt5
R64s6USPh4FBFVcukt5Sonf/YtOSPymiojRIkM/pgsMxRVlXTHOx/L4NAQNmffRClFLXpVjDEMVJ
q5y4esWYDz5j2U6FEL81the6nwUFkvfsFc0YXZ++6QnV3isIo3EOejksgc06oBCt+5YSfXZH6vmZ
YsSkBhQ9jgvp3UDB1wTaV4tWC99uxnilDj7lYC6CNVa4u3TSU9EIFWMX1/1/kCFoa+nJACWqmqeL
HAQ1LNimIQzLfyyYXlIbIinzAKIfjfdNhooHrWYIaO7L+huxj1pajydG/pQDet645GqubSmFNcQC
d27fGxcQQfIno/Alw0Z6nmNOxygIWkKS0Njgs8pFtauI9VaYTqyviSHDVabOme/u2u2P26Mnk3n1
4OFnz+bc2Ml6M8tjnrrSBKDUnOu5HwdxLm+/WSWfL5FidNMLNR8LWm/5YV/Bi2XjHXDXoa3S9jas
im081zsBBoGufb0xRzgOLXWhnC9+1MuGZBwUi+h+0LWd0Qn/F/CkLl3drOkrYakWjChnfCEgQHwv
iObQ/eU5gWDWCIS3MbAFanrynwzRM7PFsKZ4HAanZLL3kgayA8c/uWBjdlTSVegzleGb7sVWzx7d
SqM+neGa0ak6J+B3duFwbjbHjJe5h2jcrg+OShLUTYJHScxp6THu6raq8p782oYOG677nJpUU90A
iBN7AyAhOVGnVnA5lBlT9PP5cNM9NTu98cpkOQ4WeAn7Dmc2UCR7Z8w2/5GOvJzPsnTGEx+LyKhf
1iKxsoqbVrpZmQGREgzdeROWJh4Ta2C8onRr6YZGPcgWKb0OQ2tfYvJjvnDD2O1fa7DVPi4gBXHi
WKt3VedDp3iTSF93hWASeOw+m2ZeR2wI4l67JX4ML8XZcJyy2n2pV+O86M2kRlrTxkrsfvtRH/yj
nSVcNhyX6MoUs9G209dZwHCdfrvpy9+YHSCGot3PtVKXM10HqF6XK80MbYN3Qu0/YBeTf6YCkDFr
2EinlR3C8rZXEzyJsJZYqaJ53vwBDHm6TnsjRcO9WfIYSxObJlxKcEVlgMymPjj32hjGJZNia4vI
pO3GKBL4IhSoEVZeBLNTX9J5/Oh2TC9HHQlX9OiofXyA4PLJEpRmH+eoJAlimRptwwZfD7YpjVs+
fLNYlbE+gv4gpRJGpTE45cZFpyWj9ESs3fVNrDvxrslEhNVuoFvloV7hoC6dl+qOMt8AHnWznYSg
uS42N0W8QOrDVmq9vbqZiT2E5vorrzLRU09vcXSgZvPJr1RnRzs59kmmE0I6Do8/ObEZR1FAykMx
O35iLpDyLzA/JTIkW77vqJtKaUAfPXYU1A4jjFayCY1NtzwmnyZn+WiioEMu5WmuRRDDfMa0cb9e
hQHj2aW79LyrSkTsbCE2ecVdp7i0hTT9sLLCDha/31nzw1lEZDoRLF1gJ6W5g2qes4//nvO7kWL+
KxNNZXR8m/GHRprzuP7YLMJFKpGVw4DLGT6/mEe9jeV3KGvBlFXauEr7jD72XO2JannH3VodQpWU
GKcHuDIIetzVcbdbAoIdW6TKzFBZSY0/flNvUfsLal3boAq7ZPn6CimC4IO8obrSzBi8i+9g6ruA
4M1GRgYWu09LmZOoqnrRZD5W0LnQCRV6XRNaAQB0N3/lIlwj/F7I+gAF5c5DuAMl++E+c46saSOL
tEaqWGuG4JQykUB4z8daRTfVYdeRgnqlCGmisk3Qc8b8euVwIAueuoi4JxQTG/yUjNuotCnkJnvl
xyGVZ1PlIJJ550RnIVZGR/VnnQeocWCrPXqiLF8dowAzsBJ6wNzT9+3qxrPai6HA4cmtN41126Nu
Ni3GG3guxm8zrQ4y6ONusG2iQ9cRo3rnuxXkkf80jTp2UWAN2RiXpUeAwyp1qdqz3AXNa/5zPG65
YZ8oL2DWLLzWL/xyfOqgLJI/6O0xDRkr+1zdgbcytgQCLYr6aRcBbAZT+lsrs5Xze1QrMfZEu1Uf
BYtm24uwzVScw+GcLofV9dRmfutppxW6mvWD0GmvqWpVEYKr2O623m1bDWukS3gaCNR/co7eoJ8N
KXFXbzY0QyGQDdUgD7HoIvDONG2eg+JLiDC8Oa0G85jcP9cVfuKJknl2HbqwGBlMYlwJDiqtuFCw
ndvMDnyQgZsg20J8QZeO34yZ+iQmM/ybU861h2ge3oUQtg7Hoc65Z1siAt+tvaOQsLokYD/dU4bo
/mvdhli8no4np3JTzN9FzcxxxmwVs60wAN+OMkliKHdVK5U86kyefGhbS8YyS/t3vxTzAhv11+uf
mR3hcLb9rbtGU2byZO2TaHnNILsmRSlYSZXinc9cKtedl+tpPAsumRX5TOeH7IThVSSjuze0kKtK
BRCI4W21YtKsbum9R2SQGAcFfGZ3VKaKMQqjGKMJ9e9gybU9/38KG6JBrU5wEzCEDUHqOEA0QPdL
T/kXLSacC265NPHj1iWOiki4IdEyQUd3DmeBoHXIwerp1bLLU9Kg6iMrK9GZahVyEMrIBFuAj/VG
cPRWxhv6j7kfYJxEVa7qejuZq0XQMhXuyFsSHta9C8Ijk7pEr+M+k4eKfqLJj/6Ha0nsnPn99t8Y
KBLHbGbDTxHBPwgG5J82AXYjAQs34L9Bgk1xtyS+1E+nfJlFOuttxIzXrDaVgYucOpXL1pP97CKm
+30m81dp/yRcIMc2qitq6EhtVu+5D6TSsBkcoblckPAGbiAnAuAtQaJAk43eW34l2cMxBTTsw93q
ojy2OSYKZZ7s0SthQbiPnv3TDMKClKwU8ycoAiC0TLPc1E7Pxgc+rj7EJO/fLAvRAhZwKhg9bKJZ
11kj8tr2u37DsrwGCPFoiKrpKO/bO2ZJnAipflh1Nmn+GIAcBcnehcmMUrqy87Uy1X7MyIRNtFH7
LmMbW6nJXrEpcJgU1azhX1IwbsTEN9kxnCMO71ecuUNQKKeUl9pAZKdp8rzUo76elSnSJ8X5irG5
ba3DN6YOcxt7rPkTPADUwOpbPgiRWgBC3qV0LR49Wpi1SSe6cmuPxU+oQ474rBEGC1kb1/ptqdwq
xxonFzDC/FXzWUu3Xi9h0y+7otZq9J75Pmt7RinO13YwX10Vff+h/UvdR6UhfW8IA6foDDhmFzcR
KRHqCqKBfsszkKKfamjRY9v0brRf5HSCqk7JTRzkMn5w2fSlbRFMQWz1ksOkR8BuIIR6DoyK9hIi
QxMWGWYZ+axl0cIx8cSEun//w5UTo7mHRSR+X7A0PJLu/di4HZYEg0ZDhWkoEvIvuZBA2Sgissa3
IDlGeF6xw0zwyE+ODNErTEus5H7DTWvegDmJI7ssZ54OxrtEDET9in5C/tHd26ZYG5YAnW6patfG
S37fIyBimVVUUkJISao3stfXogNPQ136aquvQf+eOEQTtxWU3wS5TqKiYQuoOWgt5kz95h4haKAU
1ylmpNlX9jJlEHEcq+TsQ+/ynOigZDJCJm2Bww2VDDcjSzrq3qWNXmMCDbPIWClxy7V7p3aY85tf
kBoJT0MY0pBWy8aILJqtgiUnou3pzQg+Myr7ywDAnDxPQ0UoKYqo6hnsIqXdO2+zcsE6OGQwgk1U
kmk6705gwoL9mPxeRDhzeQOEQ2iifJMuAadyNZ+v1zZL0qBmV103o4PYHQGstNM3ZIt5yy6Nsg+7
uT3Sl9bYTX9E+0DrBW/zxVO3cyGgpM38Wf1TqmaCAtE30EEW7z07Ya7hDifV/wR+JA28aA9Sd0L4
7YbqXNDZv3T9PUD9qC2G88okxO19lyPnt940sU/+zd4G7eSsdkmVQvLY77+mrYxDeMLPYMkmFYjY
xwVbNcTXzijKJWdnMLgEr9pc8BgganD6PIoK14OStm2JCrZZCeOZeJpchm0N6+ZIRXjcll42NbgS
7abub8sZE0FRHcAyFFHu6Kh67bXTFnbqTPxBtdt20WhT08MF7JZ1uk2xLVNlCWvghlGjon4gUTWY
xCGMjlK71l30u45tkLGTtKnKAwB0WMuvNc8NUcrKCv9p6G+ZS/jibC7JMgHrJ5dlnRhEYvVwsle3
sOm48dax9z37VCNzcjhj2NFBwmcFuS9F0o6fnyKE2CeZ8SEcXWucCp+/IMxKrHnS5v3GM60HOqkL
tf2ZyZ3R9b6K/bJpj9088KZocVWIpIDKhqiozjSlplFm3Z8jqqDiMXQcc4fsGaMdpvmMp2S1zME7
Op22/XFRfcqAcBBKQCJS3BhHvtl6+JVZDtsxZYFXILsAGcze4MeR+3X9KxxIs5aQbIofLF0zIyhW
F1zk26QrNCG2mHtZVbMHfvxCzTvboX3RF7+BLZ283t3iBmtF5YT82r0+BJAD3ULEqGm6TJ7+Fv1L
VAEYnTqw52F5CHW2MJKoCHgLMPy1PyYv0T4cTLZuWn0EogsDhELuV7O5vosN6nICGWVCVkXnuTqu
YP7kvTsqwmE0ZWSuN6efLK5xTzhcGWGIbf5IunAked3nCPAfEqu278mL90cjGF7HNch+J6Nd7Pnq
I8KjPchLKHdXDUNURQ6e1k3w40SjFJQqsYDPSd8PdLAYAXcCgSdfxSK8ZqBcTwlxW0LUVVHNowkp
qDgMuZtnqppxFoiJtjMev+oIKxMYAqTw8RPS4ShQyfA/M8jUYCyY7UcSMz/IvlLn9q+QVno2zQpn
D2El555sj9dx87v+vj4XxCIIgKvYNpsL7woYx6CnFC1b25E/l2Fs6pVgZMhRfQ6gdENhJFhNRh5y
C1eXL7rpMrJX8cJIwfGsBoaxfpGrPEKueCyHj1IW4Lh1tuZY7F2kBOggWXzJlmpLLo+P/yoPaeqL
m7dsPYSdKq6MzlUzlzyVs3FscdQ4VKWxEWwnQ+6SJO3Je4LBEk/l7Dbp+A67LhLBqeDEhGGuUS68
fZ5f1qL5LyfYCWDdo5ORg6Q5igNNvyYe5f76DlubU6hqeKuhs+wptOUUPkLsD2jA8EFhG1h2Z5gS
+89R6/XiAJmVCYqBO38aZAcAqYe/8obLdA9ngxV8ooaqRAw7TcnZ6n4PV3C7Gud5FhoSji9tV+Y1
gKTjipaVEf+4PSe1ajqXOXBOnB4I0SakQMj/g+bhUChI0FlIAl7hLGVHf1ArtTq494D9GJ8XS4UH
IkfOvR7XjqRfEeiQbe8Hyjs9LMhykH7C59L1++w7cPD5tE15VzXSltURaXQ2Lnuu4rZyUmhD18RS
UU0qgNGBBdUbq5x3jyyXP0tP3/4E/Be9T8EB3sDtPpWde/ADdKzwhnut6VEoPczhFWRfksQgF7bY
O5of9e+hjBl2xgzibPiHQAlFvBTd4UZ3wIxosnlVDaZFd60h/8I8a3aw0ufUxgf6S4lF1B7WcUM1
M44RJ2Tc7CGZlNiHMKH5YrDpD5s1RYSdipgdZHYiT8CXOBuvgwM3lEFB+2MT7YrmS1d/PCb9Rpab
4Lwkqm2ro4c4ePCm20tC0IjTYDwbq8tLcAo3vupkZAl1k5daWNFtU5nIf3Vjli5m4lrvN5HUt1wT
6r5QvVGptg42isEG41n94d1urdT2iuLwpfSEjHC7y+I29uixEXAenzsZknVQ69uuY57k4qO1Z1Gq
jpUkfP/VGMKGiLstcSlNVmfp2cBkSJsXKca+jBgAKKMd/pWjx5GGIciO1Z9+vrfnprdkKLpqMceQ
l2nEKc2r4nH7YeGQqXUU4Q9+hn8yEsLq769D6reBYGuOP/aOfYX8GmW6cyOVyirZXFdYHKm4OyXc
NFzlueNVkvqDVgjPpBDVoj1diEWcsC/yvkCSXYp2umYdI92zQgBu3TI5lIQfUqX/suhQkkyX96xw
RDMnFIOINZP1J2wyJOaoy7UxJYyZU2mCdrTf1AEpM319+ZqOPVIhiPtAtFXRZZoMC4gfAw7tHuWS
D8Qa3jFByV75QQdPZgrwOdn58Bj4n9chYa2fX0x8wWUAgdq8gjzQZjewG8PUAu7cyMze0lEAhubh
WhUN2ElL+aeonNvuxE/5C+jdtNYUbWQQ/wq0PEFjNmINkhtgMjjK6A7r51EES3it1CgouFbw8HzL
dfLUTeZgoRE2KNuO5WAI7D9/wJlnJEmDA5Pdi7P86rEFojvPhs5gO6TNlLWM+I877Y+xOqoOdnic
UmuWiUW8pbvJavW15YTeJZIm+85/T3mQRhruWbT1rpDFnPeuth+iWHYFI0rUNR1BPLypEGj33lN7
Ko24TOUFiLN2ZWXEgfNXqsPSzev6US15YpEXkpQReuUykIM4O8ISFLLOZBHWvYPY1faqSg9K6HaP
OGolF4b7+IFuuQPW9diblq02RhY8aaaP3PzeiW7tqDj9PPQE57TDKnGMI49C6LRvIry9s6TBQRhW
BoAwtBpH0UklUUCanOAjqCe4Llxbub88o8YRtYdpudvBUAeX0dnOBV4TQhibc7V936QJt62cNl/z
VLLfyryA/BZ7nGJd+mgKQgdFOx0niIIpjc73ZpKO3a20SZRx+lFPaFesucoX8fTkSSHlPpbr7unb
t2yV0AYQSH0CfPpEwbUvHiJTu3n0heiTQhUKv2zCWz27v9ZwT6mHOtA1vla/xvpMOvqETD3NyXYJ
ylI2agvmJ+Ym0RSXGK53z7fJDQl90vql1DEzBtE6lTi42MSOhOORiPAOwpO+7GNBeDt+KVjjKv43
BVJD7iw+CLQ9mY0Q1NIHz/CySfnydgPYMOhKNDRIduIr9i+uCJa+fvyEVaSUdD79l4ACPucP8qGq
HAzFuckmxeYQK/JOeWfMh9LQ5yjvzDlLNE1dq0kAyZ385qrkTRsqI6kCkXi5WKZD6rJJYoRdIGaD
SZyb/eMi8Mwn3D1y62lrMc3Tpjzu95bcV3Ek2Um0rHuKgEkkR/V2bJJ53KtghwBFreqChGHg7PCU
FtEWWnPV8BFzQoKX/oQUNOfauKYqbiFoql+pQNwB15vDjzh9tVzwaOhLidhNRoHjL1skFjoXMBtd
fkCkSVpixOxWoKEoMlSz6UPvQed9CPAd/X7gw+UeaVr82/y/joZh8SgYfPdkKDfxOlViGoH9ASgS
Ujo473zBnGLMYR59eYu5J+kRfDhovoBncsVXsImkokk/41moGqDfz/JiT/uOQCML1sFcvK09f4lW
CQVgj5/tT8LQHd+yV6mGyPNBSTBgdHVSyn+8B+MACz1lUZKjKZPHi75panUqhBSQhRLH7dpRq7GZ
cp6JhrORdQEkdRrtXS5umMIyvGUHZaYRJm9uZCjsecXx0ylzCrT3oVm/22Vdv/l85xoLwtdRmg7b
ibcAJTEmoRV0qGqCOGbodjzKuI3XRApYFpBrjajZ5ROcVOdZhGIoXQspiU+oQ5YM0iVDE2BfMPg2
Ve/7UJTvAufMOqjkwAxv6btIxTnRBwEmew2p3NPg4OyCIZKByL/sZZg51G1igICCdQzZaOqmsW3I
/YHJOK+tCYCNIAhyagy6Hmfd6EGR9bvSPOg0nrnV+Rt12rtioyNpv7bZN5ii+OPW4CUcsvm9nxGq
zAnYNujWqAOZwLITgLVV6hM6HdfGHqRGvVh9ozPw+GkXTNWRU8mlKCWqlKGVnGzoQ96h31w8/Cia
gwCJP7BJoIsaijy9+oIzP/LZHm0PJiw+q2KqFAuLE14SICnNMWUyvrVhfZbo5gBwZeEQI1mmLopF
pZTobf9xwVd0o4vpXwHKJih373O42lK10bZd0s0AtsHjndKq/Gx5rKZRp3udrpJcFme2WSHCxzr/
dMWqzk+Y5zgnyi68luk3zMlKT1xn0tvrUM+xRgqHjJTtSO3TDpGEOVyPDstLBenLGg3SRKUzu7FD
m/M6hZMKKHHDb60L/ME8rB4XPGaqk3+p2KlQjFEHvLp4xdTKoqJlKQbLGHgyHar3GzifKvBIMiNk
acKSpZd6Nwhp+BLyrBITN/m3B2DxWbj7ITempPxXbCr8Du0DvHkLLo0XJhs5U8Jdl3SLHPmd5PID
U8KIXEk2WGwc2wQloIoAi7L7FS+F+pO9ALdbFIFwoisSVai7ZZ8u/CiV6uukH9ln06R3DQTsdRQI
5CBcnCNmuhbR5XEONTGrprJrMIQMz8tCBhaEpOu68dpSptn7Lbu9EWieIAKYLdINKqS32sdSUEoj
HGGsIeKqV0ds7ysDjyWW0UAdlKQ4X4KEkrGy2HMiI4d5qmHvZjru3kRLweM2tazLmHN8m1zejfpl
TQBh4JA+kUAOATCxiS94MUPCitAw9c1vuzFruqIBiDPLKqVwhdI6/+0CtqAzATWCTgAHPmmbRB/h
Sdul+NdCAvTxwwB3JVtB1Jni+0TOQMPCqW/TNDDiuVmNjDbwLVEanl1ayoy40AQwP0ibcvPX5Acu
ddrPVNeJGYFm6r14/81Z88zR+zc7IJWsdLol4bRKN7H+iBXmTiy8K17hiKKSdOjHJ9P9Hf6yWZ0u
GNT+yB0t6hOiLps5aBgpiEa1ycYcbyrq4PHG4Ac/QTiyWnAQr3L4SEH6fwT49FlCrcn+YuKMab/H
4Lm9KFONLDz5h5HFMp8ChqGRW6EVTCIadrN2W7r+tnTdZXMGm/0qOPyZlz1qkP79UxhCeXRJimuT
rdWP0o6y1uNJS+ShekAuKK74KXcNcm4eB3XUE41m8gN91JOphejslXWdYw0IIxxXCkd9MGa6hEJd
bn/gCVDqD3dWAe5McoSHsd2AFT2mrgobiQTVGF5POuKJN5hoaRr8omJPMWsRUS4UKRwnJuksMQVq
19OuqEe76zNgxvhPYTD7Hqyu8Gigohf3ER/58z19rLaCz2om4QyMVzdMFHSuiQ757PwjFi47OF3/
zjK8wuGGwI2B9FEPqn3XYdU8oNdBMUque58ow170xg3wYu1oJ+SUVMuZgcnvvRDBlmw8DJ39nhh6
/Ar2KaO3Hq296dM/1q4uy1JYLGVFB8fWPIBBdmM9VKXo3tiwXwNx3yU4zHhCf1av2UL7j5vrBSdW
hGLSkacD/TWTa+n5x9N4897K+keA2pK/SYvrhq/fGVQW32ZSjspHebsRb9tdicFbvgshxs0cMj4m
xWt+kTQ/sU79wq9Xe6sIg5sNtu1fc+1j73PjeMpsO2uOcW1uOfXsZkCTWRRveNu6g5l9alXtIBZX
hk1qei1GfxHY7lj6WmDG288Q+tPFIykxdok7gKDWYqSBeDdq9TlzzYr3rG6F6QXiZK4O4mkk0UKt
Y+RMn/gvytZOlS2RRTcq1gSLrCCn8vUpqIQ4RfTTcx7KvyckcA/TJ/7QYZjDpQ22jIns3OQot30B
18zu697Anh+lpoanxvWiphS4he7z/RCeaTTarT3EyzFofZj/UMuTDAdxXRXA6r+uiIpxejI8hGDg
WzRSiD/OZ0mr0JOAIKIeaQPIxRtps5wKXCmlePtpIkC8uSOgsCSWcU+HtfoTiH+LETzASHc4s6dL
Gu8qKPm9r6ejer74Z+h17fQgf816yv6z2lhFXLSvTJcSOzYSrWOcX+GKVxIzY6I8FeWJnJ8AsYM+
11MtSxN3cOeHkOsh8ZBIgJiI85N62Lc7Lyya87THPTUywNIN3ULxa4HlDwM85mC8Flg56NmPQiAQ
00aHuv7KtlgjVph+JKphRL+8lMNSelJ+jURxvsv948odYD5drQ8fq6VOrfWeO4Xg2Qy04TOjTcbw
RvE8P8Ptx8Sa/MkARoWyOIV/NWMy1nB+6AF/FQBH3j0jSMW4eTwFsUx9JHOzKX85lrdVg5XyIPqf
c+GZigdT2MT6AiMGBRpqkj9wlj9r95jflsiHqSbr2J4xrJBeREXQ8YwI848kpyj6SFWKP5QlzrBT
uHBudeqKE8R1bzs6QFnkN7NeaGwOh5mlWj9l9lzm5sRBrqEe08WYv+3nP1JkH68SiqP/YxGznk5W
/EgOX+LPLFqnUttd9VqK51zg2PJLraN2+dYmEcgArYL8GPj6/ZQvibtCJucLLa5ZJmhbEiH+gzei
A2vUukRB9YFmj4R+/6McLR489HiprGk4tIFUOKQpKztttOK+LqtTIMU6M1uUSjLYkcHUFAqnW7aJ
1g45N8+X93ilLRzFdywA/LNAUK97QjYYFP2NtSqbOJ1zGj/ncvKyZ9P1FCt6gepVTmCoXZVJbCBb
XvTKk/oGJ/uAwpe7mzuN5nnF0e84/eRHQJITxQL+Fh829jB87157YFf0buomZefcugijR9v7Yevi
Pj1cDnDu3ozaaAyFIXzyhNWcAoSyiKrWBPWkMGtkYUTnZxht1+0qnIiRBBNgv32YC+Se+04yqjqm
SKokbDJ6mLq0XSZhnJMPoSwTtLSeQOoMcwFzZTn4zT294NwMo5hMynY6vUXqnku7WzK0ID0YD52a
FFft9k16HmQdl3/lxsruHxR2Fehs1v/g0m1PVHYzZlIId+wHTAZ8S3b3dMLtabsON5mG39zxvxwP
5LqxiX/He8kypoJac0SjVbgufEscvmOWdQ8UjhwzmMZnfSXvaqR1twfJzMSd2bxY89cByZgPQSh/
h3kR1Q1PDkxa040WFATrzKi86cJK6QytgGrWkB3lyV7j1nJAejzIH2PyjSqZwU1IldKo0ecvKNAo
GnphbLe1UbN4BOqNaEO0M2B7laG4g4hmLIlSIxNeNDj2Wm4oWKGFXxvuMOTZHP1U7XXUJfjI8x8r
nBXs+mGgb7YfAh53/CrvU8Rb4mwgxz/PbmAR0WfkwjBcSJjFGBqnYERvrGfwPC3NDmYTbNWztsh5
OA5H+3nwWl1hUT5KtL7l5MEn19Dv2jB9RIVig2Abt+fudRSY926/sCksXsf7fjNSJC93EMxhLw3k
h+Wdo1zJ6H+Gx3pf76OfjChW0WRRGK1bgNnaPKpUQKTp8FNkt+6CTm/+k5J4LrhkkiR11H5Je14H
j8X+5ovIOSmvMZz+p0u+Wojn0ZSLaqbil7L3bUVXsq3eGUXQnR+SNVHFjtzFjndmTnfSp3wk/7D5
/+404GXymPzsB/WuCKIIOCo9QbXHKFeeTa972k3ZOv8Y0vL1Hgq93Km3NJdKhHux1fP6Ad+/mMl2
uC5CoUn7mMuuZqN2GqpNRpYyK0g9kD8SchNn7El1Y3mO3QmttGboDteiObmq69GRqw2bACRgYMmD
jX6gvmymEFDd4/AE9hLZixc++o2CgNUli3NYp61EMUhxBnG7YHMOZerwK5e2hCXredkHHbCiAaRU
ycCDxG2ASPr2yTb4NLR1iWkT8EU3RqnRQn1h/D6+kDJFswt57l4dgrXHHqWunRbfLATST/oleZi4
Ap+Hb750KnXkKbqkN9Gg+P4IXJj8g31puI/AZxYtasEH9Mp2IrF2Ax5y7tMrsgq2cIIQAHdcydiG
P/sBlPhzyFlIGkqOan2QX3g8sI4hRhJohwHP1q7vZ8QdPqs76fUoX0s23o4Ij6QROIrhUuht7tKd
mxna12vsBrV3hdcNtvKmh6fY83larqGi2TgcLVrqAKfI4AD6yu+q5vdVvjHKnqkPtwJdoTfDKBK1
q2Uo4JrtxiDvS9DZOjNP1xeCFJITCqDMpvh+RRN6fAXwGlxxJD836ryUe8ktffkvHqCRR0mA6PQN
wE1+KQu29ckBtNTLronhrqMCX2KqN3tvSBTIIcfaRGyqT9Ua70Rihh/VCY12Bzh3HgOhxOgttKIW
MPZ8ezNF3DP4+cvcA13siYxa00lUcteXPJ++t8NO6zuCFdcUmdUssVD40K7hoAVZfCoBePuCRpfT
OK6+71+hwkNUboX2D7+Z0poteo2cEq0uy/MBVTXHcdGubNGLUooKh7wf8c7gPpGAxpYRRr608Ndj
wFJj9HFfMFtq0IZ6gxCcffWIEMT98zY6G2q6kZypP8ovHbVKc76jdE0f/GwFuW3RUnvLFMa0SjYe
wizPfZyyA414xU1LcNL8lgGGZE75v2LVj1EDWSs3zvy/biVBXvfiUiQs2IfE9qyOtQSxrEBV6/3l
KpgZjXMU8bifu/o4eostM9bE1D40dyiCW/YuS/pOmNMBTUgSbLv5IL0HP1ZhE3CkzUO4M6rph9hC
c92Ja+Qfjj2cxwmco1n8Fcm3tFiSHu6J5ZI5E2cMzLbWGVYQQ4e/+PO2HPS7Pu34doiQI1uaSjYc
ZGTZQSnCAvbSqbUfbvdZi0nCw9aCXpDHIJbv4hu44Ns+eA5aF3FdtoixdMV9BVUOL4SgsI8llZqP
Lv4Q5VzbB6PfUNAJPXBbrnDiyyEdvcOv6UEX7+YMWtOONRVFj1m/W2Eo8s4u0eK/ISt+pX7VZ1Kp
CAIh2qMSdkV7p0TwWv9VwrdSWloxjEcDS/WZswpiur1yMaIUdoQ8JBwirLJ59mhWETeQYhAHG9v0
T2R1gs+MMuaNLk62xtEr1SnFOKU0htulXXtIcYERe4phmda4XOKvyL/zjSFhMWxt3lowGKZA1h8W
5w9MuuR+r2eVsXfOL+SlFfYjEaILbQtoEQWBBmUvziqo0zzeF4stKqawk6u6AwpX9dLGyI4Oz9HJ
nEHYGpBmUUk+Jk7/AJ10vcvfji2tf59QyE5WkMMvgcJQ0sNrw/u4bdFvQtSDkp/UC10IF54W5YVk
Wz9zSwbPPCIM4nbT9weie2V21Zf717UkBFeJN2961gnF1T8VPbN8lPqUVa2iX874W1F8njZguZrF
7XnZVjrI/3qYPunwRiKUC3lz3guVsjSpZvx85R11bu2Bxc3WwQTRzTeuE9pj4Y2/Ku6NiB/v3Q7Y
YP3L6fyDUiYvnHLEY1bINlwB/++P4uI6ED/3WOvo7we2MfjTlRuIKGqF1ho9kN0DNvJKYXDvYdV7
ZZMjg87oNpuhOrJQfMCaETKLppcYTUaJUcVuxWdnJVt2QbsL7mjb+NEMXIMuWqmt9LyCd5SUHTPI
4oPK0InR5lN/esFpThS21/WE7QSEn5drM/aVpfRHDnCS0ZYAy4GiAErqPRuHGzo00hETqpazvNXN
eUAStkeXf6eXiOM7nnr6/GO6jHjh6CaMdusB9L6+KcNwB7oy8zrdjBFBNamQN4hVYNQervmMOK6q
F/2SSpsaoOkPDtXPzRKXeTEkFfhj4SuXOJbwaPUD/3/gqihnnS6uvZtU4GkHp1dqKlS3YteWIexT
5RN6p151FF5i20QSFdXokMMc7zSry9PDTddLZY3JxjRX5fuhf2PCuKoQ5MtXumziRRu38VjebVe3
D/2e0ThByyPT2T1xm3FoW34THHNkMjpltoNdf/eHbwjf1gVC6mtoYNQQlu9vdDBcZUnCBPFVbb5j
ZOxgwCdyjEJaFl4m9BevUlHXiwDkITDwjfHrGgGO0S2y55factKZGTbfMvsyZQ18/VHbBF1bfb/D
asrEwOKJ4/KRt/8hnwz3ipeE/PB4wxvl5URaEFqyF6QgnVOgibbS87nHsb4v5ofgLhC8RLhoDFMp
A8Ho//a6Dt99Sb9i9uP2m4l8QOUQFY1ilxnmJISAaH/xB9zDCkbx/u+t35PEHPi56hUaJdVlVcwD
YrZ3oQpCBD5FRNZdCeZq3H01idFxFt2enh28+Ebuws3tOazm6M5/pQ+IKEBCqWoJxsTRFWgMseCM
EDRqFiA5EIHQeSjvSChwghV5WXysJXNBWNmxTVPcwBtS8bt7aEBbHUhSoxt+I419VlnGlDVxrB9x
F0Oa78WEAFZbCgvael8ByiK+HqrM8S7pNTfoOq7y54I2p0MaY2zxbgcg2Jwpyi2fweNUX/ETjznw
hy7MG4UiV2xLzzvwghvX8YPlOGWSmHbz8P6FGKNQ26Qt1gS/fSpSTiqNQb3x/a63VgMWAE1R3Hx6
ClZzzhGzjlXKL8uxrRDsdMrMi+00uPDfoqjMLgC0lx3KW/4whnbbfKnwpOXsGsbukBhBIcalYSYN
FZlN5uRdCX9P/CVp11ctwGt9IDGbX7uhGUbvDFzm+bEwa6GIoOVlhwKRbVuvi9+5+491/wlgjpaJ
rYxNxVF6NbWj3DYry8+hLRLDezSEYxdgmRts3ybiBdBCU2NIM9hWHXKhhznBGT6lzjlYvxH5sxWJ
ToSDAGCMNJsYODnmRumV46Q6yWx4YLB8WGdm34wRlcZgbK3PND0oExca3cPZheXEoUyJKcwoVW6a
0RcwuXhRS/AtvnGlGn5p8MUNkJOH2AaLPY9MMClKpI9huM40Inh6eyBXEx6VM9pg+XGYSmCvFfnv
wjGu3j2gi/k+VDyW5xyT1Le1UtzIo9m0760Uai7ozLgh9YxW9qsJmru4W/C+mG5GbIysYwwxkc/Y
2IX4pVp1t4a81u+f76lKCfOisT00CXBh943Pmbqj0QUpztjOQA9aG+E40TkkJbe+diPhvr/Jwgrm
veIiI3dNY/91KBATu4xlObV5sDRh5l/E1eMg4RiONZmnS0GI8TcfNr/76Mfpqk1hPZpndZH42MSh
YXA2MNiLbKIJdwzJb/KIk1QvpgLWS3DFC7VrFJUdhCCwgk6cjMjD8gpZveo3xDPEw+FX/fzkp0AK
wg3ycvOYkeeGC4PDcr8hwLg/V3Iv8XGT1xoRmsLYev9Zzb3DPYmBS9fuBUHv5atMOxXsNkgx148G
9TGhJJy5tXbSCbL8pa+40jNqCYJ+7Uq2/FdwYcq46TpJtz8q8NRCWCJPZQMZrpem22K8DJWV+gtE
4NEFn/EH3NZ/kyWIOhr3DG9nx2l6MloGTRF4hjPEAi8oxedAk3ptKlgMIR77KpDkACbc0nWiSzRs
PYVtdT2hQy4IZYcsebecQ+UeL7mYAAzmm6CByVcQ50GzfvHoyvQEpZeN65raDNLmWlE783nfhixF
LrwwtLztgcVg64FBojkdqvoLQphMu1ByUUoBx/eK9OVwqlEAsDmBHBLBqTJnWetkbR7Drg5CjAF5
fzZsQmvxOlx8BOayVzaLlhekp1QOhtPIapoy9aa/p8jXPCRKB4S9kI6P0dd8OUVZX8l1DypCfCxS
TW+X+qVSR/xWb1fQdHSnjBmOgWbZsxcrGJx4LNaoHaQCdcrPIq3XE9T//lfkaQfGHY6+W3Lo8usl
H7YLlFhCnyOcXynui8Hzc+OrgqvbV21rUXI1jZeiXIPL/7/qirKsAI4WLctoMwhdHWjhRm6rNzp2
u1P81DGea03m5rhrj3Tg1k6L6/ZCuZ21su7DkcXKpVj5CPEMFdeWylk+4Xu0JKkyoAkkAEjreP7m
zbvK+qZH77Cd8OIiYbE6aze9N+eIxwptEA1dDIQfqBbqKzY01+b82dikqoxs1zqpiwU5JeygHThj
/Xhy/cM9lYTE9aGcDjdi9QZmWm/6z1YkVa1FcwV1KuMxrcPibrcUtlWewfbFZc0vBdYH2a1MBl57
XMZCpJY0p0o5w8H/avhKd++10nxGv1O9nTLEXsMlvhnKwWeufZh3QDfItY02BksyYhv6NWykc4E7
otu/IMuEHNxYSiDN6+a6f2j/wl4PrGs0UC3547Ysz1ZzWhlVVQl5ka9NFLGsGdA51h+oQgXMzMmu
NA5U/11rM3ZHCFLEde9MegpiA6nWE45kVxItYmFWvnVKMW9I6oSPST90XK6gj47K9aceT4RllwO5
BzEOsPz1a65FhbeIz0rwBJQggxzN2sY6SjAh8NdNCSCCQamCMq6+cTcsGLpRG//kLt7y1eNoSbd7
4RCbi4e6A0mxA88TkCaEer6ShazyEVLl/vrEqeoSKDuGLPCMQflw8ddU+acGYdQrdFMRSUvgijLZ
gXDoxfT4BF810RPSu7zzxwW+jWifpUM73vvbAN11mWpTtUTHRuysOi9vq6I0vKWIvb8AOz5xPL7j
tIljv0sQ9ypZh7/RtR+t/fFovgRess4PYVvu50C4we2SQ0lRmBHZK7At6SbjGZGBVvDoU/fAowRW
8SCWNsnXSYhlrJxECxuNzjOaMVL1RFyDXMdZR1KJceJRMHfZ+VD1Vj/RCI+SqlmRuEvCkwItJsSo
oOYh8homHMRW8eUiFeEI/ljbkvZVhD4+SaZ0Jk95+cZ+AjwF3iWUeX3uP0v//CRz2KPUlqt1y/fD
YIKU6X9keuAC2uQZNgySRqOqconsK5NdcZ4UuoHXQFjqpbrDqUkvquTbljA7ir1YRyOB1lfezOJ1
aiNawhvkU4q5TqBzAF8iDYkQHVWM0w2fZFMC/4YmyNujv/krCJ+HTOd/UB5fRIKavocWUZUBoiS/
/aTGal67bWTKV/M7Qlfxk5YAyyFzn0594cXoqU+L7b+1CQzgBWrNs/SzEQUGngwH2o6cROynWq4i
3VL2/Cxh97uVC2SfqzV4av4/u5vOoDX0QeirpMzdtLVFWNZoAe26KcFHSQrK3UKVnYwju5Kap+1F
tFm7eur+L+jHESWDrrY2Yn+WZbqfHWNhpmDIeBTnX1VK0ZFzsxKx0mOxwZ+AvUIxi2Z7xlh/a5En
KEe26bcAzQRHEkBDj4CjbIWPJA8RWxUyspME75PUgxiqE0ZlVe9vbVUZWDTDZSLBruyrC1OLApr6
5hvM1phy7pMnbXNoCudVw9eFlCZ5YETWpa+PYh/WRvW7dUexWpNsKP2903hOQVt4LZnKhOht2ZWM
icmNeOUg9VazEQjYND67NN1wKYiw6CrCHePlu4jW9l5n3Wy2lstAEGRliKdwB33JlTeiF5G5u/9A
LFdVguLxd2/VRPT14tMvAuzxlAEec7F9Sz3T0bEnCNljZUoIcQsXOTZR/Jg5hDgQcagADiqAjwOT
gk7u1rw5c8bp05M9dmZQvY41QPZy3Cts6u9lsiwMRtMLr3Ws5lf0mMJ0O+DPF4/EiI4h5W3U+eDQ
vSLqotGQBpSBN+J0DHbfdgDSLMkkXW0Tv8d+qYuh6AvtGKfCU6JwleTpKH357TOj3fRp+QIoMnqD
32N89ohE37zzvgX+7yQ9FoZlxBK1w1jCArLD+a9Vx8wci5VIURv3EFjYppjE2kpzX3h30Up6WIqI
P9xMhv4AUpHZiYDzgLkefNz1+Fg4yAs4Ys9Xrth/rhLx8ELTOMmTZgRHAuMxDfD4Zq3CLDtvaC3g
ltKBaPHTfRPDLGw0HfWp6JsYm5B5UbLpqAOE6aH90u7izGupzBpol2u0wO6HY+5EaLha+fpn1VvJ
4/Z01mr8/cdAlsw699peepRkpMHNJrzEaCzlKDlKy+SRUm7q2pc/IQDRcaPoyId+OYYHFCxkLQd2
p06D7T3W3tFhrc5NVgfRNVggtFDGjlCyFbcHI0wG2vLlUCgOAtPyD0jJ6W8zOMNOpDXWxwJTKoXf
2LKOvY4rGc9ZbFiPF0oQPOoB1bxWjBPx+SeGteWU3fe7LdPIbVxD+3+H5N7KMwM377BjloYx9xxO
Y7HrGAocOjp/w3mQ9qCpWYsnicLBTiJiYRuuXIf1TUWxok3xbU59wAhi5qZbzl+uAO1qpzlboSui
W9QHC1/A4InX5zPY2fTcuqsN8TK4uz00CWejCKxFaHpxV1q16nxLiKbMvXToR+2u7brnsNL8vaAj
ykR7+NikY7EAdE1XD5k+res4YVC3KOlzxInJZVne+GmVlO/9KZ+FM12BWWK2wviDNOevgM3baR1r
Wk03TybuJHnONUauVNb9WN8PLe0q67dpsL8F3FQj058+8LTMkVIousOGmNfKvBVU2zrnANgBvYH4
dPgkGv29LPJXqa/W9D8JUzW+ulZTVXyzE1M2ZxkKCuA9eIvq6UvOQEcqv2BYLNUtP32OkGGLmufA
FzAO6fWr+e5GinLSeR2riTx1NjDV2nusG2O0zf4OXSfPV9QfoAtA7xRfeiyc+7ivV6pRdac5aslP
uDK9TNMPNh8N5xhbQ4YKNzDzrB+Atc0Ncrs/sEjS81YM8ivcquqILp7HrP159MU5LqA9Vt1mb7NI
EJEa7JrTf3yn0VIfbCMvWjqWHBG/xULtlnC9UzalNkXBNIqdX61isEW0Y8TG4YG5isKq7beegbFa
gy6++2/jK3ZLYfBDWHjNel84gKpOvOB0sjgsLJivkuj6YHH9eOKtcaCJ64CDrMe6lSc20GCglmy0
DLOe4ljUQlGmw/PhO+OvuqV/z49CVMhivSv1qjEBfBY+lTCDa4T6by+y+dfdh3CJL35DM/FEz8yv
3f5UFGeYR7Je6pfmwBQf/6rVQEBkU7X7jP1tLcs5JOxLhmjwKiLQ8LK1KnCUU6VtXPdSNAzEgRn8
GwEvwsUZJLWiyjfGttsjazvsVuplFqDzB91yKEYoFjLRj6nDzZ95JUOqIiPRIqMuc5dy9593/mHl
zogu+aT1xNLq/LpGZnMhQicTym9q38xQWrT/uO87UVyoNssGkSXbuD8DYKyd/3nFOVIVbMjHZmwe
tqjRhbvnsV12T13EucVGsC3czJLtlAJpil170J7NDMcxnqUaFjq7JqxOOCxnpJH0JiJo18mlzQgm
VE8rYjoHCtqkM8lldtTj4wpsmXqiKcB2viXM9kCq/CGSXB9YT/S0OD0tjI3YWDC1a5Wajri4Jbd8
29MRflvoiV4+wpapd7cOaQd1doN7tmAlbSc+QEH533sDIZUWSnBksDIsqHVwCnkN64iUNY7lfqBs
ZKo8btlpenSowFW66bAq9PjmO3uQ8ljYWG4F64Quy53ocYnSsj2+HbPpBqk2Bj6ojKKivBDja+eH
ECythAKm+0e1aJOv3/PnWd0nlChT23yjJWEVMio/Kbayfahd/uDmigiBb95HNuPwkIaTeuB4/7Ep
bv82EAfwt1AdNfPf4p1GamyYbmw/qoDJ3vQYOM9ZyfzAccS0kxYzvYyFyBsY9X0E5YGn4eV5z6GZ
VtcpWJGOgDofwfGBAjIPhX/d4cXoCRCDXz1CFc8pXSXnXbA+dY6fiZO6ikQBCR77DeRc1eSQVes5
2pmlva91JDUD2FU7vqSTx5tBWGd4E9bzGn76Xcb9eeDzQxLskgxQZKAJOJJaUh1kCNKtMoCyNwpy
W8wq76JXuBNm1HvaLjCXNJn9xqmFew1QDXQXPvVr50QOBLrs4OotZgnwcVX7HcjynUVNtFBP2yuN
IR60ntJeMGtHMRyWFAr7dWOkfYnjl7XNYELEnNtCIuwFKhbcdp0ZqQXPyVs1udDZnASelKmRXDs5
Xv+vXhxy6gDmWrsgQfo3EqOVroZvx4IG1SGCwfTh5oCH2e4ssJS2HKq2t98AJeMLG0dctDsG27V4
QPkErn1KkVBufIqZq0bVYb4DwRV364jKPXLhkeQutm6ozUw48MCaP4bgyQz165+m1qv2+zLW7XK6
kH1+3Vz5B88tzfJG3+v9zvADPF+8ju9gHq0hgsjOfjHzLzq3chnBqqs/W+Me+rXBUivKpxmDJXLM
kwNEaRnuSqDvnsuOvvK8HzlRakFiGjfg+nu8JDjawQ8NKRY7gKLdvc6liTsOzG1YCeI1OVX8vwa3
mG3wGRhpXARCUE80woLvf0VqDl6UiHrk7FFT0HMxv0qI3LEySMjNjf3qxB9TCcHafvFYgEPdkKOw
xAeW2HvLfDwpfcLF3/GCtCdoW0grZzoxQW2uqtUFCWFF2KVXSoV2zBhBOR8N8JtgAh6YcaSxrkSM
y3GDQRICd/HiB+i0KUs4NUN43j468b8OZiwtnFKxA24GaW2BPEIhwrhoCzKgBfTeC9HX7GhcKzEq
dm+VWKNidB+hOHyjcXI+6Sv8GdwjXMNshu52vnJz+enWW7PPh24AW8/AtiQotEKR9D7nE6tM2cfK
vsbUymyXvRfLWMAztjyo6G8Mt9wNqlYNDo0FcEVqw2eojQ8wI85DzRvXqnViBNfowbejm4Q4bzqG
NyV9/25uF1iPxSEQSj00FR4NVLJLBfp4KKL+B7EXFkVEQFQbssxrJRJYf9vSecD3UlnDIusS6ymE
pecTKCwcfqzZU0EvYaZ92ZsoY3qS5m0M7jVKd9aVZP4LCgczZwr8/J6QZxusaIMPAOc+xi4cyTL/
VzIcsGjO47L+rdCjbY4l/2t88NuisPH3HoApipFlyPf8hZw1jmP+dQcFyFiEmvG51n4S8uG+4aMu
MkQDNyoOb42vkQn9EKX5WMX6YKvocevKTefzL9uqCdG88AbnghOZWHnlwHqdMpcitS3MMqrCsvVi
XR7wu7p8HzK4E68I/cCfYjc5YWLY4bQX5H7rZBdz52A1RBO4ubBhzaBp0PWi7DS8fupCXxWUbcO3
AOlqOhEmQKX0cEhKrr/rzbjiPWyqc4I/ie6XH0YnX+1nVMLjklGia9E5c89XcUW9WZYjYAZyHTWl
o6jYdc9DfluA9ZITu3cQDOhizN9ktsiGmbUJ4MpADZ/jpQwPbVqIpG7MHnl0qzTTKlZ6XenZDn8I
8vc/Bd48/4CWMHvwD8ELwGiV2xl8Fx00PAy07N74xbOZCe5EvIqZUQDKzmqaeyJD8oGjaGWupKAW
abYGIsXLH2EevB5R4lt6Vlu6FzBuW+KZWdAfP4au+FJUjX3GWaqSTi8hXYF9mqJ0WisjXGMQUhHe
BsFBv086sd0bwjbqnCIPzhpSP0TxY2Zg271IVwMvF7UggiSMviSkDyjzKW+vg/0RwYMv8xfTqa8L
7OW7FW0RmCbbV20Grg9VfsbLPOS5KxYtxBHQBAmaZ7TA8foNp8X6m57mwCuAlC4G20Sc4RYByDUJ
6doiln2VzmEsAC1qyni6kAfpvdaBNqtHBf1vS/jhlPacDj3VRvi1EOHvzj0EJu5K02/mAfL+o6zm
3GrzeJuqBRJ5C91uc4nxJpHJm4gAQQ0wd/T22akyWgiyl/qMORk1LRWuQCUrgcHbgr+aUD7EjtjD
Jqiea4psh072+HWw/sCj1By2q2iueSo5ommt3PuZQg61V8rb7+GJXOGvEubrPCfEAFWkOHwIwr1D
lsNNWMIHtPbuy9F9+t/BPvlHxvOTsfwJDtyZilOeDbowZpMqwJwqjpz+/Wt6vxdtaqeCyo54/ngU
i9XHnsZ+bBcltQ6hF4AsQGIRjvfC6EU6+cqJIByd7wt32e1KXXzHtM9Su1lU+7IaA5paKXsYxspm
EN2n3u2PrFHbegwkoWDNI/1RRXAjVRypLl0yXhOfmCExsLPjBHXpWSwn2I/TNGgxp4eqPr6WDzGA
iNQ9HDAKf9um1WVUzGTBvRmDeFd40uhsEGiFUtJ+G5tBrTsuWb8ES3WxanzDrhrn0mVXQbGgn2FM
F+WrLnecr/I5W2b9oAJ7uCtHzdYNOozcsTSR00Zz+rdN78FgdY03QybTDEZDObc7ARfNVO+OUX6b
wG22p39gn+8HNbCcC+i9DcmRLGC3Ax+1MgXem8XUpz5deL1OGXdnRYoOFvw7E+qwOk9UEh0lGi93
o75UenU+mheZBRodQRtQMMpmlt8fT65RI2sPSozfYufpomUTSinfIZn8cVpGLtLYkm95vCN7twWT
hYZ2RWaB+XYZCjzllmTt5/gvI0wfZSTpZQ875yuE5hsLW3kXYiHzkbvhwRGtYFUacxzG5Omo4OIe
ZWFXeoDRVAGjCGpzGoC8CObIhuNVZhtOOVWeeYyo3rB3NdI06yFi2HbLav924cU3cszc/Rk6b2HJ
MUQr347W7EeVN4G7gSc+kVSCWQbC/JVG2+1yeQduxunxIU3t0Crvxf8zMbxenJtmriwI+Bhrq60N
uUssgR9Z2uH0N4EttoPKU6rWwwF/J/vbYAk6fYur4jkPkX12sGsc99E1ixCE1DZUTWZvmSprj8pd
pxsmShtaeiqNQzdbXWRVx3oA9B9xHr+8pSflvyACJs79VqgFRniJwqii/MTGQQtNWenPR8O7n62y
UQVG/VEYklzF7U3zkLh9oi5BrwYQ6QQxOSY5diB2z1X0DkGfkZICxozTgySw89EEEatV9EUDzNR2
XUD/JGDB6b4ivKItmDdyEoAaGZX+e5uapWaQKZWCmdGWLCu3nd9S6Q4zytk56XPZKmlvhETSPq7n
JSnkvX6dXApuCxGiksWExkgj8QgPvLyds6zXjWi+PjGU1CDmE5PH5rgNI6WL8NL7zpATOILpzJai
ziuypOu7EFR3JrRUmFqMf8itoFSwSn4p9FQ9ROSDc3k5PVaNBVq7s9RmDVZcg5zqQcW2Gz3N98AH
OeTrQ2RrYXMCcd8MOq0wboOhbyHXwl15a047nAAi6LkEypFrWrJcqcDsi49d8adFRdQcpBOzHcn8
9aE0XTHrXTZ4kNBefqBpPy6Ug+6bV31ooX+3RfNYcNM5CQ09KEq5N29dyRbCJw6etQr2T1bErYrY
ckxEjvh2rRhHQ+XRlP29lTZKWUO337Q4fbzu9oynvO17yUOhwWtd1dCtNVSGd6j2Y+HkEoyHe8kn
5djhNcVDarINBdxOS91rvM4J9hU8B7+9uC2rfW8ZNNq/AgKw2LzAdsITluAXzRtBPQpk7AuTWUJD
OwtI0TaYQT2FoxkQ+chntCLVOUwp+o2y0D0rpzLQ7G5+6hUK//qy5fZcivZ9cnGD4uSldDGchrMA
8f2IBRrX2IdpsdW+9CppLm7NP/uupP2iVMxgqwCoojYnuOzOqhMEWQjY2lUZdzx8F6iSTGRid8uM
P3hqmQ//qu+i7JK1pT8KioBuJ09K+ex4s8oSDRItJcqfCNj9FTHG8b+fLvyFUIwmMJ4wym1CNuHH
nVYceJOXx+xhaDExOlIsBOEUoAUphBgZydVm/OjWTEDExNJ7a07L1qfmnQjGQB7ptjU5MZSo+49F
Hu+9H4V32CyEBSjGiLvqr/td8aCOo+jOMCdPy3ZPlPVtnBHpBeTfnPEx3NaTMfIPohS/JV8AkqnL
3Pt4ChaALRa0+rvoHSm04JEdE3P7ZubAtYU2YGHp3X3PlWjtTFHDXcKlA+L93URF0wOHigd9ZLu8
wabLqnIopGLX5mgWIeabgaddBh/shmUY6sYHiBKNTv4BtfQJBdKnY+I0p18rmuy8qyDY0NJPIz7/
iImhdqzj/PR8o5e/7fcEcbfiY7uAPmmNtipjTvxcjeC7ltm9ourC2Ob9aruZFtuPjvuFGIOCYhM3
/0MVC+3HhSIgwnmote4wViP/DRqnyB7hprQuqKA304enLmNY7pRqdY/LKbhnM61kdijrVToqkQ9C
XBIuMvo6Mooy9OcM0yRCjBp0v6+3LK3BPv0OXFPPubgXBBze6cw1S0clFnDloM0TYaUQj3KO5Krd
SI8Pets4134RcOxW5WtsdVT2KVII0u37VGAbA+D2g6HusVPgUN4KeUmCOygd2UgOGKr2Pv2Z8333
axLLfWOUizEojbaDRr4EiZQtP088gPzgA4QJz9X7e+A5A3/wiHFUZY2IcZtGTW1MSo4GS9JFGUUO
IcUYbt1JKoMeCSwm0GXYs5MoTHmD1Y/5wjtfY0sUIca+PgBJ+T7nQGKvqnX9ESn1kJD8o/pZtAWR
XQpLaA6GWlG6DW5+EdYRDwEGeBNmQDQNVePoyq9VpSC3GNllNmTknwgL4p/R14MNxb8aWU0oOhb4
+BNw4C5Th7qIELHbVEXGO0ZoNvZ/ylKm8+mPfIC1qf+zvtdeIAqUuDOVxSFxuJcfTTdMg41Ezp7R
e0bINo1z/x95kPfXHQf6TnIEBfdSi04wvh1QAqsk6lHLgDTQduN9QyEJ1pjJfPl4GYlp4UvtgMWJ
DoDrWCKAG+PJ0OA+j30mCMlrbJkVjuHojTk0wzRQi1CbjSJ75+QpWJwPzEZ2ln2c2bIrsHzVnHxe
XwWMYvLQhDQKKobBtOx4cz2I28OzxVawfctVjH9R9qbDpoG5GuVLD3/WhS/6OlM4J6JsNMGPmO4v
moFBD/hge+SLKU/jZgm5e9AuYqh9gyFJ/UqekcvUzX17U7hdPHSZp5BrfbLyz/BPwdLhU8LQc6Nn
FYpePEsbKGOv9OFTbyasac22S9kX7gb24cEnHt6ioxXkBw+lMyEffJjArAhYl8IA/iSxjuH/o/PY
qCNU0Roin5t/aJE8io4yqPNi32dPweU42mq72cmRaYgtNgfbFPYnKuLFfzYv2cSZmNQFAdn7b73C
IngdtQkv325DUtUqC5oMLeN/Ql3PjY7AW07uwT1KoFgu88ryT6XgRQ8o48NCvlxqOfA2D3/q2cJn
4BRhnb1R9/TuXBApsyipKblF67asHgD1w750xRM2DTW5rkZlJt20ngaOgP8iKL2KgB0N8UvYzZ+G
f9Ug5WCts1xGHv5V7WQQD9jMifYYE0RDrQwAGFJ9EuYoyeB5eFt3nACBJtbttK6Ny99lRvF2jTEl
rxmCvVucUV0yL3MCYeKGqla9Ofs+CA1xASD/Zm43ZkgrgGrSKVTvQW4HJd4XBGU0ULJtyhNeRGfj
eIWtzQlflz3FLm8AtRGAkuvJzLEBjUW31/xPG0NQ+ZNw57URQCCuXktKd8/n1T89bjFrsv1jeRp7
AuTF5AOl+n5P3PkChnWk1BdvSzosCzwXJmuygd6IHslGn9qLe2DbGyS4xhN3aNpAJnpcYAPktPEC
yR7EnxY2JfbpTbwl9DX/75j9RvMtXiKm7wu/WUgyMech8wNZCpydPK14mRDmlYxH6neptyPoYY8z
IMkdGI4C/G55ZZv/OVrwBaVEbURg1ZCpt2teEZHfeuATxs8QwS0BrulZCNvLdTZLL+qaJ/+sgzfz
OtOD3kIE7wcWc0PExIOXhSe+Sc+O4cA8pBvYz6buMqh0WxuGJ9CfneRAUtJkB0VbvxcDUjwgi4sD
HvRMec3dNB/D5Rz6RHWkLw98t/tczjw48/LAdoHcJ++ctg31xmCA0oEL+NWpQTir+kwF2wpBgn7q
risPoYv5vrtlb+2Z77N5mrsFbU/zAoNF1u80XXBTudXlU6+/AqlXaidQwzBIrL/QLtlTsukSg/XA
Z7aa7MQF8MIh/BWctYzCBw9Gp9Y3GiVFuRpNpyooCmedEBd1jwUmFesxgmSmPiUEA5rLs+TInUJ3
qQjwEc9PdEHr95cNftJ2REQKHxCCiym+L1lQTIvau3rHmmNCllGY8LuqUgKXUPIcTYY9Qyco5Ur7
5+JF9basqWdquSpZCEMV6QEMuEAsOz1ANBJmXWCmc5Ut6lG6jmyADHVjfwo3H8zVBApa1MtQYY39
3h/7caN7TONFPBrAVGISkUdQ6iobLxHeHV8DilD/WM9u1LaPaBEGvP60jTrplXU7pbW8eakz2dWP
kK8wEl3ovzUC7nle3walfXd33qNk5YgX2pvMF/bUwTkGYyRYNo762GARXZbFL3WjCsISqT+VxyXj
rWqRxjmO10SHZbeOK6zlVZh2Xn+QAKA/sE44CEq10DNKc5i19ch5Ify+PYLyPvJ9bcUKAvPLZwVO
ObZppW8RWQwqUdiZXBCPB+sMa31reuczqx9PTpRdo0uhql9lcIguIDJsYICC7a3eIsnNktb2y67X
qYDLaPfD4PkJbNISRSUepUqstdJ4qGLsTymDsQDF8EeT3YJtwCivyWGY/I+2gOwDeFxOImCD2Rch
wV63ohv0lDFrWydfs6quR8ZyW7lU4C3+ZUhHI5UpcBoHMCfvqIuzuGP5dg8bIcFJvOLrDKzek1hs
Vnxn3ANeAuvCRW02Qs+nNOaDWYw4/loDE4iZSq9ZduAXDvwWphujfpZGghSRB/BrJeEtb1kl+clE
jjFrPX2DSOW8AGQCQChoTJ9ltEXzmFBPNo/rwAYHTXHAv/wvLdTurnKubhQvESUlyrtakmpbbRDp
DOHOASZ30wsLq52ZbktD/EMkRjnIudcd0jQOlkPy54hJpdDNhHfY166pJHYxMkGiCrKQSNVCEQB1
2PrbKvGlx6f1x26NsSk+g5uxfmMZLYGABb0LFmFROD94mi/f0SuHGRNI2P1rr0DS50VZf/f0SADq
4EVLT/Mx6gqXZPIrgQ3dvQHHMPeBM3B3Ws0z//uEM8o1wfv4987GDQwT7qMgyJ7La5siXsEDBR1Y
2Ltfl49cNBygE+CnEs66BwFubPx+OLIg4vO2tkVj1JT8UB24QsNZPjtCCHFqWWn7Z0+0gLErrYtO
uSAL2CyFFTl0lgUq+dc+sqbrNHTVn9TFqiBqbpnxp7Rt6SHd7ACTNbVDDtrDro39K+oWOY/hb2Ie
c/UL0lSZ7pgcmLxDQ6wfGPbeQCQ13MCKFaN46kg1n4Z+XNiVIAgo8BDK1QEyft5vh3MKsi2PC8mv
PzJDR1vyV4Bn/5kebvEv0CSotQjEKn/m/DOr7jzNtDq2qYpWOGHQaWKqEftB9JWOxSbLs3EEQGc6
vWEsAgNi3fXH9PBvP8dNNtlGs3dBGdgGR9wIbSdtuxUvKgRYHHX7hE1L6LsVGt2QOt6KLd0jX6xF
wPeQfYGtGtsEQYkIWV9EhPWinYt5TDlT2DxNAcmLS7VF0pC+eGjsmGMDReBjoxDCc8ykjVpujAaX
omoGNh8N4npuE429LcALjct+4Q1zIJNpkbtCmIwhzvxoGFdHrEijUEm21AYANNzR+lO5ZCwf34QF
q5JmksR7YqMqxj/7cs0CPbjGYbD+vzQt0CPXSsB3e3O8itIdSBs6WrgDtOLbB00Mmr7c5HY6PmS4
VXanoC+aPNbvlcbSoi7mgUhu5EXCg+nSjsPFcjBWqxQAAQIG0U/Wb3uICNc9EXDT8cY5397z+0K4
6XiJr3yEV7dkS99pDCLGtz5gT3Fa/RqxEJaNdRZhgsNRWdwooaGhclG8r8MhkEXpABlYSSLS3DXU
jZ9yccpWsVCtKHqtaoLoBaMLgxZZbaoy4d1u+dv2+OuNcsYYfGHSbnX7YXVVGqPpDdOfPX/jeRj+
h4EYtgpOp5olwDBGAr3M51R4ACHSAC8bVsHcm8Oi6TC/fUq1pqBlMM32qysQWNgF0sYa2Efn19yB
14prP6HwusQAmgIe4q3Zh6BID5uKARNAA3ifBygn/TYaRQAlh7kbqPpmTwKVtwHk9fa7L3JmKpY9
NsC9odLzdoI9y/+OT43Tj5mBmqFQb+6qsGX9Vj4hLjLVnu3jeHLeOTBscP/Qq3WYSUiaiQ5S7uDe
U4vgIsQsW4nDUXEaIToAccyWYU5XOuTu0hg/s78P+2ed9w+rWZ+WanykzXxe5Vbl3O8kmINTw9fC
vZbNs07L5H0sX835L7iQmFgT6BfWneuL+TeA2gK6DcsoE7gHeqnR0n/OnFfsOu4uPL5XAj/B2MH1
OEZvt8ZZqJQoyQRloJqW7bkl+B/u1Lyvfiy/7kl9yt0yzbklsqaonrcgvnQMu81m4JbxbhWWQRW/
4nRlKo7Egr2QbyyRKPufqX5IEmpG2vqn+Mklwb66Mh0Hd0NineTDHM0OKUEYM2zGJL1pHh6k6a1t
IG6g7WsQ+g3vz+fwhcNIqPBBl7An1ogEhGXu84URNNNT85LdTH7TP40BiQCdrgjTkaiUpJ7XA6Bi
kF7NqjA1qLuoLemvlkrx1FwWN/BwOzjee48CZgEwr9uTmgRZMILCpwf1SuEWOHhl2CEsUMyiKWU9
vsapwAtcjlP4WDlBTzHRrCXuJ1Ib0KXBCviasbMSdah+cEGzmxUeBd6RhdfyFdelRHU6lFYpxP16
xlzG3ZNPiyt3VtQX50XUwWzcDpnxSnaVrZX0m1p+BRAG2wVU2SYevpTg8CR1eASH9EorxastzXZC
0R2FBOD5Zus5609wPrTIHKjJ0f3UhZfgMUtyWRuHE5muh3tR5t5XhS4LIsBL5AcDcDyNO8M6W8Pw
YYDsp90sZ/G/JHZa7VbZb24gWDDmbMwOj4lZ1vkN/G9h35IXELc8VrQ46wckfIlUYdyG5fjP27wU
s4nivi5hpgwnFQOAiIko47aJd1gSpCjqGhqo46x4I34rPr4teya7b55KVwPjX0tJGnywyedhBHTb
bCpbfa20CQVa3DhU+5A9NnCNuER6hyfAO4U9yWgsnZFiLuk4825kdRqQ8y/sMNfsKhdhJz1qI/El
j/1y6NLIDsilAZ1DmJdDmebVspKRbBGJr/icf64FIhYWDzlSVLAcM0fg/RCKUFYfCV8DYCIwcZaT
CP5pp/lOtztm6m1EyZ66/7+PfxpM5rTpMuy+y6i5pBwe7OfjEwA00IdPJl/i30mH948MXDUa1/+M
Hsn6tySmSMyvtOsNbEH/8qKHdgQkauTB1e67ojvRopnPwqyYH+t40f3Og5VyaN9gT7oh/79mp6J+
csJ8IeYdn5yxREro6PljU+QwYRexd/ORTP7LqS5TBogh4M8Myadl2V9iAx46i8N/gzJw02UpqOre
g5lIkMJKOrzgGNY7zNkHdbhDKK14okV8ar1b718Q1kTpUGuwvaO3GRL5XtLOb/SyEXwxMYo+hG2C
CCxe5EdDPJVEp52LZmsfq88beTo1Moln/atQ/eSqjaP1z0HyLNuajUefH47H0TUoQMU6fuzUAAxF
AFn+B8oq8ikg39j33nhl/COw1Ymre432cRnkYPMDJW2PKfuGUK+vjyHWpwSZkU0k+Zouc98wIuKe
B2iswlS0YASKhhdry+I7f8JqlyG8fNjB5xuifgzgJCLRxhrluBqY6gwfSMPYhJewCZ9FSKd38mQS
dQztPFYPLEC05LhGu5VMkXQm8cp6OTi67t9KpC+6nvUxEPxtnJogh/DvpwU6nSlH03riKxIkjkwS
nHuIAoJVbiMKEjf/TWlGk7z/N9jLPWWMA5yVty6WcWqx8Y065xQ5+vkAL6IlFcVmfUQVk4qa594q
MIwtgXG/eys8Rly4473j8nX7+FgO0o0Fr9Befc4F9LEN2ke4v2YRYLiQ9dab92+O/fbEix0qxfDV
gpcj7AU/hC9x/qn0ItopitaVG7aO3m64ICACZhFtMrAT1/+tvXHSmPR1HJaUUNHVsDj6yw6ZdrS0
AQBWgdBW84xtBdC6dAa1Rw+qLqrWA8xlgejkQ2yRukLsG12gYzGbyVezYGpue+UB7ppprFe12aTL
K1VwtFOx2eJEMmNFq/Q2Uw7JjR1TEd+a5sDc46wF4tbCyFouez7PjpJE5FfChXt9vUU/JBFLViG4
M4ZhzTaZOemwRT6mMCXnuXNwNBVTlxK2FKoJz8hU2HKs0AwnHysGb6FWwgqqIYgIe3RuzgbwYwEf
0IT4krkUm2N3kRxsYEmgtTcFJkNJSaBaBvfw6v98NR8VzrfxaWfGCU2VHUIjeWWIqoc1B2wMymRF
+0b+TwwKI/42XhL63rDPVc6C/1sBRGZc2mdMQPRS76foreJvw/LGmjutSz+sE0MtcCQNCT3zfLWM
n94imehI/Mj8yUk7hPhpcJOgbbEambDzXDsDuaXpLOKr0PQoffF8CuoB3+E/UZ34kevBeGKDKAFE
16u+sz4f3GedvSzCHIAa2CWLeZeg5/yAGJMQI9LL0Y+bIwjxNZ+tRFyWjD5VscAJr7M1eyVd7o4R
FNo7GVbZ6k6o+pbHylLH0as4zlG0k4Ly2e/rmxBfj3tADZ6tbwmRNLoNqdKoTvIxt4uBtWg7rfhZ
igM4EMhwHKYiZKFXT0c++H0nyWb/3gX+10HEFzrDBMYFjdPt5q6yUiGNYAa5yQ1YdOOS3tn6jTgr
nQmpKyM2daLCj1jaO68LRlUIY2JjTf0skAcs/5XOctPjr20GjnOc8xqdOAXW+NwkMQxJkLehZC1T
h39P9OHiztNbQuA+I5EFhIFxts4Wb9S24iRgg8InO7vhpGPEMmSKbfSz8yX6Uap411gXqM5AGSiZ
KDNqUr0vNrin4OItRKC16o57xV/28nkjfxjEYTLlFp0XTgowjcUMYVUiRonR/b22f11QCbiYcBzk
cCqJ/1PjLq25YHUGMGrrxwLDkwYNp6p0q2dGeDSbl6j54fMVe8AcMlb8lagtY27+vMGXxQcGSoIM
1wPmpFLak6EI2mjfFBabRvzIrIVPXcGnwANAb4CNz2bqRrLTjM5nVDuV1+28dHIBP1WC0FU118GQ
F1tvrDyVVih3XZI9rWQ7hzMQT5YwOpgEIXtOrJejikCJGTswzu+ULVmin36AOj8HoevhnQog0hLX
W6oMCDglXbYu/S3EVBzIMiudxwl6i+pBpGv4K5QG9EulWq3tQw8WA6xG2seO74o6Z1TQqvQCU7oM
3WzVwFShsum01zPaifY9ZuiXuQtajvoZI7knYpGVA069mkBq/W9kdhi0PtXOo2WWe3Xycjhh7l/D
ZP18U5EeUD8/kYK0ajfYo9V38vk4e9uVxCCkmPyYQljp+A6CT8LxqBKAFbqddktIJ2iHUGuKfit+
6R0g4wNo0m1++LR4kzvKzBJxk61eAd+7NUL5qck3D5AalFoP/bfawFbPet2fwzC0lb+ei51dI95E
A4nLR7+4EQ4t/iNc/jEoJ/Zws5R+a8bY2gEtlOOu4E2ccA9u8tllqJpAz289XA9MkfpFBjkrMqwP
8V94q9gfZCkRu7B9BmeY5xR4AW2BMLe7aJo7v+7qY9wWDDpAC7sUtkOcEys2PJdHw0CiruXLsskZ
w8/Us8iVRGyYnDoezKdJVIW8HwM3AieyGevsakYyN8HfDXVEPAugU0wAzzViKdWadUl9oJO61bQw
ZkC7O1cd0+hQKUCsJJjQUhWmZXCvg912EEIZw6s0t1E2WJiBlxFOZjgVnKkUkci6YYWSCJxgDu93
hcwowVm8lhdeEts8mFvNWz/bZAZ7WVdTc4N3Fg8hhvy0qZNNZBxncYw2UMB/y4Ez/DGJlb+ZrwmA
KcQGrY0CCAP4LdzS3gMKNn+hGt8BFBfFRRVHE0PiL6SerNjo5DXhgrwcEIicOrktcGXWsB//k+Kj
b3HfGf6LLTu2sGcBxVqRoC3CeFnE828OnRUHUcO3SIWFUDzhr6ioMcSFgDkV6Ssrur+6UpChbOUQ
SM+YH69jsgCAegH11jiuHo6liWcCLbNm+jVa46cuqT8qQreQTxipsoGruakqfx+JWbrlo/D0G7nX
vF6wW1rxeNuYtS+02T0Fi61i2CXiuKXUAXE4BBnR5p0XozXMlKh4bryUulWvZVSHfeLWhWkC5y+G
ml9olP+SHE8oMe6eF89DhKRIIY9T+txhMArfudK8XfhpJYuNHNnCndZFEQENf9awYFQtCoW4z/AT
gWods9qOm2Yc1kJeS3QfsD/yUMO9V3XkrQ5jOBuJqGLS9+aKrITARFyHXUj/8YyYVJRy2xKYuRdF
Or8XOt2CjqjsPLFToTUfxGdm8ORSaC0utQW44baHmwfXQSud4G/wfqz+UM3XZc9VzSpEvTAXD5Ne
PYXtl6pKB9tdR0FopZzrVqbSJghAlVb6+hHk1f1GudkvXEc5oNhZqmvZWZMtOHzu/yC01rza3uob
GxT+wqjMyTXO11W2LUC/T8aj9lD8kn32f149XoKe3WvcCxtLDA73ZLaNXFHc+QKU3nigjdHTd0h4
VouywwP6AvVabfoY/Hk9R6iaRc6HiKincmliEBMiLN4cn47LJonWyV5crCdkzPngcm0mfgRnhS6p
Rq4FzUZIRBPQX2SEg6dS5yEyi7Wpw3acVsn/Wk64CachJSUoyjzvd2HRQtb76awGpjDLG4M8Xk0Q
+u/ArDTmmTVJSjNA9KTeDBUHZJR5qGugCZQxJgrtS2RAei+4Uh8zYHXgRiyqRqGdkRHOJNfEo/Lc
/mEo8+PKjY5fW2KMKT7Bixyry4UndJ/3znco8LemHA2JyUhQv/Go43hUoo6I3L5/9aHyajwXW8Xp
CYY4vWPHuS2aQS1hpPI0ZpvIYvB6/GW/B34urDUdtlKTFZJP0nbDonQ3EM2BX4yN2nBFNb2Dlnqt
fWK4ILPWxjXARv7v1vrzOGdSVFcDzxc4G2DjqT+ASMP5b97tJfsIwYvPt92ORnvoLn4G8GZw5/1I
fEbTlsiuD7W6kBawIzUx67zqsJleNOF8qEdpKoIcjxz3MgIYjdQIVSjQAxQMG32+fgGrvGZkjTbx
nlr0MlK9f6luQaUwUKDtDed1NPpHTrjInP5jNfPY7hRGhedsiR0OAkRScwyBA9g6urnlDG9/BzQe
cKO5m31IJ7Qep6cCYAY4V9iWnQGrbsn4B0m31CL5YjpUljo44THUrRJZ79BOzIdRJfVBaflbNO/q
P1iXeu7+6TXp/u1MN0jqYyp8A5O0ObU/wFhpIygtq/uiKJWvVQ6GRA9C3SSta2g7BWKMwa1l25LC
cizz1aSAuXjzWx26KHayESy76CjqVgp0Kgi0lvA3y/DbxCnbQib4ZjFyYg8HZe62/hq2IDCb+LEU
nWb3JReAmTzbRLvPldWlU7jdCO4AN2VpvHcvJR2ZdL54aoJj18YHQu1dA2QxMqfpGmozwnqcSTVv
aDWmp4Hkdn8x3Z7BONEG5X0pgJWqLQIa4fgYYTIwT6NZe2cMur30p6gEFRROwTaMMEC+qCkXJFBo
1uEJrUrk+zOQWOZj1VmgiEfWR/V8geCVTkcFTzdrdJXlf2NVKlDZg6ukMUgsY2ey2QoDoofz/qBq
ZuugC9cTNgtWnQYrT0pGawo6Uf5lSXcxfS+RUqBQ22YvdDpDVe3CLsXQsS1tKgVzwY5FydCCPwSf
qpBa61MouqLVf5z0W44NmKCkyF0A6n1HHSE7WcS2u9CbPIXIz6p78DkClIiIPj4xW0SIAbsi0ZNz
iQaXpORpfOlBF6gCxXiLAVsGAlgar5o4figb2t7t7bj/EpL+kk81sDkAri8gri+dibcOZMSZELte
0iokkR0/k53g2wmW31hgf8kR8So8p1QfQ4x6mJTTfCwkG0OdlrDOvSBTMBIFaHeqlgCZwzdWg0WZ
+g1r68zDzKsZxk0WgxjqBIw7yNtyW3c+aNWJ54fwFOVG0wmoLgOZdZFdgeYsd+ntRlhVQ4CFqEvU
MJZqXSTenxKjt+L4GKy138isyeptdbAWmbbdrPzFu7WYX+MQqSDcaJlR1j4bzLi1zxguU37zV4eL
wcuOWTC4csQ8/vxLPaOZqc0QSggZohfhjBBKruqV0qEbX1ruiLAK/+UUNe5/1ZaFchUJJvOlDhfV
fGO9IwmRK65l+PFThXP7wf5Sc/DSAm9Zq0Uzfhmp1w1c/njdE434Hdes2i6RRfbU/5407Rpqdbn0
D03lQbRVTV3cmT9g8RCvyrFZcyLlAvBpPvHEDj0AkE4dWNsHIcJdVXWI/d4af0j5YWqhMvVBSthx
phQVlxw6sLMOGNfTegZWeu/lwrf/G6irMgav0h4g/ZeM1TS94JGuIK4lkJz9eTGI3xW37Hfl0iYV
yWpLPFT1lF16RLB/EpgEWsHbqRXia+7fJz5RlKdj3gfDXZ3IPpbXrvhcw9jAirqwNVSBD71VVvAG
5tE8JEFdLFj4HgNe2/CtusjsVl9qC7YRU9YWHDJfUG+eLzp3kdAkYhgS7ngL1b2jFXQ8mKomOgAd
XbMoFuLMylk6ULT3tJxVsC9gFKOpPjnh5LzSpWGFCC2KIg1UZrLvMxDjDUJz3EmGG3Nc1DTlGcjm
oJNztF1l2nOySj81WRI5U8Q1Rr1wZsCyPF2HURNZHljiigxaTRcLE5qpx+nxNIMdchNd3G/Z81/B
WD/dmhYxSIr78NCgs7dPx/+1ipi9+kK4iWR9RxwtP4Y3QZItvKDPJQB/9N0ej0QeNdbxdngd3N6v
1SM0/NX0tBbPHHwmd7hzAmi39kH7+y+5dSu7Z26E1vfguTfRW4NWVcokpVoZHFklieCL8lSxkq+q
Y1r133KBY/YmpeNuxDxlGHp0tSHrZjvyHjyQ5K4WGG7FrKwNJakxPhD8dbKQMxBxknK/jQOfCxab
m7sC6eZC6+E7mZhcgiqxhTrQtSe1vP7/qzE1Tv85CdYbMD8plhlG+ZoreM7jCq4WJTcWDDiFhi82
O8xZ+VPZSHYSB2+sF423wd06a0Y2HTGkzqCY0Y6H0Qn7dJ13G3dwVN7y6Noo+UpxChdxFft7+p1X
DdDKIN3L6PupumRokhGHBIl/F4tUUrgCShku4RRdhWGbE2WH14TW1JlZ05kurzV8ktPDQkYBCTRt
UuZ5aILi0d885Ai8sXBwPqBNDckwGpwIJqrhfEHaMryuBrbvwxodjzp8QT3vStI3bGI4qzZyScP8
WwSh9zne9Iylv1EfMMH/+RkciaM0fbdVV0mhkcH9IBlg0eOXZB9G3JP25+MYwm+RiLQ7ELfjXBSc
PkzTuBEci6/AI4ouHbodhFbua3Wc5DhVW8/cu3wSg/9KMdJI6hFkGpiw8dqmXH27vFIGCNrT5SRP
yxRQjGSw+dJmw7CaT3+Z/dgpm1XFJmmyid1oxdtX285rEt33kOEptLXYStIqnp0yF7ki68BfSDJ7
R+A0dBs0oIekt+lL80wreN+9wiNli6wqDtAyLgmgo5reB4wt7SViI7rxRsIapJhJVkQ+Humamm9g
R8ttrU3oTs58lvbSxHOFNA1XbLnpStn99jCUwvbt0v/9lP/vmafz63ON6d1iIa7Fy6wxxe35eAFb
joy4ALl/yrMIyJt/7S4or2Iz6ikRyu+HUYaQBL45bNBe2WiGoGtpDs0s1yhr1j9Bh5QaFJQxCtZL
tLiLsN/lE0e5aJTSZBWAXEy8ec2fZi/wIkR6di6DoSXP20JPv4L90z+3tQr/70fSYUZrpeaE0RUf
u/aLjMiWVSpZqU39Rqs/CDeEnoaq8mDAMKcmHCEvOGEWyzoKwlQZTRbiHuLOc2KFRHyu8RUVSvC1
5tKuDQvnqwbHkC1pmDIP9Y4Ji1uRBXJ0uHeO5hsC2t//L5Brw4agGpRf6UkI8EBkKlHrc/035+wv
l7cjBAd+cLfP+SXabBL3Bva2MlS/Y2ISZTfF6qh+NERrtckqqphBuOnO4odKVpAukaXi3pYmbmgz
2iofDiiHoMz9Br+2V0oVORZbm2hcqclnl8m7fGUBLaFgLij1E9bio1POofNEQG2cS0qNk2XYYh3h
LdxjK2XnGoFDQq/A7MlOqYtCUCiXPkLjPhkQAIZApLExDyGvdEekE3O7Toqgag0YUgGQKZ36OyKA
1GI5Js9r5WyM409aHbtkrssPil34HhI/cRVJNQ+lac2N1AWnBQSrBKFx05qhfrq6iT5yn+SUFlF0
N6qWxGFbLrrHuTwL4aGdzhUnRN4MD1DMt98ZNT/006fj2mDgu22Gdjc0ruQy8Sr3MD6w4jQo6CtM
pzuzW4PSCQiWQHpoKryprSW6y7vpFIC4afnHdTn8F9uf5VPe0UGTCcCpELr5pVyUlthrzDSIlLqu
FW9yBeIc3pEZMPrfQfo5qD7DRsMg3/ae2b4JMFtgSIAvKmLbIrgusKcGFApbkJhgX3yDri6OAFtF
rrxji0Z7N8K+B+dFZNqSiD7xFZ9r2waO5VifQorQIwbGyWlVC/FVuwMp9pKYmqMxEKTMmK6p5iL4
6TJd+NEAFbkQbP9AoqNvTi/9GYbGFz2Fa8MZTgrh0fyOuZz3w2VOpq3AEqEG6Y05aFAuZyHMmhWX
vp/fjCV12WSblvKxAha8aEyT+S7R8TJfJ4OpVFNPJvjr6wkBxmXMligJLlnS/VU9y72lAD51HJQd
x/Y1q6X/nryThM5L/o41htyONVINoo1s/Z0u3YMmAQFf2qQEzNGAOMO3cbo2pfMCRD7YUxQ3p39F
1gtsZhrEersiq0VGCaz5KKRgtGrOm2KkoCUt3GnzDNJYycSQ7KC3v3EgbM6euKvL1re2dfQTfXg7
HL0LY5OucmEjRYNo/VrdE5tkQyMMF49uXpmYITVEk+5hi5EXoFUmPerpbvCCgRhWT+Amzr7J5qfy
gcaIxmj3MJd/4/Q7pNcL1hxWCLsb7aG3BIo3d1lCt3YjxuBUba4Wmpfhq5MdBwKFvTgXNsAz5CPQ
ehnQT10i+wfZyRpJPuvUtDk7nuv0r4/vxpGfB2tGcHWfL7koPMKXRKm2Mxr2m2BTVkgdG97sdtHI
u3Ox449CPxaPQfLhKNNbq+gyhCvuo2qScuMdicam6rq9BIy6CGf+B/4L3cJU5EBvTI83gC1zefHJ
wYXbtXUXzQRWqnI73/uNqHPg+kc5D6mqWgz1MpMq9ItWYdQgjIcTywlie+l+ZULwGpboVZYmHsrq
VxQmg5V1m33MdQU+hKQi0I2wPbu9vvOdrqqI1gDfwOmnVgY8XTVAs4qmrsiTN7/YnGxhzRfKgkJZ
ABTRYX0FJ2Y0Bwez2zfTV76L/ejcZf2Vuk2wVaxhL9FWaWxzbwnPQCa3RvJemTD4Ayfs4R+9ByVs
W5modMzqWnWXJDkqhe2BWKFL0AvnlNwcldeUf2k/7IByGXpLMFc4cdp17NSceI02pr1noBQk/SGY
EbVxg2Pzih5rWgTRvKqczrCcIycXV+GyE1jN983jW5q/2yT5L3DiYccNVhnu+9hSr967KNfScyuE
by18Ebin48G1XeOlYiE+jsBxtwhCv/Dkph0bI1iDNlgSB0wipsTi3J2eK8CcucB4vZKZCIVwWmUm
RU9v+bNfXrmSVqNNQ2GClTMPobVWSJ6klXaj+lkOVziKQaTanUVJM4gPVHqUfRFwykWuyOXfG1N7
/vSRKH380euTLMM2DLnP1dpwNwlmw1r2PpId8QmUTFBjM+eYM6vvG+zsRqylWcqRGOmZfKdh7rlj
mgBRwjuxFrV59fyHXPqHBtBgIkyhxhkbloCUB3Am+5pln76saxVSe2NUth3oqzQQM7FLX4T6/bQd
IROt6F8BNVHh7BAKAb8egz/A03TuwC9jagPFScYQp2p17W98SY8EG/xyuoAYNpd1UrcSZ9eFYdwx
+1hfC49koYhd5YvzqchtsZ6zm1kI/miqstjq1vXR2eLohIcGzc4C4XBkzyOpX5UAyXIG/9wIwmJp
OIbuMuhcATnK6bK1qzR3/A1So93WbQ4ukP/jE3TtmxmI2+P+vd9z45erbVlUzZ4m13gyFfUjwu1H
DrDb6HjESokhteR614mezoWe9YcoVjV6upmB+0x+WAZKf8LOPwwEfiju9MXyPxRM2foCZmlsHZG4
xcsT9y/4+vZ+ZXIA+9IsI1ouNwPnkbqvjijgqyHyy0HeBl4Vj0XL03qzO1S2gVJT4UoJpZg5bSxP
R8DXqnYfWZEy/X83FNVOA7oHL3+VVwZgrFLeXD98r02tWh3uDa5CyQ/PmlkKki+gzLQfJv3cl/cL
2L6DTPkUTUZBC+GNaoaWDgak8OXdzPCpzRxZkKJVRIZ2pElIuR2lYfe0J3EbIubaOt9e/luG1ZFF
bfypCyQCbFBo7vCqQwHZuuOp18ocYOzUFMTkdWbu1i2bSGUTGBIjTC2os4I2sMA2FeKys/tUwLRK
U8rcUx0eA1C33hBI364eb6Jw7ey2AtjZB8HWPSulTEh6D2zrKfjsChm1Pi7vpf6FU83NeQxeiVFz
gngQiV0jY6JXurkeYse7zJfLQ238ZU3nufF4FvnoPDgLbm+CeFkZeuM3w5cgoDNhJLiYw2D7JB9C
ZCnFAazIR4pVRnK+eWioJPI+8+kyGrzYJlXRWsipM1bzv1fA72S5ITPTjM+ytDH6rUWANQWwU7Po
dWPYLSwWL/699u2C7aoH9o/CltJCioabdpQTFqAw1fq2B6P1/qHajV7iIfDGWPFZJaHkFO1gMW2T
t3HyRSIZL88qoFM39Xc/UFMRsIwDM1fa3zVAVL97U7DWzr3/QSBG1Ie983/EE4W6nbvakFyMeH46
aTK605Hp4ocUvO1qnxUTFcZ/mwZ1oW++xpyp+GhrgxhedAWX227q/3q+0WJ9FDUj7fop8exG+Wq8
RvdT4JlAHn/nTZRtLIJa5u2ZSQobuV8KJg+QUjCVnE8IbNdGNCJm8s9YydMLWrvfUe6WBmFyrMk7
uPdd9dOGafwtNXpxWR666snXTz7acH/0DRwCJnWmqYm91dIJRDv7KXHSI4/xp53pvimyTqX5G+Gp
xt6go2f9NdYACmMBYr2KX5QAY44uY6Fv0OkUhlsEv66yUEsfSxfDVzOLP+yx6/uRtFIHJtM6HTka
hLJG35cSeNy1r5diXv4YRLco/ej5ojFrC7YMMiCwu6zU4eIGCiY7W5eOKefrX3yzLjDvRMtOqOt8
wtJeFOVAH5nT67OfMwPgQg+gnJTy70vUJOlybqMADUvgPoWx/dDHUU8j9WAq7PBO/VoYQY7Julel
4RVf0932So3B6j6toJUcxyKKzg5Iqr6b1D1qGmKWF4Lul3sqgrkjp1xqPj0tMXsl76cBERuG/WcO
tb4azzKB9QmllFK3hMLnzzsIsavLrpHDmLA5UYwtmqlIWzbSR6sF1j/cj7H71qSvJyFEDieZK7rH
mGWbc0R3TJM6OdvyruLun8GR0MOI6KcqVgSV9L/GjehzKoOHNt3V6+3ALOJrkd2OYjaS+3np/8eA
atJNvUp67Zu9HBrJZ+Xpq3xWR5UMzHJ4L7hAg4/1gBq90GAg/OzQmCOdCkiW0vOoN+sa9HZWWszd
slTiGIjTA6tovMsPtSKmx2FC++uTG41tTOD/Jlizmz7YkSzsxgkOcGb/CwotPdpIad/ZJpkaT3Z9
hgrmLU6eq+X2gxnyZT8A9/QCgIiz61NmmicmazCIOMitm1P+FBglCwaGDHAM2Tp+gxwdUVbnXoxG
Z5zQ13C15iNLM9vcGNSoudJjjHOUFAktNRlDQiNz3KS7FYzBOnM1b8WJ26bvcQ6aSw83aC/+/u2Y
uA49HGl0N405fncfZMlDcC8s6rnMB6XOlgcCGf0nyXG9Mxp56Cku2LU2aU1kZngX5UPER1TvJt5Q
KhvwLuB+tK4otechKUHMv3fK0TftDcTZChzY4iCW9Ow2iPxbRgJnqbc/jNIcsrf55N7pNbOEq9Ri
HwKDGlR1ZAvbnXbH2VT7F2dVL6r1eIYPR53uNIAiV10npgp+kAlUbP8/O0QhCRb+PbjZgSF1eoib
eea5A1Z0nMJ+3jcdwmiO2wOlmfYojS8xHEaieuC9VHODMjuZ0BNbQm0XNv3VxwH4C4urlYMuAWGC
Sd1v18U4ThH/w1WpPY1tpVYDaLdsGwOG8H3haaHKtHxzMk2xPgXku4Hq9du6NQgNcDH2sYQ3XYK7
ydFQu/PyHBeZPzVtav5zfQ3ubLwKeEuZFZFHefeYrEj0monhxhQv6ElImdw8W3caHucz57Px/o4k
XQFgoLQXScaXaUSRmWs9oERSsEBvHBPxHLx9w6GrheBwv3/F6ohe/5QI0n+HeAykwP/gh0oJ7RPN
yZbHko1SZhg+RSUoJR6K8iHaGsHF/kQUfntWkWDR0T7CaYz/q+yqq0O3l4fs4EQKSPd+JNTb1O1a
i5GlTaceyY3oTFc4RJZ56OM7OqT2Sz+OyzKTz6QdLMSPv4LuCNHMXwqopYxROPeDcjQPXFAw69kE
mUJ3Rh0zEuFi6+ZKF8CA1IOmtFv5wvNzkmfbInv1a/hsauk9J8ykUL6ryWlzNXWGPIOM1Xb96Y3q
Mnob4Z+N70DDco6GK6ZvpOcdWAGTsbp23PBNJHJ8mKcqsLsPnuSW8orhjG+mTuZXbVQmmUKU2cVN
ELUGLvpEIGG/HjsCU7D38CoU+Nqlyy4qH8f77PDE5KFaE9XMxD4ojZfm5iyUrnYeD9S8XHPp5t+3
CBT8f4avqfpLGmUFg6KlFJOh8/f+NTrzGeSKnEpZCebOpwQi0qatjir77Q3nQITqKyAaYjJVfqcY
Pgu6RgUZTZw9/ay2Z7OdCHl2xMYzaaHlr+BbL5Fq7qfymovf5+6Ld1pjcqcXRvIbZdE1rG4OQZdJ
NXX+dzwlStyaA2ssC68Ba+yF8I708LdmbDfVw3yZ7/9Pu/5EKwu21aclERv7MGhDHpM2ofekSHEW
7KLZaPZPZftuZoElts+ZlzWNzpoSMRy3JanMPtrzvw91icobwh5yNsg+ChPkOEX+g9y+fTv1DQpU
RM5NkNiAobPaqyRuO53r+RdA3rkrt70LiFxcbTF0DlKqH4wbgtaP78UTbQmdN67WWzeyYXlhYWmD
nY+jMYvNho3vx3EDGZB2YEtZun1GBukME2cfP8OmlZr8K02Ptfg3Jm35CeYAaHpfHIyQbOGOETEw
LhiF0l6BgNwpliYGaOgOwdTKA09c6IlWnU59rittyZqFB/XVrA/yE8mjm0WIAgYmWXpmlAIQot68
GfL/Pss05j/X9ijFX7LcwdOh4oh5edMbtzVsKRECWxTu/MIlgM/3jCtnK3KY5xJtA7m8BOH2erkX
Ilq0tGf/U5uectA9RmuzbT6tmPCZHPDpUaBArt/BhrVihlbc1dI0Ncg/U9uUKu2GupvmNN8HMT09
fbrBiA8GVk67jzoIW0gKbu5TbwWqqMNWMOzCcLBUuiGQ3K96129PY+T5ZMNoq98YM8HWXOie2qIm
Z4d6jQTZk88hgR5TugIj7VlEIuKVOz23sa9IyhkB2pRCYkz/ZtfRNbDqGOq0Y4VdkxRMaczDDItO
Ihp+PmOeZLjXAjiJbOxlilPG1KF/CIxUS4YAmgrgCNcI8lXJ7Q8a4sST5cPShpP0OnbsDoAFipWp
aVAdpzAeKqAZF/tb4AExi/lpcpjlMRp1z7eVmbYIY1lrWjEsHCZRQpS6lNR3/ySlwGgmfcm8MlhY
VsyEKGcBJCqgm4qtmKpSDRujjRWhDAQ9VVr3G3nqT9i7uhewSvk428BScC9oXlimnKlyNtm3ZR6S
MmUncCHUVNhF4bKCu8QmmPPMB1p1QAnmgSxPaZ7R/XPdN0lvx75lSYjWyvITX3RhKI0Ea+8+OfG7
vW5Gl55KrWVVAQCjZmvlWEK1vL4ivdLFR0fIVjQjPFsdmju2UnjynJfQrkmuQWA9x+WUMvBejyiK
e5h2lw7vFP1U+PR+vHEZvx1CGRtUVvJOxncXnCbNVq0bPtZkYcpIqsoyivI06jdM6tybTlIXp8Rq
fLz3MMXYavLz9xUkOTVK1yLS1RVBX6imqNFPhSrX4WL7HNtU2bG9UIvUfsv5mCxy1Ik+p2WP6YHg
1ODlABAYMZ4nkCB94akByn5UORhLvrZ4bZKHtlbfyG0/aDb4dwcENCLD4uzEWdE0h2dqHdYhiL/P
VFylldLqarFk238iDLltqwd3bJ/HVPfbo0FMaT8nAzcGjGN3Sk/yLEjD5eSkOeq4BVN4Q2Rx0LdL
MYY8X3CyOInwcr4nIiRySbxsN5zBASLULYPLaFjZW3bZQEEDun/Ml37K+nw1EIvOFmyHuCifz++H
l26UhO6JSw/RwxJoSi5zQhmEwmI65JpViBBeEgaE2C3mIcAFb8YYfBY1FXjxhqTJd9QVuvho0zn3
kGVYrNk19jckeMTGRTFQIxY8njWCChuyCarTu6XQgWT+WHdGIBoZsm3mVTrVMJlNFmUQmzGH9jQn
in9SD2rgDH4cYNVXzR16z+Z6skh8kvU4H/53zxFzW6NuSlmrVREjQGjl6XoxRUTd0YMFQup33v8/
rWS2ZRmamaXx5jVlBknZ3BEEnbk4mWZPAlGZsca5GswcNbqCwGwFbd/UWi2OpfJR3WArqQ9YxQ8p
wXSl5sldcVlYw0xsAL+d9hOCHn2hqf/tplQtobtva2o6hehqRFtm2VSSQaOGWfHYgNnDPAD6X86p
OhObDv8eHpEJSvpa1fBZ88TEt1n2JzKD5fPnQptXmMXkMJOox5X71P2EQuF0oEEfiqcqg0HQEQgE
NhGsd1uar9lXJtiVGh6ZmFhENtxkzmQgqkLJc4Xod5aaWgNquqW37ciyUrMjuFSFNIhVCMIOGh9w
AIV1JnWW2VKD+nE1YDvwNXo4+1WzhnsC0i2IymM4Jlc9S1kDX7giwgBwfbv5w0kvdMX2thwAhrzi
QdaCrnbpUl0IjcL0EzinrWoW6xgFJULaPYqK+SfRDB3kLGxOhSWnkElRwJ53Qn4Y4yTWD/Cd+IPc
N0AnDJTmYjdOlA9gv2X9LAOo1E30pUOVdyVb0sNJdP9fsB1zgEuMfP06GpHqp8RgpcurCRunuxZo
1Ymcxg8WegxwrWdEL99tccN0EPUDiIrB4GmnwuCbQ8SjNhdzVT/aDwCzYszbR6HHhM/ELuv4HdzJ
+vZy7Kz07xikOMA6BEOqFuS30mnC9hmDQPC2jSwodKuF7ke+i1lhjXmBFqDe0JeVdU8lfM8CsZH7
yXMcW8IoH6cp43swFjRfsWban74EOGcObHz5B1fIeunA7qLZtAQrh/0isqZK/erYWX5fajblUuVs
CymjooDbHLL1cQiNwgwB2nmQklSgqo+/SMFs8hgmbNE8zqP1FbX0W8ecgawSS+i9gXaR+sNHxyVW
V7zxl8d55svUHBf22juYc2ECThvdfYpoYX3xa4/hbo8OWP+H6iLzqS6kbpP70u5gTPOhX+OLpA+/
JTp11OCVHh8zvQnsavpjvzKp3Y2WPR/NfyZAGobK4rJbWcukYqEi+oK5QkKwwgfIbS078x/WRSF7
Gi0POtDzbxSaHTfXTKVZD6TV44hgKtz6rzbz8o3U5yTkq4MnEpULtKubWwAutSCzGcEnzorXSxcZ
/lrmj8jhPnbfF/cETrvA8xrESo/3KB95BxZJhkEABtJlodkfeyup0qu+CgwgJN2gYu6ZXNdksCwF
BT0jh9z1ZYyTEANLyQcfZrOEQeOkh9/D0ctMRxj3LN55pESqJbXFVu7lxZ2QZjVOsi1yCk5at2DP
MKdH3LQe3+CcRCEJvvVS4wV8sssZZoqY2k5M1ry0Di4u0PB/r83Zl8Lji7cnjSnfzfnPxqgP9yaD
hEN7isNcHlJC9BFkXexcRX+rMuhZ2hC804hgUnrj7+uFioHSI2PxnQTg3Zjt3MLeFeRoqvARJnns
JnMaju5p8SzV+aCwAlejv/qilsJlWSgznUuUeSRpNEkpU69ZuA7Z9IgCogBlJTdEtFFb8xfRIBaV
8qx/LSqFdYp4lNXwjYCC4GyA0TCURM1Wxwnvdi4JqhOqFq8EKopFcLJxVp+wm2UOTtR9xK8nCCQw
DMO2eAsv8dfpSRwVxA864+QrzGb5rLntab2mXodoLyDKQJM4eHhCvDRa6yano02Y6TAg/CgzbBze
pAOfKSCZLADrqWacNh2HPRpdUuJiJUMosw1KaeiWpUJH7EJqfY7Mt/FXGOFzgNe2HPwTnUBZSp5z
ecrUMLhL3+Rlu2ksUceMHR19yHQ752iNEFPP6T1APCcbapy5jpm+evdCDi6/i6fX8W9utY0QZ5nq
9GYh6Cokb114F9DNbL6y1ovOLILZ8ILMy9ZgDbjGBTNXDztC5SS6yMJQkBAduH2kPDyvpLld3niN
JbX55Mfkk1lWHfag0Q3fI1ERTBK5gOUiCS4FLz8xqYwaZ5Pkol6XN6qZr/o+3zr48Sejatf6FyXZ
xH362sikRp6gQ9JhDukPRGLVFPN0ZpZaipGoS0j82KEOdNo1Qba8NbC3IqtCFmBMO4ozDTx+8zYx
xKkeZuc1lWRHUpyhglNrn/0RodLnfUEL+0esUBtVT7FPBNGAOcumJnuqcPOnNjziXPmfqNZmfpvO
qhnNuwRDBMU+pkt6JpXSwNQnWYZ9N8HARCwl2FScFDdZZ6+BvHnuxpo2TTsVCskmsyAdUXWSStmV
BLrszpo8QFVm+qJqq337VvpNwuEJgFlZ5zKtTclTKfFoYwsl1zCCz/ITNpJppf/OjrawSZ1ykJVt
XBX5AGaR98dBmGm8IA086QSciQSwrv8QuVlmtD7SWUWDSg4yXhb6lHOByQUBxsBSaqt/c95HXyft
9Y/OiuD5vkD+PCTGjzXM3nUhUn2xJZ/Bhyz5inHQtuv9ISkFakrFJRMeNa8fGimGh7dYXdS/KK9i
rVI6XZq//X/JF098nfzXzqnDO6xq0MRWb/PVzhRlHvF0eWy3orkWR95JoWb3HGNIoNqnCg23aatR
87kHFtCYEEK0pvLL114cEUtMCu6Ps9VDebFyNbhaD5DCCx+PenkiAfVfFobKZrX1MdBtghGBHjBt
RYfJNDHSQNj4X4BFaJEQDljlW+/Ch7XduCkXCHF7HmeavvdqqTw2qVLQi+zPABwW3CbvnNuJfkEH
28Z71WiuO0t/qLKtAmjsOKeqGWw4Ztb9JFZkYQGkc6VASOyiZ4l33+hsoQhRBhYmjrgO7QMZyjy1
StKWkS22VOWsKOV5YJbJXlCZiw8pEHmpkca5u2t+/Qmgwkw6yNZZtEUJ733qOy496KaRGpusVQB5
zx7nJbEaRD77t4DvI2pm4rOkopEAehjlPFUkj4BUICsFlePVHC9olL4W4WTX1IMgYvfFf4ECKcwV
O4ehPtGdeHukXzeiR1gS5R1y2KtE5wzEOLYSTn9Kz+jckDq6M+BlT56gCmClIFMTlM757DTMW6Nc
0WNhweBZlqU4/1tspKu20utPj6GGxE6PZDLiXSbvRYJkIh7ruaG9uRiwmVfYiuu8eSf5TRRThnkw
8/AbQSNTLX/vZYE3iJRLazNKMfrJ7fV3dSm7dcP3FZ3CBjVvu2orpAOXtgqqLGDcVYqodwdpyI16
/21yI3aMY7M2LtYNbr5IkAkGlNRKbq+6SwndmTXfY8e0SxGkHPW5lFCYxckQ8Dc0jtTP7eYz7dy5
SQUa/QM3na32d76AuN11dpDbts7wNM6i+xnVYplWYhPGQwnUKG7gbSVscfx0sJg8rmbVTe25uhYc
6g+IpFjTOrTTF2ZnYJTW23oWOMj9RkYYHosKXY7ZwAT6OaOl4hNwfT662vU7Wf+6VPs0nM/3GrI0
28SdBJ5DrGnJy3hnIS+7iGxtx3GEmANoduaGdUjtGlKogdfMtgM3MZNOFjiZ6Iw9TzLL3rguVkfD
T839M94Qx/kKU99eGHoIf0438hUttUBz7j4k6a6Tyd16d37OQC/jTjqc7uveMkva7oFgPdSjqXjC
vbRAcNywbGVGiCzcJre4ChI8Rf8a9TZbDY9gESA0cyLjcn8rdsoltovKmxL1IOfstevH+vVWFw3h
kr4Liwyoo8yV2iO1otm/fRopmAZUkgOaA5kSJ57+ukJLhxOwvr3oVcM1GJEhNjxdAcvCyEiQ0MPD
uUJbPA5EA1QC2h5s6HYqYuuZqJwb11OxB2n8tNt24MyQEQpzxtkNRFGz8y/voya2yV4UPMDDs5iq
hz1e5yhvJkwcwZquUrEfYXxhvswlVizx8MtUhvg6NOHlV//wYSjOnSsTEpsSdOQdMa6x03EBv2Nc
Q8Ex6ZvPL5hWjX/qZ65x0dLLuvHo359jKYlaePM6g4mx8LNnohEwRpUlSFkXCdH3SyEqlClgPNcj
ytMiukJk4PwBhc8bz2PklWe1gu7nXkVmN2CTGbXX9K9yYt73RxmLE17zUX00AZV/s74VeatmTrpO
HZdtgstmTwTSZ1InBCjydGYJcLXb9dMPXmYA4v8EyU0o72op5LDPimqOw6U6EIeNtkZZjsvJYuCU
Fuopn1Sd49eXfOY1YtdO3e1U3HOL1dAyB710W1JzEJMeVq9GTndhKL7rOIldZyKswD1GcZlihTpb
/O9fDH4/xHILDEl3b60hk+Xua2Wrgw6YYVeCA4kb3dIRYJT7ARth0mUnGoNyPIqBwHeq6D9ynSiA
q/08geoVbQF8XVVXFHEBl7HF2TxG9t4H54YBTg1nWRNN6Q74d7m/5r30Cdk3dMO+xNtZsigKmD/W
pBP6rulLIBQvvFmGCvGIE4xlINVV4Hwf3WK3UObr58Db9mZCqWD/hCnRTHe2aK9APvmkEyTflWQt
xaCz8qGfgvfNSDtY7oCEyXGujt6IhxmA78CazDm47VxPteZ3GvgddWpQjZv/M6WlOCR/JNOwUZ0/
MmImpnn9ZNxs+s9sBtIz4WLPkRBIDoyl0EbU4ALVeFlc4TKZLZ0tY9+Amtuwy4gmIfe3QX8zrwnw
LcuVgf8/PVRZmY26AMJtbjPLKkOHc1mrnD4vjK90QsY+FxETOqNAdgb2Ewls7aZnTSBoL/2cSK/3
PLyI8g1+cpE/kgGpSfiQCCHmo3GIPToo8WExm8LU91LiHXcW8KWfO3BDI29Fe7q8CdvSCwx6o+8O
4d0e0iSkHLf+QldD0AHmJ+Nth/wUA1HyYdODd/7k9+ErMocUwdPzw1YnoZEP2kL9l5fTKkse6Szi
kegY7X32RWQzWZohIbRMpWIdY0Eqz1SBK1NLV+wzUp5iY6iTKJoUROSUoO5/TpZ3KauYyM8eO3Du
hl8+tdqd3ZWKWffxW4SsHt+Fluv3xrl6kz6oiho9bJy9Z5AdmKYL5Vaf7z+rip8+pcH33Xg9C/m1
pVo/tOvR+N2Yg+MdQmFf1ninxS1/WF783afzvghVkaYGA+UgQW3Du3zJv90+3pXqpw0U1NTnFLw3
9PHcyfhGstFVx+cR0cQtHlVtINoJi7Ouh4ELl0GY3S+cgLKloV3FDuk6ACNkkP7L2YnKfoICqnJq
mExDSZv+y1ZYYjHVFT41PRPtXzwVj3+8Jo4Cp1Uz/ESVXSdsRcbEKtcXuvObusWVNiAwX+02KLc7
FupalCV7tNIK+/+AjNHr/cFgNjKPNffgJtJwKl8Xf2Tf+ihFqwUCFwU1OMWawrGakEW8MY2wQY/7
SCEZxc6eU5n001rrF2/6wE2DhY1YMxeyfT/P46xDB8LBfPaZvy4J4hmeX9M4OpnBfbail5+Ku1b/
u7s69wD0oFtvBlSLLU60CJdIu2om35lo2GOGQhigFKQdV8KZ9EPwj22uck4seJhkUziXL4t+QG7l
JOiGy2qiolT+WN1sMoSqAqaJwCdGfDlnmNmMUmpafHVY/fxBWfXbvSML1y9wBnOimzJ9d4lxi74G
LGNSU/O2772yGqIRncbz+KxZ1Sw1lBzHZHeKrC76gkAZzpUPl1W3bUidNc1EH0UPvH+dFv8rMt0G
ht6OciVnWDec95ggXDgFwPa5Mzq/FLkWlhaPoRuQIwHiwCxo4ODZAwQ9M1lQr/XVlj4nwlXIXNor
D68sNDH08JuKmPhOocgazOR6XPlpXFsJCr5tbsbGtRDoo0XEGFb9S27vVF+8QWsIUnSiiBGDSMK+
lbIbcDZtHynSeeSMnjK5QaI6eOAqY+oFNeMB0ao4u5CFGwKlrg3JdKp6qUrGNIG7zQN9OaWe+SKA
duBBr7celCYTaADK4XFYDtvN2rFDBPce1s768mEJ8LIIgYSRtpJlYNff707Nw1dmehTdSgZJ4qor
3Xt6BgXzDwrgQfabTbJ6YnhJv/B3HQGc83VlFz3XuOz3V7TeZ0r7zShyZ7XlJ8y5Rj3MaeDDo8Wb
dhRgnH60EqfMUkdahsGAOdlVUsq9M1pJdKJNd2xTvWMj5po4vZW7srpSRxjkEnmFnuMkknXNL+ph
4y1IvaYLCu/VxwOT5rJBF4XvyvupT9pgxMoz/hs+5RYIVtAFa1TXAM0sqV6CHET95dlCZzerHMtL
ICS7HYnrL+giPj2BfsCCxUz2UDF/A+CyW5s6+z6A7Q0kKEkhbiR+GJv/vohcaZzdBVRRmY6xNTr1
XofdTMaecWWP7AGZceagqj+TcFoLHmWolr4iS4H5AkI9C0M+/9MB7JivxPf0DugAFY9zkRmACo3R
13OFuIPtFFc5eJqaoXpNhen510YWrT4Lb6HoCHZF2gVH8NceU9EIwz0cQQVkJv1KnWgnw6uoPS+r
t48yoccYZVSl9UnzF14ebY3IwBgfgzq2pziazds7ElUGWyooYdz8pQBha+13kJw9qIpU9c5Nh7Xf
k993wx9M1cWLWeer9yUFl5lyP+MBjhQOHmjRpwKUOSAt2kdVRQnmZIg754uvxtXj2feYSHzo91TN
x/bHQSN4WqpBLDsRxG+uMRbVlX4Nn8PB7hQmNMIbbdbdE3NdJkP7XkQgyGANd3S166aSPEBi7ZVd
iAesqnAwY98lArDQXecStCrQTrhtrSogo9/IGXrAo+0IqJZPgJDRbQK8jD2dDbNB2YGIG0+21VqT
kVT7o5CihlIWtz9ITKTbCO5ZsoIY19YkksM617ysAOw3oBUHirWKHAPQ14PzrEl8gz2i37ERMXBP
r8Fyx0fOSIpbdz8cks9S+DYKop9VmHO/0aZx+lhH03HjMTB7xQwmhj0cW4z0EInRInlSaWgK058e
IIMw6zYf0PGz4la1mqsWTXF/2sOx29zrWHjHgl2wV8aarEWnjcqUOpD6742VVJX3YDO9ah07Q0ys
4GM8ySM7KlyvmXHcKLRe3yfAgDWwksnRkwX/V38Zf6moGAt9PqMX7TSsTSIK2tSDRBX8IEiuCSfk
JN9Q178W00rcWEM9xg7p4PhN+VZboYC5iHwrMGHMuq+VOw6D+SZiqiarfjuji5uB8XiKjflAAfXy
kCF4+P0CKNe7RufNX0Ct4vVwl6OpZuLowPr4SRcxAIfNmi/psSc3R5ciidkkSfiAsP/JaJNR+OLD
tEsIu80e5fdq/g2dWSvSvvhmydh4/7iZVPYfFgPbm90LNixcrfe2rTgLlgn2F1T/PcskGVJq8fbx
yx2JYxLcYAC2uzsf7j/b9L3qZoSU9YZS6NF3a6C24lOINno98/DLhEiu27wc4g4Qo9MgSLf+ed9t
tF2q470heFkNBAOIpRTtC9wUgvGLKyb02s7iDSROitbCqWYjCZdWZve2cqEKpzgGHMnXB/8cWqx4
b265kAPAsdVTg8fjdHZNNhx2cvKh+c+T4lRUb6d9wemWx53cSxpeHIGyUQxKzovgRWFZnRZrjZ0h
rn1PAfYJeo+iL5SiKsN1gjMhfpqxTwSCfJ/bxKDEi8ESu4wXZuzzEayrKBq9A3to+PSRFQsDJ+3v
GTG/Q77K2/58s9izBL2IoIHpwo+hgOUPEoIq/QoOuUp39UZphdv7PXb5bjo/dYAoNgeW5ZpkJXmF
F7BVWY6+kJyPMMvr1iA819/GLl5RBX9b1rqAm3GOnrK5gB6cv/ZrmevEFhAuRZpi/tIrTn/ZB2Jy
LrZ4GOFhFxnETgt6NvDTsTdhjykSXZwlXMNO6rlv9E938Mc5nd3GHEsOw6Rkfwq2COxpttFHdaUC
OrgVL8hih+zob9aaFPQrwd+noLQHSE51sehmMsuKFqfM9dxfrLbGEIb7KnxPSt+Fz+4X+eHfHLK2
ab6y5tdqE11c3Bryem/KvEjyLQK11xVVu590RSwc6tcXEZSAZHGfUUk0Wwsmy47S5cgdDp42VZP4
ni1W7vFnLgzx16/SZs5cddnhKWqcS/p1tZwxavRI+P+bu88i45sYWjie2mkeeeldw7HyAds/gutj
UUIWj4OHlR9cOz6n3ZeFJuaWjEVIjW2IUOhIWoUPqi8/LTssYvrDpeJn1cAV9YOBLet/A7JQU/Qr
nR2SH7hhjtPjD3V3qXDZEsmtbAKvYahPwOHcb0Cv3aIiN0Qu9yp6OifwjQqjMjbyjQFwtodqXeXq
soHYWN6QmjPSMSxyjOGsDtsLWt/g2dQUH2T4DlSTADLXgNYwixa3Tm4CAEUjfKlg2iOns7RkX5OE
FSfgIF5X5cNOnPcQtxEgwHSAMuDMGhya5DjftlE4xCIoGYFvm9REPBLzrgpfcETH8kovmJCHonhl
76vTF3J/6FEIpvweJ8CyHfJi/V8/wwkMzSBsRJQWYnB829I+ePeC4s1gpZbUaS2WtoFetV/5lTuE
3u0e3JRwWcM4Mc2XtH3YudbG3PHH4g5ktlLG/y5+8wg+ue697xs2xRhhhvi6gbbhKD1Q9fdCjarc
l8qhp50anjQoAgToCsTqJLiTlBRYoWlvikPEHzIgrnfFYz9LQo6A3XBo5DzjowlwgaojZJC0PbsT
TYu55aTr8NzucWrz5Q4SGsNv9wvkIyRjOpmcDQ071CUdNJIsFlWA/rWwUAA3QTktg379jL2TH0GW
QkWkLbbopm7qrHgPBe9uFjfD+SDW4Dg0AQOkL0f0Qwo7dWpXxSOWXp2tIKc2I47mfnkHaPPwgxhB
vNhc4Kmrys1UYh1sa3UIjmAH2O4vJt7fl97mAcrFtEGJ9yWfs3viqppQ119dSH5856H/Vb+OlhtZ
p7cRr3vTfjlqLj5xUyjkJ4zJtIcsKd6WeY4rMLCQX/Jg6Hg+UQ5rPlU99SC/qQ0ZoVBO4MTwYLnm
2Ou7Fegz0wOdbTbPpRi0KJtnYL7EyQ9GGwFZknPYUVJZpI6YNUvdAF4WD1UymHDxkLKu1nx3Q4ZT
69QeDOfEahElr2Y+0GD31U/4Tkip+Fqk7w25/x0PsrxHaZDvmp+I9Ui9h0CFUolsv20H6RzsP2ng
KxtLaOSACUJJdvV2Nl9uLKh8YyEkM7tty5T2wVt0PCl/J+NdiHKKVJejd6MaYK1uWhS4GcjmFr/C
X3SmxM7oSnO3YH5x7eMIGvfsSIjN8n9dmZIBGn0nKzI/NWKUDMJCZiCf1VHf7un/bKiXZ1uI+J2+
T5HN5akggX2JfAN88r3H4VS/rBQf11v4+mXKxKxAawbHXbUB77XyLOe9POoKMEt9mVv76YgKHqBM
5Is90HG/09C5p2txXwXmCRHzkOeIXCLHo+r7lka9zAdoFyjOMUZyjj3ZPKvroErjIC/JKNh4zktK
4CQbjgileBbpt3WE2EzG4MQD7jM2sHURXE8Pfr/fqCWg3IbDVeqGKOXTXmx0oal8zmmP8gPjuLec
ZJygWr5rxqGN+7PFFSOLp6GDhXsV+odKidon741LEuN8lgEgmUjKAuxjMS6i34blA3aNpjZJr3IU
X59VVS5hXQGuXn3pRYZos7RYNlcnfQ7LIHQgkH+jwDxwda0lCsxIiFCPRJNFpOi3gP04MLmYflWK
xJITm1AOqhEC7mKXwKimkryfkRQEenkh1J7GbxgI+aiH9J0jOEzdqmkBCULpon1kL/fBFTFL0jKt
PCe0jrQHrJ0cKKlmb3e9IloKsAejTr5snUQXOhE63PRNC4AkC0caT7HERmLf3oCMY8kBHlgUlZCK
YazjPVH4/Y+QvnQoM/qASXOV7oi0YZEpnqB5Uhfoz1sKDGx40Zxxp9Jn0hoT/HD5gJMdW37n8Tmo
bOu0HvQRWSAuXDiG+CVo0kB6nPWwAQZbW1is2n99psrfWyyRVUgT2llptqrHPIB4qAuk1uN5KmR/
NGfOImlor4gYxuqHHkfqTKOVmVpJ663fX1RREnHXuAq9rT5svbNomrTTiDXPH7wWhQ4l+ioCajej
TDfJIEd3NRV2IG6IMpwQ5GPxdIw3Tg0EncVUl9+xaiGGP4RSllX1T8iOYTzpF53EuDmUDuKmXxNZ
JnbfcKTKwUad4WRmKMKGbigwliTHsfwYTxZ9NYKJ62wN657I4Ifnvi+0FwkXjQ/S7WnYjUZAPqW9
vaWKGdvLUJm65SlAROHh+swMO/DcJyH3fj/tV7K+nt6rVEm5kYrPeOSD5imAc+e8Bf7fN7OMHvcY
SaBXJN1PRdQ5MQMv7de70JPAUuP4x6OPJ7qmi2ZYxBNv1RzttUUkQdqz/POB118GS7W+AR40hXKw
98GpjyOB20yBZEDSRrPlUrQApHA/25QMAj46fCUf14BxDA3Vp9NGkx7ANqMe4bwlU4IqPzrXOEOs
HGgxdlJqUjYcn/bw/L6sflhfxUeFlLR29DvoD1f2RBJZhVPSTuT7CgwS8GMPKtQpnXSghFsX4lk6
bF2o6zsvvd1eGpvRNkpkGv997dUCzYI4YkGYpV+GcAZKk5D/WW5o2UKPB+/RZyWUIZT3S+6MUviB
d8N+GICrLv78NNflU6/rvuChKGu70c6yGNgS4UnQqcAnLVjHYeG7sF6VyO0+q2WHdFwkMK2tE0dE
dUlWmWokKs807q6lJxdpGolDxx1/1mWj/4nGLp4C7STWBNPiEC04m4Xw6HrCjH7QYvCQu7Yb6Qsx
wwd7ixGYvjSM0b2oEF4iOT7QgMPMX8PxO+ivX/N6n+pIwWx6miJ7lVwfKEipi/P3HYw9Bb/43B3S
MPwnoNID0XL6wQOPjdOdwUGeErLHiMpsl+6pRuzDEDpgWWPODnjC1ByOs0CElMvq97pBE4sYzHGb
hITUGhCZFGR5/kTA6JqOdekmWU030GFasnsip4GfWV1AljWaDuOSXNJEIAxZUxvKgbYuNTsh3CLV
/imtWeemsq6hKP916+qIVjFiKZ87XahW3ThULqQzNUUEbNnv8FSnAtjoQ42VNqchwiA7q8vsfwek
8Z2hGeid207+cd16y91IyRGaB9Sps3SybrbvJfVmygRb4r/dFn59xK77fZPKJhncWcre0uJ3WfLK
+vrkuAuImxVikbNk0yYReB080vOUtNn9gZj2H++PWkTBEgB0ACrKTiMGFL00wkWmY8wGEwTV0IGU
HOX+0YszjFObHGazHq3u0Y3u9s9Vb3WH2wfTy+aDR5JlTldx9RYYQFeNRMStcL815qYmWQZhW+/D
ZDwrnVa6/RURdM+QnQev5IcPZM/5/R+V1o6UguUGFotZGIIqMh1iu9HvrxmoGgeQz5dpeZ6lsbUR
RPV1ChVFp6jUKfVBGU6bdwpmPufP8FzOZiWgOrjyLcX//RwMQPE0oyBNRTvmptPJdQIwsnDS2Iq2
HP3tzsgeGkGH153nWGWb9cF78mRlMjbuetdS+h38BoChZtO73Y4prrf+O7man48o2mLHSBQNKnv1
FOknI1fGviLOI4KUqp2uCbAJhV31K5TDiUtej/8r94qvylng0+U5nA7suKg+YU+S08rzLMIyP7bq
V76bf4W3Y75GyVMNw+VnJMjUyXTRVPMkU4HE55QUDplOxXbUY9NUH/z43o+DIOxabspwEvXmnAAH
qI3HOuXxSPYuW5LHs7yAXmes4d211eBZBELUpkTKX07MdPw8LWxe/OEmC3vMN/gRib/7C8EOMMi2
HyRiPtkKI7cKYvy3M7F4dXNWhm9oYCHLYSk/9k/J8qBsIe1i1zojtfYndi/XMMgTWC2D0WUvfHCK
6BEMTfVyJ9Q+r6sw2HKQSGBXpwKJjV2sHLUmOLqWzz4M8v0b/4gZ+neA9n1LY+AIXjLNBb5uAXpF
SnOvmAQQWFRYFib8Mvlqs+ngxnoRALmzjP7iQZdTW/QzrUFsdzwjlQq9laj1SmNedoHnxVyc4LQe
NZeEhmzcyd6V4RNKozbddgOMHMJc6a2XUK34waRgHO5kY3wAegf49HTDLcWxQGyY1W+MLT1LpJm7
7sIjN86gNx2Y7gFawhaMRFuMroVgBc6gMYpNv+jNJi4tvpnWJWXpuxEjps+9wN5Buq4c1Sa4qo6Q
NToFI75tDZBdZXD4aGpTah+3Lf36o9HaupoK/pkHXOpkFJRiVCH9mV7l10nuaVhSH9GcnCgKwSx7
HbWzE4HVaFozAD6ivMTAN+u67pcyPolnohIy06cD7/B/5jcPBm/Y0K0apbyHsgLF74gWlqqH6eah
ck1xRf+XWb865dQWfq2DfkxKxlzwfqzPOMbkXfM4guHScHxy5DtM2se0KV0akulSFD2sz+f7skF4
ggUg90W67dgZRRR9QmJpaTmyjAMAHbQfNAj2hb7pu9W1a7dfgEL1k3JiKpMXDAi0iAzta8ppfx9f
jd32nx+eX8pTQfH61K7kUJLiBeRpf6Ev2MCqn7NYWt0nyU7GHW6OuU8u3WC7Gneam6hG/ykLa0Oe
ZVwlIfAC7432lvyIwd9nzK1F/4DPcYld1KPRzF9cy+wLUKsyjYTzVogoaXRcQIbGnoZ0dEAQQ7gW
Baro/pDk/W1S8FeMEXlNH3BK6xeAGTUonuyTCnng46+sv7w47yjmFZ7ScEJJ+qVgJJcgzAHlZV9q
s8NcXQay04Pwdw4r5Cwr0qGZyMow3IX15MPPgd7PVdSnS3MvPMfq6oy6gNCZhIG+nzUs8EndqmGd
Xees8ZQ8LdutEFks0FFecOwV9SHpISEggRUE8Bg/TCNCvdceFP3D8DGiIb0ilkCaQU0L3H0TWMWx
IT3wVnNCfo1TQNxPqOTblwYVI2reKcwga0Wd6BG9KJUy3H9BN2i8amQAyBiYNUULp8b9Ll3X6KtA
e0Boxy3hjDXY2F5uwgPzAQeYV0NbOvCgEU8cSwCJT2YexV1EhXu98jHz8K9LeDpt+wajgJSL+VjJ
UkFSsDvu/qOY7Pil1Gk9wuoVIZDNnRyvmgt8bK56/Nonb1oSdaS3N7ka9T2fpl9hKkzHMfDDmmNF
/rlZZ9ayiIrGS3z5RGH6+xO+o6v2tAcVp/6ZZtiHmYa8bGMfgI0o4BFUc4+YaqUWk6ojHZB0Pgon
N3OBx2z7o24L+Q9n5zx32R0+RQD6LU9vS3aaqwVpn16aLtEuSEJgcy4KLf4xLAnVCkugJRjqGFmn
+4H2GIX1vi65jxYc8nv2QPIPLMkX0thI0tsLssep5hhelfPxjmL36S88E3inxE336Rs2hNclFIZi
HHym3BbBvCMtzRRZZNfZGHELq7Cp1a7o/qFUySNLYd7lMvniZG74peSIGMdh9X+SmuL6sGW3wGMV
7RSv3NuLCO45fRexa3N0JWNby4lGe/KjwSQyAKCLBA31sDqT1fCNjv2K9BXxW5kYm/uAXqYTJgFW
2jlQGyZD1FueiCrYRPGKye/1j+7gpK+7VbgJoxtMDCCaMBj+dZCnBx0+eI4chwrrHiiRYz0yi1Pk
zStSvtu7SEnWp8U72saLWn3rIrOYBEB5d/EZc5v1yMzdHLWvLbh31zNJ+DbllgZS5QAvB5KG+tDG
ZFrAmbc2iztm9Vo4rCV6hpktfXY56gS2Av8YBht8lJNB6+iI+g/x8Vp+PYyDX01QldohytGbVHHj
3VEinlhN61EEYHA/7LfB+XcfC5IdhRCLQ/0n4hEecHCSh848jcrQFRTFFZV2WdLxe5TmmYv/LkrP
WX5Eh22peFqn9wEd8QjwQpOXYZK35B8LZ4U9MMxNAazFJGZFVEzM4OPUdbIq5zyOdqF93RutTRFi
Rkx/8xHZgfSO5U0XBDXzIvoeouILiXN2fdIExmgBTQ9lmtYGfbjKb3+EOYXIRf+gDIC4wYqYIwVp
2W0phhoMwH9yUebNvzpRwww3XWLFh7Y6oQR6OW2e2/8z3c5YtmwBuGejtEUr8Qe8ATnV4lXbbYby
OltT0V2Rnu9srarQu4zcECb34hpB++eGvdHg6fmLGDrwJE+rcUc+NYESJ+/HC+yUpZdav2InKWlX
UjYU6ptEqcVQe3Ntz94ZRkvRTYGJwaJ8gcwIr9Ba2Ka8HyTwp+/O2z5fLKFxIPPmQH8sEoEmNNkf
djEn5IDE+vECk0aDSJrsIbvmuukOOELe5pqIS1NcdnGz/UTe1GLHp+RM9XrO+dwZDjqml7j1p/Ep
H2ScRFkJmhwK1g+aWjcFOZcAaoDTUUipCUvhdwkr921XXdhfMVYERJ4pihp1MtJeaMPJwcjUmMe8
mC9si+Cr20kw96ZhuY9a7UeqKjy9UCOKP7s/FQDEN+ElUooIaEn6MVkiJuPuFA42sOIcGho7AYUO
O0qFWfkhfZ+JtrNKhyzpDKbGDRjJmjX0NW0XiV84KIRedNPxWmeb56v5Wc5qWtcriOjVn6PiJrNz
Rh3/AqE0zw1goAPi2/O+SBpQhE98JRW7rFeAyZs5XmpeGBizS/o1JlPjUNgA1Ze+7iycVSQq9v0u
/D354K3U2AoED0OaCLB/iuz+UbZLA0RRcXLNUeQdFbEP2yAmCe4T2Cgk6+yy0upWiitrPcppt+ZN
d/n9G2zlRx/qg7+kDOgCjuLlgTDFINq9giYFYOCHLIU/2bkYm9PYDl4L6OqH8VzCgXhBWJwXAsob
nWiEA6IaTypDnke0yKBKuCH3/jy7irVJmfNH9oXb4hqb6KyY0vy3woyG6WTzox7z6GK/sZ2JdttS
fomlZvp5J3BcVBOsVYR9RfTIphgY54jFhv6eOx8/n8VNbw7xXrBxDmsRj8LFuabvHvYCpPBeNAiK
auZLTsTiUVwVc9kXehGIEzPL9pzrnCCSP2kyC7YeZlqTsWGn2CHF32QArqJyxUTnAHm17wBsnBKB
5YcoXiGghV+AWeR02Uy9gcxYgioJkvaeCJSKReyYUEk53jgx94YdhL1NikwYX0c3cFOByMSdqXz4
CFqbX7tqqtDPvimzvh1e+MFb5yhFVg2Eh14TIJMf1N1q5Mz7N1sbafiPyfiRS3V/hPoyl4wi9g2n
uwj2FtKIjOgrGqxSwu97xE0VzdFWht3AYTGtyI7G8k4nHGHfp2vV8vO5Wp6JBkHUQxFn2HDjQ3ns
njvkMswUJKpKtsSb9rFO/gRkw3WnQSUStE+vpszLxEcaSqDSdQVlQuRWNPxmB3FYbAJnWakU7JF5
9woASk7hDGHX3fmaK45JcUHjkkdOAXxlbBgMnCpFci9cKOnxFPwylTrAJUPzpzVenmlj14bkYJM1
dADUuNw3SoU9Z2N8EeO8sD2J1b+siPnB+qvlOal3B0+yDeBBmiTfP99F8Kd5V1/ymQ6Pit/iSHuX
xr10cdpkXXeX55inLsj6G9HqWrmE6BgOr6A/rLHMlY2m00jZvW6EMkoB9uwRRVB9bNC1BfzkORSI
5LqFX7kC2mpgnprWjgXX8llv2AtTJewXVlLK3TCdCvsuCM9f+brDWIXVZowvuvRoF5XVlkW9DNUI
Nzw6XFaVTXIWcYE4Z6kO63K67/fpILYV5qpILzmLF5J78Yog1AafAMz65clV73RRjTmalcY+eW7t
4KvsvbE2/vUhLPRSjtoGrBFW/IcrgoerV4xYYhGifmM7tcBFSBrVsPDEEHtRlbQUJN+CJyJYOZh3
FEX1orfJMgs7PP2jILuT5JuVjZHJjuuCKyFRUfzdme2gDaHMD4ywVjmGGPQiwyKhq3coa0aucWdK
jr7O7PhHFuZJIap51uGdaJDAoNPAl98BKKLzOccNMSIhei3s+xOqVhQRVY4depBErprquKXHg5vf
BuruYdoQZIN87j6YnSeFsDOV6rAfTejMEdU2uf+EW/uSitUzzJPAPd7Os+oTPYf6X1022/KZLL58
Frm7lzgjiK3s9YAFhtJzFQuZ8y6fUgtclg+7GBrVUrQxZHxBrYd8T/fVs+EehFKz5++/urf+jZ7O
la5O1VpmgKBsYbYCZNz+xDkPy6AQNW2zuzplfDUouGUXuM8zdhPrSEPgnVOS1xCv8QjlX34Z/jy/
J+xZwAxKHF7CDEAgtzf2pWlHJ+SqhNiP1Ej5DuB5byxD8IM3l7DbCqEuoABaKqQenyj6KL3cjDuZ
Mtu7wK5r9/CbvaZcgP2eTdX54YQ4Ov+iHYBuFWxjNYjm7vYRlScbFW1y1IwKA5/oDKpwnyu8Z+WM
jpicfNICqiOBJekOrdX3vot4JeR2qguXbf3w8XrzbLoMoEnBOFNmyYK70GKuPBlj9ZtFWTg9luRf
JL43QBts4mrXO1Y8WNQrikLRLqFFnTscgoLAqOEZcbnRprGM9U9nW90N1mLaGf/awk4lmutKzf67
kZsNhh9V/8R0sYRo53r07aIkhh+FTF0orOctG61GH+BUMPmROF6PcW/x3UxX3ZN4w6peegr3LKlb
vayxKo8YVY7IoIGzMVsz9zvSW53MA6zjrbpa5I512m9ywuBWXB6d0HxdN4hnMETUYfbdP6qhN9gu
UlRXDFBUnqiiO0RH+LlhLYxMtVasE/Pfa/TLbDdykV0LEjmcsA/GcqbivrEheO632ikqf23MEIge
W9EA6ljAjhXOJ+KBmCvsG/Mtr4/5XYc2TmuOuTB7hzo1siCXtwCdp/SGOr4NHS1+CTzwiwMHO7wY
Wlthl6jgLFZ5UU5r/TsKket2xAggd+IgVA+HKPULjm48drgNgSg+t7nvhPyYyJgjBRoq83RLzhCj
WLApfGzW+EOEoXlrS0EsAWOw8UpsVLGEiqXplMb52vl+TJswpDrmwmAwmKum2SZXeUZCmLG8qkY5
jJ1nu4qlfackGdY6ooZUEmXdsxTz8OtCUwxfnxLREXusFcivOjr5E1tgFkANAoMnsl41aVAjYNn9
L6LPiER6WXkcVa3Bnz8dYpKps5+UBUW6BkwVx+6Ame1MoLaClD6TzAXDXcL6Bm8n7bWx92SNoygT
FhTciHficLsxwiHxr2y/G6849G2imYTkSfYGL16MJz/eHt9iEPJ6a95ULpS/WZOb2Amj59AjDJUR
ggxsywCZkmV9bqe/q5tlBVmyZNohK6HQhhyPAGVlxaDAFGomRHQoAFYn5vYsQ6mxhXFMI0+GKeIe
dEfe3UBLKhrZI3DQsxKTtkQKwakDVJ7D5wgHT0yYcoRoCBw3nNU5/LB4AmAuw+LmsSa/Cagz9IpR
P7CLKhH6hkoveIoYZZp98GH93n9Zo33kY9HZo+2q+HiNYMucdTIanJnmlpBa5j5Si+x68rCddh4H
S+PO6mLKGvrg7phEyqnRdcn9NnGMlki3xtaLMxJyibJCCsO+8Fo/HY5l2BbG2UFj6dSsbruCbi+p
c17RqE+YbulV0DV91/yq+07nO74Dnq5tK9ts5GDSIyiowwEfWxkX238cmFfJM9C7WJNKvfYtD7Af
k9wNkeC0tMxKszbKQYQsnSSNk6/KWhPtGFEqFhvfbWgW4xhU6tn5a6f9+cJ066oXXTwG7hMSLube
rhCjLL6yJkg9CKA/OPz7sL0ihd8bjcxvS+0bVEWR13eQtT6eMVHZKeNumXGPKpDjtwfTvu+UsRJP
zJy+6qi2vW2wxo/q59uG0mQJimFbL7IvwHAJCHiS33Ihg0YsN46+kfZrUF6fCIrC3unYJTtUEYVp
9+baZTQVB2I7Q7Wy4uRefcpGRbWya46ISJVNwHWLwkBwVg9CkTt7dd9XiYFHyHxb2mjgF/DV0bV8
VHN0L9qLzIF+8vJ8fyJfmKAmSaleggr67bzb11vB6AaQKKBuNVweun+DjgG5BYNhqIHUK68QRpVt
B5JbGwl/5aboYPyd0nVRXsH9lo+6Dql3uqviWAhs4zjkBcuZyPuLEm5ckeFtPzLs4Z3dFGnQybq1
GULrqEz3cuF4ObTIr2TouFXN4AWTdoId8Am4Awy9kHJY7SHQbc3HRQmSSfOsJ+/pI92gy01QhevC
8PbRriGtW9uyjVlb6Oh/jZIraG9nLt9FBeFmbj2ZsIMCiFLpIWiBz5MkAHNGYdEDRwLq/egMM/55
WNvdDTqA6kzoDYhfxyT3dGo+zEL0/8KBdk8G3yS8mVZBTP+z7x/EfiyLKD5pt6b8XxYjFigBzIVf
eq9TKLPz40PG45ZaWUNbU5yNtyFDDD+gVPFMWMLmtw02nJuOkzjdmtSVxBVdalWMXCRQxHsnCUVg
sfSaDJcQLggzLMCxs5DmNqhX6w82qvMnMgyWkhRJoQUgMnZU98EhaFT6OFnCkCWKMl0hiprBC2Ns
O0htXPnyx32yPDeh/aTKjv8KGN8oDYZXyJa7KMn1Ds6Lcp/ORbhGgGIOW3i291oYKTpOG+IA9eiR
EqR+qZs2j1zPfWnb4lzj4osqfcyCd2hMTvTgd6DJpfVx7pOXOFdAQdLmFkj9NWAsdrWUsIhNeKb3
zrq3VNjrDfhqAZy+b55NmdGu7KX+OqBZ1Fsr5z+mRWSHRhgby+ekpeQ3x0lwJVziV7D2Yj5Am1so
PIVdJTk2yK3dPqasZY1iM18YIZfQerdZRadvYq0xlwW0sAXVRQE4/6KnSm3SMbbOMDG7YhFb3EsY
r+Hr7+9Pf8xDVKOZG0KO545V6nwJHzxvsi8Cnt76Lc/WFOx8mCEHwLqa1lNXmgC3B4bTtxAiKZkr
oyqLzNFWjUIMb16N5VoW4NFKaaHjqWZ79FSTUiNuTkZno0yGDSQfQqebiLiRKhcBL0yEyDNNU064
dDT49SGiEZulitS/s8tPDEuwYVmfqhBStmRskM3B9MosrL8MMNIIE9pDUUuOk04dATbKaPzt0AjW
+Fmk69Nuk2qip2fHUU2fNnz1dO34vW45n6Ulsh5gC7onJgKAuOnn3bCsUMen6s/E5qWAjajkstbF
3RlCdrWX+NIY41LiAmWG4ZyiN1cg26+SBiLnhwJeTBFwkb/V+bMWc7qJHDEfpmbDMgBhLLvun+dv
wmh5w1W3NEoqyf3nyiLlIdFOugRs1E+EowjUFNL1LDyua9janfniXm6JHJuU3jsrdoa84U7j54BO
lyVK8Qnq1oXbM/EKCf17LbHm8N193NeCsrrQbKZWN0Yf/vvoq5xZGcfl5LwgkDvShAMmW7QS+B29
78enztdgeL+kcCXP4QUFgmxPzU+TtDXnrK5ek1HWeTAuMfqwvDN57V+l4YtEML1NHH4Hhu6X+5g0
wS44H2E7cZ1qId1GzGM5UDJ9KiEr5G32sIeQyr2fgVMvmuONUVz7G3wxubvPZGmMTu63b7OzASRs
QPofy+c2mwmJfYs95hGYQiyuRHor/6Co/bA37a87Y4hu3dNaMhKA7LeKrGrn36jTnye3tSFHF4VT
/jtC7M0MCiwqSZlytuadFmmUynOTR1IQX1tyt4yBS7tMRg9taFWDp+RZ9QJiwlGTVgQcizuuZ+XE
8GLasIJ8ZgPJ1fTMYasmVQeb7eugK0q8CGpX2w05RG5xuPanydq5zaiANLpiyoWd7c9kEn6aHIsN
VW/i/4COXTmU92ttYfraA/KA10aCYHWjC9fuuxKB4YNG+CXn4fvnR/PRvy9Hn0DGTXp4eIlxndM1
fn9nPNxiKeMNRh2yvcs3ho4AgbQq4epVnsVa1RU9+QE39BuOS3rlqNaAMi7Wsx6hmM3l7ls3eE9z
/qsoTM+QLPWgtjkgoyGe54PaQQkZaTLHjESyT1VUX6L15WxMtdtIevo/0BzUyAmhdeRypSfvCv26
xSL16KR/kLWFERc9dY9p2Lr8CJocwgTmM/gMQM676wo9xVW+q3cBFjo+2ix6f05R0/NGFWIgx+Ox
rqDpSLR6isk4fXQ5YyIkGgEXA1Pwmr9lmqe381B82otcriO3gCofqktZ44yrKfRQnsSRylTmOP1F
0WxOziu/lTxRHL5nNhZFM5cnYnoMVixTcSZIeNf0Y3R5Z5nCqvPQLnuwkN3w4UV3zFY9gc2YzihV
H1zTh8sj2LtitHkKGVjQnO8Onh5Kt0tIDT8SfKtJ9/nyjK5jFAhGhqcPdYl3Hc97IywN8yGRhuBG
mrAI1Un547IAsU9ZA+j5OBdNpEnnfJnbZSpftBnAei10xbM/vuVL2XRbmOU8sbvAY0t8GzkjcNk/
zXIHZeflZrCm3dhASGT6LhBJXeh9hv2So7gtG3YPdDW8t2x+WrXlOuTdohZvMEQLGvLSwzc+siNF
IG1FXYWUjNz9wDapYmNTX8olToBYj5ai9I+1cTh7CTqFwUbCzSuuhHpkb6atDxbkvmYqYfHVIcss
EygKe++HFUdGg4SoFksrY76S2EblL/FMzLLgXp7RwTq8xm9AcNtnfFh+JCs9PS32aOk4i6yzaIAm
xwPxUpVOR+quLnZP1hDIq5Cdrix9Ux1eW/OeQj6P1mS5rQgPB5JtZxYgwjoJ+sP/4SMs2wa8nQA+
SeeSIleMAO4UxIWpVYY2LeDpsul5+cE7yX04L/8tQR+Z6iO2g6feSssqlTGCZqznPYUk9vuo3jdQ
yjFDMIhIQChrisVNr6SbS1MqtHhF+WVIzxyLskBy1Qyw9NWxwgYRGNnHOIgaqWU37JigMnz3mYwQ
webDWRB9/sV6FTdT5jhgDqojzGxA7QupXPHBvWL979C1X5jKnVy8gnUcpo+vSuDDqGaz71F/ozMq
p3LRBCt+uI5Kl962WQ1jgP0xlE2rRN+attIBFybdgpXpmObTr4rU2wrZs8FACdlXBZF8K3DLJoXQ
OEXezBMgLqi43jOkefLe7S/j2z1GrTd76VzDgT8nQm311GWaQCEuUtleSa2QZUk7bNYjoUT90rMa
vC38NpwJczHPYh1EddaxDhsOnUEuNeW/ONOHARlAXg2PG47WM/mNInTBcy49A7FoCG2gNlxUVfsP
TsxTowfhrFX/0Vgyzp1Tf6MZs3h3sPiK2U1y5Yb+kbGpXniogaa+AHT7ikfMnqn0D449NIC7kXme
Ur2ekY++ym+HIO8iem+I0wk8FTVWnbhenGK5xIJ83SrRtPtS4y47nHLJAEXzi5HZcMUY8KA/pjgI
qq+GmiO/9/g40dFl7VDpRZNUxKZ4S0oVqQL/LlbGPpxfrhr050/F3yN/Lx8FY4syY+0du6TgVxJZ
/p/Xnq3bPdWdeT+BeJ+PXKRGe2DfCsm0uvP6vEX+2VNDC4DxDH/i9feWg6TDzwk9/JWoXDh1zLZq
yk9K6n37EMoQhxo/fNGwc3lZkj/eF9nGvjDGXAdkuB7G6MwIim3KIg6iLHRDHPOJAuKt3xPqgOji
kY1P0ZZ+Sy/Sz5Ep2yVvlcE94s+Vl+JKe1+xATOYq8V2PKQQnFBpgj/99WKxYBqT93GZ5YTHr3+Y
I2DZNkLgV/rAmkD8zRuR8b1Wco14rcpRqGgFWAdmDMrFB5hc1tDNvSqwKR1MDjHvGwV18FKxWYjS
uSb6K6BGhfS0wabKcoowI6Xelgy434viODLeIyiTBQrpUL31WnDCktHgCkd9u/4JnD6NwL42xgrm
J6Rf4nVT7e3PcLiaZZdgvpWbHl/LsG6XS3iN9pUwoBEaLRhrlx0jIYhN2x9cIvmt+iqR8EX/31GC
Rmv5WbfoPgGMCnv5Pwhgu+QzZcECxeLxwSTfBW3WTuRiMJpMYKmNrlljOAzqSihHZjPgypn+YFBg
Hw9YGJkMYSdGglO0Xm0ePgsN6sta+5ji3ueYnnM4ZzRHdrZO+0VSwgoeG0kwKppuxjTf3LxK5pBf
iRr5CJHEcWAhJSarw/O96cILhKzM59eY1Z6bJVwQ4E0ijiGDsLeDyCKD0bzmE7+y6X7gJfJjp59H
xtqwzMpMMRybekmAEdBs7CZg9U7Q+dOesF9xgZyps1VTryW00iuDCRH8vNp8woRj+307yvOvX2r9
j6i95rCoRfgth/i+SQU/jDky6oF5j4b5oYvwG+NvWlf/8Gubuk3tJot62NbNc44MTgH+alvi6HmA
OaSoJHKHIsW3OsyUaaC7LeiWlrwcHWppr1Wd2ad7MAkOgSvJwwgMzXyhBoKwKn8iO6wf7/kuO6OT
NfNq6jL9Xo6pwGuujx/TXcDu68qrnm2ukMXB2bOxCQm23cAhEhAR+3h1rj74oH6h/8rnZIvoCDvC
Dg0NSWlRUoS1h0q0BSf7T8Os4RoD2C9seRvEHIAhjGNmuPkIlgPF06595EnsW/sMPWqdM0rh8779
eKr+3YBTV3ZpUTbKqGhOhn6CbB5OHA5hSyt8dCfURkaytagi85xKHVygNaCSdqtQcZH1A0L1SEHO
tTvDaBO/kc67kY2PeB5hOeGSkhttPokhK2G/YfoBr4kdCmbUPOSGMOFl1l51nAJRpxwXJ3g+c1eS
1fqzaG5UUhjbwn7mNImUjTYMtEUW+AySRh5DfIqWR6JXAXh7FUVmQpYZJkWeR5n4DfOlWWDYFHmr
0gBpcDiWAP7c26BCoj4MKnyyO41BYDm5RlFykMcyZaroju+2FkO3RQ/F8LyzxQH0CAAZt7i21Piv
SKJ+9q2DekSGiOEPKjjyqRncDIhbmlSkK/QX2x3NX9X4Xf3jruGP4Mf1ToL8j6oEAvws7tfuE2fK
4rBqX7rBSLw6ajrxTBrmrxMdxfmj9T1vAmtvzOqWaHHCpw48P1IR5qx3/qyHz2t5vjKUQCwG7DtS
26BmFbCgfpyRb649EPXQ0Cvz67pl2emcu8uBlsW0VcjEN2TQgPrv5B07myHJODXKuV2SpWAkrE4G
JlVtbWb3k7peIe2TQE5RoDbVktvBZj0isG5T2y6QvSISoXY5RZ3zjrQ5peMyGolAh9Hd96/q2z0T
LHZvoqpYAOyld/k18Yg1y7bFyOFZ1fO+CL2me+Xs7cgkZ/OxbP5XkziuaBgJGMPrML8cQWAIPpxd
yGta1dNvGEGquh+03YO+48tuxle1q+Oc/T7+v4Y0GAQtJPO2ihuqDtXCbYC2+EfhKYEsnczyCCKI
iXbyiBByjTc0YCzr8a1F+/3cyy2Ds3qdsf+KHpKN2b1EvV38lA85FR7TBKDAo86F8ZohQ0XuaeJn
xCFooPrtb3xKFNDyiNYVE3Bmv6J186smyXsQ9/3x2g+S65wL2QrofZNqTPJgcpyGDbx+yfAKY9v7
aew9GWT/NLw3ZnLtBKLC1jB1wDetZRAMqDu6sjBfY01bZrNs3uvv4AzGfkWMG++UwyoMBnEyvft+
qyuGLbmfbBQKh4z99ks0GkAY7hV9Hv+NA2AnyzPWJR1lIuLC8UkmbU9Y0IZITmd23h2sScLOrmJz
1i8fA037uLSBX7o6cka4qsCMPKFhsChxRpz6CtOt9CrATA9hjfGuAxSxUDp+j5968PUdvUNyxBep
qmW/slFfM8jHxHb6QJVWJgqrBgphGSVLK8+HzLKeYEmhSJHk6JGJqsWf8KPMbPEuOBbDkah5fRXT
+yTrZRb/JsbnW59PkoAr7eAZrkHYGKQFRpeF9LEIuy31q5Qt51bP9OFouBp5msITzWAs32Bpr6EK
+bbswix78TyCKI5XFutgVpJi55pd2BycxhcD62QVpEpx+jWYeaRPi5x2AL0ZtEn1EV4F5pnADBc7
IWh6xqI5vzXf/2opy1R62acmPm5BTiTU8vF1nMwTG8ySwVm+qSioL0+SNveOYdp/zZMxSGxRRYRP
RgktkxqpQOLiLWVamcDCj31L1BBORy8TAHIQaVlaht+f5Vyx4HTtZ2mfaAgfQR2lFyct4xvYjfN+
lgIPuil3jT118E11lkB9sThiQsa9B6GUYOX3TiT1dlk3RCP463vLIOPWG6Br0t6rBj7iMbFlZJmz
6knZxl2NSykf8lLGpSg7rWk+zPFosBlXpK0JN+aJTizUj1nOoQIlzl7HJmSEJHigxrqChLn9eGwQ
RoOM7Lq6TSe7kDIx95eOYD34Q5m7Du5Rxi80pRkLdv/6YePhnzOVQp/5fMiataxUMAoYhkO4Q95V
UYTZa//7rLN++7dexqmoQmrfqxuyPbia9SbU9drB1Qm3VoavVUr+BjsYFohBiMmPJDWdvX/oqQ84
yGNbu5E452pRzeXxGulrE9V5x6gW7zks2+tZ9AwpoHXCzqecYI5hSWbEwcitgUmidhV/y1TXevBy
kYxhSOYoEovhLt/CFxWi67nnQ99EWt3pH8FLG0SK2zlVBsd71cK+UReCzAXsI9jzGyQkiYS4AYif
CyuLrBFSSzCk8pOhgWblSArRgwHIW3bkhVO3xa9tq7qQYaicCWRL39RHeoF0M0S1yXqtz45C4XoJ
8QxfWGk0PNS+w+KsI6Jdb0vmxQLMRcRpIY7ZySAsXsK3HjFQFUDcrUlb7dZBYnVmi9u73ZC4VvpA
jgfxUozvWOLOTaMlTl75gg4G4sWfivswyWAbAB0Ll5rJf+KKQo8F3YiJna38XVtV0PsmfFDiZetM
gtnlC8KMBHz/hhiYX9UFtLq8EdaLuwe/IkLiTQbYEaz93pZaVbKVPyrBg+MSVdbezhP3EH52icbv
gt5kG9IcrZ7KzXdAew6LCP91W1e/B3O70v2rtAwekly3wG21o8Wn0lc7dL2VgVxJLLc6Jv+AuOqj
pEVmTwycU2gQKp5wpo9zjRG1lvjxys14V99qHxlR7wXluJeJ3d8Pc+uHBATeyt9Sxul2tLRQId5i
Q0JPiZz0y9LXX5xNfqvnNkYzx16+ImaTa5kJjffNFZLO+aJHPceo7HZad2h7+naxgQcS3usfG64v
1qD7cftKrnfT+5t5cmojTjH3/5d99l3n2wXNpDZTbgVHp9D78ZNrZO7uFYS0BaCziFxTefrPe9+E
+xSg9j13i1MTmry+es47UbIlYusBrkdfWGYS/DEk5OKPTnTKt7SLduGNzXJilQO9/r4/BhPRnuux
cJbQnagocPfEWHzs80beGkfEOi2NVPRHq4+33eGgjtqxs5KCWkA8MylErk2hvqiv/53AIrWZfev2
/NKv7p1Hx2Ja+thHoEb3S+oRVneW7jXv4Fv2EcBzAhht7PICADNOx0pyR1G7wUk+2OaHNij2uM5/
U3iKwcorexOV9jMPs0a5p+DoVYnob71qg088gCxs59Ga7ElK+j2QhdWUOwXgaCD3XFEU1IRvo6LQ
yLh2yJHF3R6Ayis52c0sHgpUD4qxrtEwhNvbEpSr+IMkNtYQ+wp52eD04iNcPV2+8rvx/jJuAwsT
q79XfqTHXahNn4DZpPWU4CEUNXhZmezWZjVZkE6q0Sdgi3FLcaWmzOBIoCdobeYxepR5AUpjVUq+
UGfSPBELjutJcjHH8TqQF4XpZjka0kdZ2/k2EaJtbZkCHP+Almpg0nV+ZWOryYSAJFyOSzhz+R49
GIT9Ig0DfCs0+sN14BQhUmIItYZZGNDVzcbxlevEFzcLma7mri2OQVpxLsCD3gLu3frtNPOP1Toi
KEWrQg0vCKiPEhhf7SNicNacrmbDh/j+g2PWuGQJGGp65MXP3FgeiaGJzSf0QqV3Sdjx9jpPnKbf
dWK+nyFax2C4z7DxWnOZfvbBUSyeXSsE0YGirI7iG7k8Y47NJdtymOGNDX1Zf32Ca6GC9MN+e33G
LUu+CiGYKld7Ad4pK2mhBsXXlHSkVKR3uk3F1Qea099UK8IJf/tuTOPD1CGeNQuM9pE7OWd7cNiy
6njlDpaRmOK8ug50/zZHTzo5vivgjMcmWOnInI33SO80K6BiNa53LbFuPPa+oi6J1Sh/R/tPINLh
iG1AAaUMzJQWYvfa3XezqIMuAudb5igvRN6UW0eqFGZrXZ5aAJyPtTRQ6JxMuSppmIF235noSFNL
nF2tN9rvf/4NkEJwMPxmzOfdgBuGp/oZIdWR81M0BvhbpFYCPwTuzadwooEGwEDumoExj9g+v0DR
5I4WOdJ7o4lqciXuehv1jRjSlm8hzW5tbt/JW2h8Y+u2xcK/93eRn+IGvU7lEEjqXnfj1Mp9w5J3
mTNfM6fKsRQ7x9CIhDFyiuhlDhhK1trFz5cFZAI3lX0V04ZV4Nvj7btf5GUI7UFzg5Efujs/CGEZ
dCQWgqqYybTmVbdG7HTJIsT/c76OQuyPovct/a+Dt+os7+IHVea/Vf8kTkVShh4xegWpJmIJd9+n
H1VuhXJ4FoefwZKMwMia/9/jnuDEbNhSpK4hkWnh/HAPZRepPV3suBhXyGkjUGtss2HZUdNNAGOy
9dUKqn3fKXhqnRP8oX61oIRMJjHc/SxS6D7JakUJvuTJBAi0pR4xVBxOF+v1AkTVB4bbDnJN2gsK
eEluwZ6xb7hMe3n4x//j5k6v0Hp9Yafs7Ear2DHDsy7l+TrXxEyClMdX2FA/R4Ng/JL5p3YvPGGb
jt5wsZYcW6Z34IFl562DShDSvAzJLWwjEQcEt75IexZHJbpu/phh1uaSOXUIcD2EwmCaPJn4/XT4
/b6cdjm74jAUqk0opYj4w3FG7LJKkZG0t4bVlhu7qI9x8a1lUUTNrzzWInSP1elyCKdxLU2vySmL
ljky757LoBvmitVjqWz6p3b/Vr0A1d8Lt7v2vfGCDIkLoPn7dRaKZ4v5EkJ/jwmmw5rnmOh7Bxs2
m4heRy7y602rhBCuFWXo7Lc9mDruFRib9THlgi1OKi6eP44hz8tMsKaWqfCTOM5Iq6oWzdwKUvvC
LaokuiSjJgiuDnqbADfz/VXM/Ms1yIwCvVB//+bwhI/uHNAJlxeUQ2xxjmU6ZGUGHwCH6nUpUr1o
z7WWhe7d92kbS8jmR+3ZPuzlSVyDbdDui+Id9hq+1W3lY0irSAe/01iwJYu+dhGUfvQLKTQfekd1
NvqSABHoe3syPvt5v+QGZfA1MydsO87J7AesDGTuAk13yDrkG49SNMI9u2wyTb79Kj5W7C46qy/O
ssymlLOKy5CrvX+myEpqFTjaeJKnBV2Iqw3CyFYyc19SoylPeAVNf3tglhkTlgeZx6UyS2tqwFws
Vvo0UTZI2Bzk86T5ssfoRHuE4jiV63MFSiCKdjpN3v+Laxokrzf1QbC1OMi1c3d5OhAhReYugskR
ke7j4IK0ikskS/VtU/hHePkGHFBOlBrlMDvuJrjYDDGTixzxWwko2lJ/E4bTiDXmGX4YPqt8+d58
dKOFNPymyQWhmO4Grtbx3FxK4b8acwrjNCI6p9slVLYAQrURLdnKCrieYkua5PhB4pP9AUhjVOOH
1ZFUQ1fH6RFVBOGyv4blQl2Gx3WSTTIY9ugRQnYbT/Xo3G/c/Bxl7HoqJCCjTqbNFJzruMm8lDO0
Mc8XLn7AVvo6EGRCZ0sblKJvQXKV/bjshP9nqv0s6FJURNrAig7rFv2GByCxRxBHh0xUWD1NETq8
SMSWgiFCeGlRtfR1VgDjgIiSLQNXeZM0Gxl2pYl+DxKl4DvT8JPXveAL5F+sgjqniVvHRvBxl0Fh
ojs6vrtWdwWXk44ld6uZ1TwWMT+JxNjzqHSawNuEa7Eve4qoM2/hxOmE5yw09G4iycfwcZP1J1lP
THsaFU482WOW3svKr1ULUG5pwJAHow8yfnrSmJOnvJigJE98a0S00Dv2X3jC98fkkptLKjuvivD1
YgIF2jpGf4W6nQDnfIQpd86CSN99bQDuG1bTI9IoYNMhTRNoj9hjpS85BMYF0G0hmJyOv688L6va
RDus9Xz8FLZ21wITiXETd0LHWVvldI1qpzZ5+8ySpGjVJw+BSGuOlvSIrw21dmYht8G1Z7WvhgLC
E+0vxPywlrZFimMSdh+MSiyKAkPzoDHCMV2X+HTr2tgwYwBbi5n8kzYHHyxcrbq7YIRWPVURaAvo
OgyIu7TkIwBWUPuJwDPk45evOhJ1jucYaEtcTEW+1RvqSVNEZbosEL2q7jrNKGOBqI5F5zPM2G68
FMfggN3fyiP3cLf1hM6NM6hZEJJKquUrK2LS5qng12OlizOQNCEUoET15fnxe9KDysGbVmTC5Z1/
qSBJa4g9CQgdQ+jgadOiWsWtUSu9luaSWu1HZwOgCwQw/3dosOCoTa+xu4BpgK0yWmTBXRKkcCfr
EL7mVHah+wel1rU4b7VqaOozWVpSiz0OYikAbNJyVlMoAM+v19NMxK2Bk62ee1Dws/KbFor6d3Va
WPMyM5c0TSA9Pq7XURHpV5m+HR3zuwf2N34Ly+vse+fdSX+EPzUM21fafT+7gqzv7AByDeUwqGva
pD9Hz4KlUlW/TvNyz7WoE9b5cvmnsXwYzhr8J5yAxeKx331HjrSzy+HBqtD0rUYlQoDvezdKDwDB
+YHMYg8i1hm2+sVas27D551WshmNXYvsIlMfnpB6b8Sn/GTFU5d0HLelYrIom5yMPWtQbYdPABar
5+idwU3PdTZdjP2OY51KCc2aGivHznsUlnvPAEPEC9dyomOo8KU/j6OZx9MhdE1DfWtpPVSmDrY0
0iWFW67HKdeyMIE4wgiodr1EwUztomZj/CFESc4g2iij8eLu04eIsyHInYtzWouUbp9MinyRfEqO
GOSDyftC8IpMnx7Vaf9+hAUEDkct5giWTvQ6wXPTO2F3A+uf98T2pM533tMvhn4GAfp+EslqxHCP
ReLCYJw3VvBX+sqOLy6mh+iUGpNG+Uzjm03rIW1+Yh0Zqrs5xWm1aDwQ/Kksx/mqdR9f1ndThdUv
mUAgbRUzkEVEMCWHNC7T+aNEAxeeAav7H+wKrRdHPXb4Z6axepp0Hwqt7SFYEXxTDigcFeoWNba/
lqrpB65770wd8+ojqe1oPh2S54TLzIlIM0aHRTqAE3IVhZmJhp9C57wvmwRVesQm5sTBWL2uIQZ5
yCsYuGL8IDZP/Yf07rfPW8kEGUo/G5iB5knIuhDDHiW3dbCCEAO7lpoarFOcuSF0deL1NHMDb2wk
EDqhgycIH8jRcPkgBAUKJORqofscUsc4L3WhD/HVo36Wm/caCAT9Nwuwc+rPg0Lk7xiPxLgiCHKU
k9ywQ6v/QfJCQMVACFXwCbTS3JXDgLUfSh5oE8WPXFKYQRApDIFC63DAkxrUEqoUdfti7n8bETNU
ANJRI7hbt1bhFu+UFRMuRpIvaAufadHpffk1kA5kaIznWV6wdEVExs9jC4yKxbTBSynpQUV+RJ/T
jio428RrZgxf6yGpWVZqg/vH9jyEXIfznyhjO0sZ99xH+1nHzB8zOV/aNPq+9s+RyGgaBTtVl+6s
cj/QDNse6LelYL7lfoaOEmeyxXSfOF2lCDzma0n329bPP7viQK3WH6BA2G9VBRN7tX1Tf9bRILN7
isZZ6o2Amsh+0spDFVoLIeBI8e3yR28B7fvTBYbRj7XN1tgTL/X7NmWALZsxt5w5Hcmc5S9xNuB+
r6nk8oZSw5ObV1Oahh3eNBp59oLpLxgOtWERJDu0ZuM2U9z5d3CiVv+vls+OhQZmwRrBIVJMPXYO
Ni4S5e31sdbEPJbL9qXvTnreH2DICh1CkqVrpxUpIx4uDQg9+MVi0xu9iz607pD20p3koFPAMswO
zROqbp/UDMR9sdrQCqbH2LMmgSaCFxiH+znQUcqya/mMGbZtt0KEvw+EbdMKR0HId9HBedP7//3S
pQmVQemVjucvwVOn8bXXLhlCnmpsFrhZOSTstDmWX21AzS6u1QmeoYbEC79JxNugqKc+irD7gNB0
mEKL4Gon8lqRuOFMkKYw3PJDuPjWhrHXVGlYfMTePIGyuY4Tvut+RP/iP/MdLKKpwSiaAZ6QJUCx
kBIAggX7yuXbT5tI0LoN7TEaFddx8I9Wee8tcyRBqLgKsUeiEMGQXazXA+9WA6Q/iev8txHAWM9v
GmgEWZ4N8CdzH8kinlyLmCPrYKItcJkhDCdl0fNHi7eNDeewOTSYWonN9KEfvIw/tTDeM0MkjNBH
uzOR1CSvUhmR64XBJqYO4gwK3K1t7L+z/AcR/aFylm4DQLwdNj2i1qIDSQygUFAdS/Yf41DAxhBw
nYWQ1l/qJIdpYdfQOmpLBdnsOcGjXyw17YUIIodv0jhsQNDqT5AoH9I8rZz5tlBYUesa5X8HsUtn
5Op0Kcr2K+qRYdQAUUJqr360A5YlBKLWrQdx4+QhjajTmPeSFYv+uS+8BiXsgd/FWA3wSGJSmIkQ
Mh8AkAbe3/LxyT+JdBQXq+FyDYANZ1qfekNUUmLtxqyymRrU1IQuvie27ag15gIr3lF0bSiCD9pq
1h8AyGeRebStKG2+N2H+rABWCAyuo2gOtaoXtTz0l3tInTYfraRGosK9OhITVjExjJN8yole0mt2
/n+3rbc3OtJ+oWphCAL/FmAUDCicVrnNzbFV6gZm35a1PSLt2ScO7pTDaHo/oDQj9tGfEqOQ+M/Z
4T+4AdNsNeuaMNFBl92jagKLub4Dx8hjz5QzFFooIqwYAlLm1XYhEYXN+doXGjQRoydsqGq7dPda
W27WfxxZilkEPJ8Xb1Z1GJog1vx3vue5HOo5UkraZlU13eSwBz+fNJoLsdr/S7pqG9sD/WqzQprk
nmfTF2PdSBE6fGVxfEd+U0h/s7dv0lSyfWxFKBqkR0v9z92ptfZHmJ+F+z2e4YzBTSXNpZmCKMpb
htfYPTwE5MtN/lHqg2ediIba+DhQGefO9bl1GXWi4/LYqxbwDNiyooytwiBSgIwUCJTuM3YqRO+a
D23MQAgCI25L6itPhkFXI2XCLZx78U/sDZQKTI/JGbOk3Qp2N+V0dZiva+q+a7txEN/K6eVlVmLi
QHqxKtLB8b5tkLENm6FRurvNjTWv35qtcSsEXmeSia0WfatyvltdayI0X1UHumHsRBNLiMHGmFH2
yjQIH9G7ErxkcKFJSN4MBnvLlIedbSxVXA4/W4dmu7danVGI49fsIP51eaMeVL04ixYElGZs2q9q
vHBRVvB3Za5LKFS7DzLGEYCmMhlBXLIpTMhNVqMfX7AWce3Y7rEJQNwWUNfS6ox8I7FEiTLLWR7N
N03vDr2jfUwAuKkwwEqismtE6kCqCJ3iWscW9+QyWFFB/3bYXOomQZB6IeLYH/LaRlUGbPUs4qfF
8ceJW4QJWKgpTgAWDwwCryyRmGSfzSBije41ZAztRR0vEzdhhA4j17H4C4kKQTaVN7p2fPE6wfPh
83yEYFLT1w50chRjw1joyPZx21V6GGtd7PQo335lNnrNvk8v/IjWo4B2QyQZNUHWVyz+vQQ1MX0B
2oNrFesAw9N+y0kdtHKV7gdVq6JTZXPJzu9yKn8RtbnSWq7sFqi+QDHKRJtGFj4Lh5k0gW6a/rHP
MlaedWGCkYN5RazqnqrzDTlFqWvdlyj5rnYBtUrws++izfDD1/SC6i38yS3EldeokcwiL0phNR+u
OSJSmdUYS+aoLmaH+kUBmq94DAL2Kvp4ZsRamgtjNcGmcuoRaWpF9S2Nrpza4/ycSppGCvT/KUgg
mkcc3z//5I40YyTm7ouxbFo7ezgrS8MyhBh2S2vNGCjDLxUNiRHhPHH/M9dr6/7vTRNtN0Teo18Y
Q6arGsm4uZvw55KqFRt/02eYNAyqaKbHwtl7HbYUo7uTdLQ6gNWSFghwaow3hK4du3Bieppm/PEe
MTZ2yXce2Mw9ZMKIEmYc5qbVS3S7rxI3ys6Sv8aepM+eQq1brqnaBd6FgaR5UIVEHH2Ixxa8mRKy
Dza2XpLSOOkbP61DzI/w6mocR1R0W2XwCOjZFFk7U64XYAcZdhbpvLskpHsN84UjU9xs8cN+v2oW
ntwg0hnuSOebmOIZ2Cklf6Lt3IFTgG5gMC3Y82BobIBXwP2L8WBktqOQ6TGHUHARiVuYxT2J7J9B
guCoeMKBBiClbVD/WQG4Q/+viP0QtDG4JR3CuA5a5xiXFqR0kSUAVg3hnDsmt7gpIcKcd66ZB988
Nnp43dcYW0o+IYj6GqqSy8jdmtLlFuryj0XTIqtXrOsSalnQ8cWrgtiOeEPdM5q+hPYFMGshDyzO
UN/TjXvgV8xSyVvG00avJZcEqG/Xg9ivtQ7FHEZHcjqPuHoyBHMEPk19QXBUYZzhmaL7RtP7s6Qg
T5/DT6YiBj97f3/xdW1EUSpxIJA9gDQ2mgfrpaC28TPlf/YDgVX02H9QT7ZJy425FMzhtqeKsS3a
c4ZtsRnHZFfkvE48POg5v41i3bguPM8KglzNwa+a4Eo6mCsG3Hccnt1rKWGCsmpRgzfbSOrUeOT6
NV7kh/B5FiS/uEaJHSYY1U2r7reMjRDldxMpYzjqtq2SbKvzlxeCvhGvH7NVm1ybxhTvl3e+9HTn
RejZ/uMfhhBAaDva2dBwRQP3RgDizhPJhuObwTzdG110Lo0pTP9KMkyx5qE+DIplydy4hGqXL6sR
mcfxw59zwgPm+SsAAzdaBWIhFiaAU/FGU6yC8FDieIFGQ6JQoazIgtMRfRG94P+1vxD5ddU9DSEo
PfKgqx63rt3qqKRfBr7BbjmGUhk9vfWEax47uwgg0qZEFwMc6NDZIVEufkhDHTK/fx0CXOuFv98c
djd4jTvvOkFM9Apxed5hmU2np6ye/CHDezXtyCdKsU2W2DCjvsITAFtC//0Z9JQP+uBLcI1xsqOk
imyRs+wSXlmhAGa2zJe5sMCIEJDqa8AXLnT87S9YfXVRUcg2ZYvqFyqaVarINfB8jjRg3mT7ELmJ
d9HPXXfdE8zROvkTp3uwnsWZzJkA5t4dVoHYIzXH3ud0HblHDKoT/HkvhjdNWNcqxwF/shE7h6XR
SPXAPAd1c5p4y9Lm/mMxsWLhkPwGTdRbIjHDFsfVIhNkfMBs/H202FF2U0qoVRqZFhgZHhVbCL4w
CEtIKq236N0iP+sPUn8rKYulfvgFPi6/9bcCAeSgT1x6mJTO5YN1QYAVRm6a2QMiJxOY0qwPTgD1
wOfC1p0O6T5YcLVL5GSF7oI0ZHZOFUJ00xr5KpfaGU2xz8UMCXfaZsqHYvrvIgGubrc8UKSYahu7
MwNeiH+3tcjvAoYQpAfEY3shVqoz9mbRvc8eafF43ucNmSZ/EON/RSgcHXj7TnB1Q+jPNuIsQiLu
ggCJWcera+RP29JREDLTWafmAHNCYsoH8gftTB8eQFLlHRN5dx91WPbZ5r9IDzE2XWhGz0bm1Xjm
6nlowHtiw1RM1QgV9Y48IYKICo+oGe4ys1UDfnAyFnWJy1cMeyG35kbWpFRLUNcp+yaPZt2lvaFl
7xLJxncwurpWtc1y+6Apr0tEzGuaT62C3xSJfHs9BH1674La9CyIVJ0aivTX2ekqpkdL9RbdYwkz
lfNhjwrm55/isERK9V5QOd20sTMAEeskQ1RBczb1MK3Hgp0ZdaZ0UDju4ngpoVmJpd2H9nEeiEAu
lC0uidHtKRLwCT76MK5cVBWmFxgbjSabseaT5UG4xdCsyRfcr3F/xF0fgGp3pWGhmr39Pm4dyuhV
z7f+xFNsFJB9Ihduy+CztYBsdFNMBkJW5P9RAi9CV/30GapWS0dSyQFOSRGGxZ2iH4BwhpMwJ6yF
8qrpWUtdtA8iPm23bqZoCUoZTn3yvHNY70PYIFoGTzdKHSgFgaUgGu9LhnU4XKzsl31P0Aw92o7E
7NmW9PzwGEdCSOGUYZEcRqxtkXnthzWtst76r0xb4COVm5JfUGKBegZ+pcnowhQpfLOT2dTOhXNe
g7WVBBhg53IppoYK3FD7tKF3LSwHD9uWN92U1JtTINAl+NDvEJ6Zg9tpNxU8tOWkSHb5M+h9FDDe
+jQ6oLNaBVDgsyNgNwfHRwLjFViGzmAnrJ3FmnNk+6XhjcpKJ6JVYU+06jgDdifxfpycBYwzA8ST
XjORG4pgdYj6rPaMJ46OqnabmrQlF+RmBGdfk6uWaeXwxjaH4avjWpvZoyVHeT2ZhKDUzSFVB0E2
ritG47YZ50gsp8OtPqksGAatJtdDyVX0y9y7Bvt0B4uKslNurH3ooJKMfN8dq7nvKJNAm6LxWQTe
52YsTrl9oY2tmF7vOByX8de75LqJnp18FyuQMxhpEsNWN8X2VNw9fdweEi0/yk7rOiMWpXNzlH73
O0gRNfgp8P4dU1CVzd6g3mpG88CKrwv8+vxoRYFe8BLiTlxc9/ifbgTmN4kKqFs+fEykwgGuyUcb
rStI2k9Bh+FhnH9DxPODr3vrJM5HHDEQ1aZbVhNsCy8XIVw2UjlhyvnP1Tnqdtm+Bq3TuYpVZnEM
cMBhE9q1rqSNNnfbHLiyVeso+yYYPda5Mc30Z7WKMoT07DyDXl7GeJA3YFDxGJMDwNyKRXX47gCd
eazoGDcfTycKzkGyyk+EOhVBFbXa24nrM9TJJL1Ku2ovaj9AgqzHNoZpiWPf/xq88YXlFqEEnjDT
rn7Pbjq/YNYpZt/57cgnCumcPuQalDNrYrlOcwGxe8MM6e/Vul94GL5jIl25NbUwCfdJX2PiDlAo
ojzOM117AFxMltHNG/a5BHQHFtE3xpNrSx0PWG16jtV9SXC/vwvTYgic2UiPOCJfEDxfvGPDUmjC
Ri3sLdyc5WT2WAGFf/cIGbwPQyrreuZmt/+hwrx9r0D6/jTJOUPhx+ltLJDEhMW8QmQ8XrAP0PJg
Nky/PSnxFQVZBug28ZjJPN+pqPuB/PKkrK9/bsQbWkDcinaVopmBZ6BwgMMptsvkagMuPkvsABDK
gpHpYZ81uH3y189b1J220VkhNDQ0ZbCroxniYOy8PuIjIGXhP0U7ApE/uRMlchRIvQQCQ3WVCWrs
w4+o+w/ebBwlJTWWmfzHSnzQlw377Io2GYheXHqHE8kbAd1R/IGCwlFZ3ri8dvP8qaHjtTka0eQv
V4ZO90xjizdx8ftTg4SrQnNCkdHuIAX1oKsdUrkDrDbBU5S6uyq2S1D+N2wWPVxkW5f01+396roO
ZmAxmbYRwAX8xLmXFg1Z0y0xutcP7a63potrJ/e3YyKssTiwNcERY0otnRKH4aoHyaIFheoeWs5z
A6URS86oWiO2MoQRQwkiAlJJKey582oZSpFvJFuI3mOWBGLsaJrD22RbIQcIgGwAvDQwYMMn48Rc
oBLiL60NJKoFlDPEi+B0eYONT6h6XKozgHha1SHcJFgBKnMdOpqX0jJaFK+cZatb/b9vIPrV27Tm
hFksYY8SlpfCD37lphIdVyW18nxz3UzQBdQ6k1mmqzdxEB8ofAv0Yd1bnrEIfom19qTqRNTy1Trg
ywFOQieNHlIs7Qe7uyrxfmtxHuxOgfw37/cgUVU440FCFrRqX8AZwSXS8liv1SEWEELf6GRNjMh6
tO5nYmsHuGGfBb0Gp4wWzkJXs16K0nYmd5xp99h9/+DnwIj9qWm+E1FMR17LVfRgKFuqoxpMaqBu
E6WlvZwi36uPtZRE7u94nkq8oWo0GpWQ1YHKyA9QLsWA4ZLROxjDRCTIlaDlWvDGEj1V3Uylw+3r
3bI2/UCDK5L0roHoGtheUOh2wG6s1K0CqZxWnA4vDR+LAovNH+E0wtRsIYI0myQ2pyP2IOMWS60U
B6OvB4XaXb2Ok3rR7AuLL//5/V2heK0qzEetJsacONiX9Mzzoi8BGT9Z2skqGSTKTEP/+MeqDXq+
+Y0M/IuiioLnLc5HljY5x69nrXnkk4jx457RiqePc2w2IxwIfCeqWHzoo3DNhltWQINiimQ2/627
qQ9RGr3hMkzqtbWO1pJIHFTmGaOOB+frZZ0/+FpndbViFfaqyq78zgbF2StW+RDCb/9HJlfWsgRS
AbupLTLkWD0BcfjRb42yldbxCBlc05veLufzFCM449QaiqLhb22pd9lCs6jctrauwBzsrmKx/No3
YU76Y0oPinFCo3b4+v3aJKtC8vXs6Hqg3D+aME8r6fWaqXGeELumDGT5DMUEmW58c2iN7fQsqGy6
EgudUAbrKMqMHWBNYB3aAJMCgSzWQafDCjaLCT+/HuaZkYaRNkTLvUmTksDELYd8+/uTmB1f3YNN
ePj5YkcpIGBsOSWttI2jUeShDzaR60GoCGxSEIFJ6hAiNHJIKfokg1iqZyxE6s3659CzuJsVWO13
Uhd6HIhP9KKSFKkby/Ak0UeNPM+U8FfeAcSUTkdjUeuYbt3lbRJIM3zvdXUZqSW2vh3Kb+67pusD
rmdFuhJ0H0FuTkmBpb1l13QATyoPxvaXdoUo1ClKnnQ95BWxVjGhsy0O34LVHa5M70Xi9RXm9Ca+
X209glYLxCEMS34QCZuukspWCYVZk7CMw/YjSEq64kLtLZRSRB+0kZ8kjaMhfzZqB5Q+ZT6S91D2
4EOMyPD6T0SYZXdHIVfdbQfNxaloQBnxMJWg6fpDzO536hxcGE0oJYa9bxMibR2YOH+p92CuulQa
vv5QIOMeULWje82w1HneiG6FPCXy1F77An+dBIPEO6Focofc29/8BdCo2Qkr7DxNpgVRQP6MIHgr
cqbdGr5mDWgfn4HOzHfQCqtAVPH4K/YggNC35ch9yg6Eft8dlZRhWRz6oqlQBebK98cWVGFw9KOu
UftxoSo+t2Vkbb5N9Ib4488QZdhYS+s+hJcc4/WO78IpRsNXeWSueR02PKGerWApGbnSQe+8VeAw
YSQQAoF3vqIsK7LAlePa5y4i2QiWMp/jcPDQsny3kPMdysJxy+wOCbpP57Ru8TIXnwSalpI462q9
zatHO5UuXKCOZk5q73wG4u4cty/faiQPq/QIWn23oXsZ9P6knCCg38Fj2mXLx3eVfcSifIDWE5Lu
8ZLF3A/JJZw4/V2xrPnLi9VkaU1UcCntrkAYePIvm5TWmCjEpZE2RFP2uQtZhUn7+UlXjfWbiwoc
3wkTH74loryB1Ndt6w/seiq7xYXl662t55wfFiseTYz4D8NzW+BpRc1rHr6GB8Owc+AgwAGDI83K
6YTjPY+uopTo5ApQCOJYqznpIZgWSDGHg5sHxClyv6msax3cWVRdhUGPDNwjT+MksKo6w6EjvSx5
oUbFNw1rTOWKL8NII32X7lnM9RKsSVcxZ/7kzJb7ne1kNSbp2TiXZjf3MolOlICX139bQMSbUhr9
/GF8T5hMkjt1ZpVtCgPKxQhE6IcZ4RDypAgRhW8qLF4qucniMbC9wjJO4s26m+lG5v2xVtEu8xuK
6SHoS+5WDwPG+JCtpEilBmo9DT+XoD8jIu3bKjtCaYwcm4N0SQ3y6aE/q+pxkH86O9HbFLbynTtg
L2RmO/OHTDPx6LZpXWePswV+YQvWRgzuvoCPMbER5mIzeI1aAClIoxjzibJd8Er7dna70WPEtt1/
Abz8eyAtgmZq+76Lkx5qmCjQSMaM8tObCD7lrF+jv579NqGwvjQX55TeNxoEr6DMA69CTXx21FUW
tw7oaqg1BRYZyuyaVY1ymKjOgWIoIVZVWLJ882pdzz/Xflh5+B36k9D6c/CiYvBvpKjoe4Csy3DT
svPamGDxijXkBkvd4TDOaEdd5e+CxbDGN6yPboMl3m4u1mCR0mDCQKgfPOFfxL1PuagFNpqby/6i
eF1n2Iul1irP5twtkaInumwm+ea41qNdB+T/6Al+/6s8Ol1AwpUUqQ2B3nmXhlXM7atXQ80Gcs/K
RMMy+RXo5biDtzxVSr0tXVr2TPoERfFQg2W4Xb7whHJQni8FsHW6BeWFmjsNCiKJOwD1doLGyYam
fT3TI94CGsiITBDaGFU7pD1u5Hm2FBei82eNkiAUwszpVJZmGGzpE3nNFaebeZN02H6l8rSxi/4C
agO4SFwDVWPy2SLCTM7N90gDK/Z4Yq4eY+uNSYbZs2aMaMC0N3HCmnjBaq5t68FsPwrNLU55wkGX
V/tXhazVsDw3IKlsWwmnWcLt8DZhsmB71Kyyu4VGIlrWRiConP5wecmm1N9HpTxtXS6CH10/9VNq
lqEFCvQE9FCjesgxxbTMpClW6rB/CFpLG+FvX3JxCELUJQjHEbSVHWIzSGxu6vSsDFR7uzoOPfKd
O2S9PzqTs0ee6DLJUQnJEz6yRTx4GHv6tJFT7RhKJCJmHZr4Lk8zsd/IqtadbiPNPnoPKjp0Gw01
ycKhwwvNiVHOvnEPekDQYIne45jzUntmUF1F+K/Ky1XAf9qfVHiGkA1ncfqf71MknKTJkNRapwcZ
e5hj+w7E5B73iroGOnbSEBbNhcu3qUTh3ycLvVJXt6FoMyAs8NHpoXULEER7AtjONvpn6adnpPBJ
PZ1xTlMQE4FYcWKMfwnZIxVrQSICSAr5KOrK1QlHyKa5M5mSjLB+zwKzIpJLAvBTp39O4xX+e/B0
ZSTw8JOxfIk7CiOHvT8EJN8lu5DLxW/iisvAJ0PPXPF9ytA+gLnDyUIq/DrMxc85npUVMuVax15z
q1iVSoMWimgYxRqOWJq/KO7qhBiYB1Cy9nXjcI4r/QiIf8H2Zwju1qkMRHcfYN/MzVsjgVpgCssC
eZKyy1BHREcOg3cfVM9MgSYHIwkzE1L70JZIu/KTVUxYR2lhRsI0vjkJzn1I6cZz9XsUgr60Ad87
xBQdlgT1EUdgC4vEhQE9rmNNnFN6hSLwSrp56fXI9lnKr33N2qd1Txxa3RbZ3/VVBYpb1n/o6W2U
bxWPZrx4kvIPEtu742sbbeZ6Vyt0z+GG2HSNVFpdGhhbryzCFlFdljEeeNp756GL4myqdPGq3Asq
Kwoljd63sXODrY4uJ8G+0b3mWS41zLJWZUIdVSDhhQRdp5BDsx8/JP5YFH6wjMyOTzOFYQMI38+F
nht3NOs2JiuuKMJ2wLgG1z3pdFGqdgYI81ICHT4PGeR5XGB+KP70kOHDOp7yffwcCnXPq45rorJ/
TDooNwbedwDm7SRgmJf1DMgnl4QppaTU9lwCSQlHFhEOA2356TSX+vp53DaDObJWt0bCnUl2GSZe
qmyH+a+Ak70gMQz2B3zeDtht1QUfjdWC4suHpDw8HgBvwxniEI9AC0gZWamvCRMz4wP7iCDN2kwm
KmRmQzffkwYX32z9R03Lc6j+V5hTQ7nMGruCd8sBlsVZUaVF+p3A/NNNhoodkZIvLkIH0psSvQPS
Ii3bISSOejEUSEwXaDpuGagNOhxMFgrqpz9JzZaS58vhWsU30RWqMRHnYgRiwcYSg+KJeFvjYdEt
Dri6BrF9YDFxPPTl+Zb2n8rxJbMv/nkB0wSp0nHYJDwQNKRD80Cwk2LgX60+ZBpju20tovQaruCu
ZqxCd9qCYTPduGKJlY/+cfysJZcOuc8GvAWuczyQSnvDh0qqgpZl6hqAXEvQ0JolWwuxWNs68hrU
SYCsKyourw6APO/Kyzna+f8VrdTLq6I8chqwUFA5jlVbJMs4eDdDc2x+iC2A/gyjBRM2j8YJP062
fx0N4efvsJ9wciDS0o6ZRaowydaY/B0/ThuziBlwMkX6WL3ZPjLG+1BskbMRDij3HPkU1k5scA1Y
gY6URx6n3mM9psQC7TeHq8yqmI4a3mxg+fGlzP8CvMp1qRcUF47kK2CCbxS/21BG+6KmMP+DQLCH
v+TgkyT4G8iUClhRy084Uw8JQq4+d3+aEli4pC2VYaiHWVnbWQ2jyGw7me77pDisAfB2Sth84EKo
0SQKFgzG8oTU/SS06ohD9dgtVkoqx8Xri/Vit2FVs58tv8al59HwfWhOOlF8R8uvIS16Qf72CqgT
aXO4FmnKLvqhrIBe+C5bSg3xmoto6SlN3ecr3TPv+3X0GXC7+PYxbNlnuUlefNXn0sqHbtYfCSxx
edmVAOlopfhxWjp9+7M/xNXkoOvlYNZVVxHp873rWe4q5qaUeczqC838Izlggd6sXg4QE5FK4Ly5
735djtbc2Vd6H5DCL4WXYwNoPjPcasyga4X8GU3/Q8mgxYCi2pU1y/0tVga7/k4vE8Oi4OYxnL+4
28UN2TIOqAclT9gnvt/AaOPrGnSfousqFdAkIrnYqRxsgdNbdXvBxE4+m9KMjvsHDi5dqzSX97Yb
P0JZvtNMLx/9IYxNDMpL/r98gtfTXFUW2dmc9Ljo+7utaB0RbvV/vnKknj0hry/n/aK0JESUGKyl
wGMy6YJVbUKibT5ZvtcD4qkwIJILP/JMr46dadD082tswMELKETt26sGjBwKAFU1I884AaTi3aK3
1y/NvvNZfLUfWy1iyHDQqSGpFazf45QyNzIpzgNWm6xZLuSfNQ+Zjkec5gHqBcGQRFRf5nwduDw7
vdn9zWQ+zCmn0Dd6xSrj3fFrJApggOI3CcS0ymbQrlZSmwlUdcsmOJ+COYy6P59cxEMG+Me38ydS
DaKMvWJEH9782qxzPEkhUKNrgwbAxUuaQy2Q7DGLvwgRVMgaywzfFKCGfPCjDrVOdbu/Uq5kdqVV
XnYrB460G5EYRVo7twLdXmSxs3AOgjcN4jtcEBRMRkbrBlh84nm1OXKLm0O0pf0tzEv4fw588q1Y
VUl//Q+DVn6Yz8wqCRFUoVBhuYq2syuNTK37oFTKvvgzs2+0ZDP8ohEYRYWctvBSqH+v0QrMkqwn
ALkvEikp6J1dZhviiajoJUw0+jpDe2L9dIHyI67hRNQdHHBwi+/B+74UThx0RLGjyP0GNEGocM0p
YxGgSkjocrsg2SXG6pCwpKTNG6/SIXN6Kl7mF9xb2anHpiC7qC3VKqm4cNaQplZg3VtjTjnizqnG
8TRtN6Vh+TZO8Tj7CeCoMcMz0DvVL2B4y8X0HIvS1+F4RIwb1PSbPLZYYHCVC/Dk29kvr8Klalnc
ZzhpSQKcFNWdylhXGBSR936y1NSCuvMMT+UPpAb9RM9hen4Ad0UhWJ0W2GYHCG1YG/WWhvANOo7I
HSDBLots7QVjOeP/Jr/RF6vD/hKO5xzAca5rspTQ/4GikzNZxFG6f67viSVl55iT/8cS9hj9vYm1
iX7HLfT4ZNn7AAMChSQBIjikCgZcewDiKHzGnxDCwSetKHiKPK6Jeq/U2Xqj7V+HtocleHizXX86
AlkHwYb4le7mvAiy9q4yZLf2XTj5o9RF1HicoMd+T/FTdGT2bJJj34XvwSx8H5AShEfiAGljyNaq
cXJGB7xwaM2bfBIDF7V7waPK+SpRt/QV3S47nx/iLYg0YzCJCoiLU6i7PDsFALJmOoa9LBSEiNaf
EJMKTX/RoHFncC2Rr9U2sBCVEcnrBrrg9tcG2ZSz4GYsn79IaYfUNU5AY3nXy5tOq1+4jrO/m5tz
bBnBGIodZbOpvZsTMMrxhWy/vaS1B0HBbLNEYcj7TgDBrhUYgS7vjqffMmlUuz71c9pFcCmrMzsV
tt5PrEsfTtsLHHFw1GOIgCQCgewUSlhVuWR2Ik/KMrkruu2uzruQeuR5LkGvuQEas+Hlqh1LDmdh
ZxHi5RZ8HlKNhWvGzHgQJtYgNmx964AHavtgF/c8+sLG76oIFtJlvlWI7iB9jeCxu6zpgtMTNRE0
3CuMhY37yf1O/SoyTbCviPszkAq+0iIsj1bFBoivAEXenKHNSxxBIHOTi3R+Tjbdohk+99lXyVoZ
ShiSibzrUBNsEWFC5ElBDrdZECUsEgLLyECd3qnH12DsuVgy62qjiGT+ysN3ZG612EqYXYJs2/qn
+MILHS7+TMt75gdm5q/a6sLzqhJWdO+9FhmadUVs9puE4tMjyErRdn9o+BJKXCw5hWgVAifcO88p
yOFE3hAHNvNtFYgWg+5CMN6uQVelZF4rj3Z/qzAw87LxBt62m2+SlQC+95eCYXqchXj51yfPHWYV
dQ4/46wB0zPLudDJwiLWaxxMaY4OqWkkA6BqtFtNh/VWF4TwF55GIXNCIqFefD6uwxzVkk9cglyF
pFUZ+ffqA4JdPZNZlFiJyiG8rX/cGqgvzF90Z+FGRsMT9rCVORPyXMBU5+V4kcbmh4Wvo6VwhL4s
m5FuIMO6yKcJ3hrHU7lWQoWY2Nq+t9r3BtIHYvom2A1LeqzFEH9ysy+zUXkoLbo3JWFZuHscdgDa
B0kIsEjDoGxvMOKFjelN+BiA9b0hC1BluSCc3BtMrYV4W14uJSUS8TpiyBWZA+i6cS3pf0L1Qh9j
+VN/NoeVvtTdc66aZi7PBo41pqWRU5oLuHXPX0E2Rr1qkAOZBUE+4muoCwG1Smz1u2eXDPrZTpRZ
hzU6tAMGqGwc9Y8mrrpB66tW40NoDVg913bchaT0uHVBWMfVlwif6kXOfMhjS/l7Mw+ocvIm6HIU
/qkAp23v2x8uj1ZPGCZZhxRl4R8YC3IeLELWa/vvcgA1EXUCFyQqj5LU4PB21YPZ9vSgMEzXOvKd
B/1O2TUvv+CEhgTX74JWHJXT/sTu/YFCtZiO5FaBtJ4bSe3w8PQQs082J6w3YjExvs0Yp/up8diK
kMl8b4iEsP5JGLohqjckZtkGvBEkTxrt97ghOvvjOVpGgtd2jfPHA9SQHCiMAcFrZynJ8xiH1YI1
lt7QCPSmF0zt2Urc2GGHJfkUbPPcHEV7L7MUewftQlFlmML6ymAcsmeo75xtKY6kCzEaySF/K16q
jzwmK3KeJoOVE56FXakd+U7EeyAlv6Ooq3PCnpHq6pxFOrzuotHZcg2Eqa3kMUPHWSIjA26Ia2RL
iZk6RvJv/wgk3IKtOIziksUXkt+xjlNWikuvKAst/64cbkzI6OfbeTN7rljsheoW/mZ3iFZ2Cdeq
yszRwzBkkWP8jsN1BZvwCE1l9qw5Kuafao05K0MWfAivGRdd7BWfBFm+EHojBowZS5WA1W5vWmCu
BVNpXeUMVsADpIcSbEcE95hPHZS7S9rhE0z8Mort2lQ1EbYZiGmVp8N6W0e113YQZEFqbDG8r1I9
LlzMRX7ZotXJZch3HNMcfGZZLfzysXBrteauZVaCSqQB/vtaQxYjBQNZaqTnj9QkKkBGrX+MhxAq
gqnYEVKiKY3vf/XIGfGFRRYwgYkHaVZqQxA5wgX281US51zmGFCTgAlkzGIOGjGV2v/Fwm4fiGFZ
ykX1Tz/HWYbvK6Pu7db6MsYspnPClVNpw0pas7LZoKj+D3h9D3NI9oHuNr0HFPMH9SXTV2IPRnYI
QuziBsvCO8qfnW3lB5iPTx8RLiDyv13q3vhCQmCZTC2zH7V9BCLcWLS0d411jc1JRhZL8ZO41PWr
eDIlkvaXvkX8Pwb7ArUcGFu7Ak0Cg1QUdAYaXjxbvGakI5/7ocowy5XQrSXjOevwAMnMtg6so2Ws
TaKU80ouAU7D3w8iCONQFrpmG+ROf0W7WCCMPtsg2LjA47y23Oaz0RKgIvPCf2hjbgLskRgB9Ysd
467Lv6D7xrhG7yABFINcrssR48cu9KJ3G17hXhi87OMAZgwyB/Z+5CTIRamZsZ7fIbMpb6hXtgnG
mUBYwTxLPZFz+Fuwr7UDovTq+Acf7RhVTwl0CpxKxxYZOKGZO04NFSU0y59lHo1C4g2GxVl66268
TZELaGh9x5uyZGpTqa3u7Rt0G2Fvk4RBoS3po91Tdaay+cSEb62cuzc+S7G6Fla5dNYQ/RLCi30/
eEdq5K67Vcc7lY/lu1h19kUlFk1ucUzF2EmhEPQvRY31CQdvRcCiAoxGLHUyn7idA+HSBOB6c8oV
QsWlb0xkafiIqFExO/40LU5CDwgJWg+3qj445gdDQsueT4UmpOcfDef3OXM7yRn5LP2tT7HQrQna
e0cx/0thIdbonO5dMLbYR7sRZnlPUaUSdC3IsGzG+A8NWnj+23rqhTiLxzuWLJOEZdQfPxznBrgF
2YCdXzLBMBtw9ZtY0pTcARRZkImH/0/heZOef0vAQ1EH5145HfDoLphmvPvP8wUQ2z0R+Dt/kfZh
EjGFvZGPvoQVwIf1xNwA1029XnIC9X/yVXeNl1g9E15pkzHlkwJaU8juk2S+1JLWsVVQbJmSc5yE
l9xvkIxI8BqyU3zfd1wQs0HgLiFV+KBWSiP/B1OsQB4HoErQ1RBD3TpN0lnuYN5fDmhvD0g9wi+s
GeULzZ9SctQqEX9Cputow8bvamm8CaLBMf9cJiVqVhBjUaIh4ELSLM1Map4cyzOcmMXAxeAnoCrb
EwdmuA0BslSrC69xeERPAc35B8YgJ5psOWGnldtQl+DHM4SI31y4o9T2qtPAPNHXHc+59cCYyXO3
F/BHoc6vsAt/MfcpgxUxjr3xzqGdF0ggAkh7PNTeLxPTzIXQ6Cohdg3g1JyXrKvao4jDoei/em0n
LXXJdNr9JWrXEPHW+9BGEHy4235xHTfZpPxEuDhEncRKw8yTrQyejm7oTba8f3MCUruTLFCpKckH
Yn5u74TOIsukygskYLUNPXpaUlVfNb5sVgkwRWjdt05N1PQUjR+TtxPICysdmSthq8an49CRtPms
PZ+8CDF3+xbSU+8NTqCK3zuC/S3Px5BrJmJMwFrlZX7XLB+jm4m1veaxW+N5lQOdhNwkEbcJUuFr
LV2UEUWMOgQXBT3coBs9017qIo9jDZfHdCRj9YaVgJIU4XauwmXkRmV1OTvN1ZefOoXZsNAvjgGw
WjF2fSTH/zJ4Le4lOLD+tUw1mEWOFautV7cQ1IkGVP/8Gtjmp49OAex7GXfNBePpxqend705trlj
eAdjrWPOG+swBzGMpclVIQDP1dKZV6Y3BTgGMV7kZqIDiZsFAice2qIVVLWT+inl8ir1YWaurHv1
tRzOAPPgxanv/SpA8/CQ+l3KJBhOsNYJ58vKa8ChpSBZ3gmnD3HeavxK50iBvXEOVuA/EzEOPnOt
yDcZCi2Gukwy5kpU031VHZjiIAZsvIy4dDVUTobaKORcWR/SRhPiDBYFszMWnFsC6TDLevCOqKS3
L29ASUnNKVP+V4EYAqiSwxY+EhHL2uUYe5QfZbRbQa7DlFstYhPQ/YvRDp5cOnfw3oo7GRzIttkc
JW2DXai/JbdWR2Y9n1ZmIFyv6IHdBgyFYOkpFguSR+QXM7g3gwNzUH7QqqOFeyWBPnUeFKu7hCZB
bai7LIRFYszPVgKGTOJRLA3wto4FIGDVIARARwQeWjyn+bSScnl8DDpI8Ec6sEvdlUVGmETn+BkV
uUq4BdKRXdKwc90aa9tMO3jhg9rBRpH9mWXVVHHxFO+HVoWQMJL6+dCXeYVFDTVtn/93npGBj3Uw
un3fFVN8iyfWh+6N/wcHkgFySDJSqJ9Vej8Qrr7/bUOlj8Eb6S7xOFJ7aFuSibyqoBX8HQEDLyDm
V29jI2AMmu/apWXHbgYsT91wnl+qAA3DQBoaj+mZqq+Y3By+RXX2r+QT1FMpPNJ4PcQ6R8N8et7+
5AHNw1enyIxBBfyoKquastm9022ljdbdHEWZQit1hOpqvofFIXyQa/E9lMzfoYUWQfRwET3vCx9+
9jQFTql22Mj7oSW+9p0+iObzn9c/6f1JNC6ambGmfJNqjPNnzZyTOumKTwecc9dwp91bKydBiJig
KkC6MNbdPb+8HjiGtYfkQHGt8pOlssX+3clzNvy877U1ZZjRN0KVfZZOzN032WbffSKKz1rXg4gH
odUC58XjAQe4CNINbBYf1LJcsfMwawKSaLRS96ILvkWTehCywyehnmpYPPZQ16EU8jICZ7bu1LwB
5FPwiDa4P+C03j/Bh9+tlk0+Su8Iqh/kCci60GSdU102NRozqMjYnBKO8NOlNHbtMh/Zpf9wfe7d
XyO2SIq1mJ2aWVB7wy/7XndxU8JdDTk/2EqRVnNHrAd7U1o580SRP3ffuwlVDTQebjBmXTt1F0Cf
69ZvjWIE2ybRii2oD8aK1eU0iWwLW7XghNEccNG0liMkXZafytfR2AXB8lSBMPbi4tU+n1ExqEZ/
0+pDARWToLR0mHR7pGpfgfwPzoNl+CcIbo5cSQxMq/6gpJ5+F0s4iIRQkbJHs5RdKGWytV89FIXD
oLrdbyFjKL5a7m0A0URU5Fs8NrnNjWSGmczTfQkgKvYSITDiZwtzcFrN6nrGJWNwY45CIwcNkItI
H3spttiG3A4nLXWtXMgbTcbQ35JdnZB7KAv3RSpDFZxSye8sEbY4vKMgI+bXOO+ojvKN3wAbIMRG
fg/sun0crq8eJihS/2gyoUxQcNWFalYFjJLjF/LxjuxNFaFf+SBNqtQdVQv9DMT3xcR/8oTchAup
/gt8TPHlbqkFGVnanvXJm6tyxihZzLXoQtpdzZU8E/wyIbadfJjy/qxfM747/VVZqMe20bYXqEY/
AavZzPu+6XAWyE3/i2Mqo7GHQLu9Y3xjnDvf7ZijJdv3Ud+M8faU9iOT5qwKBcEeO7lXjbwnDRWL
Pwv0gNYVb6dNtqlcRmWiLVDQg/VYqeDFA3MAl3z/hpg5l36l1qZFb7Xu1sFi55Sk6j2foAoI5xDu
e80r7zMxZJODxNRU2oe8b4XM44+W+gLDfpSP8H29dA650DEAbkXrhJvsgi0E5yPgoBFps70h2dPE
chcH5RHy07Y6/VV9oqZaT7SkgKdukRcD6rKyLOS/EpnKlhwAod+Tc4LnsjAgYF2S1EyO8PDNbqOy
bp0mPWGmA35iagLkOXrce4S2hS25GoNJ4q9R7XYGgd0EtfxkVxF4RKUZscuRySzFrZtMgrEE/fO+
LSmhlb+xDIRcAA+yO7YoLAPe9qg46JJvZ+sYQG+w73u3g5Rkqiq0xQDJGLrSvgyL1IdIgnu6MDS9
XUDzM8nQyOjEuzu60F9OpD1/1ICpZ2OlpA0wNorIr6cdsEYQ/T4eJQPbmTMltpaa84LImTy4X9B5
BFjwLWKx0srFEjIYqTD3YrnlsHzpEfeLrfjCmcSydIOYU/xR6qRybvZ7VbnZrV0hnB4phO7QXKc3
7IG1+Clc6kfkeQn5+11LutLvNqUbDxCuyGczdXmXjpnLiQ7NCzflv94s7tQVm/NjjdRLiyM06YY3
WxyqZFTJEeEWR6vnRewkwgsCMPTupRCjTH67sUmioZSLdAH9fHdNlKf1Gne9UHFr8XOf6R38XllJ
uzfLIVDSf6wvn67xYLrFFpQPxX5ZDwXCB3Cdr8dgN5cgRpNTe0gbDrosDCCjiUoP3NZ5okG3tTr3
ioq0SqRw7v6Y1wwtXgaBdqQf8b6dDDzJv697dd0UfZXoiWbKxFrqR2SRV6cvXE0qd5Y1DXj8qa2K
LP3GvMAnnrBSUBIg3vXdKSaZAldhvy3bTyCEZOlqAvQY4M2eB1RmJZjRt7zBuMJUWEFc8+/4T/6x
GDatb17jCqF4qAI2RpFt12NZa7fABZ+hfNVjmHEFAiQwneEqj8GKr8Kg4J4Aj3gjF7uDsnSo+ZHl
2mJT4RUP852LA/wKqfrkGkj3iqNg5xtkA1GjpMFTyW0B2nLNYfrfF67aKcAXqrBnTHgpC5M1tKI8
wZsb4MBkxMfrzQuNSiZ7F57uwkqS59dkbnO1Pz4oUPtTJtljN680UVUpZSgM+vJq39NM7QwlZ8ex
onXi/Y+25OQQ+QiAOluXKPhkZJpl1qL68nYuZh314BoLqgEQf3tCQ5kBgv0EzMSX34BLmP9BQlgA
tSFf/z73xowFI18lkqsZOPwlgkheWdaYKmkKL+okLvuaXUuPIhgUasHwVlqXC+P/x0Ti+KXG3Bg4
EV+EuWlXl5T6T9oK8gm5mKbtOPaUzVgELmpmJ8Gmx69A7ui8ps/VzNE8FrRi1DzXjHRveIpwFtpd
pnQofqgyPYyVwjNo8bRxQYPpMFY1p6xtMYBe79MS9FQTAGPS8bcqKLUxByTScpfNiwVfji2sZXx+
iA5Y5rx1X41C3837wqmf8ubOmpHnoBXqIIe8Y0mvPhL480ouTm1Z3hOxTHGpw7VL/6LbdA69qLbD
6rF34wWHRUzrIaHyKA5K8JrpBM6cav3NGPXZWQmkCPQLQV1p+G4YRlYRPaI3TIv1h3n3DMESwLDv
6cZsXv7hir1x29LG2iu0tTwinS2aMpZiNJyDUj0EWtnHCVLBOqFgIlSJeMo0NBhbrI7CMKAjsjM3
fGrBT0zbOG8sypYGqAiQRG2PJgM0UbdUwS6PrIt0QYIH8C+51grjx2qa1fd3iqp17WUz0tifkZhU
R+dmr8oiNlzvrbhKaheqUyqsAt0JRbX0SBwfiOYTDNvyyfSY+j/82FGHxKHEr5mX87QjBL7I8j/Z
YXQ0C8uDwDUB2WZblascxOxAwgsQSRQwYG9OgQifUEvScL9aYWGJbkfOuRLjz2Qq8gBETuJWRQTR
mtvkuO+zJTkRPIEO7WqKEfrHTcBuRmAOtQiGmR9GdtO6Htto589ZI+Kix33V2ce90L19tJlxyDXQ
liPibATzRldPy+/ZCUC4+OLmjmnhIN9uOF8qpI6VleJSmdnP6XjlqlrSxqfZA0FuSnPMXIoliMDu
u368RJ1RMpZYuRw+hVRmGBsAPmqbBIFPWnYo1TSenOv4Cf6Czh6NCpwXvFhQXV7MWpzBeRZ/wSZO
XPbrC76/uE3JVN0GIvykCvnM1uhEL1tKOa1j8ikvhRXa+jhDmYIee2AfbUQocyvpbZ+BcIOr2mH3
WbhKOddWPbFsc/ohwHRhXe/0d3Z+qSUDCTiCMIHeVLGQHPmB8K6+Xf8aiEDqF+Wo80EfpPS6N3o0
NKzd9Jf8yuLbUKEFZ0AW5uKCmBOHLD5u1S7H0M72fg2chloBG+Fa9ROCUYjRJF6bpaKNvTsotnD0
/NRe+f78ANahxEwlxf6hFJaAZvLYCMwNhQq+dpzXamaLBeqRiVC9kP+8kMu2HZIrW3bTJx8x8b6r
iB6bqnSpz1G1d9YaPshFAuM/mJ+kmtJXmXhW7A6sQdmanWu9wLZ5dlkxCZAv7mI+hD94Ft35F8ET
3oMcjZTgpS2XBOyNXL/9etA3/c4sJFF5lKSQA8k/uGqhB6z9a2Thi4Ipaq+6IGsOBIzsL41cJIso
8QFvAdcaZsO9+Y02gP7bR1Kq+oh+B88JKhiBwhD27TTs3Vfk8K2lTejp+0jsQ4tEIGV+YDS7EM8L
JZUV0Fdqik5xo+4FA0R4S6iGml3LZzinncAa9eh5UPrlXm8+jeml/FubLUt9kMGD8MXwi/VJGUpu
xGOeEoNZHM0JwTD4MtzNXPod3htVFwRq48EEF2YlhWZxaaal62bWYO0Lcp9nDiw7I86VXipSbTVW
agD8EMtxrEejciuwrOB4R8Bav4rSAZJsS8tdRugetd8V9StVp3u6P6V0kMWIa8CIbU8bBgiaRP1Z
P3Bk8/hc41zCvXXlyUQMmH7R+ZuMCh9Ml6C3WIliPE910SQCoy4PhmW3rDVfrwBVqkBtpaCv4zPF
35GeMU+EpVZDk0NIdo7lsxAh4nDJ+8NDT6O/NnhIMBveiqCgka9PLG7u32lOCWCDK8nDB7JrIVOu
cP+QFfypdQstJHqqSZgIC4R5dZejk/JOthe8IUrDp6h5YI6x78L4OA0jHAi6g0YYdSUlfSyXXc2x
1t/78n5JnHHD49I6coNSle0tiz1sdND+UNYASvX5MUa8xRaAdbw1ROeaSmVAF9w8+HrxXvubXuFW
q5aIcuqVTl3614VvAWJeGvp0dAoG+Xj4Y4wjUC6jmQI8Nql3808YkpMP9S0OEfMzsXzQm1mMZQqj
Xf97XJpycrELLd7CK6l6H1yAzjBEDCC6pAOuXMezHJ2QYfuPV8M7HieUYOy/epmcBsQ2CZzK2iLM
Jfye9j86KotJVph8IspyjHBSjY/ETqWFdOYNcjmfBe77LtO0wyu86PI6Oe74BQA+QkXljyZ6pa24
SCYdQdlKq/cwOKHRWJjwrafktpdgn44jSZXzn+DVMEJEIkyC+YGPqBIYpwqlnXC8Y5bzumyCMl8T
ZWHgoZlztdQCPAfLycT7BKxUNBU5UJAIHgMPT48/R4cK5rh4TkgJuTug4DrHDmyDgTRDQOG41/De
ZOq+c4IGk3nFFJV6LnGBUvBXss5GaKKK7FKdYPaXqqOo0ZA4yNiHErB9ESGz5MDgKwVo4IRNH+z+
yXlfUz0TpUTGiel6Wv9CLvPXfpNhcbBriRKGp/K8oLrT6+MAYM/tVFMmgYSgvTo8wTX8RRO5pwEh
ZKYG3YPRPewGOPuKW4LMTQXn1Rk8V5EPjWwm+K/ZGZyWROBI4qJpmlKSWRCYw5plg7IUk7AyQNrV
n3Bj20G8Enm1tR9HjnXR8ClU9ZbljX74ZRzm71Kxw1Ch97aD9P4WiqCRAmsV/eqA1HeZCVVqElsA
Li7zaqzQ2FhGPyCz5eoYcO1cn4J91CM6NjSOvVdxNWtLEXs4DqTGd3PAP0pgpT7oBcQ5qisyE2SZ
PrUYFbSgN1EE8tiao3xKoaJgDYDAv6xcZ8Ron3vn5F7dQIOp1HPSF+9KfC0tzVaSHmDmluFyGJTh
id84q6kS/u6uCCNxl2w4W1jfoTciXHhZ+JcvYnyHPNAwUD5HMSBaH54W82Dt24NmS3vFYWyBcRSs
kUTzg59Ird3MWm6EGLpSVTIoPHxf13AkGMw53k++MSc9X68MjkzyljwizhU+nrZk1V4mQFbBzIKh
yQSoVMrmQdDw3O1M+MNe1BCOrySTTcz7OiPtrDXjzWQVHJfPeS/IpAlxcqxPh9h3eud5PArkwprP
zrrcaaVfUDq7CFo2QIdV/eo3l8iOtNq4/Qtp2D4iAh+Y1zHzNcPTI7lV1OJz0bMKngUdk/qdRqml
HhZYx/rYw9rEMs+Fqj1f3ZRPfZ735YKxzBO16WoK1ZtHA8YHk2ai4WaeHI9zFgpLYgCF5T3UnMMc
57mvABXB+Kt3Vk+fumx3+KopIj5+319EmOHSQWeMIq2a0hIW5Hw8kuwXpeDMegJY13F0bwSOG/3N
PcwxEVtMKFFMhoqa6UpvHyG0dT8XOrE0c4WUTVhpA2/oH7z/wGUk8vCym31odpzyO/836S5nb6U/
+S4xn7j2EHLIKGXnXoKFMaJTjHsMidS7v47DrniDYNqBbjmrEKjtZsqINq8Ci5ww9UpQ6CqUatEd
z1t961UhpPAZDLqdQqud5J4Arwem6974ZstjvfnZ6tFIUhQuaPTKI2OZJrQlsAbc9l0Kqf+q6xow
otSzmrCStITyG5BoAs1fU94OFPDNfV4AyqHeKiK7m3mAagr9LczZGCKb/hGrbQQP8j9ChJNPvCuz
Doean0d2szp4opa0H38SiQ/v2tL8nB3Zv/36yQ7PP9PwvpF4AKLqrZg5f4aWNO3oNMKsVJScFQef
iFnCN3OiJiu1GN5SJ64HJczEOyGXRX5Kk+KvwG2KHL6oUzWPsDrl3MphwSzFaXHDkoZ+6Z79dSXh
/hZbOeIIhbDsvQlQZOZIMoXcxRKzWTNWb9OCF8NHzbwrGSlnCQ93b/gdkI5ZciJ/hxqzyqnQhAre
YqpbmF0J7JpxR8xrSQ3MPOFb3Eccc1BAUh/ZE4CBrH2enNQF8Zx8Hh8+UpK2doyqsmwLeZR4/XOe
xSTlVmHSO7xp5Ea6PB8F1YXsIYD7Nm6zDTyFIQ4YAp9H8ywMcAqXNuGdaFQLuoqqmH6ma7WH2cRm
hLkTLjcnmQieRQK+dCyUB5aLPz2klRWVqMLGUp1HXv65iRTwDVz/au1w2Fp2I47tf6/nzEZVEty8
SrnMMqhdoeGfjIOkGbqub2Rg6ZG6ak7vJcJlPybooCPj35hVe2ZVTSCIZeqU7tVo0zm0YGFlNzkU
HtD5zdVKR7qvhDVaiiQmObytK77rZy6u+DjBO3hpS471oGR6f0nlopr1Zov7iFSUvdV1mBjpAoco
KclrNvXWhiDybSADzLqlRIg9v2PNPMaccBVpm0ySxS8jXZ97yaehA8TjXcyyCuLNolZhbLGKjF1q
o9SoU5BtLucPA9MxxnKNknJzLLDzfLLEqAj3OHIqJFZFig5cV2kc1NndrDN4pTDVJMKh8Mtrr2XK
Xyai4ePZO7t172htf05fhfss/TJvurgCHnaUKg7eRWRQw8/bCZ2fHKrTll3V2hrKC3LONvldZuk/
y8BzonhHaRpe8j3nfdnrPdPCpiRE+5bSqSQdKFiN0Mbr95hsRgRDejpr9UJWIcY/oqxtA0owONtk
x3j6Rl1u4ZBsggYUIbB9HjYkp/9OT+j2Z0ptRM769c0i/ch2063LkkDLPaGzSPkC06uFp3YtDK6N
vvVuLxprD3B4MH7lTfSIwB6O3vjhuA7GNKYxM41JmZ2gkowGrGcH+rh503ECAzDGP82pqGlO4v20
QJh3FbHZTyHnDgH8JA8QLRePrnzaG0DmWdohNsHUz51ogS2e5kiXsCoF5QqtAG1BUytR2AUAoOaU
jzDSJf6wEHHIePLR6sDveoFl7KTL+gsO56he13hMmQl/qJam0h9hItJidA5UcO2MmREYAaQUsBmv
gfxzhxa/DWRIJQpBMlNuFYxAKqgsi9v/t3BrAKZI8+uHBYxz2zjzfb1fSn0mkaV0uu4iHLuiU95c
/zU6rc3yEb1dY5rkbC4IrinLUq7vx+bgzUlOCh87yPqCjnjh0kAxZJ1v+Ojg8vuSb1U/sYJZh0xa
OqpNuuRJNvDk9lSsHDKkhbZcvBh7eOtjrkWG5RPs7BS0BxVwCw3n2IjRcyCXMp5tbLhH7zuDZsit
jEffX7HATV7CR7CLLpgCVNJIXpuw6SVhIjb93YdIApXfSCl9uB6XI5TDRh293MSecj6V6Ottx/W2
Tsy3p+zRQ5DvxWKHRBBEH5+iaU76aCWZIAOSe4uALPTEmiR+V26TbHX6ZPkhBl00swsySUGUFdAe
JwnXxES1/TTlkQ7I6F/k7GnU7nP+Tf6EbivQaDHQvV5xynQ7WHkiO2ggGDLmOZkTNLyg7QXCt5ag
m0/pjiGFWOAESuTqMUWsLxsGh43aI4Y9Ae5jqZtd28ARZAo9LyiKlVZWTCgI5btZGiHY/4tn+o1j
Zf8l0gKDRSTUxCARSTnvZ4Pzzfl0k/UD10e8Jm1Nksma3HzsX7w+0ORhB7koY1hFNTrblEumC2ob
qdYSLVOR3wRZ9cMVcEmiIoRVQt6FUZ0pZVSOO8hcB+K2sHE+iuHG23hHqQupM7OAwjSvNDX+LYp6
gOJg7rdtIHpdMcw927c1g+oQEQ8ci9CaX8y77ywmofZ9pI2YBuO5UaSOoOAQYxxwuiFlIl7sJ7k1
nK6e8DBsWooF1jmgVZ/VG0vIVISeMXYYER9p+B9iQqkW/Vw64FX80RBoHjilOM6olaWIojJw1Igh
9e5CeEP0Icnc6+Nds3XPDOoR0W98xkHcV0ncNMKQq4tLKHKrwm158v11R2YegLMqyTLFwyCVy7JV
go0nrZpRkWinkqHWU32zk5VI6lp3YtK6Zh0QV9cFgFg1cY5mhD3Knoia2toEqb9u26VSZ0avA+kz
O6iIV+c9P9wUo+OluTW6N5dhd/e1bZYZaZGZeDHzKgfksI6nT1WSn+Cn1aVzMZxrxivwuzeD2QlE
BufpSbUx15x259F6G3adiro/WCZ6oqKVJQ8OCAxK1n8/BHCs3XhUCuw+bT/TIGkapvqJA3HyIgJU
95RLb6RfXG6Fbg7V3RqErvyyUCmT659GDWcYQ5iWphbS2rAlcfspH0Uk7Th5excPpi8a29Ajo/59
f8CBsjyPzEyjf2xVhF5Uz0pfIvbRDZejJFd1lOf8BFpzluvhtAN4toCitW5wf/F89D+/C+PDslC1
5oyPEKFNEs1vbdNB88O2LckGWt94BUwYqozZmTxtUBzaSsnr8+T0ELK2FI3B1M04nIiGpwOCt4M+
Fnc4QVtahjB3rX+P1vIpIvpQSI9jeUMjYt/wBdNvmtqJxCuBGfNLA3XEVFViRiKfuA4EjcTxXRJq
5GoGwxsXj4pylzuC+6QxQKuMoGcpcs52K1J58n0oMnoZCIthaC2Wd3VEjG1dMaOjS0qKsOXq9spS
63GdJAdbXrtDFFLmXkYrRe9hY/oJ+FTC9/CqDoPjvZypqPO2G1pakr9WAdRiHYWZJsdNnfZINSfR
Qy2b8d9ceVWalMO1y0r+Mni1YXnU400+WbIea6Zm2aqG99ZC+evUQXRBwJ8bVLdG+5gmRPcxaPgT
/WL4vIMZj9fkfaJjcqytLh5wY+5GoJ/7HQen9gdi5+7EmxW5E1FsjuFVMt/hyHdPQQ5l7rlfj092
dQNK9r2eCc7ta4qwGZTfddSM2Rtph5zq4VxtgC3cXuWLCkRHYlypor9bY8E/xNhpiKWZtRLPwTsm
1yrOOoRPoFB8dVeoiX2aUaZ7hOAMdBrR2VOlISn1fn1BwaP2USlBgOUQU38t1gTwcDF3n+9+vZOe
K1RQwNBDvqg7t4EhMJ9BGQ6/mH8eUkle1EEoGFywddm7rkUo0Qt7NOIkF6IHcs7k/nGaAQ8xiZrU
6V/TKzCqlIIYMSia2TNfxjs0vXAazlzuWwrgw1gxeXLBAihif8MRFek2SWwuCB9fOOYhQBAgwAzI
W/m4WgzvkRNXImkUZS/pDya5RcRby/Zl2G4XtQQ3U1KZCIsvm7k0+8H22QEF5lsTwLnpqSY/oRBd
mtMWSCItNxI9MzVPZAb2h0mGMswZBkYEnapwhx1psRqY++36OXwsJTid9G8t72op2UJ0f35DoydL
LpYGg6Is7PFLYf8B1vb7R6DsQ/6OsuL9tao/Ln1yDWyxBNuphgbxXYOGvquMbgJQgGUC7/UWS3U4
dydNZbQnss7z1T2nXuy641BZ0hhRfO5xQuYRBVOgrARHI9mQaXCnlIMgEnPgF0dM7GfGHRHMSaZA
5iTi0YIGzo4UiRKHWEUsqsxcj2WSjCUi5WOIWkP76DfTZGA276sYIdSPhlyM3kr+UdvssWZSvEvG
Om8Q336vVoDwvch//6706K00IsyYkHINRjE+20rbQciu5dZUgV2pibzZ6A4BjE5DQb/lM2n/GPSp
kF+M6e+rz525A0KtB4Cc3fxXsNA5dOcGx0OIl1Nc99eZ4FUMKhYR5pcrHnfvbx/jFfdENolAQlfF
cKIAdWfyaDA3FXAHi43jd+iore9L/ctTQ6QfoJYvI2DMTm6CyRfj3BNlv+qUL0v9itG6cC3Ep3tg
uThEWkTkmJBDTEDdS9w6dU0/4Zj52YZxwJw66SnUz7Czd9rXJ0OLafF0DuNzmv+VxXh7nfThgDC5
jTp1rcpuV1KKmpQS5vLS/lOHNnONgMAGSDWuoh4hn9LTnQiKOE8zFIYiGbZH6/xJo7DvhJMuw0FE
XcOpL5NoRcY04Lg3zSunArmdRa7SPfJ1JhYUdBr+yg94KDTs0aTMPotOldHaIs1RMG1ZSMk05J3/
aeT5uP/Wx5Q3WThT97U+wLw95qXnIhV9yd+kbUR5p7ERouwNdmVbJsBzPsQMQ7H/o6QPbw3HoM3+
VS39YXbKItDGk0wkBCvlZz4mPKSFkTytxondptJzUd7V7mg0xkEXPSMMKwbBMK6USYOA3v1+Ks4b
oH0a/hwjA4KkJ8qTKekwvkAGU17ncQ5p18MBTuOkj1CgqjPAH2z9GpK+MxQe2LhsTtZHPOGoJ+5G
0IzDnmPZu6lbFIRmZEkRc4sEGZd2kqvSpIxKcth83kFv3W1KEoMeAAW9kJl6PK8zy7eBvLjUcsWS
+bxOuZsIdB9WJId0W38H2RXjdEzpiaUQMwtL9eho/SS2MsR6GkA4DyTpSlCtKYgwpZoB6ypPgSED
oTvdx/mHz/cJ85IbTisOrLfNaHDroSnqXJDcfVNmMvRGD+sI/CxW0BQFSb/z9DqdTN/VTaxAlvXF
plvFqE9Yqvkeiy03SiyiIQOD+nT352fGeHBMVDMdh/EOQ6NlrK2BV+rnWAvdCaRpUPUGcG0C2B7J
QTjhSXufl8GIyj78yfrHw/9uMaA4uZmjdPuBc0iqjfpDoemHXa/IxR8n03AKCj2jBCUMwXrK/ZyA
3hLENPFR/4LoIhan4u4KSADYHdUb1++2rO0D9l1ltJJ6PsH/5lloD7yTHu7H/C4YwVtjhebffAyh
aN2UYN+Fn9WW6sV47xxJAdhdTuCwfalLhozugYTekzkcfSpgpog0qiSMIQ7/rIA3DoODfV3bmJY6
hFi5/3k4GAocAgMsHeH+EK7oA9LHE3dY/iOIDowgbF5O2tvhT3wqs59Ke443k/Z3YT+ywLQJTE2i
hKiUReI2ydgxxJa4tXEX/COgljMMW1nzlJEfHDnxemCc/9OwVb+OmMquDWpFeI1xpMQ/Vh4Er7Nd
XrYO14E4rgPyDBRtbzBHUcxRwllW8TMjgIaVcsHsPtJbX3q0ct+PEUcxB4wEM1rN+8e1112H+P3e
CwxR5IQMV+rQfdSzGMSBtAm2Rv+4VZkrL0TgwMahcew0U3lThuKYflFcWjJxjzl5lpqsFdUwIhRs
lQWnbWqFZT/ekWOQpawjSVwlYGq8b8PsNf0RdQoOWJ7mZ2Fdk6rwW9U+hO/xuzMDv/7iBooKKuUV
CqgqwESaBS8sp5751oVCgeWT0tdARp4vGrbzJUzvJSfBbZTJusnP2hAdeRmmGce919l3PUNiGgoa
mWH5dsyjh8N0vAR0F/PLtml2AwlxuOCCCIfSsaf6JHiZ7hPPD1vs/41hmNcju9SvXPnSq4mnjAD6
dDI5bJmIXHROac59ti3jOSZMT0orh0QvSO2WrfIC8f3uBvjVufO5Ov3dTkWKmn2dMGt2VxgJg7zI
9+g0BDWjSFpSc3ycJGTb57Sx3B+yLuNHiWrT1KjRc87bhVAjDKLogxrwEFqpT1TlVwA82pEJ/366
N85b1dmoQnuaJIHzaD+NyOns7lbbGezlCHv1XuhnypMFi23/rONXPy+iqdU3+72WhGLA29uc/Q+T
DwrwVSqW6OToEx9SBiX/rXq5TXcVfD2BRljFJ7Z3woDTefx6wI/0sZvIK91lBj8zUTCKmxsVQDEl
gyaZPQ2DJxbmz8ItU5aTnrXa8PX1jXC0i9wU1lAwbACgCWwehCeeRzoomWTqjRLQGAnUA41QT1ZM
KaMNKbAlJJgEtdwgfq4vW8Cl/tlMGvXsYtzw97QuviBdTVWJXLVvxc2xEgJicBH/BNd/bbGfTGsv
C9M4fXv83FfNUDC19nnKyOcbkgEwmqn0G4FZ5XuMscA0McsXEZdZwandyaXmzMKgouuLMAY9TOO3
elM6e9cl51Mi8ERVK9Twq81TYFic+8diphCtvl5grpDAzqdA0QNVrp7aTObi2SQIQ1Q8Z9SKoCma
lxborlXXHd7BUDXtptsn9N903n3aBndagIq15jMm2sD8olZugxJw525ozFAsErG3vCFjicz//PJT
Q4MbY+Z/Qbu0q/QkbaFOHyPiFIsM+xJ9u5unz8Y/hYPb49Zf7oZX5BnbQ8q8ugxYoCHseDlH5/7P
xaqAXvOAM17vZusQ4TcCfwgFaT3JNd/9TjYpFd7tsQucbDWX8w+tg+Dzw8+9v1IzX2QaWF6TEXZ6
+lpKa5yggsI/02r6eJ0f1zN27k0nSssBNabjGGdAHcpqEvXnUjlquTy5rijJPkmjmxrE+BuJ2cAK
+iEbuTQIAbDSSRfG6hskfiTXIx7ls77iB9Nv8qFQnfoqFmOKa/KQXjW4x9a3kOMR8DE0h6ceVs5W
/PRP7lHbdGlZoFAixXh8y4emnsy1RX6a8Q+ASmOr7FRke7rUnkR9vEQuf/XJaC3PmOPM1CuUMdww
7bKa/iQVcdLIYOFuwLSaoyk2k3d5818d1P5LDcftfBPohpoqU/xA68Ad9fqbetgVjHx5PzOcgKKY
5fjspIkhoeDm55Bn88a7M68StrnADOrgAr1F7RYtuoQzoz+/61n9vtOJX2BpJ1W4ysb52P9SKlqC
RwX5DXsCbOswlX25igyh4zkkVccPnD9fBYOtcUpskk589KWQCgD/rHNrVCk0QT55YUfEFzhsm5i4
C7ahg3OKJ88bqKes+A9/MDee/OvCmv6q8V+A3q1dhjT5RYPvh5zBcc7CTksNtKM8Ui5GrpNYk+GL
rGv7ykTU1seWiSX3QLZsHjCpTOmr7tR20adu/UwrLI3g6RP6ldx+7Z2dqsVW1LXNYVJetWopjq4T
dmkzknSw1kmGP9xcjkFW4pHpxRHmpXi1CCszV6DcpOBQw+d7oZPY8RUuBuzDMh6LO+/PmEz/cPjW
9AzEZC2DxqLEvMLfRwZlC8tNAvCJKCHiNB10voCVvD32YsDfRj/POtb7fjHLme77h5jahvewduQB
HUJse0IHBGvFR491uxWYmCaZK7XMvRziL3+hJQW3Fb4BuKru2qOSWOXCsOVfjfuX/e15uovf8cmF
QT/xapUMPFLW4ziFBfoW0KkQdLugSMLgDUoMnp3cPWS9+G1YEwIQK53H2xCCC6cSd6KVfGjtRJPQ
sToB5gFLrs6OqCyvhcaFhXDy6FzlOoNPdmkfjVl2984ihmZsgBOepQHGmhIVcKzQYNTYfcnWcO7e
NjhjQWEEPgRDhye9XfRHrH64EFHtcezaRY+DbpC0J23VPFedAcD/8K/G16FH2QlqD9VhOtShKwiR
ROM8RqVgmyNdvD/OY8Fr4COnXYTZV4hT+SsIk7K+OaDF7SOPgm3vdueQCW4tchivSyHXSyS1Ejnx
dqamMpZXYfsPx559+2c+AwqmjdUUKWUU1CPSzSwSc3oBEuBiS2aVRawkKZ/JyFmAxX2EXBnf3ft3
ShsleVuilDqDO8flQ1kiwQUC687sSgAFotbQlXfE1Tw7hdW6ruFnhWW6+TPRV+T/mSovarHTfm5i
UGrbTFXFb9hRingqaCD7otj3xLCqbnt6HYqD+51RUhOYUBR05XOrzYAOit2vkkpTtJHaxQ5CXDqN
0Nqj7U1VzXhM5S52gG1V28uM4n5OdExOFeQJjpmFlxVeGKJHQP0cRAOiyxRCfZTk/KuJagF0SQYr
NQB1iedMhgErNHH+s6qt/kE4M0NoZPh0jAatWvAXzqWB5wysNYvEjOKm17wpZtxTlE79BOCKPvyG
c6BbvI23OZLFag/ygYj6MpVf1cIh4NEzGachqHCetmyGYgRd+7AJUfOhp1pjZsXTTJDbsblbsr34
HD2c4dOspJvUxAFCTKRzKzwo8gkBFWONS0m927DbA78DqfpO9NLLPz5N/TzUc/e7ZirC3FYxqNDQ
BJ+u43SjcKM9vXzTUeJXac5po/kM8rKK9t2iLN/2Bsju6xp+J/XaVN5O9pinEMGdPjildrAgHzBp
5diTHWLby4MhWq6QuF3TIY4SR/jxDqrAS/kHBDjN3DJXmrOKh9yZc09gV2B605hbqBttvH9jU9Qz
530jvuw0Sy2A1vwbTuRmuPkB0A4Hv4tw7qmQ2VtvEcCmmYwF+0PcMVO7s+piFjT4PgE8C+SPh/OO
eSagpf4Z10VwDnWCPTCpAG391Sa+XHITOb9Ryu7qb9nwknFba7lpxpXhlIBMEgLPuwAHSu4NX4Er
aXaB7TrT7BM8AYz/ZMN+4uM/C0RLreoWyarzMWjJTF96iXefvC/f4y2ofpGMaG/F4cSwfrgDkVH0
XyBxg9khB64UTl+4fwC1lr+Vfm93Y9x8+Gwj/ex0FJPxuYD+EC1rnJuWT5MmO6215VowLPtf6UGb
5i8sfNPLV7cIUhGuBO9voDpqMnsXF8b4qXBrxyLmON8SF4lLu7Zbg8M+kYf68TAQfhoIG2MxCp6t
Qnk1zklVdeikvgNu9X2hxs7UIf948JJ6X4uSXxfjvxpn1/pr1uNelmKLuS065ilcTQJftL6iePXv
kmHum2kSkel9k7W3jSHbc0w+58N04rYBFDQyCYCzo/7B8bMj50MpTUdzvyckZG1yQQDpgCjoGehm
bmHX0159ZSGN3EXAynz2i5UZnzjubshD05yZmVdEGGZFmFQCJ7yUWGWjwKufEAIgwKYCmU4JE0ky
qs4kHrSx4h9vKNd1PDf3V9j7djA5EmEG5QeuBQK48qjuKHrAgwurN4E7bwa6mWU1Q3goLJ0g9/4O
DDpOT1dR78RDxY4sAAB8Q3Gh0X5Xb3SrTn8hUXpaXDLTCXvZy/awTwKD9NxxdRd7sQrZDJuWvcBt
Kr+MoOFG4F6/C31Vs7P+sVIsA3X1MvZrORSw8PBV6F1T76n6TRM1Tjczt5eKnUaPni+hgEtRdTX4
lWaBJ0yMcyi6+2oxHOaup8zmllJRpiaDnuo60IG/pv64MAvGCSlLGeREk82czZ6E/E9q6syGPzj8
VW6FjXH4zeT2U5MEEZN4zM0rTQfUq1ViPCB6cRsSxLsjHBgOgpnKn/F8QmVMX6fAhWk+mU2wN9Oo
u+6ebUX7Vg1dWkVkmnWM0WKflQG//FpH0B8L35G1SMr9o89Q1HikiHhsMAEcVsrcaGe2T1XhiuTB
vCHPn1rbqIO0pqFlrILIIlvN6GCgEzR8ToM3g7dudf0Wxk6Nm+ppgn+CDidY0v+xamKhf0nL51pK
GuBNJb4I9tFzwnkxdTyRBXKetGXft125Kg3ZJax3L51KEyrEQaBhET/+YtO8s2/5HeZn8xFYUTzK
TpzasUaanBgDjlNj6U0BltJEFffalnUHz0/P2Jw6EZcIDcHNeDNNaThltkqhx1aeVVCLX09Dx69m
j7t/pbTFSnil0Hu42UbilDaSYSnP3kU3w+clb19l5Yh2EnuWLoXJN8rHG2G6ACNk2cwaU0oe45w6
n5t0BmlAnxDaaSIzLuruGxTrJpCra3i+l/KTVMPCVBrefMywOgDDRU/dg5/mHBkrlxftjg0B62t8
G59IGxiuMt3zmQtOFiQOBHPKj6CVLkrJii8b4702hBP4yKb6D/Td2QFvYoWyRAvlFvPFDQFtXU3J
Q3XYAf3hkuCHr+UvD1knhTTvM+APgmSIGuzG3BbwAoqjD//zDBWxN1wbiXQij78sTQubsdhINH2B
i1Uu/ZA+m9ptOlFbV0V4X7WJjvUb4OPedOwHYooAseFjTynP7KwYtnY43S7b42HbOQJLjzqo/wBt
fDo26XNs2sosDc8cbnWrpJmmVuoWHusS5TyPEQBHcWYxAWgBtnzpO2juYZ0IrHxYToU4HGQQIlWl
jo3iNdjqgKEazDFcoJe2FMPdvkc+wL21Oj6UADeqjfry7rsnADMRvm7RIM7BwOM2F7f8e2cnELTv
VzEUfyRkJxl1/DILoEdj9xWoWxYBwWG4ixQU2gTAav40cixN8NJ1g58tw0X7vWwzfF+Mt+fAjJkk
FAqFFuGV8LxTODlZKIqPuGJ37z+6eNjVvWHardaFOw37qnyCVXZbjhkM90VTWjzM4Ssh3TpTJXnZ
xNCbNQ3PWTcfbWk0Ay9OjH5JCXpBWViLlbs6imoQgUgktSwgLTMwBcdz29dTwvkyvgiU+eucVtk5
gnXZHTIuoTrTVz2KhHr63aYdbhmwGZZnUa4VmmpPxwqR3/aKB023vITuMAEarWMa+ultfsA7m40k
9qcqAJKrOiapfqrBSzglIaPGhE5G7BS3RPFInS+Op9mWNaFLd0Vq/oC2WPQAA8VZxJkp6fvt/6jY
tS4D83EmCEB3EgBErauyj/IRpnKcAopn+2bQvEJcE5Z+nteIaeYIGSD+fv/hVXGufv2yWLidjdnG
K/xw3FFJhB8KF+/dTNXjJTOYJTGGUCzheSEvJGFRj1MUYUyW4Ld+kEJHV57Ij3/0B9GOAhRGdSut
MFJna58B4f8PgzTttQqg7GXR0hSHNTH7DrJQEcsdG+9NhhCB7Hw4c4Ir7H4z0qfYBssaLKbAFkRA
tceWjUJVKepopWjGZa7jDAvzJ20YUXetbPlS+IX/QX+8WIR23ThBKx4EZ5VCCskeAAKzVorDfKIv
5GaYnEKxdKVrESd56IDrrbTtgyQwXBuf6LPac1Fffk83GqKgewcoFXgLDEe47sit5pxUKIR2EYB+
uL+i33xLhRR0y9/vI1VDnlXaRERCfk3blGbji0dmW9ojnhGAtNdebkjI99ACJXGaLU0rCxknCNtt
1f9A91i8JgYIrWV3tVCebzVDiqU0RDd8EznaEGfu5bnruzFfb4Oj1cyzPmohHdbFa92fHLGbT4LM
hABmpQCrN0fej6UDgTacdoV01knXmhHOll9rh5QoTy2Wu4lc9yASyCRB4hc+OV7do+qal/PeE299
vyJEiEZjRMo2b9ZFrk2RbzK5ry5Ny+7qL/U5SHQledVeTwfLnnPjjULbXgYcRwRqM/pejlxhqDpC
jehPJwl3yWwxHYgULJhJ2iT9Gf+3MdMz9XVEpZ4hD127xOhlrTjgg9+QEqCAe0algPvgnDEHSzAL
ioNHGRddEhRri8e7aHYYZHqqVaH96aVPC4njKLZCTv+O/X/wiUOFlBOSXueFfU0BqLsFo9eIqnxh
LRPfLBq2Aw7gkdAI790QSXP1Oa631O02Wl7Ob+L2/QFQ4NQdHx9fKIXvhVkrLjVvCr3PYTzNCmXd
q9vM36BZwZRmybMsN4x4HcMxr6qsRt5xVmvmXWqjCXG+wpBAETn2WaFiJGO0Mo2Ly2/a1scyhsfz
tj1GDnaLziGUnedthBbb6S1NU5tdRr99Mwxd1KGxi7cltyv54ldxDI5Xu/1/s7T55KfAOOHh4Y2g
FNxV2/ZlqSWu0smevMQ2WwReiuCCRHAyPG4wkg9IsjYXraUCm2Ln4YSVgkHUPmzDsqsk1D8RqPCs
SZY+f9lCtCOkt0vVWgQw7z4TtR5PGM8+IEejQ2Xm9joC7XvhpPBUQEkwcB3AbaGZVa7EIzjb6jHk
ObEnjySxdPIc3+yV3dOA7J7hT7LiUACqJPdQgWQbFfqaX4mdeBXF4RyhMnbX76DbFM1DdqZd3DKS
tiMiz2TU8NzqWvFhM6X90/HUpiz9i4EHQdU8zszQKCi8A+NHOHbaO/2jTbo5im6kQ280yFueFsaa
/Ta3rOGDEnDAu4BaBZzDudOSckXrW6L87vxDBeEX+1zFewscxsDufV/JQPr3YUmPHXhkgNXTVr0y
RoeXuOEeVdhrz+6tC0JKdtI4C6Qgpooo9krd/qoVaJyyKUPGDo36/QbwJvGkfbDc+0RAgSyBZj/D
+cKM5HunjhxWFtFfdbUpwXpGBEXAhKn5uouTg38fG8qhKdU5RpJna85X/fsrcrRG/uiss2JpNLiR
MhK9JXgjzJk0YmxPI0ScqxzGygaiGWrbWx02rys9nHW09EQ3tz54ZIvqoAyarFh1q+c4pGlwODkl
5Yf7GJiBPS/eVxiQv3R03HNd7IaWtxDau5Ub4I9r5R6czIvWaTHamclvn/IWDTHUNpn6uGyEDa2D
cicFFIlitmk9PnkN7NL8Uw5YC6SOsOEwV9MzRe4Ov5zSVDm3bARDNFHicy2L9PCOnHnw/7DqLQ7N
/g1XvaJUi+HOzqktpxS4EHHxLz1qqt872ApalzaMlx/dDkqtgA6K6Op+zzK1Z46H3baqVRSB3RXN
toJAVy7u62uyzwHbUAZNtARQ8/kMZaSpwUl/byZztaeUyUxFQ+Zi1JGVklInLfcR3wyAjCenEuc3
MoFzYw87gacTlzQlxKVUpH5Qe/u8uGEDxd63GoxI5J4eAqNlxd4zYonSRBdihXy+DZT3RuoHw8t7
SSTZtB/2V52mx+9L45/e/bKaN3S03XuNGoFi4kUmm0TXExm0booh1IA3zDDSfIwiTYSPpLsyeTXd
H+GhyKQuMsOTKGcs00Max5JlwO4BStU02acqH1n4pWCg7xyZlde1fHV+T+8UxqL05GgPUUVLNatA
eUMRD98usx5ZJz6zX0NBvf4UQab4lt+uIWLN0y0t+P22L9DcxuvZanHgJzhu5JZctOE0SGxspO7x
t0LIW5RalkW/5QCylNTRqmFA7ffnuJf/63MyShIFSm16DvgDU0qv28RbqOE6qBO92tp7uv//kMvS
jA4/2G7sdekmbrhogmmiX8QvZdDZt/RdPOBMlI2FP5xzhtVvw+KH8UiON/tOk6WDtmtal8i/ilyK
X1U6Y8+dpP9mhME73xzoCwMdUEMteLRSCU2cEsw6Kbj/pjC4Z9hTuYUZyQ9jExNw57SynErYLB/3
qL/UhPjjNHTJiDW8I3/b1d6kvdasylk5P7O98ePNNdAlg7jrG/xmVQMIQIGCgMGk8HJ6BziSrjOo
sXDmWsVXD5C0A6vG/zN+T56AzQCDsOHoKFqtn/V3vp5TRPHUJjQDOruIexq7iDrt/AJmO6Lt9XkI
4xqeEfh1ryVj5H0D3QRGzuQHoRJ2CjBZz9PRarXN1vt6KwbQ1MiRr/d7JyfG4EdkODkWew7Nd5gN
oFXinGo2WTCNYjDI2EFZMWT4vmMPxr0MDNTZAuOLgdEaRSwElnCxUKzWqhZ0wXX6OrJ09vXqloNg
TejpU2FyYvnH39MWn427LfuqKCqp+9KSAaD7EN3t2+CAmOG9q+ZbukuV36awQItN715SpRl/OlMH
zn0lthSXDYhJ+icmfIUeSoCZAHHbICLX4prJJm+cU2Rerrx/T+cYZtfIcho4UieVtheytY8aI48R
B+YqeILRAzE5qxxCNyvvlCWQpQXgGVbbBjZLU2OR6mR/37lc1eJNTAkAB1rVB1xhTOZKKQiHqdf4
lVrl6jImKLxxaNfzvhWDRWOI9bhfxj4T+NofktS+Ey8LWQOQ6yix50lM6lLo/VVl0w6Nh+DnR/Lq
xlmmN9kIxPLYLHoJ7mXT1MVgUkXLBI2B78psm7BsfwKPOrHcLrFuOGENsKncOQ6avMRTClbKEiNW
y9XNHxSaVX/NTUzSuUiPEbJ7RbsfqdQMPL8kPS9pVGx3OBy8dc8PpljPUNIPCuEnRq1DSN930oPK
LEF8cHqcKwMob3ZGR7s7YdT0pNKk1DEnJetA1zdwM8Dl7HZNW3cDnUaUyrc9+ggFHKu8OCLm4rhQ
P0/GGXcl4R9WBC0vDYfW+x7ZwRDbF6QsIzw5GsKarhshOOLhgKiOXN4jPLE0fLp8UzawUS3NpkTN
m26qIcRm+dKvScw6TnUV6pX7CRSsl7CMOvKcQC3rrcwZJ3jO/blrtn/rjoU36C3BZ3sAXMILVye0
MIApn4Ee0swAhnfwRwokxBuRY6QtCfY30wwqjC/6U945dLSK1rQ+fFye2TtBLyFxV61dPiftOL8u
imLeiTxn9AHRMfoG/ON9onpOsAwBF5vKwcB+tEO6YMznk2Kd7kzMvO+e6eAXxhnYU6k79SRfn3qG
HpCU2NXofxu8ELlxyrg4BevIOIZJ4b79slg3DFlgPx6uqZtsml3Sr6zcsdAE3EEWwLnHwdm7yzaG
3eDMj63A70xxJN7JFbib1hC4aP69NA9QkdkObgkTG57hwDoHLglZvNdgQoIhqLSVtUgdadtGfzU7
YTHG+PZD66khAi4rrd7CzCi8vQoWp/IHtD7IkRjCxsC1MDsOAlLTTGkRGkztWLNQqzs9mhtpOwke
TucLeAWe5PgVACdvLKEMsC/vxx15yvXmGPgNx5sCiIr/QQyjDgzjBcOUik81BayBig32lAtxjAHv
ijSleOrnrSPvDKayxk5qUhRla4Rb+maYInGNMM3y8Y2cbuCxv3kFU8QJxK6jdWgSpyvUnOheT/GC
2hRpWW8RD1JIPfTd7UeDEZFRcLu8hOaYvESBMIU0faPg6XCVRQYSgeSG8n3yNxREXuHpOoPZhXF5
9rgl0XhWW2LzjB9+KLf7h20+uR0pYz18IgAqPYl6UlqN86DmjWLkMsHjtfomSRgheRRV+hbJh825
v3PunCcnKW2hX5sLgmZBv2nIXoq8Ci7eMJwBB29pk48jyY556bbqfGpt7wzhA+jKFT2VGS520Ubn
NAuWSA2WGW8KS609aYqjJCW92RuVN1uddGLBMiJU1W2bh0+DBVMhorGyjPRVT7M2kSex9xORGEYd
T0VZKA0zMVwkOHUYG0HpUe6VfpIF8rJKK+Uu7Vdoey6gooWqtc2Y3ob9LieYly4WMnTzfqqBpNbY
6VAZ3/s6TD9bVlLp1IDRklhs5RsZ/gsKbT2jWFEDxQ2e/J2bAyd9m6b2H74Ihk2lBsCqEOFpKNep
ILYKYR0PEX9+zjDr+9JdCaXQBdMAaAPOes9xfJANa6ffwbea0ZPwp09ev/pHBDkrGAKdeoC+8SJT
Kr/Teysz9mc6elSp0MWDJB+tBwt5Ra1crVufBBUkJ45CGcaAa4GTTbrgJr6MskQsy+zGhlxCd7CL
mKRYMvHcvL5jiHeeHugk37kcHbY/LtXY4wM8tqkmj+QpvorTDtRsKEdIVht6rkb6914Ni/7LTWqj
c7TaBeefe7vKCM4lF4hbI//3Sc2nEX0vNXV4M2z6bBnUMgd2E9gFrR5hgyIXrnInk1jUthiUoIOk
BVIt05+pQ0hxKb2lpIMcBx/Pg0LBNxrKd6l+ckcN/YAUxBLIiTjknuaGkbaVdBMu3MLduDREYJAk
QznBrz0AuK1Q7/wK12WyiJswPNHaILmcC3+7pZnP36HkZGPWlrujzFe5k1vguq+whHvnGlvI+nIl
dstpfkb5LwVZdEk/zX/EBmjN30MI7iidT/4VFHRnclxTC9wYRsiEDYColt+LMKRVNM4nYSIg5uew
qgISD8kBUqvuZJiCtabWdpEviWWogAygWWrPukIk2Hor/VLyHuAv85CxrZ+qpEQcnsrUkqzLU/dR
nYfrLovmozjNJNM9YP3e5qRxwSU0rg66EejRgw3laBq8VibUc+HIn2+rkLWDvR7IqegjTvWv7LAZ
XbtiIDJUfTDdn6bShl+0Fu2oNMlkUlXJhjMe6ftvq+N3fuqbGq75ph4lYfqYgDLpUD0ltO9LIs2Q
sa6jZ3dIpV6zFNkz+qCMdHX5VJDwOZ2r+AS7SrIm0eX3M170MucAUE1HULZWRrgvHQ01tKe+FP3O
U3xCVMbQviJXD/8Zna4DXTZVHcKusDRxg7jCg/wDGUI+BTHwki+jUDMmp+66relb2SUFfjBk9O4K
JPUrfXTVz8gfKYMKrsY6TmvgvBzAmbSBVi94bJvkWUZUcZRjVu4humXwvFuB9ulhYXuZSGs9Vy2V
DbsX1SzD0Nv3F3qrj0mKsFRSWYHkqvtV3xM7fcG0UIuas8FakHd38zCPrpbrGrdqGsJvWn9d02zM
EE+5JuNC8i4oOXnwqVu0bRgWPKPdwzOrO31eJX/lvlaHJbaLFNVkjYowScrnZyKSirwaqGNMqJRR
hKpp0VgZAQ6Zy2jpC4aLTHr/y2lrpZT/sy3tuGW4kg7uzUUP9PI2tD794PsJMeV/kbJANIAc8POH
900OoazWDWoQz8gJMvY8NGcOFaKMcH6bMnuifOFH3O3D3b9mjfLIcJ5v0C5czuJkjhYu/SzpOLms
9q8LGuJfFwhJzMPZW1U2wVndH8Fud91lhNWGzojRFbTOwNiUDW70aFNEQdo6BFI3Zt8miOSRTTEz
Mg7pq930bPJtig99vRK1QO/msqzFkBduwD3P7Hghekq+IqiLYZh1rNVptxmvKQkM4z8NxEyz+J48
AU+X5/qB0jVGspNkj+yVxHjV07xLwVh7ozBK30hXVbAsULBEZc7nIqbW4Xd1HSqImaYr8xLWnyeP
p/WHneyolinUgaujyRAKm4cLGRv6Kuxe9pGnnN1EnRz/7e/wCA7BvQiFGv2TrS01DdVdzR6j9lye
WWzUmndGx+wW23l5su94TAwFi0KGvLX++LnAYPZddY2ImuJk1WWPFj/9M8lru5Rq922mYPG4QO38
A9Xra1Rm24Ewp/5CB0KDMeYG222dQwOTjuCLO4xgWQNf/QYrrS5v7z9PqUW6Io+lkryUz9o55A4G
Rje4eJ11qHPnr6/mwL2eT0bDUp6i6Ko+Kx5Zc0ZOLQNo3AI8v6dLEfFO2iRh5NtEny2g9rIFQVfz
VR7hwAakPeCh7dJbMQOz6Q/PdmJoRUoObsf6nepmBRk7e6tJdVLWcRi7UvJGIC7IlCt6P/HAGTTv
8fP3r98MabTlQf3X/k/smF7uZYIYY46VElhO9piDnUzHFHq6rTfsJEL100MU70EUK6pChmSNy8Qe
RnRJn61gH8mpl9mv5iCcN7HkSGG65bbZ3o+VPhrM1zcQIMe7hHP7HKF8djfiiprtLrBahir9Cky7
FbfdLRIh4RRNngS/fJXxqaPeMYjAnBIrG50pz1PrnB/Rx/5v74pkzc1Inm1WuFFUFMZP56Iy4LPC
4ZUYT7MIjN8Pi9JxgcSBS5JD+GWXg562O1Dp5r3j5h+DukE2fZWUhxt+tWO+EMQNqVgd8mQgRH0u
lw8HGphJfZkAy9Emt98rAA0izPLIJ5Oe5gDT/ZT04nWuUrL/m9z9vTLS8MNDtSnWKJLIrlWRFtJF
H0i+QvlwF07M+azWaZvouficPzMVueKyBftDMc+IgrlhqCsUR+Dd+G5lKhViLIRiE0MvcKzDHaIS
9aJGJbDUVMPKgHFILxlERYURYaf9SVBcPYGwaXPOyF3fObl3ZFRUqVftGHpdN4eNM6vV2TVDM+xP
AcjHf1lF9dK3I7+vp2MuBcKoaaS9dVDcfSuy+rwRYYEnOSUqLXDmWYyhMiUp/DV52cvqVVg1ajEw
8n+i1kPeBbNTqtaUMWUazyZ18aNtnOQedZx3ImP5+LP4mZbaGjjQWwf7TuhWY1N86W88wNZuxp9N
yI9eMih4FXc3Ng3Bv9V779Dx/zUpsU4MG6G+qr0jbPS+9h5nRjmSpxmrihx1ErpqkvMBf0bC6hcF
Rlvj69+JEcm6j0XBNFmPb3UbkYIAzjsCwrjY6qKp+nj2gaa1bRCzIk3KV7XfAF3lqDNIhFIq6Pcq
JBWwduj4zLun3v4YwhXu3Cx1HupdIrt5e7/YD4fFzRQGLrxp8+8JcWLF5pnntRleYDde2/2D0ZfD
Bs4ejFBmVnsSKc05sIyToJXoqGbt3uQGRV8E7Z7566vT3M2G/k1JVziVsqxc0HyaDpKF7LlIPHW9
DL+HDg+qLIH0TJlyKpt2N3Y0PoZpWgjUVnZ9z2sSPoCU02pmFfuz9BWNe8IGMi01UfA0ZZUctbFK
6nyaD+8G2str5j/BzAQQHzqhu8rg6HLBhl6B+xqtXieJMhxGtFgpkLBSUu4Td4og72pG7HVlSJ4g
GyLsUOpf3dUiwpg1EuRaMzqu4EKofmw6jHbSwvA7tMeh40cW6pU04E0GBvPQf5iKAG8xaj+A0JWw
S8yI+EY+gLBgSa2iis4H3jMxZdBhToIOIcYdI6DWzJbrIU6u5NXnRelb8gVAwAFf72qKN1BsSgsA
DOLwb3s6BDD647QIAU86J9uxPIIwPq7aZQRLyaOrQFXHzQI0n+ZU5zxSWu5rI3/hxeiyab4BQGXu
4TNTyzOnjIMl36fjhzPTYdButbrNxb6EfZuG3hc7J1sguWDNt45ltV8PHevzm2YRt4Mrbk2UAE+k
FN+WJ+Lb5/M5B/KdoZfy/KPEZxypYclphVXar44foFA7En3gSstJ0uHumn6c6jWKJEgQl8TBa82q
BH50f4ANp3Sz/LgF83q7GThEEurDlhr82R00uLMTEvxj8aSFNitqbSY9QS1n4mToIsPHbV+Z7ZiH
J4EC2VbGqQDLHpXv+ydo15uxkfG5ssHQtaZc4GQv4BeTAg2r6xtNoHujkqdm8rz2r+lGVrsoJuG4
fxF8ZmHvz7uAP5lXHxVcr5ELPilJJGcwSn7Gq2u5T731ccKFsi1WeXb7DvJEsLXORT2yaNmXZMqV
MUF7OncPKoixkJpmnDkdqW+2FTj8TCe8oR1YvGi0Vgni+Qex1bJHBsT7sT288P9u1cBFf/TeGgCX
bPNjammPCXc5+6khjCA0XjDljrgRYpsZDe1oWpi0Xb0Q2x5pbnVxsbzsUvZGKK5zqGUgniwN95Oe
0A4AbjsFk9OY2hDm5Sf1F2R1vW5GpcTM9TWfJ5mNJ8T5pSgvl+Ztv6Al34WNnI+GbzTebbpYoUOp
8o7r8hZkGoTJllr0DJCppNL++gylRiC61ngGy5mxWPWQDQKNgVtxafS+P089T8RtLpvsdXcyqku7
qgWdTiUx3dXvkprVB/OFljh4qm5oiqO1vosqnCXqSYtDJ4UOKgC/ByS/ZQldr7WCmsQi3oMzA7vV
kS08MrAtwEbVZznRhBa2KwCCn2ZtPO5JHlWQS+atvnxLjnTRpXS6L0ny4YQT72ZCzDyXbgGIa0qu
OaTpbHStWCP7cLQoDIGqEon8BVq0yoWkvNG19RD7+SERMYDhQK24RDn/ReqcY37F12eaLRRX/4Bo
RI4z7SDKfiu8L6BZGeLbtnkSMyiglXMkvT1PLgMfiaI8MNQZj64YWGR/iQFl5Zx5zJSSbzq/2+fW
5h4YernBVw/oi1cBNhTiaMgIFUjQJw7FYKSEAGxExPImhpDAclq3uRlRJCXIDZg+0HOqx5J5UzUC
7cvsAZH8F3/Mk7UiKLxq188nK5n6aWRveKoXppCd580MNSbJnkJVwjPOrr80+TvllmbvOgNLjjer
MFKA65vW7owjl0EubtdFKdaeqKMQJA0LlxTs3R9W5Cbvbgp0jnANZ9lY686nlo7JsMqzjZ2deu9M
23NC7yhoLZ3IF69AqjnozBNvbccSgpfl02J+n7suFlvgrXxWrpIaRd1DVPKdWSEv17jbrHCDFxz+
BcsuEYtxXK1vas6rgQAoyxTk/6k3El1/rMtAx6K8kITFzGzpMw/s5iZtmD3ajCjLQIGV9B9LkAmL
QDCxfbcSPu+QXBIPQsSL3LF5gRUG2v+6ApDJ2GoBezuO12UNtEBF6NGRSayRmyE/JNSl1XMY2u2B
iRc+hgYXAOhK1vVvI53wLNWss3lgRQMwtWgaYN6Y1HBsWvPk5PXk2+5Vzdnt7RJDMGvbimG2P+0c
2zcpzvlZEeJzs+RtmykXK529bBXNk8kOZoAr4u2tJ4YL6propRKpT4vqXqeP/GYuf3gcPSyRRfeJ
vgiWyqm6Cwe6yCQ+nVrxjdIpHogXIj2g2YL8qFHRWjHsDz/9qy+6GYvXAe6hm79QxHAjGd0pZtRJ
zyRaKnJtFAuxHxXd1M5GrmbEbz7jZvpCVccsmkBCb81+qdwWNCPzmBkYjyz++XHVrqjqPGSek5No
YN6rK9EkZHAvZiQ8OLKJQAI6gr0DqKc4tD4vHh+lJRqbm09Jtn3ycx/zkkM/D1Nxu6odKBIT14yO
XTauT7UXCIeGb0WY/hjiVd4Izk6p198veN/TmYEGyE741YYCSRqN+uju2Gj2s44HRuqKnb9Db/YX
UUx4xVv36YPFAyqS16+y1XtH2vjP+ZgIE2cPvSB0u2DHJqr3pyVL2EstEBnZHxdZNqLn2us5nLse
WJ1uk0QB28CdZb3hOeamm6lE/MwBiIzORXlXf0RIPF26wDNQQR3EhgACbf2h1iEio+fFNSPd8HZl
JTCE7Ys9oS/XKOoHpYWDx896SJ9Zvyl58k9LP+P9/dT5OhyF975h8jkMoLBT11shg+MesiXsSNjW
VHd5lOQ97LVzP16KOC8aXJWi1mqtLg5yB7oRavqrRTLGpebvHJy9AijmamD+hkD2Q9DL7htaFDjF
HFZVahP06YIgpCfbm04XBK/e43dc7WT6du0oSPS7SP60osHnc1O31qo1V7lNYh0iXxL5rs5n7T+i
6CdDbk554ei0W09kPKT/NZo6KvrgTYpo1jrRkg2ByVEe84KW4fTDCJQ30x5auPQp/Ngi8wkHyMN8
35Z9Y24MYZa2hfCO7uyt1yk5jNHINRx5InxQ1tCFVSfp4ytXMBtQ+kd1ZE3if7nXI2beJDBeDmDO
tSIwJKE64bsIIVF4razWitvQrL8xsQdD6KkZPNUntohdISwnMe6CxXy98fD4N2otTr18fNWsoZZL
IoURzN6pIDXwH4gDCyfTRoRzW3QGS3cvk82AGu213G5lZBJ9hkmHGmqwcn+QBtWjhzZE4Uq2fynD
ai0NddZNrElaPnlSMuLcGBad59NFxKRbBwgJZmD50M5qYH1Nt0O7LBR0nKd653U70NYUrt9r0G+6
8+6mjCRTes0DO11CAF9YnFqyiFeV0Qk1xtYHF4WIZ22xS2nhuMcbZBDX8h5kICo6sH6rDrGYrU4M
3oaOg6fdMnVukN2iyNR+1flwgIp2nMk3WAq9wioMDo0kj8Es9RzWpfya5gsdWdL7NB/2UbV7K6D1
1rnJ9JQ7GvAcE7vyI0uPkiUUzUU7xSCW5N0lxpEEt4XWoiyOl+wS0APGSb9ufqyKsqw59V4Sr98b
iwPHgSmgxqdNPfxv29i0fujeO63rUO/w1m9hR3hgMUbv6CxbEkr/WY40J8I9pOHCvXuhye0FNXU2
lHSqZFRjld4I3bAXiMjNkmvkoBpimM5xazhEHxVa51CBB70W4q75aXBNHNtc/7b8YLVXiKsT7Vlj
4/S+MT4krNDp3BVaXumfUxRM569XtTd7y6GmjfuOZzJe61mBBTTnxcyozEmSLX5bzdtQVk0rlO4/
Te0ioW/R7Gp5WG7YiyTlsAbgpJxpwTAJnd3W/ljtKTcYqHJX5jDamK+R9ThSmEcsyWpHc/LrzZ8r
uwpToQE4aq9zNUTinwrIMBMZ1rnBEO2To1d4ikJ4BZehliLeRK/CmRQXxaUytnxgzNVslw45DWZR
XKtzwMl+CRsG6jDnzksJkFQmOepFhj2r8Hx7uqk/hauXXpERdo30mgPqbrj+qrwFpkDTquck+37k
kh1xN/hgSKXwYlmu5iNbnLbT/W48jkNkeEo9eZjmvgUd8mWJz48qGZeoOiRagi5YitC6W6FoSRmS
Np9kGY4VEfLqfRNYfHUTaMmm1MXgmG3Wu/oMW1BGBHiDPfRTyy/S61xwfWCHRef5ZmP+I1YDeAE6
ZO2PPwIAYB7pfhHaWY8KTguWRh9+OdSXPKmlywLhLq7hbEEvFCqyj9YWlFtDRT7EE5WVBtEObttU
RVwtdINx1lPt5c6tE2AV22Y0SWhbZLB9gQjYiiHcgvsQ2NGXPS5POMIi66wiXEZgds22ElOEOvv0
JhoegW3l3WW2FL9GAlt40J6mvXDX2GIXaFeCSWeS5XV8BRojRA+201htXooCFZCPeyOPZCuq94di
p/N9RpnM6wbx9FgYIsB1pQvw7xu0IszutwMUJr4u9LvsLlzi7ADh1UP3URiLdWfzo0f8Iu2utLm3
AIAXt3lJMt5m4w4q//55kbL3clDr8PAJVV9O23EyEv9aRiUHjxkSnftayxNOx5bwndeFEJkc3Jo0
IOAUMpXTEg+OoLprFQCnuab3d+EUOa+5mbyJN1xBJWcjeSPntjq7atKiNGDAIAonD0Xpg2RMyG/h
zTNXDhzf0RojIkpnD519CPzqxU7X8MerYXm5P7wSQtU7AcIzjdL4jyaRZwEJXiQMIwv45TodDYoS
2zNqz1KKADeNWx1THehzhwDjzWYCO2HThT9QNzzNXUvm8NAo0fIiy/dRY8ELWfZni7GQ5PFNlyYd
VX5gPG8dyM41/Bq+gkEHIp8XHzsnG7CQ6+tniv09fO4j59709HytRPCk9R8itqOhfAn/i9LS6jT/
5rdK+W6lL/yA9fd+hPe046hPU0zbGxjEVJzK76wLdtiNp6Pg6VuArSCX584CglydBcuWUzfgDWiH
5oL6esoqhJma6AwUMvzzU1iwOW9KaJ26dE7zQ5B0WIRXjPFwdDWaMoqocJN+5EprOITAMlNIzNA+
FpN/DOgAgEq5CEBm1+sXrbQ4Ye1BwT3Tq+wsD5AQv9KzakyDKB1SWeU6Wd0i5uSRlcs2Ads5i8Ap
/yU8+LtUtXQNszx6Pe22qe21FbbdPxyKk2Vj/saClvDpiclEX6SmdOVspwscJhgt1FOf3Xgs6hUh
gxn2xmPChWQ916+9AITVcaHVgfpe072rhSckxzcQ1ARyr172cgr4eQetwSnQ4B73lPBfr5+yKDqE
wM5k/zrk27J4M8LIQTW1hRhyIarbLlmTId8/DxPZCqly/ccqAYFxlf0XPDgHqO2YK+AAmgp2P3qX
c0Ncobvn1eic7b0ZZoflJdEa6P6kNZiGPfYgVoEz4cW2BQIsrvc2kGiNxm3sNu/A1YusUasXF6mH
giXRa4QjO7QU0MfNIgg5BL368X6b6x4RX4fJlCABpwBRvqawite8qZi6IVayLJGkiSbW8U/eC0Vi
7YgSv6hrAv/r0iBSm53POdAB5tQ2efFKhLS6hdk27ZywRiuMUtUS9UXrYcNkputJGeuXE5Tm+rCs
UyvqquUelwCMv1UbLQMOFl7xImhyVgHQmWfz01Bgl3YkFT4PWHSecZ9iRK4rSOMxbt2gH9fbuyRe
u7qpQXZmSQuGn8y6gF6lyBj23hYp6U4CUZbdTKnpAwiXkq7s8ILbV2TG97b50v2CZczYyJ41Ojt1
BSyh8qgRMsqw61NDqwbezqh+rGJQmmNF+j6AU7rs3dJEX6e5c/Y4AKe0mqvte+4LJqRZvnhsJVEV
POuo5IOiDcZmybmCBBq4xUjgbc0GeAqn0D4Iy3kZtiAP3pKk11l+7Xg9OvHo75wh8Ws2GrpS3Eqx
nqREXc0GDz8yfOTsjKcVwaT62BdmWOse3RtFbbT2aoCH25GeiNOifXcnVbZQW8rIE4bv482j/3sS
FPi+DJ8xcoWvzlIYc5d+PZgr2pJ5vTkCWYoqhGuQzbsXe7kY5udhBhuqjR6BjdP5WRQWXP42uh3j
Q4GgOLD+XQIJIo2EnMd+oFXdJobc6b+FKU2oPKRvEYnoA+BQz010JKW9bncRrBSwvhrwBn9eQaHa
UIQOgyds/G0hhbC/Om9dhTRXTzYVJgPHHyVETQA7lqslvzQZlHeVOA5mMlaQoDfR35eeXDXSmRae
qmANuvCP/9CKRvC7z/LZuAfjvJKBYsWHN5hKCUi2SbHpwIXpKnJ4M0cB8jAJ8LXVyAwbitKBu4Wx
zVoKsR/CPl5A8Rp7nE5n7dFmk0+YIX6EvXSRcqUmXmuHER8YHZUpjjqGBMb+p1c09FOG8n2NeRGY
l2Q9CTmvxpx6GTxtn90+ABTH/e5Ds7ZU1kBFJZhssoUtYNGFzAjlOUCSfYEIQO+wmPw+F6tdIMxF
sIBldwQPEVSSFCWYMZ2fw+p5SzpoHyqWS/DVI68nmkUoSDnQDnIw2hzm/1ExPcI55OFQYugwVMiu
Qmso2ScxkvWGdnfcIKzv+UYlak++Dz7Vjunf1pda0sgyYHF0Eqv1apy1X5goCAarEiQ6HSh4d8R5
LCb2qW+ylTXwM518r59Z2zWEr43FSGqtERgsrR9wUBOCitxcTP1V/iWv2uHKm9khkx+yHmJGFnRw
j/GdA9WMOjk3/FKuypA/3tcOHgcx2HNHxXAOAxljiv9g9ttvX7gs2kOTIM9bmzsy948ZLRCShwlA
r5GRtjakjhpx3Gk98PPyMqCDQD4sony4MNA39hSQ7Lsf5CJTk7MMubXezvxcyE+hUYy4icoYOKli
h09OWADQoTgWcGvFR0rQ4O6mhVz9cwpjqZlBK+BEJHb4V7isPKAYzoNvVsuOk2hLJqjK4CQU/aq5
oC34vD6x3j+1UKhX/KVaPDiU06w/CpMQTRKAej405nwEnjlephSpz4YkxEmx9Kwl44dm2aoiAjgM
ZEA1u2LqBVc/8rAO6hM/4U35Qz7QOrTFeU5PBchWPHvPdK+x183h5ThiOR4B2tNpGK3VEtaMUgrY
w8QeYOGdrIWtEYMkJUVXLepfj7TLd81ZNrc/hqjSywep1MXcWGyT9KGI6PRGi07hkBVwe4oLGe6s
3Kl2SB0oaG06yjS2eBdDHgJEZ/uNfjhllR+yoEd3ZCzyrwyoJzgIT8T5xONp4AG9jyvNtIEDnc1r
5e358sJUCkUsRiZXy4GxpIXIlwKYny0KPKLAbP71hGlgQnd24/He3mYACQQjH+pN5XItb8ZLsoEo
hmKbmW360a9cMqJ2CpVm8JtESFMSt2PyO7mydbyAiCL5pTRujshEvL1Kl+EY7bLOtR35BMnWugk0
+hp8lT8+6JRDBwGi2jmtAvcwkAba1hyF9dvKYo0IIJvhMMPcTvE2C9iNGt2tVrNaOHaQhzju/LUI
ME4u+PwkaL5Xta7Z45tRX89QxoaQQxKGROaJcJHlKPAigAL1jsUYEPeHbHM+mJEDtrqO89lD0FXt
pHRaSgTjmO4GY3XtqfDZpNdSJIXWLIyHSmCATRCYA672Li7P3GSjFMv/rXN/B9F1viHokAgwj5bY
BKbhlZsQbtmNb5qZwwngC9ApVAjD9P+AeM4Ew5OK9dGSHil1O2CyCL/UT4F9cT5eH2IKuQMAH7hp
atM5M2T0qQd+VLM7Oh/xHE/4VtTzXEiKZ/r3Rwdwd6hbtzDFf/BHDq4mzunxsMFKMCeELETgW4X3
8YOWExMtJgsk/Woy8yMvgrM3gmRf0DKlyCnTygdIpeLB9MvuTJVSkcVTSe07w+19qXlkgfwRR3yP
SKYtc4c0pFzsXqLLdHdwKBNYJ6ZmKsMicd6MM2wL4RiaHmpsmDzPH8s7XcZ+PbietkWyBU5nz8xT
3ptrpeKCARhAg1EybQ3fa7ws8pc6a/U9A84PodzRcjxjjNXa++mMO76C42AY3p1dXZYzDp8R9oHj
ViJj07ufzlAVmXdmZ1jckW+uGxG6r28oyCyb8kOChTOw29OgUiiCJt6C46rEwyiH8R2rgbBKYBnE
xiUUbEpx3mUrQ5UoQS5CbpNWYayOOMJ6Gr6GGerrx/ZW6NaSFjAyGFPGQO6Fr3KgpLFlW2xKOzAI
YkREvdKa6PYF/4osJx7rP4KUwk+MOmH4RLH9b6xbHKMuuRddwqh5xuvjM0UyxAuAvo3b2gtZpMfP
zkutanH+X4TS+Oru0r66RyiPg53d2b1VzaTS5VTfCgbnSTNk7gcwekMGHt7Q5lcnWMXZjJC0Q51S
E6UXTiyuZ99BI4/6sNE27ecZcDUCkeUrFnnKXGmd6quxRvmhUK7Z7Onh4pnuHN+ktGJiU+YbwW1J
/v4ZK+r+Go2/+PkvA+x42Pw3Ush4Sow30rXhk6Z9rZ0yQykLH5g7yu5R6c93Jy38fIb+FFaNJT0R
s/8wk3jktxLCX4X+/e5kJy7QN2uwTIezuJLqnEk6eq6y2vkl+K6r/lV2bOX0ql78iplcW16OtCNj
tYRlbTAm53wvNmrb3aOs4r7nvviprmiZacqml3QZu92KweIM7v3H7ZscVVU2eV3LbmpcxSJ8eX+H
6jdCxZAwXopgXvKfjkLzy8boqGePw5JmQz+8wwIKqIV+iDsmdOsMtoF7KXLnMptWr7QbEjT532d2
ldY/Y6qrRWwkBG3pJzl/WFEKaVzebKnEMtlO9+cm/2zxp40ksHL81bt1YmLN87LiyDPohRs7Tbou
L0srNbPJZTnLrnvFtLYjfHEc3xCiJXevvutvmrNPbybB/Uo1E4oxQJD53wOpTQ+pl57F+3UFTBul
e0+VMVfj8zguL+cBS144AKnbYADxA9HMgBeqpzboLcSF1HjNfL2ExVB5HZCnVcwN8y5PVNFN37Fr
4Ja+x67Q9emfhai0JENZcsyKa0zRJ7d0heevrbevABtb1Qst1uNE9GVSKscvaPbjXZvF1VqJ5sVd
QeoFDY/8OhAejltEYrTWPqhcvnu0+nk1Ip75dDAMOhG4spHaLewY1eTEpKD2QZSyFQW4oJqbH1IC
ySTeINI/UKdI3ji4GFfwRsuJnbsZlczkw8WGhWxE47Sch58d34RH+jxoHctP/vG7ZV8TuM6059gh
QkSmWdLe0aCH4x5hg7V3LUzHBjx47swGp4BrsB7udSS9q5LzScIJKrEetRlzo0zGEH+2/Lx49GAX
4MmrE1HaRUy57VdhQBLZaeVAbTBtQTtram2D8fn0hDVX5ees4IEOfueT35C955ELnoP4kFbqH/oR
oXJEeZAFdFlZe+nVLPeNFRQAipZTJvDWniIMG3qjJvbHCpK1PBi2pAaFbyt+//EX7pkwEnAi1hw0
FgBfzFt7CbppJMY3r6oS2xnLNSPxCaS34wIS6WlWgEocx9ASw1MPbwhgZQBHu7bojacJxl3Dmy8Q
TnbYyoo3eooptnxSit/Jj95QBZpzoY7tD05bnexiLbu6x+6VexFw6yMQ32P9Wg4MmFXIc/IsoDfe
oIpWEjIPoOwC+vVb0J2RrEG3R22TQZpyO935uFjaVej0m/yOiNJPNZ/2M11hE7Fs+pmUKACrRxs6
ePBMcUAlnFjHYCaGtxu4IcQQqXRe+cjKad5sPyoIhnXU+QETeJ0m0Z18g6tKglT2bQTBzP+K0i0C
X1UADMyv4ThQGY1359/38Amg/plLhsrhXMbZ9TLFDfWYlxHIaV5nhpy6gOlLkVT8LzSz2wrwLaX9
mxzoeEJbdQSkGeJDqNKIrC4s8KhEiKRfX/W+dufdpvUzzu4PA4nCWiMeDsLo4Ox+9e/1GPDtapbE
T/r2jgkx3pojOGXjRogvuOejLN3O6xiVdw5dD6BGpu03xzmYufI8RiVfWu9CrrMi3OIGa7JDydz3
oXvkiy9nooYkABlo+r+dYlNUlqXRp3wO85FBkJjjsh2/RqX/jOwB5CkVqhNUxAaSHntemyrVL1ue
ac7HmXGjoNTDj18yRyqb2nSfCAsna48/WUQIN3fuItytJTZu7OnG91aYJrKWLdwn7/0yZgleFeRp
ExHflDLMhE6YwdHMsglsMM3zkjbhYsNBJQc2FO+s9GhZHqHStZfjpuU2w2hkwtUiVeO441KKWeOg
Zygkl4MFVB29RZuLKpu1RDmASBaEEshUHFH0iRL7iwOBIm1b55gA/rzwRHqfCgNzpkRMVFQs2XCY
poyLLa2Jc2vUUvH2JX/tBxt3cSlkvftFs+Y2UA7UvtuUaaSbgZmpB+dSvOGg4FBpESUauh+DVgmd
LQoTNtfdBqdX9fNKfvRqAceY5uBc2FRrHa0nutdyg4qYvJ8B99QC9WTUNDlKfFVyNF1nKskWmOI/
eRI4qPFghKoXC4dB25V04wdh3BBDcVl/qbvnxoxs2IR21HZYzFWshOuEkx4dZncFH52YScq+Pq/5
2+aAyL+ApC9/FPb0Krhings+Wcv67w4JXAlaEZBt/kE50lEXNtBD9FTIunEU6chCvM/a49LMQreS
H3hgSNRtZeR0QTGrgmyCqAdfO55a/EEpw/SJDxRRAIn73BkWfGbTYXEUL9HPphyz4F2wlMDMd3f+
Jht7XpC76wp0jS8NOQgNLCYyG2I3wbai1qHENr6PoEuFTyRzqnkt258IK9XSNB/ETJPbOAuO2iPX
LjKBLwP94dEIIUgBZ+Jcf2I14NhOI5JLbMkpCF7To8PYTR40c/frPC3X9+sMloDYZH+MPlJPA1FE
55oGJMYrENEZbLvfmT4RQX+JYcrQ+Kv09J0g4Cj6wA1Q6rgkDQ9VrDvvlVB24fy1+y12vxRxwZH7
bPqsiVqpyVnYGif2ayO1GLLYzrSjnZPhCoEiiJpLi5a9/OBt5QDR97SZ1XfQ9bpJ6K5kMm5Y27cp
IK66nIoQOsAA5cKKtwcmWKm5nqS1BX9YIVRvlxbVWr0nyNDnnde+CFu5EkAwD4uc6uneZ+rIwSg2
fIfitl/UDQzoY4fEb3s5pb0+ifQHM1KJq7a5JMJemR9DCVeQl20KfolXcXRXXdnVp1XRee+F4Hus
yWWYcMsR+w7oLrzSb8149TxIthLW+Tcel8Ej+eZ0c3uU/wXExSConDmdriXh+mQ1mL8vqvf2lGk6
vRBXdWcKTsULSnNzyuWiJH7zTTm/lJcnf6QIRLxiAk9WZ2k/b+xC1tvFy74/ssdStoQof5Tfw3zI
8foGkkovHd2orDweY4jefqhjmbQGunNLWac1zaIyHhP50JLSd1dIY4+UmX7G/0z3gqSu6lzBsQmV
pZOBKZflaVxctwKgwU0SsiV1Sle1/FFiPv9x+0HNOfDVWjEXy+z4Um0Meutwe1EncTrGqN3v1ohj
7WXTwEWi6V3Tr1aKr61F6M8Zt5bRXDAsq9Zu8xlJZnXwz9PHoUuySQkJdSBQUb59f2RTQ83zXfWF
WbR85FkvraUGs85Lb5ynZAXPfFwWI2taSVElQpsuDmlind+m3BRqTDdsVgKsb+8EErbF/w3uVMjX
LTqBee3YY96UyEOEZlayYcJHR57w/REYpndDoAEOyFSdnoNUrVcMF1Tkz31UrxEYW/Vk3Qvhad+o
K3s+9dfwWAV3RzQ74hKFLD+T4Ns1ZRHANC+kTpPbYje51sqS1h64klKAZjyc8RlJbEPJ7YNZoBF3
UG5niBMnGsoz5cgJR/d0gUME/nl0QICiDyKayhZgX+DqgipZmC5vPwF2/0iAReUTcE9WnxjT+mkS
KGj81EuBKl/nO2925Rgt/YMODB96oezcWX5D6I212kYO/LNvUAYv+X+dbSbJwRdXB3eYlDhs5COK
/NIyUewZkm/YzlQczvtKo/jruVRiYtsVgjMlFxlSvoKZ1V5xlWtadPxj7YkshZ0I7+SF5q0gIJ/P
cksoOaDX7x/5zca+wpFoO6DkkWhO1Oi7Yrr18oErsTzxsDLExxflVK7haL0zqMevhq3AXxuSNQPB
X0oSq3+CeT8+d1ba/Z5BXWWQLaejZbhOHAZU8bUqAT8dkF39WjIKXqrfSebQLuXo4TCYuAwqrdhj
gVtymd63lhc7rMfjY0Nku1aHnVObGa+Za9OkA5gm4K3jWa2Gb07Cfrli8cRNz1ISHDVRsDiLGJRo
QclJ3RezlwQVpAEuPD3h7PUGEkklMEo/Pk5+cnSdWGK5Z7IIaqi9+aNOtue8rrzO1B2ciDHGkNK/
9Idst/O80kKgKEmxXzRyUyn/mnxklmIaQqz6PZbjoyiqEM+baYW92I3ctYHPObPgqpDNPuUiMTHn
xzy36F7bleCettMAd6KHNWQPXbaGb1DKYyip8uhxilMeYMSTj95Y2pMIc0q2VnNWIBUXVbTafXy6
vmSwop3TuniYPVMgQI0yg8DaapZR0FkPBeFJdqbQlOV+2La+/Z+cvfWshKWOA7Nr7ggU4C0gtaIx
nk4lCNehTRcZ8JVc9V6pD3JjzfCK+rgZK6VvcK1rzH7xrCb1g4b23RKEEPaFTrLleyENuV+OCsc+
EALY5PU/XkkplA8kQD8Npdu6DMBhvBivxWJMEpmK3XmVNjFpTH/VnHUQbNO2XQ8iA/r6DTwowGKZ
SXZx8kjlKrP1JN/UmN5fBIwHPqb2NZQRlAFN+UUHAL7Q+87NCpoxZj5qT4Pxc6T76tz/K9Hpd7hN
OXBwH1tFCJzqbY4YDzj0Ri7urYU9A0g9qeddmZb4pKQpQMR2obrujE+jiTXbMFQcOzqJaQ7Gpa4j
Z07+TrKE5XzzxiRaw6NRuUe6cWkVsNQ+IDIlmSvkEBcpEEj2I794IS7PO9ix7FwWr1L2vmV5EOdR
r+TAIRCxhD0O0sdKzYdIvSO+zJVau9/oVGZjxeBlAq1BQSVPxfdLKUNcpTKRnyroyrH8ssbYMqNJ
MbE78pJmCJgON+zaxMcEZWO0nUDWIygmh5v3XyKJU9fME0Q1vOJ/uRXq7UQrDVsQk5aSljX+22po
UoDal8PcC22usoUoY6RYk5OSwbUKzU+TJh0fC0L5vxxwJ+30Puvue80OXI45v1CsX6kbdEV+b4pn
PMmQOds2sWLIYLxNJDJk5ugr/Rd/QvZrM368Bx/DCBJ0wVsJwoTNQl2NPFgiJforhkx8hiA27i++
kaQyxdgehGw0nKK6k+DpsnMHqF1rNgWwP0Hrlufch+7QqHX25P7rL/d5gnzUbUvKUlkNKv0t/Xn3
V5gd1hKZUCzJNrFLfCBfb4U2c0wDXskY5pmuiyTd9B4lLdvDA61Jgzr3nyrW7MoGWCil2d071wMd
R6sRXkKSKhfhdL9tRPjN7tc8mrR36j4cyFDp3DD04i3MDkbgo7nUVZLWVg/udG27314iPdWiJCYX
pkwRKEq6ITalja5lrIjBl5Hmrqd4PFsax07dqagW4Fmxlwa1q4z3nNbD04CCxSiDWNk1Te2wN+YS
X2Jy6CPZeRIo+8W5GsSKuhIOW7p3KfkRt3zHpEk+5PSDNWCZrr27wFtufzig+2HiwN4prX0QmO7x
RB8tYaGbyVMCcHpiwyjy/+nz4Qu9mpEUB6fvDp4L5VMnTUPORednDE+IjTRp4ddLh65HfBYPwk0R
nTFRJMy7aYA0Ud8BuswWBzy1sejjxIszNr2zU06OsQpgVDB8JTMNXnJDMakGlZSY/bRDri41n8wP
CNVzSWZodomwX90Zi3BfYNUciOUqKYkQ8Dl619ErHSzN+SyNrWy2+I82u2Xwzr79c5ztcwfq1RpO
XNpbKjoj9dILABejUXvqoNbG6BxCOeO3u43HbFFwxAZMxc3xWmRdx0qElV6P6NsZpuRj8BPNPBfZ
29Y88MN+lG7BSHYMyocxAbOgUyR0KlHqejq4b9T/nAdDB3Yj27wAbTwHLuFO8zY/hY8n5I0dX3Vd
XiJ1s55hg0mwRFoPi/DgLd246jweWxkt6p1VgC7KJONHD3QKwuGMEaV/uNB8OTC5qwtyeik/8pnf
pxnHDTg71MBYZGjJgsbw1qk32uvwFFga1XK8OOyKnWoq7Doln+lzlKteHhD10C9LkJ+948WP8iZR
j87ate1Dr92Sp1841c1+CRw0+p7xJt5kUPjMwRirNkCCL282vQHSQEUFFJGH7Cn708NuA28JPndq
t2NSZ+Bb2byg3NgnFPYBSDeWfhyQs257jQeT4fWGmXFpuplEeDaxM2xzvQAOrOEUE8NZcPkd/fEF
+D+kS+b7xxtE0MVNEllred73AIvXzurSw51JvoeNtt2/0+gZfnJ5w/NLt1cH8sJQK/XwK6NzXTrF
fYpGlb90fzwzBuCLExYtOrBP4qCpbjx+HOpYXu5zjwNLWGIFbv+sB+D992qSWwmD5GL9aYvBKJsa
DZjXV8L4+ctLHUyjoTnRGXgp1iNa2sK8FVyfw9iTbuVotOdnIOR9nmSxKerDVrtuoTUhSckGcUuH
w4VbEOQWH81GZNnmbhklyJd1ScyhVkItLgW06DlIg73w6QdzupAteH/K4jsGlBiSHYnKYUUQSA/m
AhBgEHi+WmKTDt42rNAMTzbM581zpKraG8fkfOiHGkzZVCMOPsyZinrP1wFKVxKmMoQ/2ODmTiZq
jV63jLn83FEAi36D6aiiuIeTTKsvL+7APbLafO0jdVf0ioijXUComxxrVDaR3s2RpunUJnoGXoUo
RJbEpKhWbXEij+Yw9FpuKtl68H61O5WN2VXUsDiwH9jxk6SgbJh0k0Ry4ZraTApCO6A5PiuXfcuo
Gm7zUrJhPKOv/D/63F3bLISFcNQpGpz+y5RfCmeM99R1wEWGYqGojOzbjiGdtfUn38FpZMV7mSeN
/9c1b01yF/5JuIyxb7m/ssKgk4rEH+SWuqndx0TDV1guRnHSBz6mhFIkXa2wjGvOcqa67MCv1Q16
YM1+hLixqUphoEJ/uZidi6pVoAb6vlvl/LPi4PiTveJERoQy46zv4muroINM1R/8Zoo6AjSk8X1I
NygHodBjhQJrG0OYhMkdrcbgB5qInhytYRr9jTBtkQ5dEk8FDaJuQsrhYWC8fhz22KGOKzdHVUgk
9jgXZ9SYf8uA+Tvz8gsr4oewsTA2Tmh3PX6iJzVEMyTPbBLDMLlLT38J0MV4WdeUpWVCF/j0zXjC
pSBEIm7wTJCoLeBIq7HiVth/YHDJhIchvR8iisOLobpTXP3VRUOsKMCMWtGUI4lm4TWZvidf0Sw7
3OKOfNOJb9E+CnzjBjQu3x8pZmNFQjNwN/NP/+BH9rPUuDTkcIdCkQx8LxLY+PHDG7IgGXzMFXnz
CpCvpNNoE0ulUQyOpzoWS0IX803aeY3JzdewsyE+jXDfTbjqHbaERYXH480GF9zWzU+FMrR51OCl
mS+YCL+e/CUwi3fc1Wc8O7z9crkxr926N3/HSFhg3IMFo/N+v3A4cuH0hj7DsDbB7yquShzHG9hk
Z7LwP7mcQxjLViMzpmc75hDoh+CSr1k7dQlDMoWtA2CsD7RGRP9EsFUCwFJ76eYmVuj9CwXvqwXK
+1f69NHmhejnxutMHHeH8ztrDoSWX9Q2wkcxxfD//jsfRNtM0DNSJjpX0qsvrqBidf0Kv1JIb/b7
vkbKxV9Lxgctn1wnVCoDLFlpvqYc911BT7mo5VCOr5cEmK6Kpao5Ht6v6D0yEUaUTwGA4a6rwcvr
jWlyJl3/0nKRcWuY+pHfEyborBPxfn5tVWyqkJT0zSxa7uw134uqzzwFM250oFPwFod0JwG5YzZI
jQq1KMgfJvBZsFJgMAkgw6iYHpg0Xmt7/XM/hV/Xbi5GiiVw4KJt+yzAZOMGZEGk0Yq7//fzP7R8
xcG9Hp9GMvQBJDfU67YbcG7fV+BCvN9N2aFSYW/ORMXDqaExAxhsjeepi8P93oI4H7W1xdViFQgb
7f/pvWvg7TG6SA9FaIT/uOdjyOsfSo0JnIxRkDwNe9Tvly1RfLJW9IIUeI7Uy3CrIsQKNPjelANA
8WpNtagm2erlvA3/ALG0kIL4He5CEQDD3HNVZxaJeRR8huXy2TM0AaOpgiAqiTT6ORrW17WdnFX6
SCB351sDoDJNVcf6GJow292rxdwnyx3irJDQxFZw0mZrcX07iKpo4Hw/n4CX/D6rqaAt46V7C4CU
kMJpypvUqKEbBq5QQYSwxTlQo75CQv2vxxW/pPXLFL1wmxobdGO0tB5KUcq+lEKn1HpF5KCYpcGq
2l0kkRFjsHFkttgdtvmUfuyqcTaR63LT02ZA1RG8jdGUuf3n8+uCTL/ijmC+9Q9pSgDJwKA8PJPC
LiHHQ/APJb2UKinYCJO7JwLAQ/i97/WZXWQ3GjiSo+I0Dg6obQ4ozNkHcUtGWaZO+qEi3CTOtPLO
5mOxWCb83/q1zX4U09qy9b2lwosazeQ/FfM06iQLszJ+dTpcjPz6FjCB5M01ijYNapIalEC0qDvM
9eQ5gGscdw6QgixsrXTT3I7bYjFzDFtuz+xKqcPvF1pbS3fqZFDOTNjoiWWDgIAoIad+j57zhtvv
u06yfzjeHhWbKgn8kW0VtjVa5VipWe8dWlYUOGl+Axqkdw4rzT0LHGMc8VK1SnYUuWslMvEcDH2H
TQivzZlYt9MZMeDPmnE9NHfERnylC8uBJ0WPLLHvX1Bd9gJyrHHtV598GmHiHIYhraiVjIcMVJMN
p2BzYkCpxId8pt6hZJVcWVDuNW7xhl2wsehBDh0JPsFYR469XcrU3C+0obyQ1XiqITaTk2DrqB+5
jJob3yLTrEds5Wx1MBLpfp9gfSeSLPPGS3Dv9bxsAawzjKq0qIurh0se9IczLQfjjBHi8EqeTVPI
QPQtDTQIxeST3DxIaKsjbibhzvq/wySwRMlul0pgAtnLm7AWmeeKXAqczro3nQ2kqT0A3tVd8eDW
o+5T6olm39Lmy/FuKIf3ek9/QkUq5WhEXKR86ycH4hn1lGBAc0/bLWtOTI6MpBD0JyNikCqWdn/B
H/RzDLI9Lebsb8m345ETUXc2n9pAjBuVjtApMgPkmi+SEMSssPumx7ndTgbXpPBnko7rPyNUT4Au
K/XQfLCal67T1eO6bRYQQY+aUAFkiY3DzU4f77zkp9mvVJ2PJuzASYl/h9qycXwZ+JMpj/rC4FOc
3oWc04Dg2c/hjI3Rd0tMlJm2z0PYJODddz3Pw4URsC6vF03CIAA98WitHRXvDahNVgFpeQhFuYZ5
+VgLKeRpixEZ1dzBlwHm4Uc7AP2HAkv8V3LkuucvPfXXuJ0npNdmZ2dzCJR2Kvn7DdqdCRNvrEE1
VcGdFqZjQ/nIaj9nSTlRGixGVmLqNQF4H4pYxLNEfPy8qT3n6k7mUs1lW9ZDlk6XQFAIdtiBlxZI
6NCKEDIHWOm2cCe1V01Tpdf8Itcjwe60S6P8sSemtholVCn7z+MWwCZIUgwCvIUMR0Gj+DIU0nPk
iKkn6XgmDl+a28H5eG1eXCOd0YhmYYNy+Oz0WD+nwonj+qa863Ec1HMOn1tpaKJBKwqc7dAAbDv+
aVlfeGV9+wzrOPsFj0PkJ529UbMz6YYHmKlEA0+QorJpjvdK1OVrOokbR6OzxlsNYqC8yWXwSYTY
WQvigAl2EjKvjzuD4BhUuBBEnqJ5Y2n8rtSeCBIAmqC/RIpf9HLqv7C/c37EJ+BDfgfM0FOBLX0g
OJJ4rz7S8QB/70P4c9JGBk8FPot5RPnn4RTxnbGCFkRg/msJNPTOmFiATTlddcZ9VfGZL4GR2iyP
NpDd3p7ek18RCV+C7+BONOWxQ8Ohoet846e9Iman6s2RmBLQ2ksFsMWm8ueOTLTdqrS/qaOqbxVU
fdgzAhtiDhDd4FX/O/aHfx5Ty0XvTvGvDmO7uCbrpVWMl0jbWaqepW2L18iB1HN7BI0SdvSQ+qrr
p0RAUaasO8Z5i3p0tRUGTEAox+k8N139GHDCILJaNft1yDv0JvokrENa4IqcFT0w01EJwvLzUS80
TutKhD1w6nUSZpXHUNf0e6TxX/r+xJpElyzLIqSUjh1vUhtUpuVzSunkKZuHfK/N51fp8O7/IRWt
Ce/yYsSv3NWn8A6Hog2Js6qpyVYv35cQ7l2arEoetv8Mekyx9Tz99PbRLVYBLSR0oA/yDJ7B6+Rq
1z4aJNxka3Y+FfqT61qldBW0/TT0zTARSH/jZrDbVYlpTU5ur67/DFzd5xipHp+usYJzvLu37i+4
pag+AlenAmuGu6nJJDoVXoKFFwPzeI1YKNRsfV79FA14zT6TIM3mWhV8835OrZ5bMr4CmdrnBTQH
Y8tT1Hl2dyJ44E1SJKZyEnPN7rv8IXACn2GnqV8FaZYbng7j+5sUwokvy60vs07oAM4tD4oxuNR4
MMpu9ExxXoyhamOC/9RB46gx3fMFQmhcIgE8evOTCIhYWUqK0eD3ZxID5X9kVm8KBoYgB9vBMFI7
/2A3Q4JwO6VCSX7T4edMYzN6y+VcQ/HRPk4hXZ2SL1LIbjDgPz5agNMlRBhKHscpo/RyYWxSuJ7d
WNW38L+CL4pf+ff4DEUHCfryqKUqQqoU+DOpa6Te1c0TSJms5WLA93zbH620o1cFfdx+c6J13YEd
dtZoKctwXtVF5yNEL+KAOn5zBgRtDKQHvnfOY3bWg9QszkHaD1Qwu1XhR/5RNFGNXrZgTSkMBOs8
1tYH7MeIprMPDRGaHdTcrqYdQqiCZStRM8wuSiNXYbKKlkWzNIKqrQoinkxvqfVAnDHDFwgSnnS7
2bcE0McmlkO0sPzYuUf8YMfmnv4UMtejef3n3TAU90L+/I1nXaMVxa/9dS14cgblQyUppiKxu7Jf
1BRvTM7iXw+L9B7STRoRbuHq2nI5AtZ4iMprnsMaYe1cPPpcgyuwVb+etDcztZAGnQQPQh8Nyvup
ykHxfFNGaDLvx0F9O5bNtQZC0Cir0JcB8UmLdyyxPD2bfaboOB0z6LPpgGBEZ5kYObiG/v3TFIgt
RKHTYU2k4Pwfna7050ia5mN5esx8+0EFCFGLgJcos0ahlWEscShBI8rYj0o96wBk8NuxNUiK2+vT
1fOdDDe2p9kRpZ/Vyc8bbKMgSU7kVhWIJGEpJrIhPdFeUoBMpAvX9Oquy4fANgTlKmf5Pp7uBJRv
HTJs6TbdolfQb6iF98jpTEBm6mf9yOgSjlY3pKj0So4rDpsgAnJK06p7GX9jArW3Zb5gtxIaFa0/
ZljG91ToeMZQFgEPFie+0Ei72QEj00aOcFtkfNEMVxjLQgNpxYYCpF8Fr+WaBO7grNFjUTo8RAdl
MtO9pO4uB/KoAB4sa2MavUnNR4sALKebHB9IP4ycjKN0xilJRIaPRDgcyPbbCxVwWhi7r69xrceG
+Iq4ZPUBYVG1BNXFq9x9Ksi4sRQ+du3DcKfqVAxPrFRPWkLVNBdXz8ifODQPuRP+PtG/BPCtBY0q
xRKivjlw3H/0GffsX0QbuwE+LHg/PbBCUu1auT9zY4X5/92D40KVYWztizm6dZHsmXed6/+2c3Ku
p2vrDQCyPAto6fntRgBtxwgSOw/NZX2wFKTnPm8l2OiaIps1bSSfH4X9B55IXeFvaSpY5rpBOswP
cVHsWpwwu+wi6FTwwnqXqos96B+jd8Fqag1tl445zzGVdiOj/NIOVHNibLCNMvmv3ScEZkUssQOk
gd/gH/O2qwJR7vX+wd+XOwCG6jxRiGk0NQCKZteou+2MwhmENmVWo4coX8NeKT+DWDRiLEvn0gt9
UVFwMWY55M+Ep42rwUDxOWzBXPWUF8Mv9pFWQpdoGebNJJRYWuvec1e+m6ztMlgBOi0/DiaFWNf2
RgqwZI+GBEfd+FqRFv/5bI/erO++WoxzQgKTW4x7zkf4n9qelWFzR/pnwiII6Bgkbuh7tldg/+RN
kAgaLCZ1XE6NJ4f/IedgtByYfVmmVIj6A1PgxUNblcx/nNtzewnUmLaNOmAQ9wLUiS5+AhFbX6eo
w180dPpOS+2IZPj8ttY3aLTnf2tpWmgR/2NqCLw0gGBWEcdBWCzc4Vq4n+/afdAXp1e7UPb0j6I0
/Vg5RApoP9LyOabdv2deoE2TU6M3+5UXU61NAsxrwBu8yCwe5AShSClVmFxFmrWKFwmqLkux9sLF
W7OgfrXf5qJD8fbW4W6TY8LfJU6gjnxpeidIDQS59zH+e+E2puFfFw0cJHSdpDdg7SoXUIoZVpvV
/4cRDtikjcxGD8fZQtZJup/hWLoGLvKnygRc39185AMEviBUvsj9LX9lIiKQm+NL9v0xlDcKdM9B
kdtlNzlYqY4qQcE0J+5NFgaLSJUSxBYCFPBoLf01P8O3HnToZx5ymhp6pScyS3CSykLQd7pcb/e1
n353j0Cf/gbJ23hVZtLpvOpfVCNPK6Rd0XmVPW0XSf+G3b7cFtx+3w3fuPgqBuuTgy+Jkykcqkv3
fJHHH3Pj3rgGRpjdXwbXd1LWLZSbW9hAS//T8JOxhNi9+M7GPgRFdM12pZKGfuPJgwwF43YWuVf3
IxuwRPUGQcQ6fQuHYJI4uilEH5lIleZpozNQU6AluYS23SRMZKreVMZNqadg35FAurYI/xyj4vH+
TRCsGJlJvSPGH8zW3j4bLDXldfbms5RzS5HQvnBZcxE+d/qly0s9rMWvidxwCd1BMh1rSD/fQ981
NE/MElbYqa9n+0u7Fsee+qvI7MyrdJ/wreB+jZmM2BKKQU4MqusKznf2P4lThptH3b95JKUGeuxh
TSxEjGbxt08zf3GVw1IyFexrKbPj50z2RUWkYnXGqKZByxSQCJtpFRpdXqIeZUZACE10lraQsT2l
1WmlfUsBRAO9rSbpy/Jwy1//9OiOnkq56hYPnoWI99httyxEjxKOZzGASyfe3WonSQqZ6Jb3saTq
ebRsbfaRK4AHe7COTYv3SqxYqAOxGmzTR76k79jeSIPOAURQcato2hxDdDt4QqtiaPFvrvm/qFYG
ElJf6nqGhAj0nZgiHFMnwlTAVN0QUTBTzzGrVWmXNVPn3Yg4PY/esjbCmjUPIMl3/ftqH2NaRiNy
hBymZwbF1jAhTcNkMzcJVnM6KUY1hxNZCnzaTTZiHn74kPiErhFAEqerZGKzsv09z9YfUjNQMYCu
jHu1DwftvfZvoBhKmRG8bRrjgblkMrkb4UufBzecqhZkfstZk9Xdm55Ag0htPmBk1IolT0nqnOc8
VOxmmIrBSYvgvJtSobRc86j9A9wbBqWhkWCWBhdbI5CgQDVz9frgm6y6OLD56MHF7/6rGAVYp5vS
NVkyANrYTXAYJy9x5fUTG6MPXaYxqLySJ99iEAVvxNgYTyc+5jH6HutEeoCBXx+nAbB35piCw7px
OXadmIEbVnfqrZA1ObENZtcowKcY/nsQ7L9UxT5HRtrZtldsZUD5ivOYo9vx7Ea7gE/a1FCWhyD2
ZjBhPkVMGa7XtDLCCszg2eBLwSmGvamF/SB1Y9W3RFv9LXEQogOvlo+xXzrU/7wkXIXTWNC5vE/o
fvtDTk8IvpwCVjndSLlW2z7qLxeoWt3sb7ChrW3HlXd4KIiSHxGKCpFdJFqPmGO6Uuwc0VgabPOs
bB420nVe4OZysFwI7Hx5KddtctjTsWzVFrnn0/bJ9t6oVv/gMj18UlcT9JbiJclStHuLVJ0U2nvb
4C4T0js3nqVuTy90z1pLHPUXrB5DXs21QGaYR0siMTYmb08QAiAfXEGFo5IuMYajNoIOfIiIFoJJ
ClCRT1EaOHs4o6TUJ+0ox7pw1Wj3j76oaa60SDsU/KaS4TG/ki06pAP/p08khtcrPsODQqxrObpx
GZzVByvkUxfqI2PTma6wc7aVxjBiTBviZmFvyUYPu74Yalk4NMXs44/IJ9hZ2bKjRg7z10h72tqX
lHtM0OEaeZNYix+PFZlAdxgMHK+V0tYNBZrLWw8Z4rhoz5k6GFRpMXscnuWvltpM4pZJ4KrbWrOr
AKTq76ubes58Up4c8ynGQGp+09mc8q06ax/W8S4OblJR9YTUlKaCAJfpPDgfsHEjYCw8Z2Vx3C+q
pncZ/OrTnsWau2VkpOtRkGgUt+CjYr3oaCP9t5dyy1L+/GpHdDMR0yyfhoK/ez6FZUERG0THAOHD
u69kUw18x3qXHP6J6LNtHRcmJLZ1Eum42b//MSNSZYhLNDmJPV3FeIDwwFa90Y4l1kUeyhtCEY1T
u2P/ePqiiUqILwLE13mODl1jouQMUs1wmp/luy5Y7/CRdmnypo3ii1XsEr0e3lFiCxiN4CEUygTa
fkOrjGVDPz26/phvseQ2asppc7Y/FHkiik/lHk/FKjeCxlUMFt1R7A3IH33/3tFaO5ekMvsoktQE
hdm+juz+oeVZJN4zDU9Rvgu99/4XWpi6VhhPZ17E4KdwHH05xn5vjsR9gs7KIjtsv19GCfycBUbU
kOckjWvITdito2eFF27zVETkSOD1CJutNKAYSp+PVNH7xQtOKWTXuR/v+IinGwWkChtDyRRMIqTt
2v/W0FF3MP1PX11/KpSoq8VMSaJ4wP/a9xLhO44UsT7+ystHMt/kITWl1U0qlpcyvIhSKSI3NX5z
laaAscYWuYhQE+gWTh1QK/VSPFA64N0GJGalSsswxC/q40GAFrnctpHuZh/+LRMn7Vd4+H/R31zn
YPdiu1xqU75L601V8oOhjcua6XTwKgWR3qDlHA5jTPzaowor/BfV9xJwiRcW6qyZ4TdqPuZEgbgu
JbNKzyi8zc1kYL2K6wxe0Jnto4z2Y4FtkEla8hdlW3/16OKAHwBoYPMXiemPDjsMsmmO24cDZEK+
yvdwpkXb2Opmok6fXcllS889seZdJUetDJlkfrkNRqYnGgUdYDBKKCpm/l3cxPDX54gl8fgzqZ2C
+QCE9Hn+fyydqZ891yrzfeT7/Qy+vhhc4MwkNAMA/4ie27VgGWQFiQnivaYERldLxul+Z2EFqDSu
2mfOm6LBoPLZEcEPmB1rfP/3ndx0P6S7sqw8SuYYcdoSbHgq2Y0BYjkPC4sr20x7emC1LWVEL8e0
HcPPAs2B8ycMNUEVMbKMntLoHa+Sk6XD4Fq+UjIbEcC+Yojb55KTcroRDPTMG5bx6c3s8CUZCz7E
5gtEMQnyaemt0xPr9Mo2OkyzIF/v6W+zdMWRpnlH4KkgGFNzJAXwCXQlzlIM3YhF11rMCzty4bbg
4ZxvY+0NRqUmM3tRFQBDa9RbkxHWm70zSCc1R3wKw1DJaj/nMR71+2mE22WH0d32wjBGw5lAG52b
1yByUhFtEZv9n/R/50YUqT8PsUneFuKS0gI4i3pw32woV1qLzsFHU4vNZLJYhUrFteh8b0T8Cckx
eBgOmkgbf3DG/uMXm/xyiS8mOqIxI3dDS/497nAN0AainpvkyaK7UMzSqSicJHLWSbU4K4LsrMF/
i+Hh1FK5Zu64KYueI+y4qTk3/sBu6lrhvrDZFl31ES2jRn9kZOG0TLSJLIHHH39PvhGMYPWgDlj2
kooUs4CRZd8VE76ocfM9Be4ixqSOHIaIgAoiKSQf72YSLkAF4L49EtEF7y82LQpqSXuiD82hEKgL
66eI1nGXK2+91PkZCgCKwNBBMQhrWE7JvkPX/g3YKx8bcixa/c9Pql+NweYt8LYuRzuGegNxSZ4f
laJghhG29MemFDnr/zhrpgRrMW+ijJjg3Lk6f4BgWMTBEdSj3LKT833SWfUaCyJpfQU3lZnzNX04
K0Y2gbU9FWRZB8kjtVTCBtsQ/pZXtZIB7w7M2+oXjHfCPm/GZ7M/J9NB2Rs+D2mKx+0dFX0WHrUs
R5t9/zXPRIFm3J1qOsY3HFF+cCT6sVkBofK7FwNApYS0QwbZ5RW8aij5KDVnDRIMUv7ooi1rmfO2
hMmeh4pwZoXCib3WHoKMZr/uU5jI4puW65prZGwPK0coPTkUKgpzLOpwRKi6+fGMbsngjzSYSY6N
l+1viz9YK/fPQuGU/BFO3QL9JzyO1mIeIkr8lfuyaxKnOhKiPfWEDJLXuIrreWnVRMVGPaAqesNA
xEG4mrVeajp8y5yisqZebcC0LfdxgjJSkveK49xn+hD2LgOndEaHjpaG2yEC1/FjhogaptDJQxoK
ZXCaloVe58B38P+57w5/xIlaHGLOcQv3ODIlGo6gn4XqUYXek9Imw8AKv0HLGaJvWD4Th8nqOnC0
E9DYMZwihXK4ER8eQtlV9zCcPngY+L04OMTPJkLbWshE3C33YfL33y//hhRY0xZ3VFWuyq7ju67S
upJWc5BvmuPS4+POQBBDslwPsQvnFATqeTdYQ++jjk5OCFzg8iaGFrelL+Qh0oD3SSrS5ZZXs0AA
KCGFvGJNFhfvvecvnViIGE3xqkBhaGwC4MD2EUvvUaueh9EsjZLsrn6K074XbWqKcPFyvSC9KS3N
Z5lVe9Ljj6YMZn6kNqZlrZgpBsEGP/oYzdnBhXwdtigcNxuaQwO7Hp9+b4lTdCFdW1NH08bhHKY3
GaQPRNhUq+WXNu6aDwGybYii+3+n7XbUhkLLE6D0uaVewnNIYGeoOiqYBYbvH5rh5jKkCojH9R1f
ZHkDLfbj2wU0vfBe61D29bkAOZK2OyGeWZNm7u7Cv1igDEB4WRN6TYBnQIY1G6lPetRy40rI3hCU
7lVYs4towYI8MKINswtJVyUn+p9SPZa9HMQOzIfVF3YyhdEEiimdlc2QPhMtcQURSnwCXuaTLL6V
9TXtazNeSEexG37vxYvi1RJIdjF+HUt27ZzNHy/JZOsh/eLs2V0P8jbRCvcOyti5PtfnBAkgu+bv
pLLuK+d0q/oyGKQUjtzcj/owQQhj8h/NM4HjLdbXiU8SZnsAkXsH4AOJOJ6kEXCxgyeGkaGalYZT
/eUxDos+a5+h10DNCr407gsMWdnX0APQCvV0kFhP3XZYAJ+Ou0x7cUO3csGw3sunKVvQc+4wWye9
xX7fpVDzim9zXs1p/ULf4450seYJ8l+cJMggo0TbxVTBmKM7hACEKLD9se2drmRk8Rhht2QB+i9w
2Gy0Fpf8mZ5honkR/JnRsAgM1DCBOhbqCQrWl9DGC1l5L8SwvU2N2eX9CYbfJPaByz+956TPZR2B
e1T4E6mUSV5R9gurDGJZvBer4adjbkE4bwIKtS8W2v08Av3ebEfHay6lwhhrTTRswp2rd8XugSCU
0FoEk9eld6bHoRROFYjWX92xpjhS6izrkYIwKUkEMRCBlGNzCztSLpLya1TUAUGOhXR+qmY4UKnG
exV7NtNMcWnBzhL7DbqZ68vSigKujUb7fpD/JR4bg2o3nhvc27BRuU5cdiB7ovCzLpGONzdExggj
vZM4gbxCbs5E/GjSNZeAjSXy0+sEVIWqhFZIf+62q2cjIDYXIX4hOTxU58gm0jADXecTg3egeCzN
tgjw8k6WIioXtntOPRJhfE/QZbIDWJ++3HAxv3wfDBaMsxcppabHeVGt31OVzu43K1fUG1VtbKJE
qNmRMuY5rLO8DVgplmNLdDl5WftUbGjt8kEv8ocCXnGJMhTUZw4+SuveFizexwYf3sZS/Hrbpfkd
RnZaSzFaW767Sc2yDSJiVD8XKGPpp8+zPAa4z8q+knk/9jbDuDBB2Ku+/NkyMPnjZAId8ZUny5KT
BOvvqzYKX5UlfzBiikRFaWk7OZqW/4FdwdAkKU1ihA69MlKr3bcs+x9BuAw7wjvajFDiROEAgd+m
akJCGevPgcFjZTP5L7bwVYKmxvBYxogS//CtWoO2KvQmOT1GTy/QNqxD+luznj7CQhDqJSE4bJ4j
ecUjNFkwk9rUTkGw8Z9c8r8E3QENKNhr/irKvGdila5R1A/DqBdzsmUtZT22To/qOQGLyCmKsUfS
42rFj/g5CKsgmW5RDmQrdBSl/M+SJ6m98IdmRByrt57wH2r5Cdy9LKSo7UrKJaRQeKLWswhbtCsS
oOXdwQLYTaFM8sgbjGu/cHXvGfxOhI0T8I5Qj8DcGP52vPGFyxYb9Cp9axgH7ezvMFGbslX950B0
CpmKxUcH9EqUugZhm8EhMmxEtTPZzGjIF5jDi+42mUJho/NMaQe/p7qZIJsfEBFxv0KcXCov7ges
dLcaGOaiiR1Z+wM4oQEr7M3PEIuxd3nWZBEBE2IyAaxWY/q0CzYbm89v5cLZjlQiz8JpvuLnE9gH
MuLUGTaUGavhPozQ4xWw/uIPiyIaOOd7ilns0YnQBiARiTj8OZkPbOAMmXdvG1YtaubJ/8aDXy1r
l/zZw6loAYJkKm9Ow0fH6kXbF+9BP0ouR8Ba8/ySlsZqzW4mG9jWMlO1dKVAYXlAqBXdG36odowW
eygX23JvklL4yzkP7Je3IQqVP3I2aia4KBVN3y+sGIrLOpB+5P7lZj9OyChzT34OECtSj6i7xACo
5ZC7vc1WM93Y4DJz33C+ChIc8hjS6oKonszORqMeu6g2iAfGO66HpA9AAxfzT/UZhoJ2Fw9exFOE
vAVrakOy4tfQ6iC3LO8kICoVOyCiPROKMIxLTgWkfq1vbZfZ2Tx7K5nibOlBbdueHoSXrfppKwI3
sEDm6Q/hbKXNmPT6KlzcZxNTrdMjsbjzcBANt1BVS2X8P4wqzhJIu0Sv9DHqecZ4xCXyaKLHb2yp
tF+Pjy1/GEkvu4rbgv8qs42hVQdXVUDCGKnnwrFwGcdmQ3rKCqr83KzCeYd2zU0gSZJUWFnFwMyO
wQa04t9BAnmjbkpjEL5RvEFcfZCImsvi+mmP5xOdbp8E/+YuqwQMxA3u+eYYQvmpxP9ery2HLppN
voSAkwQ5v5PSDVFDX8XXGt3uZ+tRnH6teYJOiWUjkoFLwjepb0oFDa67wb/T1hisMl+5X6Ah733/
dIg52xKVvuG+/SWnzMMmTg+EgdskGFPhxl3Ad9CyVN/kNT1jwaZ6wFrvU/RpVhIwQJqfrW+o8QHO
SvRYUqSWL8T60zknbykCPL5QCI5DKOw0ZtSvLBs+AQf+lti6qEza1WNqlRRqf8Jbtmrq5fqqPxA/
0J8BHsUMMUpe+fKXlt0nOdgxPHZDY6MRviZzqQHyXsBmUKct5NMRNjjvnon8Fq4QZoYQBKP3RRLD
3e+coizkMS6sohz8FwvmpMXnqiP9Ps+W68sYJv7W8luSXhWtefDeiR3EItpVowUbE7LAcVF8NmjD
8/G6+4M+NN3cff4Os2pn0vtv6G9OTOU66agVRAGmgLWW0EJFL9n/4PgoY41cUBlQaJbbBh5OK9nR
ap5MkFX4AALwyfHWzrJo5JiZTf10SXrVOwu4jD/ZgpKTbBU87whnCE9IpdMBhLF1M+07e6rrbIor
4itw4309+2wX9Asd13Ub7+7/A6iH9Am9K/wgihcSN3UohdOZE0L2XdiEZYeuxDcegIdQD1xIz/xB
s6jCmx+QE8q058E/yUx6uyAqTFy3Fe1VM3io4K4AH3J0y17aQfFxiynVb6EH/jACqImfI6F7Lq8o
2SZF4fRY8Apl62PhxxlIrBwNnpoW87gl+ls5aceisveN+ZBxfqgXL5YK7WoksNwinPBFyklS1LL4
Elt4ZH3izsA+EdUwjr49iUpfyCF9ZVzqazKm1Q6VOMmREVhrBYE5oxcsqTlJP5k6XqTc2nmSwGhT
xAO9t3SSWUyWwtHY7gFkIR6N/KUSyLmGLfJv270IBCIr9p8BdyVQDF5WgKYXV3lvFmfdpnWUsNLS
aRNX+Pmb/acwWpqxYDWCUKIXtqpUS8j+6WlX9Riw0Gkcmlsns6a8j+8vAkEyOsX5ftY9PbPdpqNi
wT90gWeQnE79bO99z7ile9D9yT1BJuxvkSeT1Klk7iqVCBuMkPqVt8SeVtKAz6FRmR9kUVZZEK5g
D50aM9xMVvrA9CTGWWx1RLPTJQZMJyZcjvYffKml5Our9V8QUCc6gcBoUbXYyV6nVh3XmGCXI3Vi
zggYOk/4m40/COhaI6w1byF8BqQtoplqo3VxLSwod40qlCvZHeSmHEUiEFF7jDN0GqksAWsjyZXc
rUu/YkQEcUPUmz6pEqp+/xO+h+Np4vnX9MzUBctjnh8ATsDSoEPqIvSD2AOMH/qHRZ5khBY1pumS
ym/BjSOmhbD3HOtU8pRq2laGGALsa1nRm6uPZjs5D+Vlty3et4Hv/E/94xkQ/nhwjl2jDSB2Qzbj
CrGW7n8yUgXz1WSlNui44O8A0ZMuf26doocLox/bMHZ3iGtSLfNCcERYeIjb67Hn0tfeZGPvQS7m
MXp7q+9Sswmxq0P88YSCLAQg27+f+sudUQxQ5p199xQTlFGyWo4cXwwMx3GLLBd4GJz8cIMjvCXt
H17MrytLeLzT3NNtvTtz0+fjKricE+mPYzLeofvWazvVCHU7qPvGghPaWPlzHPuWJY00RwHQZvrv
qBzEFx2rFja+aXq1hYot2Vd7a0n/52M7HqAk2konxvBO+ChiPgQ2OR6BwkKmRQfWdh4/tcAEV0zM
m2mo1k9Jpor/kwtvITWnmMR+PDkRyynNI7Z7mn/u19DQxJqnlxBvrqqjHOKxxYXrhouLFnNP7vJ7
ELslobfahZvGKq23UnG21Y/z5cF19IkA9vbRTHrsrQs9QJS7MzKBMr1NPwafqWycvuFfGlGGtCyN
Re60VlpGadwLL6NCLzpcv2JXddLeoZNW7Z9uFvUojUDg7buFs2qIYt/yJZKB8+tDERUlb601G17f
2Zv3PVTD9nMggDRMGn1onmKJeaEmzNXBqCk2PnXTkkGh9Ed1E3Uu7uravzCwsHD8nkdNLojSdAQD
5+bFtDpTUAOobGN/n5MEstGBNWIM/lInwBv50Fkf5EXX7G1qYJVnuRPZ6CftwcpfpG+4X/zIPRmo
2DkZtgL6zECWtya2fbSvKr1lyF3p/ci0LADKBkKUhIhDzAQRaEGchXEySkXEhfU/KnEQef/saQ62
4KIG7XX+Eg0Xdeo+Vcf0HQYt0RAcrejbYCf3Mnfsz9sgt7AjgTt8M+EXPYa6fbVxg4PVv2SokFKt
lV40vo/m5YzLHFJyPIp/ItIZ0HsbihbqbNruojCU4utTS7L9oOW2Q+YaFbWK6o9qH+SPcvw5mThX
NLT6HprUpnTpsyzLNGqONSn0pLdAHrRF7SWEolvCt4DPFReI9oTJ6ky1vXNgdrczZ5TQY8HumeS7
apRYoV4NFwwxjOl7kHU6tVBuiSLK8BO0EYcE02bGag7HoBl26jL7Bnhtz4fS1o8Y72f+cR1WAIRh
57XFAlKPY7b59zwXu4AyYuB2INxTuGWf9I1GIlzU/Ic7lFMZyiq41wru3UhHYWOV/G915bHsYmgq
bAId/hDvZZJSjNfn6YkPnfb3UOCAFg31IhYHXlIwioUU+mqYL4xiZa0Tbq+TnkSY+0varOXcE2VT
5e7nmnZtfHA8bGd2HIRmACYeCdV+1sUVqwBRP/rt5FD8mc92tzAMFqwNP7dD1z1tIhBYP0sIy10V
jDI4yNGlvKEI5fRsMaT0epP2iItt+7TkA5Rk0S6R6F8N7Wl5/H0MwtSxVyNqXvMAPl+czvOr4FYk
m0p9/amtrk7JM/5/Wn8dI+xRthMUgHE05L2gT1xC7GtPKo6OfoWIf8mkxhiX1Lfp1uro6VEhnRoP
n2iArY5QagZaO4z+Ag/lbehKhuOAJO02AVK8/6cqLPiWKHjtTGV01+KT/liU8B4KTjPPLEdh/qU9
pVuwCWdAAZDmvaw7DWvRhg54mVUalsLnvqzcj0dz2FIP0d1icLLez/Kr2gs4XHgnBLx70qAlBW0T
xVdkrZLXt6Eml/1HXtSrjLB6JizEui7OYzJcJb9RJrIkMB8KCTjxWX2K6Gj5JGkf3DPGl33iiVlQ
uYo5rkYQJsP4g7l1+5GPHIUf74KXJBDUTXyJnS6dp652fiJUv/Egss3f7DKxJ/by0JUUQiLBqZy7
D9d02zLsFWym0XKxXzwtzTOKThXDAvnnLc2Vd4PpAgsJI169xWZkuH8BBWvjOh9Vhwi7/fEztqbp
tRK3wTnDGbeUIz8kcasNV2v78A4Hh5g1yM+1kGpcbNGPDDN7ota+HvWMRF2kdAl3vdgfRWt0p69b
PiE8h5pOY+MJEt5NB2A9v5cgtn5tJBspQqYinYwGfoJGNNpYaOhyIMVuhwDVhjWcQlk98n6408En
ongch6LSYzL8FEpJYnciJ/EpvsoY6JxwqNDeSdqWHgXxz4MdMCfTVULJBdl5kgxd79srJeUX8ag1
dWyIoiDWWEFJkSb4onBzrnLL4pGnAE3+Itsd6KcPXAZRr4Pl/LdQEhUJYnGlnJr1ahAKK40F5VZ6
vACr1dZIpeVmbC0Ul4IrQH0mYe3zaxGEVV1zZXjxFxBWFi1fxwc3t7fVb3x+R56AdRK2SfhzZx1k
F4oJXEExqUyYPKjhm7kO5fLKZqeL2lJ0NW2Z2lHIZpLvos1+tCKTbAm9WxIRL9DpxanrjD7DCQNi
L/uhDiRWm8Z4sGWxCombWIIzSjsH7/kFZh4vhbDK0oJEFxsLOPveN8PAVdfFzSc5dmbMKhmQuuid
mbqzTGc+gFKMgFy5f8LSD3eR4Y9o1ikhJZVOMoJNpYOQAxHzjRBycIi6AglueTUyJ69eMHf3FyFh
QbNpBfqlWJcLhEm7J7PfB+NsXPD4TxctPbxWKFiFMC5A3gaPPdKmz8PuM3eI6f714lVj/MrIPJ4r
8f+FqWBJxmLY31T2p9tlQ05b5fShVwUipU4OKwe6BhoI6je8AW20tvrRogYNWTiKEK0+XWB3eDm/
GCWlZFX/2afWj84vsPhBC7Mfs/5hK3jkzfEOfS0O/cIFGcxM8tkSzuVAdxo/6kKd3DfzVmnmKjyD
c9BuiU4un2aQurklJn63J9W9+bo4FBeyypzZc4l0R78A3V6sqLUSEo40hb9AiHAum2JhFiAhsp1e
PV5a6NnwoX5Y/Iow9RfpgN7NrzAIcyfkXd6OXKAr00UACoO7socWK6y5FM9IKCn/W0cSTImE49N8
jodreLy6uTFfppqIoc0hXON/i4W4DdytOiPdInIm5GnN3/LtDTaeqXyGgG50WyzdB2KR8j3lnrUJ
AFaJ6Kaonj49uaE+yPzUKfxObPFFtxPGVSA74KsEIoW7ixobDGREIt8s5YPII3Rpm8bK6LbUHKOG
QEBF8AAerYa0dpiKIsr+lSyqDWYLqe37n3ldhaa2nG1x4xcLm2ey1QELjtWBPTIzxk3H3vlSEljJ
7MbpQthyCfFuDyM+Zj04d4ZMIt4164hoZWP91R9nXyxmSeu9yiOeddlb9MOkhQ24iN/X4PPMQMMO
bLg0ACSE9xhHZLcO/1mS/9ipkUHcEu0TuHuztBns/WXISHxdVMWSOqLZPrF7v92E3zlGi8rs3tDd
+K1ksSQcLGc3H+5EDSQICGSxY/9be9RjPP6J4bIM7maOjYdDDuLDkOxTnOYvNpMzHHvDFSQXtQ4V
PT+E/5k6jYjGOrGLDO+ts6iUITdh8mIi+q8DHEaHvWFoBaMZEahVKJZN5aCaHuX3KIN1DmW7yb85
QBr8V9J/W5u3Se9XEqxFgb8HtZaT5HZgk1AzA+BmKz6hZNftyuE0E1MPU3WC9qN69C2jldOQy24R
CpAfG/GApiqPX+CpGWX2HvsstJEtQqDOrVKODcZ7KgA+614Uu7SxefeG6Ny5TVvwqd6UC8oi8R8d
2um27KQQ1W0tksso7WlEXVek2Im0E22bel08JCB5eHKgVT8fwBLzhKCmpozv55DPdjuZOqibgT1C
P3FcVtAnYGY7cvj2xTxeFCMaabvNPT+bdqBPgqA0aIDEn9ff/1iIbPeqTnbJWIu/AsFpxS5Z7b77
zfkOJm59mtMNM2d/1MEyxsYIRLgsQCDnQf+rqFR2OxZzUSGgsg1zYg08cnHQ8F6ejAoDa6nYiQYZ
vNAnCpzruqADHsc8MF7tJ5cUalb+iMzEeHNc1M8ymqyVjDiYsTfXmpLUxfDvQbluFy+uapbn6WEJ
0ujItTnSiaZVwwFfGKxmWygKxGDkMQ6AcQYQJv1Nqm/pYPr0UAhENuhmYeAGk1x0c2Anet7PaQVU
TQXpxAGZLAIbZNEX/+w97PD/8OEB/hUXiaRbGlVJng5n5ZrixcDNv0lJRYFj3I6KRytixvhPOtGc
1BifHUP36LvhlTre1ePXYZABijYqfRrJcAATNT/lS4GL8HqDbxvfoO+zzbxMUYqYuZzC13rQZRfc
qfZxULPoeUC5twE9AMyBJbZauzXNTcmM6Rhustdk4L8K0Fbzl+KEgpxFxKqbsfWEwhgMNLFwTnDc
jmKIolDds76yo5BkoDvpQG5oyYgKJiNYeRyy3a1YMjUNibpPY4cRwiE/RFFOFvIgUwQW14kBgwfW
bQgqq/tYYwK9Irydg0Io9KTdPPnwpLhDKLHkDi5m47nsXj94ZzFy+7sRcHIYkX6dco7djzDjIn6W
VaKkF8FnVFOiDwnL3nmEosjaQeHOlsEW4bYoXY0c/hbpJmMo+mSCTPU54XY/WeUaB4EqNKggmxOk
s2WRHZIt3+Esq7ZINcfHORvsF4TkujyV55YcjRMnlXiOKYZgbCbC/SYMVMVLx34cX/YVQl1MLbzu
SJeVff0RzwwWIZQOdet4gqm8Kq60f+2K1SGvSmS8iMV3wsReojeHWVs0sIatyI07R3MSPAltn0KC
kC9luePYDxBgRYtqmb3MnpFn1qzc7XqYZNZXlsH9sOMVySKxktLPDglee/xHVFZWemMt7XUtk1Yb
Gp7DfdnnsfSwXnkzHg++0yevrzfyTbuGFcl63ZG/LQy0MFN4+492rdVh99XQ/S0CB0XbvRQAMnc9
32eIy3g1WGkhqmRDUEjq4peAU1kiVuamQMRwfqOTdTq6UQiOWUz5Ty8ZlM3Hh+rYQHyZePxSu88s
ZRCZWXLwsj2LEX5xXjpTWpAS69kUw11Lk8/4ZWeZDmGDTdjlMdG3qY472ac08hWqjX2siKiJ4jxL
UlgWKjrvT+/xsukHSvWNTd6StoDFJFEneXNjE6av/ODVLwEKFJuHPGjepjhhPnrUaYUunU+i0Dhb
r5iQT5Ya3bxMhVqjG7LE8E/zkFaD/4AwZEs9eDNbxZ05EGB32qs95uAb2LnktDX4w0F6sRGhtmzr
vliA2WmMVpg3SdPNvZ+8DC/GzCZ+zI7YhxaXT8uSw5DqW1P9brwCD2Toxhf/EmGZv9wV2yPWF7R7
/kMeP6WmYYwga9QfI+rykmVY2PZLQ9qXdCvm1qhzA48O5JOUiGJrFAKnsTPE4gXzxu97widigFzn
XuQSa2GoVss+QUz6O2T+nw/6G+SsHG/lN5ipt/YvPohb6vPnvcYLDfXF49wz316oJy0jGkSUapJQ
QCfMpcEhgrUxjNQk/rqYzT3w0qRks72NhE61XVappy8W36UjKgyAIKWXgI7qnmpmKUM28/grr/sT
0994sWExM5YezBuptQI8Kkkq1K0jgMQR2TzYDh36uFVC2McXqdCfyPKpVTyiC83Ahqw6M5nRbTOF
4eZ6lsljCfjQwpFUo15y2+ZR9Ty8otbofQRfl8xOyKDzgghdVPIe1bGh0KNmYDZN7HNBnNkakz/n
cL8NbqoNvj4Q4K7k4DdsC5wRkDjHQldSpjATkwAyNCXGGSFbdFK4v/o2U5MnVTzyHgI1Yskk3d9E
Vsv7e/ElFu9Q/kw2etQUoJW/26CUUkornS5KPS7OZt+V5NHWfZK9cfWPY1mRfi3cbz1njKAlOv9v
waof8qN9aFrwvHbfDHQKpt2OXoEFfKhsOT+J+NcH4ezcJYPPwfphyfbSbo2sAjQdcmUzpW+XbiXG
SgH4TLbEfNkjAlizJonVsxdCXmSU9uQe1uC3jLFe9HgAML1ze1rm2qiABGxe3MdMwCB5X00kyHcW
deyu3RS3Jg6sjSav9SkB7IBEMMrFWWFgEMJ/jEzHPDC6HYCzVo5FM4qizOann73aEYd+KEuLArn/
YiR6KnLW9QetRW/vnOj+KAMmClIyeMTSz86pcsqF24D5TY1A53qTMGg2wv4geE/obUEqmLqaOzJw
ussoqXGqDzXzUQiW92wjoN5yAEYnuH4ZV6E75kaXFfCUjce7HUeXh0wCb4AVaEjW3jTUXe1vxXYG
AqDOlwhsGTHRksJAj/lPT+nG3bwuTvHwIV8c+VsKMyTUDySAorabnrINuhk5c1Tv4pAKtrzLa1t4
t5YHc7u56qHlZ88d2HfvJjs6UstFZTYRD7mpsjiKsgcB4vVO0PZMK8Ks2i3OHHsHw/IkSvqXjefK
NOHRLRcjkLD8/lhyL6A7ZlyY5JGWANT2Y49V8L7W5UJMVT7Y0Ly69up0zj4vFHrl9PjDBGHrAMr7
epe7PjL7QVEAcrjtiFH1JfOiaM/fBw4Aa1TaiJR9rVFJsfclpma/5KfUKDQ76AgJInOxfGj798+E
v51yUC9LH4F7pysTFKFUORjLWrm8yzWXtcj0zn3pMjCvIjLRBRUdRNKkUYvQRapVPUO8oKOh4XQi
xbbHfiM3jZkVTAEHaxmyi7l7e+YfDASj0DbuFAbekqUuDb2d3ZDFNw9NeyTwxDEn7Y3WzpRxI84a
J2BxJhDuttvwE7mTbkh2SnGjrW78TCRZF4sagCEIiYgVNEUey/gxWw/ESXeNJKIYePIYa/rPAATm
6xJ6uYzi+geaPr8770l7Za33xZgcvpgrzwX3TimQotqSJOG+FbgmjxBgFydTi8Zj1HuGlwrmx6d0
soI4ZosrSiBxZg+a0KU2SlrvOc1Gt/UC/l4/0qF+znS7WX0QuN+K1jAa1IytIDFEa6HAe5hbJeJd
58BGLGFIpsSE7WFeIcR3ulayf1Xbod0jl/Z3T10MAYFqHjnbldYOJy7E7MGkbzvbD6OFZQ9wv+XW
HRs74Zl1D7fmLHfPtaIIcE0Xeqho9BLx2d74/WXPbWNdW7iDSRtOAuVthR4KqAAq/tfSQkmGR+Gb
NWR5QWnqhScqGPMIF8D8dzvj3mjv5KegViiPyhq+3MtT1vgMjUmhDn9Hujuw6Gmw4/GVbN7byL9L
zQGGDIdKfm7WT4Pls03Pz/+7YMW9FJcF8Wb0sn/oQ/c413mAcnP7w65neFzMofhtt4XGEPW3flU3
Pqsp37ZwMskGmW9PqNxZwiqcnDvesxjtfBnt7CXJEw8+EH3Fmye2YYnM6Vfwq6PhrO0nJk1YEvQN
HYfhfoOmFbGToq+sAwcKZw/8Q5FN/Q8KN7wppLrnikNAXxpDRl5sYHjx/mUTkop/e7gfmekESBPu
h0QWgfsqwcBbXeLwtj1qBHZdD+j0kEzOMCDr7XOYqKQqZf+lLoJuPP0DmgLnNa9Lh9//FMMe4DeL
ZxeEjFsQ+g4G/2UjnoiOrVgfK2CeSotHrlQDNyXFQXtpubd8zEeMOMD3WLEyo98LeSbuIFkprvWv
vk1i1tlgQ3Vc9vw2/udhF8Sd6fmx/CLg0WIUfbCeBIfNKNqBSKFRU1fuEBi533GiF56bBB6nsXkI
2R+kiV8Ne0MxwYEfRN1NtoLDrU0MNknOI1sTHr7hB19K7upGPeuYZDpZkv2Wo1eW4vjvb/80hqxL
Wpkm0rmO9J/sDa4THoSHzxPfT0FBI4jZiyb0GeWeXRWLauLcmq7zf3t2hn6m5KtAmiXDHVo6+3rI
sclCbrk+7YZL6NRUn3r2cAC5x1/CNBMBAaxfdtAx538UR6jbWegvGmigWzZ0CwWBYY0zHmqwM4gf
WS7aBTYJC7xPVgIMbzQ2FqUi8/d9/0lonREcetyl3/bQuZ8cv+ZXC1Y3XpRlugzfdjVfWTTjAgbL
FtkVOPkDi2H7rXFZUvra3Vf4rq+jbTChI2r4DLPXSB7d85IOzplJsIm0IXlJCY6EdNs0XaMhTXp8
XwF43L+9+nI4oxh1URf6wZjEb4b998Fhm4l4dpehcovBpjiUIkB936WfWSbZPOwRRdEjSHTsdNtU
2vaEOMBtd4VH/KjTKIZG4WCYTXZEC4anxCK3qv9x3auVMnEii5BiSSEh3Y9p5LuFO3BD3q0pHt8t
Q246oTZtml/XSu2ck0fF03L3z3UyibzI43uqTrpO3ze5JA10egYFbWGyxKufOduY29Shve+w0EIk
YBcXHF4O0wREG1aM+8sL56I6W/Gkm+prCuKjujeisNyeqAeGknSEttgRuIn7/0hPqS7dqLC2InML
d2Cn1IUT6gMA7jnCnoCKgjnRB4hzEcriM3ZQq2sUSpE3yZRGn0p+yjvg9TD/O42u1ur9obNbPeXP
E7PJUBwMlP1Fyso9RTmCIEtpFLKnsqFXq8GRJNjU+Ngeo6aySiKjbxHKbqgRQBIuQqSBmqn1g16B
U6i7JIaOirROhPPio2H2hxkM88G9rkgNZ4ejGOpxdP16cycBcBHd1g45QWT/6ux+jZoJ0sSWp8PW
J9XIVRIyXKtVR7i7EFz+P6tCZBEcu+8CxjHPxYPdsMAz/m7Y2vpWZyLD6DsyeAucKmSfezmzWTUP
QmYzFoZW1+yR575j69x/tb66f4Lo+jsSiKwmdnLqQnlkQd4VHM+xH/MP52ChgM1L2PTw9N4quXE5
EsvdvjSYxTlLyXbTUZFPp7B6ct6GShXsLzuWVmCK28dpFl2m36UHNeA9A0ea8iVdWFsqGAI28UGx
FNzuvPDtbX3Bw/Qz7nhbzzHmfPYt3JZRO8VgS9M6doATQJAwiu/u5RkBUq2PUSjIbGvJcd3FFIuU
q+0xE62hRi+iJhJiNX4Jg5+IDDwIB6izLL8c8eolk4lryZMj1rJ0VyX8cZns9G0EtU6sUYGfrr3L
TkVPNavRpBxpkhfgtPevBVsUp8Ykw+njTosynNrwM3+vpJcESMqfGFeTSkF1t9bg92kKuLatkYRy
GZzzVgUc+GExP/uIxlKddz2jHyqiAfOx7ioZal0dHscbu0i3Uvm7iV9BGDioRAWkt0Bd6LmnsS6M
QhH0kCxQCboTD+0NkvwN0uLSJOJc5CNJda7kBDbCt70q/eQy738JAbqDmQHjVCv3Y88sy3lWpeGl
wO/p0IXfC4g+rAn11UgILmfSxzYcXUMmkBiRFPYqLVKEYqkxe8gNpedaPVBz5IH/lDr6X92ByN3j
oeiS43dCk74xD+IonM5qLCM5xCcaPlEqEGCqjsAduxhxSEuYBHzeyV/8Vbkhruxko/P2wwPK75zF
cpVeJPuCCzbi51KE8fYeZ6Qy5RWJehzCjG1ECg1D0x3mRCPu+hcNVQjkHoMTHi3nDTnAjGBfpMks
80th+7R0EI1HvpiXZedFaLo01mkOq4jWQD/6MBpNGLkwFfzabTCu6iOgxQ1vQExxfWuEjU/8UV9+
p6hlLwRBC1+B6eAkD/qoaqoSSIkvEG9gtv4N/Tz4bnRrlNEc1jJux8G8CsnG41QVVfC9cTruf0Xg
jduKFwXXp0PV0Helj9waZuK5NRbIEF69f/dG2p3k+7Bfyt5Im5TMqLjWF8V+9qEWV0Lu6U7Cp7js
ylQbODuEMISpRaEYVP/zT90PdJuMa0plXFp+jsvqsVoW8hoWqIHAsAe5kVHr8ggca3fTeS2+RvoS
35S2Y5oZM1PwOjHtUIfA7FrAaJw1nLp0RDgmP/3ZKqI9RFZnPjpuIq9IZPQyZFgmWVZoxSB6No+r
PJMiXUaVSxvZEWmTA03ZuKrcPNa5rzKWFUI/uYR59QEoBW3ilWEIPBZs9S9agAq3lpRASfZ6iALe
FCFQDgR+gPBbZX9BIobpEDYep6m+6CRbNiMFku3em3Z56ovhB3Pir64zrZ7To4IW0y4D2dZpq8gB
3W/1wGGaLna7IOHKrkWS3uaoP3KhyTmN86HBVt0nSrqVXp3SYVE+eG420rY5zFiIMTyHN6YpcxkP
Ahyev7Afk4izV806q/oL6HB7w+tQbyUUgkRbXBkw/VQKAwZfZpVZOy1jRvSRnnXK7IEo1wh+Em/1
7ZQo2teSmY11ANrtBAcviHb19i2uxocDe3PqKGDZ9tP9uAAN109gYLN8OfEgbXPI98995RBPfd1U
5euFAh4TEs5g9qSj93apcTbeNM8KL6GXuDVCidB2XZrXEd9SY1fVzS0quhmISWjxAXcpanmqyrRx
umgZf+uzcGGkTI+Ciir2U/4iKll/q08fN8x6o1YxrCtEjP6hLW62xp5Lj1chOQFNdsVZhlsYediZ
YDSmieDhz/8/SDq1hB2/1QLlTj1pHNNyOI3uKrHhZDg8gD6MzYG1jv/eckDNrUkxG0dTQh2kBnji
V4hvpWFF2VFphzSa+WhE8susfc7Gm40pGlvAm5N92IBFGTv3C8iomQoLOxzg54NVuj6LIlpdqcwc
oZppHW+oODYTCi5ZF8kaZO8L64y/CkUcLftZf/+Jg5G+hkx/AH4GKjIUk6ksZH+ctYZziN0xoNlW
+fjqi09iYiagL8go7dpDazsNflg9KIpKfqNoNES4hcl14yuXbCcUY8gFVL6uAfI6+MiUhkp14iyS
aSjYLJ6hbFNJtwjyS6/K3xrPg2Hvs5mitge7/CT6jc5NG1+WzNZo0eBPIOu1T8NzmFw4j98G/2r9
L7ZF9zRotfDvtAcvTTnN3MJPIb2CC+ow7EhvWIy6O1swRfwrD9N3wADbGrVvPbjuPexLLX7SAIOB
l4bTgDClq0YlsiQwTXT6CMVNtROclv1dLAustpzSuKiLVwg3dR9SLg8GZ+Zw8Tqve2a4TsSlxRUn
mWLVVHcgLJX56XkZ1kteDKcTvgAMnksfNvE/8KA1boDAnSJy3JC1L090s1uuNL4WRvM5GjP2Jt+y
KKE9DeGeB5DjuRGOwpODgN+7n4+9WAB2U/yIaFWhi/zxVU9NpIrwdVQJmjW/nTpqI8DnMdvBgfdo
/TWXCOl8OKyKCOK1GwK4e+eAFSxC+vgIN7I2zCUg7EvhMONxHGkPVAgKoQtWNgmrJmn5hEj1oW34
X8CiRrlLM1cJIZ6uWRIWFuDwRLykYp64/mGCr5gGgxcLI09rKCwMJUfagvPsviBVTtxvDpR6121X
1UAihb4Rvk/qCt7hQhMUkR/aCu/plKWkW/LMX5cw+Z4j0dd6uvf4HeG4Wn83NECAGJbpouncEUNB
NOE9QMWn246Ps7OPSWK7Kx28K+9IHzGY5+NYDRD4mbso9WNYjBYpbi6dwrDGhgUPz3RsYN/M8VZ0
wOAKPVWBEQm4N9LBkQHeKEU9mLSJu2xoFMztkvTp9ZEVgcwCI8N+NgW8c5QxklqnFxALHznYkelk
6zyZ3cxtoIRHJH3rFzFax54EyY4EM36YoA9gKr85HyYZCH3msVE2RzYtV8HP53q8hmE/yqic1pWa
PjllqV/WYaA5c2O0yHnyZ+XVLPIEyzfggqzwGgEn4+a/KgVgnlIntiELMHTgERKjfj2IkOGuDDe9
qknPZQF+iG8ryCtSr/JSod+KW5ZmqDQ00lrxOQXigizC1d/SdWwJ5i6HgqzPYtmjyfnDfLuqtwal
4yzRS//lQYKw/F+5Q92nF6mK+8BuPlkrarC8vGbfPvnImnIKeQQV2ubOH21r1/P1tr4lfZZzU5SJ
EpBB+qczVZhzmB0DbRjtyq97uk0wIqKWalxgiGzb/dGBa8bazFlihg1gogtkKFRKBfgSR+IWPPTR
dxusJwRmYgIbew0P6Ez5lcFwV2qZe/JqAmFswVKmupzYZkmkVQhlmD0ePq0588N0pucg9zrX988a
YXHUqdPVItPVZTBjDf0Sgxsz6TXfXTdxRiC12oPEMFS7GXWdnoYMMcflQwhc2oDWz1sCweVuaZi3
DFqOXPng/nroL25GNQIAAqDVDhIf28NAD6Nz1KVqbqXLCRAfwCRMBggNcCGBL3on+I6cNXc2enco
lkDqWAsgrDDus1ndSTr5jYVEUtXGulqpKhi0UQq73Xi0m6eWSf8MwD0UHA8EGg83pC2gdOwH6o2l
IFUF3atSlq2V1hG8MaWkdXF2eN7ZwkbFaJClePpCx13aNKCdhfxOkbwvzaxic3awjpyJM6dSaf6J
eEC5aFtyN29S4sQi+Te1/jVeWDp3uWhV/IhImpvFvIPV4siBkEYVm2DAKxNuoZtQKn/4CfLHoflz
+3Xc8VnqK9EIY+eKB/7wzsvl+NWr1UghrwJ6iZ/66Yy55HHLNQ9GthiRFqGOaD0ux2TKXoWeledH
2vj47j5w87hBr2G9TEvnq7rEReBwjYw37HTbVVXw0t7eB+/S+KXNjyuCf0sGrRkcnL5Y9I7RTjM+
jEVzfkEB5Oq97CCxVczIGQ/Vg6iG0M4zjz9mrQRBEJGfPL37lOhxmt+VQpxK+Wmj78EMpwR3LgNq
WtJoFhJzyPGDxYsqYCTKAKV+XsxxgDJvvm2Ew1EabkIb/5ub/v75cbogj4smrbS5WsUeAflsVbpm
axZge7+0yrBdYQF0e6YWg9NC6Y0oUe606CUTcS+ZiCn0js8KAN5rjxVjMk2RFv99efn7Y0UglIDM
/rZJOoKpQ3zKFuj0H9DJ0FvNIZ0zKZ8WrM+RQQOcmHYNIvkbBidiJv5ovyEYA4xCJfmdLc+h/LGT
hy0z8O47U3XKGMjNyfe9GPVaCt5t1aiwid90+pleVMcN1NU5RysD0FmWLBrhLtlPmuhD4+DNLxrs
SRJ04rY0sZsdxlTUMDjTF3SXLamvrvlj0cB2JIA+z/EOEtxJs9zyzG3B/EQlPSJ95n6uQ+s6G7Ld
M5QhBXDYp2RVCDWEsCpKG2u6Tu1wajybWaWtJ96BnTuNr7Zy2e0vJ8T1TgkXa8Qu41RnQM0XUFPf
OtbMV/GcZXIXvTWWahhUq6/BAVr8Hogi7BpHcgtV0rv7lWh2BJyzMmf2SblJrHHkQCFqlWRM/xU0
sLgDUFIdND66OQx1E6fpzUwsLPg/8xZs+IUo2JgSlbgqsWeQTtuSen57rS1n+NewCIaPfisL8CEw
yEW6lEngxJaOoxJQRoqFPQGorYCIeo1Vg8cGlsA3nuQJBq3/Jzxcqg2DCGAP/2XRfRT62LR0F/Be
uGrNJ3a2MRhdGw1uEWxt+GyLSdpGosyo9tX63n/1sJp2gWf0o2AIg33xAW0Sb1pBw1AF02S+QcR7
9Kus03rqlckxILoH2QB2pYGqQRaXaIiD4uK0ZbMarha3XLFI18x1MqtP9gnFKTJqQ0O3ZlNP2du5
BSF2nfk4Pu/nahnDZDGkrJBjiI9xSipklSCqnyBQtviwIQt4XvoI+/2bgqNrrGlclS1fnKd9wDbV
GLmzwAKST4W7CC+A5TZxuBkK2esbkeiGNpCBRsU9QZIT+iiNYOgN/Fyc79/t49joCYIaOHd3bvCR
2kBG+7PXNFCobxD83qJuXSQL4nl5V+LjuzZtpv6SXpwqmWMxdfW7/C3K4rdmHqgOg8BrpdecfknU
bggIeRMDb3djcBzzNSDUl0YBvX5LoR3nVbO8h9yCZ9gggLa5TK9APbBagWgTXw3W4zacrAqx5OYs
pCjGyLFwRKDd58nLu19Ny490+Lku9cZoQeAxLZyd8dVvDHWp4o2H5G4Z3HQRcEeHbIuj/Xli8BUg
RmbE0kwEcwgMC8by73R+fJ6Dn2suVA8XfaZ55oG3jq1Dbs5RrK6VaX7luDtgJnMV976v+IjRY09/
vy7NiWiyG0i5bdV4RymZYx3f7jv1oeOO/W54W5mYFVtXJKta/uDlzWL5Ud+btmiuZCIJQ2R7XoTb
xymRWmf37HwNE9yk5RFUaH2fPt19HYfCr6w6Zdz9CCvzvUdJulaB1XWxQAGmc0M1jCfdiF8FUU4i
ApM9JXQ3QY8lD3z1XEXvyXFQ1JJjobqWa2EilPiJvgdmkSefv5lZSCmRkFAb3BeyeS2jsJ9v1M//
fqQaSLbJvGzseIOG2NJZcuvUKmMJNzpwYaFUigbaxSdP/OfuYQvZMN8Tu2YY57wWYBrmAcLnHr3U
CmllseMNwcxZPqAOioavQT1r24Boo5j/KeybcSwtn5ghqQwx64saN/DQo/pV4LRoswA96tiStdNy
QccWGSZq2MKv1umRBWdlN895tqQe19LbZojHJFCLieHzyy2MuNnDqSFueSMVsQW4XPWNkN43M6PV
foRLjxgOV0lz/bPRr7xhPjPRm80t1rF/y/hW/tChMJ8o+V8/mWnyVL/6uuV2D2/bbe3oNaZrrfPL
ilGmOouj/l+6TIatOluB1u2JNc13WtY8cA1u7+mNXxpKhBtqTTHV5EPamoPGSytsJex7c1jesAbI
kcJCESpdaug4ScmP5dqe69LZV5pM8mX07elRXLopPTQx9pTNmULPYBSVUbZBu29OJbCtNVt+bgf6
weAqsRYpOsNbn0jDHes8bEZBaXXe2ySz1J6pVEKvx+F9KP4iLWc8opPUu2lCY6WfFaRVWw6JHoQP
HOBHzHgDOITxX558IlC/AYE1lZnF2+VFO0C8+p/O/I5yLV3dY/3RciWY1OVnOulXFUVLo7O1jjUE
t4EOVH52+/eGiRwmS4ohmVPaI2LTt1x+yhrBQM3lE3+x8lTSWYjVfb9PF31MAaOWUaH9tibt6e8x
rgciTtBXhciJdZrIfSP0/FOEs+siU8YSmcP4bRPEpzXRp1S+EduUBFWzf/oB5ge15VWIkiRKGm9f
bcZHyLtL9J+8hI1Yu2SNFkwaImMyHRCBcF4zLNyj4jvgJ+BWhuCJNE4WCbyNZVR0M464VodUDU6O
+sUrrHw8ThdifA/8p+20G7jWcRrFHQ/1vt909lToPrTbimtGrSMCBV9uZYE/57xehoZFN8xUanrZ
WIvWFxzgwuc2FFKgz+qTS3vfQTtVlbYf778EwewCNahvdZeeRaklPzAE4bmMnEyAZnUO4YsAMVYn
nMnLwIpSWXEhsJdizxLTe4ONj/wYmZ7vBtPCx54XYRj843gAgLyZKqiBwbHYTj0+zCZCvAiGs1iH
5lbpku7VwBE5CwGgzOcC6OgUkciJT8ia4F+wkZ6Uqz54UQfjaoAPKX+E6Yiyf4VlCjHF0eS63EFb
c+2xY37hAJlqQwpbJa55AoUBkB2hmrYKFEoShqN4Ro1F4bcMw14xZi6ULemurV0WT/ppphzRXDXb
UGw2MFAgI2iCpC00kmcPSgUKmTVdTcjz7KaNn2ohu/aQCtYttytCl+E9h11VozyMz2205gaw/qkN
YclPKaBDrfwCMCU24BuySbvb8ulYK4ZPxgP1stMS2hcD0u/quJwJS6LADMv5zr3u2qGIUbwoJJ2Z
9zjTggkJuaubYyKWykjuGZ3qGIy/1p/91Qf9/Kx67mYKjTbGidri8qTDaDnI8A+74RXKjXxjVS42
pekh14Fzk/r2iC4wl0vhsNMqd6yWbhocqhfiV8CaJUVfBjqnK9VIv8fIyVw/qKgHx3qm7ny1pHW2
R0w72Lagj2MCwMwIw7hzkMx/0d84BDU7CtuVJs8yztbUpe6HKZ3A1K7Tif5Tc6Bbq5MCJHl83ze1
RfCixMKGAJk4tJwzZmoFTDQqj4gOBnQVIo5iifNkSamnsK6/JULrrGHNKxo8/4Io7ghzhS+AZeSW
YzEmco501baMtujsgZq9RI/evILbWgFeb+OzIE6nBV32tvtK77aRS1gsy3RjuNcoYFlyB9xebiC9
av0tu8Ozr+8JepH5lbbTyPaCgg40dt7U1PTuKE5m/79tbcZh/tarQxr4SKrNYkCClzM1zvt/Qxav
H1tuWAq0a71/nOcLvKuGBnneH/r6iVwlWuClUla/5JUognvwGtff6gcwA+f04CrP8UchMv8DFRrJ
1p+hGFir015YcurhaEbHeNg9XcMWIWQMGdh8nYfuBCaoNtE8dg5c4iiwNmAVkY/FXeMCxV3LQCPo
YpKhjg6fMgBhHFNWTvh9k6trtnON4PA5TJfRPTIE44QXihCSWR38yTzLvgTSqJzmEtoDktVermh5
FfvEpF+kbIRYn/id/gjtmQAaHkjiBlmk8o+GsA7yewfDaJaQdI0g2CaJYT6yJT10xyDgevHxeE+Y
7oS/tP17QqidgEP5M+6KQ9dvWDg6Myg3EKBhmIZl0GlwpKbD0TxyNict2fVT4cEILKD5DBBblvsi
hXh8Wc8Ig4i7PvSG4kGS728E0a2graPmqL6oiyseNchh0qlK/a5NPEM73YaK9CAEg3eqGJZy/SSc
0uJn6cWwTB97/Y4XzrW0/bot+hbcI+Is0QJJTFZoBTPe6iwbx6lYuFtj2esORfFtCfdSereclhu4
VV5jg+CFgoM3N1I/p8V1ZcC5Yb5tZDbOKrYcu8KMHIHypBFy0P76i9GO4FSdaxBEIYbrCylARfjT
tUb4oqQ1d3wG0o7Ty80Jz/SM5T8bL/HJlwSzsdBaePZMaiqZFBk7wsvgbaXcg4PUYcUmB3ie2vwC
yJpPwvQgz116ovVwruItR54pBrRNjF+kktnrn2rBO8f4SptmOgKFzgEc6sU8SQt115gyKRWbYeY8
RQegQuyAoa+j/3Yp9J/xLkU0i4t6q1EHDsn2s4wkX9cNSW43e6hE1AUh/x72GYZgzWk/jNijKhi5
VcXpJGtNLpwRv8e6OotP7tkhwRFupQXXZ0KQcNOvLSiyZoUHN7Sewh/cQk/oMWDFQozMMZ6j3IB5
2kUNZxj2QsrtVKVXERcXN0gRlCJh920h59a/YlfUE80CpxRdiE5VCcs+zydaehhGQmvEu5LIEJIW
wFbe/LGIDD0bNtbzJepRY7NCn+NNICOkBcHfQfCAMRMskKIj0eLJ+zB82xIc9Gt/i4OjucohupfX
KL+hBWo6mJQ2XwhQnHPgD82HV+gpecvzfU0JpKSzOz3wQq8gNtE1DVsEcb9umIlRa+FSTZ+E6Bq/
5eLLDWVbHM5wdzuKHOBPaSw0nLDiNv/oHKfkeeiLXoEWv48wUbIucQQujtwBEkvi1aIK6R8IQKDB
WV+6RMtCEjtdzRue2Ml/JuP9dfqtGJs3CByi8VNvBD+ro259Z8BqE1SzKTmtX887k1D3sjcQWGqL
n80+Y1PUJkKhELDHyaRIvRY291lNF9KEQXLNyScqrZTaiBo1+Gs0NjrF8Hr1mQM0nI/ojiKH3nwr
lc/Aa1wSK0qkcpCgmeMLl1gANMjiYqnphpEXqhEkE9sliGQoQa8alJU8VChpN+opJIOvUI1oa0AP
7xFg2q22ziDFBMzcJ8rGd7HKOIA6Ng4kbKtDwR+wIYNYSyOjVxIyPhRGncisLJ6scFX6PmDAgptp
rof5XaZF6nC4J7iRItRdxNEJv/9iORSjYUe+XGlJFbqH75HLBnsfILevT3Uz0gGL1vqadjHKIx/s
61uPkxSLzIdC6O4z6hQRQB/CwS03bnWgyEpTq9GHaYJ1kaVKnBjczKg0+lSxCmixXOyiiac08JbV
zt8vuLO4MOV7vaegJwakUR6Bqm3t9jH5qMebeZK7IBWW9+4Z9aMF56Aoc3wEoCy4iyYvu0s4/lil
1bn+VmiDyJnChWp0fcQUH5oV2VeIZc2rM2Z0OzMe24gQKW40zIPpTt8qDI8vrJSLLZgOj4VJ9T02
138nMGaUHGdVnsmzjC1mtS0a+IJKeUucokWhvcV6lZIZflyNlRyHzkcQx+Y0YlY0QBSH8NG+jfs9
JRsMT5ghQrhG4lnoMtgRq9W8wu84TUFRKz7n2vZBP4+JY6Yh/GGk2XkQ/dE1ENdVwHhVaIMOecWP
H0g3BiCbGDj8g1vfsT8NIBV6RucxBzx5YU74qE1FTJPdU63wE+GGUwt7LYGQC4Vrr0VPy8EJvBj5
+kHL9H30mQV6MxM8BuxxJ4Mb2IfjVMmbATofLAhZV8AhGyV9Np7bwbNv0Xmepv8LjdeqefnxZ1yF
f5FrYqnLTI/vu12MQ3aAq3s12AiAT86eynLAKl6Oyo6yJWqc3sCUagu3yiVXnw7b757gichfCyGu
5fNn21DZRJaznzg4tNLJCzhKn/F6BfKZqYFe3MLHdZK9V6yfGkJInNMSafv2c5hkhHcSN/jFYBR8
8MWa3PMItH46C4nGrDXkOxeTaMHIWYCKhnhJ+r6HR/1Du3KXz6XxL8wYPVfrqEVdg/A8pwzdwKjv
CIO/x06YeaKj73oyD5SL3rheRbrPSLU38/DUeBm/IHQaXSMcspW25DarlfqChFaRrh4qdV595Jf/
bFto4ndm6/jtFxTXcd5jSnlekLQr5AzVpOTRkRCHYTbdFUAzMatyRJNp05eqB2vh7VB3phcJhJoY
V/GzB80vfCO5fP6GR/x0IPd8AFNE1oZqgRF2HvVJv7lnh0Pja/x+CFmCcCm1N7rzlINt2GJlxS+3
+5YUMUklP9AFZmBVV8DV+8lMtGASpJvKfEvx4m53gNT30UdGTDCVz8Toc8yj7fbK4h2f/MTt53lX
/hHMfd9nv8DEiUYhHYoSACCJxbOaSpTrFq/QCagC9TnrJTchTuV9h5qsMS2yezi5r7ZS1lDd8k/M
fLmYTcbd95XLtzUzO7k8xSRJ0IhgWsKZuVeZnfkB3v+aidNnsMK5+w6JtbZYVDN4n9QgcisfFuGE
uW9dUCXQwUz02jV/7qqNV2o1X1nODTTZE6my9lzaBmYnrHpCOdmMpX4ZkxDV5beUONo6elku3uqg
Si2y4CcyQRnmgbaw0ubUAmOTT2cUdufZsnj49+zUADf1wclvImnZ3K9mZupftT5baDvOyZbm5keg
hJjjOCyT6w2s+ZglWj43kkFuLys00hbsqXfcSxCYzt40xYQiaxKHTQExjcz4cZ+JMVyNRothnVOn
WNyqDQGJbj5X9ZZmYj4vWw7ZKh4ezGEt3OfG9A5JZG0mOiiJcDIPoVLD80hKl3Wvpnd34Ay3N+Ox
3ZOdb8q4Xh1n21daA+fooeDaRxFt+RFvJD6LvpvCYxhD9sD66MNYBW3seTnY5nU+UK0dBmAFfbso
QT2hLpBu1Io4RqIoA8/0MLdmssvgTL4OCQerSmUHtK1pzbWUybwuUrstlzedrxyzKy3t3Ri7QKkj
pquaVlcXinCFFoqt7V7oCAJNXfTO3k4HgQr8TJSbLOvFwgjT3GQ5L6KGTbQ4L/XpoDTmBSjLBmZQ
diW4JB2rw1i7vKbrYO9GkU4iAAYf5+SfZejyP1EytNqdF1sa6Hb77xVmb8g0/9ante0HHyQnM48T
+T1ig1v0v72K7TFCt7obwUGTtiNzN6Pyhq6B1f0wKHLAR0F8evTvLJ0Z21GpxHAUL390z2bq7Pnu
xSpKFGh/prQuNOLEGs/5IrGZXMxTnRNe3bAK3fv6iEJu0BwlsgWb3RceRtABvffAXCwouZQzXufU
PyBN0uSMYQo41aS0B5SdAp4gDPd1a3Wxl17wta+Kx/TfLTZiguhE0B1PN/1hMfb6PnDEtDTEhgsn
k96l+1Hz+tDdgGxgSQ6zt41A5DgS5nKoJ607oexD2+aXoql8i6cNAJduBgGW9OOPFjcM0JlcaUG1
sScNQnfu66deTqIjkyj9dQ5Hf2HdZuz+uVkTQaxLvLQP6db8bGZc3MErAln7Wy4GMx0SeR3G4tLL
FFzZ4AFdgb3va2a3zCnA5FOolhfFg3IRy/RdgxqWC/KDrpNn+SvzrRqCRQaBRtvcKxpoJj7+wqVo
OCoATkDf1sTu3SLwD8pwokvPNxMhjqVaeLIgEONrW46NmVnv4IZxS9riYOtRDha5dlefzACABO3N
gb+qj4W5fFZteUgouLELq0jy5O+QlKiOVr7hs/VY/w3MkpimWuRNW6SfIH6r7CJWD7G/KK/4eXh3
OvpwiPnfOBaC+s0bhVN50s8X+jjXboHf3DWdx2/iDHa9KAgPHZAiYPA/SCHZTWO1K4TNvy0uic46
EtqmJ2yYYKAJOllZ6ukQDJ48NP3+pDDRM6PnK9HqEbDKCQzYQWuR26zK0D5W7AWaWbWyizruf8dF
yvyakwIaAGvO0X4tPsFHZk006B2azzaCykYLjcdQcL6FfSdNy95O1cI9JAOG2mpIrid6zBIuubp+
bqctMIS1WfzeUgqMnUbV0QB3/9x+n/PZujQHyn6PGDEekWda0M37Gpx0ONnoYIRfZTvP5w9lMUUA
p9NgdgWTKEr8+5Woj+NgRL965wx7RICjOXlUDYniSP09J6YcdxdIBcUjNkN4+bx+6JfcOGxsW9uw
wFLs3yMAIOUOCp5WzdffHgSgrKtA20WZ+aujcC1VIyAtPIyIulXV2a4Tjm40CS0tFC8ZaGb/Zmva
fMWUaJXY4vISEVsj3DcKJqxKSnN6nHuzARI190bzw94aNNHlj7eBXykeL4iveafU8OLgvDdT94eC
4HPzkBJCi+ji49/OWA8fiD2Bb69u0qB5R1LMuWE9a64v4OtPg87TUS2TthF4L4E01vRyvEKtg463
Q370Eqqe4D9zBxrOC+MVtBMXhsCphl7xp8JwpOp9i1xz4eGajhIi5XKUSsTvOcr4dv866XBc7hxk
CHw/XyvblKa+MXqejV3kVh5uQkVIhvhaqhlaRww68tKiqQUYq5UXL5VlNvBq5Pu7j1nGsH3tg/MT
eFvsWcR0T2aZMApgf6539F90OUTbH2OzB9WqHWdicZ35wCA+7UBo/y1WSP0g2/MEp0WeCupN2ZGp
33Qd6byXd0Xjdy13Ow4rpzj2C+GAmt9/5GymXwT5cRYSE7vECZLccqbGrMBgOybmHvYKTqgsIVLC
nt2IfDPdVx3fpcaf3s2a3/EbEj85841QvjSbaDJ3acH5hXUWLt/WiXbicRZr8/Xpi4+jsEIWrlIm
eKvRVhQCDCQFBOZXnoghQNayffMy3zRCxu13NwL2PozCgHWoVnT7pO2QOkAu/0vGE0zuq5vsVect
dhPBsFV5bS+Y6tvVrUxrLJLpW8ldjwkWG+7NjwpljeYKNMeiHpVzabgG4s1gr/gyzumkmJMBbqda
h52OVaNSeQKVsIFEcHieyeyuh/SLbzOg+/3C/RcJHMgBSYSR+cctfIBY/tcxPLlkcqNRcyN7fZPk
rtchQF8YPtLhspCyMOQRrNrC+F9AicrO8Pnsy5bZgDu0FyLGSxaxQKabRSdkhqv/FY7XIJaPNQos
WsKaeJM5WuMZRu9srTLRMRgM6Rxn9bSF4yxIgZOOD0/8W0kTPkQSwwPS2Np7jp/SLyDWxoBFamGR
6LpstAEZVpqiv/4P1+Pf+FfpkpYoMcx5P3dqFScTS8KbaHbOzl6+zN8uZMaYRTP/IfB8geX3CjnI
4XUHKcCgykDBrAsw0O2SeR0wPbUfCL77cii7uyOgWtz8er3ZzjKzFoz/KKz0pVv8JW/yqSRO9HeR
hgSMCFS4IgU/ilBFwhTqd3S22goodRwv79rAvx29eQRpdRduJdHQHtH2moLUuCu3Qz8aQ5Ab1tGo
/0AK5/rh8sxcnJb8zTOoG+WsRTYUGUm6LmLzFrCciXYXD86BWMzWvZrMv5ukIj/PyqmY76lYKC5X
JIdpCAt5qyDpd3BJ/nZPq3mpMvwiC/XdibAsD4V7yQTiJD8fAo+XfrGJai6tzUs77sF+W86UIL8y
TEfaiUk82KCiJEzORLQDhAXNIsppB3XgTgCY14lI0FMXCcDPqJ2LEARjG6F9xT2WYmMSuhXXxlZx
DRcYMcAEuNsC3F4uagMzXqZf9kyZjhX0Z4Y7qRrOk5OQH6PYaUKEut5vPWOOk6BLDfnQXJN38l5e
kMksRKNHEe5fmsf3AV3Vt3bXboUn+3oKZTmrIlA41Qc0QvzMyh1aa+Cr7JRGKz+ZAeczHsEzCsny
zxh7U2mYS9GDtvzEin96YuwbV74BpRM0f6XNgMEjTObNQbEjqFbSHEUSf4SFGj6iMUlSwSJPjdQB
7lpPnan7hHSuE/71HcHjr5Vmg8g7G5ElsqE8LxmD7tnbtBTl+QDr3dci9efG+qKICbxNinE54RxU
EUvc9a/NK8jKbavXL0/hpWlW0yWFJwWPWeoyYGg3RJdxYt0jzKjFnWn4/YhSlE863whCDGcVaxtV
iC9Sq4ENJC2/PjGDDDq5tNHFKpv+1ld+e9wzDOzmba3QnsmMBZJVlFLu6ZGxlk4+pH3Kdw0OtqD+
qItuDzkgkarl/aL6upy7gbbA4/zZE42mGjZcjQ4+fFrgcqZCU+7J+Joz3TJhZ2VphT6ULNHA519+
v2vE7UjDYgIlCbShJl1FcNpLHl4xKtSxFduYXbuPGUrek+hPYKVlAbP0FICehU3ET3B8K4R64AkE
vUfnlP1IvdL4iIy93ocipzRthvA7+QxrQ/ci7NZ6XIyK8MnbJ1sro9b2LE4dB6O5phLcNDzQxG3d
DYCWTWmBtkO8Z39XGCkhWLDvWaKzCBnLcOZyPAGW/H/xLNGoMMr6/mRm7zQWcxS3T75Q+GbWkE5V
MzAdgmIl/dqzcgasV65RVKa4cQXsZ9K01hZRgao1GX5jXAnoimpgiCjU3YQMgzbSDi/sMhzU6z1c
7cuQO4du/++qTcHmd49pkN3iqkqWV5bMJdDxK9bcu+3yNsHd9Nk1XlwP1BtPPmBLx0omoSmqnq92
HzKZx6Yp5DTXh8aNdSsWTd/ztVl3PsHtJHmrOy855/W+JBU0fBLRgqBUWTQl0NEBZbNIskubVuVb
4LeenkqB/pGUCeZlcL/YkDAXKBWsZA2RzNfNheuePcaS8SJa+xc1JZ0sVv9DlFiSmv0WkK4uzinf
as5xjUXFFuwV63Dx8fYa2uFyWqMmAE653LlLQQL0l8bRhDOdK0l1icQ7Ow4aEvsp5V82TKh9CECR
paMrhEJUCat4hMdWJ3dxr+jzqi+jgsvGf7jgAUgNtQ2kbRWT95LQZzLDRxfqGQrCjPqSQly3L20O
AJP9YJ+IfrQKWbDG8TUE2Lcm0rsFiaGxu0KHSl8yWFIccmfgRwGnFpf+CT5F9CTVY0RNitrES1Rk
5w8AL31rFGIkhq46/f68xoM5MTcpQoUzJXjp9fsilQQHMvOvpu8XGoLjWo0Q+6ez42Wo4ZepsTtv
8+3bKF4LisC5pfoC6TfHJhqgN4Q4vyYseEjtgclGxFqOdKjI+YbwCX/t0eSVsQtXp698XF7Rnyae
sNC2YB4zSd4EwVe1uQh0t4V+InplV+vIdTM8zBFqzxQF8lOVkXl6U+6A1HJh70W2i7no/+Yv0Sgr
dnnBCS0eKDSuzEE/YjtUCWt7EiQ2UVOhYdhgS/1VP4IoW5VNEZ/FurKmm/3wHry7Mfe/lL7KyNld
X8PLYp+44Y+gzSzBGoAp89tj2Hp3+2BAfCafoEJxOCJZo6S3jfyUVNhirTJ/5+lCGB3td+VD5Pm2
AoNtkY5fUK5q2KmD8DZWkoxE7cBJGqKMw7pHHdJKXAdr0dYUcnK6iu/j7oOnsx8YWZCtzy1qDGSf
f6zJ61T8TpHu6eWN7+rYD+mGmyzzzIzz/sUTY6wvoil9O+vzbsMbdDAh11Khl9N+ul/cZItBL132
RUxYAbT0+OjTijaZC5Ce4uIWkkHZH8VySYkpvDJodbOj7THSM5yAGySOCckkN9DkhupWb/V3oLHB
kuafRdqMnNSGWXxJK8aX9bTIRDYGjSCJA3bYJ299ni41K5sMy0ks9ziQ3AfYJXvyKbZ8pihfAN4Z
QMIFyCnVSntFPzDJGCDDGuRINpCQWdPLYW/0vJ/tt4y5ObxZCx+PAKT59oJJMKBXA3fRHqPwVj6e
5wNRT061x6MRFOS/vXY3low0iEYo3P93muckKIPeQdksmSkeSLhMIJ3TZm9YbEOU3vlaoTCMiUEM
mhmgiWi4oyPnmYgOIy4Zd+ipvk4xHiWknxSwa3Zl91KODvS81DWtCL8SSEFJNE6oYLR1d07Cpyj7
hEgqyhiHv48aWlQ8cpjeRT0y3acp+Tdmeug9wHQ4iHpDiUhY8fi4nwru2DHV0wVzMi1LT1AxWwLa
dx9gIOKvAVZzeZl8WGV4JtUCnGKnfICQHqepQu6b/xfVj1bcfAW32YFhSPDdtBs6mSlz2uVCJ/rS
nZTCWtzSf19c5E5v8cYwcBuPGPzRqKmRV+MothGdpaPU22+8OIleyc4F8xHM+uc2114rIqlqS++n
lYq9ukHjPFlfN9MLxf6iSRHIw2Sqw96fNPjujiOtalOPUb/cjtXmqWRPosRWbNgFF7qeZaXCMY6R
80075TEOzPhiyFwTLEiovLNI37MsWU0k0AKYO6CxEtC8h0d5+Uw+FkQQXT3lhW3E/J1+qHe0L2HY
o8gpLSUUuFL93hAg8bAcaxhnqMAlOaRqkH5BbAMJVVLmTyiyi5kRXFPBulnuhLBlkHlh+bOTVgA5
ASov5gaGsA/nk2KHcZYrmcpQGRbdyZWUytShaBxBmxPsIseTE7khhDvPy4hsHzbZVxz5oIgwemKk
ptSIXGRVj6G+Y1xSWZtZibzpMJON9iu6fe/7R5fBcz/zJbmH5+z0PE1ARso8Od3E6vdFFn/EGYNv
X+dlrTdO+/pBuyx3YxRLfk1NeqTaI4UOwyk6RsA7cUT1ul5zLQhsYBVIUWHx9XkFp5iRVGhgLnUl
aoYZR8CJCjPIrA3HwVGQnZWsnhUTeovJNT8VdLwVUPnEcVWCjHAUphPXrp/NZD+xuAyvY8z3u85H
d8T/J7y/51ACisKrd5OlpAPlmGaOsWD2RXjSbPcSYAA5iFm0aoIwflzBry9ZNpI86AvhiIHD4gOu
TZ58yBYY1sh7lPZ3YIPuDXbLVAw1rQoWTxqloGAsinjqXKpi9hK1v3uiakc1l7Y5GuYN3+r7QlTb
Mu2zASpt2CA6JfX3sSo48PTdGpLF+qZszC/D4vHeZRI/qUTy8jFRyFABAqnqLMpBTkv9iUGu0Rbc
FXWhS4KDc5ar8m2cQL2hECF0Amf5O4RW8k9rmoDrmm86Wzcs5QcHcJi7rruyvl4WpPtORAAJhCAn
sf6kVsoHRhaBXbcEoUbhNhwsCEYjRW3OzEePd9i44MDu5E8P9CCaz0O1Laqz9Q5L7AD+rKWTyyQm
MsZzKZwWhLte9dvUdt1bSUhUjMv7vzikaGdPJ0hZB5248PLSBf37etD5g1FIp4SOLjFJZLMWsf4K
/WgrEk6/pGOtiHPlSqyCT9i6D3RFIS60GnD+V/FQuF3AWbUPkG8e3lkaokKV2H69qvH5CVIEyMpI
1UkF/uEyVmYHFHWU6ELWhKmcaRDPuS3JRKoXGlLNuwAODq9NoQ59hI72gKoAf7r2PKtaK032hoHA
aye72QSERcNekDqDRkqhkAJxCxHEkeiowkWWwTpVD+w0cTxWBCuv+rSM4GDsylDFwtuyYyXE6Ab+
wWCsTovdQv6Qd8K7NSvNItXLZ3FbTZXjSKYPqklepJAY02sTff+YTnjqjwHAmn/RNJ85L76bUFDk
nnb9+FUGIGaaJNTCdWX3MxhrnxqO5rUq3ncYrQ6YwFvSax0FK3VBd2Eer/SsZfh/q9l5RP1X5GaA
FVae/YpD1VOJSwgebQS4RSurjZrbKVADhN++6hisVKpb/F2TJkalf0B5/BpNZYazTACF/5X7dd1i
dLbAgZ772GKuMC0N6IVjYMUReYruE96BpiZhKNYdyNcflqLwRvz6yqgDlQJ0s1NhZdEqRN7Tg9sw
GzBOigyf34o2dKsl3DrrwJ68dHF2HzGUS6D0b8E/TqAryLiQxy2kA6FSVAmGX4wotjC2WiXTrQCP
SAUFdxGhXGroxecLZc3bv/DhfBP3kC9yUZTPnvvoDaEd9KrTWaosnkCt5BLDuw/qe9n2DH0n9yJy
VpjPtoeSK+8DNvBVhYynZ0BgU6ZRhfDQKbDZSLbSONUtuisxFBTm3uJnljPrQM7CMgRAP3VqmVcu
SU+d/Y8hxtT6u75JO4HGWLICJMBEeUoxExZ8AnEtGx/cRKfaFOejEB+fVSqWs41fXXcHcHPIXD94
klBAsb8K34CvrnrQFIgzSi9rGhJVLjyffF29tK4PyQfasYEiNS5pxKoijpd5XveGovMIhnrRr93C
E1R6N6aIbP+++Ryjf4n7PS3Fi+tVq94Q8gHwN5IzeeEhwNkx68TF/nUpd3erXDJE5uptxs/5Ued0
2r/cTjeIkhE474pk3UHeA2L9yGX5HPQuDMqPuMJo9ilAPkIGQuigw+ErWN3Tdt4QVBiktb2cQbTL
oSyI7c3Su4qrYRnduQ4OM/Uurc58owOMkR96vZiZMaGED5xC4EWn0IcdXxYwMiSR6VlsQh5dC3g4
w/Cf6RhtTOtOv1XWCTcAHwrxQP4vk9wbxAl85ufKOkhFBPEPpjGlP+458FcRD3hcqJ9qMi0Wy5WA
YfWONaamEuW7k5YQcl3AY6VcESnLhTWZ3iV5HO707GFVCSswzlAfoeOgCvMzq4RaNpJU+EQtp4/9
0FlLNvkh3jk8i5Wtf8aV02YNDoYgQWEffwgN3m2PdTqHpqLf555SzoqSlmibqvE27+aMpOcPLNyB
SpJhfhKpjNs5xyA79VPuZQPgj1lxbO1TRdxYMX5TEkh4aqiwCguldEqdPD0+6IQSD4ShMK20ccsj
Jd22ofzC7wOhcl8cSKJmKd4JGtEbOF2nBMopVx6kb8PWK/tWlB6uhVsilwcamGf8qhrea6Sk5hXS
WkdIJX92vRQRF1yZlW2oSHmJeUwed+aPI3VGSgG6UBxCc/bunW5ENmKaS7Tfc3bWPUq0uU05lPG7
2UZSwnbnxpM/jAZlTMiBT9NWTYCW+ppUADRg3v0TKrIyFMi1H4Ct/U67A//pebAtM1irwtVApgdZ
eRDKG6NnvHVB89WfZeMk7MWFWSoM615RJLwYq4hUmXnAIVnuDnHl++zkkDg/Adr+LZOyWU9TwSGn
57iuUX3zpv2hzrrcuc0Yaqh/n8meUUNlgk/hHFMA7uq+Ijuhx2cjvOWcBLwF/4YOVruSH9bJ7jDk
fOjpyyCFvhPgV1qMtdGV7mRFpVIyYISrebplk4RX9Bj5g4jTAB2vHnpu8tLdLhRvtcFlTThS8TZV
JZJKw0eMrBXqnaO0tdGoDEAUiNuONwk2fFj43mGRKzB6l8u5VHVmDEYTeMYeGtaT0AZ1+rwWhvHn
xeb8hLIrD/Ub/TuKI4E9KYWa2lF9ioYpO4eLQ2YTka+44hTBYtHkw3+ym3W0dnPGlpQo9Pq/lXXy
NSeg4Mf8G3MtxiMU3uw+dMyRIyfgcCvWBSa+/RlO0sMPj++mnc8Rp+8cfcHEQgY8KVWLwVZEPmU0
qP5jEOSd8zmq+a6e1jGMEsmvMhFPm+GvQ2wELNnKAFATandVugDBVATHOM0RGjOxnblZJIe/22fE
8K0ptHAfXche8rfuL0MEtHMBF/oKeKb573RBJqMrztKBidhw1YZPpT25yhf1LHJdES2mA/kBEmtt
By/vR48VlL7SoQqKy1yDiyR+5yPR9BplL3StFZh8h2mP1IWcFuhAi4OeHwBKuRScb8/Kd3FGUjUC
buZgGGzdgkzYCSxJGimnQTYh9WWDc/RYhgVph4wjCiwS4DoOXr2XQ0zZouNBZIeoiNpcXBYG6ElJ
x7EkfjiL4K2bQ1JE42aiAOI/2mg3DNGAGI0sqFCvtMlquAt/buvFOC752yNDOZEwGvXEXqwlJY7o
wwwXGHqAFmoASS3Y40GxzG734qPGIiq7qFnFcMkRlWc2FKzk7o3pMj2OKGml47GF0e3XmO+cpx77
RkQAcqmtH3lCwHiqSUYJ3rJ6ZfEGnPiHkUJV+lSHSCtQT+d9woWM35Wff6bgsKz0M6anzQ5VE0Sg
B/WpCFIQOlv8dTU6FO8VPcCFECm7zXF5/K8DCybPMSbRppKduL+2gYiUOOKotfeBxyynUJT6UiiE
LQW+TnZ/MpJhFbZThVuxur5wPjsh6XvfGY2PCT88hqXvN12h2LV46ORuoW6kWHeAAY7cT9Ekv7k+
j0ZY2hMqXFJufL9P97ZL2cwGnwtFoPiuG1KUGHFgNemXAm6/F4RGaWfHiVg4mKZY0COLVIAnb0+r
jgac9pgJJ42N9Pq2uFqkE+wzd1PVcpCpLXaimMngMpctFLj12DaPnxkui+5t3yrak9YcVkIH0Xap
go+2tXztgSMUeXi6kkkPioxfLKDfvhWj3VpLqMgn+nuuTXy46uVwAfYOjfQzgmauKm8AieQRxj13
21lFQZX27CBupc6V0U/G6fCydj+hWnIWIdoTE6gH78IYgjb+CtSMBNRpPCkWrWdwJYx/XYhg8Wxk
Nll095RmT9EmQY3ZC1xMD9imwNd43tK+9HTDJOKElbqhvvKZYmxoojZ2HWSUQCp97ZEw/ccSYu/+
zyzZbQ8FnEthdI1AN5UDgLT9IvLGmEgBOxDMux7jqRU04uhHbo7i7a5K9tsPSqLvxfCPuVRJGK98
baKKrlQyHdghYsvwvmClBJbdXfrgJdhncyCuVqLCBTxbdpy+MjgorJkl7Rf3+I0bVT0/LMWr+13/
gPskJu7gq3d7PCyrhH3yptgvAvq8msHnNEvZW6NBEWVx+0w2+tv+m5zgVi6jPQjxO5ufSeTYAvNb
8rrBODqP4kQL9rgZbYtYDKQh3wEb75s21IGKz4CjkMYAAEigqPZsSJ5rTDIpx2WigibYkwZXTyzm
t35w1gKCshwLmU8yzD6ni8e6/pxoTIhwN34gNb9IFV4TrlCCcwd2rtGnnFAE6EgeGbPuUmd2ufSI
WlJUt+RGZktM0cSAyNjTrnEvMkB25Ur8EtQmKp0nYcc9PfyeRzMI+8iTvSo/ChjBgNfmyJUU+mk7
2XWQBno4rw1zJBxO7JyFbS54axnlIIs1NRLCNZIIquyF7+S0lLxvdxVD8bwY7wfL0ewXeHcEFG6w
ttCXxp2ZEisrlUptutHSAuQVsUWhc9+NRXkPOiHgDwinQuxx0BN46Vfr0wlKI40EzLGjl5i0OyoF
Q9y0E2bdlhranVXqgQ1F3EsixdjSLfVIDSKnchcX8FChyaoHYxu/S5Gju96DM9VVqOr0aSuaabt/
dA8fT5XucTlhUJ904WuntArlp7+H8Pg6a1LbXayUm+ivwygaZXhsq0BW9o+7xZ2DrBkD+EbbE5fD
iRS8TspmahRkRvg6ugn8t4Nr2lvIER/MpU2fmvXS7Pw8xPllWIkGppreGKP7W89t+VfFfo+VXfa8
64H8QuPSRuZQjY1vQ92tEyi4A7XvjlII8ngMfrSxadbZpfOs6se/XJsDwSplO4bIH7ASwjxM6ivs
+BMIHX93SVN8M4ZH8oLPCn0jVz2xjOcM/qs8g8NbhgoUwV5Y3iq7fiUcUhA112RDL+H2c1uJ1+if
LRcGVh2qomAaJSvkgBzT5YJJpNONR4s7kGcOlrSpT+vlKEoAVaZQn+epa3M/weCh8qWIAjwNCZxy
y124yr3F6EmGjz908fSoEXEAlqhT54tQySzNtsWzSQ3juZDtVuNB/qN1CMhIvtak0X5ezjSaJC1M
9AQKIG1gkHHmGzDCjst0qGzchNi6/n7QW3sQFHeoo3O69Y0dRgTxTVA9lzVYtE9MRgm3cgdQtfI7
OSHyXvHFOeJLCfkt33O2VjMCO0KS6XdeExDnJMi6LdaGbDdy+tfCwFT5mIv/li9cJts6mO60o3Nj
t2yzHLyx4GUIREGdY2RUCKeD/EMgK6WVSDwa8CHPCTVnvXvjEMbQ4dbbHrYUqhlNaOFMs/pL0GJL
ycyMr+P/o7JHDNCyEhP6u3VLUrAVrDx35eakphhtLzAe6Xx0d+a7v20h06pm1qPLajYQIEoXpqcX
2BFi4a9Q7LX2Nh/XxBxa/N3eLk3rpt1syzwts+de8/kB00oxD4Xq97KelZabzip7PwAMRir1+eZo
ehAuL2cl1hZk7iIxeVPm+jSOyhUNr65c9zocv1OUSNzK4IwJVXp+rMF7AWePu0EeQCI4kiWzggb6
EAG5IKBVmpFa0zhd3qftXoE/VL37u/c3ve0cA0BxDqzpmllLDdge87oPp7mWFNIP5X9Lp00zwaNH
aiZaO0ItmOg+tD41Lgb5Knd6eL9o1cuzdfgHE/N8FB86YFrwmD6zCef+Xaxs63L26DVHKcRiF/Xo
uxj5xWItXbWvlrojQMCCd/YC0NpqZ4zRd+sqHJW2wnE42ozc3qo7K7CHULSTmRB6NE/4VR7APjLp
iU+YS3Y88eakFnJB/bPPZjKB4c0RdMv0RQML3+INMRJ6Wddp1uG27knQYwnXauOQmf/+JEIlY7I7
UF7l6LxcWklmVsLYKrSS5n+wQ3pcW/ORG9Y4NQmra1XIaEFkh+DEN2354gcnIn5sBINC1AyDG4jl
2dfZhzsDinzX0Jy0vA+OozPxtO3CzbB3bu5C/28UgdjMHPNmlhHBM4m9/28dSnoUL4m9jpZFW2fL
B1aw4S4jxE+unp2zGyjiYwEsSZI8/0BoGEmlvhH8buFGjhZi/IDMn0+SoNu3uTCmYiuIMCiTfUBL
D+nW4z19QpwgkT5hRhJzAyaO+cynR5N8WdbdaM2Lw8pg/6xIYB8cEugGJSeXxHqgiuO31VYN5B2n
D8gCbbCdjOwKSW+InCthjJaPRw0DpPNrO+jRg4Ltv0bTjtjYCx0k/QmoTl8NtrZJkue8QMfT1jhF
fuMTwEBBkaK19fJKRzcrojMKm5Ya1PhylvbHS93Yl56A+jAF7bmFEg/m7lXMjoUL+M2kDO3quDdD
iuSKYZvaHa+YRyesdbK5cfeaRMo9/CoZQcqYxLPkurIMf/49ETpbh/CN59naoFjGIsl4Ns06YEPR
XFbLS8rEdxb4+qO9Q3mY1613dp2+rpXqgY5fpJU/KEuSM6Q8MmT2Zh9i1VAelF0j4x0V1y5bGrXL
y9BFtZ2MwNe/IIZ1WP3acKXhjtFWQE0bVimixF8moHco36zUDaSqw+N+3Q8pgFOOT46aIK2V4XD3
aXrqtZsGEj5Yzxmfb3iB6yXAFO0JJsb2V3b/NHfyQprWp9x8HsImIhlph1Wo4qmS2/VLw2Vv4uO4
DpzqkQBGxNF+djMNfXDUsNCDPcLKY5J7XvpulDyM0IsyuUuKhnY+tiHClE7Wnpa3nM4ExStEOHwU
YOyzgDotQw2myYNv1fCV89IMQee7EayEIrLMzCTT3C0RQ/7NaeMHnIH0gaFIQARJ9uum8GeW3mBl
SYjuj3YbMLozUMDDNPLadpRsicX4mUKfg6AXeo/O0ZA+fEWjGAS8VJmFeiXT0/GIfk31Plnj60J6
Dya8f52WtNvjji7+WcOIfk5T9QIO+JqpLHVcTP3sAt7QbF7aZNPo8jiL3pd23jG5yoRzB+pEeBNE
SXMPpRgrsNCWmU8bwX4BrMm467+mzaIr5yfQQ/MWrFPXz37cr5x2VSr6hAGQ1FmAEwwgM+LtkcMz
yLHXQPgS0ebFZTFB/XO36xsHGhDli+xZHUt/9qrCcKwlCQS23LVrj8piWjny6K8mJi5OoK3dV1ba
+SWFAkTlu3Om6eMGn0ZWPEZtgnmhD0UDLaUqMOwVGR2198Vd1wPCG2Wx/bY8Ej3/0MQdgvP2FY5E
vcLba+HB7IBYQb/G9lpm/s85Koes44boO3Wn7/kJb4NsemA2TfAOzQlH492Ts80ce9erfpMRWM+3
bCYoy1FM0qxuCbKq8hEfx4pV5zs3XNx52ghR+5zmnKpC+JGs0+lqSZ1LI6GMWuJyBAuAaGAJt42K
VJPrWcwKfvBRHWpQm9ukmQ7F8kfzn32ydUE83BX6f/mkzlddUZdsctzWtBOCE4rZlFn6fW2zxZNy
5yM6/hWZS6NBIMAm36GHidkyjIikxrRQeevI9Xd2r5P3zNiks9v8LPQRUQlZrrK5T352s72JqD7V
QxOKHVZgU/O0FeTCnTbPrPnZ2hV4CLy37obX4VExrJaGK6HHe0axttXjhxJSLxkYR1yaTmNu2M8k
r3PGvxpQJMTuxculV1d+joQqFc4b7+ECfLLzteGe6dRlFsHfPQOw7wTtxfs0L7YonZREje6bQ3LF
+dQthnLabjmJm1KfgI6mrzYMyG0vGJbzkNY5NyW9Lb7K3bFwZmTgvTqoiHvfBYYvizNw/DuCyDbY
5gv5V6L9KPAsgVbh1nXt1NiJdwKapXVaehImYPV0wxl2J98SOWIQGttp5BPNOmbX3hmFtgn3GczP
i2xc/pLRKoLWbXpwzRxGKS4sF9LRQGhSYZzNgP3op66jzCnCy8rmhRnVLJ/n9Pap3fdp3vaTmmPh
V+kEsIzDqDPHSaQD14zcl5l/WjTfQS/MT9KocrXPuQlI64ReUT2RZQQXvWCiHRc2q97WGiiPkD2K
VOF2eQfoRLLiz5mywi8LrrEUGeds18DHrudPjPJ43qBk6J0TVpMIUTkS2guR9kR3U3n99dEYXTch
SgxwFhKe7T967gP+rJhswpFEHQygCAzk6gEOCoLwHHjUL8RQvFAWIby5zz2E7yHTpgy3O8Tr8vqr
7mrwPlW+LzHweVjoVEw449Xz3oQvNHO1+0ut0YIay2YZQryIsu2SIBaR33akQisEqdcLdyXGnoxz
sBx00kcYuzryRnNtDajXu66Yempsk0PtXQcrHJo/HDAbRqOjxuwagIYvziWgs4uwRRBupGbiqUL9
ZB4/SUTybDhpUdYTZfyamGGeCeuNzIInPZBI/NY03U1rq1r8HF0lOxblbF/pXFHr2GTz3b0NN8RL
hG2iXrqZpGQ/jooxHQ3ViupG6XXmok7sokpRu49cE0JKdQaucuNWx7sjfAEOeWRqdJM2s1Y5bn+G
HxR70k5tOb/TCIc9Qww4S5naULy5aXqDypvZpQFDHcjFb2jdJjTi4W3oSutX6ez/RTgN9Xzvw7wF
FRA/YoSBAjefcQavZd6gzGHtdtoSbam4RQIo2gc776EVXASTkcUphfF3ye5xwRD6pJRsm4wnqENj
dyZtvv0twRSAL3JFQlkt4C2G6gXPfPvKYkNtCcfHVXmwU6u8yISnn4uoxGWdwD/FLHJ3hhmOSzGd
dmOdor/kCdQDf5h+KXL2OEVwa/Qtr5GyaFnjPCwI/CNb+uPmZZcJ9Z/GVrLt/C3LDm/JaNfvT/Mj
fP1D46Cb0nY51dktDNt1C765cokt1NO87BsKbNT5eJhmnSs/mBIuv1SAc7QSXD5s/2E2uSRN1PDt
zjGAKJMYtUgCPW1Rlg1byXkbd4uscstBOCg5OBt2V0fvDyt77B1yr/yGOH6GpU3UYLICgS1FP5Pg
DgbjbUVFRBJXXE2Jn1/m7gXeQvafymBMjIrooviJOcp/64WlXTzOfGT2TvjSmaDly/IjczG0Zyr4
ITF/GSm5r2b7JJPN/czyk+qPJhOzUKfYmG1lTNShaV6fU6UsNW/2A6vLhLDh2vNYb6KnCgTFO+Gg
hMO0Pwcd2pkbj4WKPi9S9u33ZxphS9IfwRH1ZVWwuA4v7GtPMF5wSLBcSEKp483+hlrE9gkaEdww
hiGYiQ/m575LSTN/+2+hXQm7IE4NSrPlC4Sle3sZiELCQHLzradF/rzPg7R3PSAB4U15Dj7fHtao
b6TsYHOnGUjVYEMhCpHZOBJccHvzu5JgTdyZ7ZyafM7/J0N41Su4SuWAshKcnxV26gkHM2BgR9Jy
LY0D7VDhYYIvNKU5C45P1QYcFCayzOa1eprG4/fia52qd/hVt/h2+1YMZVmYCNNBttSk0gxxD11A
Az/8UQO4yRHEI2gl+0dQo5qfYdmqcT7hwOo8qUBYweamXf5CIIMdeW2JUiADnBVQFvgdPZAkdhu1
TQmuz2e3642kWP59By8HuMdwNFSuxOzXP+KlF08m44sMppHIK+pOpKur7Ut5S33PMjXoyVohisbL
Ltsfp84zBy7g1OgUqg+E7BJBFJCTafEA1u9/acz8Ce+gT4p5UpWKKyFucXmB+VSU/QtQ9fuEqRxT
trX1VNZKgiKe1Xbqk4r+D/M/5wJ6s94CVBYRYxwoQywaMJjhnVWZWpMcojgqjS+8Zn0JxKcf1e6r
o5hBelcA1UDXWeVjRvn3Gw1RanKqSllSfIpEAeLcmV11ARToxUJISuBjbKvCe2Imity+x7N/K2Xn
M80bCaWamkUCSenjBIIjQdRQShOOWZU/yapVW4ElNo1HBBqXm1sPyYqr0q87a4okCywLSgC4kX2D
b3p8PaYxjv5gukuR6CE+MA+MgByB8eHIMBiAsJy2QhSg4r0q/Mn+rngNQQUqA3PwVQZgJkVLM4Q1
sTkACbms+PgZ7F0gnac9gLr5RGvijoQxTcgwWFUclRt3mUAONtwZVKmQowB6NxNXpx6edHyRnpRQ
erMSG5tyhCxMNJaNzoxKRp3uL4S6BYWUPejJc+3LsKdvQlih485sj7kWppJBNwmicRHwT41mwjj+
PqlKQKK8gEFVTRWDK7kC+M6eX/0YPxsrICTMxMVbOFfnBenfUYYH4igF5T/Z4sWFC7vP5XeWv/l6
QFErJkoqKR/a6rTJuua/yOV3URi88zcCNoUnYOcF4KekmKMRLMWx7T3KDTxuv4GX3z29RGG1aZTG
SLHgZ/rsjGGLUzNSF/tHIjTIE0h8IcrUWu2b+G9WT8zE3oDfgvoTmBHchISdHH+iEW3oBUmmeWfx
o/UlstuiGSQaxJcZ1UYrT/2IAFanCTYyscHXU0jfgkbK3hPMB3SmuAyY3zXQr0TGwhY5fwuyFJNe
pV6Ef+rThF9wFxh94PGkeiza7m8shmdePvkA05KOlPisNqUFnIxY8Czy7HYmQMFuf9AoWGWkDnSK
BZf8FM9eDAUKgAy/l1dvOUG3fc7cwWfuLXbWkx9LBgd+nUtke87bEtUEEJF3goL37O+pvnVIWMpF
ITgOTM7+4seQEQMvrCgQF+uNv+JRuLPf8B+Z5Q49YDMyYqbAa41NCFKh1JNQ3fX6mDoIj1MneX/c
U9BXDiKQ36xXeD227ZapVv7EeTQOra4cjKzitaM8oFe77fDhekOA/JGPsraW4lc59VJAhZab3X/L
OHc85bz/Qu/sUaRgFY+SqwzdLXE3fc+GqMVzDZuNVcwjRqaF31aRG4/1Kd8Qb32J5X28/H9ahgTo
WkFNuFyLed1oyGX+AdeRYYyfLM7FSjki93Q9YWjfGolwNgISywhKgBsbs5hcVeygk1kM6ez/sHAQ
mbgQvlYX5gT8rgfoImJFnydMF5c6lMB61w3Tqc7voOREygcs3Ejj9/8RJKBfBRKWkiR3wPXpGkWA
gMhdDi3KPE86iHx4fLAHFlU+zrWXuBEXF3uEt625Yc2ZEtxxSblP4G8p9DkWMAKNLVbhdhgk8lwB
+qaRnY74iPFZcp0g4pI9Dr1DSOiKkibU82hSCMVtnW8IFJeNmcjvgcNk3PrwftjxMNhAWJy8BQmh
+j3ZVY1MM6SesAj/vMeTkJUKTIS2lXvvjyoDvmxPs7JPLUraftHZdAuHN+EeFva7D0LiTTL1zaVS
A3eqPnUkCvmJfXigSfY0ZPTD9Ux8S6JiSE6JvVc4vzFg1wrRet1N7aFiCCC0Pr9nMc9xTl36v8AA
1VOsBpan2Kd8CAjXl/fHGe9coqhE6GRyu+ObsbuZzJlP0B5K0u2rywOwjzPg64k4ZZ+Em/KbDnke
DkywlI5ulOEFviebuygF9/+Px76ghF0tyqivph1iuphRhBQNTT99Y6EfmijmO7cDzbQELUANp3mC
MMnY0bN3dy0Zu15Ohe3XRvLxz4FdewMah4xEKLt4fmq9v5hTN2MvYlD4fgy0iknekJws/BdylCrW
biwz5oD5Kh5ifg9+OQrXNLB+Vd/KsxJzMSYIuqqeSIpV4QgrijN7UKxvL+lPAz0heDzJ44w0IaRA
JRcyMheXDwQHFKckJemIooDroBMx8PvWdgNbPAW+EClh07MJ+8cOTvruOxAuyFGWu7PFw6Ib5UBQ
WW8wuTwjBQ0dQNDSVev1g1q6toHeViH1gCLZk1dwKYhUc8qMgNZjTRkBr7BlPKz0qDi160EqFb3o
44d3nCpzYh1z5z35rA8syKCWvQ5KrCQVps5o1n78UQGS4I6Jlzv0IOhLVjAjFeLvMt29f9UXXXlL
t0+srC1JPjED7kjoBaahMn1NOZpPPLxQszpbY0tWU2XxEKD7b9JTPQCnmddjxfODBoBUnjLSNlvN
32eNmHMMsEFDSaPS9eik+Gs1yXxvYmrdBMPX9eLAiutN3415gBo67ettdBh20wZh20cde19IhNCl
T2H4xW309pHk3XSCnH4e6TMw4A8MzC5zX7/XRtgHk7Q6qcJAm6mCiuJobVAnIod/vZsncMZvIXuK
zLX5547gjhK0+3KqMKpQwANIpjNEcy/i77dkytc+av4wmWfyI08y38D21qqk0Sm4b1gioTWQpPBu
JxBsYw/aBMBGUYX/6tXyJu1gyWD/Bhw2syduMSxfvDelDbL+La7IMSSSJZ/Uh/rmPLNE/2FPvgy3
JblbWobHjh82zeYU5cmLmUOEIxa/Jcea2GZPuDC3VoBNStYwPes2sLPxXRapGCpT9or0uRJ+eGuK
Pr+YwzIwiSC1LOYUIVagBGfhwkdgUWfNcg4IGFmSsHibaqEEnJPMjD1x6FWUwU4MkBA+ADChbDH/
ZvCd/xGCPpS7WBCSkkXvk6Gk841MnROMjY+gnmfp1anjWKZhMblWtnWk+ZWYhF4KGJpNdi6B1+Ri
D4j3AGLcP+smfVcIKD+B1DOqyhBVm2UPa8GIL0MD0MQvPzr8VSpqjpol8FR8jUZnTeAG6WTDtrRi
AE4aPE1HSmc2VQ5tjqzMLFqnhA5S6A2E3CdFGN/vMXnOt7bfa0RCB0VR3Wr1Qxui4jD1Mazw2XB+
k+S6JtaN0WjQReDmFD7q7DMfNxy+tgxPVtWsZC1MhRY3Atko24AFx6so5vRNGDP4yU1kgtn03Cec
7QKz5fes6VqzUBPn2+KMA1FUmzM7cjm7AyOAESCIeDpHWTdCmoI6HEFFSKWGFfCbLlA/KbyigM5L
wJHOcw0cl8+VahONJ6ltMHVzaGBLFOuApKfH8H7bzc2GazjzuxGf0Lj5NNpoCd7P085AAEotiC/g
UQ6LQ+kWHRmHNdTMFOAi6WO6WvqLH9Wo63tBcHtPkXTt2tENrdZgbS33BZS7qlg0brTvW9/4Ft3v
/kXcz3KU2W5IyYkBrXeClau5hrtT61O9RPcPyeg5zEb73qAXwRgZKPdouOl0QO/arpKkBkhQse4F
1bfMZffKKCNlOxL2cOrWcjtHGdJkR1tCpD1pe7/aCYrPrKFcejFNLoE1Qjqgwg9IwhUIAdZfe5yd
qWppvrI4D4H8JyDiygiIkrxUMLNSzDJWdhpgSCpVBFPW2gOqOhal6nzOSWtA4XukC7v72UMmE9lX
SB+37ZssOEhN8oSfgFhGE7XO8S1bUARKB6gyCQUzdyvrNPu8BbB6j7Fj7YxZ+PYjGeMj7csFEMK5
HFmMpeCmuwMV3jm8pbrkYCtXYF+ofR5sJmtS0vLvjJcYrZHm9K3NwuXVV9+BHlIYFAivC8eI0atw
L/we+8DztdGeciTsSNGR4UxedtANfhBBTUAyO0OsCHaRoyQ2awyxsEazUFPvElNetjnzceNLje17
GG/QepDJVqJXd6yvJ3nRSAFmoO9ER39DrqMTHGVfR1xI8O133h3tRi+441WM5D/63lys65xiOH3L
/Uw+H6mtu+VZgBx91+UyYQiqYDOjYZOiI00ONQGT5x/UFI4k4y7x+O+iBEexLJIpQFIGjl+emqhU
LD7QanRO4vrZzI/q5oGZJc8uNMAwbgi7AXbt9uBCfy0BoYsWH/BNcWwQ3fv6T6V2L39zPKfa4Ih1
yB4vei1/j2LG1/OEeh1uPbMdYNmOpYfQ4RZS8iE99j5rKMnfqyKaGMAzYh1uMTDKMu9RzE6P75Tt
46TsTfW2gvngMV8bBLJj4ALfrt/NwFHvruuIle8auVnJ7vdsHEXcRKzTkMpAzLsGNB5+naUzye4s
ZKN2n+yuS3xwUibqBfH+E+gvMuQk94cPkxTomFYYijW0Vv2k8W0vOJom2xFB1erZoysegajvbIOA
xs5lAe3KmORtnnjP1zx0uxy5+VGSWRHiYPX1x++IOPaBxpxqBH2EMKbf6b72M8S2IZdUzn3Z4HeC
rrsoGQmAkzRCt9zJCf+RzpOXxXyPPiRDMy6oB/evaZBc2EUB9cYAmdUD3r+GylxHAzujhj/Xzedv
rTM9a0mdh8ih5fbarUQ08KcRhebihP8UoUQWZrjf6AzL8DbbtbnbnEQvzaSMvnkfpfZk76LTnf/a
VLUmj3kcXtgWh5103qigkFH2/rxK9Qn2pwn8F0WdT+aTawBfvrhOD5m8MFSDCS9na8Hntfh6LJSk
935cZpG7aMw+J/rjBWflFWciRKzT/aVFMkWiOYupJMJAviCvm3smyizHyK1w0u9SCS5ysNy/MdwU
cSFblgKbnb3Yu9GkaebD1xSUOfgIlH+xiiAwbXsmV0kS0wPrQ2PdHxK+v8+ubuJug5l8fiwZhLl2
Dg5+z4Z8dewt7obEoFUXLn6iA4K8c2C/n4JQ5JvqTcoV5rMRL/Jichd0mp1KWDoMtDIzVP0D4QvR
D0/84Ur8KzYLMHJ0KxfebbnXqWXjhCst5iAYB317DLiGIXonQChZxMGuQTAV0ZlFRJIJrjQr6QdL
m5A85YYt8CfMfE/eyTajt8IEh2N7e3YCL5gyS5hKfoDks92g29zKJptQYFCISEAvmAkf8dBsb9DN
6CzItU4+fIWYqpZ07/aCethsB0O+9/UyBGeYo7lq/FhXkMZmhZ36Cx483uAAOfv2LNCiPVHJc/rZ
MdbunSG2bqfjpgyj9KvH9YANZRfQqvuTa964ucnJaMrBmCC1QlqTeJ5Ya4p5NDMX7SkcPYETiAx6
5pxQTKKfUPZWWE6QpKuv21UVXztvgePpMfpCEdx6sh33viUKwXnCkEvZr1JXrlFuipLr+n+gIoyh
i3vqbC4hVmjj1CLW/DM1KML3aiqE7OFuFco4meVp5cXn7BLvnYHcuq+K+r/b0+MLepm0KhQakRKU
GMCx5U/p/C4AjihJXgnoHStqd3J+zYXGFepoiVHBcKTWIVFFWmpm9V6HNHQ58M016cOeZ2gPiMyp
/qpNUWtPgaxsG4giExKvbk5IbP6BGPUrp0cyV8/HGrgODXfe3zJ4oeAkT9fXLv/7wOBcULwFU9nS
uo51UM9LuTU+bqUP8j/MmPUjhgLo9g05cZSMx9g7N49P6dJhQY37oqbFdjeTaaMyCOp9AO7zrPpZ
5+JSLGbql/lV1cvHL07G/LpHJ112JpBJqBQNE/5iBiEF9PpcaUm8XOv4E2wEk7y9Uh++o+uh19tI
jjJZ0rabBc+dzdeppbRKjNe5m3dP/ULuD7sBV2MstC+DuaNAqGGo1qefx0Uz6g4wE/gMetQeSCz5
bwoTt49rXbXqBZZEgE+7tn7NcMENxU3PIxYvHSOdWJdJNhtuDUlHA6OYHK227gzvflwIWJef9cSC
sk3TYGn2BcY/mqrPj6lUR/FT2Tb8KwFv6WKtaNHGZDrMGlzUQYrjdWzVQSpy1tqPbCXgbDNCai62
ligSPikuGT8IMro32pDmZc67s2wLrE+/IRAaKptt0p3Is6rmlrzXIlK9/WcXSj3yTwJi5bYpG37u
NKxRxbyKCUwSa8vS841QDTnLgAU4mI0k5lEqY4U7Q9xHZEQx/hK4qvF4+GuTKg+VVvJd3CyDVoFv
gj2UTCshUA1SJ6thPicoCQ4i/jgIV/bDXk/3fbC+70LQd8bvll7yvYYca8aeaSHDQ8N8eJoeitd/
b/LFOPFYu0ZstH0tHApwIYphttNCXmjNcIgg38iua9TMA+36lPURQV9LlhvaBmLmZ0tvWoLPC0Ue
+n1IbgHopXAv+5DnZeeGMa2xBZWKR832EOqXqmQCqHrcPHvnXeH65YowpkIE0r1Aple7Eg5QlN9z
LzmmsXM1kmvR5B7UfE40g5EdZYvxCYu6pw9IgOx/QCFNdnx+4COq4QzdB57rbdPq0uP6mk4umbBD
Ohkn8SeW+HtdU10mIi/hgCZ/PrpwV+Za1yrQX/iyQw0O3hgorIB6oar1Ay1K1xDB+gMfV8nJmgE1
vGVNiBcAwxqJLdAgCy9XRfmOFdJwqKrPqLmyxjn6KELZKREeZBB47EW5XftSUsSCi3mUO552fAHV
eLfK881Havwf62BGqWTJTJKfYWssTenjDa0M0fOiBUk9wvM3WHy1As80lr2BDru0yZNaB0TIkAsa
a9Dz9YVLbaAq5ftZSsYDSngfY1OBY+kOl50OKktAFmi0bu4VKLeTqJY2tcUt9u/9VFSu67Ckl2yb
9zm8sM/4DRm/zt0huVT64yAwuuLtTWBNOAwNTYaRv+KWSKIGrEQkEGfIlLhud5boIdpjRgO2ioBa
4lyjwpEVaKbXPNtjuwknyaZx7cPl8j7TI017gLW6OlpBxU5+1L60GAgc3x9LTTjYcA+3ZDHFcxQW
3w9uuDMl+iAzPr+pjyLac0gZRAcFDAYUtbhi/AlIYH9fuaih3tBK8mltgY0FulOGhWE5WFn7Rc5h
Ro/GsrfkaLMN476G9ZPwBpP4bd6pcQ8EXpe0x4BjkocMS3jS6/zuczJ1rrtfxSA72T3Pun3LLpwq
RakzLszd6B3RFmyk3vdrdTNavIVLIl4+SAF8wxXy4I5ltfxoiLypCKvcCE+NRz7L2gZEM2Lp7zwZ
PGLsZ9172MpxV3NRyrtjjSvafef8ZdnUgkft2G4+X5dZizxcKelltaK0FClkjj497uH7U081MncP
92rmk1ZdQhypxeRXh1CanR+NQWOe6RiFud2oF55RmwgTlgZWic9C6yMDenZsJrLk3eqASWLvK8CF
PD6gAfZPndoJSCB0cNvhlMh4I91e4H3XAJRVMIWHPo/yJ2rj2TTyMA3BAqETeJKwZ4eWNgBXKmL9
gny8OdR6iWzkACAAFNCN+AC/2aCuHy5ZgfI2mGETXI2Ef7tX/jj8sdLEucX6+jadXCM0Oh3ZZN1e
CKk1yvgvTWldmOaKlGxDlVXM7em/ivz7aH33v3ex6nuBm1fDI1r5G4Tr0MMDKX3jYH6dHzF/DQMe
GhTEVt/ZukXeMu6+pkVB+D2g76ywep28+K4UPjt5tbuzU73g6rE/lJYBosBB8Vpr8g/EzEzPr7np
2xarT/pznu74qAUDeFlqa24WqXrZe690fJ+4ld/5V/xccW8IwtRU9lau8XMsJQuEjUGnEi/ALX8m
L6YpEua0jVGapDtOf5lt7UVE+8u9g/fU2yIkJCa+zwfPjFuYBNFToEBD/HurIMuae1zCo37HOWW9
aLhTFIj97ocklXqpxmMXNCzAxhHMX4L6pFWM/s6kevkGOZ1Ksj1Q60Ywx3Z51Rr7Odq0eogw1ZER
8A1RV/fHk17FWi/s5ZN9W1lcxQNHsy8bq9422XG6/n1C/81a7gOMGQy54EpBhc2Pjp/3ZIiEZl7S
5j3KxoIquSrsWXkMxr5RX/E6Xtl1Yc2+s/ye+NocoHnW6Cthbo9BZmILBr/j36IbvXnLQCFxbnHy
KIu1i7+bz3bVdHQAjT2hVzINUATdVm6j4fLm2bUN0iI904fAEh4iIHMOQErVbm9eXMs9EeuNMSi+
rNxCxXQ1GYIxlZOdhuEgTAYDnZbkVz5lmADxLZ/gevBLr3Al0T68DReFafSd5SmL9wJ1KT4O+yia
TYorblKQmvChrcgrFRJXEVxK6R4b0PcXPlIHDgII9f/qW3sWki3rQA4NxkjjVQi2SN+X0YAhznuR
ghjlbrLJRESlfksC0s/tlUiVMXEyf3eNJ6k6COB6prFKzJNIfqfB/tSfBBJU5/FF1PBGTy5WDODO
HHihLPGx7erVGQoTCAVOdCCe5mcn+v5T99HqCIJZ5/+QxavOu0PgNMU6rsSLgMPGE+VKW5cwT2TO
HFk2wuev+ZDT+WRTnTfqvOUcrZTh8wWDNMjqPgcw0w20wkC/DyT7TrjQfpVmBJeUq0IQZaj23KyF
HCocICIMw3o0rMg5oMB7P8aG3nkZzX+QJ+dNMxbTTCPoJZole6T8OYsDuWuDB7DraWRCNLYW4Vev
G4/qeXMrN7QXLkarB4f4cCFNNiyEX48jNc3KV7d86KW0afU3weWLneXD3vLMjeJC4CQddD8jE35+
gigMeBazo7zuZa9Ue28ndUwuiAdJ/A6DuIZY7MoMZZWAB9LfX3aEkHr2o41Wlog+oIR/rWCaWKZa
XPq/fabHizV7LRmfOUE8Kh8FPQ5ydHSmqTE5FQ6iSodr5hO0yuzykecyiGldZ01Mp+bZg50YG8EZ
SAWj1yxK16g+5KTjBL+kJb0IGdh+6+cP+eI9hGXaNVWlZtIHZEovZLxhzUl9QlVilb6ZCZlC2Q+B
QyRhYsoW+8qjOaoF96ENNKXi53zMAmj9WUk/fHgoteFO3w+gHDxufbU3TYyhYNow1mco1CXazwRG
grEw/732aTrzKxGzIzSKnjUUsynPD98NfUgzC8L+KcWNWHE4qw5t+uH5U1nLiEkANkpqY8wo9nWP
Vw+M7GbHqecPozoM/zyZtixOlcbrMCtugs5tU0qJ6wuO3Vnc76Ghjin4ci5NJ2fYpn13K+D2Sic/
NYSZDPGw7aA1QCKhKBAv3gVPHZXiR4x66+/flsqm/wG/mIiksTEWkYj2aur/cGXLnsyFdPHVICME
+gZNyACu7Av20+jAWW03t2o6Ks7wWXT1y0X1BfZW2cpMeW1a0vwxiyH1QUWgkWCpLxmqWY7EHaQR
1bkWThBDpPy5uGHgEfY4E6jQYqzWISZf9vlkawzzAAqMZJArizKAkCigSyKs8jW1Kx2rk3Z9QWiC
wYL74R/BFoK6AqMBcm19YLIXEUF+PLhl8a7HFGa+a57H4o+lL4xUvJOs/2dkme8E/syOoIL2NIrj
r8ZVT2RjQp2jPSpBv6I+oaANx/wmsLlLe+5rbkFiDwl40qtogBE/f1uk049F4EBs4zGZldm7XhKG
NDD47V2NnR8lESyNgYDasQz8swXlSaC1VXkHovFUV/KdAmYtXUmvQl1po+3BC/30pHuTJCdYkfqQ
Qbtb3nl2X8psSv4jfUbqipssPjeD49dNJIpT1mZDryk9pyzFKhy/Z/IW55P74mOFIqwrss2mvehX
n5xqMKw9n1foNLwT+qOlk6oTr3pnHvrg8h+9l6no4lm01rB5hE7DpFUwvuflfOSeBwAb5CXB53Jp
F+/83fGeuGVFiCeav0bXqe7Okd/FH2jybHSlKXdA+1SV1ZDChXwF6tlPi+fvLWomx0H7NHvWPMsV
bHAIhnXj0qKIICB8YyzqsFSgyPXvbN59GE7zt9NlW/uqIQBRt+vt7MIXY915i2o+ycepLTKSlbs9
gjTInwuPL6gl7rcrBg7Xp+FAJtTKu5BB4AVfdHWTKpTcEkAIUfZ0f/RLTO5QiiKWE3qaWjjubJXm
X5wymXMPQU/9/Sj4Kz2SdROYiF2G7oHRa0Si6rd+jUYuRrydYBhkYMuxeFzuvRMRU/LSY99rRYui
QfplYqop0QnzN2w39tzuD1jHktXHZvOY1fP5n+g1/4KdD3SDTi2L4hOmW8ZYRCnz8jDxUlTmIaAp
a4NQC4niD9SQe9DQxgAsZCzpb8FVj4knvD/I/nskc/EiMaWaVaJhWe6ENR+IoUAv41+U/cMszTjf
/74ei2ffiMnpKY9KP7jFXbYeh2w7KpLzT+3mxAsn4SHLw2h0rHmNEmhkRAhDM+bmXhUmf10EQiJM
+/AGyZAe9dDvFFtMClS653wTsxyzTtHDHF1bOvT4jMIGDpARj7fnVlZq6mzx+ugwytzaU/i3hTY6
y4u5wT2dF0UJgcVYeXz60KFKjgJPm36HH4Dee+gcDfxY6gOMM5VEck2vLd1iIqN/VsFY7hUsk7mp
CCkNVoXIJhCl1IXLCvv6qhaeN226YLR/4qtpK5ZhWVdJBrQKS+zptOu1wZhv4xUu0SHnK/H9wmFX
8Y3+jofy6646wntkSfucxP78w59Y9h2a5jdHlIyCdzSaEiTovJ84RB6c5jU0+wjDiEU4tWVU+nnS
rVE8ZlrQK7H+CzJW9fXzRTtEqQjAJvLnteNlgNgsK4CwHOEDbpGFNL5ijjyC1bKqSV2npmSbLSuX
ErcMjxvQgUM3ZAz66WN3P0nWs0dr+u4OTuVBYwquQV/Htim2a3lVo0QQC/A1tiYZ7ve0jGXeQmrL
bCfeJcHGSo+Y5RXpUQjKl0NGILtEE6GPSSODmH9dSNJfh9RgLfcp2wU0pb6rNo11P95MinR4DcMM
xT8W8DF+gzh89WEUVFzAGjurOFwJA+NLKyF67vZFl/pe6+QfIJ7wEJzO4ock+ffTXx1X7EPew8y6
BmLbgHoUA/3Zqf4VXhAPShT+WHvPoFnqfuYO3B7/LjkaH3J6fvmHAIdsc3IX1ToHQxsypSOX5DW7
zNL5PiVGV/8vdB5haseWS6lc5TAxASPNgMzpAYHwYNevBZsbczgjEkFDj7C0MZ0xRbP1LXA4wJQD
OTjaa935m73F0EP36SSSQlgB9PfJfyJMurAcyVenCV7RzKz9gljxLlFR0Vy5nOBzo1qgdarhF8e9
vW6CwyLsu5ANjx3oM7unxB5WWXZZfixQM/jD4t7RkmUIZALRza1bswZtflRc/Jt69SjZKsmH2Avg
uelyNgnACMWDhEAkvWX5FxjvsDSDiVPol4T6fo6sHtZkmhC7KZcWJhAb/oDrmOpoIWECGw0hENAp
oVHQnfNHJ/gdqDTojAsVarDceL9xX1hRuaxUeKhXTCK4wEC5OplmbYT5bGBoFjgdlO5eJ6Sl85vu
jJZgdb42vqVj13uuZHKW1kx5nkZofKOTmPk/AYYjSjX4AKY+lsc7ZbvTJvPrQ0PiBxbV0OwQdJBc
J8MgJPt6RchOJL4CiDcXNwh1GyT1teELvk3p+3nU5tGG6ivQYt3J1oQKmtdjbGstFSnvvqcPkdde
QXdIy2iAehXmNqoOSfVZQIgfr64fHWlj3Ooiv8FTRnqPnBD1mzLBl1KZtXJW6w5rVPg+NYy+0Kzl
lvwiUMoEqqoivgKNkLgDDeSOidDPikyhv3l1jzZ/rRlDXwDxFmHDxhFQyjjTPZinQ4JULXSk58/B
eS5ML8s6W9+7nyea6oOzydq63vrNFMOuR/4yzL0E4snFNf9FtgedGwgWyJTnMEL58spfGvZnx8hR
DLFUs68fs7rFRw+52dhMfIffq7gO1GrLrJKMsSqBOKeJsNvebV1wU4MgNvmYjkxmSFetU66+IE3n
HDdCSV37WSpEx2jJjjPvK1n9GD71FYG8AmIxiwaUifz2I4mHSu8j9uGwFUQOarGslWdiGjskF0cA
oanZiH+nV8x6RoefZBJSBe7MU7II5gLOcAzcgTChaR0DliwXJZm0nQzo6VIj/cITxxA20A6w8iyR
eVGspvk3gbtw6772/aSNq3eG0Dp8uWxmS5U5oEIljgoVs4gMdSPjvV4JdIyx/0lUVtBa9ac9mezS
5Mw2ZNKdLci+Z2jDu5+CFkxSO+7/fba1Y0s/eSjAGqz7enqhsXBRTXWVaeUeQvBa0JBEMGWRZnud
PSgZB3YBDt0sCTKyeCYcvKHf3jFiak6oF5DKACzIEaPa0s/OB2Sezmkk6FWaZQompRaznDh40X/1
7UZnhO1fVSnt42KPYPHQ8EZG4v7hJn5xYw0o3A9/rVPJx/lggbff9dZrSIxziB0tWOCrxVxzw3Wu
NJ8ra9sBqLH6Y4Y70K71/9Gg+6J90pWAVZzxKFCwEos6/sKT1UqEtuc6FwSHPnn3BO9RC5ZgADYc
oMoDNBeS3GdlsMEIrDE6Ifvzvm63LRofsJx5L3Zf7b/e5WsWJmVC2I3keQ8Pmu01X+dir9BLYML1
6GLQXUivTdDtHu0waPGHpPHH4wTAAV29ZCL/7COrEWM4hiw6IwgjLAExNWH327GPYjN9RkmvJapR
RPg+0Y2QMZHbfpbQClBNY+QTMeN1P/V14sBkvCxPzSavm4BwsQs1mJjklOGNWMEBghYf5DgEe0ST
7S9kVsRL2qvx2mr37tYu/BovZzhNqN0M6GOmq14+NAI5eHjx4TrIXTqpFitGMn59fmeo+cUAlw8G
4ZyA1FDRe0Xupqc11Qms6FGaMZK9/DoLG2Rz8J5FX20tC+k/nyP6CDk+PuXCt5+YKKAPRbqUtWro
ywCAQk3BbCNZ0vuMisCck3poiN9MNKlXivUBu0xhBucKYe34f0RpQhofMK9IPBZYINxHi1Den2Z2
4KA7d0A4dNIRD3H69lzhLmwWArgq0lgjHtMQYc5qB1ZFSBkn6Nv5iVVnLkn7YCUQ//TXQ7W6Rbm8
I1u3hfNsAsjjSQOCm4F1N9Zg98EManPpWKX3M7ctZGmScxIWjbb3Fi9gDzpNet6iSGtIuZL/tvyo
SFobcOsRCz9oXVYYKtazQK1Nl7SsEirbqwOfrAwHXSMgKbuYtq4OOWyT8JWUD+O28PFRgnwHg/v9
4aLRDFRfYK6WabjEj0rzEj0po9ZUvZNy++r89fPu1WUuUKvTv5Q5jA/rbiPUlgnhzpFhAkjBoTxF
xJZmO4n8/Rwfcm3Z+BlgA1Vjxb20YEbgUh1W+yu3AXNt2esTt/Bsd6od+m4CnvfrZ3Dlt5JqGuYt
tIwz1IDTBScgRejvr7gU6qO6xaiaDeYjePmvKh5MEsji8b9RJ3w7NgWxTQqHvOfduJM9LzxFKvzY
EjBlpUeqPvyJjycvyX5DHSP72wNwjHdmo58zTWjKLseIaoAwkF/73f9DSm048i9tfrIW5svJQYer
kKbkX3FOoVIaCjlSXq7Hoeelwdit7BVSYIi9VVYfXNFYXUi1VvaOCtcG9noM3lX1/Svqb/saH0cN
+6n3TR0TaEdrc5/aYLjoRK9gvD0a4Oaet9GcQjoLJxQTG0MeuqbP6Ykw+7NXp5tTKXTUcgsdOYVF
NTD7JgQqeg/z++n1gW3iKgnjXpUAqZshebpMZU6JqijtcuKkYJkcfhPHbSvZ0Xwot0Tg7VjVcj6x
UwDYAbp07s31Yv4OWl1sd4TSY9kiOCwO2qWkjWW2GHNeUy0b8Utr0YkPztjsGKfAvAOlTKsB1ZBj
LaRwoLzhaURlSu/jxwZS/Q3i27rmMtfvl9yHtEc7pEfZib5IJYor+pTLi1wi0MzdGTN9nfVVhKDT
m81Y3kqyXwWxi+VbU52Rc4c8ygrx4CQG66IrjVq7PB6G0CzAOHiP85JdqodCEfrv1azfDdvxZfLk
VbSzgGQHJvcHYdzWoG3Jw8t3WFQGkXj+W/O1+fl5S2rVm3HrD1X7rYvR3/1PE6yB/GS42p4sy2Gg
cUj9/xXc5iQ50VRmDDN13BHC35ROX19vouPxsjm2Fc7lD9KGkQwU70qa28W8DKRO3bOt+TNWgNo4
YS1PlRSXwzvWeFOjLO7nLWRnVpU+e4w7lPzwUgCtoQclIWsa0jDmmx9O0rxlgbvDiRaBhDVNRg/7
9lR0iplZoFNA66Ftz+gxl9m6snTS63HqZs3Bp3h0V8dYtoEvIiWCp/jSaRs4JSaU3C86Uiwz5uMk
VK9KPTDJ+Tw/F/yGymT/fgM8rEzmRnwnYcdg968M6c/6P2ZmoUmHuDDRTLzDF4Qdo8gWfICrcNLX
Bg0P+75zY4Ms5hzixjkl0rgphKuyD4gqMBHSjWKzajCfIsd2msbyJKyRlMY+DMVwjiHVE4sgk2v5
oTeW/NkiJ+d2oH1fkfiCQL3lq43T25kzh20s6LCcdaBtk83fdh8sZB9csLWtsvr1r/Cd0odg2fVo
fkC5wSSl20uILyPhrdOH/DkTMfPPlnuLzSFJdCAiA/lwQ/zFPG4gQFCMpWZ1fTnEJBd0Bc6N12MW
SlX+C5LKB/MfBWdpnqrL4qx8gx66FCOQkc1RPJl3sra5fgS+u1G3rdOYFSY5V6COHwvt3GJM2aFS
XyDSONFRDycw1BfIWpJLHxMMuKqH/9BmQKkoxREVXP5+2NTbrJ+owogae+mO0IPRjNZt8BeeFxbJ
LatnaYuj60Ky27EASN6ntATgS3sHqtWYt1QVOhT7J+knjrHYzwTOvvU/l2kuQiezmvWmDVw3/NHz
9F4zxHgybEQaOBJNfEGcNyb+hO+TjVPNF6jZUOKkG9ocBEadw3TS9SR6EwJnkcBIUBvPPl6dhq0o
CqbUKEVlcByngm+cKB7jvSLSUi/ij5XI1Kw5k+uaeXRMgC6B5WmV/gR+3+KTxFElLD1uNAunAwpA
MzTD/zoYk9Rf3FBMYp2au0KZFNaup1oja/aNojBfOXN4vpWbJz2HkKPStW4eQ1dxBrK3YAbTEiEA
k7BTX9HEQzptwjyQ6e5wscfiI+pOMZIfA8uoU09sSJagOBiD8Oa3fnVIP2FSirKKhHeR9aAeR4t/
4VopmOGGG/zQo/4gKVm3CcuBiUlnbnrdUaFLr7AEAHG+d5yKLWJGKekzQp2fSjXu8culcao8h6p3
r8TgO9UdoS1bsc4EG12Tb8e740Lpy8yfY2ChaxlRwvl/lzNq2zOy7BRPFLUlqmHqU6SDR53TF+om
tNlF4AIDffZqKyhhonBWLhYA2sZRqjn01OvwQjcaYjppFrhflR7OstE581Nuf8MKeP2GUKuTaTdV
2ihSM/OR94aRUzyauc3Ysx9FJTsiMBHv9QFNC+PFTxwE4RZoLik/oeGpf32dygAr4elpquBwglB8
2JBv/vr4OdWpcOz2slbCRNpT/P0SURI0GFmexxJiyer1JSCrFkGF2lUHiMHqLnLRfcCi3zjQQLST
rcIJaRf+3SOSwSiJVmlX9Swwf6sQOlFK8aMBkjNP+E/DEIZrUpq0CUn899vmVrDKvmNvpJKa2V4a
jkaJvh5+kO2mGBhhYbkANp8pA2QJlI0AMEzZsmtmVSsrcYIBEgPg1DupEJzbH5kk07suMpPBdxrA
nKHiAoN/sjzbKCB+tNDvc7XDVW70WfbqT9krh+sCjz+O6cu7T1IKKTE7G71xJlp/egYVV2i+0C31
QyHWXcYy3KyblPqQAm/NOt5+Q65X8i63sqCjwLT0YiVdBTG1oZRycnO1StUcdX4NDEaH/8rHGtJp
0GvYCKo+kaZXlguFESf/tRWSLkZ8ZX9EZUJLq70QTJqrCTNOgh7/+f1EIA6TuKpjmDCchbmXcBh2
rouYxEEKRDnP3G7BOfNs4HXhUJOQa/J45n1RZMixou8Co9B0/1sq2IUsijhZezH69n1zkiFOAobL
6q110AnRuP8BpcQENk3xsfP6GnwZedsDqqCVc1GyZWKko6wixc2gptqpqugHZAWs1u/hsSgAWZ8I
b+KXoMrifXuOEWXXDlw4UXTLrwHyE7dnT3Lq164G5nrV21rGaQ2yWXayEyxhNjtT0LbCWPC2VI/s
1LzzaB2GByCbmw1ZNmOfUtQAd0d3o7ggGLTZBFLswiCvvMKE7XG9icwmpD5FkRr/3EQF3ZnkNto8
d1LWry4zm1WZrU+6k9EwC8NyhKGW2iIzfpnJXjSYVPfwpZVDKc8IqBz3YMfi5YQz0zKiH+d0n2YI
8jJX2esVtTslsYGyVskB1NbESZHct7r30nY2AQ2RiccWPI5wEg0aWim4FaAYVTg6rjFaMkDiiPU4
FFPAuTvhzhinuxIxngk8DbxD+filAcNw22tF7PhuuRGyWlWAGIrIO0UMKtopNbVO7x6ZgOMAVV5I
gCG2WGmgmNUHt2SrOT9PPM7LPkNu/tnuZYVLWfenVapQVlhmA8t8+tL6vrzFcIC8ruNYuIlJ/kns
06EdMKbqTbT4gr6TSaRMIqEZPAkFJPyzOUxavdWnMBZb8FTEZTraH94AIuFKFowlsPxWQBjKAH4U
Jqs4Oys3vcVfO6T7/79YrRlVOjDYdUD4Q24iHan+t9W0TnfGLfx8eMONMC2lUD9SQzS0z6DB9/65
xu5ox3GAYuNEvD5bWSNGglLdIQV7tzm9yk0BzflH/kgCHMOO7s5x9JcaNC1vpc96SnpSHselb7Um
VanB9VIrwaQcWRUbkBdZpwwweUCZ9v7gdO9/11auwgkAPVSjyLbRGdDomKyqT8B2X7MR5GrFkdT0
KG92OBCPiuUELXx7D/ug0GMu9YA4RlU0r1aLV9hZYNhyloja1+QWdJQ59ffvtiJEmX/rYVrs1Fz+
UlPFd+pmz0V/vWEoKuCvxdaEnGTeQd7KblEDlc8GBa2R3V9SHOYuFSur7gw8hEFytGHlSJGoX6Ha
BXM+2/8t2vyQxYUB0IPjwN+uuMMqxEygAYoF6tiEaLOWc3NSBzgLs+ra3hM+UC2n1gc1GOzyPCUa
jwMT5WS98Y3zlwpsId4wUacwp8xIn6gHZ6f+t9/e7CvOytuIXoU9bO/W/xLOBS3oF+FwEQGweL2R
A7fC53hsQ5sb5S936Ey8aVMu3vJyLtIaJQG39NzddlVlVT/x0iYzUtesiN6xzKh0qXURx74AQXE/
rPr1ywkRqQ42B2clUrPQL9OIPVUnlZ9cRUrNrGf+YF6HFdAdlCGDZLvMZGyph5zt4JCb1qzjBPUF
ct0bAr+8gIQtcumlybHSB06S+y2qcBcVTJv2D9VNpntC/4D0dKXNC2t551c4ZYRW4foNMTwf2rJP
5iIwHlnzweu/VN2nGJIq5X+0jRdbywxGmtLH3g2E88MT7PFpO3gINABavd9zb6H5ii/j/udr+b6F
lOoLkZ81Zhb5dAdIH082bxE/x8aJeKf/gKlIbfgLN1KwVFneBoqrvGiYMawjI8GJ6CpIEbArOVrK
sSEpn6N19W7Smr11zbu4nEvQcbhuQReOIjVRR9+gHo7WJuBOkqKcg493BVvpZ+PCQAGNITYTeF41
bXxY1NlLhMs9B0/cN4/GdfPUBtJkPEelIbxUDYN6vaNgVxid1T05/FclKFG4zOR1FcNhWhQ9sE27
B5DXUPh8SUJ/XeQXjXhgBK9UJPBySoRTLzI1kueh9hJ3J2BH3SvGuc1Egt/PmNw19HenUJfoln2t
Jo7Vqo3XbIomwoc6BW9fw+itz0cwC7FxnWuZo8jcpwNOrRton9nwrSs+lyRtJXJ/6LYkO7EMcCku
v+g7BihsCn7uNGAd6ZnMW+VkKbyQge0BMpu6aBY//3eceY9C3I2zLJoJY8tZ4wFMmjiwww8MP7LJ
1n7Zjeiuph4ohX32hjUJ7ZQpMObVbLZ+Ny5l0tExD+bqjDPm7X6qMhkAkZberu1pTta5/k8RXyAz
/IxSs+Nev246jvXWMHtooPoWtQ58mhiCwBJIy1IeudH/O/hnhuRKPspTnqmoZGi0Ou+5I/y20++T
mCQ+5WpnBjKHms0lJkDdx1dU11TUYAgcnNHRXw6f3E3F/9keAxYZToESpYqedbOJVjq8on4qdiQT
kwznRmgc+NFgi1eVtFW6eKa6TZywGkPaQnvipu6moBtv57TUThtIYDkFBBQz90Ynunv0BPDukMu9
Asq3pbWTIAcLaGTDOZ2UELeaGCnjeNI8ZT0CBZdrfX+RfF1emslH4OC6njfxaBoMSBvxniB1Bb9A
HF41y4ZmwwXsNV8eo5DJU2P8o6vuYsErbLSMb/452Hg2pE5+Wthe/YEDL0C9wJDTBdh6BNhjyTeD
+vse/D3UGpA788ihkpmszQf4J4QvbKpsWbHVneuiofMJbrAzCDsvC0E+iY0iw8xQVhN07t6RudwE
S25kOVwR40YXRwpgCzX6NY2PEuSw5BiJBoswFq9gW6vSdDMDJU+APXQs9SiFVwZloV3+yRSMhEQP
bLAfvdA9+AI3TovWhFK2wQmGlKhvb6RRn63/2onpOxoh2WqF0mY9pDEF2rKy5lR3+zZgLJYNMZ9Y
Q0c2PLra8UaVPmtHYHGDglcPoHsbf/NYaeGv8xxUq1hvAZXoZO8jGTvXLXjCi/JYeXugH0jfWuAK
ruGZ4qwhcBQzlKQzoQufy5lr/1WfkUC3FDHpWdWFJSJsMphk+QOuBzc2aOq/JxKIENvmKsi7MzBq
HFwrHeHN3xtc50tUS0h1FotemXx3XBg2nfrm0qXMxku753xqVfPJltPm7IE9w5sY2cREqAbrnsmu
CB7tUVK+bTnp0gzHt89YXRgCPSWGqsZpUCxfN3crEiQFFG8/ZtLvkYQ16wfP1yDfmblUj2hyI0F9
Gz8yxvlzRPUuGvIWpIxfVFPCmYKXzOLuwu+SQeIcdJwFUGsc7FfCwE5YElI77cUt25t5ygOS069F
EcQnQZWGVqMuCUDbNncZyUTnxhQWYligsoIg6IQKpygBsZiVoaSGxu4ftdfyxutExqI7ZQtt7gla
JpMumNaCxdnMIz+XgPy/fkgEBj7Ht0J328cObwm0Gv25JLBbVz1rXr8SFnp9Pgo7kqFtf/nrDODG
ikWpu1s5PyJ1AeyspbXicJV6/gtIknrsemMdTXw0e3+v6acor3+SbL49BN2WupifPKkXgfZj58yS
+/fjZBAVNySz1D3tXhb+KMgbFraHIwMMVDNpYWDHaQoMSmxihPU6qoZtVF9XHJo8WrM2RZaL90zn
LhCkcP0lvNVXUDH9neL+KEm62ZKzdAtZZvCp6b13NAYjJ/w8CEz8tlHHLu3cGvsRf9oSuNhOrw3K
uhFWq/VITFWTSw5uLFtuOx99bwd0JeV9A1TVZPP3dDLdSK0DQ+mBr11kXglIJADVdEE09aNYGu68
X4t8Vx3kThbByQR+oSgs+6BcXGM07hCOsB0MVW+d25rowXsCocDy8vnGIaPhIdOgqILJldVnSMH2
JXpVFNfPaswq3DDvkPVu/6dmQkrcDw2dh/XVS+oA7eWVf88iVNtFLItch7XOuKjqaxhw2XlEp8x8
u33fg7wu6D8TokHS1ZbY00M0uM4EY5UhsPXwmfbrJAJeIoC9aCO7WOleapPztcchgzMyC0WzrxOG
sixNr3DYXwhyflrd9A+uwHMVyvnwX/Cl2ScwyV7AjTkayHGeKd7LP0FRLo3IjD/23o7fjYuUub2l
9bLbIQpHkBnisTJeU1/g4qmWGQv6+sazElyF6vv3x0ogedGy5jXy9l41nnp1gBx/9QJxkhPmPwQy
ibXKTVg2vjq68teVB6ZE/bc5Cf6RyIF8FNjVh9I7mMJATjjd6pGxyDNl6pTlV0zOSwjrnRoqTjNC
H/YEdac9q7aDGpMGnTfSP83Kga29NPiQE/1C151cfgpDfjy6F6wsRipLm2dstJB2nfIMNAN3v/7D
uHaomJK7JlWhQt6sHpcXFQZ2vxwv9plZmZbzOMqyVAiqm5jTSZlWIVBt6UPUpe+qBLH8g8teFy4c
n0wOvO9txXP0SqfGQdY2QKbj5DBDU0sxQqFTjYc/ZUCtgzRcTP7iZj/H7i2qJaGZBnq223X2Gd6t
P6J4XpdLOFhWFbHLsRaaRoExme2kdMqeiFKrxCTnEgzS+/ncBujA9OodObDukHwya3FO9vK7I4rr
fRwFjtDSREIx2eFPuBLnd8/1vPAdeR4p4T9Q65RRx6KTdY1MNblIJAQ+RNvhvVTzPD81ZhhQqaTW
FEwdprroGmZmBkPzzop9LYbb4vFavSLM20dcOkUC41BZs5kX/YYb7ENfhWYezuqG+UwFZBI3MfUg
q9frsVI9bGFnDqAIputVTJgZaGwSc3QIX+JSBWq4+Vu6UAEP4Xudl2NjWLbbkFG+CdiM6Pfhywly
1FukAsGFTxwgFDdOyYrrKyA7zgmVrni0is8bWwgXPSpjtmNHsLH+CcvgvSxyE2Q5l5cSk5FgSuej
MPTelA29IiqzMzM7TT71OUW+4Ims/QfPSPwx2zezgVvZPHDapAxkuzbJS91qjJrbx8Fqd/vC6gqT
dxhapRV29XhW2ZfUfbdoH+to1bTANF5BLoNFBSthKza5Gh2l7xRe/Vw8uK/3ji040FsRzGzDLkdj
ItthTKz0AVM3G3RQ4tbYy5HpXHGiEHQkjrDf3VwN45SgxaDUHBImgijjffvKMp8ejOesrNu16bgF
IF8JMOXjyNy9z/NOFuNi4e88K8uX9t2xlbHKOUy5Uj9ALvM0W8rTr3kAMGqGtQrwVSfX2hd0nVbl
jib7HzapwqyHeUy48yrC8vgNKDA2j/cj6h12BU0fGl7kEzQe0qWb1bxgNZH0HwNkE/dhtCwrFUvU
cmKnJHu8ZW8qANRLKl5MrPNfQinqHf3TGq2mk2WVBvwPRhrdVrKgnlT7WzbrrWC1XQrHI1LXXX6r
MP+xViY1OvScMwoRFy0BuUd6EXLOY3YzrTjnV9kFU0so0LO6YJrDmlYpldsB0k0ER6PN99gFCT9s
fLIhXolTIVxwAhn5zWAqLnGb2pVPH5S00pZ45f6iYZjmK/5C/fB8siOJYqfPFhbbbKOpEP6wWASE
+dm2QWItKC96XKBjxGe/GgJOQ8GS9b/7dfh8fZmaoDJu/V4oZyixpMqFMzvxtQL19msPt+XYRZ8+
NXPVo2YeWaCoXOsGcJiZg95vJGgjMoFtanzERpUbT5s5TG5g3/9YGlOti9/ntrr2HchpLupQHr6k
7t0N21QRAVbzbYLuW0OlA8kr2k3Pi0XkWctrtsVj5YNY4LbOjU0wi6Qpo+KdW8mN7YdnYln/wDo4
roHXRwiNUNM13Jwa/hrZVLbBWT3NRflr5DrSOUAb+Ttr06Y/oYAKZtYyymXA6fTh5nH9ZOYBtgcw
v2AwpX2y2+eWaW1SB4JoxTRQ/AL1XTnW+J2JtAl7D1UdILal7I1++8zXSnJUiJkZxRgBZqy4Mc/h
0nawJCOOpmYgFRO2KKO+NV7e9vj1ClWRKjnG7Am/JO0AmtygurGal7qGyUPgZrk0l323ZB2yU6AK
JTK3o2uUzz2wAgImk3ncDy+H8t6HUNp97Lb4fP35ykehMcMs7SPAKjg6N4ScFHPaL90MWuX271pe
Vf6MZo/5zwhaJWCxnFO5Zny5gr1ItDZR2tomJfnWhM7negQ1fFYIFupzmIWHmFyEp4yTntelWe9V
qoksVqxtruGXnLNGpGCYrJ7O0fQcHsreg6iky6w0MKoEOJddlW6AMorCCZ1KMAUiYIq5dqDzb1Fx
d6J/D+SNP2SXN0xmnh6SRbh8xDXzwf4GB3m4hLqvDSl8Pi+T2/LB77/Xogvo3NMP/k+QfpVcUKPQ
/BqNglAMT3x/caaMfEt62npozp4sVeqyJYYooM0eJyCjjuMpv5UbBSJROAsR3K6mdIhSgOZtifxd
blPPG6lpRrPX5q3PdydeO8iNACw8auBMvHYFMAHhoWXWtIyIQxVxT98aDtY4JwCip1wD6HHWlWhA
WAVF6UzwstP6m+/+zFLrkHxDRZrYKqZVFRUUhjDGlWN7kpdhHdIey6uxp8uN36iz67iZUAmdDShK
sJaSdhNLmtQsmSb3dzmRou0iLObMw3uo4CqUz4ydufjaUdRDMAXm/hLAQpMAryQOvs2u89mJjP4D
AbZceLU3mwyKfYVJTNL8tgVwDrXnhwec4UZ6YsTC8ohEj+sHpMfzSZT3/pwMYT1EjHUPr4U7uvvW
C14lmZwX13WUZUpZMhaTkLNaCeDTynzeg27T8cQHreSn0qnHuy9TFmG22J0ZmzCCXnPapVRYJckP
vdQFXwWaXbkcxbRsbxllTEt2RfwY+5rRuOfiyOOzT2fCxzgfDTHmtZtZANE/og4eFm5NLxOuWTIi
eWYFFrHESVoZvdwD6x+TMZt/EVtjxUhNkxLuZK0D1dbZQIvIiwrU2pLgkIM4wM+ijSMO0/+lE73m
TJPcJvSQ7efXXqZ/KBAVitgX6ScBrowyWXlsGI8wZLHVhcS03eFjGFmeWpcdLreP2BS4T9qhAQcE
gv+dJ4imeyf/em3hxQIecE1MkJFx4C2srYjK6Wf7vir++cEx5ipbf6VHJeyLTllX6DfCtkEBecdl
t4zf2mwsmcQvSxwuyOLAUi8WoWcEjiv524b8rc3EBDGmT1DVGpFSiBfoOgVIOIo/RtMsooNXp4Ha
os1EHRyLe5Yd+wgcsl5KBa3RjmWEP7Zop/RIlcrjYItgOfGqvi1J+FjM88lrD6XfZfgAtE/3dA60
lqxzrI+oUEtVxQNrIfj1xplAp/nHK5BklS679+6bsIL+qh+TjR16xwdSU7VpAYSxAABMR6NZUgC2
BYinz1wD6fR0ejpYQP1Lc8PwcKywpOmW0A5xhB00WnppkMXgWm47NmKaimMhvua0UNxOh1NogeVE
e3p8Ff8tGml83AHrFuQSmlDz0gIxbqS8cwz1RE3JrCs+bwW0qakN/nMJVG3lj8XoH+fgsw0N3E+V
Sy3PBodMphIBnifufvKZyfSwdfU9uEx5cBlO0QpFHqmeJWA8PjJ0rwgaex8dPGuM3IDbElOlnSNK
1dWXlVFou0vqZfo/EArFWrG/xt2nfZDpKq+0B/oDVVCuba4YwqCeCmZzcI+Gpr5O+YnIyxaPEfjW
hib5UlhzUJ/xOFZXW/kk6/AEMSNYLaxzQfUEehsbZ7ja4fitd5n3CmjzsTlOfGEzvPEqJah71qB8
EGikCyWSUj4Ws7iJfh4iH+k19/S2h+vi6iG1GUpZPS8qpkHvjL8UJqPiZVKieEvTQsy8drykyzM7
ZznCUnElDTG4NYmvFxi98C8EuvsEA5CDlsIKxmQGn24diUHZMsiKqnd3iwUS+0f37px7BhASnyID
7L3jfHtC8x7KNIZwqlTvQePJrm7QKuQ8SJTOfBUvcsU8L8uWx/Fw8A4Fod1qG4HmmvKadRF8eqHj
WwzbMOVehx+Q0ZzxJKtLjB3NGCFy5k2uFs4qespOsuFkA4zrXzOBXKV03nzlj6v3em0dDZWbrkbS
hMTQXSsH7D3Q5iIvyb+tVIZcyhPGHIX/DsofmKvA2CIX1H2fhb4ZbBLYMdh9E/iGtX8D1MT501I7
oM4E76H1z45eUpxFvw44ZTCfdwtDyA6IHaYB+agsV5nrI48rlUTXGh/6y9Yb3OgDA919ABSN4MHZ
XkmbCxh256YRwlykROLjOV+Gsri3EEBlIYEJzZxKg8ug2nslP9IkYN6gpLwlSVRmSkqC/Lsi2v1Q
RIzmOVbb905yr9ZzNIFd0ANCgnvtjrhD83DKu9f2sv9zGWA6YHt7h/n5LAGXLwC4K0dUtKjSpTDo
3LQLEuTQ0P+BAsJMwXo/S5TfryvFbFcWEUdUZgbWulGM3+cU4eHNm3azvDCMYgxZj3YXNoXBkAad
QrdxptLyXzy+8mPfaL73RzCdzmTXDXN6ufVS+fh3oGtqlZU91INu6Pp0K1+3kYyUVJF0Sm/QPrL8
xvOUR5gPUFbIMBX+UyN0fabpFmQjULQbfsrk21UrYlSXtOnJt24p927zXmfOdFwYajBNFiyX2CNH
42fWENb/T7fj3KKfO4RxgECncjhoHEx7iHv45S8Z8Bb4PbpLYIYcNIUO1WozjB+8vQUtZeGKCpPp
acUg7f6hd2MXVBnP4wBkWrnf3lHYFxlmo+x6mzss8QDd3SvRtgcUf5qQgxARx2g1EtX8uM+7c0mu
xiphB+HihSf1c2xdfBbAw0RAjsfdIsRtN+anyNKwIpEHqAo2BxLW8CAdBXwNp5qzLq3bzABaS+lK
Yp9OYBcL8yaeIWuVhMb9Xvsa0g69Mhej8F1QdCErOWAypeQTPoKgnu1LDBRl2MxDgMvRaIk8HwwE
HqaNp9c22jdrs0na2AV0HZmq2jkbkmVkWfnuqgzgk6S/pGsdXbJRGdREBFXxG/mlQBzR4lGbTxu3
cOpOye1xomiId/La2Xn0Zwr0Tu1w6WRei4P+z5mJfawxxcAFHXJZKPQKHwJD8jmaD/Ghtw8S8QGj
bIC2bDqcpiWzyxwa1ToPmLyTcBqOZIViv5BBszHbHYoMS6f3XI7flQxsan9NeQ6DztwkTU1TnDPc
Z6S53NRKDSzKQT+RXuQOLB+qDCXIZRuD/TBRN1DnuHpHzI1t5ifbosy0X8dsaAPSLYla/bHt7mTd
nqKzB00p6H0V6RK+fK/19CWD9BuFfAAPqoI8HXuyJaH/fEJJasviov/7DeIN+i+qSpPEVIAK3f3X
ho/4+IyKvj/CGjmmI5V7wbI+nkjKxB+clCoumtvEayMi0kw+dpM6P5Kan7pnK52Z+71iDCkYcydW
jIYcj5d8ixT+0NxT2CXZQimIsmQPSv4RHpl1+wOMzAqEElEOXZgY+2J72QTk3olSoOQ9e5o+dlWS
gesCucQXrMV9o7XDVwKJvwatpLb7MkNZNJ3LReZ0rD8eVhcYRDG+wWbQJdNblWWX6Lts3RsPk5eY
4w5zBPXjhpSjZRVRl9UFTQWLeC6r25yBWZavn3UvIhmpqLvjmP0ZcTtVCEWKfoi/AIuyhnpGbgIy
TC6UI4pT6CVZb4obZ84rbcfcztykPEKcjgujb+WlPey+FmUxvZmUUYn0gJS36bOi/BWqFZ/vlSzc
avX1hEE/EbEfzTZR50EFlBy+jhaV8Gzqt88tBT+vBUFbhX6AyFAHwzKKa8STvFlSX22i/hGAq5z0
HE0XGj03P8/IVzb5KcEwlPBejonYy4vbTmhOKusH1iVyrjOuVMjGdwT9bm8fOYn5Ykc2GHI9r9/d
V0mrFlrkTKycYjwO40MBfn/k2gSszxKhLoPqVI15HDPgyCacYBlSVsWoOSJXU3ZhxZWIht9bX4y8
erFNd2ePvCi1aYutY1ujvumh+DsNe/HwP+U/9Kbm+a3wOysvFujqrUUbeVw5w8wmRfQur8v8uBXj
Qt2+TMpDFDGP+KD4bOlangEDdw++OivcD9d3Ieud0qaXKzwljlGKqcqU3wIxmFVZntqsDP/MRv/U
CShVyaxG1toRfU3Oo4tnpOX4aIcQNEox5T/lKCJJx8ALSHGPylqWAupQ3FyruxgGkWdo4U++/0ej
MBCr2AK3kXf+XmCsNYQAH6oKsO2pr35TVOC61qSucz6HkZzd5wuAVhiZ49eRVe6b1mfvWcLIaMOt
8V26clq29FXuFuzViw6tavNL2nT0QYopDBfn+2jJRB0jOzmKzEWn15tXb8dP9JLRyafyknDd1ycD
zemXQPCp4k/C7hwSK1Nf7mLzxZ+PHxyZE9+WX6a3MowFTIHv0pYOSIp+HpRy8qfj2UcQFBCpfrdL
R3Ba5eu8VUb2KfeaUYQc8ZAcu2ghgltGsYm6TWJ/CCVabpldmYLySSu6HHaqwaqi8s2JnUtCmh3M
ul59wK+IGBOWGCduABdAGmOQVAFyM8pwEQ/aRoXuqB6C78M7u5VSOH+gjaKGuSI+CEZqIODBGEqT
nOvNxtMApgXcczFnGq5nDraD5gIbtJ2pYji5Rvfj0FnouhVhfjrNOteJkxkFDOZwWSIGwxUrLEVi
hzDgc98qQEgI0IVKitiWid4rwn/KNn5xNC46rUgViQ1HWaZ00R2zKYBV6i2LLshA/sgkdlSI6rmr
L+8i3VMc5Z2xPpsQEsXHr6eSnXwcclfVnMLS6Pe9Y1E69ObZOiB+5i6XS+U5lVOL/oCgXsH/Lg8a
6RBSng4CEy6f5NLeMGSkvNFdlo3+uB6oxT9g+0YOa2YE6ymJ1fzfGOWGM5CcjVbwnZqYjs1UsoLM
UdKIV27D5aVitlulNKL8e7UeVTqi+T97LSfeIqlsduHEi51eB83As2EMbir1+Sy1KB5selq+Ic61
42AQtMCcmg0BGLyN96RB+V6HVIAn9i6GixrJSsvjsvBtdwcU6mnpyAxHu2etjAmq1nhsubd3F42b
H+BiLWWYp8mWPlfoTQaKjzmpJIfR2J1EfWznh2ZYWAttGh52+R7CxduBYhZ8EtsT7Yl68KCyVnEp
1OGFFHUZUtWYifWb4/LRX9wIQORvgwHH4mUD9aTyz047ztaPbhOQtr8/lR4BWzczBIGMDm2h8RY1
Z75YO10nIznVc02pOVKSI03b/DQL35rjAs+BfU0PVOzzc95iMIC+NvwofSEtSkUwuvF4kaz4UpmX
sfgAeD9CiWY/Td88Uy/ImNcTcOA7G8q6981qGjAhohRSdNudOvTbegELLAtEdzLvR1tV/QNnJ7gp
fmJsqStvZQrqpdcNmJlT8WEk1KVA/gDz/4p7Qmhe6bj2SK7vPsY95YSfdFnhHMHIKSo0kGvf04hX
w0VDwqJfQXrwe72jfTq0KkNzHHB6Pejn8zn/Y7WGsLpteV/dvd6E/9P7VtwaNu5c+8o9kAL6nZhU
sU2oDMynzWYOxMrRL4mAYGzPp11B6bY8QI1xOrDlXZ6AHsCDL/57D3+xI+ydy0qWMHUs4Av+q7Ul
pj9JMeTBtJpJ6TN8ojO8itlUroDPdzAF3rmX6Bak+8eetk5uJpXXNXnOZEDC8sjIs3E0495cKvxN
CQgRpU7oWK3o5YXmN54ZTAGKdsI3j3F+ts3jgPfaa8bMbTj5geqk8GBZYtK0VMMrfwuh+tC0yiaM
43oRBQPBHByAX7nDimwsTULgGilJ5VCiH5KLrLTHGsUvtRl91itFl4e4PWW20UwJHmWm5UwpQc58
3xr8Vue0dMuhXFYvdZEbyr2vFgVSY+qqTjYyuJrbhTGsKV5H4tG6GerN6jg/SZWxXopByk4iOn+S
0XE8M3cOvmv5DfWmRDnoS92SGZ1xckwHRdKLuO/fRXYpsoh5lJ1h4F0SM6H8n+4rcMu1thVKRuEV
7rDRTUGZ/iF3FcadMIJCapd1RtzNjqDfpTkIIEKxA96iGgBgeSztkz7NP7eMrKifFFUqmuGH7FZO
UaqQOh5t526arjK37JBYrg+bh+mHMdR55xR1SlJELsjURwdM1mSv1ri0tTcFYiIclLC1Ts821XwU
395dTBNtjYssQ/ee1PRij94viVwlew4kHiBLVxxi4XwYEduQ4uOlXIk/hPl1otVsiBxk+ROxnPz5
iYb0U+X62zbF1Cz4UQtuiqHhVDqp4L1L1AvhNU7xTUOwi7mterbXmc/9l4i3fuxpkv8zSlL5eEpg
dcc+isJajBfsrvG9FU6NUw3nFv7sdjAxhD9YSL8iRuy4XsKsqNQyZIQYI+7XJr3P5wU+xzgaZFqz
QjYAavPd8Z9Q70JuLSk6M+UuuPTXH1dDLUP317xkH560ggjeySSml2xro1AvdhZm+l3JFv7oV8Sd
09cr+CfX84Kdj4J7ZUD88fGqhqZOyI3j0jBfWlYnOWtmIDIVOF23xwzwAwtZb9qsyU2OhhhPKOlW
ItF9PpeKCeFXMfPfEz/SzMui3Y6diSHm7o3uLvTgBF+kWuaPFI74XKEMXvHSDyJYOrFSxykz3Gg8
P2W7U7NRWLqIrSVuowufICQcDytxnmAfAOKXEm29xQtsboKGvJ2epjxCXQ1+Bc9yJLHzucwvHMzR
OfsUByoD68ChtvbkoP1lWfAvmsN0eoo65f7cYET0s500sKquKOL2Pge4Olt9ix4b6zsQ9LGOhaUm
hM5IA+SVJvH+NoqSg0b1J4icYUyox5sdsbH0DH5WAUsrlCJO5XBd5WMzgojAyCNli4kdSSVRoxZk
2XySCwxTAi/PV9vWiQh/o/TWSqxInb8v0tIU1Bd8dXUymh9j5oktA0JdoNs3FYaPIzFhPZfYaG+e
AKYCPWBpsPFf1s2DEjgOIGmDiNE5D8iOSgy3c99Ks731k9SpzYoUDju0nJ7xaqWyMIYqhoTbBIWy
7gb6u2iySjsBFiwDRlc8/VdwklMLLsHwegfCZUgbbAzkcDdQU/O6KY4iYoyj4Oy0JfWonLoe8/MC
Hw9KQBJ46vEXz2leRCUKeig7/r64Cm0moRFYLe13DWHJHWmIrOukr2FyReZpC1VzaP6zw3zScbuX
enq3a3QFBqgK+7tmcJN0FhIHpN+pejnelaKq6dvnGzkj3Xb+2FULwZsYLSD3pU4iRy4lKnc31S/E
IeBHHdFT6Yw3ClsUU0PfRkjhVIPdEVr+kndUkHlGzjWMT2v0/fK7GrTXMYqBZN7i7AIcdwqThcMD
AW17uTS8DltktFghKzAFOFg346jnfhZp987OlokQCcEEoFd9px0YYQgOxr/xrlHxae02kGp+0qus
O9hDtirEm4TMQPcPEcDY2f3SSzQTy3bUltnRzEjVXnw3o8BCKVliqaIFP0kytW/nCrd14FxS2eB8
ER4L1/DLbgTDiRspc+Rn1bIC44rEslxhVPxcENGWpUNHS0HZ6k0c5LRO1g0N/LMMr5U/2u7ncOTN
r6PEcd9fmFxloHa1PkEhQgvSYHldBUYN2TrwHoaiHEPkP+/3m7usQxZetLe4YHTlUPbGlp8ovI9H
vmdElAmmsK1Jvvy69G78nzBU722jlLBl5956I/QLEz4z0cvQOvtShz3mnD5AkWba2X8BDaeL484k
9ypkHXt/JBA9dtUExE1WwlWpKuQ6c5W2wnDiYFFVHZ7ey3cSssThWe306RvqTaCy7IFmZTZgbnU4
uzWW5gELJNdkc5CYH3wiE1Xe9li8xi59BZhZW/zqajNJyYTTpIWNWkPTPj3082ORi+ZWeDHEb1Xw
yF09iWVJY1k8u0Lv88RtH7J917OtfDY9iuqxhAmBmriLPuuXKCSx2/rdkbJRNbzhiqw8QrH362kU
XC7n4deGV2jGIZVj6hdzBP7SjQGgVSTPgGtacx8jOn6W0KcNZHaQJLakxpzL1Vmh9TPUloE57k/+
Z5eOri4rQnS2vlg+V574sD25YNCHx6Ile53Htq7OFqm0ICPcBtHK/FAfLkZPD/jKu+icy8ayUczd
J21igfLTEFn9mkBeD5k+9htOb15NbYnRDNCJ3Yrz2/2Ac3g9lWWbSCx/gfrHC7DIXACA0XWLJuQE
ouyJm0MdnaSF8mBJgphmTp2fCG4A3lQhLErdC+uCx8fAElc1zgayuQ8fE7MXHZT0dCi8EZdWYbY1
qRFjT3jTFEstTtFWewa6Xb5HUVPgjot2Svj4TzeQHkJ8an8zmrStcY6IvemeSewFyq2OkeY96spV
RUJRThTfEnxpTNoIuqMhwSIaee9dWN12kWbkTJ4GmuGeIy/spCjWFH0Z7rD7EPW+2Zmch1CbIQYq
loHQdKFOQYEVlL1c1ujMDo9X4UJ/aLbcIYr6Frd+SvA/2pv+aQR0DRqOS8d4ZIoV1SIkU66+vBiU
a1czn4RuSNmO7IIpYzB5axvNxQ8KOi3TRDF+UmBNREJ7VOnXOTswLWl86JVjTJ80Oqirh3Iv62qV
d7KIEC6oaT6LJ1SeaSXWPqrNsgWLxaTFqnMIXwhjRf9auJEWHXCSDrOLz2Jf4rOV9FfQ+xzoeh8d
3VVYD0VeqAiG43AZlHEtzLf/UcTJ2fKq8ub0626ws9MyX+IPXWiXw9UKjwC+BeKaszwrptBu6zWN
+pfjvGsOYfq/StQNmTwQNAAk36xsd7WTaUNSG0MYNPwrneOCCvVhEWpe6ylZeCK13xOtUUiO7/Dt
uM+++E2cCJWn2Ji+KYscWOIR+jJkiYG4/6hU3FU3D/bTJXNu4iV0qRpmGdhvj29I+Cznhi7ssOja
Z5xh1nn4mkwU/cha+DM6gi7V4v4SEbPavAZ7KIBov50fxIalmfCkSSBt51Ah2cKpudEWhSp96167
hdSoReNzGNmvuvI+oOc9cew7nuNRJ2CylY/ShtQvvnyAt4/tzzDypva6t6p0lX+Jsqaz1LghGsHu
29zg5oHcRgSI4R7BPqmFv5hGG8ItGYWiLdml7lUsLTlda+SMUGPPiU5/d0zeN07HCes28JrJZaIC
+6eElrVmLyUFaIS/w1O9u+mukd1D5eqiyZlC1CFO8V+0I3Aee5/DZ/rC3wUsfZRq5R3T0v2PgHql
UtoTvnCi3qJSdFoBNZoEhzZ4F5Sa5sjCSxXnC9rL0U3nzaAmRZz+ATKQ95iTs+ZD3jYejH/fg5Wu
+AFBwNgQVzO9b/rOeomF8/6iEfHru0S7aJUMKIwm4E3Los3jAQNRXsJeVERdPX4uIB6oHgmSiWDS
uOsEqRO2K7TbFTsGtnJbAy56Oo9xAkhveaiZ2by2+YVktHvBlv/KY3Hm9UvEDN3XYvEf1pOgLSEx
VMz3aezpIow4GCSLUqyHLV3dai6Cxdb2G8R9MVLWXj/IZD/mU/VImqA2M+57iOUPNkguxOjFnXqQ
2kbEanGwvfCk9i9USTlLM8zn951SsKYcVdqcnfVqefG0aCxgAqALH5j5nhSC4/GUnnncPNubtSlr
Ibd0V0hVCGcLEzGrTTa/tInD/V1fC6dSS0B/u7eZ254Isa+fVkAp+S7ek4gA3XjnozrtvlOcna1E
1Xr3qJB5z4Lmc6ASg0TPmnWxsJVYX1+p43AerGTIiFveKn4WXQaP6LWw6mZieqJj2RYVt1luT2Z0
bJkGvkjqCKcRw1pXwqnvAJYEr1MIK+1ZZI70VCAiLocgtB/ES/j5srhJrRyzRiKyus1GU8cw739D
m6kj05p+xl3G6bSIVp/dnpiQWbWLtfxU/LBJMob3mvoVXgqffPIDiWAzsFm/UxqhNsUoyiuMLMQi
TxwWvSQbAiehD7M1yFjXXJt2EcUgJM9FBUIwE7VMDmv5TcxuXSAGtvvlMPKuc+ufgO+PLjB4/AWR
kQrXSF3MACRKVOx/cbQRg2Lg44i9SP0koqWlacunRVG9+MpUx5kWISa90S4MTcXzHIu1xqmx7aXu
kArobvxxHblbA+ObV40SxCQRrOrNsViUdPgJX1WB4a//O+o2beVWtHmULd5h8fvb8PZz+6Ru2nL1
gdq2rBxM1TYTuKEnt2hJcaHrVDstU5O7iwDkOOGvWBGd18Y65XnjuoK1ZYRWRYU1buwUm0MJ1juv
WwCgqzTlOZm0Hu9pYduqwh3AREMREdBgJ3eNPZlIV3bfsjQ5LeyyIFFaLIyAu3lAgw+sKljbwApW
86J02hRB3uQC9/XJRpZDzpQdIP41WdRRmRMG9apuhTSjtujmV0Rbea+yMM68MBchvgNZjKjKsnQd
FH0iGkK9BXSFsMJqQjxS5qtRbSpoak+Fm+BuXDWUi+iLdq9DelN6SGIlPVsMx8utmgFjvpKLxoTi
CtVQHUfTjOTdnBlHLQHoy94lBk3rG14L4OXi8hPkPplg+BtuuEfFbHvYw10jhMIqdNsF3avdAziu
b6lvNHdF5OvUoaJm7Aub05X7E+BI4jN5ru8GOfXMYPcAaCRksCgR7RPnnifNHXKv6bkBDHQoBFDb
bbA/7FXJ9JBKDCEnFXlKgepAXp6JMnS9myaz5q8AUR42seomVy0sY/uir54DTwDb5tNYexAZ/5CO
+C4VwJo6xkeG1+KOVmIBXEm1PPsvTTLqLb9/faMNmjyATbT4we6dyOk0duG9GZXXC9XS74jF580p
MVFrSabT8eupkjFL4SrMnARJt8TUpKtXFOEWG+hKW3HLACtMmIEq86bfaUPKtHLVFOCYUPORSHt9
CUzbYJ1SoDggcLEV+1QLH/ftxjVJyI1+uNhfB9jlMeHaa1cIVUx4Za1IXFRTb/1mjAIW3wVcfXUg
5DkkhuTuBeVmE+C0Aecy+6JkKws6qCQYCfBP0FNlu0/PYx11soTq591pJZ/pXXAoWhsNiwGTsuqk
8euvbV4CXADY88cYkgxcx7/Hcoe4wbANPC2JlvL1ESzdyShhfswLWGaNWUp9uyajpIIG95Zxk/Vu
6ii4CBEE6LfAjmWDnyhFC3eN6Kb7frh068qyXvHms64BxFD4F38MrC2NuIC3TNy00GoCEwAQrjas
9c/g3TZ24/zD6tHKNvTUU6P2emJ9CYlNuB1lTPgvreSTmqNuzWK4wazqIE1FwYGoVc8dn62dO9LA
u53BgUXXqK5gw2xkUEuNmBMIxzrFBZeujefEz6OBQQvtasUbrXfMqo+WSdc7NlP/svk5RNAIaPMo
Yukz5/e4hCIIpXKheZ/2dletU9iTE1eLo7UxMF+Cpsj+vkox/Kqds6aAACGVO4YxaZ+bl60VDsjN
yATVCCeUT8d1OVPr9Tm2/p560uqMp7MHwQBAr5JzSSpkOq5yxTrqgpwTqE98Yy4ihpGfApw5/Axu
5znEenVo5QJ993zQk/24aF5iKHkWrqk3Hhq/Y/bBddGTSX9JxjX7a9xVa2nrunk7VVZZ5cvZN+hw
x/00sP4ACOQaL6ldVZQlDYSJLvImeXQfg0UGhbf1j0gOPFvfnFTeZCSf6CwJEMWm9Q/fByLCb48d
RGsjYaQEBUbO8V2rHhylZRm5VvEdefKgk3p37CSBA+32Yd911hVxv0Se4NhlTbxntpWsF6zJeXA8
yEwaFX43yLi3JeO4sFP4GdTw15pmDY6U6RF0W0xM6T0fbrLav7twr5cR0Yxx8DWkgowvFUQ4V/Lz
x1uWmYcKNRwMvs99SeZT2WzwrtgOyirFDaQPp/HV9M7cizws4H0oDBUD0PIylaVZQeO85kJ10iFk
/SvO2Zdunwbwlm7XR1Lm49pYYgJeA2RRMX26Io4EJGjIdIF2wHwDfcdBHJI8aztrx1NwlcjPQh0x
XJGP3+Sp3dFsW10+HJiBoAI+qC0UDmiWl6PlUEfmjejB2N6EXa+wHQYmw6YPt4suhCQ1+7YCZVtm
PiEdm0AwsWqSlBSMNejzd9gEsMVIVCurAWP0YO8t0wq25AR3uqUulTZ02ukzujLAZJH+TS174SVX
K6VVH/FuwTIXaF3Mxeb7FGQKzJs2oVhBa+mI0Y5DB8d+mOQ+V4RhVPw5YsulAbqgBs/vbuLDogUR
/10vejJTVj6eQ5AADTri0zmGfYO6nH7C9xJuy+biJZZPpWodQgfOXgUB6pTL3dpckYH/PLleAjA3
pM3gBAU+RSiTCR9hJ+M4Y7Fd7UOKiA/39YSqfzAQxWSCcHPJ/PFEUUE5ibnRxFJPCTedHPPz5g3C
nD7XAbvgoYxqKZsLgGAP0/BGbVgOnHHzR2d4RICnmqa0rAnb/HuPfrrWL9/MpI6JPZh/9LyyNDMF
r1vIXSBV5PTOaKJeYC0RifzRjzNKFyuMcw+ruiMQsrHS+Vw/lCc/ZDE8qnovXQTHULYeN1T6P81Q
iqHxY1C/bZ9MkjRAtykh56ipXgi2uw8RQ/KnPTzL8+jItsqK8YUdeDnS0Az0vTdboNJdQHh7YDFy
Br3LKQa40sOZ4MWN1QOKNVY7ndbSDJqhU/VtfKg+57JZstQ6iRmh/0VqtAiUfjWkOHo96+VeH5VS
6pcXKb1tiNFWLiyttmgKJeMP/oJJw4fyqD2ct/sVFx4SN6nZw2N0KDQJhnqPxkJCjikiKqUw4tHp
z0alGsvqm6DYIXW3ZP+1qCSzDz6umpB9LBmyZsM83vqWUmhQYAog2+QoaCiI+R6H+VWlVrEaIo8y
MmKwXyRyCOvDiXYKb0m9mi820EqGTEVH/bVT8KIX8IuloZejhqYhl+ULq4Iwk/xHCCBnsCGblWcY
xodSo7pFAMkwkaLlIF3c2Pjr1ae/v42Y9z0M5E/obKhCTW5EmHGY1K+a/fvsDqsJ9uPvEhYmeTMD
UKCmUNWvZjQv9X8l8Mi/x9uTB5vKHex+SlMMZZorTdymK+F6fy8DBhre5VdGnRWL3lmW75rA0x8B
8LRxMFdmfZ13tvbDjyRLLwI4AJAcAkvvPZihNPG7z99lVdVwi661iCqwDxjaWa3cQG6ZvslTrc10
ZZ9n6bHNJ8HcsX297ASbC3y/2ZGl/tXE0bPbWfbPwjwSLXWhQ8lp71ywRIvPVtF5bfEfo5Ix1owF
ilB9Ew0FFfa48zHObYEi3DII8pLA2p3LP2TTCOlnM0y1/UwPbF7oE+sr2r5S1OaOT35IpjbxBhQ1
+p3fyXIf1AXtdMHF6KtRAQjESFAtix5pKqPzbxwbBFSiy/OhGnznL+mDXu69wJ5pxXkfDI1izjsh
Jgxe3r+QwjXEbNjAdnir2wSdt1QLQlWsZC/PC9Gul3NfYXf+thn8qmcFatbM8+EH31anOj4qToZR
PPGyRl4YV8EEMRZSlIlVjTYnCO6Ef3Y6LCUxELr3dDPV3B7DF3tKtbcmTJe0cVXA6mohi63g5d3N
wDbEeCV6lZwFPf702sHRXz7V3KtNtRAws9pfMZoTJPoIy0maiYt1Q7c+KzjnUn28rmEKU9YES7fj
cVB34qqHgoPnVwrVinp2LHRVIgtSF/YkH2F/CI8Rrx3dBtNtvaq4ETqeP5Fsj2LOFDB5Bgaq6MjS
yPTrn2+XQJNUHc4l3JIy3CNoS499KJD9WZGNXU6pJGu/Kqim2VUhZA/W25NdHEUGYbTnaLvyFQwS
NQPZ1lfpUEq80Uqyolop2srA1iDCey5w8gNxqmPFzL/acV2ElAvuKB5o8NA3Rsjc/IJJ59nHlQtR
LRmitKSQK0uBFuNfYV/GL0hn/8hdL5NzBPjSg80oeHHudJSVkFDW3j3dZasf72NV4ojCatPGwBG8
E4hFVCoa53CKghcTxNQlaqzH4NXCQQcPimTVKi5nLygHJGFbnwrCSSNTH8hcENxKmSxbRcW/XwQ1
89I15QakVTMy9LJZe1U8cpr+zD4g8HEu8C9OrrZ53WQBfFNXY6BBOFTvGNrpeVOZ4jVzXAckaGX8
4yBHZEu666/GhmJb/D2BRmeHQs9pBPbpApLVMJvvXjgAdf2tgbCbuF9fIf0hTO4+fdsDnXYN44aH
28OSWOX2q3at01ed65PV68na6iF6nKOd31NidzqiYUdXfO4VQb/1tEOdBT9fFLw9MemkohWp0IXn
yGRSltBDzIgkfnTQrzXgxRW4L8ciM9rl3vicawYUimmnXQfu68ahSupToxXjLeuQTznLK9sY4eaH
G7bo8jMTAMJnDZBlRMxIqg4W/AJSv1cahrpVjijWWItf6BPlENcR3k6ahfmwOmup/E/HkswpemLn
5PMNpFgomBjGzv3zAgLez4OMh4iLnWXHTRvqqNwipiT0GjlQtD+xctVesUqidMTukS+b8tbJEPkk
wZw201zBzI4jKgMoHkDUu96znToCpygl+V7bL/Ar8QNdVIMIQqnqAcEvSudcYgxDrt20Mn8ymojV
f6kyYueh8j+Mss/Zgf2R9GMio5KeNMFXCXXabgc/5dfcpuFywbqrPFFqlSM8FlEiPz2xxDaNj6JJ
scTTlGmdWQ1/XeMbZRSPWB3//Yee2hlwJ1tFPoZXR4/l8XqWhfCiBc8Tr/Yw95uwn7fYY9xraOoA
awMHyA/Op+kYL3+qs5WtxiRC/pzU9mjUuESOFsJka3mxFDS9uwjympe7+JrgKMZFsxPtS9Bfa4Jb
X7nVaSQmb+ozeSpL5/1Fco+BKhuRnPMJ9ohpoV5+c20R5D2auOtV1WNOsKcu/DjaxD+RI0M8i2YL
yuFCDDRZM/rBLj5jXd0QvbJrbk7A5xdIltNB5GAkdtWaUCQVlhVJV1FHBaquh0vD8+fjMZeRfW0b
t5/I5StrtQG1u3Aj+OHPDYubvI8C99JXlDATmScJ8R+7oJqmvOvVnaG23dK/WYy8za0t3zqNLWv0
1fpieb2xPLWSswm9bxiDJer1wcNB/HZFaEzLaK2qhea6f5ij8SlTEygIk8BLJEhNISZQlOfqyOYX
P5E3sR5R98U84NsaSpUQH8tYzXYAI7+X3GPEqcb0IXEJjbp80T6ZeXG0tNB1aVrm9BClyMC2hBzx
TafF6O2SLE0naBU4gvs8TzIvGlVXvUWSgAfpwobaQWJkMwkCc15UBOWC6/q9kb2t/Cw7zqOCBDjB
3kwvdF99CZ+kUX1tobemLj3eC94yu8TBuGWEXAGMGBk0rEYZ50JyDdnjiR+cTIODakz75CgQtJD6
K5v2kIkbZBQBv7EDHe/hEShD9oljbtivXO4SfV47TeH2UBAhm75W98xPIJBmvrfHt/WafMCbP2CJ
0JWae5nZt10ndF1G/ByMPxVf9sGul0TbxMuPSdI8HVD5B+Fhb2BSv0UlyXnd1E46uQ/xbKal68gA
umHZ+1lk4jVjaEfaLeC/lUU0YrvTYiVtHrCUGFWCYsiWvQpS7di77xjGWhv2WFPnza76LibvPIQw
awI2FNT3iN5XH+uyIDSm4Jk/pQFAXT25qk70NlrQV5phl9ZCUWhykOh6RHSbgKe9rf2mV6eKbquT
a6rj2umZb7CQ07kuOvW952varvq0Yzjtgy4mMqbYAYkpVO3RgkrDd7TLUcMc5UlhvJoJyKslJY1j
4XIulTpn4vgxkydj6svD8DT2sKDc7zZ+D6sQqtkO7Rray1aogtvhyGRVGAOcQKDz1dePKyPwFtfs
0ibn+kccJv70zsLKH512ByikndonfYUhmBWUjH0HDaEgkg2lrFLz1QLsKH2VV/WIxE1H0P6ZG38R
/bBifT6AH2zrHqQp1vO/6Ustvm4vNJbBPUDRTVurJaRapR1zE9OfxXxiiPL+fmmoQlR7eOQHX0Db
S/17CyBjoxl4cFtRXtFnOUjim2PK1nJciaw1W5poIWhJvQDqoOyaKzl6/7vL3HRNCIpf1rHTPvFE
kFmMySuy56Q8XTq0M9EOb0DcQMo8mAyxyqdHnYiK3UmsL4oz8fXszvPPEZFRzVZf0R+GHB9KAQ+y
6Wr8UFcMFj/jOAdBkDRtfsmW8fHv6fIgNg2FUgdLs7Y++sh6eATu5oNPdeqN19gf5pKZ/B1fx4o3
BQMZKG1Z6vb9pP8+r7+AEVGMFmeP8nSFSv2ZBOiQbOs1uqWONfU/3iwtRdK1ZLQF2pmTb2MrS6Kq
0m42jGVrfXFCI2GRcDDgfSWpw15LNiB40z4zf4fHugcevgRho84rGvL7qUrgF2TUzfU1AFQF7DAj
h8grE1S5JV7qjxyusnKrJSp+iHC9/aGpnl7vQehHE3tXqbf2aQutSLYkLwwV1nv4DD+FRf6gXJIi
V9HPlzDh8NaQ93UeK9rKXHHnYLCSNUYozu4eQEy7t0fq7ByGN/FdZSHs4l64ucOS8XLJgeDU5Kwl
yD/ZiT0/12knpaq5pLE5CH9HldcgHQ30II9TnXoaWxwFvb6WkrirE8CV2aqjTWuL46Jtb6j5kSAM
UsHZmIGny0Key8ScW6/Pf3J6JiO0ItDpuqDfam4DQZxCbTdr4DW6NUcUda1hNpbVpEGxs/PD5FNT
XdtYx91e/B5LmD3ldDi5auSZHeKpOly/wzcsXD/fGsoRD7It00uoUfCx+OCDy2xJHunEJ7PNHRt+
Ftp3bcWIuff2bYarrXOc1jLNvqMdvZBXF8tCELLRVq49QdV/Yno3vvwVBhvs+Ih0A1OTq97c9xdJ
CtZSz4PmKpp8ilg1vbsDaz4WjQ9BcqAWhAh4TfgnCqRvuLHk8MO3V4Gm5DJ3YF2zI8aDmfmCOMJI
tIdUtOuNRERXy+hekL2XLkW9ZTpQGTWSDjX+7alXKhLBPG1MPp1a8xEqdPwdog9BEIWohEn2LV+8
5kVl9XqnbakRO55RodcAM1IO3ISlSsBHSShzdxbNYlzEP66CXap2/OQF/cLY0NoYoPKLvTCDqhEo
eDNukf24HfWWUqh64Ay47i7gQyxjyzpjaE583NTEgccO8HmkKXD1zH0kazlokLd7Gk07/TXqn4/u
G7TdUM2YxLJOetR75SZ9QJHYygWvMU5Sh6KrYKY8ZUUL6BigO00ujDxYMpWZeEvTpHjDM+GUq5le
BHl3fCNepPatHvZGwJk8ZUa4jpDaSJnFm6TocUBIbLeQuJLSdh0QFL1Qb5a0AxZULOVquEmtLw22
SSW8IqxnopRwPOQTdz2FKgQZptsCO+m6J9mygCSBfGk2VWkptdk49DUVgdZGlUX+PQ/fgv3FXK1I
gPUnCWalDp9B+RA0ziCijRt26Gz48SEva4tJ8/kfjcHu/DoNnf9A4OELcHO8AykYx528XXRztH+k
m2jM5p+IujUOb8JxzHZoQM8wDrhH9MsOnDPtCOwVaTCq9Jr7K7LEPipB5MAY/UbfX4ujEvI8qBz6
lgrN7W9HZDLiIfNqkWeeNkqYErW51VYJTuw+W9Ej0fhNTQ+Ptkr/9xxWsaiDAc2Sd4QfKBaBBaU9
NAsa+4kYDoz60MaiykQ8qQNBNJcoNrR+GDnnXwOl0rxUG2a3W6AL/Ia3CagEDGZOJevedABSW10H
DIWdwToVlCmDFc2+AamWPLBN/T82f0q22qgYQ0sZde0JnT30x25kxX4BEjDfC+qUcfIDKG1roTZP
wpG9m5Xm0Z0SlL8TzZ8JL+o687hDkwpiDzXH3aYQN47UH7dhyaCuja+nBiWVxCydAa+bsYUqiupL
nljueHgauxPDARZC2shvp92ZU0rxg40zfn9udcj1RxaxE81rL8zbrrEFCKwUwbhSFXnvgS7Y7A4w
0mK8kgZu8VxzIvvcCMfmuLHI5oh82+DiXMKhcQsW96c6v1KaYEPee//G6k6HWlYMLpl493UAHIjE
nK7mnRz9Eks5WZc85KKeI3cRq/uIgrjrQw1OXQW4ffdnRmViKd59+Xh+isZ09pLQQ3Zov02g4oOS
RqV4b6W7K/R+//xlQITrZ8jOnUny3w1rf6uVzCF0mXwleEX8XDN0xQiYLkzEz980NneIQxo26WtY
0Y887LukQu30AFdsPk4yZEsA7z1YX8+9NYMx6zogiBp3roxcuW0ol9QS7yzfsmOA+QVrl84NA0Sv
jsQ4a4sWeDoarJ3o9uloCdjekTT559zvVIcZ4Gj+L8YmcAYi339b8t17Eq8J+jFqlddeem2osOPo
QYj4/fe6V0kbMe4d6V3zWb0eoXHSRgXabh5e8cw+X8L9OYM/YkGgiBbW0YCodmT5RAfIR+gmg/Z7
CbLwd6hJKC6OK+TM+p5SlABGathQ+HOMVe0/gtDzIFFtkeBeOvGkDc7uoIUZZeamf97+eygB+FqU
T3dlnRk3EEsk190Q/yUkQLhE+ipRLUkkYhyTa8kzkNtShwmyEdUX1IWriA0ZAIt5Wq9QKHpL6K63
+vTB2XHDEam/EzuAt5EBTQbTY48m+NE6fHg88guKOE9eV7uwkpjCtbf2jx9ZOIa4WukbenVnoU3V
XvE91KLfkFtgzXWvLAS4hcL4UtoZ/Mp/GyQeP91V5+1JuSRjwghToVmseXLD6ynEvLCiSv604oaR
+pOnsCnYHAMIqUpzLmYaV+4ynw5U4UY1NEtIgu9LxPKN+H2wYOjZlDk0uPoOwiE6kTc348b9oLQ5
s82FXHqVWt5pviCS8lEwow2x1+VbABVJDaYoZDEt+tgZKJqetnozR0hBSnT+1+Mr3Q1JVCJwbSsJ
5o+UpcCkl4ltEGlIvx8iDJBFOB3EIpV9XnU3xemZEiwZ9u7DPiXQuuCsAs0ANpULzI5U7KsGD+dW
g1Kgqj+ck3d4ug+vRetOGNmkt37jL0RZzrxktwazue8exPW4YkpfykeHJIJpgmatz93/+U22PB8o
DRnNaeVCKYhwkfhmnCln/mDkI3REr37lmW88BDe8uraw5qfZnZzIMfYsxX/D4uuBEb6z/tE/nhUy
k03x8vO4AH1/0bnfuHsNa734lb2Mk61UHfYv9gELFKLwfj3gx+6mODPr8/V1258Hau+vDUiM9ek/
9ukxyYXHyuMnaoJF1gM7xbcv8UAnJfvXz0fyJ7aZ4rg/X3Rj9MimLy5CebuhyoB+qM7EYUQxvyF2
SNx6u/N2vv9nh86EBx/WSQp/jNNE/BABM5s1S05yclwmsbVN5bOh8QIT5Fnw2v4GjbCLnH8xeyfK
UXrNu25ONGojk7T2qNUmBuoKUdLfmLjeET/ACTlmL/FIyfS1BBJfKABBz4LdZldVmp6E+uv6WujO
oTqFHz9kXL2sB7gQqPXIEdBYKmS2KzNn7x9RhzmWhVcVWXd8p/6bkDmo+RZPMFuN/6kqlARyYCGw
C/iIV8WEhBf6tmHkIY/+c/qo4A+21G7fWM0HgoSKfnmh7jqgash1KWjsk+lqndSfOn0JS2+HUFWh
ikG05NCO7sUAqu/Fnstm3HMe9jC+2n+LsEUIgzgj+P5/9Ills8o2K4Hi0+Rpa9FKwq1rqrfaxjqg
O3txdT1pchCkFlEa0rPl9amxCSkcM9/cPUnPXNjtQGy/iQCWPFQemoHuIPhTRlfQgQPaUtgdteqo
TM6z8T3+iaB5EPSiCACYO7bKmYBEirs58Z0njXpw9UxH5rT0eNHvAqf9YZpcoV3NYhXM9qNh4hls
nXcpJ/O+zCPA3Hrv+MEXf4T0mn2DnNReFL1Bui/gXLzzbSVzaVlAMKuU/LraMF/RNvZd0+yo4EIb
wHct4N//01Aj+2MFmsvXjIGOouXQ8k4ZXjqnyjpUyGmvi+v6JjbSqberLc1J+tUSW47mrbK0dEAK
VmZ/P6D5UTdmG2oJSeQZPxDOSS+nvCBzo4cZOYO6EYpLQGQ/dabzy9Lzluw3RGMiX9f2cb9TsZew
dA/ONbqpMql66PKEm01Ew+QjOa9MumQ4UJ+sTFJAOO1NQGwpev6jGeOVqoGhP8xH6GyAQInrqX/2
A3wqkUS6BvZyHjIutChiJpdCt3cd4mZA881UceEKwGrnsB6HlTiTVpfz3t2S0OfL/rIzIyX3lsF1
o1lpfTW4ebeT0pJNTvKMBwhcPl102M+PnpgnL0N/ERvgkVpTOC8QaaaH2ptAZosHKd+JXc82j2/+
5Mb9qpyJJ/HC1vQwQycflfNq4Lppzog51j53YVJT94T/m802Wq52f0CmkgVRAPPWOmaYimt121rt
YMLdKwXEVrGilhTHDevu2aZ2edXRQZpmSUpxw2Nf9pa+8qvIBHG36Zxpt9Ke+8Lu2tFwIpVlQx7h
fyI6/r01h9pK4nffIlwPd+A/erb69cYXRp8BKbhFv5EHn4I8xiRjqCmGxYxJ7ty8XPKalELciwyn
FOlBjQJ2LDyAVhKI+E9ABwc9lwNAkx9/cVEXOaNjQNEIpF0BuA6HDSGSpkbwnRQYqBhMgaB/h4Nu
zuGAfpqAbcLWdxrNfwgZcT6JXrYxzWCjFecKG2Jp0AxH0Pme4H7ea1UT7o4YQQW99466nRtsJeYa
O/UCmtHR23sAPLyHFXWyfrM+r8oditom+aEphHcrV8O03ATsQChZtB2xIq70mJgbi9MrwC89+fJ2
sE/lQRB6Xiz6WhylOvRBC8ZSukaGEe7U4E0p/zECqmP34w70Ewd2KJcBtaCTkBKw9dt1uYti5xZz
Po9fioUcYn5JRgIIflq3wsnARQHW7/oX9C1w05ZzTKOfWVtn9RzLdMsw6M5gF6Z9miJq8mR3lzNs
mwzkonnMlYwaF/jYEg/795QuatWKpXaVWMCqNHjR0X3zn+A4esei02lDd2sV0j8w6RPK9gzsNy2k
CB4QRBtGldpt3dzkpE476jrxpMTFkmUV7TNgyi1fXVFlxt/Wq+0bNNUzYQSFEf6POIIaMpMxlmbW
5jOa70UKmvmXxNfsGqaQEVGTfPA4ARy5WPtapTBDYEbbVmjUQITQ+CMP4kvAXMhBy0CGaRIYzmv2
toBZYdqS1D52FyedwV+3NBTVvRyOgefORtHthlwoTsfGH/056UW9CgMvERSPUxbhA7CoH6IRwT/I
tnUlR3JJASSh66AB9fukBdRxhPNObd4kZR0OmGNHAgxyykZZX6kyp/FVAV1BT8krcfYLyVGH3d0j
ZoSKrnMIGj+isgkknB6wRbhIRIsovHLhrttFnA1Ac19KDFXaZWeoPDJ9Qad/tGOx0ip4eVD+FiLn
/6T8xEntH62RVFhBKyVH5eLBJ2bVZb1hmle6HOgnBDeXMp2mtIVxhKkJzgLrKApDXNcKYLoqREa2
HpOq+fanACLsdvLNcqs7f4fYGTTBBLr4fMieC5GfZz3eXtz+XQKUhaiX00yaze38pLZbvUGG7GOq
3Uc4AXdMjII6Vah9GxdMKpIOC+0KAn+TFuqR5o6Z3LZ4mI07Uz73ZBF/mnTUhGE+zRwlXRGPmq33
uaWSewLOmzgNgsxDcJr/eU/wnkZH7Y5O4mKjukOvsJQgiS0wgym02UATTsNUwya3t0xxrnikymW4
VQG1ij9jzaz6b5cx2llWmP2phHSesx7xIixEzVaUIQgvmrowYHCHx7IynHD+5Rb9FR+RWu84Ag7q
PWxewhpP9+nYRqd72EKqOQ2+AyFQ+sB3Mk0FB1N2qgyp5wBVjxSKg+IivFlfD9o4LPpa9h/n/ehv
TQDZXb/zT4AbMjyCtamqQ5RVLI3o7397eYzfL+9HjvKVbwbPU2oQ41x1O12da8tCRbOrzoHBnWPs
rK2cDmt3MK4hucwE72gZ+5q5SG/7v46uY3gptGseOlLI2Ojf+KvmOfhGfTX6eOzmjZYc2/aIc0VE
72LB6hGwtlSpNPM/EEcAwjzzD7J2FBFbNISEX3uSVoEw75bP0snF2eK1MEN3OHfuRrYj8z7Pn2S7
s3BmoqNbJGTcixpQckXzJSzcINzlt3JzndxkqvVapP0InmpJ6/vspxWpxDcVWGIPmZJ/QanvjXxo
Eb2cDxDgYiuKJUsMmZusvXvjJPpX9o+ztgHHJOJlmqNZGZGIPFEGEiVUCge66OPWwj26Bcqnxsg+
5M5jnqOvNu+YWhcEQxJRxu+9Njesvsv8AzT4jNrRPjVGt5+mcB5I7TGtZbo82qh9ai3XbRt/GfVY
u0/Xzke3AIwMbVUUPwfByQ2t8NO8cwYyQ4DCUY6/Mqd/uTomEqKepIO8kESnM4a9c+EbccBLE8/B
H4T1LcGVApABo3AVMelcXB78Jw/oe3a0IOR82JvM7lyVwSVf54rD3oQrgwkq6s/AppSWeoWFMw4K
FPuhZ0BntANgRVqntpFE6WBTrUsdqq4BZ4FzPwMAFvEVi8ePd95KI1+EmQVIDkUYZcemWhkAu0Jf
oe7w4xvM1q0UoAjdy72aPigvFXtFUQtMjTz2dePA2ahoSUz4soUxLSKaRGrNgnjQRSn4AvCD3az/
sDjcqVYxhQ5osMbnpzpQw5BbvgSbQgjHxP3BrJyCTt+liTxOW2aEpPGIReA1WEfbevgU3fik4zc3
IsNyk2BsREi4HAsC7xON5z8HZ9cUtNayOwVU4s2+vUGvDD0ZdQRnb1fOcjRXOWmFlUftSo3c/sxy
0mlUliGZI/CYdP5McukQGcMdv1eC6lxmP+x/Qak2Dhye1wMXjiV8rVsoEeiNDKJlH0nM7UxeZJG6
YlTLe2aBHVb3QCIaUz1yohkxOHFjRmfHyoHA4OXC3/96OwI3eRaukz80aloYFnfRKjB4VABJjJPJ
iHGGQc3CvzLzJIvveUNdhAogTa/oQGwF8YT2BfKkPezPXwX2okG7arrrvNxDR5uvcILfXiSh7+gY
WhCpmD86KTirb6dTuZ9oP3BhlWYwazHAlIedDtYhM3ShVT8k0D47BOv1VlpsnuNM6+7oJIk5wDxz
WFQ2r+1PW7f1W0jQQ7F/GPS172Z0UMKW3UgsuHrs95qOaPN3R7Q6l10vaPaplj+wF+lgHQZ6QC/x
KaOhGwwTkbjuBXMVfkNVj8nnVkMySf/Yzou34sksqzM0A5ynwuY8Lpo8WnsgSC3WDGbS7CruRwC9
xDFrXtSMNWsOvI4RUwTDBuubF/D+4983PNMKwfcRUu2PY5pMtr1d2RD4Obh3L0kcAV0J1Nsq04ZR
ZZcaqUf2Netbyh/QOEDkk97DrsbVLLYhB9pZCIlzIC1Kzs36Aq2vCz+CAtPx6IlELsBBDwmqAWx9
kqb6+GU88dYyxhPtzxKU+sFC4DtrPg2ig48tVrrSwh0MEsC3OpDzs3mupLKFuDAGtHd1o4AIHgj6
zlk9NLX8KeEs8wEHKOmMkxzSu7ZS3rRX3lWcri8YGPvfqkvTeZsv+FhRwOZor3hGvNSUAPByutQQ
FgFwoZwLr7/AfEvqHs8T1YZU2DsS9OgRwDrlbsCBCMeixiHgwbvPEa144nhB2EAH2rwr+HHWaFRp
q7wbVxxOLOSkZx3Z23CO9WCvma5lsA3R7D37f3K4KmyRFgQPLgg1QEkapYBtxYl00RIWZtZUnqZ0
Ng+ROjzxwwAjbqdk53dQkfUYFVr+rQ/SHi+XjSB2FS9zSNauNEZ9vEsowymWDXJx1Yd0hAne8DXl
k3hdrHa4DhYG8QWRhsUoOnpxhBPL6vfreW4FK2LfRfYpsQ3vuC0C/B0RabuinKlrP7JsRsHmcjHu
ihBtclam4PN9aJ+dvET5Wxie9Q8g6aZ339u8hRh1qrUqC6boDE9jGgqy7w6rYkfR4P1THZTaXBEa
tS4hwIdtf1i61O/Wl43BrYFmuFV7WFDp6qAzVnPd29Yrxe1rUUxrkPjOudlLl1FMX73eoLxnCqRU
58pZUiZ1BuaZnCgmbn5ypYrJcP0xq9bDmFwxBsLs9i/RtUs5ubrgeZpiEOyv0ZcZwlWDQDsePUtq
kqXUZk/eF7ijIeHDdfzydAmETEdOXLt4+EvnzNDNsBtwRh85AvG0qAgxsANPDgRNZE3nCxWUFtKy
eT/JLOdVnZuXXqSuQ3Q/d/RFJBCNRjkSj4vVZbPTNf9G4YvdhzWNx43+z2OMcrikITDoWeoNJbcx
0TFXM9Vi1GZrdKOiAJkQhTWlKKYmpBD+RYsYafrbBhEoburuXZt9hhgOIdfaEsOEcOKbuaT28B2N
6IbqdR/IZHod1U4Ny0BtRMstqzhiBk9peWiC9CE3h1HaF7Sq++2OlrJbPr+uOKXadRgjVm2Vkb9K
W0NA6mvYBYeIu1//w7xKebvunjc2BIJqzoPRc9MxYO9ofq4islP3nFLRyYjr3tyiOQiUAJ22rD90
oG5p5T95JcUQ8PbKnC0aZpejCLyOixnEqHG9qxTzbNVp/fmeHydaysqt78ACMQltY7ppCkFtJNE8
ynkDS71KO2KkyWNAvMOhOjHkTUzv7c2mYhrK7SpwaN86jqU5ZDGxpo11xwxf85MnXnvHGjW5Wkyj
zfGaks8xZnBGz2lBQOyu+W2xxApukHSF8IP+PfyI5GyfW10qTxAHPZxuZsuua27Wt99dzEjXpdfh
gwt1cJnZdJN9ZM9VdgfaMZlR33Q48C/LCgHlQoweuTgPeW6bWuvE8p0s2OW7m7ljLOW8mJmhNnIR
LcNS30BP+XK0xUtejmWpD2frVSRDjlK6o5jc2ed95DB2/8PHsK8WAJx5z2fBEqx9dl9TGUuVDiyg
IVgjXbO5O5smqBRsSFkva0lBGP2WhrsqWkWuf99zrea+q+O118yo47nqZLa1o4wU49fbQWqmJyaX
w5IE7QqonSj4WjK/eAZkbw3PrWtsCbpMykj7tB4C/tZVPt08B5U+FziJG6Zvhdx8x32ZqlDSM1VX
PFjYkJkk1Pm2EKAjcPv1CYrdFl68egyd6jmEmrlJ6tFg1xsS4bKav/O+9DntQdN3e0AfGXI95WLk
dS2Y5R21Ry6c8hP8lbDvMYN6c+dEMWpelLH8hHgU5XghtahL6f5GSIczj0KquVr3LU2IMMVJE6iD
ApwrrzHamtwp2c1tngWNR7DguarH8iTcTGnwcI4g1ZbAujzrPeuGcoo+WB12wkpKN4xa3XRuEyc4
DJD6/BsaVH1nH3lIRA6ZaIC7mcyzeqUFR1UgsYkUmnCUPxcT1UkQn1FtvbmI85McsPJFjQ6hWo83
nxzA74lpRUAx7ic98JLLkIddtlxsOjtv569m6kp0xsYOm3LhpEPLGJIs/0nW4sw4u27n7heXFsve
wayGvRenFofrfN36NEkB2gS+59FxugJzotvnVRHr8BwhWAaX6ZCQpUli+DPogptoamTa01/B5hQh
kUqlwBD0iNRk3Ic0y1AF3ZYHo5qCtOLFOGphUsJLfWa8yRaksbyscgdxNkp/wLWqHY+cLQhP8Nj1
LYRYxhO5G7EMmuGGGh51Qn2KWSwYzZyAUHMf3Vo6SPFAmKgfzKx7RvdDHfUqvXiA+/tpQkvV4v/d
Q+BJJ+vPKY0uyYVqQMnY3QbA6XLWIeylcwGMweVcBM7MjM8n1CocfEd2aSmN1k8PXfjnRSWNZJN4
/d5rNObGNeQiQjTWHJoSdzoHRdyhQHIXi8+HH0FaKllxBLoqAlwZKluLwAtwi8ozaQcBQWMllYcW
ZO0FZY9aS69x6Kakad2s4xdzzsNSdv8xgETH+BAYHqzpVD3x1fJZSE729Vg7XJmTTmkTK3g0SKJY
yrIdBqKCx+5hvBuVNbDGk3kFn2wPEEvl9azgm8Ii+cQZQb852X9Tee6hws9ZFNpaG/3xnkRdz/PA
FHM5/KBGQs78RMZFUm0aJHU/Sy8IkwH33IAjTwVi1WnymkTsjg5P8J41vmxth2TWRLUTOl3VaoiQ
E2YVnEHByAbEFG91yUpxkt0YkGkAqFF1pwj1sdIVC7beVZi4VNQvEy3RzT0gpCeeEM1ih3fcLtak
AAspRKedYD33ECBxumsUVcXUfm76q+JT5tvNrLEkGu1qlBPW9QGW2rGzEteJqN9hDgsry5TdKQXR
pIH2K9dxa/jQb0U2WWxFWkce6moBq2bHjYLkfEZ+CCADH1FegVqK0QyCEqeJ3xn/lt/8ClcShozZ
WiwuQKQtclQkGTYcwJC9PF+VahwFMQqJ6JEA9yjUiDWRh2MST7C3vzdMMopWYjMcr0vU1LcNLK6c
chq4OVZGhDbbys+dpR+ZO99gOkZDv/k32BabFNt91mRZySAvZyhwHdX28QTXNrxa93R3IjYR4Ihw
kTBYC7ROYd55AtvgjApL0A+fBmJlyunFkiBEQKxP7Hu0r9aGDLMV0kLk6RARGH4pXLdsn69z8hl1
1AoFTVCqztPUaqEPMXJ45/4qqoZs6FS52A94BiCA1WKKpDYoOeREv4mOc3Y/zzI7tTtixGzgQU+m
W7Jfl7ltmM6WDqA3rk/a7tVdLj5Yjx3liPu43r+Xewoq36czuDHNlYBQN3FBozKaSdCda34Kh2J5
P54mhLIFwbYqLId/NVf5y4y/rsvyiAaxN+9kgVtS6wx7nyP4HTm6gHhpUdh5ejiauhDSvUoZdh2E
aGKLyyVtN0AbvGFMahGcWSAia1xzIwBCsKnjan1I7dxZyC0BUu8yDVLnt3BuNtMqllooC9v/WS5X
PMBd3CuiJZfpBD5+kLoIrQDGEsHA0mGCf5voLH5dDNQWPxsxJP8gnIFgUPOv+yBfJ+2C6aMgXOQg
f0Y8g1ylJZlzoj8Z5k4aU8htxIJK/iljVUB5nMPtfdU3ztnDJVhOa5fPq5ZqgUYA8J/jxFjXThJC
2NuL3Q8ysYr+AWcOsnU6sEPxzEnZPNt04Zv/a7xDo25ot93cvBCoFwoQyDC+sk+855LfeYe1My/u
EtzAduE1dvkCuuagUk9ZeM86wkhrr1yCCpKHZEK6bQp7624jBTskhbmFKRAwfaKX/zn5PdyQViBF
Py0LH44Q55weSSCvsWLHbvU3GrY2LaBzHsWhM8LqaamP5RH80HLIzqmGBo/x2P8T/6hH4Drq2c65
HZmFGXg9lwNXDFGgICf2GR2obKpUGAv2ME0uPzMT0f3Bzl70bSCZQW5/3DRo1lXSxC0tBDQ0K8w0
oJ7e6bUWzeZfXw+AS6N4847QWBWImUcPtYlimPlaC/444uH5HArw8UnJJG13kjaOgggc0yBGgrF/
YXS2dzXM+5Z0qSEr9TPh3zMQRYwa5kUmNeZpkLiuNkAapUzPLEZOFroVJGPFM5FMjI3uZFV6zLcA
zzbreQOOrh8rsHYKQOIFXn90TivJfhdzYrSOTqaWJf3v5BIAM14DihIo/94IqZ+EOXipQ9K3MeRJ
H+dDH6nZiLegDX1AMRjI7UgSc0hovO9sPpvigFRkjR9R49zgW0sJ8X53Um9DM+W4W2+tBpAhnaQB
WjYtbrb0L5ldS1TLa2Shbm1GUyV0om5coogq6jWQ/Frdc/sBG6Bpuqq18QaR4YsPrdxMY8ICBlxy
bf1SuuyxMoGZ2/1OBGvd9oer7iNrynkpi3DKkZlA4pECNmldFPB8IWyi8bKltc+xAypoLAxBiRuT
Tw+QcPDpToAypJQ1HNEZrcaLGU6SpetfmbpOmcqiZZRinp4VlUkMvLtS/YPkMEdUaMsCnjljb75i
ERQVMpCBdhYbnb7uC03dHGHblDMYYvPiDL8qre5fHJjpctVQVQaRafYVjQP67+ZKjDN0pPzNgbfw
KFQGakrYt5aD5W4fKbrpxQ5KbYHEM7lLNuOxkYHVyQ3G+EvmCePV7ahfhxy+LKaCgElmcEjK+C65
95AyDN4jgoe1Em8BJ+Z2zdI6qygKJF2o5/3rSRnmhDfoNME1tw1Bxcm9e5SYwIbYRK7LZqBcsPGq
pvdh5DY25+7qWZrfljfqyqtQ4xKizci5O0ZcoYl1BcP3NObTjwykX357fKo6hbQqbN2gTSp2AGuq
/xODOav21/ahQ2aCinRM9Z7X5aPzvZtd781HgVmj2ar2g+A3rKSOMUrr7s85Rrjc1JURO+z958Ue
99aYTFM570iWx+xmiOxXCm2K/UGdnay46sUEVmxaE/35wXtYelqvoPaigyeihyLItwnNp24G63q4
hpkSp5noXylESgQuGd0gpu3zsiMPl3vm5Tj2BwGOoN4RrnmKEmEAFgte1cGd1XAvzFXENA5h46LE
a8znoAoKQBMp6otZM4hCHUxPxnifZbozvYUL1d/NRac2lCEUVTGtWYRE+n0uYCuSu6IYT6NsmSxH
I1F2iZKRE0p1gsvjqQkXwphXJFORr+s8IHZKzNI5s+7kN7Ts+7Zx0BEt+60mDxi+KPXGGDnAaEmh
9S5FFnvhKE4I1sW72xzQ0ZxhWQg1dAWA8e+vP3rEM69Z6cD4E9kYeg9E7ocy7hDoGWrnoObv/VXd
VZ3FByil3SqNcywXTLewscJrHEiZjw6kuLB1AaFG02PIGiqKnNkkDOTN6P1QuFUAOAWf5xYa1Ed1
OYtPsP8jFMo0IMFhpJWCxsQpQuBgoViAsVlusIi5YFP/uspI1sreFREzAZKg9j1M8b7Kq3zxjD6G
eegSqigtv75v492d36xQk9tLm6owo9Igzdl8+SkFCMPeL4UcrY4gtSXKuC9ZSFa/RuAetcPBA2Ne
N/gRZUWB4TsqpitSmo8qo5K1lV9pf5okfdhLNUnEyFgbrlRZ5c8/kMN03viVtaQ0NN+bgzfx4UmG
TpYDnje+WN1VyWvDAWxiTPwcyfb9JnZiZ4u7AJS1sFv3V9cJu7ufihCTH0f3Dm/YdZWREjYACACV
JCDBAKzI5tEArVItx1b4hFTHwzanq0BBdicJLdphTT1E0WNLgJoe4vTUt7SwolODSV3wQoNZS7YU
mWadoC55B/ACUysACJDReZZyJSe+2jOF3w2dJv8AbGbEbdlCqJoAux9aIWPHTU3KdgCFrjHwaFJL
FklCvXtv2i4/9bZMOeuv5FCo1OTuDNDCG9mOBBt4ZHEibFoc6Wmt+Y4AcMhj/cbn4/pJtAPfB7AG
JzWtoWyQ52T2NVh+FaV2JeG3E5RcEuy43iKBp3pBrl84rz1KKSsy+yj95GBrj7b6RW33qbUVvM1C
21vu/kp+jZXlY6ck2Ug4nVY3AwZHoR0Ito/toIgVkjbxE3wY/fTzqA7UrXEI4Bqzr8SCXzYYdeOs
SI77BcyKJBuJhkMmIwlVtNuIG+IG5acMzvV3q5Fx3cCI6PuLzTV3257Uj7B/9r67CCW2KG3k3Ln7
FEYt03By6xQVF32Rm9Ohtawgg9OyHmiM8Po3VQL6LyoPSH4D/6RETUMuWMy6XYbf8/w93v+kH1uF
PtS+QwEgzwJiZZrLqcs3Z3GMeQHtd8Z6J+3/K45/XYR5WlEsP+H/F84Vu5WCIMwFTK26cXRrBACn
WAmjLhiRLz5t+8WAShhl52sS4qR1wQHrzOI7x25E7T0/CXOyn48cj/rFzCZ/faqUJAX2nSBmZ7jp
ZSOSagr5BV5/7ItjiUoxzzThUMuaB4Dlc1Ar5BaxYxxG9/GWIW4+GoXXSfVbgFTgRfGA8hJVVvUn
lbp87WHgHanrOKGsqaWaTNdWta1aL9zcPr3LzejHsJG51wkHW4QwdwbHN2/RwuZUka6A62pQuqVC
sVDWyBWtaGqo4x+6231A4HorygSnFofgY5ZfWPta3HeIu8UVmXrurXdAYr5p9tB9lELndm+vQmpL
NE+ef0mmzn3zKQsQGdNtyUv5ZnbxYHKh9JMLpKSTwpM1TcRvi2KsYbGBiCLq6Alp3ZlM2wFMvbpx
UZZcPms0GWtHyi4c+FTlXk2+Hcix4xx9PQUfgOWgWj62zZ8SZw3PzXkV2QmS52f6VZStDNE88R9D
IzvYb4yvw/DJvbSGZpoEWh1Kj+GcUpHzqiOuTdzDUVnJqTsNq00ygtTwI5qvYyoYPHWe/SxS4PyZ
JtcSuX/yUR8haG7cRfUjLue5ObA81ovO8LM7hq3nPUBrg2LEwA/BIhvdnRFqAvyzfCLm5btidiBn
Q3M5sNGKyDajuwezZOkR3bV1cD8uHK0BP8Y1Hx5O3+3OjMWfVsu+ykfB/qFSEZ3zZvI+hPZykNuf
NsVGsHPCaWIHKUi0tlb3R9wNjt5juc5JprnSgawJt2giTN5OxC17Pu4iOm4J5PvM6iE+9eru+/uK
YI1Q2rhfWLWCZeIR68w4VxUOZJ/MYf03izYTqo0kIJry4TSJLOjRyJZh73lMGiFkHkyT1jFxV0Fl
ezHjGw4guUgC9jPpfalReTg43h80bAzgYMxU9W4o3M/HkpLeANZzBui8DuPmYL/YRO/Jp6pATnmG
x++P0dAuiudThU8VoxGskIlLorScZ+9T2iTfepgbhhL07HkpBosfD3dYqnR0+a9kxlmtoQAM/cSH
sIbzJMxndC72PPthEOlUgDcT3TY3ZeOSJ+SgElRSpYpq9kd8gF0dz0UcZJtS1VwH4wG1GKdWdlUo
6Q0Y70c4wo0qbm5sx/6BYjIK5xVKbXNiY9UpjxZiNnEOdbyEKsuvSmkgI3flAbkVDw7Y8j6hRjKV
XGRX8pLBqrM7HWEDvmtfg6BsKCLjXfdY5y+QB+C2j+h43LHlwpN31lcJ+DKVqkpAInu8cltwtsuA
04bypQ566QAGYZcZ2OZ9DSkys1Yv3X4U4EELPofnKzP+KLNw54mZy7tGpUzTD8Wq4qobujK16mvb
pMcAVEWE5eaW6/IAC8ZJTkwbzuyyillGvDJEXdYcZ5m936hl1eql9FJH0n30CoQPOACvJX2DnzOQ
y1/Du2dDM+I8FySXFFc9eW+M/SlvOyFQtBK5Blcjm0PEfeSIVHCIXlpdA4Q1a0LaZ/zCcaD9xH8Q
ogxKNx3nloSMGlc0w8MZ/d6u42A6YPFbtusNY8HqwXK4pIVjKioPocYNqdsMONLnL2j4XbaiKRmT
uI9HBjctNZQdVE4zu/q0qbHpH/v/evYm6XdnycoV8cv0MLIxPgh8bZgMs0aGvWvFN5JabvbPowcC
TC6L9rVwa/+B326W0PMDW/x149nF+Pbrz8pyLhJ+rxz4ASxAlnXXqRx0iDhyUVFfPavSfw5NdmuG
ifkw/CtQ43dcoafhcWVfZw2FOEXcKpaGEDifW1DjWDg657jwwT30y6qQVgO3ktkzWRtCEKEESfkL
M8XePo8ffAHOTbvIJGBCZwHhUsrs7q2V3OvllqGBgUPBlHz/tvxHcmCt4KuDMHWZUos8fxZoEFxv
FxPCIszPJXeOwIdotbtslYbcBpo/BLPzwQPJMqQN9u9lWTHndHUPXP8m4iZIh6VA385U7dCp7lFg
yg2ZuraE/HQFnv+PaccUVW4ZqHo7eeS3SahS9PHw3KWCjm0rsf+crLaLQiPPde69DtWKgT49eUWl
7gVI59q0Co3AjKuefFQOJq4IrrMz/1ecFYiXJwMFy78TDl34gmwDw3qKJtl4tIx/9A67VO2zEXxn
NMrgfKkTLdRUzrOcDSDLY7RuRxv3pTtjdhJS/T75egIr3DvmItMIZTgEjxU/J/W07GMraVJYnIFA
4S3uysENt9Eblk07bRQNPDYEFq6h+LsPWckhU1w12zjj6+6BdlSW3d2kImveC0K+QdC9ItsYjcz0
V6LTwyb3allpDNdj2Quov4RfUY5eTdKXxHnWJRFT4riKD9nGMIBMr4A93ZMISZtBEeePyC8fw49s
kriEmGFbPzFBG8kiX4II+jndUh9JqcFTWEc8S+kYI/t+M28h1T/w2VXY3V//KqNa3bo38JIfe4Yx
MAuV5YPx5MpAjkL6vG7H0z/WXJvATmCVUEOoAwfL7A/9cP5+zbIhCgNEPPGb8rSH86EIKLQv6LXn
4VCFXiFN2oLvaeppangEjqCOs2Iv0uWM4V5SfU/GUNS7SJGseejnsu0WOVOjOcAKw9gLTCcsek+T
EyCA3/6xBPE3YiT/TLBIuTDMVJlrtepXi4oRRpVIORXNSap8ULfYjvH4KDBG9wwzOW5usiTTPuyi
/x21oRivAwiE6UZozV0Jp0M3ErPh//VEKWmNO1+0/5LykXISDDecJIyFH73fWH22EUpIhrka7Jnz
9I40XNqyCheag5JZTR/CN4zzp7H3by2Ty/Hz9ni4QsUSRDlVm13UDf1M4FBRY7hvsgES0Ci3/opC
GNZgNYU9375/0R+qRIfWaYpO189V++eM/7kM1T1BmKAbT+kAnmxjWrX9EoaljsqXzrkXAFv/u1jH
X6+1zMLRSOj0CjF+FOiaibwTbignOA3Le0vOG924QOdTeLnueIHr8h3oE94MbKqJGKGSgj1/W2vP
bnMvUTUIi0HT41qZdZA2YqM3GB2ZziuYDUNgXg0oo4HkUTv4q75SgbtvQfA8HBm2+Hdep9UWKope
Fm4jmN9PBU91QA3fWlLscrza8pwG2G2sZKxhl4GEPD5CMmqDZmXWbKo8xVb8ign0D6Eq+L+BdHZk
pVXC2PU2rp1uo+GradakpWhVuTG1gMbVRKNtyhVjre41yQglIpjoal8AwOs20uNL6GZwdiK8/2G5
ZfQeeajVBc8jw3SDN6dsIsa4v9RNgwdlvm9f/fNSTXtWllicr80GuA7hyJjHzqSUXiBtqSFXiZsb
5mMEpsloCiAHPu+u+GHOJb0J1dyPv21NKHwryKKmc38bRS//ano/3ImFo8r2JL2YNdo0IwxNZPs+
XOSkAEpVwbvtOnuDMv9tiGqWAc5sAHuSWB16v0oCOyIlywNBRanawuDlnPMKetKVaGD6STnAyz+Y
1s6of4PpnBW4aA49rJMA/EupQpNYxYhd+YGZFCx0jp+LBMsLHVRx45T217WTVNkctV2DTctzTk3B
EoQ8PjZEqCXiGulPlDhuzMUvx9oG2eXBpV0XZQgksZvm17awDZfj+BoAWU8ky4Cc8uqndOu1RdfA
1KbkSkVFVoNVacNZNPGC9QoDl2c4NatW7Lz/CFCGIOPwQ6bArWuSV4kLxOzFG/mwKbeRXh8SmQKl
WUc/CPLkJuXmjf4QWLliJDCTZsHjCsmH+xBV7vBjq8BB5PsEDWNbwmCnJ/U/F/vTbnexnmRMARsB
s4+60LEt4zn4CqoNv80abE3jPIYgvqabZffy82nZ3JzU7paxM8a3ZhhB36pojm3l2OOwGXHo9Z1A
oTn38ldrXSRvyxQwqrdNzj/ErAB7YPx/pcfcSQbLpCzBCVgnTPetTcl1/3tqNRW2hm+yHKm2Fhqm
yqY9yTq1XK6tlktmbDp4yD3rY5964vI6Bcl6jXIvbIVQbYnOuSvj4TvV4cGjp7dcRf5s6Ayd+ePd
JiLpw4IwEyiulV35CDuy8xjTTTGdu74u7AFjd7j98gYI/OjR04gU9gAvEi4XU0NO/9yg/rTxeTpq
DemogtVb3C3fYQL5H8AejKct9yn7hgTnjjH8xXMRElvZImT5f7Lefxr833rPJ6YIYM0WiGVssjda
UcoZGVeBOcUvVRVoFAZemBHOjPEFnsWtrwccK6ujMNM6xD7TsTbQjhUFk9CwqHOOmxWY7EIBvL+j
UL5as1zulbCSxOKgJ0N3gDeFEFaAirz2C4btgzjOHsdsBfsBDAMb1PhmqgnY8dEbuHk3MCOivfML
38N3HFW6nBR2yjYH14vLj3OWbEfC3CFjjX6HYW2eqpjOkcf8MMp8luoV9Hntj3uLU+n7W1UtxqD6
v2AcODHIQQjRCFmT6TdKKHKEW6IspfxwxB53+dWnIY1Hf1RBZayHLJd3JEDwBT4LiMWTafOAGx34
raR/0S37FvoC0E15Hvr2u2HuBEjlCm6dGZQnzlXSOiczKpsSAxa16iOQnFcmAQA2qwjHM2EiOFSa
fVudxf9vZsLPKeigsz3pwf+NududjpwBDOcxPbCnNmxtZ7a8e3mm7tbh/Fr686Qb0HMKopI0ii0p
YN4f40kDRRXIMR1NeKXsaQD89Nu7UK8iVaeWd+EgTeJ0HooiS+AvaNICHSdnOxG03rdSvrYzE8Wk
0zdkSx+y9S5zl8kfpss2g3RFmrML3IN6KBAikMccVEEqy48B5swNbVevYvuVks7kqHruTyq/M1C2
TZNI/ESNo6qFFhOVc2h5/sC7C9ydDICMbKNVzptQzJyp2wDFnyg9iPzO5FAmbcpdLGfBXDyG+M/O
YzSAyBKKIGpt2KLjom+qhHRYuVWd5ujPz+m52kVQdawwCEOAi6JuSV6Sdjml7aGIo5ZCzAlsaIGQ
yh0t46ByC4+HaOG5bgK9sDBz662xVWckTR2nRv1CzO2bWyWH1nWP/oR4IBtRmo8fGwBH945vIDOb
2xOXI2sWlg+CJgatTBPuS/Ik4yQFPM/Dr5F/6ZC4ImUCLBmPn2i3wQXeW0MY9X/HJCROp14axrZF
JG+d5dYhbK6uGRQid0OXmvVM8PFx7GJ6Qce1mMtuW50BOPlqjdWZRhbMDSLWvdDtED9NIwEtLdqG
PTEMZlWyhqW3YhyCTKhfpYUX5CNSi3PUrAUVYYZM/6DJSI/3xD+7ecVrfmCb9tK5uQjiuCMRm/2n
Zici7Jgvd4A6It9z3U0AIk6TL+saauP8dZaQmkpM+LtQvLmDKECnaIfVjmB5meP2ue+Yo3fFY6gG
au+qMGbG+sMPsKz15J6gUMwQYKrocNflMC05QcyTQXsZyrAkpYZpV2+F5EbM7Czh7ZQuwjWN4jYl
zRymN3vxsSlrHyZvSluNZzCc4JA+3178YqJNok4aoretYYNDZNGSE9LLnKPtpAY33mrNxpIaTlt8
vJsz+Ju/Ynf3ngTmuK0sE+3tYKLINQay4kPe++cWhyZl7XFVU4ulEzHhS2qJ1eYqlE4oBdrlCSYS
05yjqWNyvoYol0ME3SeuhliQ6bWu8Lm4WD+agiyxZaqysEkolPoAeQICoE5IL2Rpn/s0e6kC+qjd
drmIZbXZFXccIkezszuxe/QSmI55OFGewOFv8gfLslXmp8ZmFgYr312xpd04JLm+5v8i/Re4GuYm
UK0iAtx5dumgnatjxoudEVCgm2w7bAmIyQ3OBZ2vYKVCtiTV7IhFXTkv/PdE4oImzsJGCNNm8c8S
bK189JWLR0F9COS6CrdqLeawN7zxobcoaBw91tDnyxt0pCCXdWs+MJl2UbfOdhgRerHErK19BEZ6
FIzZ4XCvQJ17awsb4KqStBV9skEhlUBVCOJyPtbk21v/SR7M2lJ5uo5kC/VUG3rMd7jhTSTvmnpK
6phf/83sPKVtux47pQIuzi+NNcUEEAhK29Foeni+YcAbShq2vNGEoQ0wZZ3Hhnsc9kh1D2EYX8+5
OhsND67U0OkPcAV9S4FqRbzK+eicQY//YoQrzPXflGR9OiEbNnAn5moE7e637rVm068wCNFcaHL+
DRJMyFq7sK0UFB1MYR17wyU/eGZBMbyc7nRQzci1IlZSprQmnmY5M+jEpljaJnPHkUy8BiV8mQcU
CTpg61gz+sXKY309SaRFe5IG/Lg0cKz7Dg5/koAefICJ+rgG3CTdWRwZiY9UKB0ZbTO7Wff8mVLu
L+f3CBAvNThoR2IVTq/p0HB2xsMVfoPtjMwwC7t5RxTjWAHkEFG7iUuXDMqlcb6mXBwbrUMV1RXU
nIR+vDMvHREr0E7FSzI2z30SqRYAmd7/M+W0mD2twjiaJvOw+aW5pn3rO/fdSxbpjHPxIuuChW5I
mDnpjPSZnNDzaXq6jmhk9zSrncYIqDWLfJ7gjVfc5/POMoKCGK63Y+Y1Ck1HMyhNlENPfSIJEn9o
E4WP6NkWJYkHqODs2h6O7Wv3Rlv19gQIgyu8SyYE2W3XjNXF8nrzz1Mqmi+YtKF0zfyity4bilq9
pA2KawQ7MwAu9+w5VoY5lydhPKhh1E+Mi95uPFCWuYYxWHgnuRXRTSdNCFvXmFhWsQjK26gU2j6N
CcM1KMeGQevhriosLWfcc3t0LYvFbGTSTB5h0D+3ZvwjPJUz7UZyaQFM4/DZ/tXWxd63OV29SdKL
BgahesMRBXGwz9ky87sjdXaAj6EE+1lpsIhAo7wTh6jjCbllMTsXTaSOBJixOSx1xiAmMAvZf2ND
HhOmzSQPMQmTNrgbWkNxuiCyKkPE/1l6H/eNJ6Zoq0S38jM/wRmMpT4SNLIsAyZsLT2JkI038Xxv
ShKnV61e9a2tGu0cWhi5f308SuJHHkcWTTt5AFohWb4L7knLy1oQBVEuekEgSZQ2LEgwW8aE3Ccl
0cocu5EUquEW7LUY0xr1yg8rG3aqn49myoS2zHuJWbefHso/GZ9IUGbQeOyJA8fsdlPt1FtQ126n
agf5eXN9ySBT20ibZQTSCTdf0nAeSKb+P15cq/FaXtRE0X5q5qf2VqCzmNJMiJ5wnB3Co9HtMwQC
fD8Z4SC7EYOb1Bj0a0THP0wW7SM3wyWcQnf34h3vjbxvexPLoV973954PVA7WkjJtFIXpLxqqOQ/
KuH7/M+5Cqtxi9ykWLTahL8hAyWjv12qYbWKt3mJAhmVA+UBzv+Mb8ZSYzeLlDw/Z2SSW5MzM1Uq
4Qo/ANOZx0YcDbMhc++D4pWv+s1N1hqAK/2gMzEEa18L5tlstx+d4CArnEg+dcQeehNti0Tyg07b
qiNEwd8qgOQbPfbL8SJxhoHmTpER9zLxeHfTM95uslsQJixLX1To6kgkRoNkBuuWnFR4XFlTpAY4
NhjRAyIOwWbCcKyFyHCLyDodX8t2KS9IStGPLM7zuPDHocHFuz5JN9T6C5MAvBdVd7yjheYkKVAT
th79UHaX29nWTy/1nkDvI/ZuhBQQDKFf8/wQVG1A7ZzWpNMR/9BLD6bn2iKZVQQKuuLowzs4E6TE
ZeL43m1hPI25mb2RrRQOsfY8bdQnZxEJEd/pnm/c2s7abEy35LR14GjZ0Cu/bIPmDKCyI3WVYbJB
8ZPQzcBqtoAt4Ci7V4AXsAgeFONZIdLpB0+E9QDJCjq07UZ3UJKx7QoCIRb3tD3kIFG+++krAIth
0u6ibSb8iqM4ExU1n1kIwZi9wtb8jUfAf/vRrDhLZCSN4B3ejFoF2m8SONNsaB4UT8YsqV5/jU96
uZeHzLUInhVmaMVYR4uqfAf7iG4qbsrtRF1Mwo4SQYaer5taPhCvQiMFiIlfg1XQ3xegQcXLQ9xi
2Q5+R9SfQ0xj5DQo/b2N7Y3i7pmsmRsmf+ENMgGEhzclFoy3XVXysGXLzmAWfgAFSoFFBsZED/Eb
dkLrLyu/zf0ff2vENPtHFh9dt1uzmjNds9RyaEqBcSNAsnEFPKdqHUFCQ2Kk1bPuKzm3gRg2zkER
YrEthZI19dFgRmSyzv7VkXT7A8dty/i03dMPwtlhslVdadt0H93+m0N/czysawh6jM8gLeKSRVyi
TWYbPTTw5x1HNgFEaabG9RSE9OCDREGxyIT5yCAoB7hiLqSPHkcgze8wxdsZGdbDqJoTHffxafev
GqCXRpZTd9wZT5tgg3aCXCl3fKWi69krWDAKXgpmABBaxXcNfP9vsTSfPQEGZyt4pgBAV8apStqS
QcbAlLY4GQgaNkdGGRCPReBxb7A5KcFYRZGXEf7+0BxhO4h9ctcd0EiVj7fk532ttage96E6oMpo
7aHjh31Ei3bYNluU7yz6d5b4QQwefE50tnKOSQskB59lhGbi3R6VQU43osFhUAYqR9TakoDR8Ehv
oX9DYJaBaiNvbEaXVGJ4R8/hno1KzkmhJRslRHmCbwinBbenuelZIvMB3jmy7UFAtEczSHn+HUrh
4BuTGNXPK/Ip9/MMQQsC/rGGzlmoKTn96K8KDJMkAPzTJ5cDutJhWPRWNafXadmbCamElXGspk06
j7yvmlib33TVtpQQfSrkq1HjK0L1CKh8MpcRz9ByWExMhJ95ML/8D4d4tiE0pGNinaZBKoeagf2/
UGnQibR0WGkseYTXP+1vK2QJz7sqc14DR6wzeDOTWErBoz10ivSUu6liK6nYM/GycKbhOf+OoP/G
/tDRdyeievw4cQ66Y3lOypVwpciVp3FlvhpGzRqKpHByC1Ac8SUjI0ZZGqpQEVwIu7Ic4AQL8Adm
TuAKHHU37meOiUAO78OKM0I6RhIf8AmNvbXBh+lil5I7at+7nZh9Pks4hUaZrVSV3ED1vOgySpd3
lvRqEEBDDLdP2RM4/CqJDujbPC3PXa8lpru2thfC6hr/U9GanH6E3lXgF8SaQVGVSeG/D6VQ4Jv3
lauzymWgV7ZXEjRKBTBfg2BeIvxc1jw3sSGWIMaWK2KivC8wkQNeCeqXdBM0scKAuBTPFF+tOG2h
vgqVRV42scpHVQWfXOTNAjOWzVPSQEPT1u9L7+PJvMvEADy7M/x5A890O6L2EBOSrgXdIhPSff6b
5mWQkoIv4e6mCZmOwvHQi7fRnnt1wFue2pUQWuluUx8828C8ha/qGjtFk7Fn844g5j2kYMeZdVM7
mjgNapCUts5ovpF3FgUfSxW+CLn+RI/JMhWtvxejuNw+tzGYe6XcBsZQLQwdewFep8qoK3wd4I6z
k5rm+ze4D0k5BCox54FjKqNKaAggzp3INN6iN+NflHbawrKHcSNH73UgL5fXFdp22OGcCOIkTs/U
cXvuj6WeYmklU+21VZ1PcpwFlouasA1WFIoKZB0u9VB4ykbmlDVOoM4ctij0KOZO+7Agv/hrEDgz
orfqOPYxSdRm7/J1W3ZRq2ycFqBc9b9zdmEWNxSFp7P4Bf6pOdMZjwxFXoERSLNdyG1EaeciouN3
VMW5TG8uRYdwcKv4R0asIhp+m9CoYsZXjXJmHWg3iK7Iw14teri4FEG8x9iPUIKHy59kUK17AUcx
a9XlaHuUxEesLOPp9JaiA4kW/YoJD5jG6+mDv8iQlgHhc6etuMAOvxWNIVpbRE8CFIn8m5MdAFXo
nTU8UM2R4877vHcCK8f9Z0KvbLkDeAh8cA+3WIrUba1JyBEM/9JGwCUWJl16GLKfhzsGqHHuzKuC
btmqcMMfj/UeopYG2rpiNkhfA0IFd61plBu+6W25c0LBlpKPtDsdPrbzDjLcUR7Bu6KB3g55kxBc
ZcmuaV9euPu71oD+t4acmBxKd+qYD2mnfIZ+zaqU3ZVM+W/WAV4v9uFlaMMlDbrqKHpYn5udLdVS
aSWaopCOgw1X0m+D2k5tcmyhWk0qNi10VCSnBGdyJKAeu0K0l0c2WcgWe8HH7oPCO3kthbm6yFiq
v2R9ELVzhK0wGEzed/wZ9t6osJjOT2M/RE6SCzeAMmx1dBVJTsT7m4UXJMnlXGeDJ4iMc0UD0yOK
sDS5TV4aImWMNU7WhekQyphXUHJz0c7RXiMQ93sPhSoa20ofoqOFp0LKLpbAVGqbuuzdDJmP12yH
iKJCCtTtP8vIykfMTe/y3L7MGzTMfwflkqiSl1Ezupkhaanjay/+Z52i4HVL2G2BkBjpMovpOjQW
k7u+TVqtuALH+tTo+G4Z2S04uiXPluxDoIJ5qGOFS8l5VXyYuIihH7VB7/Mohpup3d2YRB7a7rBa
4DXp70Bajwv+njFxci/ILU/jMb0IALYC+8wUT5AudyZ5EbeKSAhDKMpoue1533LSiAqs43dBiKxk
rJfRJjHIZhDCRGkKm6VI+h5l174Dj7FlXWNpYuFpi/CcF9kTPY1cT6PrjyT2oVgUhNno7BO1oD1b
JL6scw78q09HCsN+f8f94CubTemi96g42mjblLN+2E2TAXns5zX7UxwMhNmM6Waos+e+lBO5Zd3h
iOLYfutlOua81/3nMQqXoTXWZLX7Qqgz9U9EN0J4muMu7oHZx3XBzGi/cUn0+GfoF3SKjB/8ig6M
swy31vPi+npeYU+QtPRrP8NSpHsI6gjV99Z7z574x/DXELnCqfUVx3LcpkYP41I3573U9w2Mx9y/
N1QvCoYw7ee/3tg0pZig8EMrTbcwWFG0FgoGPVY2Q3QAKKQlbKyevIr62XkyXqGokv1hRNfeuOPF
/PO6Q+mJ5PMLceX4lKNHe919FmpWGM8QzKWTcqEOoIbyCraGH7CYFT3lxIlRNSDBlICrhxfKJbg5
8+lPYU0eRkbI13lX61lCAHUxA+htqBpIxNPBPcSrujelicuh7xpxtFIqzVphvENWJwgTmH9RdzJw
lY3BTWW76x81tKkNiogMjMQpCndyjxD/RdVFO6dh8YXeDUlncB8eicR0MDVVkjJn4NHszKTrfYOC
OhS7O/FJ6JidyFo9t9PXOeUHVF3AbvlwLJ5Ht3obJTNbaqsHrLpsDIjtQtAQb1gITKwhMvbHqgzw
D4JGSzHGZIHvw8DMYZc/bE3nr3Z7a6ohYrZiBBSikLlhYn9l4PWbMLPAdTNLTsJpWISWAH5tFs00
WxzWgOuZnMMs9d4//lMOOG5VEziYfIm3rS/K9nDryfkenuXJyUOQPD7R5/a7Zgjtq/yMpDVBB/8Y
N/ZvaqYNC/BoUVubNql+EXgJVQIgzallXJjWdIfq4OZT7A6MHtO38unMD3OXvz0vcFDEcOCKSsuj
+HR1JDOygc0nlGXMrBUpuvuvRDLxtPFPOUw6yNIBVw2U4uMPJFhEGRS27nGZMZmYXeRboG/RlEbC
XcfyaG6ARwWvqelONl/mk/ZV83sWeACvFG3AMQZwOQbyi8CV6hCaQVfQ8Kfhecc1QVC8FONMSGoa
5ggsvQ7KyvmkqSAJCPX9Ad5g2Rv62PHwt0IdtQmTE0R1faFbVe6SM4Y3bn0AKmvFIibuj9EZbhbk
JaKE2w75zD7dQJSWj0hDgarWzsEw70PxCEd7YrV0PQDVXGhzrfVWb7d6sfyHg+TymW4z0x4hWBlM
+jls+uIHRh3qYFRODtzrwP4UzIbiaS011jDAhzMlSwuCbMejAVAhX8gUhadl9qqRSKCz70mOt+yB
SKF+lmGISIjP2c47D0XRKYXtxPmyd8n96H88Ub+uPFC2pyyM6s9zKG9OiZs/y5WRsVOpV6BHXwoa
mV93PaSa+tK+cESc4gQMeBtdqQ3xz2XgrG5bLycxMpUAnZC7DjxNXCpBtmxKK2stmZKZXGD/a8Ye
7YJ1cTbhqlnVOnM3NZu3mpKNmj2jrcLtmNqYGMBIcQvfk24uH/dTGn+LWVO67MYMV7kn0Ea79IzP
AvRxWXi52Fz844i1lXbKHZrWI4rmrH/M0CBXp9EYF83w62gpr42RMluNvKTsYwmaQWWtxbjOMyfa
/6kyjWz6HM5BTDTpOraKYUwMu7T7SxhpzPWS2U3jwWe7JY7ohjsyoSRdn570AyERQTPoUxsW1vcE
R6/WHim08w/KyYUGbhKnQn1PVUZq+hnsZKFBtsHebXUIZffua5E/1QWvgCTs5Y22CabqhmcmyURa
213OIaJ4T47R/4+zYXx6C+LYXtlyy1oRYSI46+a9vYo1nKbajk+HjrtONiThOr2FuK1dUUdMOV2F
tT72WJHvGQJhJocvcJUgxX7Aaz/cFerBQN4GdIXxLTAEeBfjSMIJE5Pp5/QMtIQnfBWM1H1o4Hrp
0ojx+TqPNTh5q1lSDcSIstY8s9uUgXiCRYqEN46bNKsW3HpwEMAUZmgMx2/NtUBmKMLBx1uYA05I
oE6Fng2kubeSuKjJO9k9bzlSosT5ZrWe9kwvksYIaSIfKlIEiGjPcTFT3OdYz0kbg07r+fsgOjHL
LiY1eZw/7Pb60g2ukHCEVXWRO45nvRaFUBBFv+5C1Fh1XhU2MHehy4muorYrtavnBvkWyS0Mmy2V
0DnEwSUPQ7wt6A/PJYP+P0ljlQISuWdmyNb18RIeJG3cYI/OLlHydbumnsdcChM9e128CsxxEErz
FTzQXeKFRdUPhczC6F7uXL/85Rz9J3yk0HLqOkXHd9VcdEvZhbCxZXRFT0ph2Fn1rS3BQArzy6Tc
uMMxno2Css8we7XOY2S79vrgZcvtD1nnT8vNbR+GISz0FFnG7EamKt8L6UExXUi3x+WW40hJ+FbQ
dkOcQgVXeS64mWqsUWpTMJsn78jIIuipAJ1HcdvVIywWvLm+EXmhWdciWuo3H8YXgYdhFYB7iCkU
R3o0aVsqlDdWYuimnngbvzx0W5blGuktyt+eg1587pp6WHetSw8vyzDqKfooRf0tfJDqdsDd15WF
uARm6Mf9QJYHVsDeEtjmOBnvbtAsS8ahHz3bfDgien13jSrf/uHhXC+mbW7IJPBorv6FBEnfsp0Y
Ry+ar4wqlBeBIL41pdgRyClUug26bjk9c0kYupvDiibLNiBRKKXCR3pIiOx0U56tCtfhQ+3AHCEl
3iSNpSs2LxiqQ/sLAQzXGLw/ciD2S9j3sWY1ml/ukqAh2z7xA4+2CAdMb8WyLjMxVu5Fz4I/v0Fa
T7vNqjY1UD4eaS3tPwqiwpiqqHd2vyiXz+2rA3zHsH725HcwSbfsNhnlL2TxTIWQ4dbYUQgQY8cM
/V5X8mZ9gZacYgmjSZQsKt0F3bLhS3knqF1G8LVAzDN5LL+2U6eMHwK7h8GnM+pAtSXifgQuph61
wBGSMLZhZ/s/LivKfqN0HSXPaCLZG3IjA2HNhpVz+ainu7vRRppL6MBvI7KGZRCSWgFYQDDmkA9o
8GSQUB0fMyn7AnwMYE/FCxgOl10GjBPjhoxmGuoUrrmIPUP5oc9Fzv/qqhow7PvqkxW9my38S+Sc
bI1o3mat2jiqonruckJXSFvIarY9TKrDNw4nFVWunVxvUwGmQGn4PlEoqGYBQq/bpIdGuZmHDUqI
MF9HcAGjXuzeNAnTmBDfxpC0HvKW+X11Arwh8QSNq0iurjwvpomOgNd+HXFuxt68MvId3/jhuts2
eHUv5cBJFL80hmu0Q9kK7s7XRN/ZfnLdGJLsD3CjYOzSecGwInD/YUuzzX2LGEsA3KrP2VBN6YA9
RIX6zmSE2KAiKsF+kOIdPqT7bXzZr11qnkIvoO24AiVh48S9+sOCQHvMGJl2W71PDMJZyhiCuT5g
a24yfrPEodKoYFWX5dQyojjOjJzALIl3cTvsJI7Z2jmdB9OiihwM7cNPP2uC45YllJNaM9bz3gOM
LjwdJl8IsKBc0egS8MLD3QTxbZd+NwfFE0SLssAZ2zRGfV4sRMfeRkpmTjIbzte7ytI0vAhuzHnj
5Z0QuJxb5xhQ0v0c6tuJ0n9gZCyRb+S4PwB/X3r3+g9h0SFq7tvRdm5up/ZRzQtCeiOfoMmLbE9U
GZ/guD4T1Af05h9oijBDZph3YPR5Yfnxq5NfRmt8mPmJQ3YMPNwFZjhk/CwBCQzAX0QS7zduKWcn
T+IjdhYeEAIcAeLSWhcIxwiN0iJOiEN9/KWWFaavc6/8ZQK0Y1wkQY+PC3is81WfDDIr7pWYsRWc
1RSciqNcuHoE+OAcrx6z64S2IiRMMM7Y3wQFGpDLnbONVAoHF2vpRktW5FrQPbQgv/9buj6cEdGS
vDiEtOfscz0VphBkHpjSjo4cmJzgTFLUJcSC7Z6PSb7iLGSc7lg72bgxNc4N4Jy/H0zuEVEtCVH+
lm6vwoHGf+UMlV3akFzBih9WHVLwrvRSiOdGr1kMxGsI8p4AZUY3G2Y8Te3oINH3ybhna48YjmAo
T/2Wr9Z6HPhCQ5evoTqijKcze4RhbwcUYB0toUrkmjrhB226Ir76RmJr++hRPPv/MZ4WjaNnElcX
o3pSd36K9nDLeRKIDazwke7wl05VrmZQakdsA2iMkgm8l6YJmTONYU/nx0x0xBHgmW8RUumg2uJ1
k96+xRdqSxeHiq/OytSxYfh+0QFPUFttmo8ZLpuC54/yJB3UzFuc8U9OdAE2S18pztF3O/6KkFHe
L2kuWRfXQcEgbnjexA+XT6J6d+RpaE2a78IQVW6k7PCPOCl03ToQ5S0BOIlwwPTqhaoGdo3FtqkK
3CNmv3oVtIuEPYv4EvTQ9YIt6VQ1xM0wa00wEMge8R6XRJ0dYZLiwezwWfknoCesyj+GEf2ypJ/v
jbCl90jcc8DK1nmSJBczw2PUGjW5CNNNgUNofjwhT2Klf+n9/LpyvSeuNYENoe9yyPhZ7hUGtUbP
Cmt86u6AUrYZkC1XxicupDQfR58cm6brubCEecNtPlRrJudSYWaluHJVNDv+otIeqQ0x1lVWLseN
zLh3IrcuPzPl/G3uyaz0rZMoOtpWDXaTFqK4O55DJ9jw+2xX2GT2X6Fikjaa15LyS7aYmODEg6Ny
BK7EwVtoCHuLZ/ytqgrNlJusjlTIbCLBDmAPY/MS4cXLYXD1FG3jDYYKmJNutV4cu/PGDZsSF/oK
r4E5ueFEPZ8WTlY/cdmr6iB+HMp396B6bckPk+P0Tct2BRtVXXFyYivmKKgyWrOb4WEpw3u/kuGY
JfV2IfBfzwBl+q3rXwxfhI7x1xxPCtRjz/fO9xSbrgb5F/Gp6cdK/hG6l7hbIobkyY9xY9eyN+QB
tefMFjEIqoWcUW8D33FfQ+siz9IoENBIMzUAj5XKtnEKJYjfEsequQzZ/UxEQ652bMshhsdSFaih
okhjJyEpAJQ3r7hfof609+FYxrHiaelGIgnTUIhRE55yMnHLmxWwagfkpogtaVjb98O/SHlimFgm
NurQFDSgdFHT1HcRJcbr7CEJAZpZSMVC8imxqPDIX1l1z4/UShNJZinOdsTtjljrDNbgqL47DGw/
mTx86cVNzte04WeG4i6rJWSI8Rdhowk/lJRov/b1ANmgXi12UcyBdJuZklCFgr+7fMh5vfAJModX
OoinOyGX3ADfRlwUt4tAFIdD/C9tG6QjyhcEvjEe6b98l7EHioS4+XJX0iLu6xzgKyak5JxjsiT5
9P+SwmC1Big9lhL1313R9Z3rypMDlKELBxg7qEbzmlENXXsxZkTIMAm0mwVtrjo3XZVo5FeIFsEW
Goz43LVoeOJInFmAa29upZ/651kU/7ZY/hytNIer5QJnl8pvJ1j2WjvD919cGEkND/y3Ou8yGEuM
T6sHIJjZu77taWiHx07lss1YJvKfx/XH/C5Xb7OCpx1wBY4CkLoYJ5478o5A6aexjFXILIKLwFBm
axjOYNxCrMjzQP9IoIEu2NbNqfgWdXDNlKjsQ8iHegg5FxByQKsKksr83SZV6uVE1R72sBzd28PU
TMEPwgEDC8/8MJ07b3Kl/iBq9cUFmbC/0vN7aWIgpKV3WEqAu+E2GBjp07T8ipGhPCmYvXhW8578
bio4qj2CdIaMt0gz7D2h/jXrdWbnsLps+KxCvMviW/cAkhJW2XBBYduV+ojPQNOb7dK2KCYPRFAX
EtJ3hdJHR4OskDhcN9AorCIHWt+LFJuMbzHnjOp6MVDNHwt/NU2dBgDseLyYYyRR+R/EJXeOSsSX
ospTXukgWsoPoVegBg5/SSd3l6h0jgT7Bf9UiWMvtgIpMDPpy27WCbo95TNqvitDt/PlffELQW8Q
WejECYFu8llb/7uhQkLiAHEMEp1sFqu4h2Zx33l6IDvcJYDwc7UxX3dubC5AJFjgmsQJobF9jMAe
V/a2THQYcAIITgm6pxs8P8GzVKYWheCw5ArgGNqiAD+XWMC07ynsZr7f6klycG3jsDJXwyHUrC7p
R+2nbeI1x/7/MPEmtcdLctbSjfd7ZWTLQvonVu5NcYV3h5Ccmq1oJl/zBl31qKPRbNDhNwYZKkHe
+ebz4tO2Vw9rSNdTeV8N4sPfwlIp7psr34aq7lxJcASaK6PQREdflY/2jlIK8jUfmg1DAW+Cx2o9
wk5r9F3gKUPji/Ki4+nn3vZETUCS79U66vGjyq0xE2l3szMtx/VTYD/D+47lKlFHvmMm1hBkrNbC
8g62ln/sxvPlCA4Pp2tWbhrUfqZDH308PXOr3w0yQ8o+tvQCGGCXNePtHHQAt+TfY5w+32IqnFar
sWgNHnQxRfyjlAte+2jmu4d5XgZnD+yvDYWz7MyimH3cwJ+PaP2ECSlN+SJCcJYLV8NAsCifXjsH
KeRyr76P7JRsqCMstc4bFkZXtSjuVgCP9HxjdiIqe0xszbiLMzH9g+DjI5koAAm7FuugQ2sk8DM2
K+B0FiHRGVStoxXNvtiX+sIqUKDsiQAgbE63QbUIQf8PgoOwE5jT8D9xnzhE9wrzwg0HwHpvNuA3
xfokTr8cchYYPDxvieKwHBILQgM9X1Xgt4Wg7C1zzVfcZJR+l06ZywcpZo8ISW23r63GMuJRlKL1
L+67Vh/EBqnk7jXKhzOaPK3kUr+wciRH8JCuratD6v+u3whoL55MUovIeM6F8z9nlRAhk7Yf6Zp5
Xd6yVyJl13DoehfOfNpksLLpcIv5O82/0l8eYroN0T3b+6+S42OhlYeg1J6nnvYyy3URvtTpBwcZ
B6i5jh7q/3y5TFgoUWvti8HWxZ8jlATqYcYe5IUOP5F90TB9gA60ZcBhEsptvG8ozW39NACW/6Yw
5ELH6zUbFB2i6JgM5UXLa9CNgSa44uheVXVmn6jsCohkX/d930mUBTXICCZp0rO42bnt1NtCsP0U
lkTk0wEPljop9C2JG97EnNBuBzfyJJ4CV5BHP2Hnk+pf5jDgFnbhTf4VdPH7NhvjeOiXCHgCMmEA
Rq7Grtql4U1rZJx5P9TueBrSRdTOJxYdQwnynVjSMo+lH/13DPJ29/ox+JMVII4TTdLVL1b7RqV7
e97e35Njig9NSKBIRzKqtl7tIuzm3WgqMeDxjpiqs17652beuFPQ3KotvMyYIJIXqm7wMfcTIvGa
nJG/MueO23Tk/614ZyYK5UdYoP5wsBNNMhYKrII1FUIa0H8bjVcWMDHhmrVGjGKpC3r1nfDxPxJO
3ZiU/kkfHF54xuihXb4AywaAfFuQVqM66jIkIScOVmOs2Q3M6822Kbd2JGXSb6pt7HoQNePRC4nC
BQkPHVQ2QDuSCam56g5gZVMAtmuAhNRlf3yjz43zc9gJmSo3ln/Mf8UgubLXSMxPyT2Uh0+VZv5N
ij/Z5HsUhKcFk4As7NF5s2HZDhXAb3zkAVXYKzOANw9jaGNM6gShPqMABEywLwNGNG5PcvljqS4x
JG+OHFmo6DwQVdVh8gucHbZgY0nnWSmw1JKv5cSuPiwq9xbxkpv8aT9Qsob1qRdBovKd19wZl9TL
dc1r+abyMj+ume4IGVws8HBRthpuzV1dMb9IK0YArQyl1zF/PKTF9JKCNfLwPNCQ9nT9RlDgFLyr
waA2OnZzC7IvYwwSMeaOxL3OXX2hcVBZbWTLTjYxwX0yvhWBPliEYwjGOfdjtYhZK9K8t0Pq8cRt
Ikn/YvEMHhhd+DthOCmn1oo4EGYvjH5Z7cbxWhCEwnfM9RQjmEvk6+HzqOuLr1JkeWS/tbDAPEFk
CoAsaToz02S1EoPVW0KroDHAiak6J9gHkXzwmHIHBSolnzwY+bxem5fmLWdPlz1BDMIG/6fL0xAy
bV1tUZZmeE0Bv7wSb5m4/GFkfvojRAya4I+lCECyWnBAfSwTA3RwdwN4A3Pye+7Ss9DlOOW37z3b
yDotLlstZSbRNFsrUVLszk19dYdyr+MepH0UVGLT7WuhzQS3V/x9iuDlt4Bp0mY0/E2InKqJEhDW
GPbm4TAm0O2coydUkWH/+ZFjXv/JcKWZoM7BcnCvLuE3yA4onez4ucdVzGWXNoP6XTLim6qz+xJQ
DWK7NGXLG9WdmACVsQ8YK0plqMHbnJ0eO9tgxaw1zWkfhXib6F7p7wBYSVVz1EoMU5/ZY+wBYqHq
ymZ0eyoPBjX7tu8yDGkFciX/Jnc+nAXB9FxW/C/MOBXlFY0wTs4jTdauEs6GRT+0KJQaI8DL6TUs
77CvCgA0uc6HcoGDF+A8OpXMX+RceOPMo2WVNc/1sSg/6VlBYmNNmyqBHgfeaxDQJf9bRsftscwH
ds4GdZEw5wSAvIwnngnk4A4lQD5xo4vqDKmGeKw2eE9s4R2NSbZ7GocvnVyCWH1z4oQQx+hVNXHb
HUiYPSorzWsd0azx3Rk1/44UG6SoXa5sTyS5Mb4W2C2TPL0TpxQRaFhu2mJG25rLyNmUlG8cKyqe
FMotzSB5QQD38T+Xh6a67QQ3LtZl0ooGIYAoVCXhjwsVHx0quYmky+o2UDjbt+BfppxD44E1Rzg9
IkAvWQ3h2R2ZE0Ki++zCztXyUZq79HAyIOwi2sghzXhZArUDV7jK9fSn69gayLezYODVnFJMUXX4
xBXDQnjCuu0oRvaXBK39034xKvkd2vYWkf+BGcyvRNxGPVqiOGPjsp/sdczzp3difqseOB2wl8l5
3SOc6moMo2IA8koWrRBY3y48X7D0ibxUPEIeOl75Le5JF2L1kthND/Iv4Wygx6i+IKBtJjTkkPip
FTSexM1OFCGp6+Fx1POx8B5F66KIcwYJ876pKmqC7zPHKRb04cEa43nXCj9upMitX6xixIff/mul
0pC7PmvZrIT8U0POxmLVzmSrBieZsYEkJloBhHRIhRepRhfsgrO3IKX7P2XMmzWv8IiNaT1D4LB2
CBaAhtKN6g3qDkmhEKWD1PCixjZGtKY1puvO2KJyzFzLJA323JahhlOMa5MbbhGH+Aju6WWohJON
R9y6Cvg8+XKxBVnb20mm7LMjrgy/FUkuua5u7y2XQAXEKkCpE7HJmsc5HR763yvkzn3+1dGWLR75
PhIp3CHjgeK7s8MLcDNapt1tw7w9+RVjvABprYvPscEo+Lp2qxvR9XysBbGkzmwFi7I+/U/L4RZq
bY/adC4h4aB4igjqevIj7No73pkVrOb+Jtys18E2C5EGDMnuIda8qR1hWtHbzHs5zGqQtvqQrqHs
5eAaW7vDo2ZXmqKgPuo0ld6zqiSyUZUuNiJNND9zJgDjwJ32KkCIcs0d6ocBiWWCxtwPGmVwfj3i
4AV7ti2Il4XMik96+UHaLbgkPFJzw3AGkB1mYBaUEruPg1Y4JNuFSAtWzZy6pDaRmawFvVS3WxwD
jLJo0yrS7FCiAQSCp0gyuQiv/4e7398j5NW+M+QjqCR0ZnBoRouP6xqrnr6H4wGlD31YuJubsFPe
8gX+rFn9TR4gZM2KpigQegQrVeHfIjgbKru3bTUZor7giMyIDoNPBJJ+9AV1zFRGw/hWZbV4vOkX
xwKh0PwYkmKvF+QiVq7IORc55RrvgoeZS6x7X9uQsclgPdd+lP3iYnPIYoW8DZmGJ4rsVaoqLIPj
NRyaIN1QHvihHT9KGhNr0Uy/1gPRYMHtrPxE+qbJ9TPlPiwpU/YZus2/Zvn7ubxV01uV6GuxLHoC
qjKwmdGVWFVJBrsqD+4imijA9wpFbohdjmI5a9jswfaeZvyxmvPLr674cNDnq/xdlW7YVTOJ8TV1
ioZ6fi5VGb5ZgxBrS8Dtl+2ByqD43owApE04IEg9msGa//XNGmGv7zLnTT1zUhNzr6L9BDVFTqPO
XhaI/3xLm3+wscmCgyh1PTGvldfiFhLNsAO7RMSZ7b4Ln5Z/C8Dpok3AjlfYUw6+V75xehgKMsxI
+eK1OwLmBLZGfK8XlS4j7DlziRvImaZc5tPua09wfkEHoj9e0TTZOm8yCeDa/F/CzEv/WMXqf/uu
zyeJl9b6GvE93NaBWz/p8wtB8/bOsPuf5vdw5KGQn5OQmuvVttmaN0fzFvYNnnZspY0RpU8TSeKB
1blB/uEzyyT97qxsisxG+ajoU0AsfSFjUgpqa6DRFauzBLA07z2yA0H+ByKc3wSq8QoMLJiL3Bn8
TNbbQBEMOcljetqLzh7g8MlRUHgMYnAI2uV7TZFhgrPeH5e5M+k4CHLFz5by0d24ZIUM+ZNr+3hZ
/9WSc7sE6gKCJvIVd5EbiEY7X8oXKKdQLMAyIguWR4/EymDf68eJh7BJvsOB3dJOpeiRhVr6HEeO
TnHz7fKuUT4cZqkMn4Oyw20gt2Z19qO7ey1Yb+rSSEsU0VKEzwgW00FtQ/4ER0RgbU0Fcs8gNsbT
ntJHaSCpN/V+2vSh7h0ULe3goakTez/dHJixJtlMFjzmYYprofIyUjTie/ScvS7AUeKDrP+VqrIJ
Jy+egAaWH81X3Ww6gW14LaF1tjiwz7MUJrUAbkB1jwo4P/QR99mjb/vY6ErB0AHKkRZAu9vTj7UD
IGtDwKSS+p9svrOUqtIbqqMoHefFbFXiR23kabX1I5ku5HQtlaWeUK8tbMYMBiaBwL4v/wbCvdZg
7fO9hYExxJo/go58e4tvYS44Of3/XqEhDfCuDyMUMBaahTmQqvYVuuxBVEVV509JXW7qT2S0NIay
w6aBn7LM13BsWgqBEmTnX1pAmSGGcqqCnGDgVckBp0qkqO/KhRLTupGEn8OQml/EybiOEp4sHDo7
i9nlPzmU0p30V28KbTKpLw+wSpP23xLYLg9Qvgx9sxIlwhaRz4xhzayM+V1viXLu0kjNnDO9rrNv
Jeu/jSu6VFmEmSKOrHkgPIRIeeLuq7aZ89rdK+LGtvg5yNPCitbIkWUsTMgHYMqqnuOnP2CQC2LX
oaHjln1YuQoW/jNgglrVC6rJHZvV3DKVhVZG6QJw45N3+tQhGZG3B0QATYHX0haoIFaIvLXC5nB3
SabIWf1MZg4xTwryd8BLP74shSzeN8obVanyRA9ejY+4bB5y/RmfczfUMHNnPRYH1ioqOzVJ55hA
LW9Ng6MekAL0njoLH2C+1Mxps/iKYYLuUxeZwsYQBBqutv2AHAXFxYwJrnLX7YILVWpslbwoXa/p
Gq+ef4wIHX1lqv6CHVcFTu6rhO9vT3484wAbg4QMSlWfgzo/p8nsWCJIMKq95vQZc1zwy9WDTTre
YZDn6Md/QXW73GJu9Mi7DkU9IsD52Fq0OVHhFs95sFKnHyJHhOAdgJnI60bp80pQDDAs/rzpc34X
z7LKZGPxv4VQ84NQvSRVOEUBo7HAgcBI4ge8SYEG/cqvU+vWzgwlwPCqsBBCg1+tRSieWqQRlWKX
cqtqekbw8nCkMcNVC7w7fXye07Ur3NdzgPMOXtPBTS75JDq+dpR6TGuNmucUAfhwm2bMJHynbE5K
UX4UIXVRPLCXqXyaMeF2iyXjXdA6Mw1hbHzCjIYt0GFstHffjWH1GYh+Q9gj9cChfIaYBEcJZK5N
Fh6MFFE0Ibf3a+NN+oLRUlyCewCZqQhqiHLsE52QPPGp9nyUrdquXqrBZEFz8+ub0eDgEUsn8MMO
djLaN57JEBGn32lf9+jBLdWzKKq91TLdvepW3WDRwGpDTqSGFpBOR+R0wEXcLlbOXzTJrT6MQKgc
YTLO37pOvFr8RUqxbFPiDWIaIS/B3PYyrPHZYxjNG2Z8OL7Mlb/2c9e5RDv6Yi86XoZVc6g9e8SP
yT02vZgjGy+rBifo/kS8YOATNH7t3RSZpHuvKz2+77fe6UdSsaSqznOJwSVTapTKAYV39V4EqIUX
68piI2UhNZuRsmDXinWTbzy3GHhfDiJSS9hZuOJ4JpZKQYNCq0WAFTm7V+SNGEkgnB0rG+GdxTDc
wOdrbzp9pb0Diwy3uTfU1pMLPEX2MKFIM1RrVO4BhMN6lwmKV/HRhNVNAmnk6+8Fk6L5P1LZ044B
cRhaqP7aaASkLFSPR8pk3mHs8SQ2gZ2Gp/WoV8QnDtHIO9fy+wd6B8D/3ZcbdrEX51ccdB9vv+dS
B3m2xuSJYChgSg/P0U+s4U04Euk8F0DN7UYj+w6orpNuP5mgFzrP6BDbE/Mva7ovzh5wJweaDzFn
0FpDuSPmRG+7Vd91qYCH/J4g6aEPQpVMZS3q8lLA6uNW49ft+y+uFoJUYZ4pD+FJf+X8+W/gH8RE
szJnmYxE6m2vWpWvb4Re/1v2sImcm4Lj8yFjFa0a3ux9+edpsBOFTOVG5ZdVdPzhbg5lvSTuVUHk
uycH/Ue6oV3xrdfsc3Afgi0WxeR5z3Z1WafXSCq7Y4q+M2sCahmwygU5oLLOnEDs7u50/E5OvxD2
QhjmUparzcJXDHu7kXqanjG9sACvs5asl4u6GD4plpS1JuKtFtg9jmcapb+SN9bbNGKmjpdStC4V
E0kah7m46JH1qr9H9DChnDT6TKhA2/tlLGxladX0yX7M73PvlDJfxDQbq9aqymLaOmsUO+1l1pNs
0J+NxE+syL9IibCuDkH4HMn8VxnJ3p4mdX8be10Lweg7LnjFwn0bQm+dA4fERf2LMrBZ6mxUGY1S
/qXkv5PRif3dLv5VGXrxTjhq4ovCNg+oYn4M1QEcb/rJuQbBiOBuwxmIci93mChz/Z93cdkFdDG0
MVR7CmmetEBGzmeCLjfBrJ57nFuHR3WWYzKvk2got/SxCJ9BRL7CcJBFiZqrpNrCUJ9tZiLl6RSS
TldWVVLsOXQrxX7uGC+x9MAQq4yfT38OGjeCYlzHfrEKDOyiumt2PrvzGsnxlpd/RN2DyJ5bPOlI
0V/AgiZhnLKEMHRe3hELEGEC8pyrUkUsmhzHwrr1QcmkcXNS9QpxrmNMMxtqqYhCQTyHgVqtNk0Y
Wh4aoe4NfaiBU7gKF3MuxF/MPtcNoS1QiHN/iEdEVSMkHcQeOhWRVeb/SsVb8rBRHHbKBmJDjcBN
Tj3BAfNzcMGo3TPBYgGJPjd02usndJHMjSnTjDj/b4uw92GgiQ9P7sGF02cYInd027dJsq9s45U7
RkSRG9vJuHwWAq4ifMT8vcUJXCLchYRpCaqQqSKwaEJOir6i10BbyxKT3ILi0nT2LjraCg5UP+kB
MWt1qy54VeZpf+HHiOXjez9Id7hO53Tvc5kFjV4XUCXg78ZIJYHdRbm8XIc9LoOq8CGL919bXl3M
DLGkpY2xFTLJJrBjzg5E5oi0i+eH0/fWRf/gJN9+DOE0D1GVlbBH/5F5vocfbnsh9DiUCIsY0SCR
Sk4/2ML6XQDEWqUsqbWD4m8SgABwv6cMQjJ6umRewu3kvTBuvjxHA15Pt9nXgMf9sGHKZeCpNCqh
QFSdvL6hLxsQwHePrFo1XAf5VBHucUMpF7tuivDw25p+/PVkvTVQ5D0jdDLQ0/AbFy/LuvK/5kVG
hMnH/ery9sSVktYv99/7fVOKiQxxkr9+OrZKVq6Yqd4zdezvuMPU8uUacJMfRKXBWFFKbN0B9Zcn
yRbo5na4a5FQ9rX67wRxhy7/cQj97DAfs0GdAeo8lDpKCoPPGOdNM+Jwl3/Y20CJKmjAPMOS7+MM
7CwFI/9KQDrnJb6wgka3PU7XJA4uOGWd+XiKSyGQTLZeUl5BDGGrVwkkuhcjkH+qf6p07VZpfRgB
S8maFT103xCt+NyuiJw8SOM1gElszbZxdS6zlYllOJD5unK3+dVkeZwdaJUFrH6E9k6lGgLyIlii
BPmve/KE1AEJpx2cmUdPM5jBU4eg4NIVAyeDVKb1O/H2rBlh6hd/G5/op6bYR+0/9falEx3bgt/W
Md8Y89WEkqLSEDOUFdxZaUbkxIzVK6E9NXFhsGRUfihpPEAdqEIZ0+nmLI6pHokqNfogvlFXKcaX
tD7vB4PskYenOdJPoCeANLOaiqLUoCzzXFVCR4hCIaCfreQpcMKLZYfvmHIr+rXzCNnjcV8dp+ZB
itlWEwTd2w7IC8QAdqoEeG2utduPf4glZHEEEgD4zkje/pl1rWB1vOez6CCCG7RZfFMP/EpNUbUP
8l3xz8k8RjX4j2DI2cVVfuJO5cU80wKbk3Hezwd+iocCv5vDcFW1VtoXSaSp6177+fPk4lC7qlUx
WJF5m89Ocp2f1gFSFe3kRA+kgzeY1YJgcPAYvPZj86Uic76foQFzfeoe6NRcFei2psWE2s4Jqxtk
ah/7sA1ipQ9fM9DAlMOKIF66UqI8rQJAQwRK63ujNFt4s4HVS8X6/jN3cwJao7/ueK8IAfg+p7p+
ECFLE8uOsWNnJdFcD0vDQ1uXgQmcM1DO5pdkNWjZlI1M1+uDbUULcHBOXpdDGfXLCYfWYfxnLgBn
wvM8WsA/t3VWYVv0xQ1+ImHUvw04vt87BH7LJmYEM2OlqLIYP1vYJOIxBnGG8fIJzilxYDXsA1M1
ydMbdOf6Y5G22u79HOklq/4B5FNYHkMVD+Hm5DOxIn2YqyIgdVaN8KJ7mtH3D3moEf5h2+5W4kCP
/Zx9Et7vcrCvegCuBZ9zjUMZkkwYmRnMDP/KRuUc0PTHDb1Q5k5jM67hbxOkj1VQ4rwWs6uCf3W8
ux/h+IrQv7Se2dzkPw63eAi9RyKOhNc/TQ4SarZtpQSzeqXClBLdsYnRo4WgUP2z+1Ln92n2mg12
PR2e2aFiyEvw2FSbEVH25tlmMi6ulYBtdM3nAUMGGLkpj3m9ldpqNWD6XsNBAj0Cuk2SF0V1FR/I
nXjdcAkOaq1le3vAUOW/pRRezFs+H4KMa0S+gSuZbLG42/anlwS0wq5OWaoRxAeKWeToOPLj46CF
u1SugxYWn7RuHaVLMRnSPRp/AjEA+rctwKmmMgy24/3F5FpAmLm3WglELQaZvn3vlU0BfxHhtSiL
9KOjhfVSciIs4E4eGi4WApsmhJea7MZHHTdb3hqTnOnZz8jq6677V9YnPjrQhtq15hRv4+B8UKvN
XnxQTfzi0at0fK1gi76zjRW0QJ1RIuEhRxzzpZ0nxhNr0MJYQHTrl+JD8NXNQ1WAqbwkg2Ky1HR/
hfyb3L4Mo6UNwPCRy7s24eYHB/Eks1rppGL5p+cNI2pJkoMNzlZ8YO+zUMN+FpNdZwitltrYP1GZ
7UiaVG67mggrvtN0DLMOjIkFPKUVfpZm5gJUhX/ugqqjao9xvm9mopIixSWjrDVDcCf3bfHiRIcm
POQ1MUM66Z22A3TNU6vCDbuYEda6J6vunDWk0tCgj9CEKHM0Sk0FDXGFY+QRBZFKUoVRvRJCQsgv
8LwTBJYfKa0/Ogaz3KXG+vYR+A+yIj6DeOQNlorH/BHdeWx7hIr+9erdyFYlKCjqVrP8TQcTwLXS
uGuFtyC9fJeFKyj1K7VhKZWIilxObJGgTJ+0jdOQiqtC9Z9wmoh43t3+lLTGEr8yWpWyZy7oHRN5
Lb7ypNaUDMBaQBV4zRWf6ChayxkiGaVpvw9zznSBV60uW6w/q8XYimD3+dxm/KkFJdSjDTMPgnte
JHZ3c6UlIDK5h5emRgOtrCFa+9gdppSr4jhqkYd5VdhwN1gmNzn3la9tPlVzVBppJXX6fgVjRsRe
H6XJSad/Fm8z+nb+ztrG6tdanmJailXDnhpZbXgnAszrTCdYl8ZCDq75LfXuEsN3zAajuzpGGXlG
+2lj7O1pL2Xb/YtB/r6xD/Frt/8Uk2ZLEFEZ+QnX51EPJ9aXCreuEfGa41CN4/RU75PvBx2/jrnw
drwTgMF5UQRuT33kZX3pGvv8VyrlOiRklcMKjvxMPEQR86YJG9dk4i0TMPOlbBNgWjQETTAxrU98
FXVxykMaxwVeGMLnfZ2Uoi1fc7z4dXlqF4XhFVplsD+XaDo2mwIzl2NP3Swd1/bGcyINl4ulpwLr
cfuiXTtwPTJlzTQi1RUK/sFK1T5bNwJDOMuIQW3cTjhtWjfH+NCb+evv5D67HYhidm+ZDrZqKgGQ
nMNY+dbJ5C5TvIdC5nIjS890Up4DUc/6xlZiApqmS0f7KMxwRw2GAUon/BQOmpGuaUkLWu5YRf1+
a+aVsfO4NieXblNGctl6vmffbu+CXD30VyQPmDwBwGX5PW91o/E/MKE90S1zj5HaE+v4VLVdBSAU
b+YKdgxFHtjf/rwFItuk8SoJevVyRvFNPL9XAu02zLdlyC0vfsAWcSrqk8NlLbc/WVKY24Gk2a6u
An9m67Dz+Z8Q+OXCR7hWFPGLqkWVDG6c7Bri1Tn5CAwPv0Tegm5zHguctq4fm+yAHfLPOSpM+EO9
L9264vwrKACLNOP9f8ZccDJ9yHMOZXtfJdY6rcurynhzuDRoOxXyjzZF+JczBpW37oRfqnYXrFTB
OcJhub/Tf92dZ5rqcagg58hKCC1fotNBkAdiqJ2RySm3pDzwEB151c3gAJuELzTu9Owmje0IwrJ8
+pDL1d588wD0FJQaR0pyrMa8IJ+c8LKH1iPN4wsewwxVX/3mlPAacpxPkFtsfknpLNhKjHsu0vFl
rx3EaCIGtoU/7sgXogpqnNDhTAh51V6bweovgl2F2AugRThSpjBJ2sc+tjQb8CdQH1vhDStfmlcT
LhM35NI/f5H3Jyif/OAMWV2jrMVlVcnMaJGCoAiAG/ivTanx1ux3N+ww/iKIopPtGQmYWqn+DOOO
/GwYhJss2mpt5Jx+1oJGbOsIFnWQLswTqYghlI+fktInMndoV8vmDRLVS/rNAzFYvr7dGF9t8hMh
aAHEuiLU9ScmJdDNS97Dk2i3waoSedz3Wd9a+chd3ISGe3HOAVoohPJweO0ehqYh5SmI6GIOPxda
TP/TxgPgmcyTLqXD3+nr6JlY26Y7tR3FQ6ylmclVALKzmA5Mgir05h9fRIaHO3Gcw+FxB5BMnJyF
CIlCBMONvnlkx8m4xSOgAGDG3zNnot9NT5GiyuHo9k+343giOO8LOSbgkWrJYhz20euQuwh8ffZL
5jtb65aK8vbz/+TzP1x6nEMTDj2ETduMTHqi0HDHHlq+qoyLmbb3J4RjKDcv15P8yM6S1ROtioIX
oUb28T3MuO6zs5d2fLyIQ1g7Juxab6FhmTkoe/gwYaOarYEjeirXy/2h2OV6REMLfLmCqqXn80N5
u9vpCxQpz7v3i7/Ruyd+tCoPVVJOOdm57TEUYbos9/FPZk0hpcAwTADPfNnBjHNu7YgKUoy9J2z5
/MmfMpBtJO8QsWXQM4rPrAYdk/0LeShgxurI4ziIUpcUerje4B4zsYEbokroyuo0bHuwF40bksb2
n6sYPHdb3Ejsd+dx5REiI7hTWwUzLeZNJYxU+PwCteY/sKc6QcC2fQM84KMxhTFyDA5Sd+mydsVG
AXPPGA3FcBNPSIjFcpKtX05zzfRGtkzPpgJNxEJaeV2sgVd5LsGA9XzK2OHuM1faIYmqTH0JYWDh
XfMNv5u/CixSBNYha0wiS5ZtXwIKra4Z0FfoOF6pPIJb1H2m5PDPNI4gDZ/v+Hv4JDjolyJUi4OA
8glwvcG3xU2SOp1srk3fEkkWY7uVKu2ymdz/buGUHAZwoHRurFEKpF4cAp8u9VZratN/QLClcBCq
u9QrTixXVItyQY1rLOAF3bgIe8S4LtTYTnNelVmUlcSbGtns/KmlkGWIYUUrNG7gbBKHcLJQQ4dq
yPSqgWkuUBPTyanAqcim8+fT0cxIdxLc7KWbac9V9QJ8PcYTs2M8MzUdz56ehV2/+cJF/BecsK+p
zykynshKf35ZUuNFqAawX+Dmv0mwSnjIqu9fWdDlkdgWSUrfFBg4VVWW6dgxW0m6ZP0+75eC/e2z
34IavhqVMkg6vBQsOQ91Vu9ZSycHxqxb9UG/A6u0/cqWkhdXldqm+HObbV3nXZg4+aCorKf2rHQ7
86BfHjIz0/rTuN6ewy4kbOpzOkGZhXMRt+Qup2xD7BrKK4mVe/Lc4vIJ3rtczJT/+dO7rnS8HPks
AID1SvedT2Ne5HMatAjVJsZBH/E7yFhdc7Bzeaytue0+rSQOJLAtCtx6gSrj8MzDLM4WSw/7CooE
hW1FoPAlcOtAl5L2EJJipgbVXNW/oqUNamkhCbImWrzYlzGGNbUlpAOK0J4l4GxxzGCbOX/UnPDj
YlM4mPNS2Gr+bWoiIenKGhSR1BnondXTGmVtdR7592/JUd3bM17aZ5qE8XyMPWHulAjbKaewTHP5
qKgrgqpyNhSMTNSXC6n3n3wKYfTHvNVf1C30dvdSG6aQiFl+kOQWnL42KKzgNFD0RDcQ8XJSQ13P
WEwPWY0egpOHLzZTsdh7Q4YhDtZf1y6foDAWc6OEHepic6O/kcFntiHcIIAGE2nzunDgdlbxumqP
XilS7VGtr71lKNo7dc9yQEaOv8glMnd+A1CSy2p6F78JZh6wyI2TWIt8BQcAldljFaQkw06Nuhhl
5TTA8Wj/q1lNX1ibKUu0MNybmRD+CGxKR2dvd/mII146h24dGR+FjW4Oqbz+qLXsoCSXVuIjbdtx
hFu/kzsh+dCFbOoFImmy3ZKQ94DGC1LK7Qj/c4EHHk+FNa9h20DGP+BmfNdu049Pz+0H4mV7WuIl
8wQJzezE5MBNt5KQU79CMcOjC548PeygB2QjqXk0plv4vtF6n/jchDBqFc3sjUI8BwkC3i/d12k/
t3/ukwUw60T9MjEkytJMnd+m1WF+aOOXBzxMx/Zdv36fp9rmLMGUKKjs8LKjtVZ7cCeDt7eoyR7H
Lr5m0ZmRNLWekfoPVSklicOR0X1KGPoYuqF9IIvjjD+7Q2LyKfUuzeJOLOh9gKSNC0FauUc86bLr
3OB/I0kbzw2vLL9cBwMzYk5+tnL0bMN2Y2vsgGcM1cHM/nCsCFABVlT7J52AI9SHNN2oaLtwZN07
xdu29tTxgOBYtf1/W9KFvRzvF9ABqaFOD5nGPeMd1qwd17kK8ds2ObeKNX2MjOFImqdxmiEqDSc/
u0Lv5iOVUE8rs1C4BZGAv65J67azR+5LXl1dqtkQYuUNIzWxImoqNSHDlE0+kAJ6mugJQDJRk+MD
OSp+Hj7qIRyjydG8erS45Lz8H350kUEDeWsbOeKsuInLp99Ztw4bQRv8B1W3eProCIOcIrJm0Odn
c8+6iKpkMaIlslKfy3F5h4oQZYozFGWsAqYtndF0frJpEUbH5HpCaFIpQ01mjyX/ynFv+nZQMsJc
gS7qHZnhATv6CWi8DrjjgU3X8yAzhfMHiQ9vI7CTSc1+EW5W8ZR3NBuChTlJw9R//GImqx5skb2a
H88q8NNR9mNOmSqzlQ6QcHzrGtBFrQAnCYPjcx5yTGEQwdcrXd3lZRjlzW0fH4qV1l9NnpoLJ4K9
2pHRz6CVFbcCiiL0tBuD+himgtCrq2McX5YTA3yGqkiQBv2GkZWP2rrqhgevlZBf4Tea287gPvcc
b+iF7LMZUW1RHp86Z/8QjRKRi4MY/DfapR4qH9if7kAlXLfoBC1Bze76aLpGqruXa0s+Y4BxqJvS
GxLeqaRtz4CK8ITvPig9BAL7RFx0NtEMHSjhM6Gy13FnkdIVUjI37ebsw2PBu6zMldf9QPbDrre5
4S+IUPqSuJ/v1ZXlpt8Bdkolc2xs1V28eiuySUdO+Dl5KHWj2QGsAh4nEUzhZvTOwWfPjxEvOJiW
oJoknoiQtOfUx7G+6v1xKSqW37hgJkl/PMqJPA2dikCJ+yTpwtRkenak6hGI+w2djQfN9kx2hZMy
2O5RQ12KiRepSPb4dfBAqQ3C24i28fTWCLEKqrQfeE4jaCPWfbcsigLl5Boaz5j4ASCLuT6ZAmWb
ttYUWw0yWIOEG5xWkm12+wpYMfmTCCGI2AMEOfaErNAgRFx2cGlr3yooaxLyNCnRUzJmUSLlZ0i9
Y5u3IPpGAeuqbA4w1MkUMp8/zMT9Shb1fzM8Ys6Y77rWJWG+KQqYvO73cHOb/4VhRYekcv3nrps1
W537B5vwYq79oU948VfnnxIqbC3/8iPLz+OAH01cCryhdJ3Y/6DFaALYdibwbbBtF1bdAnB0Kb1N
dGJTX17OnOOuaZe70Dtbn5COEFSpstM+8KqLk/AjPo1wJWEG9fikeglbVpdZuC4TPOj1mwFzR9Sr
wKYCrN7Wrp8amR870asim7xaEEEqk/Os2PXgJGGly+Qpkx/kSSgFB+HK30zY2Jg8PLAnoANun59S
/zU++GYAkVVBjxRrhgPoapk0o+ExVdvRObaXus2ASrW1AlMDnIQT4/rHeggp9X58Hqte5ED/cJOF
iy00zdzs9/32Y8QcaFTrhrEe4B8+YB/pRj4D9MdVoWXZvqcjTnmWOMwjwE9ViRETgZssa2BRiI7t
ZDpZO3nQ3KYMEUXT+yLSHFi64F86tNh3fzgUls/4y0qumkFeWfY6wZsLeAyFf4SL9jZJee2GHHFA
tPzLT+dXEx/JUknS6kXQMPxmgnD9YsegneRnZNn07ooYgCPgYjG+McbKHIEqBuC842oM/Xvo+6GS
XRxmbiJClU3ri+DM05TFj+EAipx2JGxR1yVA2cSzNtwYU+xQlQzdi4+jN8zg1Xqw3DwkMzwnmDs1
z37kWIO9nWs1IPpFfdsCAowuh3GIqX1Ea5R+KCvS5DFZxPVk57/GsSTFhyv+Fw/drdUg2TWb78qO
wrZWyPOBwTcgRpdF4LAyiPA8lgW13vlFLIpxdxwItEX7u49OiDs0iNBjzExC4NqWnpQUWEGlRCgB
gTq+l5s2MDSbwULV+uECsttGgvSelAAZlso9Tw/zUUcuwuww0fM4eShlo9q9i06V7ESnAIksN5eZ
qmfEszth8QhizXQsIVzQi7EBZ2oYVsyTl6d25674sBz9QP2PRjdrFdERkxfUmDz3IIn36Zx5GrYI
p/ORERP551sgvDKJFA+4AhGqHSYQPbAYG0H7ghuUl6KST7TDxQ0ndGxGfptHnIddKv+Es6nwN8JM
FTUAvNKhLoOcv7eUYjS64rhVfRWnumQfPL2HxTTMps9dYkE/9vzVhqiLdWIwjqualbqrmaqjUBza
GUSMIiukTLLL6AciLEzmoOeEbS9IpGZQ9sluK8VZw1Jxor7RBdKDzi6+MGKL8JFl0zfmO4DjtDPF
lEvy51cWT/ui285ifTZXl6xCImZj4j+y0PK7QAFka/5zLx/2RHqonOoM5i6JbdggBBK0OtGWfeS7
clPZrqzYcS/VVyUXyctjvTvcSK7bII+N2sLCdeAgCKXIRRYPaYY9d1u1iuI3jXdDMvaC5FXXK3i6
UMku2M7k6awngGAoLRcAPRLWmqxGzVzYMjOO4TKIVVttekdavA+6IqBFzX/rXDFXk7GzmtFG559u
sAhAD9Nc7tJhwDH8CbDrVfzCsPpgGnB/qhZLaDYnq464XdgFqXA9QONJXXbzpGzSkxArFd2yLvu+
/BrDeARzG/FguljGBcWPxAxnWmCydfW7ZdxBPipOarn2r5I5wmBaQwwY5iAZdhBNOO+/avm6WNvp
8I6pJPFG+xxqfHIt3mQBRGWld7xnmvuYbRQBGFd+f2Ur3PHVNkHfg1lV2XJCbPjQyOY+UxiXYBFV
dO8oQ7T04YQ7sjrrEMdbqGhPSSG+gf4SoRlbFEkIaMH+W6TjsaRcREFqzgT4VnJaYUj/9JNmodPx
t0DGv05sHkz70TKfwvZB2iPJjzLaqbfgo+ahzQTTq0T73lyCD49pe+a8bqms3oc1C/H0q4ncAt/n
IZZV6AuSPSK50qU0oE5iqqY9WvLybbzLYIEoDTGSz4j7DPEW9c++daLC3ToI9z3IDVEiJPmO7s1w
s0M+dqXNM031w0cMYSa2NiRtJUWnEq9VpoCKspqK4ayX4JIQi73AySILfjbFuDfoCnQ+zXUeecAQ
vNAdhMhxIm7aTmKOU1VGcLUUKUWVtxjjQYx6+CsAJ653YZU42q5CBVeWRqQ141z/num3JMxZ9/Ry
Cbq/8iPUdziZrTjjDW9xDi4aJzn6mTyUOr8vvWH9kHYc6ck6C0+BvcSbKy8DQw7D6b7MFjXeng5N
I2QRRO/9K9cP3pm/aBKJ1zBisDtryXoNZODUZ2tDHwESIp3WnuJ/eNhJ8OKY3gInRyi/nmxADH+5
q2+aRAgLYpF6MBzkUhYrrn7GEnTaENJ4B7ck2Jy1cI20kFqyJX05hb3skV3Taid0ZiZkF9dDnLJv
6b8LoTvZRy4JSoHGs1cv4fbm/RzipAmqENjWZcCqG7KQ/roVXi9lbvG5o660ASeg3LQzfv09FFMB
33oPJzcZcI259z//oLDIkS5/JG9Lxqs2UmkSQH+cMyBqsc3iIQNXKze3rKrk98Br+yIkScHNNZVZ
sJrwm6i1xus4YA6fLsU6xdYTyZPfaxhJgfbd8uQg4cHfyRHsETBbETisZ9CEn+PjiOH3IlUyu/tx
k5z30KLVc2W/6fONohtYpL6De/KUqCgusg37XbHXQcI62KwT7krMJki5wCSbqv3DisMWoR4VEmui
ygpiGPLuLYQEwodEJs0QLtk8yoTClreHptTKdJZlIK/NP1R70GzQZyIiZGARep5qgqxY/qo7iT8z
NhKllBynJa1xLj8dFOWYrJMiTOJzNDnABQWMWTN6qd47N48pFuP452nbm4KWA/Q6GYPdltePRP1X
VD8lIlXRK0TtZZG8OoA2GPZxCQUfazn/ZEp9vA6xHpdNEh13wiHCR32OPf5EUKRThXPNUUImsmTq
0oPEuqBgUVFOu6BVsARnZ2bx6Y1ZbkEEf8qLVStVBZQAPjVAeNHra7AMoWWq6Ii7XMaquhz/vLMj
olEQ6QqcPI6asEe0oWZT0279bjQJZsxBHBdq0mI6o71BuXu2KEPNARSPAkoYq71wGvVrQeWVqQNn
n2msbqaSfwsygfM1JAYMJItCtqOd7Bxd3gVjjK2wyvWcxAD35AESF6gnEzCS7ZMeWlDrRRIjCubB
yVW1t5QHvD5Ww3KUAw9qVokiU5TmK3iilMRTupC3QjDDrfe5tnXPvnDFS6iQ+RKuW/hO3ry3KexC
6A6Mii1SWosxS/3EsRYdRqJ6c9x4ThqQfsDxTB4jXGinH7CJZVCrPKvUACqERua1na1KiqVlFwmv
MrPO9+3t6JKduS0e4mRXzPdHmNXXmUm61cnOE6jyCc3N/dy0sdAuvpjgQMj6WV/RoeaMn0GUCM9g
e/C1rvEDmkGfvTYI9pc48MSvbOFXQCU1wMDMXXTSW+OpTDZbslZEmPeYBHtsc18FvQC2CL9PZfFM
wvgZ7M+orEbp6XJW7M2I7YssV5iU7d6BCnV1xoH2DAir0uerwjwhGHacLnUQkkCHxLi1BUKQpXnd
WUEz8c3AZLbOkg09surq3bd8ipU4DJhpM+9BBGkNH2MCe2heiAtxOo5OlvoWEABvAbacRyUZnYDY
H/LPGwtKjFxQAm7usjBlwxXLXanZy6TXUF2YPeyzxc2xdRIaOS7R6Ra3vQ0i4M2qLmYStShaukFy
NkCFZqQvB7ZW+Pem21FjfkLQUuRJpdUQhIA+Tuq5yfixiP3VJwqRY+w3ptydwdH3Cjann1dAXKVQ
kBHshscHGjgdwPx5cc7rVnBgcs6IqEfUSb9cd/Xv8wQAR848WfaJMBlvqDDLUssRbWJ9Zai/dm2Z
NAM7xUo4NuFDaIjuDLtMnanuFVnL1dn+MoSwffFL6rs5mge7Fq2zUDaJSMSL4Q9P3N2R4tDJkb9O
SOr3X9ku5EYU4qIIINij19/peU7H2AYLaHL9n0wXTrfqmLjDvSzbHKxbOEIcQtAjEMQhaNHA5ZhH
vu1Qm19HWwfTGKxt9oZuAN9GAvatHGfxxpGzRhgtGG3snUO6PJqchZAdFMFj0L8xPJAPgdCSds5I
4yA65DiRWhgPes4gDb9+vHtQJOgdJBpqmlbljHNQlm4QTkv+8U7vWqCkSFfO8UWrwGyL4mOKLje0
MauM3BWXnpT9jtoo51rUf9zJomlZ9A5ZrCDv5vepwht3DtdDHsuIMuv8fsYmVSJYWu/kgbeG9YU+
r5PCmT3NYW6x9T5ip2RhogeAsFkE352hSL3hsI88BcS+BrErbe/NOlSpro2SoF47hjr9yiccKNM/
DhBh5MWHAP91tMOiqUtNI77M4LrzSczwxDuTqlijbay9WUcunQSWf1oIXNIvU3+dF/A61XRj3Qzt
2VGZsyZ9IZpx5vnmxGmPP1DaSUOIm5WOgy4sL9vAReoPNXwhcc4IBVQe+XD4jWCm3brltLlATDyk
p0YK2sWhCELzY+kBzc+OEhenqhVA3Tu21RQy+/dFhms9NUgh5jL6jTV0+MhOnTbxtvCMw68YhO4a
7fe1HtGBlehIdmTZYEZSUK8QDShpm8uNdNXe3Oxkk9XnCvnLSGJYpWw0DCOv5XAQKDMk94BrRZaq
FD5S2XXOlnMopcgwebUG5vA1r5PBPK2FAGOJZQOFKp/8JBjgKKcqHtasw+woFYG0EjFayj3+BufQ
uvmIlMGMP5O1tg7Ra5mjdhc7v6sm4jAASaO97TP/PMifiu4cq87jkXsvpyNWT0xEm58BWuZ5jidX
ObhFBuNBAFlAEMk9TPxkvrpO0A21Q8EMclbqVvjz0FZiB1EwLzB6IMOcrQRksiY3rao1Q/TIEy4b
vEKnmwVrDlv/anJDCuqFnp+vLk2clYPDgDYhNgJUThJWx4SvprwHLV+RUE+bQWLidEfMgkXVf/Dt
XYP2Ze3+7SCiBkUYfsGmvhKE+6GlhHW0SCBlG7GiDmyWftOHhOhTpbuUJUuj54hEVMZ1dPT8atwm
Oo8zMuoBjvE8HGwzeINw5kDq0gRk5UzWQ+H/bZsF0SIakBekCr1QZr31/Tt7gk5rPO39MRAY6SFt
eJ3pUno2+n5BFruECxyhETu3WpdPZoXXVpKXjDmZuGL+/eFZurQIpNKv2Ob/QE8JDhbY45AKOTjW
Gto8e2zQsJ8ouUE8CGRWa9Wg64NwFZzoTZyhcuP4c6gSvMrmR2gKTJ9K5mVNwqTLtsbX4eFL20lQ
amUaYOj0HUsOZkZDdRxXAeueLrHVnA4v8Hq3WhwwwfbV4cq2wO/uyuXnU+JVEZrf87NY6Swq2/43
ngZIZbR+UfeZnXvWdvPuAxn6XNqUTwSCoodB/p8DBUAi3RZ1hGNzyi/H0gQ3PlUaw/d/pblZfMol
UkTfNsjfOZZT5IM//HxPuShMmjBqsOl30FjfXNM78i8vkYNctq+fcr6MjtTqPUEtL85/42xbB0V1
XiUJzWxYz9FOONJYJBr4kicdrXNQazmzn3EEO7l5eGL64APZazbnFi5csNHxbN/SLx9l7JakOGlm
zLJHYt/MUIjvef5e8Ql7R2jHUT/w/U4Z2rDguUMS2zF2K6wMdih83yoYtWzgYx27Sps0HpVf7BiQ
oWiSP/YYN117PnMmst5AM8cZ35l1UAZ2qgU4r4Xl6Yn3nYP5DcUUuRlXliunEs9oat9V/mlyMzkt
LgooeZrHvS9h0MWbGnDZkP4sIuZZ9kb55ztR3LuVZ3/nxPTYByfLRMKC9VGzvm1L1DvGAl8ip9py
5ZXwEi4o0AbbABZIIqooW190P4K371M2ARuB9RoojsrLLYYO43NchYfRKq/qvFaVoOPiJFMZw+WB
rvhlVRISKrt8Llt86ohpbYbgnsx87HfA9fPsKSDA1PvnldBII374kf4Jh7n62mRPw4mjOzcQNVX7
jmnjEg9dDn3yvt2PaaJQg2bDJO0PktMPALxsvjC9a+cHfNnnBithOr28orpCq5upQnWUlItls7H4
u2FUvqMT09pn2y1ow+ex5hxRisF4e3VUND/ITr6mjD8hsp/hWv/P7Rk4A+Ok7sry70dbbdf+YoCB
ZjmFayfjV4EetKJv/GYeHTCcscG4HG3b9cRJelKfiGEwOlgljQnaFtZWPvSQKx//g2gFYU4fL//m
K7uoZo5rIYQX9nCy6eav/W00mu7BRhsH+DJYOiBwnD8TA0nfhReyRlOJM+jG7jIRaw6YUBlx+ORU
BKaWguL9GUKVvr+gIn3W8zRdm9ZQYebVS0i4Ks74n3iDWzCHSBN4xLyuSMN6gJ766SuRxwo0EZAb
G4iS1Jeu2XHI7HVRk1ZH6uRmVvNgyQUx8c2QVGJylJ98HG6l23zi8JSwABGVhqALoK5wSyZemCDp
WNFqR9sv9Hj8ydrt+S5LWBYhDnAWWaquCmAEm+UDJIrP5tYxqYUIbYh+mMXvtZoU8PdPu5aAqEqj
TcPcBFoW/XPLypgyJdWoI8SmqCMt0HCNWNaMZtoF7bkcfhTwi+iaexaXOUlNZSI67kt78gNBTOw0
sgZUcM4uCleYcDJ38sT2++YWdkNNHOA9iuGcysvBOfbn3YhddfWj1Si/tXyvzbrNWtrtntt7Q/Ek
0oOD2IjWR8BRQld1nQsbf9srmr43aCZIbZM8xyqEn+Ekcm3LDI61U2lgd5EWxEWwHvMRLN0WINWD
KE81SI3+CylFQCrJRy8iLEZlla3nbKjwcRBhotpRQ4UYZRJjOfcC1SBGXibTeJBNOZ9znzs4hCul
fj7Zs39vQLkfu0eNXHMaQVN/aBU5Iz865xwsD8LRWWLGLEu5vw26Z09h8J5qbKtWIYtBnNADJoqh
Tuz2MIayroVL5qKVWcYdRaDvWag9QMcQehids+hJpwtPYkGzF5IoRtyxnj2UIso+k82ka0mV36ty
z3XMuq+8MFzUcSR6jJ0bD6mwjI+RzYyKfL8/dsKiE0mdZuuFQLfDgdqhYeIXkUEbupiMCLsW0Sbo
eYt8rnAUgxuNg8JH3LtLSSqc1oXFArt5vALmy6d90R4w/6fd5dpYe+ClqlnJTAmEcgjA4ZDkfMIw
5238jWKorDQxvBwHpW5a1kb0fLQOme0rpqf25KE2DF3xz8tTOHXQ8vPBdSRi9tbk2oOGE7niMD93
YrbHCwRWsuVTxjlyozEdnuHz23mcbkXVJ6vJNgu8LBs9+0Yh59VUnxF/MBXw3+h6W1dRk4kdHsFQ
HHlk3JqEa35O5h64OxWB9VKtNNuN8SaeqPk9tAW4Q/Ul9tkLpLdP4xxAsjRJaHSwjOZwbfwrzCMb
xnb53XikfE/DrMdHuZUHWlq6GAunbN3YLBMsJTkkMjoaR2WZsUOtNnBgrLsnrSXjahDXIVDw4SBw
nxCzTvcNWIRA+trZvoAepSvr4FLewHqxH/oNVCEKncfxI2PObxU00j0IhD7L9IgfaZMOklOpL5rG
iiXCZcYpBx49g7DRpJELrgR32RspSQElZgrxqfuY+9IYlZGC4qI6SDzfcVrRAijzP+s3DC4cwUDB
3g+gX0vpTNiMtx3Q9bmJQCU15brM4wZY4I7t1dvfZ5Nr1BgYVCj+TDssFkD46O6nz9RDfJ0xESu1
mz/bS9xzh/9XmE5gPYiXyyxoWkCvTso6lG7i7uvhf7u5Kwxw8P1vuhWBMbHIchc3V8Y0TrDhKpFT
lhNhWBqKM+MSvsPpxwJfOBWdFRYnfhBEGfqx8dAiGwI46/F67LY3j78RQofdC1grNQ3m/GO70pQp
b6SbnWIxzi5NXCDaAreGO1aReCc4UN63qXCRzvSe7m80I/vhxTvqkf1GGIR7qrniDmEhPTdXIoGt
V2/JjOBRp/K1PX9Hs1llBt8GeH6pWRMy8jo8S3VSCMSrAi0NGKjZbvl+AiFAimFakFxi5KTp8wrk
eFaobhtwn8FGT8QjzabVpCrVedIE8GVmkKxq9Tr9b0Hch5fP8qcw+lRhqDgrypHgsb8JoEzz4zyX
ooCmF7eS4JVeL4WzAQXLn2Mx5isgSibOwWVP4Dh8Qi3x+sJ2O3vNoDAHtlUZygv3ZzXVITLQVqh0
SHKL0ojao7Hdi9W58xLI+9cYGdoi42sx+/VdYQ5Zs8Lwmv+IAYHnP5A5TOYV+49iv3TLFQ2I4eFn
Jh2YxDcv1xI5vLrL0l6ZJhqyLXaTPOANY2urePTCkJfWQEva4XE2BrwqC0S5JxLBLaEpEJatzo4j
iB2yzCof/U7Nm0Eyrq/t+iUvl9OFGEtkGrThW2VlJ4J2GtdklIyDW8tYBiIIr0Etpz68gnS1O9yr
sq229/jMKHxRn7Ro0fbm1tuZJHLqHsgIZnJP8E7dOrTigQ0SbxKibYPM3SC7yQXXDD5lHOlmkZDP
OcJXoMHsRjpIRMaEih/2FRacDlFKrlqLnXtk1oJ0gOAjrMHSrrdJr6v/TO5rzWKnzYde1Ioh8kmj
Nkryysaw061i9c1PltpAEj5aBm1IcGqxM8NZtu/+RP1LqKzbX3C3n7h12+kU4WVr8b6wjUw9R5zG
/UrULS+vY1MccqQlDSZml1Hny4bGQ3npJE+qrJ6+QIf9znO4tkaSHr7RzEI1Rf1m3cGnU2qPn0s8
75DRqzRhSCfCeXbTm0VFk0ZqQFqElW5GkMjYjSKAkzb9iGJyJiG9JZX3keMJUdfwNtVbuQkmVyOo
uawHTG9fEckVVMwgIojse4DBZjkp65kRilG4r32lH3E3rWFfXJArVJVX5/IPEKxOJuDZzwzNbx9m
VvivWbJRzQUt8lCfmMkhfvol+NHqUMfZOm6W2nBpCVjvK0yL+0cbDBqa2AWR778IVw6r6J+ceSQg
kyqoVKfN7udpYAefyoFcwDarr4ylvbK9ixA/M7Gbz5ENXnLjUYCs8iuKGYOgSWISFE6CrtpLlw30
Qciyx57Irxukfm6HOJLlE/SWy0hxFEnxXSsXJCfpFDaITGwQLfkr9oCtSRNsePneAkul1F5DAO+W
GoAdPLMKqMsbiHKENs4T+oW6B7ZsU7jvK+XAyjHUfcXcP+XGcqRNsOkCozMtEV+Si2Q096H8ZS9i
qYKH380sDvx/eBx0Ozolit4phWAJG5RZukQlyFpkAytL5OJZHhNBhcBrHR+o3zFvO8R3wiZ15XiA
vdL/6xxozzT7hsctI8us5zJ7JHsq+EXdgE3lQoa1i3Oarq6QUh4tlpA/by5qsyb8uKHyoPRlxaym
9JERpfugWEw73CF3rQatqsp+xuJ70d0ai5/cDXCeFYyjDduKHN2gX8l1A5INjzBEE2KCttEDihc3
Li5NiOEnI+ee/5yofGhKC8JuQ2WiXM5V0887fvDAmuMcEAGlVN4rnMRZPLjlzK/FwoC6oBduP6lB
EV2IgiBZ4HCVNfYpl8c/0lL+qXZ/Tv+IgCrAshax5iGxSj2OyGyVQ4PFts96dh0jcoVLPVxfchXk
c7Z/3r/rlFQ417cI2y0VzwNzJ0TzWdoqkpsZj2UFSMBSga63ZgWIEESGRh+d19BZ9h2OPDjVjW3g
70df2HRQ0yJb2vzda7YJoQdBTiNwUaWt2PEC95Gs4MKyj3L17jPZLPttOO443FwSSaDn/WrBJMe8
sud/cYz7JRK5qcPLX1X1S+1K4xbgFcp386JDSEy2+i0NPPgzZ2iV+JsVY+Av3wIvWFPCDk7J1b4+
W47LFoOtu8dZpFZNl94Rgb5CNY4ozjj5LKSjWAhZ6PyechrgxyvPRSZ5R8to4Che406Hb0Wk6ZtM
Km6Y9X7mVt++f3Yhod4d8AnDJrze92sHAqnPswfjOR0EZtTsFEuFelPBtVCjSujAa3CUSq1XrxHH
pcXI4/aWeeYsiC8S90yG6tiMU+fg+k/cihSNdtYnfAnan0dBE1rH7TofrEAKUJXUX4yqdMNm/u9U
1JSOOmX5aHh0PNc23T94MjaZcjjrAuhOzh8zahxaPsrrveahH0jLbQ0kLaARGoYT8RRFUa5NVSye
j+e0xICIu0mNfSyH/XMfx+3M7Am2ZagtlICwh3fkcvVwhn1XhJCDBQOqgR1StoOK25VQuneBczZS
lPA07SjwBvMCsZ2j2wlaXcSMA5aBa2vM/WIm1hjh2kVGIj8Pvq1m7EcTJ5Md0Aez+bOqkW8zYr4g
uxeouIYM7TdpvKEtBFfU8IPzDEGAmQxAF1UFlvLS5o+QANAWPkHah5uhLXIV6wfk4NYmGytXJSDX
iSYqmTw9A2JjlVy6DkKeLXRZgMVlfA4pQO1yRhVXE+YaTyFXhmQEsuv8qo0RnePWD1gOHKvgJIrc
hfIKBMYk7vohD+lklS0JArPt7X6qc8MYpC1Jh3DwjnfYixPA2fEW6oqtCu3FoffgBOcpGQV5tK0A
LaMSI4UvsxHEE+r8wCnHsso2fh+fytKT0LHNwQ26nuHZmRaEs8JRE4MWZD+Q9Q7NI3GeUh4cHQul
wE20kJ9CegXTZ1+tMLAWre6QwfI94zAdX18AkzBThuzajyPLjTF4ExCOEmm4HnZmAGjv6j8GeacS
OcERpbnUKWBvU94xDNCU5E4qiPzyT/zTUO1zHCuqlRvFLaRw6M/Ykvx8OHva0PmxLShwafg8Tpcf
TOTTfSMfMR7kwV9lLmD8TzbvYTFTUJZjge2OZnAk/wrZqKCe2+WsAy0mdUcsrX24shfFNlIGaKn7
d1FEtz2qk2Xkp7OiUAXFY3oyXYPuy7i6ttL4WFsYD43zj8OdxwulZWIjAKxnaIwNHGKhUOXU8wDa
JaPubuqMCIEEB55Kd+XOw8FMQdZNjQuenSHdrXxWaXnU2MdLDY1Id4bJX0OKUDJ/aA1BKZGiey7m
/P8ianeugHw3MmR8wO9qitcAMlxcvE6Oa7w7vHPa56g6QkksoR7OcZGcemg3TzyAKLiL4v1m/EXA
YEA0sehHYtDx0dTB/RFBPaA56io9D/D2ehUixA3T8igMpLiXIvam478R4crnAQFKLxcNE5rDgl7d
AEx0bYTk4JQtoHSmT4DQ5vbeKjHKOirHuY6wevulszG/H3hv+0i2NIfwr0ic7SRhj7tmaA6Xnh2e
C8R0lrdTZHbPT4DUsQky5MwiSQ0WkSWSLWVO2yKIQ0XjVwlGEfNFyvS13h6F0osuDvXi1MPlNvuU
SCO6Qc3PkWVsPxWqFDpdMny2tbGN8MQRUnIGPdz0srBDQUJrihLZrpdW/gTONSVmrsmLcd8o5u6D
LvMeptuo5jPEohw+gyHPCxCpx9L0EuHxMsj+ENrO2xBKlyyAL/W6xIBTzZQVsi9SqzBFJ1hLiC9E
1XzkvqC+BI0Uxgdt1Do+9MhnVjzarwhaU9SvviRA+R1MIJHQoPfENEZH5E5TMSDYsDl4wsFjzVFC
VP9aTB5sD0TxAIkekeFqJBQVYX3eANpBk3CWv2D5I0TA9Lbdi48alXcodefkBOdbDRLgfA6xri36
uF56pJfUQJbOfLfSizsslLqwUmtOWWXO3pNL4Tq/zWm4Qiae2Iu8zcHX8msaEndTWDGFNMxfy9dQ
WibGaVgV3qPv/SfDAA5iMJY+O/+fhxPSfeXOiltq3pYRk2qTkZBMXpMVG2/UfMO72bKmIILC1r5J
Kv4dOJwBLZBurfpLZ5va0MCEzuRA3x2T/g7WnCvAJEW9s3J84qWzIzBvcmjKfCSNNkxVEGu7r0d9
JDANLTrTjvQIWTOT82bVe0+G/T/vjB+lOMRzGP8nhvn5vVObvjaT4QQTG9fYsAbkJxUVfCC+doii
Yj5SdX9XbkzF4Ti44VPL9scEaNoxPGhoOhXTxm/lzc0dQ6h1w+USI9+zR7FJXms9W7yfGxDLNsCJ
KZUUaMejx4qZ7nWPkh9B0Jqjw5eIcxW3NRk4J8stai8EJXxzOa9tJV+2blp6aht55H+Ej78htCOS
+7RUg+oJaolMnISbQyMoWV5rc2PkzK/KZbmfxe5G7EPCiJHtdVntEsZmuMlaOeFTA8mTam8gMjrR
P1FA/TJPK2inmmsocs8PQGHQ8plnYZUXN2GO6FUf2lP7XnRXBLGsGbU1KVAqh4T5WnOQo0mMRthl
RtYSokBFpc18x+ZnWmmgkkcYnOwpNsrcCtI7J9GylijaxrMu2VFum2AVW0qA7ic6nJhUlbvImBb4
oXrFamYgcDCp+BC8UJ+9rviib1dMhwb3YpBUBxE85FtM8Z4fmaMHSh+49nK3P7OmmkLTIQVBQ2D3
gYxO/6uH4VbhKvgvUhhmETyJSI7XiAVTdmBoXa+gtok7KaBJeQD5gQJNM6G8GdYu2ygOzYFhPNKU
nho41dWE3PDAuXQ/VhkKMDcpUGpp4glEl5LodlpKSoWLK1hKuZt5sVzDVE9zGa02UEzirtJgIJAm
cqakw/f/bbMf+C2R5fRaQ4t+OJkoN+aTZuASgKvHl24CD6Oio0Ov4HlrRMlTC3go8SaJKNF61M51
Qn2m85OFo/30L39LHF6zsyYYDDqjPPhWXRBWLDu9Cjd5drNVqxDyAkZNhfKky6BbZ2mimSKSFiKr
woX/x25WTIGofsciErN+AMc82kfHYPChvgWu7vwJeUR2XXwEWPsAZLWdxAwHACaRKJMJ12FxRH2D
6B6RZDgaTyEfU5B7o2tP04yULVt3UxxUWX/SPe5BEpQ0v3FhEGL+VTYmjXzj0VQbTIgSuE6JLtYP
e0+XCwf/6duM896uI7UqknHVEnvSsvCPbnlum8+dTqnowjMZrAer/kmv03UfLs+92YoM/lvJn03+
n4EMqBA7dXQGsQbCECi4RctsDF3klPsGdvtOtTDaUS+7FvUie8hNZQlqhZ/yf/3DlRpgtpniD5nf
x7IRDmREccV1DPlEXaILkSFn4pRVoH8s6aBBg7W/M/H/cVIDIT8HFm8KMAzo6vxyAFM3NIaiolyh
biLhEdPOyzVNrSft9PnmnCAnjlxbaZYTtjlS0lRKOH863u6no9Hq6EBxeucbUjZR2oLsd9fG/Y0n
gNNSLx5dIfwWJvyxb4emfX3vwSy2nA9L58xSCI6lPZEGJ+SXUa4Y5d4CJbPZaXdOPQ/r9m4OOW+Z
eHWsXE8rJqSAd5fdgbplWS29xdGq6YzLtsOC9GdtdBvVdi82n3OgHexxPVFlme8ihAjZCDONHUDa
Qf+G7lh2XAFCkOxNABP4+0uPhl1639ddCD2tLoZWyOX3fMFMT0WYhbKk3LF00fTHGAN7IYekkjyE
+g12mv1un7kcFcam2WM048YKb409O2ctr+nX1gCPCTvMYZNxhlepJLmT9cKaCXNy9cxGJ7hGBOW9
mNF8/pO39S2OkLpSgxvr+OAP4IP3pSPEtwRDc/ajt1y8S8RY4VPRhiM8aOzVSRUUNtCWnrMTDnEv
xsEQA9xZ7PgNoWqsMcmhyqobax1pjmv4wbe/6scVpMQV06T6TRrmtDnaQSR55Mgr4pa6lvQl1grJ
mUxLom2NIfpaXrQ0Ont1n8BrKfelunImMImtZ6uFXm8skW2a5TwlwgZwn4FAwoqDaLTtbDp17GPq
TQgm87vduCbbN8F5JLwYB+Tgf8yd6lB+2oaCNh9oNe3c0RqC6da9UOl1rOAoWq2+BwkJAR3Om0+M
nD+izjDFOkkPm+yL1b8O8kUpym+qgAj/ufdA7y7Da2DKaZwxq5zjpQOmdHsujH6q5VXMZIPaR4Tt
y6k2c46j6tg0vCHrbR2TU96R1RObRy/xI/VW78O0EXFbuzAEJiOMDHR5SW+qC+AMqFozD7fuTdej
tAu3OslHCSh4u9rWzzn0ZhZSN7HabIW3pj6MLa648aSPsq4IfG+SjyIhw3kM/n9lSrD0ALV2CWmC
wwjAbcis43Ij3tQXpvS8mMnespYwkMn6QYY9ldMb9dv1ai2WXzz+2bFB45BnG+hKZ5gUD8aDLDwM
koJa/nTdODORAmbFGkfNAT6eXPfXQeAGnUmsM1ydBILSg/fy6pU18+f1z0KIXHNkBtClh/CeVHWz
f/b1dq5f/+gobDMl1u90UlrT5J7fX3Ms4/ZUSDEVoNSGLLNnEFB0NMZHivG6dS3aYwesnKOicM9t
lXa95GNr9Ibc9eQAVfWoqBQNbq45iGllx+EeT+Uj2N7Bw54fCc/lcSNW1weYtaBaBLwlVzRfuhVA
ATHXWji1xurj6KSPOv5dskWTHB8J8LJfe3Hnuygss+4qj78M1gzDQpoi7CMlyHzHHA6vvkr1Vs38
vO1lLAFdcWV7hNyceWkFUl9pLSp6edCH/Rv5lggyiVk3V0P50fzTMa4/gIbfnSN0ep0AybifIniB
6/S82l2d4Y6yR4As4c4HpIqDp2hLSNIeuOtxj15vDvMYH3ku/Yr8gUwFqCrBPeMSeKIpptHuvqas
eS10KVB2stWqQCoZvrftk4Q7KV8w1YnQBZeIWIeRPQYPoIE9kNJ9lzhssP8gA2WrelVM/ud4TRag
0ky9EeGkyNm60wAm8ZNYZtFvQom8Pv0mnW3p+z6xvt52Vr+NgWUCrczCEUJn08yWNJw/diDt+MEJ
HaRoEe3+ArHmiT1MGG98G8nVc9Fz4nuT79aT9R4gZ5el1bQYKv1CO78GGdq6I3HICn/4fvCWpZuj
O5nlpuLy6VkkrEAHROkqHg4Al2+dvRq2ytmCmYE24Zb4PWDvDBR2nwoPmkO2439otortGvAkkGqQ
rdoKmCXPR5oi+Tucjqi8UMggp8iXwgnjOSarcotIXGZBpVMkp2DI2yDb3O4xRMTb5oZOZXPIhxsS
Dymu5gRBjn8Gn0FbQKPXhaDfrkSRzvnp+qKiW9wFqU7eKflEdb+59Fd8oYiusx2EmF8Gk9jln6gu
+hMszeWfrMZk1qbcgCQkn64ZVAiJTp3dDGVVsI1HJAlqwYHrccarAJxZ3ug5z73LkpkE19bm2xUR
gGRyH/40DsH0oLWVLQjw2c2tubFIcUG7z3odoxA8nhFESfNm29vC9o+rEEGWp9WvVRHAXA6JISpW
tFgBVOY8RJmZXBLxgmKecnCcYiJ7VYGsUp88VFuF/J4dRORd8HExqI/Bd4w+v26Q+CIg99scpSCi
eGyQDipgityBWD/VBZxWplfwfq6WLFF2h97GmbC2QfcqTu5BZIsGHWhRMUth7RhFhapa2bptCg8s
e54gZUfm9qN85Gs9+Oj2zDinvpVf8//vBVRfLjxkuKhAx8MUMDrLGhn2nViFFHvKY6rN86rsWNV9
0rIFaFd3wMAhDKHyCwzO4uOf3Rfk9uzGuoq/Dd6pKC8M6FEUoyM/y2CyyBXred+pXPjUXD7zLUke
YRisV5QAhSCr9phi7fS0LXXOPiCZre/bhsUKMjQDsMPDeKS/fMO4YL0y4IXdh8QalNDkcbMUczao
t+n/HBqPLIKBXpk8Rol7Ws6D80nSp+Y2NcGrpmIXXS34qKScEUv3ROKLItVysfgqEYnAsJ4MBvJz
xDNm1MxlMRxnz0y/uQLk29f4zJqkMM0zbpnvHayJU700xwgPYhEiQUiJ2FcMBcoiA4AY4zOvp8HK
9X/vPU8p+XCg+WbgnjrlnMA1HaXXkXzB66ZxWPlDKhJTYrzOhf8hNeUtHXereU4TTVw3OY9L0Wud
scymZY1gWtm13Og1pKiqqicVOWbuxVZmhZQElcbki8SZQRp1rYiVU/on/OCeNWvQWlgSSEB7g38Z
bvDueS1cQgPGzPQ5MwHRB9BFEWsEKuBVhKMyS1iMGARfpmJHKZu4Kbp1V0jp69ci7uE7XWndI/cu
qnVptVrZcdzPDXwf3N/ILDk+I6IPIntFI/VSQMgnzqKjofQK9elfvpevE9IfdfDmhxXjc4UyH6bR
k2ZZt9GcuYzVL+iqxCmUmcE5tLkU7xSMcLmYOUcdfw1fBv0ynrCNCaCiBnJ6MvOphqZRyrB15kGE
c8RhN2ZDxTOB2H4I2+T220kQb+YcjeWZR+ufbWa9m1IQJyWuufALIX2SsasrG/v25dSmdwfGRUbr
JB2TNG3uIEoPuZx1R5nOzMsen++PLncfDe4OANt1Kr/SVwuXsNZx611tNHpPshMWIAMn324dH3/v
9NAxjihqFlTLxYtocs3vPTRfTq8eYZJfF/6elmS7u1jJPmrjlFwf89fmWE193HAUMVYXuQpFwK5m
EwdS/Zsn7TVvVYlKRVAoJaFgEb8yNY1b3Di8hF6UcuRtRUGis00edyv9onv63De4z07WxzLxGU5J
1vgNC9eOhHZkXEVmLopzUdxYciYcFiEFJCUZvsdMlY+G+MhYwtsERc6uYslcnVvVcYTybNYaXtXi
u42OzwfgNHmCgMV3yaTsclW+CKkVV3fXxV9Azsr2rx5OptrH8qzEcitv73b7NoG1A8XcJ0G4sBPY
XU06mqEojlJa2vkRks7BZvWrrkH14fssGHUhRH5SqXNInzo9Ncr5e8MutrtBkILAW+IQlaYn0o86
zcsXWW7CyDw+tkajT6+Optbwjlsqy5HCIsKTFHW8MdoEnhNAPldlNKT9S6EP7COT4EJCTLItK4yI
3vec+1Muvw//hZrYeAsjPbv0pWVdCGiytA5oHhky3EMrbeombBRKuXmqAIQ1sw8n0Fr5O6f+TNl5
O2b499gxDa/EsAyWoFuVfkzhiTlDr2O+V7LLb+hXAdDAvyKTgMdz1V4on2baChOmmTKC5AOobrCR
tknvIwNArbpLlynb1AKWXHE9lvA7gs10u592MJv3GoWyYEYslgNqnm/xeGEBDB629FCMDvD3Bje0
eGYJLYflYQftkDD52GGmHI683Skvqinn0CiBjfHVf1ea3qckrIkJG5Mv/xrqQnNmpQFetG6ofqD2
VicQQ5qXUT6FCnHvsDUCyAgsamEBzdVTlQxZbGUJbM1g9xpAj1NNJJBvN3KNKKxZBO9n0pUDWORf
hK/xurOB+JMjcUJKHqN4fKyrgjUL4B7iw0AuNyRUmMMU4CpBmX4BWh0zSB5CJKjVTNTyPMXwaSiG
tivTiw1crHghVXUKz+XcyVMTo4OF5esx9YjaIrB/UJNppQg1WmTNp5Ry9vGp9jmCMx2AwSaaUss/
Hx4IPhXNY//Wd8d8pTFkpYDO7NPJTrWg1cbHMwRE00rAQb5+5IcGwRhgCV/+WOsQVOeuSLXhYeot
OxDGJAAtHpUufentH8CdXfkkinDaGQd269t/qUT7avZhdTcCppGvibH6yB/qiXlIVlgdoRInDSqU
R6cfar/k/tOmiXgFoUgxMlFm4ZB6g+ShxzOEJe/UXMxLCn0Q2+nnMgjpmCUp2+c6aGh13PrsVFUb
d6KCE1XD/D+3SN7Y5C9B/mF9uaZLHyjq2zBdzcDgSllfNOmeGKAAKtc1frRKD+guyBladyW3NjgN
lzuYIHeDc1KyLFoR0IL7WMc1Ax96PdZIiuo4TMhts9OazmRJ0tjEmqege3Pm0HzlzmQINHf9V2yd
LtgA0rAV5EGih3Q2+QfCiY4ociHx4GIzM5ux4CEPrrEYhaOMIqfMJn6cfrqQ1mdaDuebP8MW6nMn
DyMr/GHTjBEhFRWR/sSWI9VRXUz/WJPaZ3jnah5eej0/vFrpjkCQ6S6yip5Ald8YnyJFwj1WDjdl
AxRUIOSaQtsLY7jyoRDw/sUvfiAN58pVT+h3lr/30eP/NtaD5facdOa+VdOQOr+gKvUp3Dh5yOvE
B60/oCwJlnOaZZiJjdaaYhCSAw43imSHO8I5gt017Pysiwj1e+PW2KJxEebfFudhYXtKjO3bc6F4
WsJ17zCjcEuMQAEk3JduU772nbwIdP9a9ls5ioUWil6UixVQ7r0CRrpNYmfUir2LPdAQr5FiD4Hq
QGELfFoKrmau3lEsOVp5RAmSKptbglfBfIcmyNr2QQT/XxkeMrQwjwV0LL9DtgM2YoOWW8NMqNNC
BV47wMACUFOJLgH5jjritTm0GaIbdIb+0Gl5iXDgXviE69l7grUtGIu1neE9UMDDXmJ78P7EM9JA
SqTl60CaSQyRyLWDkn3cDO70I20SawMkOCAZ4ddNULqru+g9M9XdcMb3XWLRDEtX508bLKicSkLK
oyDo1yoDXOnW408Gcq82rSYBXxOItGeO2BCHBSLAE+kG5gp/YLmI3SUIrUJBpqnpBbnyyaiIyovV
5uvA0Xi+0C69Wgocv8mGwgXMIfq6CN74MOliSQw5525KFjM0/theszB3fYFqKZReJmJopJDcDPbt
OBYW/+XXJO1NQDnk44aLeDyD6VYjaMCKc36NI3mW0EhK4tPGnkyBkdjlW2VllI0LL2yCLdU60C2s
+XJkcDp4P3P4cd4t797Kvo6cfLDbwBYsujcRGb3SW3KLAsBN99/yVFkWaJ5e9utA6FcI0ssW2JZ5
KMcRpwNqADGivKTFNL2E0PZpoCTr1tqQ0Afm4T8kuNgQOInINvPxvdqgH4QfD/87OlXXeXdts6Mj
PXIpkBzOGb6AnxGXLL7GraQWoxXVAHnoYoDCPxMdOsM+xDhj/q++/JDQX8dlwv+gBt83lsNzwjJl
xffkBsF3oGxobTDQhZpvYwedjNikQr6MMCcJGc/NBvTkTUpjK25LvCWQsAjUW0qER5CGnXLazP1T
kPTajn49hkKoQB6v+HuEvEKW+veNglaPQ0cxZAF8OJn4YQDJhZjai7FVrEU8h8RoPgGBiqHwxe9e
jupPswDuZbTcLp4q9JYvNpsX5+zOl8Ab9484nhGBBeb1zbrsz0aaJvhWbdbmzsfnv/KpbVEGDKf1
IN1cDBJSSlVgHRETutvrjpPOeqLPA4atoJwKZwOkl+s80t0EJvI669Dce7fPt5wA4Hj7gILVahoI
AWqcSQB9iMqBMTue05BEM7AA0V1TY4BjKuwj3kpJ/1SlZ4ZqxudxkJSjqcYgdCauzGDHsfrAtl4G
8203RsAOfBN121Kze36yMkzKJjEzu5BClVMUzvzaMZM6r27WZweP6q3yjL0x99Jh5JPYZqOwnYAw
0hvaEx+bkf8p644Dhq7wB/aDArWnmkQY4F8rYkctHI8F5zVCOo+8YtfAT483Jp8MAJxGHoMWgi2i
GJ8Mb6IaCFRtXQ3FvpDdy2fVoE9xd+Qzcrx8jIc12sQBm47TDwYzxJclbm7m600SwQ1744eqBVwI
cfR3TtwL9mfBY/QIuTrvbYYyyrnmthkw6r4G3/mKXQ/809MQMAitzO2meWeuEiScsUoJvSjFV2tS
ptG0ORaUB2xNSnmTt4M0xEadOkC6ae5rSLQ5XhhXbSU+rtTLffpM9kN4qRPGQDAlkcOLxODxnCkv
qs3zbt9mP2Yga3sUjet5jhvWv44aQATetzPWpNtpezamPWMVsznARDDOIg4Uh3blfJBDEeBYRuQk
I1XCZ/wGqccg0lqD8d9cjJ+veZz3d3nGzo5PKJ1iPLllOL2SKQiR6wIgkCUj90NULdoXni9eQSqh
OtF8U0ImFIHxov/j5XV9bfwapoLXiwTsu7c7rXito8WF0zbht5w3mQ75fkG4IDy0apJ/VHkDEC/K
TwUxr85o08guWQYHeq7pvcq/r8Jmal+aNv3lxyilyJCwuVVNH+7xGOdAKsRm5HFsnukgspfX0WTX
KL43z3ZcNgW7Ve8oM23XnSvpqnC3NihBmV9ayKfaXXzk7q702u8PthTuoMIOG1FTUIBzBIUnEeKl
9r11w7YxhzubhBC5nP0Bo/bVU09m3exD5i0QMhI1gpfD2D0RIDkW9NqHwvbWdZLzqGLDvMhooAoE
l0LDnMZswVR9cwwXxqeEcSj6EX+STZUkRLC/YUlvFfNxNL0l8QJ+aci8HX4nTES1+bjay0a+M5XA
Wf8FaoH/lPSXLSzP/G5EEErq33SMxkmerUhibkhGZHezH6THwQP/hr+xuSL+gYSTBu5cm0APpJ1T
BV7bL1T8Mz0DYGpNJLOeSngyoUzxpWymBVlvOZ0v7l4PJScnwvlUzLgVmjdxpXGh78TdHXrAIqnW
U7AR7fIMQxKCFlCjys8u4gaMBsLlWhuPwdQC9wLHGp1E55aBLcNrWH+BitF9QKCC9cy0ccjEd6mc
xc1qxHDFXdaJ+p/i8v5iwtBvkr2TUjiA54x4Hv8d3stBt9z8iEsoyTqfPB5CoFVNZPTjsoCoyqKX
H9Y7tEZgkhgUroEcUswddEd+Q9hUjM4OJ/Ar2/EwVqPZU145LRgA+rSQ7B7YJvImkHKbBCElnqih
HJqmkkk5Aabs0RX8wgSQNr47eXcTsPFANjSLOW+e9LsmdgdPYYW5fIKvc3wn7JJ78pAhWUtojkSk
7EWa2O2mFOGupFPQlioUaMG0WEezooAJ2C8SEnOo2iA9+FJoaw9foxRWx7wkZ/0LeUcpa+UOh/q2
E5a03Ji6RZotWO6U83oBcplFAzTJ2tvyUGdrP9V/XnsbjHb91UCEMVTzSoYa9ioMcQhjVMXWiPIN
A49BU1JktYSCoe1uZgE+t815PVTyKOdN/Zl3nYomuFgK1VQjkdsZERpp4vzZgiszFNM+yf2VSYtp
bAfuwt5nQ1otzchNb/hRhb87+JAMMQIJE9TXLlDnxrTZkaceUTMbZq5jMJz0oDFozQ4kwI+MBq9G
bIj/VjwQ88iRa3A2HGyB5sUY1sGGIWXG7Jk+7CLVV9Q8vzwdDUJ0xEq0dFFKjpkdk8uOkhelP9up
QmcjmIwFkvboXro+xlLV6a7/hZC4vfXmEcJNauj6FbZ2hsIBv4KC5UhpEvFn6yTYzfx9BjXMNmxN
fm788cgssg3GlrPkJwkHeggDzDxiKdUt3cbL45AF56D/dzJy2D97LmepQmIKfzLbhNhXMNOlmow3
DB/CwDNSpuHoG0WjDZ2dT/9UgqyErmdSarFkn6xfTHHACH6r7TiUzthsCLtzDz7Wxt2L92ViXv8V
JvHn3E+uS8WiZcJoXL7946TzDvAoITzqi5mqU8Dtm2TV4UM4ZulUZzn4BlHiEmv4692jwwRQucb5
x77wF+89SxwZ2C00zwL7v6FXgymFDjSyrCBU7I7eY961jGK7x3ipI7P0fzkYbg6PcT1WZVU7buRm
KFOMWb0RrE0+bWkf2489LOaJOJPbuV7WVZYTaw40zdtiW2PYGIrGO96etGblkn9SpEP4nqFzyAZz
hR3ZY8pTv2xALU5jSOZI+3wtNOFF2rX2DNKlLL2TX3mJRb6B+9pDSbS7JStg/IYmacfoJCSLpSMN
/yptnooN4bnYpukxysqEiUUNKm8y3CYkEOdjQ4Fm77lhmgwpfvkMGQnz+Gnu8d+K70UTvryzPbk3
12xT09tvCjjf9TZqj2UlbwBmoOIuwXS+5ZuMiS21mByHgFyvWkD226dkgTIByRk0fJW2eLBquMZr
PrZ8is6ivoxQO5DBFDvxQGX54RSQ8hJFAbzwtzEl+cDNN2PgYmrifo0ats3EFxqfKoAz51VZdAi2
M6CkN+kjsKfaHXLcjGCW5+/FQ1YSHnG4wNCuHdTUNy2ovunHdTDjg8VEC7pry5anaTDUZ1PRYDYv
Ab5W33ANTbV7u/yrB4mF4+e8RX1guJhzxK0xB2r3OG9SpE/pw473+DHYSWyUmGEy1kA8nIYL9R/a
XcRMZYn1iagSwpyjMYHs5I3dJYhRzOwB7hy31gQCRW+GNHYJdEAOyN6XAuXKtxNAaHjW33Sd0vrd
KCNEdQSzP00BZ9zduwGXFOR9jyAZRtca8wJY7OXuDKPlnJUwEmjWIwEyRHZY0Afe6orQcy+mV+ew
qv4hP0wvKvy9GIBWYC1UpArszr7cZhQFsKvEwpbnM1HbMJxapOsN0KOD3PvmV5Iszv0R+EqJbKrL
Q9ZU+joL8TCsDZ8B0YLX/3gLZfF0m26LlzsU+nqpS8zGEWVJuG3rAVqsNvcMjSf57VLqat8Et/kr
PL8vxct9I5P8dRwG5Vi51A4Z350ZZbmqtP6TYmKf/KUkxwAoNPsTEJwTgmy9nimt4EmpkrwdrntI
Eop365h9IjY/UjX+VsIfduIzRlyngwlEFCO4sAkNi1h2CX6gNL1THnoq/T46o+6BVLeGqIzz8SJM
v6AwgEA8yR3n4OfXKal1UxcpmlWJtVnL/VAyz3PShgFQsiQ8Yg7dHoWucMYIDT1lz9t9X9XsTIE8
nf+QkIUQY5reDaakIR77FSWtRCtW/LGv3ca3zj05iw9qeiJHzybb/SgAB4TsNpAKaHMdZlTSwfmK
mqjh1KNbMK3V5KaEqn2vYjBdlKScZIzXrN5DXihsS+xb7mLDMPZFEP2NgMsc3bDZeDbLcS/P1f8t
xeA/4xAHHzjidmotshLg6n/+Fp3lC9wayA14ekn5DaJWoXa1RLUY54lWzzZ4IiV9lRO/g2ZhF+qN
HO3KTLqiAKKr1MoDseQ2xwtNXfZiamXd+VyPr6Z8LxXL5LsfvOHvjkv0TYBmbsvcp158L4HMnrDn
dCnUrTZbnDfip96pW4oK0gNfz9FJNOx9iZ8QpSRliE+SURoM+8/7y9uJAT0q6bQKxDecqoS1fHZO
9bOonCcs3+HtSG2keA77XV+q9hbyjjK7AzgDvRlsc28OtIlR6zilfMm0BgkZJHwBmOxSxU/0feeC
qOH9A0N+02UAmKO9MbO2ORepblrL1sHjUGmtoIL973vgQSCYqGCQuw6Mv3d0dEy5+w/YmOHeZUmf
8yQ3FxWBgtXuOyWGh8nSehc9TdwumUaehzoHthC+EmkbBNGpLWDXqxlMLRmY6u+v8+73SY7WEbGB
DP1i3Sk0yOJI8MXvBdjf9vYInowPAfOmROyVkjLfU0FLcU0nb9fDC9xu8qYXdP1dvOjXfzhroRSg
1ejKAkzSKnMYEXt10ZsVZx21WEcBdC+vQsSa7KAxaAzyVvVFFGSAA62Guh1SNHfI4ja0m4fMojKF
beDPeDJepyG0bOfqXoO+VtfB+KSm9+6zrsZbcdxVWuMSBKDYwtegEu/sMtr4xvnelBZGDzHDlxRE
R9G3d5tSzlRy8wkTemWw8V/VwXkgZF1ICKU6+nJKDrY/6fiN/RntKuXnO4idadziw5zJUc8EeaTD
efvVQ9AfumBw1BM2rh23QMMo7A5FX0UglYR7PVt1/Usv3yLLbxIrYvYlSwsuiPnvamej9Il4zMp3
dnUtRDH+jY+B0Ixe1AZm9fsiPFuDD4b1Ei+EcbiJxSmcvFQrD2R9dDad5IMyLdw2CJrCurt66sHN
7I/axZRbs8ae+Mt9YmU1JO6sqz4CYPX4D1pKyzy6EYJpk/imYQmGQBScS6cKY5dSvaUpI9zKbjaV
fwZKny1KNtVB8JncJv6ImOnCK+InLAAKsjl3u6iJTBywPw8wVxMTycuzD6DupXC7vuz+R7Dn83sw
Vjx6Y/Tsk4FpY/U21kBl7rp6kMVELFB9MiHocWSCSnUM75BLv2/bh7BGwSTM6kU8MKmr89ZzUp8u
T79DFTgDMLhDNM3ND5vZCrJqjxsfGpQrH+vbYMvqGs27TV2EQzdBYgRojCD24VJRJGdjjnpUZwiH
ezgaiF3jQkfnR+HtsxqNrY/frVVNjtkmQeIWiM6N03JCucZB78AWjA6+QMQooJFqXg5I/O0RRSIn
5cbkPUzn4kVXNAdi8p073zn9ufvAQ5kjyYVsQLsLtK3rEb4K2vWUGyYOYvWSoLPPQCMoznBTrFWn
8ihxjWJTR1JORWbQJKP5/+l2zXA4XzsCT7ldfWhs0SMdw547CTLtKn+A8AkoJgZzuZJ8drLQUzBA
/zUec5xo3Zd9ERH6HEnJg7672Ut1aS1EkXxcaAhx9aOGlOw2AYI1rjl9nXPhchIkr/zwBJo0fXr7
aLe5urbHSyV4JbTtjAMDaBkAOjUxQ9Xw0NeinikBXsON1QaqiqKU4sl4Fa5m3NABSEWSo5vwhgtb
wirvfyYWMrQ+LVkdHnIAn+Xn9pqLfBG6rUXlv5UJ0yPnW2HdT+7W3qLdgXTNgVuJuqGkSoqt08tr
BYclSVkP9irLBeABSiud7oaV4gvhHKpJL4tymcpivazi+YJ8KUp9vFqAjIFwHNcGuUW5VEfFy/DR
JQ4daM7s3XZr5zk08eCFNdzPaxBK/pfbfB6q+5MechDitXO9rogwJEEAhMH+ZSHSj77Q88Vm/q73
aTcBHEu0HVKXINgWMyac/PdbZIQVNFr4eDXaa4SUzMQwubOghlHdwsAQZb92/UrJk9d3Xy98+Jo8
pNnkRQ5dpxjrkqkTxbSmo2YrOtUIJYPyjEu8shiPAgaPhL2vpe0HWkZG8Nw1RfK3nTGPzW0I+fpX
qDpEPLqDKSTJlW1eN9tNlL71gFFWtoRxV9oMf8IBl5GpqiAIDv0T29uDFwWAIkpWXawiE5RGZaKu
f37Y1DqPq745TH8n+/kYOzbpWfnmp5BQ03vP5Y5FjQhSOLdibN2cyGMQQbmW7EHkfsr2qJmUtS6i
48VM8vurApFGkAVtXMW6wRkAq7PzDgRn4jwhdzzx3t7ncr1B3MuYsQnwC5Dm9U1EtTkPDYc3fPrV
Itul/sQMxpZ/49ubgnV2OSUgF2LX8poiJIwlJV3MWkqZxBAXYB3XkKyeL3s2Z7Olnr4T73Gt9+Y6
kYaCo6FFgtWmG4THbypBnBj9Ig6IFi9V0t5idlTLUHSonxYKIBjbZVEucohQlO9/h6VLFwN2CUlc
0h4tJIp3H1DXNuFWZ/K2yY7qMkJHtsZip4XzyaR+wKU0XMW3i313GqyIqsnQmB0adugFx7Cs4htP
o5JckvFAL/pk77ymCoqT5SH0ZiZsHtxH3TcrtSaVp9MMEqA9qRTNav/gLavbxeftQQWMuPdeSvNX
tcA9DVysd1DsDdfopJKaxBxXBsmxAop5I9uUDIusNAXL+CHLxzlaeaFHk71WUOIymEm4FckP6AFq
tj4cvXVYCPPeNeISwT9oZBjEVGb1RNLTtqjy004NnIPKdtFZrlIHi+ND6C9WHNxw5kO5UsqQ9Ddl
EFRkR5GD7atUSIP7BzE5eFGp93ptLyVcBrtsH8QtB7Acfy4ZsSQEgRt2uaBMd94JocFi/qRKVDRx
tguG7mM5Yh3/Z1+A8EpOwdWINH75W/oqOf+HnIVU1Ned0zvyaAc1syvvOE3aai0O2g6NQsRLwFF1
aPfBznc10sW3QkEJnuwryhW4eQe3wBZBLWfEekV8H+XzThg7zBgVlHz0EG9/t1YpSrD2sknMMXxr
QKdr4gB61W/ViOcrrigNPT2nTZYUgVTUpB1wOq9iIjmCY8hT7ZGfhZ7TdS9dmeZpDKy//pI8zclC
Ij9lFd1sDeZ/DLGoCMNWBTJSyrpJccR7MGfTxJgqSYn/L5D564tpi60BUkHCvH5jv5eUDQns5CNj
LZ3BBtzVemyEA9ynNwmQp5hh/LzIojhdPDJc3L7Dna0Tkpt7u7yOu22LQtnt27xwBWTitlXYoX83
l2sPT+CO64XuXlBHojPSdQse5a3gfeEeZgMilzssl7k0DDl7Ge+teK22wMGGbEZrmcky3wShNQ1k
pZHNuZtRfdX7YSXxpokuYCn8ZYFqVTTFagcGFXOXMj6k8hufzzhYja7QDXBC1k0HnOMQqKTsFjif
y75q7Ht2HaWbUWl6Xm2H7PvmtVHpxIuQ0EQmhzWxLUK6hrprClTn1NmHGA0iv3FUcdQp1FSmmXhC
Ed/UFf626/AEhu+94CssxCvCYZp5rY24gvzp4njPbOhbZw9d+9xQY7oflWHhE0w3ehjvwCE7Lxh0
O5WqGvC4ANdS6gMhLedTp+k8FBaOlHc2oDrL1Hpq/E05PYkEBT7AJLQZUatSGxlaguEhUtOW+CbN
jWFaEMJCi+3XG9hkLIVTa6bcf2p4CGuPOYCLoynrAMFqOStQ052OJy2lT8uL6eAy9m4QMvc0Z1Re
kp5TB1Ig519XVLAk/nt0Gp0qmlKvLbtdniq1ZfcfaIDPzHDsk/T8bzK2+sLbGa9Qli30NGGq96ql
ZfjLzOWFSWQWDaEQ1MbmX12Akk9oESzTk1o3xtTjQkbY7ngFgdTdBRaGGdb0aXVObuCvpa/ruVLu
G1oudUivmM8URN0usnsDr2oZbP93Ux78CTPoAkk2YB4WP37/W9wRjfHdLsoAicjbAxBn6ZksJkxF
5CtgaOos6SJlLEjSVxLaO/Qbnc1u65lRmQqv6lca68CpQQSXG22UdRbwjBVsy6rpPpWxc1SILoO/
EXnGYY+BCYArGPxQeTaRkvnlTQIHy3GK1hO4yPw3mEI6xJGKAeSJPc/6JB8g6HNAR6Q1PN/OozNt
IxFkAuGqQPPKr+MB/YqJ3XirUvolVGA2fEo31oLVQkPz/bDQ33V/Pbiu4LJ+DpqHGIhCqJ7dWt42
5KnPQknr5GxYT1tLJnUtBq6o+ZSXNUYAJry9AGFfsdWxgwSQGfu/KqczKTOA/1EdImTY4oSjXpY5
nCbGTquvLTU1e+6ii5ZV6qPlp5vg9LSt+XmzJoIHDQKfuVQ2g77n03TpEN/WzBbgUf6lpk5K/G5X
+RWSrJ6j4u9eOfvznotfZ3egDuO8ajNAPK/fleJxLuDNVaQMvjHm1qlbWlmTHm4KO80vztj7bwCh
hk3LuVfuQm/CDgzEawTBDB3C0SjZsNRGJZe27rmEcGE9lSg5IAy9dHA2sLmU10uABw+axCn/43mN
9DLefggLh6Aku5GdYotnIYopa3gHnxhJR97Rn4IoVqIYmUJJ3CbOwwbRnv9SkDxG5JuM45zopA/8
r8/3PUd0IyjkmzJLluQ8jMqYNzVWCgu4/73bK6h7kQcgVmpwhbEOswOSqtxgB5jpxFoZh+lelkt9
4FXmmcQdS8EJ5EY7xnoMWzIJd8XgyZFJurxT+sIOUCo2l6GZ9h4xSDcl2msSNeG9w09t2AS5WqqA
Pw9u8k0Yhnd2O+DHIPJlF7ln9zEl3NwDQiTk62SCIO7wcB8aCMj/pZhcuG8ICGO5bSDQ5GrVTGYb
9lkVbXSndKBGCN1U012Kc5/onhpIq5oxaoV7o5v3kqsZeMkkPfs2ekuUWRIXLzmZrET3+u0H0Iqc
kWUNhRyTrYsEm8iioZocNfj6pyOF/B2IdlAh3tJFJOsgA9o3YKlFbXzSKjJAzNiyhu/TlwXq29A2
zoawWvyIDRe5XWQ1sqJ8G2YzA7n1cjlQwTvI5rXtuSSC/7jcsXdvmx2p7I0WKvpM/+/YAOONvZYZ
Pictx3sdwHupqCH7rmMP5r5dtAxzENE+uNpMWd2LN3Zgk8oZ5XSAk24YODYbbVyWIw1axLIVtWKb
f1tjx/oIgTg3U/hbRdVLeEkCiyoWf95iAsQLl7EiD6YJfw0xAzWg3rlenB1QTnpSPAic9UibWMG/
xfF0Q7duavACGLiuwCeLdcRri3R5lUMQ7qqgw1P7eI52wse8WjEhy/w2z4FjBQkvgHIFOIs7YOvm
Fbc0qGdFwCFM1/0RjNsrGos1Miw7lTI+OFgvlSsL/hrksgWegpcpQVs5BJyWlrV9BmWLAGecmpYC
p+xnvZ9WwkH6HL8hq+/58bskixDgvi7Mv32qkTQ6vS1j98cOmW7oIOQZ6IjgTaURBykEvp1VugfZ
NRzknZ2uDmrWbVGqKv9OryBr2GAbM7ZWC28EaamHx/EOQzzoD2r5suBWA2EPpJefNtOltz1VgJle
3tfkaWg+AodxT8NN1BzL8tfj6QBw7AuLKP9jJvAP9X6lKA7K/9LZndqNJJz9T2AtR2ESLw6txN0y
qnJLbZQEnPPxqedeUkoN71tgMbPWTD1Qqy9Y8Qj/43N33/xMv/DLTk7xx4VkMr0kYsohlWKqaKqf
kDcxnsSAy6CSKCIFMUc1qbAgtcM3HbyWpT2NANeuj7GMnZ4nX1tofORGwNX1TO3fzN07sS4Z+EeS
mz6KXxEpNH5//BM2qxE0ynJzeUq4feYAm9Ut/y3kUOetXCgWvmmUW40ExaWH13SbXEJwzs8y90Ob
4exW1l9bxbRQQ2B1nEreyyUwb3f/iRnWPRKDQ00GR2Xcpx6B3ZwXXhBCUpRAhdnkGO+NWaJzgrNE
+lGZ3tRZ1te/70iw6rxcfqeQhUqviOu6pi7oSnK1hfrPtL5LcHIW3rbViw6tVSf7Ef8gGSq+NrNr
G5djwW+X1n3VlqhoAM7slZfJP790QRoB6jdxiu2RRR8XWICqADOVmUHytK/+ymVt8MkOP7aAQpGb
K3+SNCDZRtmZdNel0Yg871fZv+QNHkoYNKhPAr+NoQ4itSDTRN4SU5OWJRK2qLERP0V4Ejuv/ijY
V4p9BuXoGf9sFy3hyIyueApl9MGPVAWmg+BY3tKG2ltAjmb3t+XsD6Ha4olR8EHLc8JlY66sago3
oGHDSJn91YsABzjrG5q8U/IsyMpcDkqVVmbzo5j+cfqj8QP43x7ETd3xDLxdmolpWPF/39PUjcaN
hIZeU1+IakRxHWY4BljUjnrjr9xWfcEgjjb1p2ZHRVNlWo4CD8yO4mUvKCykMvwIVXA0wHRhZCvx
tGdthp25pBEpvk0oAVtgX/uiugPgZh/8RZdXmS122/rfM/5HzIgd9ledIM0nzvBrjc6sMbdmAxq1
1FPjZ6PkREK0FHrg7qVHgX9pMzYOba+Cm4+jT3owvFGVjYrW3lJzewDzgUkxkO1nFMqRZfTrBYXH
xvSeHbJK4DAkC1fu8QhCKx11jFs0jTeDy3N/SOJmjLv8Nz9FdA+pZxBID3jqlP5xR3X9sMjCUesG
Uyp6sdtDI01BwRXWEaGwOnA3cyZRMTPTBwU4TYeiPGU1IGSekZz4ECQa/PcPxKNZK7aq7cZmSy7l
0qFK+031MazFLjRm2/wacfAEJdOsZ6jkGP4PbA8/0DjNBHQTTC0ltnIB9mI+RXZiMazKZEDt4hjw
QFehD6wnIv+T3N3c8Pb+nDh4M1n6rTrixcq4dJDiAoJ+VqNB3RVZp0oBJ1DzlW/as5KGl7awTtPS
vaksfhmKUArb2cQI/gFo6Xcd0IsVellXCq7qdiUsYXAcN20UPOE73WGxobTUlj5cGs++yHTWFBFI
lp21p6zM5DdoiNyWUVOqFc6OuYXqc3CNM8toP0nTrZ1LZR8DYnP2aJcKsFaVe/JdqBks247cIAWJ
bM9rnWyfjB+o5mwgC0gTmfr1bmbqlklVhzS4j6EACFAoa3P9DVrIpZO+6eJHZ/POlGdcpSlVrWtF
05KHQCDXHdEHuz+KtyPYWl3VSNADS5V+iYFxnj2fxRyQwmIhu5lKWk8YrnmCUByrHWokiMEZOxaJ
5+nXJBxldV9+Wcq0GWkKmSy6SSy8SFswEhiRaouBtffRYjMAHHOzKqjYt2Zl8h44kt86cAJ5yJOa
5KbqtiOHREUbNfT2wVHBOSgvjVPk8XHaWNHD5zWn0ZovF2L3GmHTUv+EnTgcMHReMKj9M6e2fMv6
rYtveLP9GD7uLqL7wVgAqpGtZOd8sQhpKKHEif/L+9fwH8dOAnLFQhDw67sZl+dloDf70mawsaQd
+m1lEw5HOoiLmcvHfa2al1TKUJD89zNg9nrvOymk+aca2TKu3U5DjVTlnidunYnmc9As++GLL3sR
qnJZXDv2mW2P5+X0Z2N6ag8Oio+jp4ltBwTycqt/JwppiE6Lvc6E1KPr76CQjRGW6t6DlT+NRN1t
/VJ9ikQlK0z8CB61+TCueuLaD38ysDeM4L/xp/IoQR0MKm9bIplPj4nBX7Ymg0QCYUBGfijgZ1KN
GyEeGO0OFlzhZqnurBuqU6mwKUhERP7za6OlSrRYvOs28nt8TU7EFRRAM/P/KZn+XppNQLj8lF5V
9nI/cVwpSKktIuL1DPHcMqs2bnJiGo+saaDqrWNGUhFfom6SQQWNBN1zhn6O2qDrUj+U1mIyARqR
aswtohah8CmUUnPzEPtdTioVSreZoWLtsPc9SOUj49gBe5HrFYgt8eNVfEo84yuPlVsxRk6dCjEN
aa5DQOEBx7gSGxuon/4aSwp92QQW3YHvJ4XeTXAonqyd+LtwKy4vKdDA8d5jgPJ4/P0tnGIcyD1W
kzYfH/5tL+rAo7b+BGNgePcx7Z8gsU4BoDLY8w9GQaEnZugA1QfXTmYZYGmPNjT9wn+/Wsh7Yc5j
xMN8OOALBRw4wjWJlwIRHIGldXtSrU5lazi1heomp+joH1J6HC6i/FaqfvBysHUupa2e4vMm2QxZ
PNGMFwOzyPIGqOAXO+xPht6eXlYgmx04yIrgsQwpfNcfwh8pZW2aCqsGy5DVafA8xIRVTBuvSV9w
tJJHPq0KyqUb+ipQLuWbZ4UCWLuVUsabpnKCQOSJoGVZ7kHky23e7in6VmwSsFDk22dB9AewLnJM
m3oCSMju+AC1dK1+KTATYmE78DMP9EiWY2T9HHGqThnDi23ip7u1mGgRzjRlO0iB8XgizkLHIKz5
jAQ22GocuPpz+r8k/4VBOvyDSDINGkFTDNkIAEBBGxzYYnn34F5RubCUP6QOSTFIKjw7tGN8ox2y
2nIoDcttMzmrbXUe+G2kFsNxbSsPGnSbWDiWBnPdJfzd8HWMbFCJcOZpeBLIXyJHrqGR/Bmc2zy2
1v8XOH4OqnCYmbo+FSJXqMjfqVKyE5WsUTkNT9jt0u78RgcJ6eBPa5WHwLV6I6OHjXQxKkBILPri
BvJmtza8qpsuqvqpdLi8uIX3CFIpvdLtyPFX6yXUBmQapcjUVumkYXaHQ+p80JfSAHmZsXtoEur1
IwVgXe6K4XWaYO49bUiqVFGbr+cxVOj4WU1MRwNtfesMtR5RF6XC4sjQw8u5b6FIs1ZJmGVEnrTg
vgwQdDZPRyc3fKtgNgp8i5/9zzjwOoe6W58q7OIHeN8Y6IxEw6iprtOzzbIQF4Be4rMzdbzNlM1K
1sdV0k06I7q413WlsdAspG+H2zw/54Z/t/6t5ck5svmmUmcTaPw5qqoA/THUCWLalIu4kOPu52AA
YX0QzacNjIhJ/pAoWs2pjpCXadEJKdUzCW78V9G3AsJ13fizwxODDTh4+NJZ7tdIwiymG5bZPfB1
NfLBGGp493X1y1Okly2/ox5bysCrGNDFi+t1tX55831pA8NqdOYn4eM8cOv5CdqWoYrms83IBIDM
JkAbXMn30Rxj4r5HIX67uE0wQ0UWZj19gRouy7iRgFG4zJmzdkZ9EilnS3hAPGs+qy4+esZbwZnT
fOxrvjAQWlR61S7EyL4W6O7cSVVyTswfB0Px3MEFaxORN4f1ZHNf8i1tdTGcRCzCsmJsuOqb++Bn
dHx/D/B/I/pM85LjEuCyCjJPd1g8l34AlAIMnE9bvcws3TLljc8J0DlocXKNxziQInRWIngX/kMr
jU2gsvdCsTJ9Q6YThiovdjkD7gcejhFPU1rzB7HhQHw3bIv7rFWgF+VtHo3KbCJ79bkZbpcVeKs2
nSeEn0UN9ItRsS3OMKwgIeasqvUq1s1jRDsDewAoz7YZ8ED8rNlwp45s/guQS7XKzBfBLyFLHYnW
d+rdGN6gH3Qg3h9jgk2pAx1BPH/lBj/TN4Hmv8UNmI9IAol8X23ecEEkxjvK3IRlwDHyKll7M3od
GiUdb800Tt0xpb8aL/BsWDLMTYL9d16Fg+ZymtvFYMnQ4AYFC+i+8QdPn1a1kYGM9xtGuSk0dIZe
2X0zm6IDJitx5TNoNMnMRKZh+6375Uv9QpVG7sgLfZXJJFyzY2kJ2QR5phsT0dLGaHc06AsLXE3F
OOoYmBnCpD+lh1wtcjYb8B/isUxZlP72iJo9lnv3dcteOds8KPBIPBcy5Nu8TNFb3s3G4HPUonhO
VJhDqV3HGqhboWEPJatSRJWCEeAAV74LIBCBlEwSGkbCUcH1275YShX7fPJ9izgXqkvQTe0iym2Z
vrGO5T3lJh6LcwTEibAFs0YKZdpITP6lppqIiPw9Bo/SzYhA3kQ4YIaFA8RTzoLklF46Zo+Ca3Me
eubuwxHK4sOUUyDMQY5HlhaG5g/HExTJwHsUoUYZOayt/7KNe5RiF6o4EQE1XIew/LuY3ZQ84Pj2
zzCPmWzBpi5kJ9qpCA8TuZbTix8hHQyVL+yzwju993cee0sVPbKDKY8wPZnG52AtffRnNOU2zW5j
uGyCd9/woQ6ynlnMbLYHhwwbrM/+4m6BbZ8rhZlrqWfNzc3LtrHdPRnkgnyirBXH5t6aVEpx2AI+
4LWDTPqxmdswsJlfQE4P/j7j+qquxIdYP1KUx547725fJdbLOU72DLQ7M7TJotZjhZIqFgCXoTfF
dj9/Z794JsuqRoNK7qgtICEoQNsJ9RZljXzudQdstEG8LmhN8RrkjrZ+ns6+iZjtUALitZzRazxy
+q2X0bg+siHWbmhnlyZPneGgoq0l1ey/vP5YGogi9BDaZ16YySNcWTUepPiULtlG6IPDV7je6zgU
KEsdJIHAyOk1G1QsJ9wRXukvoKiaDJam0SVmKodCYvVPRz0U5HfsVcRfw0Aj/FOQkgT9Z5AQzRt0
EQmj43mFpzdm9PZR40dsZOOo68t23CpZhu0YCo7um5FQRnC9GvSYkrNCdFw0gyiBtbqNRyFl3KSw
kqZOwVhf+FCmDH7YBmSKu/vyuA+464e4wKeRsVP+OE6DE7IDjfzmF4K9EVHLZUFsOGG6MbNyr1TE
3wL1e2oc5VgeInT7bQl3dpBg0G1R3WnNS5RvJN9ErEOjilIBJ9z2XiGF60WavFha4Hu35kHqdwmV
g8PIMMOqzxn+772KAoIygHIwXq3IZLTyTXzdNvAUbl6b3rLvsx9dlfBzEhBFdg+Zaz53Elo8AYxr
yn34UQc30phRqTuqcJeBJ/27XMksY+YXEGvnkfQ+gJZ71EdaWpI/hkJuh5fWh5cOPseLDtnf6ewG
UHEUWuzjV7/ZbH1NQbG45wW1vYn0ORU1QVmK+8ggTEXo7QQPdfv4Gu+TiGDk1duCz/VBff/rAYHi
AIPZnOtm6XIrEV7zN726wfN5PFc6BLfrxwKn/ojzWc0ZBrjzJxoQgVjj6mh1AspZ/7bZc8uhuWNS
pKLEyfDhyomgOU7LbjpmTIKO8DsrbIdAqxV4wc+PhYA6253nBfgbnybCge3n0v2Edh6K6GGqcVDi
zrXQ5joEcw/X+gpr5BjJh48zJlAA3SvWOEi6T6lNfNzg4X8nQEzccBY67WKsR9EQc/AoKnB4WK8w
e5d1RFiFnFRndTMYCJOrhfyupEYz9/LPq1345MdVG34pbmYBXcy7RB4N2ma/hIzPUi7gViypsGIC
bNusCQ/Hpssq+iFkOHJBv+wmWV4zN0XQRQ3qZ8G/KZK7yemZL3RhkG4gfk5TcNroou+g46NTixSp
QBszKyOeY/3HUu6P0AZuPJG7glZeat8kZv1xjIjcuCzuL16LaMoldz71ko8zi1i3tjoCqiXuHRa5
IWKvFCPuhbO3YGOplxIZo3cBL499xz1HULGp9uvgPiuh6b1v1XbNijeIuRRvnZEsQivR3+gTq9xl
adXbDl1uB6FwVoUw9fa20+m20grTCWq1RiY1VjSXQqY3d0yQC1SJPrQ+Dy4mOvh0wpFdge4a/tAg
5nr9AcBv91eEWqI4TN4KL2ldxqCitH6wU1zstdMu+trEH7kOI9WuF2hwSdjbZAYDbd/VZWp0AVW2
ScgCklHwhMcDgPtAY2T9QHZkp9DojAt2atrJQuT05Umby3p5FIznRJrxpSf+iLc9JiWFkc4wgA7I
+Ax6OS5WacoSWM83UIysBpHddjX1nY41DDNv4q6h0jl1V18LDJ8MJaAMFs/+1kPsYSJBPaGdpobK
+HYY5fyV+PGgeiSJG6tSTSW/4iXKCwfA9lmN01WlCQ5ZSkP020ugamXHKrtGPj4JulnEkeAWJg8r
u7+esa2bQX2Xth4DXfdnAQlfCPBsto+znMWlxXlodZsx/mO66yrz97Dpa8OFMZ+kpY0kLKh+/F6U
2tvEzuBXuKdrWafghkDpXlwB1c3EEo0kKs4dX200g9mcoRmrQfr3VIn8GFjbw+pPyPox1awzDVTT
fXgAJUjDncxLcbCCx7QpR08IxaKhcCKA/+/CrGMh4Girhbou2Z3ln7byJ0TfWhGzAlXT6NPljlbJ
mn1CeUtaK4xsZqvpU4pnCBJC2HglB+iRwkwWkASu58nkBF6a6mniIr9PKg0NzowT8Q4eWaSc6768
1Cn6Mx9IMrzUQRaiHKEjrYQmsbE0lG5UBQv4S13+xNCd0G0eY0YOonArf7vvRq4rNwSFCn2tSovc
RGjygUiQiH+Rgr7fkAJj1Cv2UxONDqBh8xJA+ZggdY9MKh7bV42ftwauQ68/RvRyS8Ji8z1qyHyh
GXU+nvHpeq9HKJteOU4FsLEqVE2PNXWZ2a8C8e6wUrl3COtT0eGTBI8dRX5MBKP2mZS7dnevAdue
sHfJHucoHAoJale4MNs5ExzYOSJu5HRI+YA7/1tKmc6WxIDUQjgk3vyiAsBZv/tOaX6Z00v6v1mD
s2fCuiYkippWWJSJ3zshKnCIfXhvwVGmiQujxAVUX23V06ugcSiDtzMaJFpMIQXLZWNTSUxWJ0t/
mYaTfI1a7I9Q9UTrz8g0yZlOWNhonvI2WScnAibsOpTIud0gocrbFR7IMmWBTFZWQrUD9HAlbsk/
VMBXLDw28lOgLUa0SjVrxhBHSUkQM80QmIbw+IxqXIdVp8zDNF/KgmfyC0JL4FZJ3cyF1b+3D3mI
jtEbwng7a/jXelmWe9/1H40+G+TGuJLE8ykUB8Izuz2kzYN2Dy9XdXf7JXUBFQTu71QmPhX0gI7E
BUWeVS/4QMWAy+3DDxS83YHaOrlS/6pa5r4xFgDrxN5EjzRS3gvXB1gzEsxcRHQHK3O9ylnH/0rn
9aFcwOukYf1cuvGx4+HtY8CAUVMeUFv1IuOLau1PLOuHpUI5xfKockesvQhpRNsJSM8HTuAMqWzW
YgVanZeAuM++nWE28aY3jKklG0pqHsUqo/lMNsq9n8MyIucxiPTVIE+/zZ5ru08X0v/0PzrniUWV
wFrvTSWJ8AwgYHT7Wjg1nOseD7kcsHEk8s96dnqzG94LY9iCDvLDEmUhetJgjQdhug/0h+IVlJc3
WlOpVIONnWtt3E0VpvqkKWHKGCF8SVM449xCN0oG4EiqBDUTm1TWbC8ga9PljDzzx4G4gNlGvSFu
h6b0WqkcHOJMDHWKVrw1nkMQxR2u1dU6Sq4wjJ+KlrajNWjBkRXAMb7r58W92eLZetv2/JcyJdwM
9MFcqrugp8GrYM+uoF+MQSdfNSoqK6VdHBHCTQ6kgCx1Nawr9ssCY14DQhe4/q4wbZU6ilP66QPl
BEPExYh+ud7PJR9/9CJoXALHTp2wsYavd/K2/BPGQc6fysqcySseq1h8GWd3/FXvTftRsCviRdiI
5Y2CjFjO/9pXSXAnHMpQut7sAhRYHA1az2GAt9BlEZIXTesrWFLEwWbRW7av6F/xBlwLzAYnTwNr
N29WkMHnY1aiXAHrZa/3OCBLu9WZStRbmwjK4IY0qrWW6k2SoTsAKlYI7B+xllGRloIhaNIWC8I0
l3YAWl+GYy4lsSmTnffmlhCDA2nViwkgND9UN8pORtv3Q1royCqxr+7utmU/JZWX75IA8bS+S8Q9
v9ke21bHlTxBVn7LQvYUoNtGxaoyHXuDpDwlECAXSFKVVxqpMOJLlw3IXr7pXmK+d6CZ32Q/VgVH
v+l6PuZUg6XUxMkzPoGX7NM5AhH9Ukv137SisYHSNa0ABYOAXw8UUDhoUsMI6lJCbJ00R+OEL/vk
IQieuCli0fC6Sq++cy3QIeE/8MwBtV6R6b5MY+su4Nrmje1R9wgbJQO1B5Z/9tExB3KbsSNOnzNr
e15aFiY3QL5ZMHVwGm4QhNKlsQOdQ8lr41nh1+xkrznSNSIPhMTZvm6FP6NhfmtZInzzmheq+uFL
poCyxVC3/U2/vXUoDITCy0uihcbZL+V0f/glz5om0cdCNScmOIfUa2XCVTJi97G0GUDvQ5b3/6v0
ddlCIzNb1dHIQ/aqDq1s8//5BrJHwvtReKgqC1vpo4f1ypTtUsJeZnM1w8fztQCki+0gF3ek39om
1yvGleXJldaFw6IWzW1HrJySde6Z3mxFsR9ICHABki792GGTmMijYztef8GAM1+RisuZy5G/9fNa
dk9c3lOh6eRNMI9jZUPiGx5JW3Xakm+dTOIEhQFDkdbcwSCRPybrlDIorhHk5Jsa4Twv2LXQpwiZ
BWP4WxvvXHEe80HSX8jrfAi1NneaSWj9+EvbEd0ZVGrtWc53s1hSA3TvUY1diDzLUcR1eBLheHyc
At8mYDl0R93+jdTJrQM2UBbGSBAHaH+u9qiOVqPjvqlPqxTHXTpMigUyUFGxxbDAO7gQrLY+Zwjp
JsuDM1JIehHPL3LAy/3HkrPDaipPsz4gDGawSC5E4TZN7cFufBwvxXkY+2eOr+ES0zTI1hBmxYA6
znrkODcZ/O2XeIK1MAqAUnVml2zzIXHaFArQ1Mj9J2NLOeRqfE2G9SVYXhTcXuSPsKwLUy/mjzC0
nmYO62QcxzctktEcDLttujB775x24xNzmGQPq959/B0g9+KSG6DRVQCWAT1hYv3CTOGefUmcTFzP
LcDuU0iPo35FkvIK4j6kD05qvnvvvaYxS+ZRS2u89MIV8lmvm5jpmpuwVoIPk4LaW7QCdlaRv+33
Brourf7KFsXiYxkA1USyyH6amD07Befb8el4LUywc0ZquAw7+XqjuY3aMv7yxUC5I5xtwhS22xo5
7Ezsfy2Z9azWLjDq0BhIkByXMEVvnAczQGFacfJD9qhkxHpXM9BuhO8UZp+KcRBze3IEbSy8Jtqy
U+xjJZ5VZt27VWvZIvx+pGo4pkcJYO3R0oB363w58CnKW+KCfLs0AstJDYjrCnwVbT6a2Dv5yjWW
546gbIvET+0bUEjC2VnIKjRagAHzBSDQ1L+sDul6QTnqk7G1X0cnPJMs+HliewKP+SE7/GrJYbDv
uw03kBNgnBDSwNRD1CaAsEdTAdRbxsvVuirkSt9G3kFkB/2nlrNLfiNle+miy9Dqs0uDfeI22mRh
O0qw1UHuc/v5HTOU8Og/ANSsDfRlJRWFgKBBAtCvBjmdp2ODgqiiV8C1Fexn1yaW5vjGMq1ICHp+
I+s2jgFWq4MKMVWhkOuq/biiYiW/kJ4H44E2rJ/5oZcOt3JGVISwdQKD6qPR5wCoksDQXHAlA52L
a9iOpWqvW/8E/Ee0dByR8qxkLDNDbOL7+YTTzJUMEDsidlpJtPLDGL6U7OSJH6y62ZZVffRHYxnW
BnPQzAY3RcKh/j+q9Fi11rTr6VQ//ifmjuGl98DnyxXrC2Ja9tkibWu430k/6NjReo0TWWHS9h+m
Tu3FM1oyyoQotlgNJq5wQcqvDs2yvYpdmg21NkmHvO60TMS3ATuAoJJ76VbgkCleY/l3ntNl4Cvh
tqpaK5CdxlzPzDxnKMppZNni2xwrTxMqQPUyWRBk23ywZZBps1wmitMFMtWFUZ5Y8UWpvlCvtBvb
gzp8KOUuTzEjzXIvQBGTpHeewdJL7JF1bSGIcvONemdtqcBMHFz2+qXSOY/u0fJodUwIKPUzKRBW
6VLsh0ksQJQyXvoHcXg1N89AnW5iL+ovakSb2sxkPrt0ZvXDIFct02K+8RiZdD719phL8Z+EkOht
JWTs2KpIBMol/ms/Un4pd+AuKkjFzD4ubbhs5ggPuoASiLZzn4BJC32w80CJg3kMw9SsQyYPrq+F
RbMuj79fud+ZEUB4fmcMCF8gZi9CcnQPMHfYlooea0bbrGJ4+RgOuPOSq/8gc+tXFmhsXGtcdRHW
WoAMet3JqC4Q3Zqx34jlKfV1YfPLlmL7gKUjbuJTLeQPFedWXSRxoD3zuboMjm46Q5cprMZvW/CK
Ax7ZJ/gIMad7euNiOT+8zcr8svdflg1zdxJFppj/8K/t54Y5Fl6r2Yc84B55TTvJ1m1Am7ng0P2M
dQSqq2GjOjeJh7GL4M6kbYmdBa7AJ/r5hSa0OMEjCcw5gBCbEvUn8rGBwd4zXxqCXIFYYcAO3Ufa
y3MdSNPCgbLvPCaQXVrhtTsZ1rNWQzQB6Ya9GY/K8I3UJOzoiBgtbmhNGcMAZpWntFfcBytkRBUn
bB9ApAFeB/Uc2X8QNJYZMKWlzAe8Hbl6wgUdvhygxdxmjPcOUSGtUrv6SvN0K6WrryMJi6yZkU0+
IElMXFo8XxDztomjK2an5ayElCR+u05V6RW/vt5P59VhzhL70+06DC8e+W0GzrpVvgQ9avt9xKWM
3koBoUNWKa3HGlAjsIG4vC1KNcOfYhQledxtcLCniUI6gVodtGyEbiSvkH60ZqJnlYpIjqqgmYXh
JRWkNIgTxAhN9vjxZ+LKyqiWbnmyRqM5etTuy1T9EyGduvcVBwsWIw2HtTPFuMpwd3+kHUFdwdPo
e76eB9iRrsXI2IdaBNuCQo/KuUxQ29JjmNzeCDP6ko0FXAgYoT6tK5VsnrOG4yVRkVwt/SWG6hQ0
CtZTJY9ghr3tNo0X68ZE8UE89dNKZ1OfOJGCdh7uWfKYNmpQeipa6sc7tF9rFCNDysuTfcLgA7kL
THebrtLH7bOswFe9qqIFivCbNsAeB1NPT8LAL04OIr61RKh9/Uxv19l+4+IKiVliMkQytPYdrfp7
4V7s9ufpwfV3cljYKArIEz9AZms4FYP6Yo/VTQMkViJXvfDKvdOn+FgjJKAFNMSZC68PQGFKtYNa
AiBj7sE9lhDE6wJeftbFxlZTqVaXOX9b7qTOPmrNzB+4ZxqzFLyU6w2LXjWuixUy7volPyE5cmYt
eqTdREkABNEusDwh5rFa36ZgqkViIBVBu9LCG6t3L3QN15z3my1pV+wC6J9FVVle2VI80cnChhwJ
DN8TXgsO8wBZnut5otuQ/Mh539fLIcu0N0Jf0tjrsYUDb4bMNyvc5AedCgrUsCNySKzSimOjQCcm
WvRBTNXIcEFUlPHSsWO8QbYPjzIUHOau8XUxvHHyaXo12KNyD+ejgKyR6FgKzidYyGCqEK3QSoX/
JcBmMolZdkHckT3qGJLgoxwEdn5qe+spD9HvwvVudMAEwNweaLEOwDWBb4RoY8KjnPZ15P5wpoee
B8da/14IjNhT0ArAo1yKVtH1azgrlRotg5Y5HDyDFd/EOd5xAo3KShUdbAY+6r6+GT8qCwxP2IZU
Zab2NPwDFc4ShU3mjy5Cji5korK7mAbcd9dq1eL+tnDAlwF+KWPcutrEoUyEPRfKWQRdXM6QB6wY
cydtjefLv7ux9pQ9Rhr1C58oZeKH97GYwayhStSOfcOZrCg2u+QrLDDAmmFt+5LU4so82cf54nH9
QO7ob92aqSJ6UET6Kzl8Kqz6wlM61U3Jn6ej8VEzkkxBRyMYdMWPm6kpNb73vC59pArOoqVgOkG5
Umdg2stbDq9i4ADn4DkoenojHRsX/ryH0fflbYTIlDYLgL+chihKd8DXECCFm3T7QrnxfoTGddGZ
5wxzry93BvxdIXekIc+vwYD2LrvKhzwGZmDlzw0oOtc4UuaXiNAlw3BfSgQCIQ8oioXEdzZ1eXnd
OCQc38erRNvMqhFAy1WVc05Cq8QphEl9ztZ9PAwSBqYhzIZ8JsF/0wjmbDCdvp6c6KJR506vkSI1
PArjpGITIKxiGucvy7RqLfq/qKPSBvA6zFufKWCPM9E/CPpwcgVcloIc6dADM5R1gMfrQTpQXK4w
JOgC7+MWlctc1EZ3VCejlUHgqmq4v2AtUUDj76fQOdgzRLqveD2819YaFrh3aTFwX4XTB4/DvIoM
nMKmZwUti8SuntjT1ENwpJihT1/5yEXht/vg7p0zSZyqOYfJs0hzgXYfcSk93ZYJT5Igw2f4dxy5
9rClzRNiS3xX6KjYabf9lKBpkzHEmZry7KWmh2KMnUVA3hnsdvMtryKL5DesrJ9NYoPWeCuyfQO9
yj2n6qb+1vxiuUdnBpZTJMq20NmNFKSO02KlsWceQH9XhHzi9fLX8sNp7tywppljwVZMaHCgGVrK
G8WrQ7qZFGzdDN8GUKHmZNgYgm3hlSg472uO7sFv5i1bh1vhistJo0RFMPDqdczSHFfOkx10tVD2
PuoRfyoglYCOsYo1sqS+viYkgC1AQgiKzmsg3uTL96kg4w67zUPeuszq9ks8VqRECI7lO3PinnJP
XsYQKThk0yMFqMuTJtQdRNaXD2wiUnDdrGZnYv6klnVSIgK4lA7vQsaehWVG1hniBcHGHxEWk7LU
u+xo17glR24Y/uzSFfnq7l9kAQZo4GvntkMXGl34ATXWJfDaB6yTwsShWrMy9UzkTN4M2uVVFvPM
uM5GDGglSHa1P2GC1qA7kkhv2gAPtTfrFNwIi6ww2VZToOK1OdnF3z5AMDqqwgUv5x773x71wa1o
piYA0B1tR+x77o1HDQaEcUHRjy1qpiKdIRqtdDJc+ZJTT0caL8OzK4ySDCCKem98rNn2TtDC4lYW
xgv0HW9Z6LmqcMGMfWK4yEQIrAGOe9IVcvl9WmSdXugz7HcYJSaqOy12NggJQtCM16aytMCik1Co
bNOQZm8I7HQxmrlOXGsafMsTo3jwHnyHkRgKCJlgxE/fUUiYVLkjaRwAEPbHau4o9wFCu5T4KEQq
fFoEXy54pe8ljPWtWXGnKKgv/C3IJ2c9pk/51epbg+at3h5Sr3SGYruGearSrwwTv/t0wM7lfgoP
m6f6vzSsLYjsTFrUt0S9OVIAIc6fKd6xWWdBqin6FNc4sSTSRUTVVBiwrtbVb4iD8BtId+KOS85Z
tkRdeqHWNV0qUVBmoStQfsjHGmXYIG42W52sElmq9TsVaBFmdV24Vfyr2RG/K5uAxYWM/N5ARzVC
Qka4/9/C48mCsGbQj/d2TxtFBqhsfas2fHh/dEqyjrA71F1hv9v/sjBmB5MAR5ROHvbtyc/ghzsH
Sda6DjX9zVTnMPK+RFHiE+5LUn8ONbqmmathHSZysWbKmIOpI22cTvDlWaGdvezKCbElQVqTw6cU
9QSM10FeVQDk0KxkVVIRIuHtQd9Kmwo0MvMK6pPh6BDn0BvyEbiRK033z8jJWx3Wso0YVYGn8kTY
+WzlMdJ4jp36dLB9PNJ/eUxqX7rUx0EUC48FKiD/QpRLByCURdhyro4b8CeOoJmPrbGFjT/owOEk
BxQZ+2DvbcIE3TiW5HBqjpFO9jyDcLcUIIwLH4Y96/fyVLhBAoD8vAwATVkPgsQi5OF5EGbEqUfu
OorXb3dV/pZw0aajmuaCoxft7qJJpCs3XeWBU06OF2g0YJFXST6sEsnDOx6n2tNGG0g9ttDf/Ahp
GWZIvma7yiImG+lJwSnQbz65Xo3RJuTzFg5XbkP3Y20BTOUCpXdP0UJGIgLHBqir7u15QV1cV/2S
bPARzOeN2FcvSDPtAIqR30tMGRuW90LbPyj5Xwn47Rzqm5vLUEpGsIZrJLaUEBoBh4ryitIwYsdG
hBsfgxbyjkxpqgpw6aCTkHhkRkD9MH3qXf8udeC+SgmFumaFF1AfpbGEom1hwwjP9Tt8RW8a0vzI
M6OPn3HL/UaocSrqCfeole/DYZO7zfk0iGwJylrMfj8WPNqKqkqbNJri+R4WPYN+RxL7I6uLHN2G
rMeC4dsa7DWINgob90V564X7vs+8oUcVhN9RgkNiywzLHgX1z8Zymc8XMCdKg0GQZImd4DZ6imwP
xKTc5uuWWX0Nmc2wZW8fyPLo57OSev6AHTkNPt4DJCGtN+hxTSmiVfOk5az5IWwY+bf5dQyaeAwE
NhxiorJb3/ls9LyXT2ZraYWkA9QMCV/21FxhT2ZpPiJ7njAY3WrHJarcf5MtQxtPlsMpbHDmhMzI
qJrBYq0PewC1Hjd1/uiMJJO5mM7JIo/CtsSPZPX2XoiXxHqTY1yGJbfuBRy+VGqGWewDtXMHVvV/
lYBv4IYYFHWu4/Zf9yyS9IXJofsD4/hQS5OjIXc45/nhuoNSqfG8fZPnoSEl17iDSHTxGWeM/6Uo
Zjm2Pct5dft1Mp1IXb9X3Wxs4H+arQ4zpO2I0X7Mh03Vn0yst0LTw53RbnN094ZFAbyhtFGVda6l
ypsavnUWvbl1DbFPzYMQPFD9uv9SvnFN71GY5G6YZ4wa8uX++yo2hIvaz/lGmyWTEuRsSMq2dXrd
X5LfswfcouveItifklG0HFZ+YwVJQ/hJTMg2irftt1P+ucLL9wF1kzVP+VYG3kg1e2tqBjvuOq79
Eh4pDl534OKB4kVWZlv0lTa6Kuk9LEZ1Mx7XYCBy6/KhKV0MxSKy9mm0TBVbHQCb62lFbmMNkqrc
8sjadt42T/83weYklQigecB1k+ecz5Jk0HjIog1N0O1704F7ywR8PQNj0xLB1jLtS0L4HGAY036w
3+6uqBPhjzJ0ImNTsCs+a4A6Q7seIUZjGTo2X3cvz+o1AkJnhPGohZ33FGfQvfxEXoaLYg3kNyg6
A4asTsuhGqLyqC/H0lQSPxIpjkQPeMpVcf0ui4S55nPtmwTizz7tCuoFHE1HCF6O5biDOJuxpETx
RE66qkdv858ZqhLl+mX+/mBWfOEumzJlPZoapwHyP1gWI943yvJB+mfdU15hixLJXSKYQWZtKLzg
tj5P2d2JJvdQ90LH/PGyPz1Xs7HalmzyQIbO5D/jTo/bdsDRnWXvJIn1iw8ZcOE+sxlhpaX/5jqF
IKvnKaiInYVMmDhmV7IOzZGXsUzhvjbXThLO49WoaKnN4q+EsT+F8nPSbggJyPNGE4PZQknAtSm5
dXvCvObpe5st6THwnOMmp35qRS01V9zSU9qX3x6rKOy1npuu95oA0O8753KQZl5BPYGMTg9iwuC7
vmEyvtEdz6hAyex9Gu9UC8kODifVBfv1oIMQPnZimWxoFtRPoo3RKNpr2XEG0RtsWtTq5FpyPlBk
0yVTi52WsZfrVS1o+3Y34rlJq/UCPUCarfbnEuxl8pz4y61LG0Kn/ENHmw4xOpjKzuCvj5MEhk8v
US18SRCuaEEErHeyWS5pFd0KlTvGIcN5ijs06Ad8QHAgp1T4Z0JIuq0DMlnVAK3DXNCTh5D62Czk
s1vag2KPUXasfk+8BtJAgh3O5Pb+oFaFxuRhLa9b9VBdEgNDDlWLU+cFteuC7AT+6PRdFRQjuujj
AZtJCRs6NVtf5XH8Rgp3D6ciFvsZw2gBo9VRcbBqNpbyHIsMI4tFxwg/LUp+9LTYKfYmZqlhWMCj
NKLWnM0tL/L4k0ipIqYuh7Giw7jf4b3nz310xtOMDYPzYN51QlzXKUnqpPxTMagn0mZ+jyq0bkk1
yPwx+COf054VS16SmzfUjF7gcBNx3nlyC2TlFgw2L0fU/v4TdcMeka5uoK6O8nY9JT7Pp99RYaMp
uJqScFc6rt3I17lpWoUnp5S7gwBBJqilrVEFS6CHQeDrlhLR9l8DB0rGMhSmZCnjhNBVLeTWseh0
DUcvE3mY0N0UNn8mo7ox0w3TIg/hGfWoIg3dsvd5ElQ+goFFtD6qpV1sYiRNb4F7qPtScQiTD7iQ
+ME8XEwJClcKihXX9xs09nCwHB7WL3L1kdXpZthTBM3t6Rihu2u56HFsV/cOEjDe+AFxdIWOWIsU
1J5IJGESVG9fQ+kHZfV+IliDhI9paq1WsmQQbHhKisPt0rVrWWuGv1aWKje+PHsDs2d1TGhRBVDc
AoPLshBLpJNZyMyhRchSVWVCsUoTmEbQDpMVuj34DibDQxoBDKcrhr1VgvIgcviPFrYE6avTZdHU
iuWAuheTYX722ml8dq0RObiEF9hsHVe77GdUryrIX1j3bTFX1NDRZe4n+gvfovlYgBBbM68FEwWX
Pwmh2Q1/AKAdEWlYB0O8GRLc+moFBmgaOXpEiYP6smUHuI39BjQzxf7OIL6oXFhNOdC4ASZBa+H5
RI4eXcveyQDEHWLaLWU0CV65mL4puafsQS8CJhqN4riK0oByBXASsevoAbCU54MiRmS38ADIRq4a
4wxICBWJXjNLgo3IMZKCdZsiPIpONVdOmXBM58Os9HElxxv77YeLNhwRCGQEjqPQsSM8PiFjNJo4
SRNrTCyjITyOY9jz783eFg81yRcxwcJu0j7r+VnGhnXucxcM/8P7rC8VKVXY9jSrCNqEKF8SJIjT
xsxgBhNQr5LPOcGw4mk1mFtz+mYSSG9G+5dUoKRkd9qP8e2a3CHNLBqB5IvABJs1rf7gzW2lGx4j
e7NluD2HUukgfZZF6F29iJIS7joRyuX8SY8QZp593Wt3snDnpGXQ0Tj0mXF18SeyYIIYEB5wlVa8
QV9+D/YXkIKOLMxmmTSEY26aJnFZYw5yiLPeZEYSW9s8PYVeb/9O0LkYXveRKeNG8ZEZaf9RbYc2
aLFhwTwNKj+g//8BYi4V+j8rs22eap23OV2J/h9lHlG9EA5fSyPn8dgx1d+F3JQ/ov35S8CQ0Ef0
E2Xm6EUaU9fjbNXIQ1s/0aUf4hGRHmUNSXhKuaXm/5EsK0z8X1ZOJYWxaIBTREUrF6TvaeEkths2
Ecadm3rM4RSnm6QisuIzrB9nD1zLxdgBt6dmhQuP9FOswfA/skvD0Q+kLaoVvjbX9WjxPQICpcOV
r419xhkfba+vIRe22YfN1PfwS8Gzse8yDQ5lm/O9iUQBeFuw1r9Pzn4aB5HfJFabFqyxot08zSj4
gn7AW8kllMJgJ4yMNvmixbAOOW02yBldt67YUzj8MUQW97uuExNQzCp1lJmJ0uGlkbh4bVOixExK
7PSioUtWIyAxxcmPTH4yKFSXXu/7Tjb9A3YG6X1tQ6zAzFx26vPVCUpFvRo09Xr433MyR8ZTvKeD
UgVuX79zkob8LxKNw55rb/UXJMWqiyJHRTY9p1asvCPkrdEWgpi6EapWgrPR92WPqgZdB3Smwltg
vTnnBRXzQgm9Prgv4kwzdKgZtvgtOji0NeMkrdIz+xkGYEnQSa8p1dg/B2gYcD36FEEgrDGGAubd
PhSLOJ79139Po/cFZadf82zk6hJZdETZ3YOUeAu0+hAg1MUgcw87YHxWi5LX/qlah47tV2yh3HNi
CBGrn4Ts4AreiS9YwoOTOMyy5rhJUZsSjYgu9vmbBbUfUARSfqzfSKmqA/ZkQZwh3MGzkIMVb8Oq
pYsN892dkAmiTFgXLaH5FOsfl0/HgofWuSp9L2+wtqaVUISQhx2Ab+DXOgdzbCOWFLKrLfxUdecj
uWmaafds56LKySZDwjIN+u1Lae6C2QqTxfDnfFERO5TNpikiEMiCxoFHOyBJmUBUa8nmv4W5TjE8
WTHO/LRooP19zyWzMR1Z0zDiXSOd1f3q5TNbB9r9DL5wNhOVMkh1Km27Pv09jA76pGW3rSPjHuqL
30z/xI+r+RKJyhDL1Ck0Fxag6ZQO/1hIFu2nyP1ZZrRr8RuKxxWtAsPwgL7GVEwjVhFhHIxyF3dO
mpVy+9GRC9KerJj3eJZKC3Qz4p1+09Ku8tRFAin0BVn5WxDMjtYl3hnAzIHhpNj5HpC6OQJ1i/Vh
U3/qHRtst+EfGDwiPP1hha11rI3pz78Ix8YvvdKc2DhRGWRjy8K6g50YLvXOt3TpeZQel2anPSll
P+EGon40WWjisEa8bHY25O9moD2nedpNEkBsf/S4DCudLqQhC2CIM43Ku0++KY0tjSZoPf9xv6gR
mC+gsnjvaGcQCvgLKtyqk8MH4al4Cp0VUbDLslmTY6sR8Vg2fwYMEzPz0jxBxVmy9qpxsUi7O0uZ
qZaiysgVaVcRqwXaKO8huZx1ElNyZPDVB7dM/yvno0bKCyugITySR2O18+Veoxqp5PV8tAwMpyIS
1KDQOUmbSNA7gKybdLWJDobK7QiwkrToDwjAgyg9bKQPU3/OLoMV4lgNakappQesGwVZaZNQvHLa
01HL+eT95VSnoj0u/anJ/zk305jCF1s69EoOKsmd7aVqCgtB3pFF4eOol2oSxmgvoF5eG77uR7Q0
1+/1/Fqqgp26FCm65l1lvqNc27mYhNSxPOgnUUj5SgwZNULEPtY3urMZFPwG6tGR5vtlEjjlR4yT
vjivb2ZA3PuN41OqJ1sSO/gyJyHN172UPE7taqziJgx/51lwrQCfCSU0JHf1NsfX3esrboFeZxCG
1rv6ozRGzjREiyljeBEg+KAmyxW1zVSLB716YGJ4ocjaGesJlhCNanqxYtfetuI6hXT9rWTf0JTX
14wb70mC3PZQRrTjHMIl98Ytvyk0CJiXuj1bhRhbjh4ONpEc9MIQFF19uoSmJ4Sxh4FP8M4rK15P
Ao2i66NYwVJCwaP7iT7Sz8POzh1eEsVBUB5Y2lRkrc6cT1kiaTSuIBhauuhh+IH17JfDBAgtzdNy
4VVFZ9IUap4h5N1W9wPJ61WDKkIOkUYch7aKavpctQUhl3mVU22mUU8XKJorCIc3ylqJTjgn1SDF
jCDmOpsT4B2HUh1W/YvxAiyaeI0CYDuU18ZI4leDtFYlMqpa+GigkC38VP4fE+RxYwDnhN9zyI4D
qTcIpXhMpLz5gbHYvMve2Fi33/FQIMsr5TB+rP2lAA0Wia936esQ9S7Ytrh3yTDCrA9Tg0GQRe2+
xWJdk3uM0/am4xBpLCjHZgWzTf0pmW1Tv0jB7ZzPwwY03aKnUHL5PG4ZYiXi1GYr+ayAfXAApoot
Bzo5ofhBlDEfUBrwPxNMTZmYLu8qr4KQQBEe3cjiA6vRJfeDI4w1o3c2tAaXoZ6KrHnY1X/Odv1X
/kx5FKNVi6Y/bvEKEL3mHS8jP6FmjpUlbmhmzUOujS1Qs8WXZdIUuhmut5PtJoLplXigeJlma898
tZd9tLeL10DVEuNmlh1h6kClP+Z4BVMTIywDDJgJQ5+sQZX50PC8Hh+OOAGlO9SkBfxCrrQTTcqe
GCc40m+hd9ldrl11XVFbq+oiVOi/841TjWYWoCZURpu/St7qYL8mOpYlgtlY4rSWDXEmdWr7NxdC
WgoC5J2G7LlzjZCSrjQj1uNmGGIryqZHUW8OMtT7VJyEe8LBAnHySTE7uRHtJ7Ueq/Vt+bVKycUk
lWnh1VPfLKeFpx1+t2is64uP7gRypvNIMEA4t34aFBkVgjzAoaoL2PwFGaOcA4QPDUrJidiJ5qAO
NrbM726exY7Wj0mtK+bWRsN2t7lK6ZhkYG8Fy/TLwjXGsNeIuGJTROZLDa7irjmMzxawqdvFs8jz
t3L0880f3BchWXd5Mas+rSpcg1y74XuhjL7efLUkwVFhLUVYDf3xoFtF4AkTQf56629wCajZdiKk
2oox21/2IKPMZZkpAjVwAfZSRYwjA8yC16SJXruR2BxGHBzB2C3R09xrsmP+WVLkTYn/1ux+Wc/F
8m1stPUrF8KVOvLw1vMkZMvlUniar4HebQdjCngMQflLowUkp9NlUwJmRGLhEJ/fbZyEtgp8urxD
AMCCZBDaBZHe7bD5sYmU0JBD6nO4pybbypFuVLWrsa41TjBW8gQnmvRyIJMJpWp7WYE7LsQchlFb
t6+qjpCHMGQn9qLpq3h4lb58xSxCFo7Omn96+lanbpxiUC55SZkCPGaANeAwyPcEBbwlDEcEja7L
MiZXVfOdPfzQLS4KHLhJhI9a0YIsMI3f3U1XW66v9HX1teW8ttGexfBJssjkcoMLE5OiiTnijMtO
j5X4jjyDV90UTMHjckt9j5Psry/geWKwR3b4Mwxo+ysV+Mrg6qCVozLwV9eo4ijZxNa3sG5sJXiB
3CYqNSqqubKNMGihTQjQsbowWlIKfrjq5QreM20EIZTbwra8r2DBSmut59GzDi1VeKz9jlDAq1nt
gQ5xiC+LNI3s86OlGwvsgfvCDGBWxAIe6l5yE02oyUlwPqafvRmJXRwh+Kq2lUd+MLUVvlzW6O1e
47KHE3eGbrOFPAiDh/DgfLfmvhOivdsAcgPoH0CceAgfcKFvEooQ41q4Dcf2MX3LqMXhP2CH49c9
0W5lM9wEcil7e0JHxVTJ7IhRs2e44vAKKQJW4bjf6aT6Dk+8G8kEGowlxItlG9PHFDP0kau1t9X1
gLiAFASppAWB+Wlc72VYf+MrD/T11ibCSopHlc0NLdS/9OgmJUe3mwu17x8J3gaXzssvJEvmgA7W
4TjCuo2ynJB38ADfOVYGmYtWlJiYMzVBThC2FWy9u+tUuFirOnZOLUb75i+MXMhD68/gCDhN5Mz5
YEvXheC3Qls6qe8WNgMbiq3Lb5Fe+Jr3a3o6PCJRSY6ZCW0x1q6R4D13EJwyLo/4P4IuPaAVKiM1
dUyLPBFgPdBDgXlr0Xr27BIVNHf2avyu06NG9DvQKBNr6/eLOY1gwKtRB15OH0j8eruRSwXW7i9c
i28lOpVvZ2HP42ydvHfHSrR82exe6TvmByKm3eWoR2desAnwWw1aZldcDKHRe56Hegn2gVQk94Nl
98MpRzJ4XxWWEIo4zIo+B62XCOWI4gCqdFbLhsINk4ufZirKFK2exg8OO1hFEqEnWbirdTMqVBQq
RCFla27jLame7hjuCf+gz6B6O7Hjxge45gJdDPGpxJ++dIuhtamREG07GYOiFiKMO9ulPHqrIPEx
Pc2NTBX95F7KSiGwPZc4Rehqzu5A6L1UV/CpQNEhKim3x6U69wwDifYADr22YB8X0y297nXfiDAS
06t/DZ2LJGmUrxC8/6k7RbLTuDvSWpcBefEpESkbzgKdE/sZ47WeSiQlr1LnQK1obyHAOvy2XHwF
7u+Nz1Z4CdWGw1sRWqwCjnVth3Edq+khcjKNUh9SXegx4dO+wNd9pmLvq5O8KWi26BonRgCmMEY/
IrW3E1CHzd4SURezrMhSLhqz5ZfRwCeiaMVXcXplolYLOReq8m+O+wvxS8LbcX1jzgXG+bnGtTwM
WB7HF4PN+XKwbQhWpmiuveGRKD9eo3q6PITz2gygyWHXW833GQUab1NzP9j4KeJrMSXj2pGL7uzS
WY7KLWPLjnCLI+yWOL1viXEliL0ztMfx6J3uxr2dbc3rKcgMO9icTk0/MTGiXxGELPrwCL6TJqYD
gA8YMK9Mi7Q8IddrRgpgtVFdO4t669gj40pkDC3km4Kgny/zNscU4UX82lJAAaDOzAWgi97af97w
Xa+QF0m/dfAKp7/L6w4Vfje5P1EuU/BAYMQeE0Tt4Rz+ffxoomIDo3nLx+5b0FjCj8x8nK5C2Fm2
4ag4V3xBrYzbRz4cyWdN/cmHc/fAhtbp6Wz/W5ILpM1PpinTKkMiDEKY4gsqI85Lr1mhkJTXT26l
Fk6WjwttccOBxhts6QKhIGRE2SAl+/4q3hBfBbzjVc9FPuuswXKdeXzWMsPYRSIAN9h7AcnX3gD3
dVu4mckTjjeu37rhmp7/43Mw2OHAoa2tYfOG2F63U3KCkBZ2WVU/Q3CNzu+Ssf9oJyl39uJjkWDu
eWBU166++JViLUlSNOIOU+18kTgdyl3iUUa3xxntX0RblHVCA55WDbALGOvk2VV7LiMVhpLUVCP4
lIvSma1tn0cAmGPraxUhW6xArw+8+SWYSF76bjQ1wsgYisceDTDrP5+ZWaCm31siREa/GmJjWuYc
7mlAC2ZXhsELP26+d/4CWX5/ijqaw8rmFSp1OvYB2tCCg7xHl92yJWB+znUfx5WPKtp1nO7LA80w
5pR7jfURKxhJkCEX0XhiYWLJWPoLYtN5qNM18MllVQwT067HeBRu+SdK7IchfhoeExKd0iKdmpkA
ScD/3K4DrLkaiGJXjlct+tOonsZuBn+a/dazocCZxfOHMiL6e3oCTxkht1PQLKjb2KVwcLT3csIW
EmIgLIzy42oBMLdA3n0oPZ921XgU2gxXabvL7rOjkiHXpnzV598b1UflMx555eiDu/oDGk+Qqgtf
7imbsYHBPvZpCXdTmdaFCZLDMbEwbefXeRR6Cmw7jh6nk0ejQr/HH5kbtV38ddFjW4ttEA/abdRA
bXAb7Cvlzm+b63T8Es+DU6g7r/o56KEn3x4+st/QFm8ecRrfGINiMrAnh+ULnyHrnjS5qAcQef1m
WhYxotxhI3ljIfwusMLHTlrlDak67YwQAdEdngu4xXQd4OJ/DF1JG335Ev3TphHDZJ1YoaTU3hKh
GJd1oZI00ZFaRn6vuiqbXYWV4B7BC38E9uJuX0VQuNBqEN0HBhkotmk2clyNG4yJsrhj3g2j5bfq
LIwBYxuwirDb1JGVNFuymxdhyMAwEV+t+5UavPBxf/yUCsdH5qmJVAin237n6hdMX11ucQvSBxm5
LVMagWlH0boG2dE0e+rIyr/XmCOU9KwVWxZHNNPF69fFRXI31pNfiBYv2byLW9ehe2WzOJRX7y2w
RjFMqgc/BCrkoc0XYlKbxoBd9Tol9pl9SNoQVLBNrp8fOHWCVxfUvAa3yuV7WRMQXKrYIaKfIqdo
81LkQwaG/L3Oa5aeF5wZ+j2I+8Rgu9wczPKrMtFcXFz7NUNXPRz4+mrs8han2fHKx92aYP5b2GtC
ycV1vzoRqMZg0CBSfXDDkvUBiHM93Rc5jJwgWDU1d8FvTYqQNmpHYwr9oLXfr6CGEwtRDdh5jNw3
Ji7IVAU7seY6YnRlvIckh8Q6WgNobQ37RXE9yr+jkDKKZk3TdKP8DDud7RbeaaysurSM3nRdCZFo
neL8IbXcVngxsD5QMQprZ/PUwcI2o6qoXe7pbyNEPFfqKZ/o1gahWS3m89cytoLyoHofPaPAlX+J
Z7AEWePox8cuteqEAxu5QZ+klxpad6SdOyCHCA9OgFxBlwLPrSFFicqCaYnEqzrUyYIeHUY2X6kX
QkLrrBA5WnPanN4gwaYUywnvD1Q6gHvgVbJ+edho7kmLThxyd7XNv6FEsXOYrva4tNXr+COy5eB2
dmQU+OiM8JHp3B3fIae5n8uc1MZGN4diDHqUtbL2CmE92nZsKLKEqY8DP8vvi1l6kJoKh7N9GkOW
PY+F6636/KWTL4BlteWRoImaCLT8D3/XK2N/3HzC6BEYAaDNRp/fFh2xgCP6eiqu8O4CGfgcMm/b
/jo602DFc/NojE3P3TN9k3k+q82PeMvGyr5K6V8NaK7SXkZ3HedueK1gk6srTVWM9RJm9SYqBe6P
mh1SA7oRtvY46lDx3ybd5I3SMTGe31/8nUYUkqKRf5YqkkWSIJY9UN6LHDXzwkopMfSp8NBuK/6w
eNlK6AZL0Hz2HJCoG5hYth1bgAhInH22oTxuIPHfWz+ydaWfabYivJdpFJp2DvOEIJ1PPHSMVgV2
31NeGF1Vla9hBWE2KHcZQvTSnlEQT1bF9JKZeeCZ3yALB3Ej5yl+/asxVUBxNBnh7NA3O1wvdTcr
uH3FT56mN+FHMFMrSu2FUSEVxVxqBLXg+JMLKVKWwNsP3UC1nrfo3BX9cmA2IrwGsHURnivGYPpT
ZQ3wcCOT9pnv9Ndn3qUENkUJnY5FdmKD4sB/2R5G2o45SYw0883BPQdvbvCnXSVPXiM9zG+PlZa/
CCQJzLkhRk3JvJ+34IgJkK0CXtGR1o79nxBxhH6vpbr0SLhh9NSV6vs3yn3EpbsCqcnfGdYocEMV
h/OAaBH87LU6Kl8e4cFg0XBibB3TzF01b6aeE+Vy9NhLmVU8/yYx2NMiNT8beyVVlTNLMjsC++FH
90cZXhgbQO6jHVrl8jmSkpJoVy7s6JmJduLh51kBtqz4K7Lc7VYAmMGlx57XcVqAlgxkVmeAlVsI
wDxcs3EQWEFmlcALsFHgnzWqcrgq00FIqJ8Fwl9vH1luHUdT39wVD1J/s/nJDvMtyeeMiaivUUDd
K0rcr9PQmYaev05VWry6gGnVdGxJseOf6nmzviWewZxrXSorYGyhN6fvBljk1U8h9FaVwAt4pula
l3t3SUMWUQWtdh6sTs1hCNcRzRra2V0RMv9IX5wwJuUq8d3diLufSHBxCQas6W1+Yw6O6wcwR+QX
ZIS1myySxH059LDQ5fcDfotoeqMLcMmfxPMoV+eZhYAgTjkOKXQ/krEoHwcbdLbGxKmI31b2HmOm
+mQ93dvlxBvvA4EwZEtGT+JOOD9Vr8S7a1C3l9NuLR6T2kTbm97jrHovcjrldZIKr0GPhtgS/uz0
f1qF8qDfgEni+jQwa28orevBLfjHFiXMW/qqdNLPxDqhCk9niq3l9/SmHHKduHOgoKiukXG1RRPi
V2qUoRtut9OR6RBcEpZF5mN/UDL0GHtjr1ZXiSZ4nPNVoQJBw4l4HUxGdV3IbfbDDC/1USNdlTZR
UYHFqhMFcj2APJJfvVFkwpOH4mvSjfCejrz+mudu+MXqnOF6rSnm3K0n8OXl47v9wmdG08RpN21N
OhO74M0FpaRo6LdhvTqZwOBhdTdzV96/y0fNOu4/xMJLzVThVT8KSCq0pnK+fEzkr3X54ib4ZJOr
CN8PzrlWjXsKYExNTw39S3SnzhVt02h7lVhvl2sLqEbKZvlpPaH2cz1KUZvJdFYxyzBW6mh8q8Q0
m6dsCX8CooJiQaqJx28NKOz1pzDewaorzCDv4p7HVjs7IDuNs8Ws6BZFg9yFlWkFjBkkKHOHIVS3
RJBGMPKWBjLSyNY7ECDvZX6xRKlnDTAVNDXNu+cMdGr61IZxnqm2W2D4YjwL5NqCtuVsPX9NCBXM
XT2fSl3WGMdIX9fJ5YPwQNv8wUquT+FVAmmVd20rffc1moPncW13R2ASEQbqHLewygbPs4Q7B4Yu
gnrJHbVIHQtcBAC/MXAoqbejNzQaoSOzLEWvVBj6w8pf82PruI9iBZnP5rID54LEcHxuU/cihUEG
qwtUcah9eOOQcM2ki75GIQ65cveh8hTVfeDguiHp8lHnIuKuI8ElCV2zeLr3HitEjHoOw012SXqa
erkZUt309OKoLgfHU1orGpgb7qveGh9vNV0z1l1K5qJWV87jxhozAiff2EzvnkqT1DQUg2IDmW0K
hngS9tx/75dTbCAAX6RGKqrjSyePxi/zMPTCN8INRjqCm/VUrUq6qIKkD/9zo009BzIqokbQSDq/
MA8z/sYbX126vGLFR8ZcKzW6Cg6J7MtJM9CwZcLCadxKXUGJvXDIcB1mHYedqd1JHxTqlM5LQMk1
Z/3VVe/XYGTLC3LmEADL8Tx2lUsG9z7iLkqm70LYscnMN6Y6jqF6e4ot5rUMXsR+h5lg5XXbmd6q
qhbdLZ+8Tno0BdU6fUnb99lhkoBhTopKIT+bulhseL3qOA1s3nXdQs5qMUZ2ePXaOlRYH/ScX1a8
RfeBH4VLqNV+0pWRIuEoPP4u5Kqx4UtZrHXclo1YYGkfhQ2qWN8C8bmLsWHxEYhQ93IN9wBtW4RJ
R9tJfMHbZaMchq7n6qmhfbfLex2RfHtVD9CWwJPuezYMJNThgDupv9WPbpQUmtyID1y3uedlnf13
uvuuuepTUbxpnIzm0e1M3S3Bj7zE4Ce9iNZeUVKC2bsHsWdCTowyztf9BMGV0BWbIhVQeygYQzD6
lyXeJk6PSgXbzMOAbTtAgKInVTAulJZzsyIpBub1w1EdATkQaLPH9Nc9ggCydwv01NX34a3qQFsL
MHNb10weON3DrGfsda6Dj6M9bvn4CtjmUhoS35xnLkLw3LY6SzvJcVeEQxNDBndfMAO/RzkZmaJ8
xO5gIwqtwSL3bYH2XW/NW5iJAFSdmhwSAyN8k0eqMxI2GQFqwvgikBTJZtiCy5HPUrSTd5YINBc6
VdjgZsVvpwBDTGm3cUO9rKk7FwrhBpWzqZhIu4GC7Eb7a4WyrdYCjd54493CsSHfgj8gjWKHdb8D
qYPziuBfQulXalY4mDUtRP7+1F+o1jOhvJRvqdcASZ6RwhtIkIVxEP1hLcs0FYk8m4jVVCV9OpRJ
uNvz4/iU/tznNB9e8xWazWrr1o8jjTYHdQr2UJMUiObk0NqoJfmkfe6fM6YV6o5l0OtacclBlpx6
TU4Rdm4fUK/7HzAswTVbsGY7Gm3B1FfVeUK5LCWAb8nalUf0TyF69F2M17RkDDPn0YcKr2uHqYyh
CvTwVkuRZcG11pgafxFqnG6WVw9Ywv3hXWb0HncAMHKw8ae2Euz4MLmCfpVhLc4+pNZKJNZSKCmo
Bh8vmFeTFbGMCNtMQ/eGp+Cp1LqYAKMj7gSllG54FHkjxDfuAQMJ/d+QbQtGrgXMGjkttBUoSLqk
SY7T/GCTEe6HJzMYEyDRkCjsF50YWP2eRQLIQuhFmsd4ugak+Gp7bclq9AAHxqeT5GPqTeshDgVa
IvHEOMqw2SSuhwFLN5qCYOjn75eGXNutYB3b687GFCiBwdGr5MyHKhYIaDHVHueqDvIWRoekZ5qC
0mX7lYDTk5AhFSIsD7qqIy9EbZ7MQg2plQsFgAYLGtd32hE6cxG6OZiOkFoPoKPOtpBIUrI7g78Z
NW7eUusmQxbZYR7u6k+D8sJPn+/N/x3VEOwQya+5UDLiocNkFYGKXVvn2ebgHYtJrykxE1TxfMUm
3K6PwEz7Xrhp0Nsc0Y7+Ck9PbTqE4Xt0CLV9/kvUmL+yMHfb5V8CEODJ01Z53AK9o8SbwndIyMTE
tvBQ1FfRbbShO6DS4lgGuNKR3NdfFnsQUKNZnIo1hmliTD8PlgY+wSClSWfk7YsA2hE0p76e1oRX
+zAD2Z9rTOwcOqpD8wdgOm0Z/Fr7aEenRz1rLQGVsp5WaBdl+Gd6MQDdyg2XaIJLxcMKyLUhIRQ1
puW99bKLq/3fw4iZva8ZpDJXP22su6WNDYJ/XEgA/H0o+errLSKLQQqoVhqWpQAN9ErM5q3VOWfw
Mb7yPOs1YxLOoVnB5iu/yoYNcvPvFPzmOQ+Zkg5KDgcyZ+BMxTe5ZPMVK0+ZG7E3T/6WBSm2eD2u
UqRnncX8V6ee113dN6fZ86bcYxd7EoC8fwbhUgDMbQRGEJYT7XIMT446GS9VnyuMrxNIUMLtf3zD
bPuKl7NrCqihP6nwusIdSIhdjVRohefquPP+H7OEmRLh1Of05gt0PqMhxSIDSasRxskBDQF+QnjS
RDecfV+yvqC3iPxb2YJRboRCEOK4Ur4QcT6fkZOudBYGQqyQNAKIfE09gJnv+WXALHOM2ErcWgQk
vjV3+2n8Nyx4FPQwbpjwaUvpBkUMF//qmLMFo0VEw8CVdHULUxD4P3YG14acasQBLZ6ZjXE990IF
aFAkjfOL+PDm9wKlYbmlmKqRoO3jB52NRTHkQReZEI90AGIn6TnnNyD6TKjhRsu4H1/a8mmXwSrX
L4yn1XFF5bbLkDdrvwDLD/P+eViTCpbF/bb4SZgwJRfjD2hT/ZpnjzB2muG1kOQgE2c/XMcDCSI7
BdHcDC7aSOVrhuxyZ8kXvCBJ2ukugHfvPIvdIU+aKEjyxx9HqZ3kMpcSbsa0k9z/znZoYJiSmDJ6
ROxgsnUVX1wFa1iBafn8ZCSUn/5lvtJfJFh+bw5xGBptDBbrqyy70aQPsloYQhzw+xYVLA3gIMwp
dAQxBzHe3kgFKFufpb49sCohzCPqspKWMuf3lFD3siXFpWzGJtMQr7a7j83rcGL3YujG4WyRTvg4
DMBVxElV67oDANd8yD+mg8vIKh1hmN+tPyvdQp8njtP3NMHd7tUlU9oKpWA0lAsX8NhbIcLPts8D
xWWEB7A3MnEcyQJVyLHMOso+vTTs1m2PrapcBESbKD2C1/y+U0k322XB4F2ly5SxMarsbNaJO9SZ
/+e1BIp8lRl7ZoPuzBl0DsGIrZkcBckyFjlkQoYzJFUFNtQoGT7rEg+Yz5Bgjiukh0ABbbuiB55m
lAUPcCgGGi+tXcdQIZB+xbMckPse1QnzY7DasXIi0mw11ZY5UJw9+oabF15UqRxK7nevENylZe3N
TE4ZnbjXbsO8F2x5ehOnIIc1uRCgqJGSED6AEQOGMPpM/IvWcKDZim2psJMhHevAPKAoHhYE6Pus
ige1GtKWmzgX6pxL2Wm8Nyd5qFJOyZe1kai9vHEL20Ys4jT/pBwIpIxs+BXKy4c61ZOsir97oN+z
h/+Fz5OWICNNCTvUqvPiEJ6eLUloKZp0W0rPbBgCDJp45IiCOiB5krp96fRb4S4Jz4fQsU3oGWPX
BxN+pHgI9h8lrRBPcfYQzZHJzX9TBddgbvmQW28MMqySNBuSwW01cgs+QEKrt5oCIQ1CPR8snQ8x
W56DaRuNS4+Vk6BZ3QsZJsyurZFUiBYNpAxF/89d2cXpY1N9Zzb6vHa1BM7SA+0KiEk5nx5g0Qqi
kREClIXurTQ5SE/kEB+CSQcu2IKIxXRiN30Ju7iQrCtS0hzH+bNKM70g/sTScFZBb/WpQeGkOeBa
6it77D8+ZysguXWmwwsDlKpcCv2g+lV25C129HxeE80lvYzeTIUu9Qd993maCRSKWbU+vq0aSFFy
/kqWamNkJKuhaKyPbv7EXsawfgfEYNJDMW/nqQqez4oODNwbia9Mx8jUIvqwL2mJZ7n7bPrjYdUR
pBGHjs7sS9Hij5Zj+jzsDD0+bB/Q0lZ5qKyJ5TTMxy88sTHPfsJd5AJVX7dfqX1t/ELi444g1eX/
ZhzJTRJRakGy7BoiS7QMOsra9Hj5/BwS/6qavMet7dh0aHApm04SJI3laCT8YJLDXS67dI9B5fqY
7P3F3WjSnfh74nlR+MowFzEOCgLFeDQGBcNRokQ3pc0D7uvjzwKJ4PABof5nFGjNQmi6qsRUyK0d
vcNLWA2UauaGhzrX/jU+8nO4p0+vqHdWVxykKb7aOFJj6EmlEfcpWkqif0/WeYeTl0c3lr3CDzsg
OWrPrE04t5iBhhQReCiJJJ0HfUdd1EJn2+ABklAeJlrn62nqmDGReWjDTDfIeVJZMyb63M6uhv1R
iEjv8jLmSJgo/pPiSFZ/ziZj3SZOgSpTnEJjLLzpj3jica6S7pZJWqN31CprQdb5enXzDC5+oRfA
CRUQQjVbUscToN6mrvsK11uZFD+anBji8BiS6m3E5Q86BFYAdhPl8/JRKgNYZU7zR9a/mP1gSnbb
Bk6XLyBBDhafkJK+vihJqstskIgMasD/Qf0N8HP1IB11IQc3uPPYeVbNmcM6FGlzdW6Mp311723d
Mc+0XxXRKUI25LboMt215e3k9NZKtziKevHMor7YOPV1rKH7zLFAZ4AIOQJBJTYTxYfMtRYD4yq+
mnJXzkkeo8eptDNubbOpqd02nTwuu1hePcAUss/ZqzeyqXWuh5X0/PqEIHsuBRh9UWJ+0oGnEFNb
8kqiR3IBumykdFcEZAbDYIfzog9E7/vpcL08RiC7RN5LCp1wMp5deMmGBykzDVnSUGRRCp0ob71K
mSvs08FWodOPv/tLU8gKaoE1cuwPhpDMC3g2FOgFKYLn682kVduDAxAMeGviGLn+LIWG9rAIAzbG
wExQDcEhvWdzoX9/P+g+kpBNmKHZieinaV+XxRZJclXRmbOwRVPaUzvqUdb4l5wCO7uiNnNg3Mv9
32T0dNI18JavCi7mk3cKJEpnB0KbAeO5BDGTc9Xuphr+TItrDwbcdAySzyVt5mqiwlFCY00PPVC4
MXwGQwLSsFodfhcLrckXm9xUuomGmYUWvfawu6RW/7Y4ShBm8GJa03mqwXV1VcHDU3CftTc0Q144
AsHcZDFHWc1awownq2GRw5h1rziuf3P1FSU50Iqthp/CeldtDYPClViooLoAVofkOwapg8N1KQs/
NlVtbtDilTvn26csgJtvgjAJWtgkemOJTH1uiog4twCFI1frBkjdIrS7g9XNttHkw87fIDrkty0O
uW2Y8XVDkJnHUs9TThGyrFO6feRSSslJFTZ6Z2ovbsOfytZlhPpDkyyw/o70EJWLZHgScz1FGfEJ
ieYg8v1KV2f+7dkeIJ3uQb4qkDHzL1uZckMhxLqFC+0c6NuPZ+2+xHKSQZX94LhC+PuPikoT0jK0
9zf0J2L1WGCj5j3rv93l499BTrcccFdfUVUKRfcQd26Hh4JnbQ4VWbzNU+UJF3o1cf5BPuJAuedC
4/gsJHCxHvo6asShlfuy2PC28Bmnq+v7T3kF1cpctE2mwK/GipipAnRLKKJRMyFXkgXDW9ecE2W3
bfkwJlozhqCtpd/qnZWXC+DN3FUhrv5PhXrIA88mzuzhDOAU0m6v4C1Kdnnc8804Ozc7DfUgAdL/
M+pj0IZwAjWbWBd7NgmqyVe9r1V2VdV+L3WRBB5Lw/uZH+gjW3IfoMM0sEwcFjeoy1bE2BZxTpCn
Ps23xtrfssKqzW1OD3J7XcSHyxu/C5fCTY3pPNHCSTQO9OQu9m+L59hdLUgS4dO6/VwhykqgN2Cm
0czyejAbyyQ/hjUHRPn3rwrMf+tNEsS4NUjM1NSo3uPoxehA5DAqfcjf85vsd4/TobRDar/GK9//
v/PsMZB6SBKcFkrqhv52X1EwReQfxVy+G5R0vDTlERI7X4RmBfrA3CDMU7X7KlSLMuNG8fDJt8IV
HhAsZQi2eJVzUtqCJpjJfAcnRCQhxmtEM0QVe5aZNXS7LXDiqUWPeAoRjrZ8X5deBmYSPt4ziKep
lgIbQ2KjBLZiJdfljvhODsjs5jggQ4Z7agX1fKhpTZIemQBFPt03igOVh5MrK+LgkeYFSPtMfeRt
/M5jDnslQWXxvUHEnihu+Sl3GlwODYe2MI/pwVHWlWrxtWQlcUb4maupQK70SrY5Fitv7RH37lqm
sCWmxIId/OW2GF7pVn9ThZLUQpojrbQmvud9RaNjxaUIHcutJj/iRT3exDSnj1Hf3CY6qpxsTGVB
uiIDNjApYOEX8TISHRSX+gNtgQRDan0DFJHhueC0BHLOIYGJTnMRIgvZEVCSNUaelxHm1UDUDyqm
IMgwgXtwzSAozozHPARHl7USkMvlVDTe7z2Yto4vujL0k6+FGDYvOVcla53o3JbmvNbcZ16WSDg9
JUiWrTkbMtbKhddljwifK8lSth4cxyncH1ZgEzAjDG5UZqRuZpdhlC/4nHQigeZyctVRFCxMytu/
WvyOIdh88fGm0h2um0098Yltj9ULE9DYQwB7EXNKY0mL/T6u8o2cSSYeRstcD2s2C6fFtQ4cYqRW
sUQi1JGi4tY1kYr0FoE1HtN5GUSC3IMFmU7MWXXOShxkCEWj6nmM1hLRohmcyJ9AZhPO5EEBLCPo
h/5uAExFcM8NnTP8LmJYNhPi+En2dLMkCKbmohfa1SofOj9XzStRTxcoiTIazySEfF7Zbz6JjSEN
IMbgjThF3LRhEwN3NLv6ow0mALj2eXpURO30Os3MyZoDEyiJWV1n2q8jt6zk0nn2nhH+kysGDgqV
kweuOUoTRqxDeipSMeOL+DLvoWsAO7Rvga8r1yfKXGeZ63wNKt0Fe7i7WHHw1j19Zkii/9Nywhqx
+XI0/gW5I4wv5OGeBZvNxfGG3v9X85c2M/d54K+BTP1fbNMwlRjlxF0Kw7wp/cxxfo+CTiOseaon
TGo9MdzIok3NkKen3tfUliTXv8YWBsfJAOYJDhDj/rOUbaEVQEHZ5EZqcO3LKV10/vgrt2XeT+Jm
V2D21abGWwF2MvMrNvI2i82QyrUYmpIqLk8tcvdfiwiIQe5uyftfX7H//TdHNvoHrjsQ5C4In7jd
inVurbpx/p71tlq885FB9gHAmx5/jEh0wJkq6li9MP+NLrcu91inCJvcJoflOf1WCEctdfNZ9LmE
kwPyvIPN40rx64upui7bHjmxjC6C1A7yBhYXhDegQ28rSeBmKx1O7FmyzEBbw2DeFHhFY2a4rgJa
MwJUkxRxDqt+fpPDY3Jhk9NR6TPTRNIRxvnkv6eumw/+PA2D+Ax7ZX0UoBShqPVN3VLZYc36s0Ho
8ThNhHjQYqZolcQZ4cLCaMyvwtb9xlRJbVP7ktWqlW0mt03sVl8jZJXUdI3Fh3h9rPA0fHQS2oyA
b+W4gFCtz397WKRrN5RTsklELCHKPUd6sAuaodXL/qampXwzcMU7V+u8XogrYHW4oXXU1c0RYBQq
4Obd0fMFBrs+OYTjvIztO42Sm5Sxz5djYoEnzHQ9woxe8LHxBj3TA89y2aOOJhqUjCq1tI7DhOe3
aZcTlJCIE/1ivuKbOdj0m55YEteFMWrGYMi2sOIaq3EJJq7bu3/fJz3NZbHTPW5TNfE+cS/QJUyI
11oE3Lm4lM8g6w47qj9xJHE4TTvHJ9AeWB1xKIg3eUvmLgdionVCp1NkCZK/0akKrPolChkNrfG8
j0kUZOOwt7Giv6ohJcNbxHgCUKtcBh0eczfL2yV43KQQXBsYu2iL97hhB5b0hQZjcAJp9ZC6ilt8
InYydQm7d+U4y7MbpdkOVoDEB1U91pKur3BF9tA+jYYXdrbNgFH4Btu2cIIE/g/g1OSdeI7jKvMN
rxgwy0iPNXknfVpk3b3FvrTgNgkIS9YloljwsGSD73iu7QpAU8CVk26Rm5c33Sb7aBczRhrLrKO5
67zOqXtxhYKHvHRdMVfemXH1F0s9r75XdhHAounV+PbUV7IMQTn69B5nMkPcZY1L6yPGp/39W/l6
vMSX3gEhSChkbThJMRDXL3cAHEF0oRDMAKS2YN94DRdxPS5ESYnjN16dmTRRxk9+/CjXSncc7+RA
Tnc4O4iS1Shh+NVF5KHbS76SBWIikaBEyWI9RDAN2twOPiSGknZknNmBaz2c8cFBGP+ooCgWVkIA
/IJ/eeGssPRT9sTY1sfy1Dfk3Z0Jzoh5/eCxXctCHS9gwfBVXrGn5mrTsxziXH+x/YLxBZ+TBmjy
QkXdjbEpfpxisa4WSEzHtrbDQBbJxbS4T6pR2GgvWUgxPSTxr25/7nLu3B2Q+kRG4C//oG0LXO+x
/1cVUnra5BOq0xBHCQ0BbaDa+/FPzaasEPCTEpwW23jnI8BYly7DDgBRQLctnlySD+j1GBCOfHhW
fAH+AIztOsFJ7rVWhAuNcuUGEOpCZY8DmjiKv6KqoHIijPh9azfZNAKOULa8fxhVCXRJwJThZ1Oq
ybhIhdaGTO4BALXGThjy54ZRVmQjG2A2jcJLsAkqCQjdC1UCAAl1rbyH/ySkUMx+FsLuMs3BBCoy
03G+OyHbk/ESPdnpRKVJCRGCOz4FShQEm3T8XkpM63Dxg2jVktUzqGwnn23tl09XT9Pk571qwXOv
VtlS8C1zKdASWbWOs3F5tt2rqBbq/nFTtFLtmJOtzqphtIie4tus1c+WEyZMhkGXwcj1j85p6s0b
6dUSeU8S5kpCZGwiJFBRclD4jUGKb4Uhavj3ltBeMlL8iGiB1+q+vez0tzedSUcRUCChc1dAVvy2
bGJYl5yOuZIhZF8ww/8X0rpL3XbRiFVRGUPF39FIcmCaUwwcSAveZbcnnPCq+1njf64Lfqg6lyZZ
K/+f/PPziEt/BhlguzchdLVB87HJ/G/FQilprH+U6D1N4CoQIgoUcumVHoq2bsznHoRkaBogABl9
yv6iC+ppID1IBKW+AE6imt+q7pJrTSXgRr3s4sFkUrqBG+0euPIb/0kvrQUm2YPbssF/JpfK/Wr2
b7O5EOYLWx9mjC1seyRxXWBGT22aX+Z+jHS2g97FeP3SWBOAPGMNfDy/sET1Ip9hmEM6qnUqK5/m
x4R7ZlWI6CJmKstcBJzsfMQL4cGp1Ove2ta/TfZORo9GpzH6wdkyffC/2Kay/tTlndQjqyvkWrdp
gjhBb/9Y9jhOuhc9Lmn9q+CzY7LV2YVq89vou+fnMWCTiaDY9QQ+N7dzX2NJ8uyg/W52vBSJmqUI
DD1L4P88rqtItPWgzZgdLgMFeOLlqsThAG47hXv8z4V1tWMXzlaAom4bQJOny1MAiWnWKys9Uux2
PCVFSioNzuuBxqFjRhhBIX8JXvA7rNNZGUF6ZCfg3FZD5Cumz/OU0fPfTfll3/Ts6BY3FcG4M84W
d+vwJQ1XiUXXDQyaNtd3sD34uVg4yvqqJ4h+/k1w9uHHneXbgr9LTkcoUXaw64phSKlg7uZlMg1K
Iw+zeSq2udoPHOeoQLMiLR2Ux/Uex0h5tprnYw2cTArFMEPwgxxu+noChr7yvY6PuFpA4e8n5QWV
oXAWyWz6PC9ozevwZ38tXSZPeyYq9aI6ohGmkyLpS5sbOlUHj2WpBvlGJE8Hg5wrQwxeHT6duwEi
2/UU+iX4NvuYm0e24VN2fRmn4DApZ7HvXEBYecp3jROfASp2BvPhbIhmCiVwBGHFcVz4k91u+Ucs
MFGM75/SXGEMD5iUR1fyCJeUQTR9jJeRi28F68J1BRf1uUYwLBmF+JnxvGxNQB29YH3b72/qXWRl
HMD9JVxUr3pbrx8Ox/jDRPyZ8HeIQ2eWe0Qd01rMQ5zLvoeQ8S3XJ2L/8vig/H1R2CmsNqUZcGYz
vqGEouuU+yGgy3q4tMKL/CbGttNna98d9y2lGUEYiOHkQKELJEro2vVaBes8SKf4BWYNpRdRZ8GX
lEgND7SF+hJvJCVhRslB1EHvUCJDxieJIr+goEG5aR/l5EfskBzTTr8ZjW35qnqQlxOam3Is2EIu
dp9N41OyB3l1v2lWu6QGzPiXTj51b8xtsBJ/+caM6EbE8NJDW6sktHEqzrvDLiZjpPBRIiioJSPx
OMxXGJX0KgLR6w6yA2wV5RpuxC7+YyZtpLnO0Qh3+GO6M2RYW4YvQ9orCFwLuvgF5LtdYdW2Kzjg
6/w13ha1GVmcXqQbO+Q9w+dzpBCEA6zwM86u+BtoI3LQGxJslqDRG0opNuAflyWQWcrKClhzIRFN
eNIgGjWlJw5bj3Rh3O5WjJqBTLoJf5+Z+46Fae0lPp14+YQsZSzzcEPBp87u7e6Id+feeTNvbjX1
C87/2Ba230Oi5lLzYpSIj10PUbMmKFbuAlxgaoxC2IRxKi6cfRQBQv1G+WZyjwbKwpbYHvIZhieQ
9jAaKMZTukoFOXe7KlLCjDAvBDsrrtq+n4D3ZuvH+7iBc4cfUZgVngk5Zd1RqRMDiJmmwqLd78IQ
kIi02VV5eerX4+Pu+WTD4Jt8ibcHY+dB/0fDdaQyVw+8BWPlx5rnkGRh+qa1OyPpNHFhlcaUjL8W
aKCfVW7jYT24lxWcC5ZQ2+MTeLqNGaLFkG+PiKpYGy6ZtVzdaFfauEAgtUQgKpDdE/CAJ50yDBfy
MebZ+A13STE4XXsJG/gQYFw+xIOOoi7NwIs2QGodWEwSDRV7xW5/yYDirRNU4XEwiUqEqfL7tp54
/Diksgv33J17cr0P4NVCdocMrSCTJNCuACCptn3u4YmrPJdDY52ZlaIrOzZULBRx1j4T+Jr415hf
nsy0kxXEDJEUCo7RqEfi3WsaWxiqQXtsPeJS5E7AdAR2heWtW/zO9w7Cz3eeptnVnNqs9hObo1za
rYqXekeM4TpBiyrtIpFA6fpW92cIBFxi350tfjI50Y+6BL68x22ENbF3fHnIrSxe4n9Wlm2jsmDc
ENBRcy/sbbxLFkZ+HBPQkZZS2zDAKQQkih0X4I3O75XWRGJpF48lAspX2wa/w2YJ4+2oEtp9F95g
7KGT4qt3lNSiBxWZB/rlDFQvuqoDze0lnoQ1lsEIr7xJOn4ZGWETIxEEMpzQCaIjrg9o4Hi1hZRQ
zI3TVXozjKa8Tl0Ve5+AWI02etgpeNb4Ey/lsn9RSc3ARnG5HftMp5xoKlsWnx3cbSdDlrq+som1
ohhU/cdWFXJxe6c7MMy34LZvOsBuzUnPXyEmznaWxnMzN1KFbpftVsndeDDUCMuvmQfxgqg/u9Fc
eJZDZINn4Bmtd0iptVcHObIyZo6XkxBYuxFItNGHEnxlTtjtrCYtCQcEuVDJnqETE5e7eJXzhPuZ
atU2Q7ZbWI5JAbLqX9h3FVTiAc2T2n4P+OO2/y8XU1VsX4xFNXURK+X4vRpdwSQ1hASQtiBCwo6w
MorcsaXJwJ+GkAMCgGH53G4TAzTIe5kP68law0mXlcAScUwzQCHMNRO3mGxDsAM+yl8OkxkNn0Qy
FXmuUK73zxjZLnQ5jfOkXbUbk/EkZEham2z6gJFAeUNb8lzPDDTPppRjeicXc439YbA7+/MoaBKG
Ix5bkZN0/m/IbFJ8HvZ/EloqQYTscFayol8sq1oPgIBS/tXtdleCubTigpVwN1WBYitxbEwB8eLf
+NsKmXchORIF/HZz5kB5vvjKL1K49nSShsMVvNzdzk/aN3ei2d0VaMbEO4eW4z55Elg14gVi8TJv
Gjp7IsIyUzuvLlFhcQzXDVVkfN+e48PmiRmI4WoetN7yKYwq338CiGzLzj0X5upcU/gexVdjvjo7
FeAXQtjJDFdcCAPARasGmn8mQOak1Gw5Vzaiu46xTW8Pret7voykUSeQmFluq8BApipN8diilRoT
3p3gkdnmbLfJes7Iz6u2qS+cvDn0U3P2plGIBemLfR34xosPpzoFzwkMkoEGnntGokYQ8So1XR15
CzbEtFFvJ+X6GD9CdzKmYL92TaDH4xDZ40mdghZbbK0og9CZXAZpICps5DkqCdisocupc9P3yPqT
r1/KCFv6HgD/LnhxKCGasXvzwVhSQrM8uKvOP/4QWVzb5oV/Sam5X+v79VEA3VuB4C+bthcrDb6c
oUhRsVpwB0l7IbFxlGW6Zxs+drd+a52jcLbJVi57pZz3+LdgijljmkBw3tXMpW+IIGYCxRxv0TO6
/dTb4W8tLRct5wLYmrBFRgGvm0T12MJqf+jQB2MAxN6fJN5wLxdprYpue3fgE32at+Hp8WRb9b8h
whaTtWkUU3sQ80fnUW86OBngpxQ6Te+UIdR1qzuhDeN4blemLXNbcmCoCjDorA4kggt5o2RRKhG8
62DehNxtF3Wro7/EyyXVs9sV8i0Cg41jcZlQjgtFjWWOb1+wOx0X4ApkiHpvv5yYaF8h3scIgvrH
m5s+cHuRxPbquWXFd0j8rlNpPInwbXRQ5Dg6SJnsW3P0ONBW2PWU/8pl1SBYa2/u5ubqTaLo9qy0
40hBCgRY2egNAeSZHhZEmVXD1VK5zmw/lua+BRFSQWS4beW0HN35/cfMfwAhfyFefwoB5Pn3Id9o
5DrDVaMw/4xYgCVGoPSTwkSKlav8iAnU6YxpdAuSggMX6l05jaTeca3M8I6ca7lCMAmRi27s18yF
AeYBYO8tEojCbal4WcpoF91lGjYbKhQtttzy+3zhloAOamvtLF4jESXYo92OFEFxcVJe+sWgyR5T
USD4xraxRU9Rf3xoYjQkqOuMJqMLLlDJQdAgZRf75qxl8Jotsy1Iqs9NvX5AAcXX6zKpsulgIHZI
L43nguhx5SxTbxftWBNZJyK63klfCfs5kQl9FARuK9QCC0TENtiUr2Cql8xat/yIBVilnrtvPMZh
37wEM/PeXztxAD6sKhFh5oztF2Dn6Z/44oWXomxs6b7jD3y/6k257HW/igzMLwftxleAbFtpd4oc
ZDltgFCFfb5by4e4SI1oWRPjbQLxE7pHWKJtN9qXfLxiy/xw0/cMpTVG6fn5ITBzAZtyjnXg2o6s
9rXlt4Oy+gQKiHGetKrYPVmVxJ308XRMBYueOTmO6OqOfAex87oKtaEyCyJytEQsP8XB9Fw5ZGrn
l+fFL2Kp/icb9qSsuiE2Gi8LFOkDS8AqURwBNpwtJ16vmjq0sfKUfEWR/7utSca1ES2osRafoYts
JbG7MGLYRgsPK4hRlCuZTD6gd4/iP/H3yZ3xLDkyLsG8VwBTA2BRGdGpxZHCa2rf4vCjn7LHqN02
HEjaqkpr94ytI7KwuUu5L7Th6AtQq3QygZq7dkt+qFTKQqT2e43dGopL+vNpx/iqoWf4V7Y4qDpA
8FQHXhRSrdtZCoZr5lZAcrHdwAgYl0ct62jbffvk5hh+WdpbaE6b3v7Y3Ivpp+V96I/cN0D/jP8C
2DWAZ1b21dxW8jSSPL74S3gcy8sJYhQdH4+x7650CnsFa/qQfVffbuv+Cm6LiMYlpd8CLcPwcyRC
a75HJM7pRgb/Cps4SkzmTjG7LoWI6cXC+lvsxRJehfcxdyh2w/P6MxDZdHhfY1YVZhOjqjt4v4bD
bhflloIfxJECToNaDpND6DBgAatjY7LsHcTDOxr+cJ5Esa3cC0bYQ/c8IDjHSWFzUKisaB7IsFvy
8FfkRVWq4UA8KlbJVnytbeqot5/netqSwv+RaDMJPcDKhFTGS2lY170tqDGVgcQAMK8FvilFAV3e
4PiuTPxMr7GSrOzwRMhDDljDqaQb/5wHnGx3dZCs+inuEy1MV9MBeLzcCGsmt3jRXPdQiymT0G7A
VttkQMeeGSzlwPGInN+XXF0FbL/NoxooMdxaWtzS70q1ZmlUKznId27EVaalKGfWJKZVQyrplm3w
uibTlVojE1Q+LKnAs+Fhvq14rZP1AoaMreNbGsPs/WSGggmHt4XLIqpMNw2AzNL0dreb18b79m/x
atdhmppqyI3g7qwKFo8YHR44YLnkJfCIa63yKoJoi2f00M2yi0DZY/83M+kg1M+w4XmuRYAYgNmM
ybFpGOzqWHJ9KoCdeEoI6GHgyAv9VqgsTRcozvzUv3o1W8+BriMjHJU/QjdAiR2zwU3Gk3pUR2Gx
VRKR/RVmWlIAsaMf/eFe9o1yPpjlYIvWBHNNsfrzA6ewo3WBH8uMjXHyZGPTYNHhS3idM4BAEZeP
WUii2rZiTkwv+y7HrH6r3RZZtYZ+/QU5EvKuzSEq8s5olKYvKUaMSQRr804zALCQCu4O/e1EhTUN
6GNPIMV54xURsFjzlC6z86WL/ILOnzw4bFepnf0fIzyBLc70a6gCta5sc/mm7Wo0SsKvN3KSDf1J
v4Vu+9yNz6aPm/eoC+u6whVkM+A88drSzWuyMrLGEk1g1o8hJ9I3ccNvWcWrvUC6peAjUfGi9LHU
+ZzUDOaiPJhIIUFd1ArqbPa9bd6kVE8QfjUs/JXrGygl3OAHDO87Q4FfjaDcupjA5TuEDThZr44a
I/FdCUKefWJA+IZc/gUlnvyLEmJOaHVm6dreMf9KK9jwun8oZM9dy2JB6bYZ/8xW30QvK8ysZlJt
p9U2DRVrsEbYZ7Xk0NrqSFyqRUdEaPlSfTBLgBVUzxnIhm2RyF28RBX/ycwoj4l+VOPBM/u4Upqz
uOyHHhTA9t5DMqWyirCRKBYLgwX+k1EFIDbpoemXMnDjM3o/Dfg9bZGofWBq4ENj0J6ojq7/zzHn
+8XM4/VaPbrPVe57O/6G2OqHVuAgJzCHAHxIsoxQuzjx5Dx5a8dEUskH8oIVoFCxArjoZnTemS8T
DZMOumcJjygQ9IxmxjlDoF3UXgJE4NjrNEzhX8qT2TpBdxvgKsGoSwu/pD2qEqH2yAEsaO4eOI2+
V7rrCGlKAuvIrIfFH/cms3rdaaP0jtPROn+XPx/F8oHkxrByo7WxAv/916AkAu75tIEUHYY3bY/U
wyKJbNRBNJilwLyzu/5kSVo4C8W0KzGFSmVkxaTE8Tvqoow/x5AeNmDyEqgkJejY+k9oOaRWKcnW
Oix6zSwvlpUibU9LYVf/OeshB9OIjEAt6YAXhnWPW9xpuAreRR0pdeNy2a5+32QhPaoJTeFrsKa0
mXhwnicrrVSLflW7XAkftA29+Uw9gu3Q8Gl3ek5S2Qepedg3OF9qSemdT/o51DkfvB2pX4jfMeXH
fa+4mqiqLC//0p6puvgrPInn7KutX900gt3Nox8q5lMIJOLOIaBTVP5Egl8dQ+LCt31ACrUkKHhj
w+r7m509AUbVH7RTYU8/5BWf+eGOMU6KJwwyYmoqf7FyeRsmKkrVJjKbTtyTCq9ESsO2lTmWTzW3
eARLRaWayzXyyJO4dKFW7lSuxFfUnj9YeevQtUr17zgT4MCnxq3B1pBu3+oxPFrJiieKL1SeFE38
IfG1wNA7I+rVvuwwsfEfeL278gsQ5nadzl1WbBxefZ1RjvQxguhC/gorsg20y719wxZWNnYQwcgl
Xpr+Wh37TU4u6xgyitpScKaOVWHzQZZLZDKAhAHuRr9V3NRBTsknRYZ8V7LiGI103B88buSEQTNu
ic0IWPPwDqIgf2B9I4bzixdS4E3yS6Hq99+uL5+eniiNi4/czQwaBWK0nmedDob8ECKBrBe0fNeX
xekpoHk7i3y4EX5ra5679luOHGdDJSaxzLETybUp6aPOes8BTl+BoVXAPnUfO6BDLVYsuqZ1Fr8+
/c2uAiZY7MMDy5pNRUyqTFOrNR0t/YGkkfJpubNhzD/r2G212SfXbPBqRbZaexAgjhCi9r41p3wU
Ql5MUqWga50PPAb7p6E1TW5DPIfKJQQQMyxiMJc1WKminboIZ9YDQ5JOGqu69rVPHx4oNBKgvrVr
BTQ/W1JVdWtCA6sQL1uOYul4OAtbh1t2Tou0/h1ye7EyaooMfkAwh9ZDWJ9AuzKsK1w6higJKaIY
eFSz6gE184dlxWusC3oIMkv5MSA2oLIM1WwVgnfx4H93Q1IdKZKv84MN1tEFVLAH9+9ex3Ekgzir
1u4FYbG5GKoguejkVYeV+55h0Ph6qTJCqfTA7pqJKWKjNSfId4Xa8g1ajZ0e4ZfPWN4dEShQIcb2
3L4AaTBHEQdYsDAlw1IxNu+2w3J/hHwFvFmbIZtDSXaoskNWFbv55+Wn8/Up0RoKSyrLrXR0Mkbs
7/DfJlUYtoZzeecTHFUGMNAvg7JMZfSATtePJDJdf0g9kcK/J1ldY4xJhGcijCCxLAVEqeXcVX9H
OvqNLNU8AQuQ/TiXY8QcFq8NIrZAF6Tl3RJCkQGWLF9JkdS6Vn8CPG1hGTix6ieJLRR6flEqhpHt
mZkS8BBvkB/WNjbb6mJ8YXH1aKpcpI9LImMwwxVC3iZpkXYrxBO/WSXNNKsTFEW4EVOyZHnALD18
GSOu5pNSE5Xyd+9neKCfk2AK+wV3iXQ7th9JIW7O9IfQVlv3Sz89wl7/TtTHW6Y1wcqycPUEJRx0
0WSFTGdTHUF3zVuG9xDUH0Qixc/oatzG8Op3TdgQoS2KkkTeo9foLZTL5CBW7mOkiV/EGpRssGFx
/oyYie1lG54Gp+0RR2C2LqkJGMYfnX19nz5cZ+PZg+Fm8STECNr2rRZ0LCqUnEqgMjaffZm/59BC
W2gT5JNJlOYXDS9RIu6n9+yivr11APA6HX/S8FaNSxaOw/08nwmZ3aYGoR/TpfFcPV/PNigSC0xN
lnCWWOLKFw+nd2StzuY+2s7WAb2f1cJk/a3C04pJhdq4SfXCM6wUxcWXyTAlcaIbjE8NdfYP7Ar/
TmYyJ6DRke+3NN46SReq2triA+dwtx5g2/LtiHfS+GO+CmGBoC25H1SGKZuWcB4G81CkzheBMzGX
JLDvrBpoi8XQq08dztA15M2z0SdH1D/q+IUjzuGj1WQHFoUGuz2PbTjEX+n51QEdV1kEChV3ixoE
qEOPsM46LGeNZDnJCN35+6O34ZUMsne/WG+MMQZOCi41g/Hqc069vRlvFpBHs6EsXMUdNYpTbMID
yeAbSUt3OXUqfTeptE1Ox9WAe2NyOQvgzvwasdatpfQUiB2K4T/FQ1komtMQH1pc1VnczXJPDU9D
Bjz/C7TozWpuxkp8bBehZYFR52EhRE+kRb457eiX0j4epdiXC7/Eza66S7lh54b/5iJ8H1VbSsU5
2K4jmlEmrlcP1qsmqX0OJ53dTpcjkEKFclqF0FPTK5HUKD8rroVLMWx7FsL2boChP6PPllci5LbK
jEAXfK9XacQe6y5kELuOBKujCD7AK2z0ebZ1bqzh/NVA3Rmjm6Jg1mc2+KlS+uyaHLpFcMdXj838
BC58zeUbFUgM5KShaIj3AARGgpQgY479sKy5WOnuCqOs+SgVlppyRrJSPRcSXu/4rWIltJKS7+Rv
v3kOkY6dzm+xxWEWTYMGva9dUtfwMNOTukuq8DW5cRi1A8l62iHlX4W6E+pnSKTuyLerVQEeXx9A
v1FuVwaKXNmdSBmxq8gWYQ9MeQEd0UAtL50tgU8IcNA80ZOq+x39B174ygXmujj2o4kujeU3n/E+
mcqSj/Z6iKVtuOXPM5tnX2+brWw5SG/m0W46j4tzmeW3LTsSv5YNECWjaWVy0fG3rtG+pO6QXpXn
0HMZeYNkA1Scd1k4IL5A+MXuzOKcagx2W4Pr53NLxXwYr24XwFbVHgCwuJxk7l6FTBQSwXDIrEwu
nQsGyDLopp6kkHOa56iMsMaB9IWHao+Bc/nmMKm1Esmb9y62ReLetsnTkd6CNcolgU3VyvXPqu53
GENaS4y+4ukY92apbDp9aHQ5HoiJYLwJzY1rwGNKdr6uxRD1vSnHOJjarsZFkkQhgWURtKfA70+t
QqDBVEraaahVOBbKKBsMOpT0nI43bGrE2cEd8PZ5tFSTszPxTubbOC5lnuHU0FClyFudU3ILbM6W
142ART+tYP4wmIjYzpYfOoivFrl43Y0sw32j0kpvpNx0OPsMA/wLyrG2U2IywgIJ1SJG7LCtXL31
l//pGNhIwurq5GNfC0i8E/I/CT9cNrT9mA5emR8lnzsX/6Yy6h+YdUgcYzJa1/CQouMirqhvcaRX
fx84t/MYBfTBrYkJXzo4H/exf81CpLja0PfM1ada0kbomBclQCQOU0KIKsZvCIAZJknE8/Q4JO87
1UKg3k1mXE2d6cu1ir/j/nJWKQf6KNV5tqo8wzXHhq7uXhFVVTV+etfqF8RxTcvAGB7IKVEWLtPh
5mmjjn0HGI1nkVePJwsEOozagiU2nyPY6Q7ks8xrXh8KeiDc9cJKzSsTtL/QqZKcvgKLOaopHf4k
B4RGCfVc3o1Chuc8kseyjVZde30pkNETqkQeV09fnJo0uBOEkbqZ47UFdTR9ENK23l/sjdV2YFoJ
ptuHeLov7YyElYWAdFHXJug2G2lKFs4Z9f23E93BwHyjGmE2qHdiLIhqfixo4mL0YE0wuOO+UjwO
vBx0bw8wqlQRBnj3Pnb9OAm2Mh1J3qo+45oJNef4w3LllBeI09SRgOTWwlflt1bxSdf35IOf8wMF
P88LoyaUs0TignIpTtk3C+cIsoFy35D68311XJAIW66ht5d0DngU7o0TLE5wRnF2oFl8pA2xmAEw
qW9gCVujrxHkXCTz9NFwxz5oIM9m+Tt1TMMrhVfi3jcuxMXOJGkv/ZSgXpoOpUEqGHhLbor3hlOj
fRg5B2HI4+3VApx5vQSaI4aemhOgcuZAUNPoe+Zizvy1liJ8JFnuMNZyxFnsaFOwBcJH1JckAGnA
VIdJPIehDZVvAljkt/0NzP+a4C8dVRIVqwwlT0IfD8IO9XnxZSmN13K8lZx8BA7ktoaLXaGePCcT
ZlQX+XaPJB5ESLOkTfSI8XdbsCXn5M6dTY8NiJYUDU8bpWJ1aahHXg72mvDA/Jw/6+SsShwJhYom
iCSm1QzIj2eSyIkR93h26RR/b3QZkvmqX1eFo5CiEX39otFvHTl9hZqYoGRmmr8Z4GCBUc9aC0O2
dKCxtH1Hhehv27geUyZarzDm0bgq2tZJ+172cekajwZUJN5eu+DifupRdqWpg6+smgG6/H+rTriO
DUXorc6otlz6OwC45LzEg9nrWOeDZn7VSBvBC1SToCGxjr+FgKbMOR2FqGMtq59bKU2c0Ccu4Zs4
Q0a6ApOI7KZQNuBiYROBm4x9aGcj8XdTAXT1tSRcNTsqtAgnarzMBlW/FzMw+k+D5F4HyK4JUNAa
1IzFuWFuzaiEmuxj1ZOl43rTUcY4bFF1qOhzsZrOs24Tk7mO26EPgto2BdEACMnG9QTFNqrziUbo
Aak80TxQwXqZBRK8kDutz6zkdRMFGV/NdU6E2KtdKPX5Dh4+3fXmJdA4UvPQWIMvh53BfqV0HFDl
gU2rRoDgjOBumTrhCPzJo9idPPw2gDNpKCIZjKvo47FST7+FnBRbvwtPo7S5uNtywMbiOMZk1T32
+We8BXQMTHptm0vwPr0YCGRWE5vHIvVFQ057t98FrH8eWIHY7ajXR+LT/kd9eydHyXUWrki+bRZ+
qVHVYIxh8dsONoEDXLLQHsm04jffHmQEaRM3ibLHXoAdyG4MlnoWy8C7L8YDRFP3oUzY/NXYQw7d
bsIHfy+SFOW5Hh4DvflsrQ752+22mALcisFSNF2O6IpCUHBfxKVPMBHIHDIeQRLabtN9WxsiE9o1
ElbwTfjavv93UeQIOrzzeiLo/h/8fKwQJH7Rs8TY7ICcRKoiH3qDXKOpITzqQdI5n//Wor0tVHZl
EG6q/P2X9GqbdjMibF7UsGNaw7ESogSakJXeIryR4qiJPNOYvIqVVzTVkRvg37zdaX3ZZKozhYXY
OT0XHJNt1c/fOiFY6noiUN1MNbmHb48cTR4wBgpzlBKgTJZuFF9EqkKTTBNxiUw3anT8cGV9Z3wB
Cw8vV77M9x5+0P7RDf3owFOcizCufR6/vX7x6Q5FIuM5cTNv8YILjRi98jQ1kp8HeQcrLByGqd5a
xrBSQm1NPFWCiwLW1mKXaBIcSiMMf8a2sJUPPakIwGuatbLjKg8u1qv9tcggUwYSOuEVH5e9RFKn
qU2w6TF00DkfyCZeAepn7qfVPL8jn4ZPBh/yeRuwwSKRyjAlJU7uYi43TJGQ9W2RhY0FwQ/sUglP
E3DwF/p/6k975P/z5JCxcfOQQ4HuQRhOFvaDyCgSqviMfNJwz1oSQAcr1pnMa+C9UQLtFocTmr7b
kVJ6DJ0EgGbUaNsguUlbSA48f3ksaFQZraMnGxrWA4Tqv8HIbWfU/2eD4/mCqIG7AkEl5L/GvFcY
FWOxm1/JsZA6n3S9cHCvKJKuvhbRlcqpjuqfOT+/qe6rXRVJU7VYaPFG52wsXgAmDoENPr0xDpei
wM73lNWA4LQCASofWj72D3rIwBw2mHj4llFaX8g0spKiiq+wJ0h2/bRDBMl6Cb0jNUsIX1h4ZMcf
iwSX6JpQT/TsAN98A/XyHEzLkEdmkdRST6BUmzoVdOXyAodTABoG9pgAQg3u0JwFodCoEc/GrWWS
cc1Gl4vuVO5xoULNAj/nAVoZDHjDNURZqj7DK6RQyr9vuHdWcOxMyYejZTNUhuNLSjj6v8g0G8jH
PgB2V/lla6uavlsL6bwC0D5c2OVQVKK/iXmUyKmL1o2GG6jl8GhpCVCl0nyzfiT9hgg+k/tRSYof
i7jZ8B1L31aOFzbMmIrQPPXDi3kqdZYpKKAOuKMQRDlvWItI1Y7Qpwl1DbfEIYqMDezRb81aEdDo
uCMQSvuIwPrsirqDDUnZhI/FVr1udhWQj0Fv5hzZ1ZPMuWjL8KxVEqcdkg9UU5gTkQG0NJ5Rw9Xx
7MRFZjiPtC/D+K+XVaN4DI/H/1v97Avq/JB9sGMIwi8VyWn7QfPh5yYjVuPkiPdKX4r8JhqcKmNj
gq5hA/C/WQzOkSU7tTBIyYE4XvpczK+SMG0rewVLePFJpJ7LpdYFPE3NfHpUgZ8pEvckPDMy6rdv
7AW69TDfgC0i6v7wVsm2lP0/+pLdxG5gqqBZKY94s2MtHo9juhnoN+HwI1APPPckTzw5wvH9QNOK
AZaj4l5GQ0ygXe5t/6yEmnSBLhBNH9OE8fwNCCoMoU80SC5ffUoL8DmalN+bwfLyLF8AEiZBEA7R
/JaV6Aj424eUom/N1CaiXPQeWuuy8oZoHtvSJI0qABY3rWN4aw5sO6etMx8RkCePgSMOIkeqrDCR
ORLHwfGASfbkaPcHdKRjvZYhnTIx8i4nQx2T6TfEXMnU/tCMPw4TXn9F/qLE6w9PY7oCw7n6Bpm3
pRIIZYl8bt/IZH03Sx6OciVmbxRMG/TxQzPIVigeX44s7QzIFR16TPtWvgjdpwyKwjXBtFGfrpki
++E2YeaNEQjWqSg+0Ce7o9MWez9xqbprMZR+CrnVbXEuLoRd1tziYj6KlxXPIXdBxcWw7H5isOu+
7hYkG4SPTFToZqD2ERBDouAbI7nscZ2lRAEYqLTpQsCAbV45DtZ08H6M3kepjAkB/d72gmmUu1wm
T+p67S7TnQ7/sD233lbc4YGCXoGmSwh2RNlmRSeCW1mtvGyurplLrrDPwHBvz1HrKSqDRVl6ygRv
4FT/HlREf44wzgqJs4rYcBqXtcZrVt1NWPPzYQejpwtM1m10sOB4rWymSKKaX1oudxVXGdcknDOI
5+drwCZUHyf5BnbQK1MQlrgIVch6MTjJ7QjOoaA1DH8k8wHiBJFEbP+qbmkS25JanxOCT3My6vsv
kWsYb9Kg69QojQS3M/BFsJrvkeBYZ/HHUgDF9vVG6O7c3B4GCma+nA1hmJhPNHaYiAWVIo9d3Un6
x+XF23YbvzT09tcfbUhNWpYTw96nKfYFo1VQ78uhf/PyhwgXirazlF8uuJyjRcSibqFYsIfiKu94
jadHbHOhLZrpsX5kPaXoD+Qb8O8pfAeL2Y1yYjlFJ1kXXH9v5wTH9O39zGNzuzSJOPX2TneBRhIz
39g5rT/5wdZlYO/PYWW0BYZQO6kYTIDvlJHc0ZIg5cj86sWadcEn4TWq+lrdap5ITUWfj9pUUpxy
/MpLwakbkPBusz9nR3P+ZEaHFWROn+I5EDno1i2hKw01vOQl5XUpg3k+EQD8ZqXzViLKDmutHZ9/
AR7lYMiD/CG6Gc/U4eQYn4IpEcP7ql52URj3EoISa85s7e4FBVIK9CQn5CLZiygIEvoIHiMX1AK2
Sal3oztcTtppXvNkP61SV6ILh+pGLrzqDF5VDKbGdXX1q84vWseLqjl5HqI+GxvvOMifN+lPQCH2
VYFJkGXgav/kSKbcjymhfPJs7lGfH8X6UBMofH0l8ixqM2FTVhSqAyiow4mHy9WeNHrpqQg9MVDW
ebk9t8vLw4QVEUKL1TKwPVxBs+A4ZznJuOFqBPtL3TLkrdkg5wfoYzJZhLuUuzoU6fSLKSaWtkwm
u+d6atDmIPPuWP2iwOoaB6Kx6+I8ANfHNgW+sX4Q37EvYaSYbgItd/Dw1LSekJ+AI6zs+j2f5Ees
tMyeG3DrBkwp3j4iLUsflO5Y5wYgBfiK53B1u2NvRh68q93NEQnzaJAFEhrzmFAbOwt7xYcyK1A4
3Tj0WPidrtXFKc6JhoCCVbEc9RZux13qJy8yFuKVCbYq1NaOgMVz2g7phzMlFsc9Qdy4tyMOctx7
/OMfyOOLDhUpCtwQYnV/qnJ3bECjvcdtf312svKVxpeYpROEMbRqAtfNnyK3r5qPJc/q2PlPQM1D
+BX8BhReYdS/W/TRVmrJ9YqPBmLr8k6iFNyLWaBIKZ7KsEpKHgR6kboJ60j/zeu4jODalSDdgw7C
MM2VkoAlh+wCQMmknMg0sVfr5CXS+gSsN7wqi/u6vqT/XaY74lVGXrBTYfqp/uWiJwHIkcD+GS8f
emWZ3NfzJrjnW79cFdajk7tLssqjR8vXl5pnqvQ/ueugk7QSZxkse/Z/jKARi/dM3ncgrM9vS1Ni
TDkheDtyK95wXmoW9b7FWaBO2Co386XFYrcUWiSh3/ufTBH06OuDVlVCmbX/LI7Py4Bbycaf1s7I
hxxL3noEXCC3MEBCDgsfcvdUmFrQaDN9uSmT8nHstQLcF4IULmFGeJqGYVwL0+jF/nxXMDJ9Rbav
t7UvGj3PWKsmMgrbo6ZHJtgdE/Tm8CIuwkQe8zirf7eWiKLtmLHcWpAf+x/L3bgc52ngwEtB0pP0
th1JyaRba9qN60ZiKY6ch09UNf//smTxA56MnNLt0T22scMSDjrJAsdtkShxz5xD3uYSp+ijDa0x
5sFXOcA4V6Juyodax/pelAOOnxQ0Ylw94cgl1z3u/iCYqArA6VVkWRojy7CUAGqCLOKZC+vrFHcI
/fNjDDRTXnNMVQx5hFKuykmgtZ45iNZ59EATs3ieybvZta5xx4bvi5iSceeE02y8Z0oRay8R5efO
e/RARAvL06fGD52hWNMMjYCquhp3aoFldHciOgxs/V8OlbwQeo+CWu10ZajqlVoXzF0dUqaYD8A1
koH0uYz4sB3Gm3XsWg5OdJcu5jxxuAZHFnLpN8yMSmWdlFnYjGwrV9C4BokH2tvs/Q4erSXH+ZIU
GLgkcQsNXZmVii/2RSBW86r4vg4HLyFKSmslcnhIr35+3JQgLSYc+/h9tEnejg05kMufYZHG6Mrj
Z+jkzwGU+GRmrogwDyAp9IZljF+++weO+wZItvKG4QFm7iu6ZfDjWL5oGaBGuaoqHAQjbBtCmqKW
suGwHWf71dO7Rf+kvPcsDdbpN8AXiHzv1t5wJQ6PAWP63KprZz6uSgdqv4zVPo/IdiLiTNpqaRvt
xwNqso9rPfwOFuHvxEZefYnK1b1oUBUE17RDrZIbX5a2+FYhSAZseQ4HYkttImgcSK/cyHMDMPPG
aulxRkTRyDz2VxBEzVcj8JUEAB43so7/QcBOY5D4oYisHhqyYT1GL8ZVarGH0CF04fOlmdYgHf3p
QDXfpvNr4T4+6cPdtMAQ202mFTbr03dypWWzW/5k3gSwA8pJn0roaronbDGbr4z/fXzoaBwqkIUD
/Eiir6H6/1g8c8eG8LGrTYD9G4FpV0sBZyWsKWdZF6vGgZGgtebpXXKBr3iZlqR44zan4Xs80p13
Ku2dG6up816io8xQyL5Ql/QSiXcy1HkWbaIv8VsZwGkR2W60mYfedimAs4HK9qcQvMTse+P0Mdty
fzrkLxphCR+flZR8UNKbaNif4iWjM+6lnvpMU9q5OH8H5rkXpMzhWs+53bKNoRfAEkvqgWD04AfC
DZdGj9W06mnSsuv79mQMy7Zui8qOUp1FLX31JSJ0oCcLEYJlgSxptXmFNCOH+jFR7QUb7+13mbK2
SCfuKHeUsc85pTe0EAwXCygsC8hFzkKicpvwjhJNmQs89mZeGwrj92jH4ncAUEv15NdK1e2Pi+1F
WLl1K3hVvdoADm7K7bVQvFyz1hNVB9cYxgtRYrsTWBQYNZXCvjgbz3f7VzMlVmLv6HLeaATZVu5M
8ll6yMTDNOq8rvHSR72GePtVijVsvN/VYjTLfhI9bOVNUsHpDNXRQ9RNpEnG9enTB/qRh6lm9fiK
wYe0oc4xNDGHX+GbDTkXGT67usUxKykuHT/GH9Y33IEArhkKaVnCpJCP+0/TCiSztUkXXtAWSuyM
9vPg18gFU84Dbh0ya8VEDN/b2MXL9Y+n5Mb9N91n22cUTkdNhMsXK80o+NglYL135HhcfLhOjCH2
V4H3361t9N2J89VJAeN2wIxkAHj3bZsCHaI2O4phR55wu1NEkOgDDSS3T2jVAqPGwHtpVs2il2rs
tFepXHxhzNSatsU1juPfMjImK/OBtpq2Ecz1jK9lPHpiNafs51he9oWUOb+kuTUKbpC4RcA5JZ5l
4b6cYcy6lzwGTvzo06dsYw+AgdqYBa0MKgL9QzEVod4DsGPCrQfZ1eQdo5aWKn5t2YzpE/j5rP7V
kSefkGdG/zQay2w+OmldK1fkuKpQ2pVvSuXohOGxYujxM24h++CfDp6WTYC33jkL08wJeenu+V7K
dPnl3OJEHA0TSmMJ+ddufpsklJRnfreotOlqjLUIHOxNz/Xka6Ejk6zRB8P3L8lDAgZZr5tbhVW3
nluSB5xggNwMANU54X0ilBRcQe12VkecHoOV8fDaMU3Cku97I2YUmSj6KQduIy/RabTDq7Xr7bpE
yq63t57JpFjI7gQipiksMB1hFRUnH0Za2H5xF5NXukwmc4Kmv2WAYrs/J/hd2q3JZNK1HNU5AlDx
JWdSJ79litjlEsCroFbMj5+jUY1iZ6qVmPwfgMPInr6Hdw6PcLQXHSAnx3AhiFcgUXM0llhu4Exo
p+ZXHBC6mb2Lmfe3FwfnnHQxenr43egLYWKHPQxhQYW3U2LGEk2+dl+Pl2Waz/VhjxKwsGv642XY
2FE3t7flUJmFS1rIEWT+VBdL7lfxOLJq0IRrW8/xweqpcAUyrXsoTW+6/JBy2n2mSf1MpDg7UoTw
9DCJFMG1nztb0XXC46/M4eE6OQLjPbcmMVhG8uhyrZyT0R2nM2hmiCw/hRruuIxdUONQNn8sTuld
q5kWPt69/T1tGVaCtPZmm/9mg2TKOZQEVjeznzXSWV0BKALap/pKhNEC60/6lFlNcDSdANqsZ6G8
Dp5FSx3ufEFwsPzXVsOBUI9pqwrOKePKevqJ9/Uki1jRRIP/Zm1i35JRWxcqvkX8/48/dGyAO5oV
GGesoru+5RJL8lr49VMvBAehBS8u9crkejrbs+xjI1JyNWBacmL9fnKF9ig3FrVCW59VZEZgPG8B
6EUP36kJk2Xe/nlve178twS0RtlY1X8a2vHYutA/9zlwAp8op/BALtR5ypW+1zzPY7SlC7jQaJG6
+FfvuM95ycURFjpNGs/JM2VINse3VKVkx8KsxGQYyJIxFDbhhFzEc97txJneKLef0EpGZDBwWY6N
4BOwrivwC5RLmf3K6NoeysYhFV1emeCrlkam3JgzrZSKHbGLGLwEWbXCqqV64DcRKj9SA8IHqgpT
7L3JwDNUvjeLLvMz923+LYIaK3eURbdYQuyeZVfrScFk3IDROd5CZu1xYuwxrTlJFgdyx9EAnyyE
h9FFLbwpj+tLCdFQR1JjD1bEnp/3AzjhAJqZCy09+G+Ntl4iw946Fw7v8c8nXwT+7/Dr0z+4rxV9
fZx5JFiWt3xL4K3j4J1uXl3Tb6UmeOmTO2QjCUPM6VuG8ybPiw1YbJuIm4+W6Uaul3TbR0ziJNpv
jeDwWgO9OV/Si3cJAuqeF02fyY8+uSw0JMatVZpqrmJPofE0XzbtMUdeLFf45UOE+mnkmTxHExSh
sdFNpYT72fuhUuIJ63GIr39roFdjgStzLxx8TvyTPDI6BTS1/ZRx+FN4KYBzSVV5ERHq0eGn/PRq
ED9C6EBibJl4/WQ+YSl2wOYMi7jt2iJ9HKC0XTg0Y4uUzlGPgLKInZXw+YE/MhGLBSH5Msoec74T
QWGM9H4kWC1egdaAx7VG5CpaiQwCmkYjQcsHaAXUIbLsqOwQzzmWFwL8QQNLkhZNJGs6ttkDVRuK
wu2gSJXmSOvojHFaRHbAkQXBTaKSHBspbYCpcVk4sg/RUxa+6xsHaliXgOweYy5TfIRv9x91WvfW
qYfQnJJqaD29DUP7/sdxJB0ng6RWOC7SbbTrWURUt+OD/hoOv5tO8Ed6S8TM9c0iBHhj4tTT7iG7
z/g4e9EYY/WbCu3NUqj/1gP+LcF3W/IpZDoeQaRmjR8H49yTAZBmMjyE2CIDQWbi7XL2Rkxuuw+8
P0XoepbkDrDHjgteY8jDY8s4Z40ApshBukJLllfdwaw2OE0sMJG1NOTwLgkYUS6J0t/HaYe5+EEq
J5wA0oskwPZOKQeHlCjcaYrhSoTadRQQ8TMF3Vm870EYsBmwlbWsU3HguQL92CgiVerD4y257i8h
LF3qZnUGRwbRAE75aaO4l7oQw0bYUrotwh+fHEjmIB371ozrpb3vgFa8ldsHr7N0/o1NkbNq7PQJ
pD/EZ+w7iSWox2pMvdXh2D6kwXPW1IXkKtQzx3RpXVNKXEu1zGgT3N4nkQVitiP7SZNPgHoGBVI8
9B4ttVYDksVLtQb7Uqv/hDNxBHCi29aD02RSQPIJbPIQCIA4UdkV1F78K3UV4h24K1YDUPTf2Tel
BYsGgvaBYquZ8k6juTChZ6D0Wjo9Zfzye5Tyh4LM0JlpR4l2+ADo+9kBsoNjYO925lEwA6CkCgZE
6PqxnTb0hAFAk06Q1TnkLCqF6KlC+LcYFWm0OGLqtH5eGSkLor8Xn7J90lAINbUX7E2/MDQN+LsK
+mHC62CK09Pex04ITnbF34z1mj7xDBXc6Kinn0OrxNm/yrCl5RgAf4bvWoi9FErgSZ7R03tibuTQ
v63IVcnXad2I7cpnp4y86XA5WwuymlMYnCF1iLc2nDmamnTjCNDxhSDRDwcsj8bFJYV4WPGIFryA
Jb6Qo5mN2XUHAwU2pF7pheSqJAlI4XG8uLcvb3wzJwGkZyzxsZc1raFaMyatqfDFlls9X0oNf+PR
p/eVq64YS35DEDk4O5DCQGNNaD2Ev3ANP2ygw3rloYPWe6aG9apu1Gt6sEs8057LL2CGOFYsM0JT
evPnl53rbo6m8TnImmdNwKC1shVKJAgNeN3VPdrDufpbb/rYq+T/IUixD8VhjvpQcPzEyq0/RlBA
Pj6vjjcy2CA2LwlvFrx9xUfouhTeTTUfIuDj6MwnerIrSqHCxaWCdmOpgFoA/iaFbsTGQgHjhg2C
hcDRfh698B1j5mFQ4clJCHtfbYkUiZsN9iva1wLQ9yiwnahix1I9ypv+91f+Vl/ldt3CaVethhqK
BDkeIxB0Z1kWD/OsPCdtJFe7jIAvLzQfRJ2dWCOTes5SS8cWr27C6K/k8Onx7pK6KdJTjveVc908
UbGHsqJrJ4V8NeRAcTea+YGYsTizp1SB1pE1yRp6JVlgjtWYsvRVmKro/5AU9mdhfQVs8UpTItTT
Y8ewUCcaz46ZEk2H+HBO198Jms9WvT6vcAL6xnwN3JEFhBMmAm7B6MgxTLf97IrXsGe5Knzv307W
jbevARFxXZmPi7igPIyFRFaSmvTRkqvnoufCF5wYUxJsqkTmifGuKTYQGl6LDIylH098P5xdPgWc
dHaCToGHLa94yBugqPNls5UhJntE4Wl+UFusgL6/4atC8YdwUSlnSap5p6qGDqmIBXnBWOZE6JMz
OvWhh9+9jf4cQzPARlwJQwDw3jm8YnP7+9TiX5R3QA3zuE6PwNvBUxSL6xdKemBexcZklgP8EFpP
gJxBKq66yJKD+dkBUdwuBezlzvdx2pK0kNigOTXfn1Q0tADh+vVt2c3UX4ou7MgSxn3I86N1ghQg
G1sKvut1zvzyvzG+/aVz5MX1XwtBQI9eTi9UbDO59R0l54S7pRUlNhINCp98mrYLS71SX0owFu4S
di1ZsOSSP74U8OV6PMYLUbJx4HsQTMfGVssHS2SVL5V8erq8OP5n+mMjRqOPBuhVO1wz1krOMbTA
mGbXikFtMch7LvZ7hD4qS98foRpuNKqnoDyGdsFomGdGNSA8DBPiAvvdVcCtGv7eUKwX/Dag05bz
nmc3RfB3rN9Ou78A2H2JqBywVYWKVaPcWtPknH/53BKiHBUtuiB348n4PhpQkFnWiiDY6GFV5iSD
0/LAQpht14kOmS4HGu2QPMPxsSala+zYb9xod8jAkQbxeR/nn8gQVJai0ETWnN68f6YYIDtXtDPt
iCLzKzXhhlso8rjqe2PNe0zQofre3M9q9A4t0w+63YD9vh3t/4TRFSr8cLVAFMy7uuWUeZ8H1GMC
xhf+OjTtNS3NmUQeb3sOvbGWHEnKrFSM8MdG25nAoEm+fq+FTNlniV2POUifJU2ndskTOKp3f6Si
iNaw1Epo+t3AUUpr5CLnI6qtmBh7E4y0NHbMv9ZDJO3Bxo/lTbVaG9Wt3l1OdSAJ4RKNDG15PnZI
q+bK5AEl/xDNTBNJLgk7RyRJl+6JV83iaEJTRs2KB4+bbVAHdRISEWA6MUW0qMOmpOQa/K7Z3A0Y
xcdi8JjCSjWsDEdmBNIs6SYU5mm6+cUmiSHZe1ATxwQhuu4Ih/d6kX4mvP5c34Fwa3Q6jpGgy86v
npx4gTNPy+WruNtd+YvRT4aqAjqlHs/4eHK2wK2mO0pGSvL/7qKfZiit8Ww4rAg6CPWUGeI9avGk
CHuZ/AZKIfcuG8ZOfzQr+XWulDmszqYHRr3ZBI1ZeYtzdUEMkcUnDRrpzhU2CbVuutqLCCiJg321
qv6Ro6A3bMW1kIkFmbiZdOUc4HE8u7eJ/+sQuRCyWBlcV3pAPfnrXt0w87oGY3RuBk1s1godLy0p
fPQ1ISSlWPdwRS94wEOCUIP/kgMZ/FwLYJ6Sl6Lnaot4Zgr0cudX2pC3queZZtJz4DduAGNcXhGA
HAxXvi8ddIDH+ogrBrfvZvjnZBZ8+57GzulUsDyEEhrRBa/h1GpW4woy2J1uKBDkC2ojsHLv0k/k
n42GAK3LNySnnbhBA4sreGYLQmVYfJx6FcuueHlj+wCRro2az+eLfgRbNzAEBPxcSNO/4z8ANCmP
Oy8bpielZjiBVSSxwW9XLJ9WCs+PbmpFEuxURhE9bMvcF62imGevbzCC9DDTc7VYZmwgvzTKPVbr
ZPHOuC+DL61+4206uwSJ2o+3InLwJRDLjXVS2G90Aq3eshUxPN88LFjpNm288rT0LaWoNAobtQAw
SfRHrL+ZlGWV1WjIyjEMJX2lq8kEYjXVxSUG50KVIORxI75qOCqUBgeFjgT42cBePCl3wyDahxWU
R9QSU3/P7QAkvCjOXWf3MV8QoMf4S4hfFfXDPIRQYhx+ZbYURWm8EBeGLSFUSNFAIiSIPncSteVL
qvOyLMTcX2PS1mqtOpyMGWI/r7bO7yzffsZdt5eC9d33FCSvrrDj1p9qftCTA37h2HNfTXevQjGw
guxC3vPXKChqlCFdA1KQsIBzGTfDTn0XP5t2tGBKN46KrMGenzn5d5Kj14Q+EiOrqsO/IDq58lkR
l6q3kZW6l5qwibfOhK74ffxm+XUi5aHYEaklxJG8myIXsPkZdELqJpl/zcQnDvRq1S5wmNEKzRZs
huNn4f7VhVSint5Zu0NobjrK5Hb0cf5I3mey/GM5fkSfNsJWnoXKdLrQSS2T3VC69dch8shkhpvz
fp/2Nmt5qC+dJo/QkrrwDPiX20Apg5yLbcVOu8zsfwhY+4gjDvs6PUMFac/cu4aJ4FZWCFkaCit/
8UMMbKyz0PyWoj9b4HWNgRSfylPqu0XdpBaezpauXSV7KTEarsc8yXOk7/zZbSGJefwYWinqtoac
wTkKiEn9kqgSbrDKQlynUqFJC3Md38nAUIt7WVWZuIgmf0Uy5QAVrs6Inr3pJiUfY+N+/8U68PJt
7vF3XPLhpy0OLVu5xjpZ3dkgO/4WSxI1fjpeNh5hTvdJIjR6GUi48xQN4xwvVaqpi400aMqCzgrv
WaSIj6dr8dLCYo7o3RJ9wXTpPvdm4IkOlTX2ziaDN5Do2zDduFzl35tqxSHj8/KzIWjN//CDw2C5
l2N7Z3hd8875pr2NEawOFC3p/w6N/iwqeYj6adE3l7PXjzicNNhzeZhQuk21VqxIIC3l+T/2tkPX
NFw3jARS8nBlQbVSS5z0mCg4ueTL/9o5I/H6nV3V0fELlt326DrGFHbloNmQTG4f8hmuQnWJTS/0
v/Ds0EqEqwhxTZvpVSMG3qvOCDq3iR6CswWLd8QL7ucUrxu7F5vVh2RwNvTvTDx1dbmokh9NPJfk
IuqPRYL5C7KL0yhUYkpZIH4QfiX6SvUj8rVsyvkIapzT0GE0YAaZmuPrde3XmEpYD5VcrOXTw8R6
Fxq5Uk43qMzfEliDU7oJM9EYXBCLP+YsfzcDhufFwfnzvH1GeKXNQrgTwlEiiky1bKvLi5Vq6Q2K
GechVaZrwpWtJ5/G/onRGXj7o8MHagiyte1K/UJUfqvM9LaANsKNqbU8nEo9UEBZx2F2QmgC01l1
oKLN/MKKpUHxiwG9MOz9dXwRZGK1Z46T2BefhwS4bveurmaxLIY0fjDc4NM0a004JCE/1a4tmaz8
FPintrYYbbToPS7kUybiw4ifRa6E2jWIouD0yZIuJVKWCCWvL08mgaGJmG/ghTjWa087qfYaK1aM
FW4nitnwQ8h7YjuOGffUNjibXJZyfsnmraraoDoafWJ0ndScr0G5OeInejJR6BIf8Iy62f8d6+YT
pUW8eISn9TNOAirBoozXsItSmS2610GsJQi8LKJtRvSswOgriOAHfebv6W4h5APs0/5cqfNujsLF
WLSMsaNTbiwIaNQff8veSXDs9eTDZzGDtBAYWDYB4N80AvBD1zXdVAk2bTex7dTDGRIi7IpPRYfo
EOtH75bBeYUM9p2oKEtY8Bi1B2KZqw5B2wTQbQmAATYrXnMvl2DoVBnGxJgnYWxVokkpJIoSLgAB
q3AU/u3G0rNPx/11cSTrwZlsE00Z5UBmzCHzeTz5AQEJumjlNOU2fGFauX089rha4vPervxpPVeb
s+4BoKiXoUOC6+6QCixQb+blkp5Mfmq6M4K3WqHLPKIYwRMu2ExhGFt2UBlTGMOFzGfTjLcy21K8
df8NK7cfTRqdPf8GghVKcLMBPgOItkU5+FKmoTSesBfnhfzj8kZMAD8Enl/+/jlylWQ/40Dg0NmA
NPJWHDAqdNeb2W+kqdrPD/uQRIJzjZ0Q2455pz77pfhAKqYwvc1ZTIMP1kOfK0JT0caU38axyo6f
EHdpmCdo8t1ZEYxzk5P0f+j8v4MD2P46kMjA64d8Mtk5fPzS9VXZKZLqbQS9EiDiVqJD9sKLCzGb
QvbCkGuh5NjO+uvB9+afZf+uYNR7KBolGTQQtvLXWDDAF9EN+92Vt730md9ButcvE7NqfJZJ06Wr
3JoKFPKxs3NQ1Ix7fC44zy8TLzjaO3MBsYNeOKy1d1di9+8lqcvkF1GIxARc20g0557X9XEMgzbg
Ru/GL23djr6dNUs6MMljNIRWADSb56Z/LPJ/fsKWSQBVfgphrH9QNibBO/AQKBcUIcyJPUoeRvaB
RJ3PO4/iPSqGS6LUyIwyoShuEQCL9E4GbnSSQcwifU3MoVXeznxGnmNq3K0rGz5fbgI46AnqRkRa
BtxpdUgHcYcKk+2IA/DqL0z8UCy3iJjC5Zg78bEeEJZXajiU/Eu4itDP060IE/+j35L4VaG1pow0
JG/DcX2grBE5GSfdO8hlc+QHMNoW2prEuXz9QwyQXT827wvn28nV6Gyy1dEenbZJzVbDJ7j76ick
u6B1wubckrseNt98wzTv2yVj5khFHcTcZOq7x41drFjSaeJfjaxnH7UY4m7xZwOMnE8GF5dQVSPz
eOEnsR8n/+aAQ/7Xj/t2dazNaHXTCIIQ4PWyIRAASxf7YWcg1rWFhyTBWyb+dO4HdEXqXZbPL7dT
49sC0gHYXAFNkqpm3rf3fhfPoOGPpnhjPzZTcy1GfSlBTPppik/uj3SQfaR//RmFm8GTTAfx6nRp
IKLj3hbKjH1R1yQDg1LQPtZntTOLrhT/X74PSk2LI+/ILLPrmZNJmcs5b22u5KRpgO8lzC3x6ihG
MO+KMaB+JCnKKH4FugO5xRrqDtplFkwdvdfmM1bvX+k70JfkmCEgNb8JJjflloRJMVhtTOX+mmnm
z7CxKeSJBb30Ur+CvT3dqSENdyAaQMyo/yrjG0XWruJ/Un3Eaca4jeAB66SHDoamS4hJV/B7tjKz
tAetLTI1eFi+DLxlAwrrqwmNKe+BpcLuOhpS8yxHMAZAYDAhZSoZq9HqfsobL2pw/zCShtThYKpz
jCBL8a9PxvYOu4Rh5eHf3YDg2uoPYGvqIalZhLen6jFB8e6qqMPh3jBxjzRnS0pQot4PErdb/QEU
5O0q8aSJsb0gGZzpfzgGlab8JrqJrbWqYZl7BAepCS9X3rv46jvKQvWN68UQXiQOLS/hy1cJXwoR
8XS6bLs9nHgvIqV6v0hCV3Z0OtYoCOBP4xWSr9gQWRQifpNVSpfKT7DE/xgGZ7XhOjMxPPdbbQxf
CapY7mu6315T+5l82sdh5SPLbFpF+xQBnQNhrK2VZ/v9XOoUTBHL41tAl7KKLw4rhWLald/7ccxc
E3nfhe79BtwYJIBosN24D8yr9tM1BWo5CFzAscurU5Kyqnc9GaUhmg/j7gjaf5bbNgQX6vChFglC
jF6Ri3Hm8zA2QmE/zefIqSP2HPkuKlV/ZNQJTjd+TNRzhTCfS20DbtT0T+QyGJCUcS7I7m1iS/F2
1JlEJu3fLPVSdfAzEaeX6pc9HjfqjD7lFRZ0ABh3ey/yB1t9PHi4DiM5rMJeZMpXbtBV4SxV4S5U
5S+QDeocOIWBC5Ib97S/nLF0JZKRzA9ZYXFWyzp3f5toTohU9M4SuZDco327tV6Z7fYURkOPbo7j
vdqIv09rkSgxHfz3OS+lE9DW6obgO79N/cp33YnxxH7XrskS/JDI1xaCDqlJDY6mviuJ1x9sEhRK
WcRNeW0y4/nKjrbGKIx6k0rInEBrP5VDXlYOqprzm2A7Od4geF/2wLkwaNpn4vy45tpJMDHFxv37
keIXUsiqTEq0Ag7FvZlxWTgV4wQybUP5qSTDNS/SWslnrgh106a8OvqH9Wz1T9fbvX5vBVJQMUEF
PhdYyVgmXa3US3nWnA332eZ2PmsnEi0dGAzj8e87Mx6N6DvNT2q/gWC3A/ySMr10ahJh416XeaD1
OoAeGa+mLH7JIhZRMw/KZriZOV35dUmyXgD20GNxBrpjTqN1I9FacUT04xTr356BYhMtoZx3j06F
joQQ1xYG2lR815XrCc4LNJ4I1kMH9OERkMyTrFESWv7Wbzn5DCKA923xN+gDmOD6O8MWZ4uv9Duz
7R2zi5lxMk4jItpeyOAQOXtL51eDF/CDTZUWAC6aIaRdHfZpSeNgqsSFoZJtA3en241kxLUjXh8x
OhDv7eAwjJ1AVx6Q3auZVez7fPSPe/U0CPTWvRgbT9e770Z045YgyHps0t2+rsOq1mLoGEqRLy/9
FOqVkMrFCXIxsToVbiHtOMIlXP3eE+Jn+5DvVNK+i6PdMccZkctdWEjeLeHwfiGMnwp55DEdJkS9
l/+bZ6VI+mI0B0orQDAB0pns2kYKAO/zawfDwooCIYbfRPBxpdiIhCJWMt/eePqhOmlrQzqbd6m/
E1skrli6N0hupZBje9224dbbpzVRQXCH7g3cAWi2bFfn84cPiaRfYDHrleq7GgZzmUfjf6iraEhd
R3Qvh2BL0Qw12LlxdmOESRf/XBdb6ijOis6F85wenCd0V0m9B+uAwoVHKvcdM9tkqvEchJpTfekK
Z+jrL72jQ78sjhZYpJ33w+SYOHVp7ss/xnHim/7NsYBkSkDF0UsUJev2Jrw8nkp0J80816EhBcrW
/sqBAi/IbdED6Z/9vcFQCWCefPm5Nv8XJDfBex27xFQ1ALuNHVz8IUECWNQwG1UtYoG01soxSCUV
CNIfr9VgnQKlWjHRvXDGBZ6pHFwQghQymotEHUjxxsXPETTpbgzKnzMGUmBlCrTU+tSADfk0+UaG
sRZVugKx73hWeZAx3q/MILgbPAj8dgLSCH3RXQysNw76MKeMghcS3Hp0jvGtjEk+tFji2srmqpBg
Dtr4I+b0aSnU5MzoPInYJEmILpiZYdi4FwxKNkD9563ZGVsM9enuU5+UqE93RxHytTNJ+T9KJFKX
2LukiQPfLyYQbGSEw59UCoeSZD0OHNLTtBMn9+Fkd8LxCFYcwn3i3hyIQsXUUvk95xFrBufKq+Yc
Cryf5gqegcyIPhEHC8OMDtuJu8tm18VjYVp3BxJ8cNN/0pf6SV/D+jWQz/2YoR3S8PCc4PLppPgO
YwRhwIxWZiraTXC8qWW0SypJJM8e6yoKoeGArvno5cicuqZIBrHF4Z+/gMajLkKsB3pPtydcbuvF
d5xXAGNNpyfr5W8egjjGpa1idfqTXdOjeUCAEDTqjaZv+aCYqkQp/96QFPlLDPr4J/PhIVG41xzB
EJjiThC1zQ6F8d914LX2zLgnI4FbP04tUd531NhrWwFZxYUuf+OqqCccjAe9I0zr/x1dO4HvKIJB
165BPJo8OVeyHrUEadHsyw6zJsg022+6wFbiSyQzEHJCxs4pxvMT6XrHrFIhSoHca+JIhispJksx
QRLH7NDXBUfmC3SGHKcc9SO2d/VvAkfDVwiKua+W5eoaL7nOy4T5XtKsPOvBf4Vhvnw87+Har/Jz
7CYYbLUnvV/LwgCjCH6bh56AwaQ4EHUsHTBPfSBQIWAZ42uruFkVuizgvojvoC59ePOIM8P82eh4
a8Ur3IBhUltX7QGmCwdbvVfXoA0Yx0Ts0RxxU8utfHLuYvnAx0SZOyJouqqb6Eo/MlklauDn9DA6
gmscrrDvl0PhNJMWPKqenyM/9bEnNYIvlwgiHMvmYhDj11oeWPeBF4cxQFF6MD+bxZYWSLv2At+K
c+NnMq+zTN8Xp7q0EGbMZhPKXEFyOBWVDsVSfB9ghH1XQl2Rez08lseQlApH/OCVDqvdSaRkI+FA
v+sBU8cs+2WO3o3S8ao9VIwfReQZsikjLtI1+Ik8+U5B1ArKkJ5JLl9TeE6Db7ISO4AJ1HxIy4WC
F5G3CR6ZVVURAcKqRW2R8sxBBgi8sevLpql7jMvZLPKN85lLbbjn89v+5TwoKcxJWFKdf0ywgaiU
+OUyQF9OuygTZJVV0evlPaG0wUoDhusZH0/6z2SdQZJ1Nn18zKXmzvMNH7j1jsXcDa4G7H9DqxIY
P1BdMa3Oz4HDRoHCzRjmdkYwwm9XcCwMH7SgMXLrYYc1xFvz213y3jSz413nTICqIDXdO1IcRFi5
w+NSO5PGafSm8ZYfTN25Y3YZXZ9q3gW1yp9Iu28Q/aNpcBbtIYKEezN8O+8YiC/KMniO/lUAOB3M
goppD1rXi0qtHX5c2q2pOtx/HYNhVJJsXWptXgaECcsJ3e78vwnuccRPENKXZ0YQztQnV+aGheT1
rdHe+/q59D99tyRwtnK7azLmKQjSPfQi645McxB3DVFmOPl3eHhenu/1Xeg12LHy8jLVUvHolszI
xBLphu+x9f1nJ3S4mAGZlmcyfMM9tupD5iIoQ67EHTSFPram5vcdwNdT7AuMbUYR/mm9qw2+5u6g
fsulgWm/WGPfKI+iQS4k/9BM6JUjcg9dBeyBNFJvgELrROjrcdEXqUcxzH4LHWEeAAvqVwVIFWd5
2hy6BhpPf7/wJ93HB6GBIEKK1/cWgtJ1PxZBzL9V1rSoCWKvYgKVA0lRH7LPvMLSd5VU8JiNh2YA
dN4JYHa5UUT2udTTq0zbdZAxg2c3JeRG1ezGAvysTJKr+lg+vRpXUdEWaS/uXkzlq4Vjl84DdAVZ
Avhuj2ilw2Buai5rHczriFW+cgq9vHGaqu8r1pMJCOHB/P6Xmu6modQLbcTwLp4eJQhqLzTWDsnS
tJNXDCPnMaVW9iV1ACKZGT6qOktpHou2nmajJOrUNikib0n1pzGjWtSzLHKG3STmCWn2RCnR00FR
VwA4wYbSHe8BwFkqGwvhH8AR/RTXXHg/F+5z1klxaYepvBdCQAL6cq1Xk89R+rpZZK5Ozvs6cseF
sj/c+FO7QUC2yBddQSoR/nTKOCQlySGvNdF+0IvUMGuVvhHlnMf/MTsjnxmy+0DfA6nz/3PaJ1Eo
zx4bjH7yvljJSQVp0NyIvUCwYy6Fg5gF24DGRFYdGUILt/f2QlICe16U40ETKC+Hj9dhIbc1p284
AjnMWCTInWBryWoYbeUgjIs2AAta5kpzgGqJdqjGT5SapCpB+VXLGcPw0biBQQudDlYcwu1Sn0NX
NcAXRSVNDGsRAAbeBXbRlpQQPS52jAgTqjlZR8GQfoJ+TxxsW2a3nuGA/kkxIo6apCGjqnULZ3dI
QE0GpRe+feA8nd1dUJix4GXrifSNdPxL06nuSnafPwI/nUNWc1dNOu9W2lO+ybJ6W74jt1OiRnoz
LQ4ehZQWwKwSImUYy/OwuwieVGPk4zRg7vVpE8MBEJ5GTIjeD25I2LeBkPEcsI2wqZdiUS2qrQwu
lJkhnx1Bj6pXh7OFr1R/aVaNshtQxEEvKmweGW31/mznpOqzQaZP0JHKbQb5pAS6X0m/OgmWhrRN
6ppUOnRZ4sPxceDOPNQCeTjGd2lk4/cSFbTUKf8z9YAL8MKFK2WO7zu9GW1iOP9AksiLmSsu9bF3
GTxAf8YPhi7bd0lShEW+o/H9/++FMjLYGEXYZb15hmLSA0lufP/pI60+s3jgMttQJi18Y3aVm3L2
tVPssxx8QzH8Ogr6I7GTzD7sJSsynJQyuNSVXVNOG9jpJFgSZ01UAlm6KOZ8LiNU2RNj9R9pNZhs
92+p9OAbs9UkKyT4dNo0KhjuadKqMT6jDviL35tuZvbuuVm/7PNlvSo/zx8f3VIK1569GBVXS8r1
GKEs8gFA9GFwXLv53zLtLqRoAB1lJbH30fRYMRb7ojDxM/NZrUqzINDXFre5jDDnOxCAsqMRnTyy
zIN4EL+QD1ufZaTWZLzn2Ls6BGQ0ontAPGpWqE5EO9HwHKCRIuH6e1AeSK7/go8KwanQbyi863q5
1RN+hFq9DekpbsNtVPzdNYMZFJ2CJ/y0IVNFIYZygRnDMEk/7+iTH1e3lCymQejVvsFwRqY7zHjT
sgwO2cO/I2ds+Aj9lzhiL3JvfdKnMrd7qjRMtWKeSeJLT8p1qtXA7k0KaksvPXsTsh7vYYBjzk48
5aBDcYIZAfOeQwhwz+zaQ60IzsiDPrs9m3UpXuGFtx2Dd7q3KPWT1vttHUfozCxmdcjUhVGHvzF5
zSb9K1rbUe+OYPjGfu4x/bnSGjomF3yIdsq6RDAPL1ZqRsCDwOnCNwHmxM+WPSnJYZQFU5FwywRB
gUqzk4qTfnjdsXpTpWW1ZgRKX0Q8HVSBv9Zq2O9DAy0iOWz45Ix7xY97un0O+piXdsCLvb2YKn7R
nVJLddqSe/9JSOmAxIjfnrhWkBafAZ3AzKRp7ZKUN21TNbUXTX2+glHRZVCM5KEe4RMT5loBPkS8
6DfmZpEmCAwrS+mvgvrmHqx7VgNPpyvm5k5UJZQnJTg+rlL0geDChtXUa9FIDBCdCeIod1zNSWS6
3I1z2CPcnPEq092x/vxEPx5c5IXW7v7fjEzzXVlO01YoY7fdiJkTZuIsfoh18ku2TTlQZoiWrQXM
Pqq7qvEDIUIGPm7/TYnd8I7vtfaRFD4rF4TMprReEc0Qyk2sjEDWRlNsD5uzrxb/Bba1hgViM4y4
nMpLBAZeM0MHcKatA2+BTNFhZGPXXcvXdWddx61HJWK8dXm2hR23T2A0Bt1kIg7vwGZZnFYyNVnW
gwx24CycfiVKReAo74UVCB46GMXpGtwx7At932qsIux3GzpQdaaBtdRHhJfDMq8rdJULO59tKvQm
fQkN2REYaJUbB6+Qz6gVhEcDdvgQMB3o1ZkMSqWM7ERDUNpU1qte9+4u4x01S0spdNDhEeNLns7K
tcL066CuO+U/lwYvVdV1Xs5VN7ixuHH4wy1m8duQrOLN7N+yWTRTb4xoCD777T2+Z6TAfzGFaCzr
e4a3iaP/Dqs7lofb8xoyi/frLJlvIa86gIceNhoDOxKqC22mp9xBLQu6GuMw+WONS8E6xjyZ0nLu
rO/PjzRYBSbVV/KQRfhoRoIXLiRWb1d4F4FvRVT/n9ohlTGjfjDgmwbENGFjTDHR+5leeCIZCF7c
0wPR+jyijsmE1U1Gu3FcmUXy/jcZq6GLjoPh8+SGzZNA8+B+6cSMEoL24DDOrvxY7EoEZNZSsCc2
0ciVSnclEz6lH9cc0eFm57EwS8Cj16E5tYLNUKDPLDsdpdsHLrxmqkIckZ7/tDdr/QX5vEOfOZNQ
TUcgA97y5h5hROw3D8sJ6NJSsARCTO97m5L+68rW2UknIzAC679NeJDznAo9/9C21YC32BnYOZEm
Kr0jfXH4VEDlehpiLB1NLpzy86//0JWPPCfZltnoqAQO4ecg70qrW7vM4pmulQDWqhzyP0ErzLqw
fwa2sSYepOoFbUoGfxSQtOhraPDQCbbnVoLCAdUnQDpQIY+lr/q0rc/a2KX65QumKjE71LFbQX/x
/njKE8MuUNCI56IeniuXoxwhX6hB86aiLPdvZPZ9bBLBbdFYTqTBRDcblgMPcDklTBNLxKZVJjxb
V4hi2iBJNr9LmKxv5NcJX66zmTlcs8RyZucFo8r+A//4KArJnVh4XVjv6Dkqf5YZtc5JsxyTqnS+
yrS1X456c2hm3sUM+WFsanTxAPlTnW4HjkodYj3KbzrlQzcRXh5D3I6gN/6Zxkj+seEJX5oRAy3v
dhG9AleGyY/1Pm/XmwsxOnBa6BvhtI8b3lKMfreWvXNG4l5xb/GSNfP67toDklAP112aw4nzznJ/
CDLOQr0M6D3/8Pv70XccOUzeU9cNriNYNtHtpFVV5tSx4qA/dHLtFmDbL576yTDmXlMYQZZWM0r8
SHjjMUtPlhPnL+aly44EUCdlyGZKkftLyQr/AH4v8QIFd1sSg8Hfy7J1cWCZcF7o6tRIOcI6vPs6
F5ld0o9T+m8t56OKaE7uIkBahMyZ9RtmLsavvGW1hi6VXFwaJMZ4qfzgc/DQjfAnPZL6tW2X3vMF
es+laxOB8zLeoU9HKRj/mBhP0J/qNzKoWoQL5R4cSkDyZEbhkZMj2R3fdrKwrjNA/KGvhLJ585uL
CzJf/HEnTtd/tLTKoB66upW6AKUDSqKec7PP4Jh9mDwRGOlM3YMThmi/LAqUrxYlgXEj5nOqtJa2
Nl333kfdrXyH8Nk3vbUkHxR0ON2hi5QlhFU8tmItBIxej3ULnaYAPU0FbATrq50MNf1urWNOXWDP
drmbrxFRO/Cwsw56MUh03U9c42DcZz6mi2YXkklFQRInEvnRRC1g43Vr64cb1n8CWPAQ0VlbpluF
XcXAMWurVJjjoa7n79Fi8ciOlUAlguR4USXLDFbyfZmOYPOQCCVjPQuDZJTrLpqe/uufEMf+WWog
afRxa7yDK82tY5K3K2OmoLbuLI/TGuDWTsjMLkKedekZ72RY0thkJWR61Y/LxuL50xEAXWdMi8Tk
J0J3ikkGtl/3Ei23ZqK0Wxh8L2n7lfNwrIIZAFnYQftY0yrDNsXUnJZek7ruFyGjFlSkm/2NljvL
aurqF7mDY+Nsmn01RwbLm49JFhiVizV1HGhs5l1BWtB8+c2x1JYGx3Je0sIXE0Br1YkSceIKjyaS
9ip9EOjcCN6hQB/80KhRXPE2ie/SC+qEg2BzQWaVyniV6Uuh3em3Gfkr5buUIjsPG43HYdn9xw0j
TNTr3vOxWbz1mGIIzbqZWPXOmVBpIjHJArAE76fSXIbpjE2+8xNTv9yvzvtH2EN4KOtB4Oazyh7D
nda8n3i/l78RhilrMpw+GLDPCS2I47GTPiCTsCSgnOB3T3kF0xJO5vLYs4wT8zJKVn5IO/5Sezgd
pzez704uvj+9c5ogsflTgAqTl9XAABx3LPZqGjTj1eBnnNPHV9FB0nj8wq8wJjlTMwGbwIAI1XO4
+Vxi6VHd6cI0ZqqNiEdEmUjPXo0Ckch+UJQz3Q/OVh18LKwk9CgWOHpNcALTpuvcJxerOmZiz9X6
JfZh8b7UB0DtJeTLp8FHFTQPYD0FNWOMkWSjXDyyED8rkJXdFEhZvoQcSfhPPeMNE/PquQmNCT6x
3GkcDKL3R+BUR6qH+lc5lN+UYtEXzZHhCvg2PNzvbHJZSyQ0C2wSG4sHMuJdY1Dhwf2OVIFW5Yx/
z0gz9fdv8U07iV3F9hsuaGwAaPf7hoamg8XnGZLlVnCONPgQYd0VorJZ2M82sJaTN7M3Mgv8HUmz
odv7HwlHfjYKBoJJ/DmqwJyJ6Zp/xxKfmUYP4+WJs4FIXQ/yY2pP4M0by39TdEGB/n9NcsdvuWB3
9ZN9a8q1H/HXWb5em/Ym2Vn1nSmaxqrWNGxiymacKxVpjUD0vjMQZvPl96tEedTcOzsf43+S1jo/
K02QjJ+Z43FOYoat4C+6ohp3fPhSQBRDAMwLwBOSiJWwQREOyot90yhR/oGgUtJa1HEA+Lq0AEzX
XRbPCnwFNTs1o8Ne6Aiw9qlSihYvTLcmyiZTrMCec/A/SG9luPe+lvxh2QOAMCZFAXW3v2pgxA/+
CGq2R/keSu+asWvKWis7NaEjyn1hW2gz5y+Yg0DLHeuK8I9zBXRzUve4zcWZpAPug9hZfXOndpTF
caRFi1IJ8ccTN4DU120GWniNUPbbKYSDeac8OP9uXTeXy470C5AGxkEtYc3IkiK9hj81BJCUa2QB
Tx24VOYNqscMu8aR0J+X4uYnLrI0JfwnxV3F2ikzOMaPoG1qvb03Fa6JjBZRq5iIFRveB/8bBBU0
GfHFvzRBBiu0SC0+V+buH5OMavdj3bWCkVJ5wby6e3vkgE2zRnaP71k3EP0/sdiEgL8N2iEOdx16
4HDG687UXAIec3ut7FUDuPGpwr4crw/bqicKwDc2RPtDECVXZZE0Tt+LBT8YpuqRpLyyTq3H1Dr3
AtGPgbu2MwBz2/bpYIYXXrAH2dr3AHbV1jWqFNZmHYXlWkrptffsQnBdup5wVEiMA/8RKy7e5weg
d2fxB6m4n0MITdWgN/M0EW5AdPdfXWwa3njtCOHK8gHQdqOMNmyGiDy4SNNp8AJ4+YMKoNiFKbgm
GDlQegKcvA4Qm65hY8Ipuq3fzP024Hdo0b3K+ZNY6nZyWzD60XlMq6VNSHkhWIUJZDY12mcgAljK
rKM6oCxoEzKon6aChJ7nJuy6cxrTidBxjSOy1FrPXhtKB0krnpg8PMY8jqkMnjKGDW+NiqdCUpeN
iI2s70qZKMDfdoYnHUQk5Z7IkBOUdMMdnJ99VPCOftkF/CeYCAsNeRs4CL8I9vbxQn9elQN1m52n
Zb8VDNMb3gQioy1aREcteiu0YRp4KlyE11cNaf0U58HntOLX823J7Rz7fGNqU+7PS1iapCio3hY1
alKVlOB/VbzvI6XBUnH8dILu+L3Of0fStJcT2sn04Dw1vJx3U4+gl2WD+wLCKXkjq4jBx5Pxhsfq
tYrHNTbqjlfVLqVf0hBwIVhdEbLsHmZUFHs9Ss1qWxbX68dAjeZLHp1scukMPi6jO/5tvASNCA0g
6nKyw3pK18bEcBo3fehwSlrfTfE8IU3hKgyiyoTVe5LrgYM707gwH5QuPHhFuTtmZAQGpVrFfU/D
jBB522CkDKavj+9mNE7GlTS4+UIzsiOEaIvVUoN7wHfFyYOxtAA1GsXHYvF4bu2u4Nuk8733rjSt
dnraKAiFI01kzxu8LAu2es+wrf4uv2Tq4si0Wsk4sGlUylN/fXnPnj7CykKdNFlwYuqdK8Dfsr42
Ni37Nupg8gAUL5TlThneWHT0A0OxXRPuM9Id5obRFbPa3oO7Jehw4DlmPGbULza1WhYNYfkYvcXI
WdoZL0AzNl2yl/defgR+SXWalgovaIjJyAyY+qYolFy4Hy4GH8rWFuSJeVXFAb6d0UKdASG2qNmp
8Ze8kJh2a6MJ3fKujN17LulrHicNEfLfSeR6Tft9xYhMTv7R641t20gB4jfGd2re4Xah1iYj27Kk
I3yDfe/LEgle35kTXUMFB/BiF4ZVt0+D0YtcWgG2sZaCDuHiwRwx7gbT9DOWH8gvm9WXBX16jlh/
pX7GbTP/lDRcVw/+ypKDzxNWFUhG2m7JB1JjVujIbT9cb1YXZbTwBN7YmMZILfzqCIbhiVW8aOgj
kRYqwPNwt+PA4oXqiTMGFluias49vyt7xWxLu94px+j1hri5itA/QW2arEKePKkvg13EmyLIVKbx
B7nFJLxXDSW+txxFNaQ7Yih0aoIrx2wlGjNB3c6XKgNjXrKP5oAfi4Z/ho1jGIP9cu2BuxTF3oID
gmgqJytUlhrQMb4oeQp0SUJHBk+zD0q76v0uH9n2A84fxf3wvC06ACvo13UG8LboU+jDLgxfq2jU
vPQmvSFQEUpJCFyt3K+raI1IlYF5NFQmMJMKskBamFPgzPyyN1YxMy63gVll34VHzFZnZ4qtFq68
zXtUiKErLN2q6Iq87t29MeS30TLxNLu0/DF/lGrMjAnmu8z7dr9OaTdrgZH8XQWLK8SdRqWB7ndw
zF52voiYdsu98KX13rjjaT55HGT2vutUkCZyPXCpEtMbx4IxjrQFcJ/F08+pWXFD4pHRpCm+QAd5
e/4kAooh2wKyGc8xXCdUYv+3qnDoZqveD1R8aK+SxPqvL06fck5nJ/NKsuxPZ0c6hCeU5fDa/Ckm
xsKJmF1IweNER09gV4fRhEqdEmdULRwO6ehs5dfpjq/R+Q81QyTfb6lxLWShIQUG4i2PgKBWJYMb
p86LsetaR/dI8K3o5bxD26WqxOKSWSIrMbZ+v3vTiiQLduyB0d0bbTwjoQdUE5thnbVTNr04L9pV
G2uVF3gKlMxDphUY6CqqnREO/1Pegmb034e4qzuX2t+C7J8hSDI50kr6i0v2hYUJxFUndatk7XA+
6P0GfvyqhAfFxbBi59t8KJkCm65BESs7IzlWqfZbElvmGzD70ZSRMWqjB9lJCfng/uBlFYplYCRp
quNxWzWfrcPtsPRH4Gyf/CZ14g2lKHe6JIr1S9/HCp6/+HUej/LAIYL2+Yh0xVbdQUPQpIJBx5gO
MPry7ZVERav/4Ppw2rooVobAp5900GaYtR+Xddhthd8bqRGbUUa1gcKbmdSXb6VqJj7XT5EqjpkU
zUNrPOGuWAM0pYyxEsw1JSobQ/zRosYAkpULrEJcTfsm7J3X8DTsD7Vk7AJwMTEyhzBqibgz9qC9
7yzy6ksrfTyA773/JPqdS3EajH7xfaSnRS4E1Y61iPBlAxtXK3OnRxDlMQ4g8TSlGnloQMDfgBrV
eu+N8dx3OITVimHg+o/3Aovb0uJxX/qSdaVDV02yR3Q04shVlwylgOXuPgC1koIt1X5pOeNGAbUH
icf2E7pnfIjjsjqirrAivYQsXaVrXB3nLmmxsmSz3wwWGrsXNk4qWkAvpNOG4BimWAPaVSDRaX6K
jsyLraRn7Z5ot8rtbXcyiPkNmY70d2ppmUHGYdz1BYcotW4s+mHUP0ow29A0jo/9vxuRoZ+4pPBP
YANbKAob4DIi+ioH0aQiBMpj7JmVhIFEr8+fsAeCQpTMPTaO+PDL1pUvLzmNzL1X1gyWNpy8cJ0t
L4eBKhee+ddXZj3ii4AmiLL2ExjiPZnH1al4gkuqDYZ1NqpgnTZ6QyW5DcSVLuSulTIHJU+inGWB
SIqZED+g63yKzzOOJ7xZezE0uzS86FQYtcq0SMPJ2fvAc0Ic2Ij7IyJm7fet2pebe6O62b1UQi2M
YVRRjqE/DFQf2LeRuVrXdZsvApUwhJxa40UueOpFyd3rCptATPGJ+W9I0WNkwjy28YGnMPM4UmVb
LNyS6rYbJDtbzlIuSGFZg8T3fWwiqlNX/qmgfQ84s42IegR1ne4VHd2eHvqKyswh9GEtrj6qG693
m9hSPcySowN7vMAf0sodE605LLOFTCDPRwlLxNVdyYmHVONYRFc6ZsOi3Pdpe2u8JOIaZbyVY6SK
eX5ypntYhmySIl7otlUbUJtSlp26ZwoGpoqMUskK6isOhDxJKUmSOOQmuiMOSAHjhjboUOZo3eCE
kqo/KZo8ZZDpR30cYoPT8DSfjuHEnznbKDkSmJP1+MJlYzZNQetzQsDTOTa3sD8LgSylougj60J/
1270tJZHReAyBY2Bcd1jGhThEJgj+vscyMGxIJfVRmI+XOXVo4mV4DHul7aTKd91uhZL4Pros/Fl
4TQUl27hOzSLJJF0kmSLTvbXNqnketirfmL05zHf8X+SgnV9hUtk7CwCnqUze83vg6uLCX2Lb+pV
WEFVy/ogtdQkCK5kGC38kaB+LON+fpBmCqQMKYYWXAUyvdA4z2mwYPQ4HE4S8Nsl9gmwk9BBBqK5
Rxf0vBEGpyRdv0H/FKsm0bWszjIIoCuKZiOfFFHdCRfWPoWiXqejcdF2JTGruiTlETU4eKtBOOWK
ykdgiGzO4D8fl2NFcCDiVEMIDn7twTh8O2KmzHtgU/B8wRfSV2WfpMLEVlRBpBAFa+GlPDKGIB5T
xNGlcsADRA/IdvLhvv5dIoEA3lW6/v2fU5iDHchXl/i7qaOucqm9snNPHT5/tOvd3yADiZhW8WD/
mXIY5IWZSAS+OmiBuX+YXpzdNTKgDWboBd7Uvte+ELJRXIxWxtsQJ/Jou29k3fCSnuVAq9fOy6s4
ej8gmTmpstfy538DoLlM1lL/ISAWolzNsGJDcVY7uDQh6i4UpXiOp3LG9SZTP9vWwfehidZ0784Y
A4kZ4rei/IOeCK09tB3lIEAfPlDKuwy/xDuGQ/4fu/JDIGPNHX7BZxMXAwNnjdsZS50W8W8Tv6vK
3e/atqyt4kRXV5JMpKxgyQP/dZIje31ARN94sMhKvdIA+x9xNafOYTS4hqqDlsSNP3FKuNsAZjH5
r8MNz5XsWVjBLCvLMUyaoC+K7W6iuHmT/uIGDhgmehRn+UdgccYdXiwI6vhfIWDz1Xkv3XT5fX6V
ueuO/fE7FdpjL8zq2kMA8J4OgZ7cNj/1Y7oZBGCbmOO6cM0vuS6E3svDfh4Ho50cRWGAfc2hA+xy
9qMkEoeMFfC8SA0u8y3lRoO11rpJN9sDaqo+xf+ta8oIdxzXSmBlN+OYohBTgL3OkEh+39k+01Yd
Lu/1hAuiL9Y/c4MgT1KRMRRpkBdIDqNQm0lM1Vc4zv4yXB3Rh2hY6LUrDdczYWTEdqgstgQH50LG
ycRaBzYyKFW4gyz+liv1FRf0eS891YiyiItk/9qFXE+yFu7TbXXdY4u9ahk0u2xXLOWzO7lfQ1Zl
YLl4yFHEE6oTXtjbSH9a6oawMBWS0y8n518yN5paauXJiYD9CzBxJDZaUrSRmTpjIk78qMiSKgpc
E2CiX2YZ1O9TQcfuAXMnT7XAF+ZKjfS+c6ArBOlbRHXUoGPaDTVlYmlduvLGpqTKd49fss5k4eoA
SlzWqAd6madAS8a/ByE4QD68+fW8zUoisVEfT0EefbHHFnAwUvn89gbffr9zN7IlOVpV3gk3eNG7
C+lAEiDil4UfZzBxpy6MEV7sL6eBUE/pMnh35js5sF6wrngeBhS37oY/i5iAHYZ1TFTJPSlVK2oi
jrF9dUMlT1ISFw/f5pMuaMYDdwzIpQ3mxZ6k/8D3OkIn6vOu4+rTP/a82M00OoTDEIRTcFfTurKT
i96f9Vd//z1dqOr18qw497bPxDty81oN/9oQWa1AKa6QQITRemcmDhfJar7EUnySjMab34a2RN4M
be18WYKTb5omiiB73ARIFcen0foQKGE7dB/zeAbXc2Ke1cAceiu84ITARVxRPMJYtnHdIRmkFNFh
yCN2wW089LVxBKRqN9LCHeqVmoHN9UIsJW1ynAkYfug93KRbh4qHC76d7JqOmnE77whLvt6x1tvB
q9C2ABn/3CAvUTDt9niSsVXHZ9OhCAAEAAi19wZv/gihrrskBCRNF88G3a3lINHo8+TmBEnLlV4o
WtDPvXIPIm24gLr9DxPOzOlID/FE2jZb/QBMJ1JHLQFRhiADvYkrVx3S9296Qd+dxNkMul+txCTy
bi2GzPVK0v5RBmX7mIRfTUIdwpHkfo3APiFt4BRy9lAgyUW+2JmZgaeRzyDqpc+Kb9EzdPzOnp1o
y8ZVOqu1U91unhBs5KAMSFXRI3oXGlfAN324vX8TnDV7PKXq2IRjcH/fgaCZZqpuOv2YpQHaqfwV
ROiSNeBf+HuVjG8Dn12/Q1r9YN/zErcektLCVcCzX+5AZd7yupT11JDa2A2WmVz38s+8rKdRozlS
87wlkRKV2Sd61r34rZwrAeL4zPuz0WFdWkm1Ijpn+NP0HqhXUUNgQ4TNpgU5DOf13Uqbh/+UUVRJ
NAZvN1V5g+tv/xDuSfb2+E4LRNJj58wFn/DuLAzTAgV0rbd2L/ugxCinhfbCWjuJrJr4HKbYBOXF
hGwiuPouZHGCOvfrVoPnq48f6iojj71ixOj2Kj4RDIMdQnleYb0P3FyscraAzUg3w1oDQ8yDxOHV
s9NlBdvS1xszzu7njSaNYAzlYDbICmh0s0/Rqvc3qpVrNt6UffVPgdfW6Fw9YEVzcz26uWpy3FtF
m/tG3uigu+LYYGBS9ibSIxdyHcNMUx8IWqQumBkrzW4kWJjJ9EYUUEMHIVmFmvHK/f1z8sGM8sSe
rCmD5sJEUU1rXjrGrKd/CabyKErtQBM8ZwGhBorTK0TIDIG0NM4v2w6cyEe+b+oZ/ZXWqtLQLSVv
wKU345E+JVGOjmW1NkMEMrGUpOEtIzz9dUvuxtaZvUEuGVQa/Vnnl8mMowXWD5JU+KFwRGIXUxmO
hVI44+W+dn50hT3+rrEINGB9IbKoDKioTb3kSkgYHv4toTXGPgVXJHTueD0JAKhgRm3w6k08Zer7
m3c91VEYXJz8kj9TdfFLBSWEpgmoJk809e2MLfTqytJxGjAbp0RcoPCFW6eeRk6/E44w+t2BA36P
OGmMDCky4pzCWuC2rwos2M1mPLbTYXURIyNjV464+AjVAQ2XKO64PvsDGR28U9UvL7I3B4Gb13Jh
z0ifxwSxfBWT3yx3tdgrKU5hlm9AylehAixcftRAODQ/i1XREs/1W0E9U5V7DzeLU7yYyIUazFFf
m5C8dotAVXrvAceKBxziuiIfjqYFZ7AvanOduS1nmD+5KFfphGwqAzxvigjo/KE4jW9Eeg9v+UYd
7hjTZ6NZo/iMFE9zKixAFFexccPYWntFu9jaDbps52RHZy7Ux95aHgCRmngo6/+FUtjQ2xg9HQlp
0bhYtI2CTfcYnUFZjNyIH6NGq020NstaaCugKYYz2dcn9n9TtzAwTMxy1+/CukfC+vJHSekNhJyq
vJ5OJJW9iSarnykUzh0TVlcdVtg4OuPqs60aVyiBdPkE5BgN1WeJNAX8ItFFh0nM4aWtxS0wZxI7
nIcaRR7nEbBN8HZLG458NkN+/q/mjoa5I2gHT2CU6u/ztP20DRduJxu/xEpUy+aQRxl9EhSzK0Ge
7CMmXaC4Lqh6K7GbIFhSaZIsYY+1V9/DJFWD/PtUWoTrvCoJ0XemDnn9hvocryq/xy71JwrlngqR
3nT/WepM7NMZnSx4eMzUBXZvwRZAIfvM4gyH85XIJCia+jbLkb3N/oRYA2Wiaypg7pXuXBVYnebg
Zo6lYLEEWQ0ifRd5xMSKM0Vsz5e60eg4YO4XEEs2+MfbDTS7/mq3roGmC3Xl25M6qqv4geQu6xtD
VLx+M04LEtG9gmYZ12B1xYLWC6ocX9kgSnML+PXvMnIMoCBkiSCB/8Zq40RymrTgTo28G4+Q8RjQ
MyARzfy9jZsVrbEhtRFaNU8C/lSRGIsycHRqB2tKOHmmZM89lENv3PeMNw8Vd0uY0d79AgGgl36G
dPa+J4lFw8od9lv2ggohqwb4+U3/Y/kb7nvJK6E7AdHkFu3I7x+7JbWmvoyKUBHcy7VuYyC4u69x
c0UArNgLOop5xVDNVbxaDPvXHWjUIogvbmAdC+xd+N8CXEwnkC1C61TwP4zJDjn7ItpX0u774JWK
sgPXE3g79qmWLzj4XqOhg2PA7zzvOoOLdesnh5bSzptWVRtM4V4gPI6bV9SLgTWFuF2DibD8ZKqa
yigjmyMwcqRjguwX4jedPENSq1NhgYRniI4SbHJ+J5aVkkOB6LN0L/vI/OnOqaQIn48PRZmP0eTl
tEA4AMay+UFVqeYcjQP3ul/iXvEhq/3xpPNluyGq9t+8SMhh8gOmC9vy23v2MMCk8LbVSE3Xh1jr
moOKrbP9RBEO9GfBQRdwhTmGCx9yWqUZDoo9QiFgopy8dPnrVFHW8R4Hkf1Hme6bcVdlVfgtPYZR
Q/ISrV/kEEeAzOMd87gvzSBaXDUgWGJOhmEHfAsr+KjmtQUnaoEbZdsDWXjX0Q9tPyJMNMv6JBOv
7sbsAC1qjhlBR+U5ydcgk85kXmskx0AChl7Gw2rypGz860yWT8ftIueu+2i8xH2lujyhI6nSZm24
k6H/WDsip8yd5BZSlhnPuBRe7e71nkJkQXwV2U0Mu3immutHPBwrVVZJoUdz0ccMMZwztYfvKhg+
WNZhKkXNbOU4BECyC8cCJc/cLKaIVGjT4KE0DeQTIr/qbzUmjjksbZQA4ubRy1fIm6rkc+B1hm+F
6cvSkysTSKXCgVWkj8ZyCcl0IJRc/oRwKFDNDxvSdrfgIvRozdRSAfjpWcrD16GhvkFlqWCyc9sL
3IiwpF6WKHqKOBm8PNo+/Vb7cszaPB5lao/YOAuHBNZuUyyO5o8+iTNk0V3iOgKFZRl0+Ad9AvoB
jzvdNI7QwFyCcDSKszXlxOwPdWZvx7aobG6lHutbcSTsugdLN9LR05zpVbX8yC8PBKcZ4U/gBqxD
A7wvViDKuaC9FQMYJiPQO0HSPVEcskfFdzkRMFjl4Wjookw7RIa8TsIeMBpRjvqFW8LdqQuuA3Gf
5+Gfn8s7klhteJD4cBgRMcq7TX9RlT0qPkNqstBNUg9ZcfW0Bq8Z0Tp+WERhCT1/FYbWGTEAAnpP
3CtPkG1aczJ4yx9DWwRLH8eHk4JoScfaCGSYFCI1gREt/qZJsXdiFcMjl+tJElHhLp63wqMC4q6V
Uo7alBABhiNoenFIOVuVLzeIQtj9ROtAcr6CUoC4Ks2No13jjgJ3sPdAlB9UuUv0rE0vEX6ihJ81
Gwle4Vh0TG7c6bat+lg55cjg6ivJ/3uM+YLIzIXfKj+EB3FDunneSH9wFg1mDk0pRvx3OiLtcsJt
am/Aj+7ydBi8rRfBhZ2q7wPeYGyiEQPt1WzXGMS9Z8ueAd3+DspC4WXfnBKWbXZkZXBHWenWlBHq
r5IoJ8bPuluyTIPLogwDJ94r36CLZXGumIyOkFdqICVfeNsBdeLZwVIOsEwpIh5I0O8MBOq8XVQR
sfiAx1whAONR+FO/acaYlNbLjOYKJK3bl22V6/CqxUoEXPA7ATu6fA3NZLhaIt5skkOrvMY3VcVA
oBrbg4C+gnt5w1t+VaMP0zUuJpkz8A7ffaa3Q8i4FFiqOBaHuVjQBAAqSCufAcb/ckJk4NbhKHx1
mqKYXxA2EhIyKJGaG6v10QpeGk+6dOS4+USGIKFEIUnHbGDXqmVpZz8B/zZhW6R5rYx+/3Nr+x2c
aW6H4b1EXX+vbs1ZX0YGYuCSvKi4+eTIi8PRocQjFKuE6je9XYKMuScynB9gkZ4OpZ9SV/YrxJ3E
CQtA1YWZdMoFA8iTFA3ixhhbI1UQNvIeAjWrIwejEs49BMmWuuL+VmSut7X93K91Co8VUcToiZ8S
cAeIWA8suRrwVU9fuJXvIEUUyQ1hHDlfOuGYGtvIz5R7BHyEC0DkP83ifFCOSE+noJeU7dGSWArX
yS+zE+8SkdD+Xo9jgJR7XHKoYonjsryoawisjXZJSiftxAqsraYWOxS64ZTZOKxRAw+9E4BvHYB+
YCCZe8kcUPOadWRCwb6Idufx5jC4ZshF64uZZSLR1iHBufGRQJfA7UYd4rR47ApZL3DIPTqvV35f
EIbXui0686vsPNrdiwd41GCk/iOWSiW+STSnlLZyIaIRfB46Qa3ISbSmQewrNUT826tRwtsfzWID
ecPX3QyQT20tU7UKgDgVYI688Cvyv7pxFCdbvSaHMzG59lucEKNsjhmvCahcidTzdUvF5dCdiRuJ
bTQLauvoTEFOovZOFVEyJDlaNe4+KSYNJwEQqoXeNPhAEMUtv2lBiN3J5/3mN9yv0RJ0g9t6xhtq
2XNTQ1DoegzkGgxv/KIT07tBCzO1sq7NCAMXrdLi6d+OjmWCOUuPbuIdHqC2HF/Byqdyuiwf+5hK
Ol0i5fxNU7T8MQqsJsdj1c9HJQABiwCQW30GZaZy/YRHJtxfVA8yBz7zYvrV9tU5GDPkzcrJsEia
UbjzQugQ3YAduT/NUj3g7dAN+WyAXBj4iJpExmSOjl2zc1nxJOmUFs4MbvNHtH32cuALe0BSpWQN
0YBAFgSgGSaZuv1ZXFd31aN9C9kRkUiL2sKxRzBLN+h+f/ANIMYwaauQQv+2MlpC4gsJmXyxQJBQ
tAgzFgDSxLwAIlmp3FUdCEMmOSrcLMe8uA9v1rg553DoM9+RDpBsShEwNfe78XPjTFucPpVdg70y
4uxEf1ttv8JEcX4lfADVYTqJO8ovVo+58JjBlujngZ0FKJypCRl+dY2/7AUfR/QCO0cCM+7iwRiF
RygZA3TG5v83Bk/IenS8Cg7LXyDMheCULJnAroC/TinTtrxOR/DdLsiE0cnQ4jV09wRKziH99ewY
SFHaWf6IAawOa6xv3Ba7JKkzM3aTNyyM/H+gsNjNfoo5fqiOprIZ6GU9S5XUCIYSa81G3tTDEgOc
RHHB3J36OLEWbfdRE5gdhpvyqp2zq34WqKZLlnRpt28vUFTXFExQWxcRXk3gqvIUtDpbfa+pwf5f
13LJg3XjHHhFdm62DKLGwBsgjtg1qQEg2ltnY+M+HuGXwjF9oZQcjsisdoTpU08W53xYP9eQtj/O
x16tKM/egdmmWZuo77E2XxBm4ZYjh4C65JjUQkEoaHzJKldszuKv9MXnPfosnko2S9zdPilM2z4i
T47u7k6tsdVCremCLY2SXrPJwNVPNRkgmMev2NUVaEUvJP+frPMWWWBPkBNq10rYcIEnkx7TPhE2
JgugyNFvdlcIeX2TnjF46L2Csl6pm3ZmC1RmzeZ/ZtDjmxKUoTSnQ3E/0//Apfaee8g92OdiI7Lk
9yA14w6BYzRvVpkXc1CpztpXCyvAknc8NovEMFg0uOJyZsY1p0j93ySHQgn6Jx8lA99sQja2i5J6
Zqb4CNX2lQCT6FQcXRMiGhk8IJxu8c6CJXeJpV5ca4/TbEm/uk1yORpTxyVOB8PdpVK5JlLIHus5
y7+3Hj5EHAVfaaU4TgksaDRHagvajmGK7gGIi0aNqjjynQGnecFCKN7Gf3BPto1Uz0eCQJI9Zy8V
JLK5PgVrPfDnsn+XFXduMKWf72WJMd4z4lzjz8jLtPwAURS5EKqy0Roo+RFyx+AegMmP8m5ubW8B
0pk+ha1HO3ZMNrJyXdiziP7pE6/XI+PFLtZ2yg/81+HnbQxcn7/7zguRd8uh0wSjGmSq/1iPeQI5
4mcF182ckNtY7RFIyCH3P4dYshd3LBhvEJajhZvUksfKYGGAsw9cmF5WaDj4Ny8ECbTPat6DuorI
87cv4k1P/3AOsoqww6uVxfSZcKwtxaDD5h/cazDk64wTsFbeqU6owzKcvJyp1RtncFYtofv6b5ku
Cwtz8VLV180mcgUrZ+45S60LG1ghXn3AERRZ90Psn7Zwkj3rdCPW/QJwuTFi8+RKKDiu6s48Hb7K
/S3g6M6JL1e8sZFyt1qJkap+928zhn8UzsHiTe+blTpeUsF7N9zYlX24eE73rIl+HlF/FuDNUmjT
dUsZK+dsnhO5T9SSIFAC0Lj/rLtethp+tXdeSrXC5ND32zCRGGPxGeHi2SBfBB72k4NNea832oM8
zwe57ZJhr6uZr9LEtdZ2fNGrVIaEXoAKZjZcA+CVMf+eVadaHWcbmyC7nxA22Djs/FRYuefDkSvX
vL16IkWOH0jJyEPRW5D8xk0IXiEF9av3+HYpcWNXaNU5rMy6ENSrHWlFedjGqs31WBe1FJMJMCvn
vYEuEOVzOTIkqGKpTtMuewxWubwFMrl0F/A0FUyIyCShtNt+FWjdNbfTSpMVe5CzWObR9/AkRujE
ojfateqiRamEP18VKqz3ePBxOW2QTYghnSHBwv9qcyzgltJn0Iu+bu9zdQWEV/WkMtob3md0EEmE
oFJv/XwetfdncB0knEBJ2FgXx1tR5HleDD+DTnndYuLWc8FncknCstz0Nejm/Sw0wGA78IrM/4Ma
aCULzW7dXTW6RYyFrm4v15B4PgXyFvu/veOUYW9uP6rZdQfOB5ZSGIgJOOMxvHjqVi5sEsm0CunB
78z+R8+fHqhXH7bUp3GguYwaxPN6eOnuIdRKo4Vo3woeujnYSrTDnPPiX0N3KTMi8kjlFr3G6WoM
pYliSb5LtNE2s5VO4ei2zqyLafBLoloBq3Tj6PhnN1G8v157mBIIIcSn8EHYHzQoyU+8FmrYZj3i
nXKlC6BatMR0ogrhPR3RxW0nWrHcBHbTeQusYtDoaaZMTpLuNtem24sUaaN2FjNd3aAlXzya/Yje
3oOdNbpiUyLcqDcFlCUe5ZLuchVsVDyZwVm6acJTGFDAUkbmxE1roxKQJ3y4cizPMJkucktYA3xm
vFXiyxv5daLenwqA3TLA6V3TtkIn/Nhj/FlTLIBEgourHAtzGhDw0EGHpwtgbRRkO1xmXGPZqj8M
gW4m9cKZhYPHb35IImktSB7qMVwpjaiQfso0A8Im2eYX8LEN+DtbdqR5g3bcOKaZBK9G3mxNYb6C
w6BEob/odDvg/KQ5U7T6cKxOxmSt1Rxe3rfBHu2+DGLRtAvYhDX/C4Tq/XGwpeIggGgpOZJ01gTV
FrCTIQuWFn9bDfJYgMCmta6N4BO63D7BQMtL5chW8+Lc0K0fK6V4qarPPkkj4U3YdMuDz8ek+681
cACne7+1gkjfCii+eQ0Glb788x/NTw+20Nock26C+7I/LqvrOHrzxrKzy1dL9u4+Te7cQ8043HVR
Wr17WoZfwuDkIiIeAD26AcXWsBv0LqzQB93B215I9OTZp5n2iatqZmfnB6lcsKDlkgz1apQre22z
YAW5arkt1CSHmAI+Es0BX24ce7zNXO7fB27fcFA05jptG1yFGoj7KH5KEhGQCdb+HJej+C1QaCow
SURcR5fd6zOFYDUke/rLlhmb0oqA+XmSkACT/OK2VfepFtTdmwVzGoroR0KPG4daJ/hroSeIEOiu
JaMvOYcfj2cHXXfbizsaUMaKt/1MPJKiySHvCL9JDA1n2aEuwYUs+qAW0v1ZVwigpO1igWyeyf37
apBzytaZkZb+N7kNZgpgRTgPLe9+uS4YP3d3cKQ7iTjNJbclYb74ako96nbtWZBhHH2p4gUXPFu2
dzWpIZq1+U12Jg8zdame1N9nRjqHHkdrO4Ree4Wl2UiGx4mDuwePxTtTV68F5EX6sGeiT868WhEb
ovqWwAZWn/+sgrE2RT4qPQoKSgbq00S5+XJLQrMFMMhAKXnFEfdCmVmDGP+s+MobL7CBQ+Ogh6AM
bsn6qrZ06HlpMb5UX1SurgEjizoU2YO0tqZ/g5FqivoTyHnpShF9B05+qExZZlt1vs1vHSgTZzg5
d1QG4Kj3YCCHTn/1u/1L7PWP7GQXfh8H46rMa1Tt3F8mR454dp+4JPaVgc8aqd7MoThoMaOU+ZNS
KSmOH/9ZPbm6/4mR0VfTeBVVkBpXFBzL5e20jone+xjyn7J+6QeoFu6H/BYlzCvGV+sru6B4rwJp
7YEUPjc56uvZGZtPYpgCLGTTVMTubsyRz1+TGYJrhNLHU43pSqeFx+B+/Mx5JyJHtzYE1EY/06W6
lgsDMgI55I7knrZUssBKKy7ckjpofFWq9EmG9CMCe1eg/i+m3R84cne7BqWyyBqgtP4aJiYyfiiW
5B5VLu8PGGhwjSbZOWqq/n0hWRLYMsYhsJe28gQJoZXWKJeoXujP5YeLqLfVRCr6an8u5muzCwsp
d/UOqrVWeOC51EvkA/AIwI2zHNtMaWqYj0tb35oWJbnRKJDMJ8tRCLdB21pkk4DKFeRyg5iwrqgr
t3ukj2k4ss8lTKYr3Yj+S4n3lAjUut89S4V6LGH9BeacABZy2H/hUIcEmv+9eCOYQAUh1besxcPn
+ib3Ooj5eY94kN0nbaVunW6ufGqm4K0G69EzEfyJpSkVtR+G+quSY1/eELkxMlCrPP871V6pyiwH
o9v0/nE7IsqY7e2MeeW4dmbTHZB86EdU5OsiFU1DZmBftFNzpCwmiZciSVEgp5qkOFF/G65YPiO+
GZj6reqmppBci1HTbuuWr1OMtlt95Br6cg1wG5YMclYs+9GfAFwqTvujG7PZ0do4mLMXJUedIroj
uGbbC26hShiujUyGOT6AjkzPaL8jgdWtGxxh7dWgGjiWqXt46yLAvqnWtW/j2d0bMeg9J1DqbpCV
dGIv44ZUbZrUQgGBDw7LIzZC7AKqM8p3uEaw/Fu1bJNVDeQm4Bsg6J/gCgJDBeuKlU1CIQuvEykP
tr6ydTS0G9r9EnjQnsHGtHlhNaPmAVhdNl9kxitc/UT1tA1Qsq4jaFicwY/2lqITJMdA6R6hdr7C
tJuYfJsb94/WZx7PhAdh3fJEuDzZ/o9c85S/nMx7PIJcnGLELvEARhxSwQdVYGCUHKXAzC9gv8Gd
FDWaDjctLroXrFuTqJ1oPHKVrrtptBZ0PiubCmMMidqEMu2yI0ND3Ae/10fvUR2aspTZhFXR2Phi
cCPDEkI8h/q1V2T78QZp/7YW7u6ew1PufajErKXQConYH3J9oP5cKbkmXBP/2CFhLUUoWpcD9O3/
NgvxwjLU+gER7VOr4u3YH6AQQugyTdtd2OpexGjbr21qHjNqgKONHyGHzi0YCoPQ0V1rFA+M73mJ
MuhF91tSaD/xq0GFX+1Sk2BGolo6j9c6go9u5vhsq07GLSbX2kUjtOzSmHvv+NPsuxgUpuJCKB7r
kro5GsCT41F+R35gFlhRQIPGtf940mJPbVikuk27/8JugVLYVrGpzObNBjHGRXeLmPhyH7JXHyeN
9dBdMYI1ZxNhQbC69gguSneHdFkCEVB8z81BTFjsj1g1cGlYu0u4ULNqKu0l9yw0CooFpQQ4MzIa
F5Gdi7O+4zJgmrrN37xCPwy4M/btpzerAvP5gfjnLHDSDyFVTvKtLq0qUrSoKywFG0yIntwU9LL0
1YnL5lGPcSfIm96vhz0HLzkR5KzIqfiQ5vP8N5weQBNrx9nE996idukklKfy3gUTIfL+E5kMn1bc
l7L58qyDS6aeu2OiXVKuCVrgmgic1cOQYFC/4PLOjdOeMQKhnQH58p9vzFyHQU0mBPbBen/5h4lI
BB5z/tW1wcUaCOQ+WCZAWzsb0Z5xiuKz7fshOQulAVGfebnwm3z+2aeec6ZS6BQ7k4Vk5L5nkrz1
Yci2TTav+nvvd84WMRGfW7U5BTPXBBEz4BsZJi3GUuoJA2DpwEGTw9R+IpNskfgloYxt9/73YBGh
vHBe5l7soKfmJIqDASmK51W/b2pmcj+gdRsbGn5JP2gTZTxVTVX870P2JH+0ZgmXVCL9vTahwAQI
ml8KbijMzwFStuf7dZ3qU296Bxk6L/NGSAzZe0X44lo8QXaj24Nsc+UU1U2VghycRYlemDSXWMtC
OCxTYS8c/2cw95IYK10xvibGadiGFoiIoNsJptUz065iFB9jzO8+mJywpwjClBUUgTi6IDyRJY8S
5vYhZKoVG1BIpAvpsCpi3iRXu5HSEA5rYDqxQlBlHy97fH8s82mS4JWImNcrCio3qGzMuwPVeml6
mboRBfabu7QTRym50XdcZY7mHLX8S5dKpwnsdgfpNFTuPlPi2uNj/DiY17D26H2IKH2KSeOn/smR
KjxEKUKiUNK0yZZ0ZnQmhM7GbqtiLaZFbmEvLHF8C9K7pA25r4mQlQj0QtGX1tV2ZzPhM2b7dVjW
YjGW/+L3/KQCjF/HuWww5JWqP/j2ctTQTkQCcBYHTFhIfSOYBRkPKkt8YEnuKAq0pZI0YAAc+n5l
dNF96CcCLRr/5ECuF8bj42+vuebS/f8iPaIfHqEAQ5ma67anldILs/NFGSS7omQ3nVoxbfvVzue1
26NZ/FazK7Eg/f8XydeyomPCAx1zFBD23MewXVZ3im5WIm6zOEMFM3C1gYAadSvXFYLzRmqjAmhf
jj+vjISXURKWrZcOtplvH0ume1DAa07CPip0kEznQeigLf8/U2DrOoA1h+40lS6/VlvmJQ9DowCk
sxUIVSlQNCeRf21WaAPtrK+SBVNsfydR8IbT2qrpJz5c0DOJC9oEz2WWlpvr8xP1nu9m6Xtt8YYa
hqHBkXfNOKfuuTGKJQDWFU7TnX5zZ4J6BWhcKdgxr1WhMdtZB7uJ3LuKnzsm8SrDPgfzq7RVDoDH
Tfi6i+2KqauPbClSufHy3z2VxNz4vFdZepdsq0BVEpBEOZ150uVDRDhorOzKSV6mvb+anCJ/PN3w
cPaTI5uqEgBtjUs730KNIRLCXkBIMIW/liZjd1wfyFZkZPAgtGWh9GeqvUUSbsbjnU76uWuKoQpN
FlNf/CPZoGar4oeyQuc3Ny9OyDrPHvTFx4uI7vqsM/2v1603LB+k4AuQJEM0rpoOeAGZtCaUPUt1
Zrnoj4atV9yITAdUOf9xKwDkpADITv8OneASyepXOihhXJ7hB8bByxqhiz80A6tGg+jBGBXB1+2x
tfTaZ3e+176a3I7Cm97BznsJiPMaubfR0hkG4p0lpUhEYQnqPefFG8Ny8QOMNMgM/qMyNfE/2ECQ
3B9K5BA4OoIVyLC2HMYK2lOgLaTPFzixvHhZnLRZ4FtvTfnHyTzu24Vug8/AjDM4yngdGc+NAn3d
lP2ONHrtgwgIRjrnVcMJldvk6H4bi4+ZZLEJPePo85biYtCE3HTU6y8TcDuwqud1CJ4uLluCKR+o
qGUhLp5gl12z6peLO/hzUGoND6M8cg9kaPHTUUKyx7765YTRBdLKNYPfAgP4RCDohOy0cC09ogxd
j042C9O3pEQ1VZiCAgaI2OKKLieA7fKDsKy42IQzCEwKtefdJpngJGLsvx1s58Bb4MaU3+tTF3Mk
zGUbUY0NbrRMjpnpwnzGhY+/IfAKkMFnxp/I93kROduns1NNtCZo6LZjgbrkeKpAZ2z3C6ow593P
hiTRWanWXPdufidAFyyp2pquyBdKMcC5tY/hGwBUFMsYOivboUVPA+hPo5ljPq1GFicS4dFtmWO+
IqK2332b46ENCPOuXpG8er9y5TPbCKGAlq2E/zptJ1OCXbx0dZmP9ZHOQwY4TDBzq9/a56R7MU4t
DMrvowfhXEb87i0af2l26z2DGkw1yeJ0r4KY8CGyiR3lNSUp5cWQxV47ZrO2nT2pRV3mVQjgQUn5
xq/edG82VO8nrGP+FzBX336EFYUu4iWx1+GtS+Pps83ghk/OFBfhXIXzVwLZw2JXmHN4Qf/q5byS
uqPrSTMIkWHzXKNJPOyCCbPaqZI0LWJhK9JvdENZIrrGIUG7T2/m9XgFEtEgV78umJJ1B9ILuAsr
OWkN7IPsEWjNaF2bJxJlIE2gb/pd2Bpoo+x0g6JmweHA0aQCcxPBdZNWU4sioyq1t5n//6FeWO5+
OK9SNUCh/JBJwIRbE6/yFvCLo7U5QbYFhzDNMRlg2+jEy7D0xShlP4lBE4lZpjfRe7WlYJWrz2Y4
J5g7AFEQ5ormWocXv0hEEhEai9XhMl+8ltmSdCW5uo2XaHSz8CeR2RXpTp7OU46H3XuqO13icGdK
/2cu/1iv7bXqUNIRtkkdX0Gw1DuO4I81bWkEIo5CcGIL+/4GJd/0UA8kgUPeiQskJAh00Ja8d7z1
m7BfDAFiOxjtHYXiJ34I6plJ99nX6YXSq878PKuZeHEqaps8E2yLuKKt51sCdY6pJgllMhoRyfoJ
gb+MKF+18ZGFe6zWW46KHPUkMZc7BkZ+qA6iI6qjbEE+tVGwv1diYpfbHCkQeebejVSwltNinWed
xRLkD8334HyUPeQaHUz5YaFlF5cWmU4Yi8rmCj3gCxTaeEXsOGFn/56tbdOPg/zEvv5GQJYcdVvs
WzpzX58nEmAk86AjGRWXpK7V2u8OCmNFbbqmpnLmOwmRGGc826G0MrcnLwWjhnvynM7WCtBBeJIi
ehKWOP0rjo+r33MJ4iHmQXWE72grloRrEsjU/jssNKcVisMf+9MlhaT03MNYmB/euxkczyKsfsUo
aUw67RihXvNcD2gPhvpS0Xj6pwhRsfkHewMRYCyPXSQegOaB0plBcEUEIPLyKlEUVovVZCU9Aa1L
CJN+AbE/fs2lqB9zzhczqKQTB7+0hroxeWcd7nKZXnhsz23jTbas/IquHXiv20eS9vVG561Tg+EJ
i+xn4kR0m7k8CCKuIfbfAOX2SNewB6BnAmqJMrg1SQHvO4abekTlqECbYchD926uLwLYGVFrTft7
PZjmC2iuRL78FxiZDJMnlwo2YkklweoN18V87QK/LOW8DsYuNQ7USq1I8y0Fbbw9m+3GadQrJtmb
8JNrSZPtGplUAaAa3DbfosVzHoC7YX2IsdU0O3X1GCMQoAYnjAYj/linNdIuxE9nW54BataahEMg
0O5VJz80tarSYCv6kNGqpV0uQ0+G5OUNZEJ9SMmJt38ZBNpv7+elm0aZy5QTGZy1GaZIapG9+DSw
XzSo6jSneaox7D8LB5GjZ0WT3YUz5KrsrDv0P7Fp/IGlXMun9nPqGgZvV8pjvJ5PmMfgQG3fn2Fc
us0ExP9Vaf8qSPeVIJB3MXHDqZ3AOQFeaVozAWADQjF9id+k1M7k7aLfQEmfezo94F0FcGlFAOH4
JFoeXIG99v9lpx28US6OcRr8j905ElEPL0nouAtrgNf4HlaViFOqDcUhgu6SXVOlZoILYMvw9S2d
XZUMI2+9mDmMoMYjdKMmvS904Zept7D+8zJTPOt/UfEm78NlEaD1wyDYh1XD9K7RswUGcC+b752D
pn2WCWWssaeTihZvxj0e2ErfoYIF7X9b8NOvTU87kl1CoeKJZ+Er4HU1AfYxsfv8NQ2Op4E0UlSK
1kIVaOy1tYWCJieIXwFemff++HUM0z8IajkbqyPtFJ5Hu9iw5wkfnRGypyqx/LWJK7rkL3FuwTgn
ku1Pbaf2yLu05MvSEHCEre2iUxzlpz2wVdcYLzsbYFOjMxlQNAkKMPO5pvnVhQcdrOuf9/E+pMT4
w5zMQwZoKKWTkzXsdmGfDet1db3xb/Mi9Aod/YWBWJ1GsTnvNlRmBOE0B6Gu13rpkYbFwsO/j6kE
W1/0kBwc5HA7PsAVseT7fb+vmzTHV6UGh/xtY3xh8lomUegldWZZ/lomRkOlReziMb11nAif9hg3
a+7ZIt/mCCtWKdlUdsu4eyOJ0cf3HBckcw887fad6MkIGOT+HPIRI1TMAJgFbLt91yWOeXEewUFM
evYOpRbFSaw2C3eAiq3Vce88uS5wm2nYgzUk/u8aOSr50Ik+3dqh6Vlq7zAAmKEAwIG9926ytbtJ
8JD/e6oF0ReUyrTe7PyF/FtwFGIiiZKblxMC0HsDnMNoG/5EgRNzetm3+VDoOFHsL1IE1qP2xFFf
oOMmeAoc6kBRtUgqUjqySeU/HsUlYH/fG4AqKDk+6/KieT8Ftt5bzIIagUvhd/vvNRTrWQtRbB4d
4bkuKNbZz/cwpe1XCET64rCmCEI6ct/0+hFJwsUHsi6byVebUNXIL9yBSQYJYXC5+CbsRBjEWE/X
Ay6jM9/5nbiIjR2k8e45w/RqfdFLz25D16at1nho84JybPXLwNtmmbh2le5hLMR8At5gVAI0zPn7
ZAdFgX/OoH1OCPs+r8x48A88/kQBvzU1Ko0mT4xAhYkDtXGPwjgUoZoCGj9FqLsw28ff3C/TSJZd
F3mm5i3kE73MvY6kngZkKBDCbCUfQvF1m7UXwD2SNaHpaPvgcRO7qCzqiAOm3gfMFYsUmBbGBt+s
vhN7DZfPlFeOCEmDgCV9CABk+M+x3Cw/2RhqK38I+lM8HxYzHehr1WLbZeiHT2iUXFHCfvq8mGfx
SPUZuuhRWj6S9SvMJEnLNYZEFgnf3bhuOYMpno+N8qqONzOPu+BK9A1uVaC9aPGiahk4LZE9I6AW
dEd2HPkem1aRsrymkEprI+tN9emiOHa+fe0j0No3p1TMSpbUhyET3/0zcNZF31pzXnxZnTjysY/M
UOUMao4y+r8UCDR1fPSsY/yh+oAcknqaHen9wSFfjGfZheDsuaVdC5tjfSAwUhdHxqdWLI47R8j+
g4A+M6angxljkzzmdR8sX/WQ1f5dQs6G9yTvof3XiESWfvclw2SjqS4RHHWhRQ2FpuXffIjwcdPi
z82cPIWjG6BQuICs1mR9XLPWlLI5rUEtxJvIW1Ot3LRUdPLX8xAIDhpVN8JJUsEv8KnHnQoOgQos
NPSuTcXYuDO3J9Hx69bUEHhRFk/ddPQG4kaTRxgSUAcPIqASqyRBxQqhj6SSOdpizNGlaWnpHPvy
KesKSDwcj85ZYT13ERebf0fZZcIuQVlxawrk5vxQ+Xh6T/9MxIhG+qH3QgFuowlwqAtAYXD4HQc+
KYGYMJntHaUJCi8PpEl4OmBbyVx0Yjx16mSQUcAXlCAUKPU5MD0fjFfz4eGP5NLLmWe5n0rQKcAQ
TcK9JSPqwOG4TG4UE/mf9SxlrDZgj8EOFFjwGu+4S3GPQh66CXE5CDPy61C+cjRK1afAdNpuS4yw
DrdKfV3x5Pv37pcSVNRNnxXgsoQiTSx+AfEauAHzQvh3SCG1IVcmqzUdLe6ZeJXHUjkwT4fd3Tmw
zgV/jhdyHwTA20mRCNFm5txRMlF0NyggCJaXH2hwNaouH9RwZJsLtKzxDMnyiHjfGpxmCPBFV6BM
KqN1+TcWb4BiCxQgFP/8gbLV3XiJsdP6KpQHiqaHWDacne9GbOHGHkUpzYSXXMaUE1Jtr/ssEJjM
d5BXiqob9+68lZEuLI/cvWkm2y9+OSzNsQ8QYhF7vORDUJ2xsFyn4PAw6Zn7At1tzjW87d6V4G67
wkw24eUSBUDn5bqBIISiCfP8mQNXfzpNzPK4rZ91vbAh1RPgrWbmMghqAKIPbLqMpS399RN/AFWZ
4bfoZPndDW8nWyEZdcBtVjK6K6hYGlpBqKwhfy9xJ0yo/m7v+Lsfa4mRZ4pa6Ma5vW2zoKG1NFMn
8Q3rB7VcrJSjSgP6ELQ2VKjXuy4L5hmULAB5Lm43FlEN/8TC+22OMpb0bLpQX8fbrOnaxYFJORfk
7F2Gpt46Cq0rx9sReb6H2KJAJUNVJtKIDR3R4cGbh0AsJ0a6LLy+JDRgvinD5j/dj/ev7QGhVRrB
bt/7HLfC2mvfovoDBN1R25n+c0NJWSbXqPwtPlZ+OJaUQr9Y81hHwat941L60GPfOX3dO0/W4yEi
AAITcjqXHeP1pdRe1V1LEk4A3WNiUdbcvLiqGIdn+SrgWVym7Kj08ZWouX0Ij1n37/fxd/DcVPXz
kfYoqIAgJwCx7g1JpP2H8//dlkE+hEHPSIoFyfmX06GP7PXvq5HNG6js/BumtY0/fuZAWjw9Zd/T
kv26++q6qu50K7lYADXiLQlSvveWdFXRb1p3BN5E1Tevbr63W+HoSRCl+nmA0ZY4mlJ5meyWnfda
vwH/p8piaoKTnLzfiAKxE+lgJYjzl4I6//BSFS8GPtzjL7gKtr3mhMkeZY1yqbCPUiuupZTUuu2I
TlGafXVzYFNOFkAqXwH1ZYt+n1hHiGuALqw872DPJ5uJtFjVbSDYnqT0DkhLv1a9RwBKrnxr/88W
HVnKuqDH4mdfhEigQRpqnlFQVnI3m15n2ZCP+R+/JHuQq6VcWl5CtyByJSq5B3P/BTudEBHQgK/7
4LN1Vl1EKtwS0GUCt4er37FDC1rsZs5JdMjZZY1WXSbtI1y5MnPERVAzPHRPeQOEJYeJJoU6qAWA
YhwyHX4zQcI37op3/qlzcuKfUmcq4nLmKvxYM/Ln+obUcUUIF0i2GLZTd37Br2PJqMA+Kpo+HeKF
H8XFxxPiciqZC3xkuJw8/tFScwrMzFJU0Zln7NNUBxTK/JbjtsFGmaOMfalkPacsvHVBtSG+Nt9t
viW7bDEPsd+2ASwb9cGihtDDd3O98tqPaZjk4q7K15VKcyyVCH6VhWh47FEsO4GtaDsdzGGK96d8
kb3bC4FJl/4hxHv2dRpVzUIKHMWDUwgyMwh7jzodaknx8bZD15RL7/PMTn29Qiylzp8DNAL0djHd
W1kTS3pGOGUVTTZPehp8+rIhMOI6N5fG6NiqG6g17c8ODAFHza3PUr9E4RHzxHmDlEwhRlpetWC5
luPKuoxUmrx25eorY4hGP7gZ6mBmYh6PZJ461QMSk+eY29jV5ybaMmNbQfMQHKQVPk2zsZqUKAH2
q/LjD8Dn2ro66UGXlBCTzCf3DssWFWT5MKAsFgkahcNacx+4o+PllSSslgFhB9redoFOAxy5iZAC
AJSquEgmwBOoMRTLG90Iuzx3xYzKt8z4wXv3Qt7UmZ3dN8wHYqjgV6XsPBOvgbuhA2ZbSN0WotO8
5aY0A18lbpva6Q5kuXTaFpPXaZ81a5nWfUv87DMO4biDKaM0VZ9VUlMwgpCsh99TBFOqNGxewqqX
D4jKsDGjROGmAnTt0BpeeFLx66bs/kR+p7Qc5XiBrH1ITMKMxOvCVznXhVLHF53dRUw4k79bUKmp
89Bv32PJLrCPy1HG7tS7HxmPNw5IP79Ts4T2UOy3ZVcvXc9CsDpOuvQ5oNIUn7srLBnRa/nSru2P
HhFMSdjsz6NpYJPg2yXHA9IKrwGuFcXg9x/cZoy56J/bZC2IWxlcPGnIJMmJszSebsuh/0MBCTix
GpJSuxhtV5XNE7B7tjmBzsjsw+5g85ic+oUDow7Mnodu0npOU2tKwLdrKc0QwLcZqENt00UhwfyK
iMDlOZVxzlSJsC6RnvgK+2W0w2+plYXyoKpfhXxFNwIaxHmqTrj7jv4XMRlILtTWX29luth7Oq0c
u5n/7n+LX5QtLneb2QdMpWAr1WWSYCwU/l9TPSYAyFMd/pUoa++Q8vHW3yrY7grZCjkJGpPCltsc
12Fkzh5aNkz2k+xQOs9vj6seg55NLPxMrkSiwfE5/tvmWtSeLs6G1xJqy/iZnYdlzfPbR/fBqw8d
fuCfVbLewi7YGwXI/L6R2ns5qvFRiWzNuVGpcjp2Hxk1JcGrkEnjPm+cvl6LbuSG3NYldUQH53Z4
VHIAXswGKTWwbHPEHqTQPhUmxqXwvFJRcMnkRx6I0/Ci6OiMl+Xjem5g+d/EJjbMGXhPR05Aq0Qx
NKl6sTcF1X+9Yhi1/9P4Jan8WJvx9yUIJRLsZNdyyM9Wyp6C2hqUBvmsBDnNTetwtowmhmIS+1rk
uJ5KnwTC323AaKSadXrpmQG7Qn4TmnUweFJWafFpN1jszzdALZDCCCy3uVArrD0hDHYeXXQonlPH
vfHbI8THz/ymbaZzUn+J7/aZYRgYVWfFbWNYtClYoB4UBKx3IxNy/Puhnyf9SWpGWI5Y+Zi1Hl+O
byTQvvfrkxaigBnMxXWZIVzP4vMYpoZB32U66eZ8tqUfgDfDZptQv+qnxmUyJ+G050rgBW5fDlHM
PzfjFwZE3Nf4Nn02XnzeCQsJv4F5VyfzSRzMWk/8zilsQblxIqWcCoggKz1LOaIbUHO52iQx7VxO
fkkbOOzf/qvoQ319gUPP9HEfOdvxt/T/WwsIyA/65G8LBUu2EC2bbvN+UgO0wEeJLpC+jQRT0pT7
4QiESPdqixkiF4Iqo7r06dTrvNMHuIEeiSgKKre2C1Glm80Oqi2uzF9PWxC2mhmbALvI0GE7yfT8
LEx50zB0ZBZXdN8/rwDocP5Bp60C0ykYyamj1k08/mg5L/8VKgfb50ztfv8c5zXjQIgIqrL3GMbs
CA/hxovLE3zSaGNERC5P/ZhmDIMbxwASKdW0xhMNyWz7w3dygzGxF0Yaj1LFkD6ffMEdmVE11l7T
jklIMYvdT6Iuw0EP4R7DdDofw36nVxqJGdNe6iAomu0QtohV24keZTROx+h7Rqm5tFHmqDh2bZRt
SsqcEXbTMnhqKiV362RjvWp5eW82l+j7AvD3NRXuDdKs3ZBTLb3fJkKrBmZf9lL3AsfTybkUpaBi
aQbJmpWwY6nUMQXK5tKF9tAMztuRca5TgTbnqK9+RlOkQJGNoEsRD5LYtUZv7cOatPpB0s33Cjhu
LhYWOo4RhzpZHTMs8GJXzRZFbUu5/caxWFXKpwlbao94Jt4JSvCJ8JGRT903oj7piaTwbOWdENwE
lOZC+ja+rBPvPcs7yFNah8W0KSqxEgpb3RFXZ37N0fc50yH0F/TfCDkB+ZjqrybSnDvCQbwyEPKs
6fex6GCEmXmqNMNWU/kMZDjUcmSrzI/7sOnLj5LP0nvytxxg4wrt4+IAotWR/Uq3+2hBGdgb6m+W
L8JZ/ZsspcZwwgI0uVLTfJH2GkLxEXMeyyQ06WRoQc2SBpV17Ej9Heb7FtCUePrXZbQmTjccBI1C
IYVjBMyXOyd7Q4FUJTTNrawQ62xczOWKr7ikSArY4B5G7b1UDiFCeQPQ0KYBp4Jmm4OhY7y53Hcl
IGQyQhgLpEjnwpwsl+z3l/9vdhwJSt9LNOlaAnYtZ1arFOsIZynw4Pkg1YVaMQK0c1t1zFQZfyUT
0FDZNGjduTvtuOstlAIfKOQM6sy9CXH5CcuMXxkqFstDQN7s61RgtM2yz35hcwCL/sgRmGa9nM6b
jhcvYG7m65NkaCdk/seNQeXY6li73HG2plx1GZAz/2yj1eUIDZUMO/1ckKRufJzWxkiahqS05UZN
Kz4BwtlmVf+llEgFnvWciwawCHKA8JTf7KUK4fVfrrKoCOqohudrzvmF/K22otELPHc0heT8tHeM
5MY/VNbNYy0cQ/rLz3SBcklwBkLm8gJ9Fh8FxsWKrnOhVJFbWydt9Zl2PTQxL54ImQDXcc1lUS/a
saN5y7XzkoAHDIhQZOFjM7Wuhe+egDLonGOOva7zPngp214xc7Dyen9RuXA4v4+iReaeLsFRs9K7
iyCiU9DYo06aZwUXWU+AhenZ2KNOVkFPJY5SSgNFPMwODSW1iO4xSd/ZfaWouOBfFHhosEup9xTl
kM8BC8Nm+k5EvQ6OXZb5sLr1SAmmvMYQem0mhV/kA9iAH9l3CadX+R41cEliAK2bxCmAW6qa3KGz
j8mSenOLUDZPo/gWOkdxyuG+QDh6w6X6SkI7Ey+kRVfQE/pfM1MPdzvNQ4W1An78EGxi4qGOT6MT
VC8e2EuE9l8FdMEu9FIa9yyLmdw3ZyUI804czYlcD/veZsZ4Jj4r1QiJ/ud1CuwYmXmYfS/XjqhB
0rZKWhrwmRMLVHUNY7pLKwy48zGBUkdBvr2UEwusd9fDmdfewlCJkhc03941TbAFg1Sh3kRfbxc/
hOeAIzHdgNgGdZ1obhvRLmk+Os4+Vfsh3ELlWsHtjCm24Pp4qpuoDNskx9Sa6ix6v47h8tmvtdvB
eX4vR3erZ25jc36Vqp6wKp3J9XqbD/I3iV7giCPeWRIFrRXbQ9ikw1iA1CEWQUOuy7HG5xRICJzT
vddVD8WXKZoP3vy+4ChUUcH6O/GPQ/SZQj45mRqOYsW9Oz81f2HDffmZNncpUpvz3Hj5bqe9L6dV
GVF+Vj+xQwrqNN6WFDgvY3qfurs+DXBt949wSHa8vRH2FV8MaDw360oYvjaaUdY0MQfV8eIO3w5i
gXA7k5tUHgVv+Rgt6adIwmeAtu4/zR4p3eCWEtZgj2r29esxzB8XkzciFA03obDIevyD1QIsd9wp
tVQ53aVLhA1jWMdszTJCSBh/CmkGpc/hdZXdQXzKEUHVpfSrn/TKtBAPWaNZQo/XzY2sjbigxhg6
cP7EMcapXmxTGIV24GogErOVkrGcCujP6eTZZcDQprCzAW4yM33Nd8LhUl9Qlr9if52Xsa4U1j5Y
mY0lDu6BbBiAOY2fobxtqLssl703qzY6LVnH/Z0D3c2T1AwQd524jv8LDsnYXjnuTR74uPcC/tpi
ndtate6fNvH85DG3JvwnzIRhosjL2nQTnQspwZsNiZ0RgpurDMmWNfoetpuPFxNE/+CfjzQTjp4w
o5t5NFJ1NWuRTrqoTW8ygMfGIJCmD0KNFul+n+ZrMyfrtliytPh7vkbK+GIS68aScYAdDiw+TlUI
lUDNvgvatmbexc5evfnGlnlmVRzSwYUCKEt28hoINA3nNu+SjvrOZ4NYBcJjBHi7aN4x+xuf87Oi
Lp4o84y/OpkI8HJYq7F6DUXqVi6oinkjOKlXcVcitcIcGf6n/nTauT4IywxWv8ofEHn/DKElSEzp
2QVVStBk6fu+VZb79I8TFO/R3CHgrN7ik8+8LIOX5T+Rep6jlL65LMT0p537yq1tKJuVaMMQrhoF
VnITdtNau5Y5lMOoaDRmGsPx6ZMeTf+b5JslgzVBEsHQWIpXI8xbuga373ITBPkQHE5rHss//agz
VgEwbsJIpfU08FBybOQ/fyijqwx3H7wVTTZ+j7mBkBBTr8DOX7bpEj1zCVsQ8h/J522n369AkEJk
SHnfTP3nISvjmmmGH8dNt5F2T6WjlwI60XZdJch6hjL+Ib8J0EiKBR2i94nvv2w2AIHHHfo+x0WA
XUFVtTwlWwGmHc0UZd3xlkzF1tedIklj7O03dS1vTl57MRNbbYZU7dCgXowtAMc/9ZrGNLOnHd4/
maxx4FyfIR5F2D4YZM7oDkjla83Bi1HYnMTggcYxMMABMQFiv4TvcteGAcZ11XwFDhlhDglYmsU/
AjQn80iR+9MyB1qyrbVFXsFjWnIYIXsoplNG6+noS7mkm3t/CZA+WXfdwdkG0YPeQpYMA5ijCRDu
hOSm1gnkGRbbDP3njR17ZKjTVFbwiNMDqlqR+B9GFQ1yezpSB3NOTDA5vo4ywAw2hIZwVkJjar41
7Rmf+epPyTrTsxmFYqTG6FLhNYo25xMQrdf22yPhGrs409aLM/rRl5ngISU805WpOJ+kFJX5Ezwa
B8x0bCH1zRtizREE5dzDHURlMDrTkzqWEZN10UsU9d5qSur4vWybu+5kYZNKSHiBl+c41Y8Us9A4
/zTC6sL3DoriudLtpm4YIlqcj2gtICmbXQxljDaPylUkJWlDRuZwEYo7T9EY9/rNI+GJLqyvbl9P
Sn4zd6ttg8Wz3cZjK9JPQ5+Nt7BopQP6lGTM4FSgdOPtKPjNTbztic5sCjRvB8AgZy3rUXIZNl9F
q0xeapO1qxs3vCl7yZY7x6XXlJ68hf9BARyWic5vkAkI1ol4c7Yt+OL5wlNzRtN0g2vH01MSv+W1
EqySV9dO6/61eXCEp32kdnSLtNmRTzFAAxeBIwvo4lPzibhlOYigFqnPT8/5C0fP4r2EvUOMU5x/
0KVGozn8aayeO/jVGr8Kxh0JYSipiY/I6kv2gbffR/LGFqC+lGp3xq7EpbYh7so+eQXkqmEw8T4L
znqGQcp5SnTYBnlyl1Gmkn9lKT0FQBPC2ixhg01Y+CxdlgsdDdEvLLsSbTajcQa3mlRvp21Vt801
O1oa8DL+KRbQWmfCjBBY0+rc5NMwljljHpeCpTNLkPdRzsBc2TTACL541IPXPoeD+Xuxz+uaSZI8
f5oC9KH6hecFtZCHZq+yVw9fzWjlgasyiyl6ErJlJnTio3ijD0hHIK+evUByvF8dAYx15wmstEdQ
tI/1UJqZFBEif8A06Loq/FVvcrZzLeNFc0YE1AdKN632UDnH3E42hEM5PeAYG52Hzob3tuEDf4Ah
dVI5sYp+Z/tRAX8EsEga2gMVukg0/mTTv9NLX7j6Oe3bSwNpwXWSRgAFZaOImG6svc/w7zteHCHz
/wuIZSiDL0ngFlAV3rqTSG7TzHrpJYt0JuPBmsrSPDXd3u2ZjqYyOKbhkCUZTg/yhupAIxUz/8+S
YYwX4xUtJqclJQ04Xqehf3PZAbH2azVlZgVnanjo4D/9yvIpJquENeUuGxPraOX9B1IsOjVP+hdt
1rCT9nwsk/cozJwkcmfRQ/8WnkdZUiNU5IzLm3Pk69z6iIWDNVNcgFmEcNxkxFc5jARMyZG6PQlZ
MUz0SM74s30Amxuk85aoa0WilAfgJIMUHEZSMBU8uhHkC8V/iPAWkwsd+KzorrJWMB0ev+adXfiB
qGYuKb/s4DtnEOwLELfFb8RGBBFyzviEda0QsLKaChyjv3Uga5xcsjih4XFAJ4FIcu71cTbXc4uD
ZUjRwlX/x7j3tkRIOwMD8xrkB5OJrfEaG3gtEVPP5SRykfNy1lKerSWMLMIC3HpopX6WsT+Yf4aT
L0BCGef442TPY11pbCwD3tDgiR/3ihHSrPTuh+k+0Wdj6PDqhqhI8zRDmEHOoBjA3uufbiCZeQ3E
qbtdqX+EB8n0Jlyhs2l/f3coNPwiQeTHyEFiVQtb+HuU6z+HVzcNVbSt4YQIoioS2uchdWO6NyUM
nO7qDsFN5KuXIrdTZjGr02qGSToyMbyGxjvgOi+HGPYt+WCl+mthZ+K9r7VfaZOlsY8yfdFkFWOC
EBhwIKdHxHnTKT3fcDxb53GgNhu0OFON+9m3eo/rNqxJnkhdBffHQbXH2t7tBvx9XsgO2IaA+09r
JlOOxH+L2oZpqW+yEMcPW2IOiCc5otOH4VgdGB8pt9I6Sk1Tp6sg5THNmR0FnCXxq+8AlFJZI0ub
n5jlPokf+C3mktU7e9EuzToFP9X6vtoR4Ek0DAjEVyDQ/aezCoG6K0e/lbXI7J7ByrP/3Ij0iSIS
EI0AF5+kexydnumcN7CJSezBCBIVkOgmrZ5Efwoqkayv7nUPwbbZr6abBMlYGI9TPz3dNryXQl5K
QHguYIiLxrOy1QMAf558bGZnl9lJHtWzOP26WdJx2AZjnqLEFEPgBV0e7NvmnSpJIP/gBfiqX6yT
GoSgfrUlKOHcPmH7xotUzWdv3z55KEJ9sH/feKW+QGI2U2AzWdhU4RPpLzBjgdx0Y5VS1RUu1XTb
R/GgOs3+v2gGLd8Qpy+u54QsiKlvcDFBlpHXelnnqkFlzZJlkInXWrELhU5Uo8m7l3HcCNOlBArr
8x2nMzPzgimuCaEYFJsuO9mMhZTzTpxgQlFO9Qx5VOlrnrzCbdJLuc7KtGpTVhyQPrFnwdpGLB8z
jOotx/8zvtpZGgE3YTdhl6WbMG0tYsdY+dQKGrx27pHAV3ItutfqAjCo/dM/vVcDw2GyxpJwBQ8D
Eo5igTRWo36yNij+kzbqhtXtCGJDgxp3F5iODpLg1HIYCr2n6qft5ilXSKx6dOS2YnVEDbF/IPVU
Mqn6BYmdFvI+5D4FHAM6pCAyzkQknK8rbLA41MxLxoFnP85kIBfsrXHLR4U5HEoN4G9Uy/qYtJVT
XPe9bAm2rtv83gWT3GRqG5xBCrmdWsJX7kAavam7dOokiTwUiWXtuf7VSlPDL6UirH8DLw8VlhMB
iC3pNJ19Y76IsVjpC2rhabR3UMct7l7djCE8XRdujUdvqTTyhFMZHY5jpiR/nqaoiYhsiq/coIZn
P6Yl4q8hW7OmQ+7VP6To5tjs2PxW5BdyCkX31pes6uburoCratNoaB93x5jhc4pL+ijN/iAXHc8x
QAg2LU1zUJUlZVV6Q8GHej1TzHYYzRvVzkxw1wwAUFs11KWBY8w3D+UyBmeuKMv43AN7PkJhYexB
oWWr/SKnrmewO6qcjATqf5sbe3FIX2kRNapaxjBlF1nLjD60MfTJYdjJ7DOFh7EXJ0LYPaHHG9VP
62xlq/f2O/mM6KRKEy254KI6KEV1f33Qgdz5K7XcIuSOi7h4eLgcDjHd8uH4txWx7geKNMm4mrqL
AFA2WqBW7eL6ky0kYb92gQ5Cv5CebJUWdFy2FRnTrWtBSM+lmV/UHNjrrRyYgDHjeh5J6Td1fgPB
udyS5sJMT/veew/FtlNq/kzGmtfC6M16QzMgpRhurku6neISQPxE5unO+8hKO3fybEJurfqbSDMs
ioIE5r85Wh2+uR/xP4+lPNFSpv/ZGy0FBMLnP8VfHBSOEVhvH1UgJAQStgMgiF0zvWpTHFqFBwbs
xcCsK5JzbfJG8Fb2fRsUnWZjKaZLIte5oW03UTLVnjx6bGSBrXH89oPy0PAzFAt2Y2PseH4Wj15y
tnFN43hBnYGV8hROzQdE7ifm4pknpcFd2xUvElEqhegAfB/GdE4apn6e9jTrD6EciQogYUqV6Alm
Aw/QOShW/OcmeaITINycpPuQAb6pi1tqdXSaPLVGwI8uHKG830GEA0xS4+HcAzX31MPQjyL9/7yB
fbkzgWcwlfTWAkQK/Ow48zteqHNS+H+OmhdQSdqHbRXlKw6lj6IKxOt/kCR37H3yZITKPflYALqW
MOODUE4SICumcFlBnbzV8Eph+p2RBTUPqL2Jm8owYEvPYnfd/lexcFxIaeNdWpLJKpbhFG/ST+mj
cwyvn7S9mhTBc92fYG7gSGk++sVpw+7h91MIw2dsih3PSa5AShACF/i5dgVh4FCUBGucfK2L9q0E
QeuSO2Xf2bVKK++1/9BUPD4NmcGODt+KFMe4qezdo0E4SCVrH9b/HiO4i59hBNhBi2fNGAjlrt31
tSQzUQZDSXuCd+ST7GfOg+qWyZiADR1crRVrOMXFWPWmSgDxv4JvMxjqg8FIjmiwm83m6n4xqeaw
0d5Zbkg4ehv81bZWHQfpyUi+J6OIRV80IjVi66nAuO1dQn4KIap1PbYkMP9DDUXzPMx/yeyJpo/U
yyCOBDSU2yIZH22DYW488AhTEc5PujSCjD9PLGUfYmgRbZ3+oJqFbeuZshC1s/vEGzCaNCk2QDT6
oa/dlSF5sj6pvWnuC4Ir6HPGItfD0+Zcfd00ouoH0OSEDkpGdSMCBtOUrj4XT5hQnCiNzy9dZn27
1t+oS0+Gpss8JYXUl2Ldp347F62XvZ+oeyZjjkOfq1G6cUbmmbXcg4zDrbAvSnO6PGdp8CmFEXgI
pF1sjmF/MBwEJg0rc9fxIEmQiAfHIZsAdu4fd7o8jR4nnx2TTKxu0FLpWtjdeAzD/3UihTBAfmJg
jgjwaRo0H7q5sVDffEd1qUUVrkkBd2BCMwzsV71pCackUbmB5LiEc3g/9A+hiwgjhf8V3sjtEOtV
EjQSThcED5adXfyoMjMd4HD5LA6q0nSyNXJMR4aDyQPEuOV0jGsExRDaQiGuVsWX3iy4gYDOUKBY
dTkFw9JV+bFrIftMKY0AN62b9mID4z9bKnQ74Lg6AEnAZYxLuS/27WtarqokYWFvw9YJ+U8aEY+L
5kUvk1z6I3t8AEAkHy9aOmRXxwhNotSVfd763WZY77yUE18j71UZbJj6JpxhR2NYTq+JZcmtBqOo
EW9LyCSyWtXmBClqLL4A4NLsBUSHWhy2Kb0dnvb8AteVEvq7ZZ2KbuWdPUrc9GJEy8ebg0ecNZ6h
qU8hzlnVes4Q/Tw8S2sIaeHlh9zlG/OB9GvdhE84N3zYMiMD+zu7I3e2O6bF2vvuR8snqeZ14V1g
AbEH8ONOn8cpqQLv6RUYkY0iv8h+fxP1eOSnu81Ax4DJ98yybCpBOFSF5MeVG+hlWfzdAzafarLT
QUKKzl23bOuvimHryg0kwgpMHjqoXS8uwBIXckOUmTDFOQ7sRW7i259Z5zlPIGR5Y8I5utXzCKM+
AiDkIBVRJAMQETUM1836LG+sgb5dg1nEP8wG4ehxLcc6fGkT7Urr7GnS7+RgOWa0MVcUAr1Rj9ah
uBa9/1uLyfko9Jn3T5ArXLXqJwAN3eDuw/wgN961Ka6M66vNubSdMvDkc9LFkt6H17QVZfW1krSa
8+wPQ/iWU76Crzb4/Z5ONEEmbgfkQpAij845/PLPIsAYHNq1om8VJR6rUaTThPzr/9bIiNKZBu63
Ceb/+2UEbsfFvAoBXACzfHDWkXcB69GSY7VqRBDVgeFXvzi7aXZbVr5uHSfslkyFDMjXjYLtbjjJ
d0n6u5G+NovXy9rczb7FFM+ww1RfseJRqTW9kHKU8fRgf9qMc+UFVRYwh4x0+3ZmoV4kSuR/EiSB
E6Yh3xNFPAB9H6OILUYJeDSva0fw8oscpGB50GqbRbq39WQ1RT+oXS9cvD1ns/Zk1bRxXUhRUV9j
cHZ7Tpa4f4FIpo8x6VzZB4MOXAzAtu+vR5KAZ1KJ0hxRe88CPgIcLwmRoz5dFDViH0+L1V76xfeL
DiYJ8UBHhtQ09TXnOM39uT8s2xn/kN760C3ALRxSx2IwK2m5Ml4Vi+hbDp3+671Vq+HYrOe1vrxO
vyrLfibZ79zQG2Xy9o+dxWVNcguE/1drJCSrvSeJ5MqUr75aWORmxEpxgG5qwCpKjfte1a1118h/
BBmnHeDxAREbu8ZTMrm0iIJouG7d7Wn7TRWqoz43Lcsxlu9Iq0oFtndTDNOu211mMhfieEqGH/oP
KvOpnH7GBR3R5BGUx/6HU9DKGKsV1eTxT23xZIPxeN6Bg0+SnjaWIGjw9kGYysUKfp3Nz/t9dTg6
5woYiHHLbq7IBTGRzSOkVzMf4iTqGJa/NreD6JhU1/pZKXWJ8mw3gU/0lR/pxdgbvxfO6u0/ZTja
z2KrYPRMg+hleg1aBQgcQ+/RPVoIz15TabezVNiy1/cvTYC582olz+HARaR6bG94oJSk/rBniM+n
NU6gNHlLZZ10ot2Nj3wE+2auwyFOX59/dvqbIBrtp+P7/e+QJSBBaNq4Q4NFFJIUVdyhuOayFFxT
9wCCSViKG+7i7eTajRDglMKBF2+D5//38cohR98WlBo22inbMY0dG79oSw9k2gghZOOVxuxfVang
TbduK1FDHz8NLBA6QckoNm2mxI3iq1w4xmQ4XSnAyL1MiOrN1DJK4SEcd3BBo4bf9LVL5Toi5g2Z
iczwM0BPJ2jOeB0yDdQhZ/FMbpOWKCK8ioKhQJSTi8wrgfp5Qo2l3YKaRaf/Z2o3owUdZ+QSqEFy
YZOhdYwnW7sj1pkFVMNOZCiSMJIRtxrRgMZgtKdwf4b/KbF1P6zVm3aq/qnsdzViDDlHFgF4xZwA
V/7+mGx2CrI06KD+rm4DS1EF0N0EvG+5VKRbQ4ZGpnII6vPEm1+t1yjZQk+k9T3kj0FCJ4nHm5W6
eSN632CqWQwXgdx4sN8weBJkEl6LesbO3Q6/bcUGrxDFRTGiHp8ty23WzTc2r0N1+b1vjKepwdrk
NiQGJcMTqyFJV/ePNSCdfcjQClbCZCNT78t44Zjxkwy3MToT44Nuzu33K2liBbDVEYVW/GgrbiIQ
oN5Nin500Q0poDW4yinNVqD3zackFg70s7aXvkO7vp6H/DEcLXXVaNo2AIwqMosdIeVErdRZZPvb
MyAK7F7lA7gKba9UOtC3HW0fqVN9qy00eI37r/aeyCcl0Fz0kxJp6FO9oRqBwNm9nZ62AK4Zh5vP
LEIv0pnfti/2ytFEyEiG25A4X9IwjcUsjYVtiQLwueHpPntB0JWJWmp/7UbwxCN1trtvbC/R0ygj
TwKoskOPr+Conk3bSJMtXMfrCQgsz2TIcYPShjkX5Gb5PofpfYeC+1Ii61QPtfsBPr8zK5t58/Do
88e5dqskM64zcohBcyrH5WJ0G9Y5OkjD1TJ8iqLUb5K3Fe9rYtdiHNwzTD/K3H35qFsLkhMaQNVV
eDFxcQx8198LRUqrLmrTAkz3NZnzPkm+TstlvQFvvsBA13LlH7DNniOaYJjRcIi77nMDj2UGXAjv
QuvfiFdgrxQ2CP7Lmj6GT4CuwvgSzqzh8vXKNRCiCS9tvkFKQSE8HrdSKSOUmNCgEujhTHhgbwtZ
OnKO5D47/SbBaFX+aAG0NqzRHzITdQyVPMvv82g74i7x9hKlhR7Omf2aUzFwNhj+gdUHcl3a8HIa
QOdtZDC2NYihi9Zs/JdmvjEnEbAWw705TdqX/t97O9LF26IioCFwvrC2CDfwepZRC4e6xfbrW7Hp
QUe6T2azjXCraw+ug/Qab1TYSXXi4WzmD5rC5gLL2Yk9itUJU9b8O3F20hGIsauXNOkV9XNzQcvm
vHYnT8M2lTc2baHU2fDWulWHL3utxyaLwbl3XxHIX298wv6aAABgKEquEoCo+jvYCaDzimqk0kpJ
r/5FCqHVcllbpB+NTTqCMESE0Se6imL4fr38hKsjsWFiUtK5Hj08NozVPuh+BEzQTwylROSWmT9i
FcZj62nbWfvzYQxepXanWjJEDcOgMAZg0g8XbAiZ60QUJubxNi5EchNGiUErKTi2fAo9WNf5PlJn
6Udu1n+qseG60/XQLl4N3hYay6d6a+0IRyPFy/jRK8Jf6wjnwVYlGkvgGVfmrRTe+9Easy9C2/jk
0kvyR8q0RJkfx8EY8+4tDFsHVpSCWy+CBkFec7Ln44hlBOLxrjorSJAYw1X5150YgrgM48wyKZ6E
v/Nv/00+ewvMrC4Yj0vx292ivvzU2Orj46+FTEoze+POHPPoJmqn4DkMcZsESGeRvvVggsjJBRSA
R+pa9OHrt8ahnn1VK/owAh7xg+oHfB6stE73kBY8x+Kby3QPXeOGGN+tyKNNN4J1xI09GYAez1h8
5M0fwkL11wvSKrjkAnyWF5uS1VJwEAUrl95XARIG1P8Hwz4fDYLW3laPEKYGW6DxdCxfp44X1y5W
hyYrpLzziXugje3yLFLf1Uj+2pYUf2RULi7Qx86miqxce+VOwwTLtnNkXKqj3fJ/jfcJdXH+Yj5p
LEKwuyTnTxT7bcHHqhbxDun8Os5VCncEZBpPvTDrXVeHauFejmv/k2NAebksY7mPanAHck33Vogy
t/+46m0MJSKwwf6CtvV4JHTiHpFbrh/z7AoZe9gVsmfEzaumTub6x7xFkL4VRbfaqCdpLazWLFDW
nQddhcH6foxX+xnQDSs5xVUQwb736owi0uZ6e/neaA7ZEjiBw9dyTKaS58YNIhzjlCboYhntXCrq
qzY5ClQ8oV3PfZfFYFr83RexE2ypj04Kg1vdHqo27owPkS9B9uOh1KoU2Yz2rgyCRQEk+KxQAmEp
Yp2Z9I5cINbcS7uF2qiSh30dS/2zi61FxFJNjbuANwjifP8DABREu8XORtUvXMXLosYjOS8Zabca
USG5EAI7H9NstdisqAz3xV9zIcas8xqscjNQnZXRfZU2PeFgvqKiGH6QD/LKyVSIkQq1+BtW5NPg
P69sWX+lY9cT89T4TAloiqb3YRRXq8MR0+I+PG+sMSokj+j/TTOSdaM0IChBP+CFtwXt2nA8Z/M5
8h5MNsXe4Y3YY8hMpGzTpsNg+tgBN+VV55HXbd6Jf6PCKDNFMfTJs+iE3XwH9q2sgdAc7F5t1BMI
HKSoOkZ4hnim1ckGSXyGQ1RxrSGiE169/cHGutiUTsX9tMLQZyBREPsQiRxJcziuJ2e4+Irj2Mha
1X35S2y2Vy4QumLTlALemtlxNjr/7gkBN+KhmhJjafSpWn4k29MltKMJ1c/p507dJIuWhCm42iHZ
6S0dk4mZ9yEu8qefh++3eYn0Kuwnx7dfzGBQLg/KxN6/Jh87zAWxgB2ju/3+Bj/lF9s5cTcuupOw
/K6B0iybxo3b0pYYlAOsWVH4z93qMiGCuqo8ebPZeB6tFn5WcLRXewHlQMUWxhjxYf3jNXMaCBv+
XjEMLOtF/oFPvKMOBy/LfgA1+NYGMSkXm4Dh4W43/9RdPrvO/s4dYA8/H9FkKkLNlLb+247C9sJ5
0pIh4mnJlHu03BDxYkALn+Dtr6Va+XAh1NJK/K0+GXCMzYwAUS5/9Fq12mbTbKB+72qIuZZkpKK1
3n97Gacs94HAL/On/EG+HL4JjxbqDra0Q/vZT+pLKZTHF5TbInWHjVF/OreQ8syU1M8mYSwzBj+i
+dpSV7xdLWX9OdrAh0J/ABeAKFy7Q7vUilMzkVyvSNxAVAxvUBWD/8zbxP25LX7dmToe5igst6mv
Ml1sZh1Y7F6/pRM3O2MloLhP2UZw4NDNYm0UL6iOtnpjrD5DGdC8CyeqA1kXUxF/PsLPSAaBb82n
9w5UgS4ZMdJ3IiDJgFqjl18GurzBs36HPqIYQKrNYyu2ktGPBehc9PmN+crJfjT/GZAKgSyiLdR8
Seh2wFExOkp5WgWj2N7A9mtLmHw3p0bEmaeD1vstmqsOx3N2oYb4Km9w3YFEmF+GRQcTB7BdwO4E
YXMEIvp/oGO22Ym9amivILs4+XZx+3WoRZYuiq5T8mLzJc33YpiyBHoVhNjhnXCnNQBMUPvbayJi
HhV1cGAdtjutVaa1WyO60jE6bGKgtVsih8Bp3xjAUhlF612VYj3rY+ImgBOXYShMO38rw/yhEVYR
tQQWyjoF1o445nZVxNpGMT1fZeU7nAMaBH97VMHv+s6LrHIstoCc9KAXV97iuZSB4Mn3tN83hVOO
iMpjFwQWoL9XW5YUxgkMQkpjnG+YU0KC0mtMJwPTYIMR20aTgcFUauZbSkN1KBzfugqv/kO33w26
COAfFiRHzW1kyFcKP19a0uKjmRPgs1OhokckDJ+QSTpPkP/TshIPMz5josQ5BksbuXBQrn5gV+nN
IYfkH0QAdTM74PSNLEzbFPsJ1QBZVpJO9JwxgcEHWUC/ZlZPySynjjaen7aX4ixwBu9IfUanSq/E
YJeCak9WjZ11MQd8V8YLBKTBV1t3npjmopZijE3MuAwl/kwL1f9JBiPF0FsnGwCxSJh/PDcZh2t7
dQ/NtMBJeE2NR+02aRFY1lbDYuUK18LR5M/tsKlsiti+Ith4tPYRYrww1G2VAfp8jT9kYQTapfIm
UmN/1jyAuOdirqMLQaSWEMKBJioLysCjslwMqS9yKozsiDeuOj6zS48bNOdn4GazMrLNmEd0MqCB
O/D9MoRJ2Qg1j9ViKikE20l7TwhXBmB1nRjB3St3gRmhiOlAgEYqP1yV0EC5twJbUWd3mW8Ble4B
SPRpXqqrgWBQTglrG72elFBD/repn6WLgwU6ehB10YgBfQGqMvIrchNHnRTowD06TuPipkAsJKhY
YnMDefxRKEqV7wD+X2n4ykgVACmLG1DtSdvkSFJoyupnTTH31z9sfitK3R6J/SKJLsEhSzSG1wdL
ztA0w0kcdN1iKaUIRZXsFM7jGWBA3x/vB9SjLG87Edd5wIhhqj6IqgnSCNh4IA7vz1fKKhT9wWMp
cZC7GiJ+fdXUq5Pcj6vKBNIXZsYVcr4/1QOxAYeeuLMvg32af5JgBvhrE7EvMgP6zBCJSbB/pT26
kqXtF5HfQwSnipNI1nkqbxBdLDazcBuI3+40jAOhCsTw4OYEigUOBk7eAftROI4r0yIcZHiMdcIJ
viCxJR0Z59SSGDlMxeTpwAF9TrXc0Hntq/lZOSvdDPD9Z7CaXllUZmis2ISH3fWU1ANkMp/LGv1k
Mx88PypnKxTRwvoWxAgNwNuUi8CE/4SteEGmHo6rXroEmue3mcBSIyxlgMK8q+VjbQhOWIPp5hDb
yVA/rAszWhqhHG0JGFbcxG/0zTSDlr2Rzw4RATUliYWClv8xg2WcAwQXcmKhy/pvpaL1y6VMN0CZ
p+0UTliR8Q5uC5qZ8tDGn7PRZMHla2PH4i3D11sWjYEWIfQ4ysJh9j0L+Mj5G31ShpWN1QQQknrs
mD/98DAaSzjHVU0dy4bbj2eQEORIUmGc5WfwPNaAaS6n081rJP8viKGqopFXhkw9a7MnpsOoLxXX
utlzP3CRIeIp+PRAbL4N3xLXgODn6dwtWZQIf+CEkDzJRjZAsQhnTYHDWZPhlOj4CboXoIQa3aDt
J5QvI0LcbJViCHQr0f79ibygjScTpK0fcVT2AxyiX1gzFqLxm4rt4z/StUMxcYeyFgNkIDfR3BG8
oQ379CRtFOySSspyOZM4Eu0i2nEbI2OzgcH39ZJ2J6xiVZJE8EDnRL+UsHYEkNx2t3ZuSxqD0nxj
C8d7OkN9QyAN1fnyHTN0kr0HQq5PgqpA9njDHoci39BxenTQP/MXZnBKBi6T/TJmFJ27CB5GtRy2
5BbkyOFvwVzy245lbZaNJVuHFFItnHW4f5a+WPXNqoMWuTn/nXxu4Wyg30cs6cbqvZ5RUoPj6Jx/
ZjD9oaRt1n7FTEZzX+5h3bEjzdeDTOsCj24KVZspJA8MIqrQjYINW/fSuJlAB8v2fHskzEIDGruH
hgJMmXzl7Yiu/jKmo39UezLGDQKiEzWFcgG5kH3kP4x5QaTjTILO8Qk6ShRo8kFsg3Re/JFAuHsN
UihNJneyfRwp+ksFeBHCD4N78eCULwyMZEdiaEh/VYVG7KXU9KNHx3bAxc/ezlLUSv92fnMhFjLt
I76nsBSvjqPAwxAvOKc7z2DCrZWKien5fGF1Tbu059oQLCp6fLrX1M7DlpyqRNnBl+GpuMtntMDB
u3L4wa1vEgTu0YL+z58gCvanPhCFGbKff9vSyu3vr7LJ3WEZ+gNTpai8IYEnWllb32anTl2qgoBu
mi3/uYTcdRlLOjcYkVMLFy3gVC2RliNZPkRv4AbKrcaIVNPEAMBtepuk6N6Ag0baqKHQugdSRKt0
0JcuOPrkmXgCOHYPAhORqKPUOz+6K0jlm8/Nj8FjnCnUVK/LJlPOohjbrv0H/E1G5KO0BqdXD5UN
COfFy+f1G1++KVJyb9giHqapBLAF1e/r6fc6ZpYy7yYeu0fuPRxf+v2vBGTcg6AE3ZrylIKhyh+n
lDvG6P/Q5+6XPb62uFxPwQ1cnC5ILOv0yGI8ovImHbIbZeEuP/mjWd+PNN7LLAIKMg2aXKi90h9A
Q53W+Zhju0ogQi90f9p3/WiPoKnHbuL0bjvkAPLDZR3HZn9Y0XOW2a9i1qw8kQwUXMQxBJgM9TFx
oj4HLBUNXhbs2Pg78yQbRYbeZgSWsODe0aL3f4069VPhZ7IeEm+5/n/kX/54JgUjNHdE7YvoCWxN
V6l9JZY9jyQZMG57GmIE4HtUdSIqhazTIcHp2rUvlWnGZhc9VVq+r92LCKPOX39NtHIR6nAgotKG
WWUU5O5Pr9yO6rjIqv+0yiNNOV0g4KKTlDQasFI4ZcoTxkcq+7sTtJlR9CepBXfD6fKVe4KYVdIy
odQ5fwSdiyXf2nmtzgi/yzE1ghBfOS2sfgLkZTFEdjE84GwitTTY57X8+FjhjnfE+OT71H3UGH6Y
BNva+Xi0ryBxIi1sWyThOV2bumkCwT91grCu/pOtKFFtvNzPH7QQXrDZBDFuWJF678zgCP1B7Jts
2P78S0QIcB/607zMSZDFML0ksbadTu0gtdi9sqE5uhTOdaq7T7XIlCL5N1Rx0JovTjo2uAGOMGHr
TOtTf7c6BBDUGVH4NrTgiSD2JlLjbxPRUMnsY3F7tr6Sbxt//yertT2XByV4VKrWbrln+GpRp6Qm
xq/KRZVOrwo7T3HSqs7+C1iiWY3qFcn20DSFwOw8xzWW64fp3PZvVM/CJNUcRuD8VLi+Ty1Ncjzo
eUysoohcKufIBU+C18w5tQ20T5ccGEUB5gvnCICh1d3HoJWcQr2k/xUkr28sAi+L2PkqZXh4rz4w
qi0qRQmRsxJjbclpTA5u4yW72/jEXzOCgqcdkvoxshKN119gzWapUOKJn3IxzYsPDSbjZiWkagw+
oMZpnxfVr1WZzTqU/2ve45udAkj5WK3n4obzpYEh+1NIu5YEWExdRNzKRAeirnFQ6aQG+kybMkgc
cJwi6MyTBRWr4uxLFBdOoMj2fkFMLQBMItzo68QvXfkdQLT4cH/eExgBTcwYZQTQKVieJz0b2TID
MDMdoIXnKh0C6jkLn/pLDyZlxh81Qdzf92vboXOYpPNmH/L+zmGI+aj6EdWAAVlTHg44NTDH1Fhs
wbc4wEE9EnPfz22CHNFuyhbZIhiJqNczZ88VdBKTj6t6ivcc9yehr8TEwXgKkLc2PxPTFkKOvQvX
ma0uZm7br2EdeRccW41lUXy+d/vja4K3TfXD3NMVwTvFP6f/D0tNpEem8+CCupWBn6fZNx+Kaeko
sZNcloz0YLorlKXXpQR9TVeNPn7OWXearXCg8E1TNcCMJ9mqHPcna6+oOvBH30cGVwo7+p3/qPn5
JbHc7lf4md6fzGzPd+lmnVq4/p8y/NlCVqmUOaAY92MXSkf8qvdy0HO6XUgWCPL6L8kIy6DFK/Tx
DAa4bMp3ItExR9ge8+8uvOzaUXDs1P1ewIMcGrTu2mctzd2j7UcXc8tmmcrz350XL1mToKtdeLP/
db1d5igh8xSQdBdcjjFIXBxNAvwVpshSoc+3oDWedyeKLTuXCFoMuxixQeUxlo5/i4vOsPS1JQIw
mk6lP2HvptwqpsLk7ZQruSzN+rTEhP4Sfcxv9onF3X1f0Fkz0t0kpPaLbRv5psIxWDSxPVE2Uhlv
L09eDwHiQAXtTsJXIsLJktJ91AoZkaeiJyaVU/x62M0P345nxr77PNCUJy1yLV3dlALEoXYBFyz5
lNP9xALsk/AXrZiVMwbhyq1DzoyEstJwtWj9X/UfKKtNgu/N/+Xvi/RomJMlneLpKrfx//Ze7mAx
TBI8cz5kniGCsbquz/3mNHutDc4nrYMO6+ZemU/jEjRVS7VME78C4hzrm3rqwdEsAJvz0xXDpwlK
Tzspj4uTVFarEsqhahEAr2JhEUNcaSNSxL+vMackgzxCfxP8hkYJ52KvxpRRBqBQo7dkJvxqj2lV
75x9skBETix3BG8uG2x0thKBdPcz2fL9n9IEMQBDO2CzVb/LjlJedRtxT3HjGemrqMV2fjaWYLjo
5kKD8EdABeE8LiDW/zs2HnRq+01UpyyE8s620lUnvJqfly7WUIspSR7FYACHal9UftkphxN3oohj
wIiwX8Stf4iMINtWhgECP0BOiTuEhQLT1RkoejiIIHtYSZcp60o09dJ/6e5ImGiJIl9u7C2W2kty
weAZjBKiEWjxafopaq80QvYNHFjYB2nASmu7vYwJexpRNtOQ4925t4H9cTvSbAEUAhrsvLn6svQ3
c2Kdtw0yxPrJoBCR0xpOuo4ZyBzw1XtKlUyp+yG6fBZmjInndWgMq+83qFRWV9V9i/O8egbyF98g
MnZbybFN3VmP+aNXBBOu4fuYCnDnKZrq8fzlzE7sJrBk4nLCPIJFjnVIexkk506sAy4MMf42/+xl
q+67wBrQWTmGoncX77pXx2PFMo/wOHkV9orml+B9Q6v5Gx1DgehoXs1JZ4gWv///Fxe84F3megK/
C/CedVe0YPgS3PUS5ZtX2d1RNR3NU5QVfkVfxAPnZBT3fcexIwa7rgO7kCPBjV8SWEXeQL9/ffvc
9rh5dG1y0oiqVh+5Xl6Zn46TutTIrVlIqCzFtUz5sfXbmDcD7k0zQk7YMWFeAPNr97vwtTDjT1Au
IlHmW6qK0bOk5yijmwdoti2keKxMU5oYBpWO0A1Zt/ZxNTtO4wQ32msSRD4b5ZpL+G0P9pmUVhSo
PLjo9U+oLgoo2V6YjBJaizqp31FVD2YbgUtAOvngaqH/21kBdW4c2FYKHZz9zwmj8x5zo9FGSCAl
Mp9GnKVyraatpn/07Qi2vTOUyNNHZBHWPJOydzXsFPpH0rZ5UKy39CAoLdA4wCDRzTzKpZdmGJau
uC05uHbAnfqxVb7D6HfbEJU9uwgcyV9f+It5xm76WKVCzMCpBGcbdtpZaQ66lF3z4jmygWzMFLG5
q9FEImKdOLdVIvi2/eTwy8NhFoOt6xrMun53/It9OdB5zlkE35inLfQakTygimWLSyIHRBjz3OQ6
hq0vy5BlLryWR9H9eQ4TS6+zwPvbS5T0Lx7qwpMiyBiQBl5aZETM/ZpUIiT/zdtIGfBW9lOnw2zB
+rvizG1YBdiQTxbpnE6dAKEwX7Qs/1HSaoNgvOyNuLfqVrHWPLGt7AzcyJymlnM9rjyYjQClJvJb
Tya/27Ntgoww22T2EjqdLk7a6tUUHx8WJn408Sf9jT41tN42BM9Y3lB18bH0UgCx4C4HObpeHN17
Ui1djXJELfGUuBxwyD7L1hc1uJij9EuLRrkz72EDc5idVd+OcelL+xz8/XR2g3i7+69ozgQbJUr4
FyuJNDWaY6ZcYG7VYngyXJKBhnTXp6cpoCeOIGqnU7GjurqwRlJKK9HvS9zcXZsJr/FX7X4koVw0
ISMAnk13aQXZoDlrKMjya6bM8Vlt9MtCQjyZ7sUpcriXbXO/6sXwED57IjpLdvy9BzsJ4yFLqT4J
nWaHGLjlggJrUID6jh9O0M8/NNlJbu6V0HnU5jGIVke+3BQ7Hxl/npMJF78VWy/c+w29LSsvV3zb
DxZZ3TEIMeCKQtWNsfLVbo/WpoSzqy9rAQ0o2jp0WiFclAVie9hhCnEV3zdbaYWKhUPHj2JkjYpB
ntse5Pr56hzz8d8t4OsR35pkXzJjsFcZiv18Wbg1wuZctbqXqFVe2HUj/W73v/Ws+raZiWSbzB2J
tc3EKKjpT3L2AMbXkJA0nnTmrNBrLozXDz8meK41D1KFAUsI5/SFKbG/AhfvcF/yE1mLbzmjB813
81MgVgsS2we+TEUIX78xPkP2I0F9FJhGHVwa/RR3KUccVX9LG+zaPV4BJ/gcytsJTLCVzJ/VJLJm
Hb7S83Y0bcvSoOLeQIXEN7Gz+x4gVr9xwBWCiCmN+rS/41NC+grzbbMR8yd4HogCbLcFbDp4+hzM
ywz7NwWiJOq2wbD1Aj5lOPAi5DAfFbWnFtNqa/E3ZZ13rycS81SDVBHcOpTUSjEOTm1OxLWGZvh2
nP31VPszUbU/q/4ArzRx2oFcKVg3HInDG1d0mXgEc+u/rfn0cR9q9hGyoEHoK5dsHHVYwMXWF0Cn
D6Y0jXzxz3PVZTEOVtG80Sr+hcjpCK3zuFRb5DDh7X5rw2A59vyCVBL8eFOYTDNsp5Px+3x+SpFS
htvbmjtE9eyLSNygb6OYWXrcT4b+40PV9irUXugmeW1k6wIzB+vTQ2F3nJdp91xlBtevaF+61D+H
Bsr7LiqquaH++ktKbhVD6MUj5OXGYzLImb1iFVvbzCnputwk8xaV2Ku/RM6u+E3IE2sUMR4MM67I
h7zoxfJK0pK5K+lTe7ghU9LW01zeboYYLmXxY3QZUDz9RbXXTS1f5qTKl5HZqshRI9Mhr9vwh5np
MkC5tUo2/gGH1ev3SI1iUBYkLFJDta9FzETMrg8gbdtsrBWOoHfMbCncUXMec1W3YJ/QQILIjjFk
L0EYU5NsAV18/jj68mjqgJcHMUEzXdpBnmqdA52O3UN5QXRugJBLggF4UqO6Fiza0GphjY6vzxxU
AsaXw6Ntx/5tUq9/TbhZGhcuNDWdmHrdEBq5/Vp81sBZ975xu0Z+5g64YujMbm9eihiISBrOALTo
azF+RFXU/QzsIoQp+LTY1BHjEBJNPrwPjqyjzjkcWdjuNScaCjMuGJu5eM5lIxYnv27M7CXQXeyn
39430yydJbKIsZqOM4Azmi3ACQdRR95Zkclo38+MZKIh6iQtzaysdiQaaEfXOjVcwx6ubX9oCX7v
4JGgpk/OH4bczMCf7kujAoYRES5Ou4QXng/ry5SZyuqw/13JDBYlpiLLmAXUavkVhgdO9IrXsN4/
urZ+rJwHkQSIg3wsuvfMYzUreW7X+wZCSirkMoafLEmdur9ZuSwLsBVtBZnL8T7KccfSuxNHskwP
vQOlxadPF7Jnxh8ubQSxhgE9+I9TKwA0Ct3RaAoKsy3yqmRzxGVXgBjhW9Xahv1z0+CBGHzFPhEs
COF/cstiWOvUbIqniCOnl7zX1D7JwCGBWZ4hBJKSeTMFinhbgLDwkHQmkTw/eGzlSBr/vtnZbx3k
c4ElQpkEY04/x8PLv3ap9PJ9amVvlxQaFE+djF6NceWjTLMU43mymjySgmKKjj/bAEqeX6eI3cXo
fXuG0+8hYqcbMt1qBh0OA5h8BxoJxCYb+7fKsSUmqGYTc8qxPK2n7bUzEnIRS2fWtK80QOeSvU03
DMDO3WRHaPrdDL1zTzndpAWl8/27hqpWTyqJuJHQc3vYsjyjEoJbns8yQ5GUqodP6KLbNkGTqu89
1YP75sB7xI5EtobrlRy7/zQQA51Vllupe8A74FgxXAGBaAR/7Loj4Y0I8F33f5xeUddlbeG0ZDyC
S29BA/ZsspflIXciVtgYLfhLpCRElP0CKDkg+0tVSr48waU8yedt3enqMB4+Z7LKepea2mNq80nY
P5zl61a9EHxxpopD2Yf8VMu9D3QP/mWUICXtnSq+Q8XH+wC0tApy5d+Q2E0pmOPiPu9jZ3D6tJk7
CHZuN9eunMep7THBiHnqr1S8cbykT6ikZcNmRJdvWDMR/W0UcfQ9sYvTd8SY78crM/UxkQkk/SK4
Ea146ip3iUd5oa71t8AIYLnsuzJmoOazWxbcBxyUEyKehMCDjGOWo7fxw2x6yxkkpDlKvF3+/cy7
oa5ec7gIAMHtD7f7fcrtZnRoDNY7AUGcqIH/dWjFMFjMxw3ucEAmaUuvEm98BRrke/vXgCT/faYx
JTWYblGAoJK5sLHM0t4VUg7mzclolwkII1zwtPl6YmaresqqPI4yvWzjFVEgyPlf/IGvusXsHcmq
5dlqZ4/c1Ch6uPOTChfOnk7rV7Pgu5tbE+1CZ/HxbckSCbn09rJjuH/5kB9jUwWkSPaZ9GOoTT8x
ImOY6emPvwu/UtWJV8sjEiOnV70kHneXwRYEGfdcvMHKDZT1f8obRF5NF1VHen2V+jFjuxmbc84H
JtPlEZ3bV/PS6RWpVc56vfJbGnK+aULxt7/1oqMgRf4Qn2yNRtyfxHs0fyq6CESNM7eJ50HDw+Gc
LhLz28HH+uH9wIsXaOpLNBdYDytqBc1XHHp6SCIlVgR/X0D/Apd5L+qGLaR12XmY8MofrMNrCA34
B8ADFR85bOGncMlhUquYPHUoPbkpfNsYil8TqmQl4EudkkXUs5LARJ39py07HpqR3q+GgxJCge4n
ffNJG3rBUO7d8v1h/RzVUDckvPshmT70PDqEluhdUkyVSMo5pxeCAwbDA97cwz/JHqJQsYU3+bU7
rbbvlWyh4n2rLS5amsUZjDYwZAUNfQc/R517fble2EdfhNK7+dqpFEGr8UjM8CbWmqRNColou++A
yhs/xCsToVCT8M7mOkP4Ycn/cgQSnVS7N8sKKifOWdIM5CC9eAN+X9jKXBbSBmsPTNBsf4tKVizB
OgPmjD0dZgid/BumbSuGyAskEebrSAq+vMUw8gh114/XjECsKl2r/oFgGPe1qFZpZs+1vcKo2N9O
msxvlcoq9JaHE1DllK8+Lx+2BR7LiZh+SJQ2B43BTffHWeZtne5UOkoUWHOPaWTQDXSlz2ryzUQ8
2cMsGlVWnotXe+r+q2JT72mnslRnbtTvk5YaAXSW/HZF0UvTrLUEoB6gM7oc084oH/7chw2X4kDW
NNjRBk4oSozgNFNEYeNvvAx9hZI4zROF7t5nC6/XeJm2NC6QW8yybASJnkAado3YZA3g0q4fA+Qx
YRg4HSllZqIWmZH55QC7Ws7p4MLqJicZ0qIApiZD9vuO8xNA/GZp4XtGfbIpF2Awg7qYYrWc1EFI
CG/QeGwuD3UAFEHQIKg8U25itSilsAu/t3lDPzFPkZ7aspZ1Gs8T8lXZMB9fIgnXHMHbD6MWDEo7
6/HJwG9vL8vzwCNeY3cWm/lM8/htXdt8jP6xiAS+WJD3q8BGMzXeXNuVqFx/VaJQRwbLjE3xK2z7
JgLu3sJzQhBKcaA/UCf2AzN5vRtwhl4xhsTNNJSXtsaMIfeit9lkFgsWQARFunuqCxBAKYD8fR9a
02DKc1Sz+flX+NtUHBrlOEKGQspZE6WiHGPow+o5oQScq+KhSjj3IP4KwFaH/GHpV5Yphrpw49jk
AbrprPaYKybW+TEl3Z2c1XfhFwEczFb5bF7c1gYizRi20f8b9QkvzvOZX2VwrcOkGRrgGWRqt5M9
jPJs0BzONukW5iuNneoKRIxkdjsvulcx05GC+Rqwzs2cK8okI8ALldD2cAjoekl6e6YpqcOpRDws
WkDCTue5ckMQPBSaqZZ4vj43aFDc0oUOZAIVNBSwden1IqI5waYV8RbPbE7GSpa8Dp3pZZ85gUej
V/Zc6s9X/cOWgDHJWLJufvaBulSeQX2uJFDDlzVaSm3s9Y7KU0oGh/bzZCUZH4h1IsEhz4elmsmY
73wc9qxoO3ei+Hs09cXnDjgY0aQ6DVc1pNdUb/s93JuDo5b0whl2vV4vO4zUCsE2joUR0Xdljd96
QbGVKeGcACjAWySm4P/P5yOo0tRqV1jEYdN+u6hXLhPGjqdG9hDEPlqcNbV9DiN45Iq25uk2SCz+
leF8VPjEgLogOg5oJT8IcUZiv62CfY07/E2twLkayB7/1JkGTdk7eAntpbQ4SM6WHtbCsz1p5OHz
4nyyvLdtTcLqi+OglQlCBRJEpE4dLm7a77BUqIlAJJUxXG+lf2r5QzC5zp3Ubq3dXbCxnGe9p8E3
LpkEg75VNb8c+8ZNKAW/UXjjT7WkwICKpJZtGl2JSTEfMEduw2YPm3UyQ2a39N0RdraRDDf/VaRP
SSuVJ7OL9aSLhsMNibFqc+HdwVeYLSuSh0WKqyXB/QFw6jQ/TlF80ugyNtesFEzQeRQwfNwB04YS
1SewhL86AEWF2MbW/arwtwVRs5v1IC7rVjtmcDH+zYmq5S7pjDeJ0SjwEx7iJ2EC/HYri9HXJxHP
/dRNY6X7L+TghHNlnwU+mXoYEnwLGGWGLzEz+0MPz0rGc8NzOZl+8PCN4JTKtZiPnokra1/OqL9T
LtEH9RIwbIa+N5pkTaZRzISNLo3TmBqHYQhESjsca8GYBJFOtFn5HVIehXa+odsfFeojWmF1rm85
hqrt1KKY915VZ85p6w06KbtpDdjg8PnQlkJqSUJeGcf6O3sN4G//eyiW2T93hm66zIAuny7ZUM6N
4LQAwwqQzQhrBvEl5/uDwUkbzeA1jVn8lvwzgTW22I/EV3giTqkwfq3jZZe4O8qXdDG0YHHCyv17
s/DNnUiUubQuJSOLqZu+z2sPviX4NwK5uiO8m+KUIaw1+zzI0xKzK1BNnHd3KY4jy3TDvLzOHS3v
E4RKP3O9ViS5gt1bRcQP91WhZIJW5XYvqFeJoIqqcN1/iKJZB1eRy4369i21BUmgAL8OdJQOoTLV
/kGuYUdaTozCyy9UNGD26qGj4LVselDOxypmp60HcfJus5Auxzfe5FCNvKlz3SUY6bIBG3la12I0
/Z7vutInEvivjbJIe2p9hM6URKwFVhGGFoSIZE+ox9hTw4VmpUWkLi0/7y4ojgHIN3CDEK5Sqbbg
GdHL50S5wDCJmxpYpvGOYXKgVlatHcB4zGf3DsL4lV+9ytOrNQfM2/dDTeKIKs8YbFRmJmdIctKB
DmLiBhv1P9/ttWAbdsgtXnhQYhDKDVyxkzDNAvn4QWy4P1tr7nj5RhLbVCIKkghOmGuvsZPXIwjK
iOv8Afr6g4FT2cFTV5afMFC8xFCiKOSgnJ0nu7YUhRQK1ASMNcI7KLyP9MVAZ7mx7G36tqtbYI5V
CE0jYf5DdQ14MysjSRXMhkWeDD3ERBTglmnoqwgpSbhdGUJCEZ8LxepbaqeLLsUNarYSTgGGVnvg
gd8GDGpBtdIWtJXhd5le1v/7YSAR0ey50sF1+7jlpFuWbKvAIBCrJLzG3/Zsnz2zS7A35HnhwAoI
+3hUV+h+GVMIaBKxWRAlskTo+z5Ho0oCaLhEk5+Ktcq/iWx2RkK+Q2Tr5rtsVieV/3ZYskKCSy4V
oamDWG6fF/ABYa10NRnsdTsxcSrPvHuvEtc6lQ7jQawoKDEwP+0yXKw9Fux/1ckvVbUyJi1ApFc8
8AYNAvgF9gNmrCyFSIflIHH3E/aoF7Yyrc+UsAaisZcOVvrx2fET3peY6LfTRI8oJawIPoTTwq6q
g5ZrCcG7sgD6/adZiYDCtzquCOC6nLG2UqU+ub2ys5ts5gzf9kJk6R1y8RX0AisJKj4mH/VZukBM
Yt/j1x2HG5z7OFZR+he7XEezRtt8T8JZaml53ngf7XFQFlG4tmYc9ag9hpnSCCu5gxPF1W72yRlZ
DlEAQ96BInVWBZzpDkgf1/nZhzCrl9zN/G+qBvfuZoQ7TR8OgZ+JDDFoUGn1GEPbrco9Yov93fnR
Jk8ZLoiy5I7vUEqGh2oDSbsYqUl4XTlr/l5JPnEXvkZ2u2JD1YMOyjRvTJy9ZQNS3f4fdMbfyhsR
ohps6jgabB3oOg0B4iMCnrqMDLQmOP7d1nxdG8uHXsK9MAk2pHOvc9q7xYn/HmU8Il5Tn5KLe0rs
Gl2XHQfOG5wcoRKSt7+AoO8+N4e8p1N/t5ZezAosI9YYD940uYr3BtD/Nx/rVh87wbk0PW6gjU7s
zL9cKOBiKIp5iEDSu63frR56rg47T+nRIcbyG9IHmKQUPMLYqfEhwZ3lkfdtDhaGF550+3EZ/ken
sRVjkTwufbFh29lorhERC8DTCVVnJZ6XmHpS+yW0gfYZAj10KVyO0MUgDhUomtawdiw8Vu4QyMHE
ZAkJmoabSasle6445HHDLhu9kHcAlpBHDx+V5O9Pg3gvtfOS6Zq+Zf/VlRkhxmrjNurCYUHxR+UM
D/vThdwROOiIlWcTXu8e+DBHknFqIL3IF2TdTL8TmkYo+VkX6ahtKoGf+ObPfdwLqzVa+2yCEfZp
Abfoclt/6ILPW+8i+Rp3aaZIcGUn80M6puXZGZovkGZE+NpcRl+/1zy4PyG+QCDp9KzsvpV112Cq
bLJ6HSyrtFvPlPhUQkpcisIL8yQgHWp/8gEGSrJqtkXjtZEVFIP6GG7W29bWTJ4g0U8jfUomzWhO
yOnscdRTt1fIHS458gZboZzihoMSKTPxD25qCQFxYCJHqwqIQD7C8QCknzE9qBR+dbW1/aWci5Mb
XkrlqrrMm6PRZd3Rb7i9af59ebpA/bu3RvqXK7WnQG1+CA8uOx5dxfwFFewlUbTFkhAnGRvt6QAw
kXPVU3W6pRNHChjlZo5rEPHgCU/eWVMqP66D4hmdhKe/BPqVY7qOgydtELL+TaEpvJZF6EGeMIP5
NH0+sDYwNbUJNwj5XWCsvq7Wq5QYuvOY62OWAO6L4soXWHP95adVU26EMshJBeK0PSxlYGxZ6DFU
wu3oNa4seE0DC79/HkKVC+NppETVzKgLLB92K21eDw8zb9CwoVwOnUUFQUfWTZOq6Yc6L78qjwQt
E6+Lhpiu2WCJG5OnXPvhtyE2QPsfH6QhqSGpYAMCXWLe388TXL4lZ7SSk47lMY3wORLMklIfIZRu
Oe5jKEoIHlUaGNW6JwbWaonxoNSqkLZYZ6K/M/4IATGLlxckfQbuyFiH54SSIhDMszyRGHGaXhPx
Vtm1bxOOJL5OdljutmTK2xs4xaVRoi55VPtqBrA5Hi6o77XkrEpVmnZ0MuApj+edTOLiTWIhnEh8
dHZwaPoeDYA9YUtBqQnwnWS5WO1W/0Jqa924V5z2ERYQAAmbB57Q9ZCdQ3PnPzH+bmtGYUCds9pO
xLF5gyz9VMoJJmxbfyUyYV9ioOqa5rd9R8mI6iWVVrOAASVTmJBh0GYtJYQImgwA1CJUt+WYTIux
hW4ypJIWfKIaeFV6LOHGS9hB9V0ZpKtDEHn+DzeyECvklycfA0hSueLh8BYNZWKa2sNodUVkHUE4
qTF68usGjb1sjxDzz7gSyr6myv9pPT6z80k3v+36sYomzmc9ZmvWTEq+EAVvXjPyX2g69IFkjFA6
mW4uGaYcDfHQ1QFR7iw0wU/ofGEAv/KBFjvFunTC/rBLpS5BxyRxtpbCRoR615cHAJ8wK605LYku
xygUz8tsKpgEdOTVlftloHlzo77bNV7QbfATuYkFW9GpMNIuxaMB9N5ZAuG09dL7zpSBdfNcSPyr
TmF0b/Ssj9Nv+qeQxBTyoHync2m388nQxpoOJH2QbxY4rCi0Gqt2ZnOLFWKscoPkqNcmD+5qcrDi
hNM/e4sEwBt2OlTBTW/lmtH/MpENzvjYMIXDWSU//tpTbrk+VatRNLqimY366VpFmYHWkC5Py9YA
jBxuvoribCYUYbzeuNh8f3DIn9y15m/HqM/X0ZQV1Ou9RG1FuL4xz2H1GDq+e8SNgpYMm3XE+tb5
KOzCteZP8Zddmsgryyfs3BIqpK/G4Xvl6wtfikfBiTU6qDvNP9+zcsIwT/73XlBx9GWD3pgM1f1C
68eb1VPBZCNCAACxCwA39fm3I9HwXJZ2fGGK7h/7Q5kfOVsVkxwmTa1FVyyYTPH8FUnIT2j0UrCI
FmxDFDP0VpgShrBhuQugSx6r+i8mfx4plffZLr1R4T9uIGsWbw+S1PS87t7Md2uJC32bMfNSAa9R
BKS0UwmIMkN/vPlpXmZJOfH59Ww4jlzUfK7KKq6ZkXyrP0fdrfTrlQk+MT4Zj72zlYS11wmvrAFw
16wQxt5MbmY5WSH+L6a43NrFiYtruyla1JneMTBJ0ltlyho2JZVoQ4le3srmGsQUEUpyekDdUYVh
vI9m+wZ4/sELIHr4PXR/Qp7HEuGLoy5k3F2rBwlSxuBtOEM1UmlUgZINGA5mur1UDhw5RG9Ur+vN
k/omrKexefhvICqqTV3AP1THnnPRSdwFbJ4/uirpyDymEVh4Tv4xvkL0Ncsl/HqjNEBbE1HKii/w
dbYELM34eWZwmo/yEDHAI8GYz9jWwwY8bkgxWsw42j0EewUERx9aJHx4JQaNODygkL9DXwze9XVE
CvZZ0fJKUIZjpR8t9APMtiaTUgCJR3XVXs0GIxqgJYbLdaIZ7JnOPuDWYSFNrD7HPuiH11NajnPY
ybu9H/UPrYe5ieb2F826Krdbjh4g2MQvdRvDP7sIbdTvI46Cr0Jsot2DZ/eNlIQAYsIo1WyZVYMo
kLb+SXu6dD+2FwC4YRtKw98dfifgr/2Lc5BLrTo0DoGdkE2QQXQnJReEznCSoqcZrCLCi9k05qW3
hXRiK98oglrj43Au/h+tUtHK+dQA33b7X1wxA9MgMUAuAJ3Onp07A2UwdJo3xI5i/TcJ0fW7/My6
Bwz0YDu0SQTnQKTVx6uKKIKGE//VaJ49PidWTzwI0tpF/2pv/RfrT+VKeHivd3vs0A+0nu9+3kxx
kXwtq0H3t3ADw2rzuoDSX13ufyxnZmpHbpIZWUTfSZf11mFZmtzlYnT0h7hJRmOW9vCQJwcKe6se
ku/J0bFQAIZSGBk7B9mC6GRbzSrMOO6a5mXluYiHyO7rRI7B5YKWx5C8+2XM/LB+U3XEPOP3W6m4
6AbF+nSGYmlcGHBwpt2ElkwpGfDYnz/UXM1Kb0IlQkdEgGYgPnOTb3R83Q4RwLXyLpXmmOi6/3vt
80TZqgmfN4gK8KLiMXGYNJX+Ex3ZVm4/OKE9fHp0+LZxr1291cVPkfJpPM571/S52aA1FI33wvDU
T1Yzh5EWWyp8jiWuCL/LRJWzvi7E2TaHzO8tAxv+L8oAPkriK1Azfeb73ey1i9tHTBtzDjwyK6Sl
icnLAmIrwzawF4uNHBjXE9aSErfOMY7NijdwstKkKQalJla8FX0SOk84nQdkuJSjfh2xHQjtOCA1
ABVVqbDSNOf6apkZXDgtjPJ0gixphjzrlEmvC5r57ecuDhVZTFoy/DFsRVdsFnAx2kzzImkYar0+
RHB3KOj/B+PO11E4tDz4A/fZpMnEYrXXQIAUy8L+RjR3Vxp+l8UC0rnFexjc5s1iCbR1+kWadpfj
IbGoqGVT40nYjhJVe7Y1O23S7q/uC376IH/AvueGQV2uP2r8reTXldp5VPTBLEeoarT4xuC3b7eG
Z0orGZ/AqdwOrk2V12jPKnxDxfE809jIIoofZE7cA1ZEMzFnUILEX71CsjeMFhEZVO3Wr7jqx8nV
sXY7+P18JJK8RN6QIa+uhSF3NC2BTTcmiy2gTWd4+CDW2p7VVj5gj3QjUjlnD6oeEyd7wTeigwbe
E56A/W3B9uWojyhIHKDNVakjqEeNRLDteeW6ap4Gm5el5utCEkMwn77yG+weQbuMygtlHc0ZYFek
nxckohP/FKZOj7Zu3iuWC0tJoCZIaMhM+JSGl2UDMQrmRhF9bCL5FWTkRnYByf2PKyLgHSeuL47g
1je6oW08aQ/9o9z9IwcDGBfFsd99D6eJh8V8R+HK260UwatV8UyHAdVnEKHnEGMh5vfWg3Ob/CwK
JL0dnGTia6In0LV6csZskZqeTIwujBPaDrM9vk+SfIEANyfwmsaMhRhTezOoMZ8AoEx9+9wZv4Ut
8gFv7AsfXWTQ04ktddxWFfRPHDjhfCSnaiNnK/kt8zZLj0kEePiH+lfdfB1nMzKst/lVpbvi+Vxu
fw1G2G2tDeYhJp1Q2Gf1hYVXFwwv95RHRviTGsGW4nWfagQh01Uck/dIoSN+/rq+cvKmdvFbdLON
u4cZFrPq42SjJzLzbtHIui7YQRoqN4Ub7qaU7YOGxkFYzDLlUJ4+n56K6UOq6gfPXaWzDk68M7NC
kDSb6jpidSOVmrvu0RsCKwMtJ8lfHbVP2ZpOgxm84P7wMeoSqj+2WjFOdIBQbzniWK6XK1012GXS
Kb3rkGiftpUmidlheV+RLo1gPoCqKifRS0J2p3g2b0J3JGk8VbU00AlW8w5tb05bMTmISRRZ8jZv
rb8iB8PLYJ6ILwbzELAoRzX/GBJ8iX6SObL/gKs+aTo20CMCpfmn0U2tJF68BYQ48gdqiOBJy2X0
la1yjVehmUdL+XyYOnJ6NUw9EL9MVukJTE3Tq8O84Y6d73URXC20JgfpPFwcT4Es4Ssn30lJ4uAG
XwhGHi1YupLfXoJA6tdwGrhKpINCy7lAeM/CpEfuX5JBHyg9UYL0YUKbOQa7VaQMHzc4NUdevij/
vbbmsGmk3NalDfTsTEtOQoexpzoyEw5fcEY+ij/758aecbURQkLusRatEX3rrjiaO+hniI9hx/BH
BRkZY2JbbZcZtfGfDBtY0WlywOlQSZckJ9B3t+O7G0Ul9sXka6Fxe59KkaLQAKcsryBkVR5vGO7P
+yo/gQ4G0UXZLCNIk70OmIwpMXXUZdfqJCEKs/USXO3lKaZB+UlMdR+rnc6MrVH9wgqi9WcQLNFj
CkIUyUVhSuN24R4HwDLGcD/7Y6EdP74moR3iX+dN1jsWFP7lRA/ztXfVyttq0gioFjV2S7h0Q8t0
FUQODlYckGeGbsVAgG0pEBXQzu6wkrzE3hswsOZuzY/ac+hcwUADb2XRI7XqvrNw/98+angidxz4
dV4DvyC4eaZ9etesXXYjl+lHwnHlyLRanlIIjSukPkRvqmnoF7dHa45Mc3njpu4ZyhWfz2L3H6Pg
dCTagWR+St4Gfx9ObfxxnTghr6/K93WBa9OloOsl5q2TBYN753D/q2WlIJ5zWikAOzDx1pumT32J
+Le8YfoB0ArM3CjUSLs0+dkk4KDJE6Zgh5WkafR0ykOnJkF/dqH7E0Tk34OiDhRP3cijLDJOs67b
JINO2Kf9KY9c34IcfgZOL5KlCsEOXCOHjxhKf2Me5f72rwPSlRvUsCXppQDVRScRP2MlKCVDDz6M
vkh3Wu0He7Wbx/FZorIFlNJdgwoc3MGLjJY4yI7RRlVnPnQ0CIZ0iNCPTas948cHG3RD8Cl0dKdT
G81ZmIQElxTPTj2G53XvXeDfaZa9vvCRnyiGntTPE2F0kHDPS6Kr+SQ1mQ8043LNALkssOfppAtL
rIIwY7S14t5gHUtORN8nYQlOh39yQfowC9aShuSGGPhonr7ksXp7P8VYGKf179AiYRSLloIaKQ12
dDVlGf9pZfRxG3pm6wlPyFkQAoY4gi2+1blI6buj+JjNAamBRa1/3J/W3EK3wLlBCgRP3jveRxKE
k3wDzvDqjLhuedt9eAeoe86YAMXC8DyURZk1lviGCO7Jxpseme/Bt/LWl+Cl0Hyg2sAa+Koi8F8U
jszEpMa86FEbolzaYMZGrpn4R1YPf/T70pc4LfGSvM87UnszEJ8xTM3YxA0HDz5UcQu0y4wSpHYv
dKfVPGfJjD9intCKo0St7UNfAzEIkM+vx2XTu5NNiULwh1bBZfpCkADD+jq46/L2zmcHaPyrkbpV
H4zERc1uuOze0+Ah9Jsuyp6aqfibHmzVZlUeqXimaoe3X1ZSff1KBtazv3LVm5M1/HUfFi39Wbv2
v1zsOICmTHsXFeM5Cq3KJpCNYztI9Cyz62I4rm+xV7Ex+/DIAD0HpReUPBkUSkz/b5GJZyen2HNT
QY9Y8/vCtunkPtcOzv2dHqMaoJXPi45oMozE7VtKPbxnPW5YklG+7nizQCoJN4CJ/j9gz9gv6/T2
+B7Ywb2JUtGna6x0r+5opVifqO/7XonT1IgN6tDo4BZnnLSJzU1UW7fcQBbtGB9jysT93Jlizbly
nGgk3mWGjGGdOR+Nzg5RVllDbuUGeCJ5OigRam1QupqcrLI3dC3dHC5gUvw/lqvoegrRrBRv42yq
+k3yEU5JjXWJFcqVxsPNedNKNWTWZfUNfYraFu6mo3JmuwKr2pjq9pHb/11UHMLmtDwbsvsO75TN
EWw4uZjkwwp1JGN+FOqrijyZJb6ubiDK8EYc2OpcWpzs/meJgmdgyGCiEYMrhOMFPJVgTs4NZlVc
CaR9zm+Yy2nYRdpfLCfP9I/emaeWcdO3YtmnXIGxRoEyBroP+Z7Ew8P/NBn9+3UnJiyFkP3NeL52
LWBjnR8SDnh/Y7iw9LrcdwgBS54dKbLcgPEzXWrFNB5Lu8n4ClWnz5I9wGms8u/b7YW2mvld+zGD
nWdzd3FsJY+hWWaR+P8Hm0AMv1c07ciiMd/C+wa7r0jrQfgfkKJtZHLZj0Ergroh2zCJjZwEwhOI
3Mc7Hi5k0xwWDduz7MVi4QUa9xl5wlFszuzr9L8diuJdNQj3ZMTFbIvqpxtkxOZQkCZ+DGnFXjz+
ZExxcTI6+jva8CeW1+4mGRW3jxf/r9MVE+2zDaWi8V9sNBHaf9dNAe1IE31WCpclWJFTpEhvVg+i
nVg7kWj/9iOXKvUQext4sCdGjO5nsWsW10C9f02K8UgRqiSZsc7q4z4EeBWqaR8AsC0aDX2tBRgm
SsHByoVMt/sflfvBHwh+JYcoZ2b1KtVXSuxxkOzkkxzah9TfDx8hndx27ReSYxde1PLgUCOJ8Jqh
LfiRL6yISNP4VhDS7XemQMPxfgGtU9fNmdAW4PbjgsfsMNnCz2xvHZ/+3gkJwiFfQyAM70FcLAqz
2Z5F+iuM83O4LbxAd57E0SSno5s3l2rVxV5dnGCQty7a1UyTzu/Iee3Zf1Fp5oumfQXDMSJpRIHT
nBSlV1xlU2hZXZmrroHE7DSyGvfj53B7kdU01D9uO5jZjL+vs3Y9fOtt/OJohGjps6Ui9far+q3q
VHXzHTG+jRQy7YfgERXkZ6O7iEaNZWaLC9OOHgQpVBfN+kvCw8KtVHtpmhwSuhsSGL33DIB8j+Dl
tG/v8sT4Lmcx72dK2Lu+fN88aKkPg1BJTHpSLUnKrartioWe8RbTzOFLuRhX4JAn1YQdfrf60Bup
OxWvPSx+jy8GHdQ54bKWNgy6JfWZVoiWvEvXdNauajv0/Ylv8e6kGPD3mgNKJY+EvF+C/v8YL/uW
Nlx53rF8pf3IDt5YTRKnJpES7zQxYIWmTq4Kbj9Pl3S35M9xTYG1KSaWA3W29NA83fcUD9epiFDf
UkamwVwp8reYZtDmbxzw9YTdRh9s+Ueh+1YhYTFMiSLGexibtafl5kIVOM+Aldr4UtZhv7xF5G+L
vFarQPIGDkheVuzMTH+jwWkItmRhbnyf6+xF0d9HgTTZUW0QUO1C00YJ0oc+iuR+OfAmFJEohvi7
ExuEHaEuou8ubH6Jnfr3ktLkiPdca+GC24s02h99xWqUZ/OanCndjPjIkd7IKkL1L2hg1Ls5Qf6+
Gyyth+tfdVp75W2ejp2Gs3GqDOTDsNLXOX6PWGqo6s4urjQRrgGaN4P8TBbthEFSxTiH+G6L4FAI
s/MPxKSesx/qNTtjebxC2mA8L2QHwC83q5q6CTNfS0vl5qpw17d8mMsJsoeMgizR/gFqRBb9Cey1
UcIJF2XQ6XE3IUfPFXGUXzIIX1Mxg/ep2Nv3H3nTiwky8+Ql9GABLvNeqPNiFAwLlL2LWX0Cu2bO
687E4Wde5jEDEACYIW3cBiz/zMOzj3a++lkGeZDWhEFhGebgUysmTbdCe7MnsUP7RNBkUAb156WP
Hn/rXkzZ1YRuW/wgQD+kXhWG9sRDs9JseVDEoagvXrb8F+py2WL2RZZbcqXOlrMXkEFX2HYfX+kT
Lyx/E1bCzUufkIVDiU4RSlGz26/BA/ozEMZ6oeYeP/W1VyJPCK+9s5F7vefO+Y4xnaBjqlXzUlh7
ZLTxPGnlt1ju6vW9k5n08SyL6amqaAuuPGMxeHke+qkjUME68Hbn1ElGJ1E/kHcGM9+utTJkYcnI
CrbtD/a9KK9gydHWGT3CN+oxzHJ0/ytYlyzcOuEXX7pihaUU+UW+U6F1xLUMcG8nBlmK2/Vz37a7
0i7/9G5S/GfSiUWI5nZ5ErQIkWXqpHaqXBCd+QsRoeHS0L/KnKMZeMnSFuP5enOZKV9KUWE7tfgM
YgDWCgUR+ff0wTy6chUWxwe0WR/ybgclGzjqPtec0gAWbA9kfJOEMy2LE7w/4NvGv5nKTfxnJn2G
IC//klZLDfR47nOJmxavJ616qoJPd9MHX/Gr637gMtSzc74ftvJ3OaIfAOINYzwtoLFTHT4gzDHG
3WsDeYVQS3m1RQdx2m5VwrXnuPeE6pXSv17NTpBd8QKSYDzKgf5HcM9vbrMhvYgA92rgeFGoND10
kouFuvVCXaKjqjkkn4zeKDfMGfjQlr6v44x6cTPQ92h1xyIqrk/c5RlNvwPZUPUI9sCZlsGIt9V+
XJNVAoIXaJ9UJZYpBrTeUVEmjam2L4aEPol7RYYz0zJA78F0Fkq3+W1MJIeg047eN2j/ZrQSP9vN
Ct05n3f84bYfgrv5jcNKOZC4kEgWqSNQbbNPrbaJs93IlhUUF7S4TCTdiSuAkRoyXCQjRFzyacUm
KcWk/QePwJVXonB877faSa6g3nhItRV8yMxe9V9SJ9SIv+7Lv1WAGROaLikSy+mycr2gUjw5CiWj
iDFb50tWPOw54UylvVuDxVrPRIp2ZJdXJtugf0GXQv80YZ3H1GTrSdYpbqp+4//gjqSneqoJUxQB
jsX0jIbMfGWgv4koZIEBaZTETgg6rD6AmjCwID16HBxH2Az03TOj9CcD6YHnfDFTtVQkYDEHHMRO
KRTzTY9DujW4NrxIWDKhRTaPaQZbakqt6UQglz4r6Di11AZM9fKWu9vqkCNDYK2TviUX/RR0HVws
ALFpegZWq+XdKtklmWf79x6EEKaCMAA4rVk9rMh5jnlQRxfjFXy4ARkhZE7fU2WbHnXz4aHvKkOa
G5IfzD1OmOOU/6R2mtiOGlvH6064M+5+a1OmIyWT5Hlv9JocJnenz+ywsdtn6e6nVONtQCbhQWx8
DWVb0GWKreFYJQwobJJcCpOmsbnjNlIBCE79PBNhyfeexA/jU5JrW+6cYkXVEn7YQ4EPnGe18LEK
pzOe/7Z9nyeiynjekbhwpMMzc5HGtrGbQyqqbxakNz60J6f0EgMbtM33ehqQjkJcBC4F42P2/bjr
l6tTdSlO7wQOAU1NHi5bJtwzlZ5iUM+Vhcw7+iRg3h4hzc3F16fSO0pgZ9ZIqC5sk+Lc+fjYsCeh
p+aZrIEWQNgUOuJPdfmPY2dx1AqNct9WOjH+YSpfPbYvcG0/dHsKXl45Wa1r/7wJVgG1C1yilr94
8Ka4cw7/jv0FPlZJyp/MGb84d+iy496qqz0Rl2R99nsSWx5r5UZHcskWX3/IHC1/qvHV3buOx10e
4G4MiTz1S2wtm42VQ6njpmJS1AKWxzNQoIQimOEk8KSKJGsWr841ZVRhLsO6lxs1Lchk/JMp70bj
1cF62YDGg7gy7YDAwn5mtLBUYoizsa4CpPmoIeYAqJ/p0KPF3MuBe0RQCOTG8AUjCO7MBtllYw56
1yOQEYJ1qpa4OoUI8Kzm2GsOrpmkl3tDEGRo3NGTtCdsW2xBfgmHwrT70Ei5IidW09LWr4j4hSxc
fLueVgNDdhjfBUXFW4v9iasMZosjVdW8HGlRVpfKg4Zt9XQk/bXclpDzJpmh7HQDPAfv5IiRV8AO
38E5ULSxVR/O3Fu78IBJa6tQlzUyr3JSbinYcgf2H6Pr/Su51gKjwcajQB7YphS14YiSo5THfg9I
daxj0fXZoRZ8bkWL5j4Eh4RjrXp40u+bPqn5EnCf4o8/SneMGFI5WBSIqfRfrBhmuVTYQsECnwzn
NwqLz0SkrEPwVktvvim9Xh+ocyw5Mn1WmPaHQy/RF7GUYwMZO2BLmgIN9f4z2mXMzHLk83d4UwQ3
3F7YbyOGNJufCLhICwxuj4C5BHHHw76I76fsANRJAYut3K1vPE7W+2BtOLCZOBEzbOiw6sdCEcMb
twZKKZXb2zdCObmSLkyLXKQ4xVX5dU+ipBDrRN0Qa1rvYfeZw/OXbGPaJcfaS6XKsChxoW9Knn34
a4U6WbiavPf/QxJU0gZzDmcpyI2FgqNhICLffqi2tEOfLJLELxlEaAwDqV3V45+Rne34n6OGBy8Z
vcQe1taZ6qBlnibRhafGcGeF0mzGG13AK28+gJvNqEPPA4u3qvQtDqJCw6JBvT8RhsdBDo8XIerv
yBzN6laV/khWG76z04flhgAjCZMjcT8qOvVYFUx8QgI026vjBI4oTL/DVb43lTckZQHvq6M9wVMW
tdmJ3xsDLWxM73guiAacsdXr06r4jw1Ft6GM/IsUlKJcV3ejf6VthWhiL+UyYT038f4FNlIHAoXX
tk+5oQDCrYpYSJvyxgNgDRkRHyGu6wFz4lhOpsY8tUuU3BmHtunXxTuvB0R/jKMq6ChmQmIFLV8q
onZTZw4W9lyAOxvkZDJI6lpKJ+C2z570avwSSLRAK1UAr+FAiiSLIRydZUnn5i+Z0iVbU61LvzBS
BFLHilLPgju4eniiBwKUSaQNubyJg5MX0AKJIgnkXO3L0qmPdzRs6hRxXYdtMcdEzi3AkWClprbE
PdKcg9yHIkg3cWjWvSEsBuT5Jwfbg1vWfoYIY23QVAvVu5uQjKTwOjtOaFw7ft8/DbMeR2JeTUfF
KyAChEfngOOux72rD60PfT9h0ETMKaYy4GGOB9nbHmJjJS0l6B5kzrUIKBu+T1+7T2csq6RRVu/B
zMu+ABbJ8yVTRtiP/JFCepQ8XSS7DsbhJ66ql9NtjGJiEIgjqsrTqQgEkTiQ6W77tMC5Vq/dBrvO
1Xe9PdrOXcF2ZyVKoeGavvD6fyMUocx+vhpWsjQLwckPk087w/zUURdeeBnBKkpxNXV3Gy+eNu6S
3fczxxvV4xlCpV1IMshEaQI/p3semw00GGsnIaXLOq7zELeMwLu1uep3HZ8/+DTBchc7AUqu72BT
7E60p2yImSyLW/HXBVSOXI+bZPxyR0Eo0dT9o6AnC21zFVAUM0GAa/Ogb4My3d5LsbqT53W61bXH
Lrg4bRymDWxKNMj7YqJL42rNCVwQQ52epCZP20AD9WivW+i1Yc9g8Fev4imnnH1GQR5cu56tjgtZ
MURzsgMimSXX8nOsJsm3XmIJTmSnpgVc1+5SFiQa0g02PFp59FH3ZBAyLWg2FeMlarMqPMzl9jff
RvrcvHFKHoqxdQGjC3YlZjdLn5UqjuZK6l9hwL2Hj3mnmVtcwpKkcD0OWC5L9PtPU8eWlHYgV43y
oXuFXkdHCJz+dMCzKyyiYoT+ah4YcWpstmJpi2p5SReads8Ucg3wxykoaY9DKJK7uAiKoX4+HxMf
sME1cgz4i4ToqL2cP7yFGmpOpX+rs2i5wnmFe0vVLuwQz8weyPmeioUwrdyEAQYblr483JWEjXNK
1hQXV1leNVenjP0Z/5n9471OuOa+rnYUEg8LCcatfsoR3NZLHAPWfycwq2Y6UxEDvoZ0PGSCff9x
XgnNPCI51nMyMoDUw9oMgu+v22zoo1Jv6b2O5w2SxBFdIduGlghypN/igrW963RgKKRCGG2NWCB6
9+xswJun0nHdam29TdnuU/nEZxv4nt//xEqlySDmSmMSY8liLyCv1WER1TF8njCFiaE8AaQPDGY/
5jsEQMAOD6JMsXG/mQeXBTEM90U58GUfKSXFYrSEGuWAKuJjfuJLmImldQ1uGiMhrGJoSQsmog5G
RD+BtqIb38aluuFb1ibZ9lk+QeAxFA92bHa5JmMqAUpLWfmaCfRWIX0BAS45UQKCtfZ7XHFHDUqc
XzvyXeLUOs7ceLWVocO2l/QnKvgPH8LJJa/ylmKwr8aRXUh6OgiJGIygV/9oS8tQnmjLxxr7ELv4
1ZTDHuiN4ayd9xaFiCIq3xWUanNtWPYBSdW2fXoDRUXvvYRe+Nb3ehWWy97Wb2tU75xg8VOk4az6
L7AolbBVIAnom0iolo7n2ICInm6zNI6DLpZOw7dq14VQHpkQfdvj/JGza4HMTQApSB35i/qgxGLJ
0rFl5kMCzdrSiHL1w8uuY+z5ptF6bM3KBDs4jWZGUcYV1tYUqL5NaiGM2RTPJQUAaEUC0LnK+Z/y
HGN7P/RRe11klhvi97tw76TxYzs0+I30SF1/ylme/SOshgvxniODl48/8jdmk61QyvfPwpoDUSyr
WMxOo42nP8KQB7pYvbe9Hm5l9wRUQtMrORK2tkQqVwWS0HWwq7sInowr6KULDJkJk7gRklGWt+tP
noIw7wjUPzUSS0pEaeYS5SE5LX1SvmX0GtexEwnE29j1LYgHulirlLWCrv4Q2NY4XcGzY71TebUF
cNWO1Fp5hECOfatSdnS7RHn8ItCKJiZKJkf2QP/7QQGSGFjciHH7dGniNz+xHzOwvkH2uEBa9IXu
fBwsO8cQfgUyS1wRAUOZiKTpldGdTbovxdAqW2CJtfCYC64b0z43uktfgmN5uVKc6eRR52v5USk4
POC4us9bWBAISLOQOvpZo1LCM2rVslFWjE6hEJlOhQs1/T9gLHr2htsr5jNinF1E/R56yJ3gIxaU
sx2bbBt4bESEV3tM7rGC2l497E/eGIdEo9p7/FHJc/hF9A7pD9mxSXwvcRy8uK31/MHgN4zapsmp
tchv5pVGnVjqqpHAXdKiDeU2JMbut/zeKceyETC6caaCGFyqdd8KrC7dqZ4dRUDzi9qzjOhp2Fgz
P4IG1KRKDR4S8tTM2yvfKImmcQ8aUs6EipdOr2LsrM9Z0PNzr2rzG2jZgxQjH0eB/yVQvCEZG2GL
L8BZdlrTbsx2tDWwOfPfDCXenbKk+4z7mUEl9btaiBnxE+tYFJqucAxJid7sj8jLSbQknR3UCpji
QnzHa8kNzsft7R5ekb5p36dbPHEirW6ZjGrNqM1USWF1WL+5rveRwBgwXmRahMF8o9aH0fHMGoAR
LXRiWgrAC/Axn3rR1T6NKhdP5Hbz+kuLem2JGyGks+ES/v99LWvGbPnetjhlA06KjJrw6S9w65rl
u0WhceteHZfCOSg8RH1A3XKa4KT7BAYTdAdgkir7Nb34ijK7CSUDP2rMYjGiw0kgaK5rHiIWbTTm
dUwMUMDC+tf4dBAgfW7oIDRXyCE4gr6lkzPxo75fam98VvNtDji1SSqt0OGemDCe/VFJzyffijIW
pejFnpMflHrswTxc72YF6lZ0MKI5LTIEfiLAd/ay5qhVEp9edbhoIaLJkvWQ7GB7hsiojct8bQsi
ZlNj2HyRCT9WSSIPskvYXQLAZlaB9XO7CsGPBQBIUdqC9DWKxu4J0afU/YwNTEftlkCwQoFH5J/S
oXHI/Tv2UcLSRTNCS3EEVpAgRWfDZMRUsrtqnVodBow0j0D8t+3ctd5ZvKIeDfe71h9dmavm6dMU
fv4OJ7hXf/SnNvlIETJXaeOtOyL67JNCEeAjgGsB9P3FCwo2T1XSYftu/yuvD8n9PQaTJqf+8pjD
6iTo51LHthysxO/hS73Rd+kE+c8L1bPimWIpaVbQZl6EMao/5GqWZEBMekBb2X+UqtPvuAnPnqm3
OyCZzgIGJtraNqr+wqfqu8AInDj5b8cR+5IXbr4U2qhZlnJmUFcnT/CtLR/736VKPNQAmp8XKKUQ
tYsMoDIKEc4tcbgfv5PVWXNkaS+zqcOqPQ5yMz/L57Afu6NJ8348Ceh+c2/0s4lPZP+tsKiSOMwO
8sS0ghs6LPWRqM+EDV26Mmbqn3VQf/BXTczrHmWvEw9iy6iVGM6VqGUXOwMZW/FiH0ydN2oUGHsy
RWF3IoK6cN0UDcVZ0wcKHzAHqLJ9B6T9/BANRIixCQ6primULU4y0QLSocP/oDGURurYoMY38reY
KdrStnVZTuej9+HsGTg9GdKOmnrv2sKk27Hmok6CQ97/FV7DF2xq6piF5/chjua6JYEZVqQzQ4Jb
5XPnHkEPfBRnm1Lm3aUXz53JnNJxBvpgmbbj9M11Hh6MSaaUcK2XmXhwaqgrwh5NW8fhSogVxskm
u9cr468jv4S6LmnWkvaJA9airFF2KwMmnTPYJPt8wW0eccSog6GnEMdfDmSUdZh7QIe/Q6hJ3XEh
dVEU/7H59cVTeV2pSQ30DkysttOlrEq//fqkd+MSbtD1w4RzPx1FrCY3UAT8zs5M2FfTMBrxcLIr
R37oyWeLp0IBNShEPWn0jPDCJWaMEwlgh8JqvsO24JDaU+c1E7qmMj+8bkFUuggT/LNNIoSgmKsK
hnR5aBEZgaSZwOBObXXZdgmldwTENjiHX7z8rZc7OLaMPaRb3smeP4wplhqyCFKKPenZWBoOa7dP
H/4AkGLFDHI+egVnUv6O2sFcY8eWQN/qmzxtfs+HzAhRzbKmr9QGxLOkZQLKqamGiqXBCCgqvjTg
YUmYoYZ3J3SmQoK1ThEMPOzUPrxsYZ8plFMSxSjFklunZ5jTXdEMoC11du8knQG7Ks8WHczYLXop
sc9Y/6jLAjOzt0FEFgvPqf1sUqBXpoZQ1hLZ/IYj5PoxHoEgHLQY6/XSzA4ArVHiWTrzeWYq7AfR
3sXRBRZtDh3emF044Hg8eo1zB0ZUzVqauYRq0Acg1Vz6o7FMpwnRCmfaKVg321lE8kbRm2GwHNeS
MauIGwFs6r761YQub5MqRTf3o5ovvAJN257sd8fifB1cxsuzmaQ202tqsoNFQZ3yBvOsSb4KX5V/
96o7xGpkurfqScWBAQwlnRvNsFd/l/q67HVncrj5wNeGsv5hEgYH7V2/LGGMv+RR/Pq5ODbm3lzw
Q5kHD+ClDvsmxnO4thUmAhW7j8K3vF30PHkfPUWVhJYuhdPAd8EyIWWIlj/RteorDo2BEKEtPysW
15vexYOIT59w7e53IJcsKIb4+TXBmUBprbM92NH9xWQy72bIM6EWpL2xHeUOWbUHq4m1Wp4IqTnS
l35+yWEXusCMb7/wqKrOjEx0uqHx1eTh0T1EKlmnis7R5N0ccYzc7kfYCTmsqMUovG1yq7keJYBc
V5VfCXWZf62+u/0IHw7zISCVa9kq0+W/tbctfztwcHBmtn5YJMTdyMxrRUJGBIKj3a0n9KNK7GN+
NVcWmQFHHk+WxEaSmg/XiBLbhSX97Te3tRJvv4lb4mo1uDdC5u7UWL+emxjLLmIDGTCuR6yJPcLv
YGlGon7CQ8T9iCglsmlv5A/v5vj2rx/cYIsRo/eKNn2qZH2OpSFp6VbiekUbOmTYx8XPQ0FNLR7i
f4i5LpoTI33S77mon5ivwJtsCjSu2d9PFSeLDD9Uv5jet33ETlmjy/nk+CDZ4pLysozpo5smEYHk
5d6UUJNSIfNY3wSK/5wJYvRawXtaAdTLvypxHa5O3zNOULiVBVKzal6c3xdwJRLsdGTQe4nuvHzc
Y9yWXX1rDfg6waarCzv9DF+w9fVtCCAcBbUVrsOQqSpkW3ZrzHIAlFBIsoatksKvAcW67Z1uwpae
K4zoy4J9i66SFHBGlDC38jxYkI9WHpO0ZE3qdJHJkALG4Fk++DhHbkxKlRx0NVAhItcyrG83IeZU
9mD89F9qpp6EOFjoyoJQ2iXMCLqK5ADSsr8WqTT3Km5R54ZbqaHPKw9enpzwnBzfSUVYU9X9GzWv
xKRIVYUYCt7JvuRVHw8zLYRTXNc2yG1TkpyQXOHU/vEsW6OuELSjVVlp3duJaSGkGgrFbFwlkZ5b
m/I3qg5CWgGv6/mKTzVQv6EufFZ/oHrPk8XLc3y7CAzQAA065CKXpRUsOVGF+dwustip89ecM2Dn
GY3lVDLECem8dVHU5qxkCS2q479eNP+inzzRoIR4bkoNXFXvgQtEv1LtJTlm0jWRKK+zIO/XeRJt
ksKwHRcz8zM5EI8um59ukUEjmkCdAa4VdPFiO1fSpw+rdcrNMAvkFOfjTJbZ/OTBaqBYl0QtKI1a
PcM/XyQUaLEOB5WdH31RbhFLuFcQKNgMn7qZVCdzPmnRVRZ7/58oU/ZFgN4b96cYs3V4riTBz2jy
vnnMD2QfjPjJe2gqfHU9b5S1hYJmZpB5b0V2G7EbdzKqIL6CAEz8trc5E2M0RDlSnaVtz3c/N2Hm
iM5E8xPytMaXxRlkDQHXbbhZE2oSrx78Hhu4F3cbNq1Maph0RiJdfZHzcUChAJr+7MOUDoa0AcGd
8QTjY7ooGATipSr5QopBZRPo9Z+WMX3FxnsEdd72UQQo3OpLRrc6/SiLBAkQmcsM3NfSShhdUEic
2970Qc3ZYM3SROpaKUAAcGtnxyoNzGkDHmLcGXvHljjF1XOnHAlbUKE+1C0hyfAOQC1iAaR2apu9
uKJQhSSKL1bWNKFyFNooZ9/R353+atcXZ7UaoLKIy1P6+VEJ2GehpP5B8lj0duakGBZnNxpAumB8
vzDWvQdp3ukNZO3aygzyrUuqz7VQp8xp+7IbjopV6UY3G1av73o6n4lsZpzqgzcVOYEDj87P2+3X
6Huqh0gwobIG+ZyFTImcCx+TbUL4jVDrGNMvPAXHatYwt9Mtbff26Sm/HTI7D/hEJC7gYCBYK/Ff
p3K2euFaFVsLxS3IIYACd6LZqJHBzp97gXQTQTuGjSyyB8bFSPLfhsUQchWkuxLFoiCpemjSvJrc
VzErCvgxEnG5f7YdTTjbSlYNiRRAZ/4l+fTjMc04p0k25aSCK2d/tFqpEpys6fevJ+CLs5vSdcdn
/uk5J9s3Jx+MLL6RLebY/Gb8CenTtinhJGzaebnKD64Yvg55yDxcNAYFtVVd/OxP/7Sm3H6R9h5e
mWcAjQo2VuD7k4ge1I91q4ZfSptsXyQTOkIDwZIm7d8xynwpTjKIm1xvt64mjFdLQbSw6efehVSS
gnUDEWDFSP1cHyh3JGXiOmxI0SGy72mUPc641y1eX957TnOJnayOvxRapDDP54RgqUd0kgyV9cNe
BukcT/7VFSkXmo9QeXmuOLPA1ICe6rF10cWmNN1gGvAeLZxZmb+/KXVS03qc1ehZYqFrd1cwkHCE
81RxkjV1icXvZaSdpUtP5vMj9LH2VCqdRiAqJJjQtz2OZZr6XrB+rxCNdY9lP3JwWMt+USmul6yh
PLXXKarSecsYQ1HxKTZV9ru9qckZnucNBF/EcTiTji7GgEsl5Eo4br8jbUXQM6mN2AktcrMo97Ix
lpdafkHPL5ElY0F4JOaRaeE4Cxp6LIqPE0tdcm3l4MRFvReqd5kUv8d8geFthtKv1rbpgz/yRO1J
xF2qijvaxG/ewakbjJC+iK6jqj4cc2RCeAhzDX7clLNboLLS8NoNA6M9BpgEYoyWcuraXEQnR60n
8z6lm/77NL7SxmSD5RkjQl3/4Xpw5+iMXBlDRZjF3IXiUfC+ymfqRMJjB81L6HKtklHs098w+iDV
GnMLcCUehLwTWaIaoKvA3Sygmy3e0PBq+Em9TxdlgBewaUqpGYIxaMEqqxYHXBJ8zi7yzYKrDHqm
iWFbP6N6ZQ1XucIvhs90AAcB1rLFJKY0CV5O1Qk6ZyGEV2aykEtP64HkscWbBmTilhQrYtc/VZvu
TeUl82f5bFEAoj2w4foEYn5gRU3Lnq/o0hJA50dTbEgkKbRtebUip0+YqJaXrmaXq35O2ZwO81Xz
pW3GLcapEHLeEV3Cn8WrXDk42RLdVlKwOjiK6o6PDP50YRH86A1kHIWzbsukWn+pZLM7w22pCWdc
8kmNSDN7iVjX1GpseWL/AL1H1wI8zJ/aqrj4K/T6aer4lS4BkJT/b/1kvk2NCxdxQr7r2clLgvVS
8pgp0M85Jd30QLkf/Uy+krNT9GUInQI5L3Lv2A4t896SWoWmS5GnnG0Cll/FxJWw8W1gYuEBM60J
mQg54h73QP1zGa6yYnNyn3Y0FnJEWOFms/S6FzD9aHdQVZwQscTzxGW5l6aB28qRFnm2aCC2gdKL
XK+WJgrk0OEUXa13yHD0VPjiFhYq7EA8xU/jMTTM5nBh55rKbHlawFhNEdd6pN5yNMO/r99q0WuP
KaaIVh8GNVHTEtk3zMnokNI8pyQUIYJbVCT6Q8/PeoYqU3i3sx+L0GUVvFdDHJYyvoh3ONNhmqBX
CLY91O3PlkM5N16X0YLEcCnQsyRcE9hxELoqWNArqIEs1xNiaExR07mEMLymtdSAP6qFWalZU1Vy
OGJMvyDcqlaokGdJe1QuLb/STMQ8VnKo9yipSn6RZ96RqMeNQ6bNvjkFbT4S+1KesN/pBd9WxXEd
2pHTVXtt7in2/48yIWEggmBhhbR6treLENPhIk8s2Nhn7LW8O4Iwx20PlOXE38EvVQXuRmFuFJpb
TUA7JaWO59RMWAOoX3KFIU0wj2dJ7p/eUKj701Z9/1JgfaJlW84Ltyt1M3QLOCpO0cxKZXsjl59x
fzVrd4F2A8HCarvUDA5utMDBl4HHomyOYzoJMnt4121bYimGmd0xUDNRZ6qVHgr6Wj+kKJjRCk59
V+Oj1o+pI3Z/mDvOH3YBVaxzu6gtSc5PL7lKJpf0iU6xByzgngJSSSWfWA6WQ89Ox8hly26lflZv
TcKcbmW0v0Eep9zjw4g83W9YKZsPOp32DFjlB6UqCidh/vzdUEeOe/5dpSxr/UEyD1Fl3uPpJq8F
SNePdDPlVVNIM9ojPAw8FC41VWXRqXNwFqZEs56jP/TBXWzbWw3S4V6PyUpcaHZu2df8dqmVRA9v
ypf9WMouisc+AGLWNKJCnZdpOCS03avh8XzetIpA50NleqzOMg4xIDtL/kp/v69vtUSlE7q2SttI
n/Iug3HmGD/MwLCXLuzlQ0a4Kg/rcrR5VNzwqPoOq4igcqRLCVkwJR5k5uge1JTwXrQKPWYUUOhM
87q1bcqSLyBh/+/9XpRFkbeOFgVoPYwgPuFQSsatP9Pi9zhMlvuAaESxF9pIPUi6fAUUuXP9vIfF
HtUgJohLiT66p3jhR14Fl72U9l/ytEtY//rsGa+TPIV+BD/NIjCRVPbcq/zvZ7J9Rv7cQHiV+26A
Cpkpr2OxTKhKLhVtAI+F5NFifZEA3m66uAPyY7tFLJdOhQIomXzuPocdg7w+PkFQ2/bZUWbh9OZs
rhM1CVTPXoQrldLvVoMsIMdyk8a4OaCVUJjc8JP3wnIxSnEQDfB1JDpvt7fmvMxEisloLocwZ9yn
LR8THmMKVIckCOu0Z/wVy9E5tsyDXlpgWBA3gmZZXSCXfPVo5yrReg4Zy2mBADFU9bgNkkJiyh+q
u5yFt6GDQI/+cxaCR6kHVteAbWrNDX7WjCD6zMNb7X00mAkp/IbEX84z6J+K4g9INjrSpLOvUZVO
WjLs+4I6JKM8S1w75RLItG4zWNCmDvBQHbqTYdloK00S7uKeAOKWSTOyJiX+QL6LHiaQVfvwRaiY
ijDqzjFqQpFkDY3ohRlzuXG/Jw/PAQ30Bi/kmBEqDyy3bSNybnRgm6GMR6PbCWeHRS1ABRugQQ/P
Q3jOno6J8Uae8eyS7dIiZIFPhzJaq9SX7LDN2N5tZODEYNC7q4vZSE8/pyw2m9P1LLzOxbYSC6F3
UUkdMT9Lf7VAdDwiaeCoLk5GOLI0mvb9YIsjXvel8e4WwVTjijNqL87UHGl2HnFzoPOfjZaMvQJg
XUnMzyRhJR7MRL2gTdqyeLwyXPC+Owvx7yo2wbDoGEjgDenIFao1sP39FJMAH/mfJ4HXDlwvLIlN
L4IIeV8I7d2q6iTLhBmd0XDnuI54ZayCAQi2cByNMV68anugf/8acemt8hbB7Hu2OS/BMFwFuc64
PuzhW5pZxmu71OSu+OeVjpQi4H0Gqyki7cvnvZcT7STFuK937U/Ll4LAaOw8Y6G5i9vMZz9OtdxW
0xObX8UbCA6Ce4mc7HBryenM1Sjs3HTDeFhuaG0XjI95pu1Un+vWMR6NscuMtzaHIdHDgxCXlZdm
yw0NT/BVoUIAgvMFwkGR/ryuirdeT2scSsYTevnC+kqP+Cu60g3C3VrmmVTjmEW8rDveEJyu5i6+
pR7Vj74yj/lgTXsj1vKVKlJ+vDBSmHvw/S6NCPjuAleGqRclA5HqJePR3POa3FYsp0QztEB5DUuP
5D8cUCeABTz1XpqKHTa1GIX7eyNpvdbjXYQC7aCl/89hMsRqY42f8HE01w+Egujb2qS8noAMDAF5
gWipyExdidMvqQoDFk1GGd6IsxeM3fQg9woFiT087nMUKQDjzQl+cdOmjgu2w/pT8u4x5f4MMgVb
nCibD0TVhll/EfysQ8QrLVhUi3D0jHgLGvO6vi4axnG1sI9koKymYbXK2jEz310L1+RB/3B54uAW
GoxxyQojcJZKuv/7JQdpTOTH8IO9+izp4xZIyMR9IUWL4Nu1bFuPY6c0ot0zGOyIen0uArAKhmx8
JQvB2FmqEkiA80mTIlNYU3aVye6paOlsUl5QPAuMUWix4lpKcTSUeiKsbj7eqKFQaO+aNiLecQ+D
Pw5AZj4vPtTGpM38Qklf91c/BbkCl56BOReJtCpNREoxQfHMcwOcHeKVDEnY9MNHFiJv0N2xQpCE
YR6Dfn0dzf3Tyna8nPIe+GXslmP5z7JOsVODsys9X9dF2paDpD7Zw7M7IL/BkcAzUNqDpVv90ktv
YuWdeG24ufD42AxFIZd1wxQjS4J+LDhjfI/19GLheZi/BBXb1Zb/j1sfZZlU2SrRFlVPertffdDZ
zhGg0jRe7A3YyQBB15DdcmqkQIemBAVeZIKEuudy8rNdaXMd/imikTCLTg6YVBSD2mVQxBadjTDK
9CWeFOCh4zH2c10oH5l1b0ZG9UNGYKMUJRxCnMaHB/0RM43N+Tx6l+MeK3o1qOnlarAo4Dsz2f89
OAr2oUWheqK++L3nTX0dQtTfhZcNu1gyhshtcouY6oV8hdracx68pTPGtrAtspg4vaW+ygcUUOCD
oMuCQgCHj6XiAmV8R+kOVLNlz6/WWAwYiMMgRdcYl11b8BXDs8UldOO+fN1mxAZTej/dhErqKYm9
T2WaAa5CTifWwOTVyTsJBt2L9QLqQgs9mI8LizD12yIaEJwW86e8KoUfacGBamgDN/e/1GeXamjQ
4uLO+oRtepnowNpTMz9q5nfHNq9UhFyffNAhfJdMzkKkzU3+7PbrYUqVcyP9gX2qQ8EZPn5PpniW
AfmJlYaqb6av0zVEj27bcC+3OHLUKJcrbRr3lLBwMc6MHqCXXRzrC9OZy0fU/Cc9/LYwGrDs6IjJ
Potnxi9OhdDRYp91yxjXuJ8VxkbGvsoJUGSN83qjhC1TLqh2ejmcXqZjFW56CJGhTB8admbJsCUX
X6BFx8UgkkJyLgSb7Y6jUsRBDQTHFdJ08xZtTiGGeUSfLXkpdCU/bWDyX1aCQFUzhEJCQDpa8iB8
AITs5etQrey6Yb0l2elTlMsFTuEcADoimW1R9Yin499A1E7F1ra8CSlW/aRt7mpndCPj7l/PqJI4
gie/AT5i8wRtpOuA640VZg5Yx//OoneCgCWKLp1WvjHBItHOYFOJdOeIKiXd2w0kTmDTC6y9pdpV
rzvTzY/AeSg+xvSw7xyMUvktEG1Ce4bfKw1FmLE1zOaqlZm6qzQy2KOxnZlJ1fCTCG+O7P9s3rWl
NdttCtDBul7xk0AV96YxoBvvhD2GJIp4jHzearfMmfqS+FVrClsdgydNDDG8pbh9VQQ/tWB0tH1R
WCdM+0vV6nYJ98RVXBCZygwspRjQ1wrHgA/rXnqk/9/IJx3am53bZLNOJjfFrEi341cH8BcVJBNe
u9HKsphPFN0XN2ym51CmSFfgUyGKC7fDmfjV6+HDd9T/Sa5sAKmEpJHYHDakbOyQM9VKU41nRzdb
+ePzcYDTwf5GF2Pg35u4Zqy78OM5a9aRJsiiFQtILyXfaRp5aZQ0Tzt6yKzgh0qV/cJlQahiEKar
4yI7c2ydQ10ALysqyBLknVatDGRhMSFu482Cj0ZAuZYHOGfs+QOYpObO4SDErACawtYTTUKAFjNP
nwDJczCzxAX8a0mVBHKHIb00W9lXvd4rDUZDk+DB+GVWkAzIoPWrp+hH4jVjIelCbFO/BYLT3lSH
SA8C+FsVAg3OiF5AXvjETQUQph8ZlJHEpCosNAyjLGel8aO/g6+8RDGLQphmPsfLlhmCR5s4Xwzo
OKjBxGSWnnP5OhibidQ4/TKpCHrK1T2Epxl9EwM1ZpUJbEZN4mo6GyKgXYCPVavYajFL8UkdV/1J
8OZabEnGmudHKUdLl6MDDXDSMWMdIrlYySN1ZAMNjDiI7NqYtyz/53yTd66ZMj6KGfOosXuzKd7p
+gJw0Ugo5Gxf8QAGIJ4aBUl7fiZKfXMVAMAZ2P4kRbO0q47KS96qgTYjDhMjgKP1KH6mtrXge9LC
4gzmRMy3JXbRBC6hjpgPXRKIp1TASN9gS+SjVczMNJKcud/zrga93lrjT7I7dZEjVY8LV23/+aK0
AwIj68Qt98ik5xDokFvyKCCmPH+Q9Z9wDiryFfv6ImZDYZqbl51yIwMnEHjzXUZIlUl78s8wcA8O
66/pRgKPSN9i/NduE5Jv/sVawoJ7G9eDrD5xsanN51BS2MbCSTwQu4NXLbEUhubX9eTMylxXOeij
xjy24YOxvQFt0N+FNIqrWZkudgHrLEmPUoam5ojaqemB21O+RdLA12u1NcYmo37CNgp5QF0v4z2W
h2LpwwAUFg2YlKVYnAdURTJoz2JzQoEwT78XdqJ3EctmHK5DFfxws9HkrUydTKtsEhFhBQueTHY3
4joL6IMo1I79nirqTz4j15XsYq5wimrny2D70Csc7+jNFS3uvCqz3JbuGtDGIkimuqC52ZTyWbS/
pccqKTYufuG05h/OIUyPHcKQQAUMOQSxJeG7iYeXfvJxoQiFQzE8fzC8EZnDFdaoHcM1HjMNBs37
YS7O7K8krBhpq0szOV7pYtG8m+ZBwg/xzks1VECWr6u6+xzIKFYewWZNlzH8aYgMzM+u4U8l+zxF
Vd3nOPMWYuvb41TrCXjOaIodftdxBnw33noVkezZ3Z63RmIyRGVqt4rPi5RBIZIh6OnF/OSudCEh
ml+Xao03W6EOKQfsofH8SBM7h0pCzAEyeGcaseMOwMsMVkElyJzFDanxg8bBgK8MI+odPqh3113/
UufQHQ+q4VDarD1b0SjDb4gO6QW8Yo6ig+lmR2GB1YRkY7vm7Kgd4mhXH1T0XEcfCOS+xnZW02g7
ZomvVoRr9bLgHGJ8qmhlawOGBmMiO7Ior/X2DTMR0NGAIWEDxXeYkWkY4GfM1EUikjcEulGMCVRI
EPrxcBhbBA4S/O2JuIiQ5as+w3cWUP+EnJ6D03wrUUgSfqBJkeyC+9RgSyCskz7dA/dIVKHLIpKj
djBwuUWejgrGlBxL+XkRfH1TDZ0N8Nxf5faH75TGw1OyxXwKMIv8zVlHmbhGLoQqPJPWbvJlWZbk
YWaN1w6kvWgMydFCz/lIfu0Ol15UYsHfjmIikco9Mb9hlwr9wVw4vWaZM59m2aTeHp4FLzKw2jnx
LG0nMQ0H9BLY2N1WVLEsOlkPDKJB0lQNZoBk/U/jthp856Y0yQBLv8kUVn3nXQHILJQEuj2wmkuu
YN2njTswJeBAT0G4SAlbWp5HoglUFx+5IQ6pHfMDO49gODCt9AjgrJdMrRyV90Yeshz2U3U6dWIA
sYTVgAOCmOqnj0iWQ/7FWDBeIGHNs/9oFsMjjpCE27yHK8HIygiIFCHAa8KLCHwqcK+36xkm8xLK
JUATSjoW5FZaEXVuEplkXWSr4cFTB+FfqH+OOHuGao3OQ7nORczG0PbpswguuNderHWNbGr+PQKi
qmnXATV9SBkpWQ8935l2y9k+2z6e+GLR9WZPY5yLW4FS3zgkIuf5q0oo3UhYgCuBMG9RpmzAmiTu
+QCFYp8XR92KuTzGf+so5Sp9aBaq2Cee5bNXp0bSdsWg9pNSSD0cEclF7rmn5v4GVlGs99KD+HY3
bcmvxewQCj7QgP7ZowdoJWGRoVcyMidTlzTiyoGHN40cdX5poOp4bSrDcqIAnrpnbVaI+hND1Ao7
mys9GMMCV8Mkk4+cA8VdZfW9lUytA6IElqToPB+Hi7zrtjSMxo2D0HN0PtS+2N+FvUzCWosg3GFF
rKJ3fQboDTUSejotK1As0VWx0i5uEP9nranqBUBitA/WppiMmSugHrZRKQBJmMWdyKXfA/C8VkXJ
hAkmZMvRaC9ABSfOiARPbA/q8XcYX3SX1z04egMxkp/vZ/rtihv5BtUKl6mOStyTmf3JH+7WC8oa
5MuWvnsl8tK0nxGeUc0chfl2wuzA1pv+0VEptFWqt9LyQD+pq5OM5l48itRwgtFsyek3KF1WBy36
WeLaadXf1O6bxHUY+xSyI9UR/MIfUBfPkWGDXB56r70vL5JztoYEUDH+HbploncYu6RMeTdn1WAk
1mB1IOXCkjuXBpMtRa0h/4Sbbf9TwuWRgmoek2W0bKcVpBQoGxsVJIfbY2ImmfxyfDlqxtI9piM8
AssGFcHEPJltsuaIc+Mb2vgJDM9pmEwQ6Mkx5Ry5hwZxyjdkC0gYgfIS5kYRv6vYe7ye+II1tau0
CdKvrGPHl62f7mpf320frJwDhKEaRYO5NkYK9Zp56FhoFcUGXyXso0n883ZK+DQDy67sLYnldKhy
su482I1J+MWa9lDeN/OkS/9AlT7MeCEDO5YYN4z5WEq/Tq9Pk9muuwdaseMgx8dw/GV8pjMYuYEE
StmxmuIMZc9I69JB3PiYxW75xNDaEx4AvYE4UdQb82bTnUAKJgzmhUrHE3l3CRj5fpoLpHcmTKvC
J4TblgAEnRC/J9XBlO7Prv/qnyAOenbaQEQsgPdSmVUX75HI7TfuFylJNtYCdOyez0RVtZGOKMpC
JhFR9RvFRh/UI+9wbBkxLl7USarStvUrWElap+PZnH8i1oYdTD9G/bKJpEXb1o0+vLLB9dIs3Qyi
KGntEYg+X/uJbXQMUJl1Orr2Jvbrk1RAdUFDoBpOF2GDSdthGpVCBdjzoxGag7hBPV0zhq8IkVrs
9L8KVRIKeG3aaLv1kXm7YlP1KJUBNeHaL2qRH39o9GKrnQHYTcjlB7TpBjSuAVvBWBgyDHq/Vmu7
1hcSKocx4mKDAiByfGVMc5jqUYlzaNeqhRIC2U6gjC2h6n5EKf0Zoh5Ks2+z+1gEYkdLIjqK+J3W
9L4pchbkrCqxgJ/d6SQ8MkTTaeRbb7iYhJN4H7goN66g6dA5C/qtOibM5ArB4Gkc70ql3XArHqyH
NqRYNq7MHceXOlltyWajeYboRh24nBO0kyCjSUj7Hi6K6MWxHVUuVS58WJCtH/S70uDlGWRCI6Df
1b7YrbOBFkbYh9ysJyYK6oxlpgVuHwa53uCWKyO53m48CoLF6OdQ3KCDu1b2kdcXAaoPu6N3R0ET
ud5F9wZGIYuQgdw5Z+il0r4q/bjC77OJFnaDVHAH1mJi5HoADTMOSMf8N2LAbSVTwQU264A7l7Mz
ME74sFq6byzOktxqXbY+aZyNOH7qMsbB0ihbx4W9NYO+FgqVcpxUErSGOsr2RcYXnTg3gFWvo26i
0EzDWWb/Pz3aq0Ehu4RJwJj/d6vC/neykXxw2iWQxHn8pw08wcGQNNLWp0eIcKfAbgFTHt33gn0u
b2QyUpG8GXeBEXHXmLWxxuS2aYowoh+iSvxAMxcyCGeWTSWx5Ds7r7LL6PSuH5hsnh40XiRF6mYH
iYx6qs9UXK6cIxHvEJ4NC5yeYBE6eQL53dK7Hb1M3PAZrfqIfuUMvC7P8JRtiklTby/06Hc2+Nbv
Dow+W3mp9UoxAaJPf1BOrdidpxa9GMSgbzJdSEqHbHOh6kVaq9YVl5kHvJDpjf1TWZlBBOBi5LXf
Chri0JoBROR09pGXpSJsc37IEXt/zy9ofFbVO63YVXkrkNZ/JbwKIoYUCXb/kRjGE99zRbsx43oM
nJ8qW9o4vMCX30r6OnDFCtRzuwvV8U04hOItQ9SqxOWO+M9WrKBmJ0D60YlHGVXKEhUWxvyoBDo0
6DTDId4NIiNgA6IWSxSW+G6uYAraxxA3ha+kmtLrzUkxj8hlwZRKQnc1ZKn9M+Wk5/O8dXBsFPpW
k0nPssUf0p2GxxplmgI0oaz5ld2eg43vh0zxCM6LrLMYycIMxWExRBJ339Ig6G7AOnP40uZ1VcL1
34c8KIXxoG/iJwKADjFUNBryhpWTexZYNt4uAv4uziU3+ugdmFUqDbPIRM9SOI53LvrX3ZBO2xMp
sXSW7O3anmXoTA+k4lMF3jEvY/8xgEgpvfnCxoT0LGF3Z0vUv6oTnN2EIcSfC28l//rxLMIhbfKy
E+gdw/GcutSrYgMluL03rjrBiecoeu8/sDazfWj0/QzbYC2NhFHb2VaN3tpLMRcPoKvbpMGX97+h
se9klF67A9BiNuUR9XZw4nqS9d/AwtMV1nySTeQ6aLoV4j7UBOW199j3Muu+GdB4l+C/I1NEg7AY
xoRMO1ySy22NnP3YIRi1Mnd0/nOfi60jvI1GNNNJeQZ0IAZ9gSYEyeqq7S/UDSx/Y7eejLc67qGK
QVOfvkSdGH9ALEBLvj3yZGV2iOxa2rT18ECchduconXqesvNAe749tmrkiRB+KNfs+jw6YDj0E2B
SggVwYjL3B8bhrF3mT8mIEgJY6x9/5NyYy2g2Hs65OJ+o8gaq0oNPoqKCqwq8AUFALW4XuGxL6Ap
NfMEvKU11CAZQOLM7tIXMWbLAYzvoPxvCBH8RHRmbh9ZpbURy3RfAWPJCj7WYufPl8qM525Tvofg
HjYCa0qSvVCZgVeZp2sO4ZqwdtKIP5hbnpW10aWqYOv4K46KuyM3rue+MYkIScaKZsKEhiAo5tc2
w3xGsZqoR/qZPA4BrcMtx+XiFEcHa/VlCFH1ItZ0WBrB16NhSi+41ZREzVIIk9ucmlftbhQqbkCy
SkPAd5nMwJlmwtsMQfWuLUcruzR7xHw6QbiKpa5o36TEBd7/46syQ1yVguVaBjCesBH3L2OzAu4g
RSzZ1YbqDC1FwB8jKd8QViCZH8/iEwXOg/jbs17RxsXQ7IyQc/QuLn6O2o7Vt4ldOOzUsrATpULp
mgV7imKaF3yGo6lwa9jeC2bWx9dfeG8clEqPd05PU8bEgNvov17uNk/VDkUMWkWZ9KzfIGetGDcJ
fxXCthk+nBtVBE+TRFBr/87aQojUntwe2WR+4bYX4Z+EOCdw2IwcQ4Qe7vKB9S4dtFd8v73RqU8x
pqPZJq/IpwsObCyvD55ZpFDjHQoKLI/R7ILbZWnbVZy+8QOVnoVjf0GXMNL+75Pk7Esq1GpIQ0kI
JFihzyKxvJs3vC8iER40NXtswvqD94dBf49Ex+eBt67rGvywOF+mVa5wnyqPUEM/LyJsWQm3SZAI
tfUGQr13uk7aNSOOSDeL2reXGKXJ0oD4gFLQpNUjZXm5+04Oep+8REUDCvNjlPnEifMAXMy4tFWk
6P+gYwHVs8za9gn+JOvx4DNQmVurDN+EJ4XrWr62DVtjxPLGoWhSgOshw2f8PyYITNfH5a8J1Iuy
Rm39CflRyr4dRvrxGEPrNknxexwwjwTMPBq/wQEBX6Utg3wFjxNdy9YbejMfF3qwdyofqc/2pzuI
/V6kSBrx+Yw2QYRHQcgTyFzD6MSZzEqPe6vFLhVYgORotxmTZRe9obLoL14hvSftTDqHmGpX1I9J
ekO7QMWF/qogXaY+8yk+2mgscMeBXiX+q/rb7dmmgncF5RjL5YNeYVjUc3YdtdzepfbxVOVB0ShL
l/go8PeN1db8+F4KFM27osJI3KJzaMUgGg7LQeJeGnmeWpexyIb74eZR4s5Zdsuqq73zPJQpWKkr
GPjefg6mg7ogy+nNNFCnxW5DP9IQ6WyfhI8ZP8UoJsMDTsUBNMqDm6FQ3T5kOTuIp4U4YiCwS0Z2
vAdwiDUHMGAV7YKYbtfD2oMaoMMNRlS1pDH+CljBxHtrSceUBxgb9s8hkIZ3M45nVmClfjQluDLl
iJ1eIGSnCRXgrrRQSpNjJryejEDERm7RSuNt31N+ukSkWjdRxzI//nFIR4SJQ8oHWxIvlELWxDKu
Yd53IHXvaaW6VGGiu/UJdWn6eWMoRzV+VRCsm9e3b6/OfAO6dKnzIc1yKiTVktQxhk69jDV92l/M
roXdkkOxImoADEzmBd03E2pWg03LWSWZ74303vgh4O8xD1XTZhoZ7kLcJkuHhJ7PZAS67etQ3tIA
AARsLpTzH4KZPfphU45RbxXpQLr3j4N8ByF35/xTS5olc15xh5nDvGng2UFWBUsqBg2hj56eEjIw
QRjBYL3GuRljgTRfOy43kulrUAmALiR2UCnuTTLJh+b4V9YOKF1Rdk7ZyYuXxzlV7KtpVGiliESM
jZZis4dmAILSNId6g7VGXgp6Y0XoCZ3cOJRvaUXJuwowpvOf9uk6OaeZbv6pKWPsfuwzrG6inqJW
vRa99uqUER2hrkW9JASuS06kmKmF8VxF9dhqnCa+Cjbg+hQA2D339KgmaCXBhksQe1cfyN0kOuG9
zgiIjWE58AzZ1ZiezxowYttC9zIUjkNtgkaiAJ1Ah20djw7ZmdSvVf3aEfU07ZX+H5c7dLEejC2i
7TZyXKNBfhXP9erw067o/ZCPlejxi7fPGmPRgzC/H9D5qGmmoXM8RTyLiFhEWGUjQ74MhPHdHe0+
BzE60gk5hBW+x2vOg9ZI5mG9n0ZM9EiCfPfB533gHnKoLbMi4Mfl/bI4VpYXEybwAn+KyW32h1To
OCiR4nS0hFtILTLzYciXnxddDlhoNhdN/pCI1H6q/5iWIa7cF3ZSaKvoQzRqAB1TOP3PRXNThG5s
8cI3qnHn+nti98xYgXk3MNcR3YzoUXxXiM+7oAgD42/3sbTk/UWoOo1v5lp4RmKolBMDRlwQ2RIQ
fIyEhPoyYAPfl3eigZnvj6X1EXaUk3CtFJNWbwUebsMLR8GxjAFY3ATfX2DrYbGDuZn0rmMuk9kJ
HrDBmb788e/EwDrD+/FRCpVd1PEGz7jPNScCHVz8qmcfXyszHYIvva6zTfeOKRs8lxyZZpBBUR14
IVYuPyZoTlhHXZcVi+JV2pR2+rW25MDgAkaJ8JEY6WTH6O/YULadpToQYPnnJ1llHeJgsQhodI4y
IeNwJ+RKTYKSqOhmXkzoGEW4UGLHD2soLxOgorxXfc3dQU8JWlRV50k+D8nNay1sjsi6KfEeBJ+B
2YzIfDwHkCuPEQYPqvSY5Ynm3bV4pkqSGcrhS9k4GEjwEUsoQabzT2bKaDs68ied0ADeIUF6T/dx
K3HEARd4BJj8OD/CCddgeWy/oFoUFxwBydiMhW2oTI0+QZ8/3MxE9bPCrJmQ2s4dnQHgSjCguDeL
2ueM8dwtmnb/lOxMbIg83OFkuonMg/eY3Hqr+1CdMXHA/YVtYdSKtq58jvq7boY0LszQQPc/WxLL
+JvizkoPcpW6WZyJtS6fc+5VkwudjkpI+qT4L+AGMYsEi2CILN8QjYAsUzpw+bM7KzIG4TUL4O5a
cVHKrLNAvyLIXWJYbPnvXHlnIh+IMQcQuAbUe2KtFw1F/xIuRqNGqav4H5Uw9HFmgBQX5aaJnBRL
aPW9wPpZPV9AbRUJvWXOm68rTiIt5cLOdH4PFcQQZrT0KUPl2xVvmPqJ3+1y8FSI1tZ/G73X/Lhp
kZODIrijKZijm0Koa5ed4RiJ9yNY79GDv4QzvpLzgrBORWhbW6QxUDgGJO2zLksgKEL+jnQWxSmS
sMM5jNpkjxeg6P0mlvY02M4QQNqEqopEN3LL1W8RlSB074BaeOzyvIeWgqtOAt3u8/nCalPiT16Q
LOKaiqXrmsKHtFk1pcfshHjat9WOnB6Ikq1O0DNP1aDvoFqAyA1P2AVscIKGNnN1goT8cT28Ys55
+My9XYv4tlAAsLHqkTARGdnFp89JxzEfHzBJjyM/fdCoEyt+hVYGifN7pbBjH/qFL5Gsl4zv1uUO
4bs9GbpgzeyFVYms8Ll+a/ENVx1DN5mL+t6CMRM2ap6BBWjHdey0Mu2eB5V7i3AW8B8k0npksC7D
FTMJl2V++nfOWbht15rCh6bqBoVdrFFys81G9qd0Yh2WxalnhzbGcR/uCXjAZvN44zhiLqx7Yf6g
Bp0/yrLen7TOBEg+Bh9VyI/UkhhPf/f9X35DIwaVLYqR88su+qX5bDXLd2ZEbexl0dy/pRarXUDL
exSp1uUycG5emc7yuA6ymE5Uc+uyUc5gQOHmxBAnxlXexoHLoxWcpe+WNjgSYvCv7rVYaJ6Lv3A5
5DbNb+DK1uDjI1ZYpeNb9K5WeL9+5OIUo15bq6w3B+yFGzO5VJmDHgFmS1eYx5g5yYeeA5iaHDSl
P6dw/X25V0bs8VSvBqI9CFQfPCsXh3qw4aXlWCXAK1EbNxzM9PoSqs7322f7dmsSTt9UuLcz4xUs
QTqhgnQ8+DRhROW+VoC6fELLVU01D4zms0r+hWsoXvrxHqd9p4L+DUWsy0JWr8fnk3wz3UHtNaDK
Pi+oY92u3b3FF6EDc57iXL9wBQnKe1XZhpW+M2FSrzYzgGQqkvXijKpzATiXR8rdk0Dw6/I+DhQg
Y9bpnRaMMUFf2sLNQxI7CGVbYxkTV4WlO5W6wvPQm2sqn/zRjU3Uumhqg2DCKF62E3xp0z35Qy4M
LYAQHorppgybetCdB3/lgYbXGo3yt2LPQTLWSZvEYrdn6TwLDlqKrGA0BqbEVQDR4fJ0FzhVc14f
56jbGuaZ8HPLYm6hQe1/t0Vfb/jvm2uuCSCzytsTu5J0YMGWOiINEDuaBvI82jVDZur1C1XkuU7Z
OjVh27Py2Q2Xwbm41xm+3ewCXrlakLM4ZdlsDkq4NpdFj39byixBwBLI9X1aeuFKySbzvzPBZZFt
AwL9Nihdw/l1sT/T5hl0crR/imask02oOwf+YEU+BDBXeLACDvqEowNWa/m/3j9HNsTqBnc5l9jk
N00IUszXubaikfPqWSF1+eWL9Jfo1IOuRYmxCOtVcyimtEP61YvUNwBvGx46EVC8+hRklFPeXDF1
wWgqDd3HbCSmWQCwCVMfzJMh+jh4qHyYb5yh6le5d4Rgk3sy+MqiZWwO1zrvAkSTx2xg6gPHR0yi
+LRah1Ck2cb1vWlsYCvdwYP2bUEEc7WW42oqVCcum+ARMZSe3a7V5x/ixX20UNW4VsyFkuqkYVVP
P5lkF/ULt6KA+xDKbZPQHdb+pSmu+o7j/eVADrJpBT9g+0SpDCQ1snczfl1Tdzss0R1KBzirJhqO
WcuxCy63CCXvjBOItWrI5JCoaCUNcKrwU9uIOMJXlTyvV+GKE27qWFWAqpoJIShAvqlAsmLpsH2z
PCzQVChwwxEDgPnclWqPlEHjpS0VadUMI2vQRAsV1BKXcr3ufHZR6l/3JuJVi2ZLunrRuNCHl65x
z4JXYVAFDGbV2ZjKUmfGjdaDOD0qGqz7OanYY8YE6CV690DSlCsZHFfag/+nj2S1Vgl27+w5Z8cy
koZQWE4DEP6HrWjYUwWzF8Sz4mOV9MGiZf2jrzBvsIKTsFntREayKQUCBrHEqdNJXpB0zvy5inTq
CnH33GwddBnTAMJuklR5C7UypHeKQcW33w5OpOREJ8gmkIQxCj5vFUuhh/UdqvUX8S8959/3ncwS
h/Zmuf2v2aUnpjfTSkUh6gPcWCPfHGMV5J3ef+bgRcM8sZRIdJIWwZx98YSu1NQm/GUMz6CUka27
383+phOyk8yYAjf9K03MjWov/ddzkJ6sg5wOKWzR2HaDvBE4R6XxK+bhwdMN7QyR68eUmwfFWMQW
J03ee18eAHw5FStnN4ymRLpJBDZ4JwCM6IpUSyeYk0LfUZHS9VYLg/BAsOgFiuB78WpZqHPWVVK9
4TRDg1nmOyuO8tmdwz4c34p2L+xK2OZnkTw6cIW0wNa6MPIeEwQyc07tyb6NWGhvvKPaaSMeav0U
RBFwPd1rte5TFvP5frJe7/akmzT9+XJkprUC9ymmn6yPbShAc8foFuJMxY+ow4VxfIvhbFsbswr+
i/VRns6svMB7uppHFhaIOreJrjID8U3SusHxbLptDMW7nx8pIhJKGuex0ZGVPxLZ1Ao0KUgFFnoD
hc4oJX7ByEmzX9FxJ6ZIacvDuGyGlb/YWet0zprso4mKOFu5PkRj5iLvu1fj1hKrZWU4OH+FXfxD
fYnonjKQ2ltypfn8rculJBbPRN0iH59sE2ylPRGCdnNVuszWFWGXcrxnnN2Z29sNyKcTsCIJ1w5W
lpBnOQcC7x4SYV6wCHO7xExXTNth6w6MLYJpr/PvrmknDz+jZ83Sn0TaZ/+Ly28tPMYA7D9ndswK
tLp+Iuq5ao8P5umK+f4HN3JWV2cuosv1ctW0uwx4XeF4J+R94XWv7G2EweSipHTVkan3RaJh2Be3
dWKbMR8zovxwJhLF9yFUUeu8I7ZY4daVw0YBEzLUGP7wUqzzpSOMEdTEhgHui+X/mT5Uf72GAQsV
H3wG8YtIdKEQaxBX8eyazqxH0NANGtAsbRKDcFgMYmoClt1s/jvqb0D60nPyAPetP61/cv2HhHnj
6NU2BNYvAwhnfJN2/Us+M45IO6BMUVVVcc0u3S/RgrYrFh+7HO90kxqtgfuF2mvVvMJOOMfpTV5H
jFxjQqV3b5FwPfhcxLle9oTCy7dki0ZS5aDny7WrZ633cJiMJFrHzQcXliur4U4C3Wo4g3Asyjpi
FwP54X4eC440S1emQl5mVgkjHzakOXUyEDGgxRPSVI7aCMp26c82QziWO958zil3feEJcH4VG/bu
8MUU5ZGaHTusB/8iJw49rqHZQncgE/fXPNUK+FL9pLPZ70xGet3Tdww1GUACF4AFaU4bWJzVHHo5
KxujC1E34VepEHwkAYsu/FX+GEWllGGB36fyQqtIuWHlSpTmAugRp99I6p27ajUGEE/vXMzdnB7y
dJNX16j3yRYIx30/KRzDXI85yeUhcUJy6l19tXhq57gs00KBQrYxsgLXe9/fmMosHeOU/pFNLV9k
3L+K6no9+/CsNakj0QbJF04dZ6sobMEUxO4toIU1PUMpnJp70X4zoDXrP3G+HGflJz8UmdG+URuD
YcdTHfJrWIYxkIzpnXDkPwEQdikNYhKW9qjvzgesjKnKLHAmWfyogHNeNoKHJYtKcez41FjCeEX9
5jZeEdhc4ZtmheCxjRbfXcyxoGMNFBvwd8Dj3Ypbm5sIDJfGIc5h0XNbCXVQuQaebQ5ymnViZNKq
a1u6WB9pRekRHOmLlP8AtUDF85/E93nmMTriHbPigy5XxVU2PMt0bfKyjb5pfAMv7vcZI9/20UbX
cG6jFAbbVop3rNZHOb8o7bB2m5D5NjECcyuT6wyeqDqEMeU9bna1YLOnkhiyHcy3sEtMCj2kAXHy
cGXW6kjwcKN8DBHl6hWq5rthqaEARLdWt7EJ43Ju9jZaF1//lSURc1ar0EDJUeGRA+pxSkYeu/Zm
LpuCJuW/rYrKDxAwQQqhMS3suidd7VlUngyrdJakrGIZHDBloEfonKkvkbjhwAk5Uvf2HxlVlL5I
z37G3pGxGW1cHH8p0Ej6kMCTe/nu0jBgixWb4qp6mtY1YtaO6L0FgxpeEVsAf+tynrfylW+uMv3D
AkSGcVm2DuajLFDf72QxJONJ231e/nD5UxyNTTtzAV3ikq3eBcv6Pt4Jq3NeEC23HAp51h3P0SYi
+G0tG/bVnhTkstmsSG8bWeZYdU0RzDpXcqae8t+CMEq6Scx69WqkLAXAOc1RvAOC1e+Xi8HS1BMQ
5y3kbST0VYJ9a06Ha/HwfNek92HdPB2Avsy9TAhaG7nnmsOgCQZ39WCpp9UgK7P7BZt/YjDt1rXo
X+Pas7PfGmykusdihaxLbu8jrm0DpKYAL0QYGdAVZiiQTpZ5+ePdTouXPEHWh+8FZVT7yVdV44mA
CYBMa2dGysbSlKqt4XOUlrvUed7098pgXTfnKLH2IzxRHkn3LlFjwD4CAyTFd3qknvOCel1TgVNo
E1C0m5Gny9vEsVQ5wx4XZBlLWzQ/kMA7PY2EhSfhqWK64BdLUHjMU2PYXt9oy6xhQSbAsvZlo1Ed
LC2GzmVzpoJ/t6isOVmwbExDX3xP/vMU0VlZCuZJkayY40GgZcBBFGcztWTXfZlTV44r/S/KN1sY
jd6O8JxhbKZMSPbYg8SOWZ1e4yFiq2ic2t9jQymi9tIkIlIel6af088t9yJpVMzjwcYBFiolJxmj
oDn3J0W7OaYQXlwAkkfR7EFxk5ueU5nZFC9Lfqq/cM6gSBNuf9N1qcYXI6J+bgfTys9l8G5WNIj0
5DyNZxgk7Ki5YMEbZVJTLrbZreFUepakZ3hgVQ6B1zdCUhxCViwDL6+i00m6Vz+oxZOeQ32INOGE
1FG2JW5BG4sOSh9FydYbVqTenP/f9+O9G8qr1ESmK+6Plwa37UjyN4rvNfsKjQnAmx0aHQr7aDYy
kcBOqwb234S3CDUU4BJWYbXkJFiuArqdDK9wezcFfo+qnXS6VvNiBm92hN8kYKukax8A3fzkFw2r
V7DGSnKM1LT2iO/9S49IJtRod+MjvIPDTa5a12wJlXQE0Gah9OcPV6F1Y2KHYmVoZNIismXSp1WX
xsTQG/JlxCEDqrh8r6SXlpHzotLSF+71Ssu/DFz6b8dy5pTqRAXU3jkrva8sfFerlnX7t3ZmGa1F
sHOBbKnWn35QZQ3FYIQ5qFaCzy0RPCic+mKK+FTeqO3TPm6jDLmwjQsTJ8SyHFCNwOF1Z2DZVvBM
GM+XuIOU2/hEHbVGt9oHCw9KPfug0XeTQ1PBT+JnRlxXZOmGBVLR590746uhxQbLKzLzEhZh8XDY
xQ0d+jriir+88CyW59IQahMMVTopugv07vDy6RG6u5o2da3WFZjuZatZQ3zDppg0hzjBISL7+JgH
3l0ABcBoZdvbBN+nWkwkT55xDVcexDV8rUdhGMJjwwymdRAzAs5JFHNipmsz2Si9X1B5iUi4co06
fZatw0WJTGDLxoKOoX1uF8YpW3jIKUfUcjrr3nBnZyTHPebsqrHJ623yjBEoAXiqh96G2TodZujQ
wkmR8Y/+jTSayoj9UCcPcq/oz3zZ45lzIzVTBUfubnY0FiHJ6t9SY1DLsnYXzI4PdEnqYdlfnw7a
Kg55RQANx/DwOkPRHYEqwm/ilD4eJ7bzCg0ln3+2sc+lFMkwoxPUfDfV90DU7ZnECPiQERyDypKN
jLnah1sN6bHwVKzxgBlJ1lJSyRx/PXISwjwsOZmVOqWFmpPli/zzIpvvrtuH0U4PoBn0s4gXL5rq
kcNPvzO63VpaFVPzbpCaeVfALBfa14TBzK9FXyCOuD53pU0mgdt6zGKnOv8EGGYYeLQHF3s4nKKE
+ovQLcwx2qh3bfi1x674+ONUwR9l3ytdLGHUW6dBJG7XKlnOEEDP8d7G00U4KsvwXlCr2eT2bKb1
B+A/RFIPZfzVN4+GwiJQxKVeQ1IqXPUEeZPjayg/Pxy/L0G9O0XRevE7+yGhGebArnafYt5I/Huu
3bxKjby+4vyluDWAWOLgb1Ir1IuKEXdJQYKagCUOfsyH3tvy7pYdAPHyq9ZXFDYrs61zN47VRxw8
DiqNMK4pBYXni6zYLfBdsRnhrWFu9c7CyXxfSwRCxxCPGp05YcVhCGe+QFP6dr/vsnu3vb9VYUU3
ZiU3WGL8MJ64q63K5BlyQ/rlUOFBedGyFz2qZZWvmFBA+fwGGHYTT9Xu5OhwBKZ7kf4habfhTr+D
1aLH2nVy9Ic++keSEbdfkOZlQyPqj8IHhuo24E0dnkXc9jTxwO4pJRT1m+iaQ50PxI7qnZYKCp/M
inqPJwCbTJtcRCF91bIbw7WhH1XuikZP2ThSbwe51Wf7BcBOPO5X7BKUcNhEZeP7jgrFXXNz0QaJ
5w5kMYlxi8695sjbLynGdaUA62J3Ec01G2oii6ch/C7bagnkQ2YkBlLhAjWSgccf/FcPsHh9C9IG
ngVjTUCqYOlobeUqYQFItC5QOb+FEb7gfHRV55b+5dFLn9UzzUyMDioq0EPbKP/1D6gv0BSVffNV
9THx+qxIFYwduvRzjujAoDcP6gKSObtUpxuXx9GA8Bg6L23JT7dd/I2ebQpLnYQ/7F56dGPCj+ir
XALGcv+LF8MnhCq2sdbVgeZoRhTxFdH9/n27gt4OHn1aQys1oHxMqLxwv3DnA6KH4k9W8ALT5yZZ
hYveLyfnziQ8gJMmyIMY9wJ1lF3rbO9Ez7Frjfun3PlLriZ9Zj+BhdTtG+ZRictRDlKu6IPCRn/m
NWbcmB1O1JeHg0t2SFMgDKtAFnm9yFzFc8PlWHWEsVHF6OdUpFmEMdEyyVm6SW3xyPrDtDMYz3vg
0+Lrv2Po20vpZKk9eG0p7lUaOvzB7UHFsfH9ViX+DX91krZRW7U2C6sMsHU3YPNG1E6kRm3o7OuR
EbpEcgcjkKMK5e2o+TrX2FgZ5rXwav9W2w1qGQ3xDHOnuqULS5HGUqzXUxLNJA0hoSKlkjn9IfIU
P6RlXw33BI/SogpmQtwbxwWvbeBacKbPZUtNeRMtsRzRO4R+2Nx5/mNmnK3tavbLfyr+lNh9Zijj
uO0aFhZX0pJAOQCN3KDCyoTKSbg8CGU1D8MeQpx9FAYQqBZLIkcOaqrChexqifoO1KnoqklF1nHN
ZVgruHVKEiYGk4g0dveiY3/nv5GwQGcV3R2fjUK5uDtfWBOdd3i+YLbBeJXWRVpPNxsib+lvUjak
UucBOER9Ua9+YCOwkrroaDH8EfjRMf83enmeDZmijxcz8nErmgkisyG78th9ts+KDfXzGd1FVTah
SZIcUr6Lci5Fpx1rX7RXCGBAXbvE6T/4tucgm7r6VEZuYFXC6GTyWTRFYc5piuH/8sGBvuGOMuUT
Tsg0Y6K+Brfsc72zjOte915LsINYUEYdTJaeZ11ZCjp0Bcb+iT5BeWgbpPXGrKNNgOiWKeTQkJCt
4WNxkrEBt+F04cCL9H2Fss8u2Y06wbNJMpxJWE+7izU6g+4XQSMW2ygEWLW7SQMNqQvEC++oKCw1
S2uq3DuePiWJUQ4Q0eElNX8t4VV/wHCOkO2uFxkz/RQCRABeJP8QoYYKv+cG/fth3rX7rov6nfCw
ZDOj4R9U6juqpgCEB86LmK4pGrgmMeMzsjgXu8wUhNpGTfs9q7qWD5+dgmiS8Dh40k8j3HGI10sA
Izv5dga2Q75Arhnooi2Ecn1/yIyIWMZ6i2CsuHzE8zcoTs1nV637fPSUTd7BufE5ihdOgtw+B/sJ
qBOkJeVu2onrsjUebPCRgJ/nGNmqYOCoiJwSd/uChBn8fdfAQddNRwDPCq/nXnPxCLCbzubLLlej
WErBfNtz5JU5UcQ7xdDMio68l361/d9rwrOu3f1e+vRBLvHMc8KuJSR0NkE25TH6w+Il0BXmokn2
XjWa3qvfyOiNNBLf8YkEZ5LewJPQ2wZLMP52NOk98uo/jPEeSHCoFiZ/0s1Tfh5/AgLZGPWgH+D6
qxHaRzRzrL96QxmObfTxRCUsiWmKg+NLSYmCpvslb7AFZgYyEms+PxeK5OU64AxJQhHwkX30N7qZ
ki4pAPCevsVgJ9IcgOF3rn9//BTdm9/Q3C2pgvcScsStYHRVx640W0sbl6KfWOfnqT8JPeFk6OqM
FDiXs7JdqJ1R7YfQA6B/x54+QL7jLyJTSwzL7ksg6ivuJQ9PY3zWIGQTsqMI3jJs3g6hPmkBjJwi
EN8RDtAj/exYkXsIbs8f1YlG/uyJpsiko0gvDWyQtAvAj7qJ4qXqdScpstkfB078ZP+BJ2IZzg+6
U6ND7cS9Px0pLtJ9wj+DYjO8YClvY9TQD+QZnLzwLTOYGQ60HBjeh5rlGaeNZJNahv7zzLR46qon
KriVwA4ye4FKmrQ4yoiwvPJI54d6MBnd3Y4XM3uz6BOEEl4PjvA7SzsvLLPYrNHyCDamDMRybr+7
hdEfvKOAzv3Rc1pAtDgbeZTAbRb8hVcNok6HetcfunV1KdMWEybX8ZRLihZpqfKgoktvruVIhnmL
9I1pArBs4N2ENzgbV1UiLSowD2cUb3imWRj6iynfkB6vx01P2YvliQy36tb0sDRXuzCaf6Y5MjSB
yX4GbPd7Z10e/gOnUoa3fC9tkyxUPH8FJogGbY2VZf5J6ypCVX2EtQq/0BqGmBHfkUL0ot8DR8qM
cGam8sDJd39TTzTkQm6zLDvjMlua1cKnCO/7EBMiENE0543ey/mUd9oaP644gNiISQ3HbVQLdF6T
ovP6P/zDE1D/QNSWWqqzcKZgyrSDqm+xzokQpWOQ6VWYtM+xjFBOo/FIhZt54XQUi6Qhja/av9KV
7btPQqwhXwftJ+ye2yCVviG7g1/ggyrRqRVUClA7pfqMFGG75mF2UsT0vNo93/RNNWHsAZRvjObQ
FzxGy4pvkZPow5/Z7a9k8lUht7ivZXsfYIoBN0Q5QxP+88nZpU535JXAmag1f1jYguzBL1eTxmW9
IFYvczVCsDqCl8yu2WwMlVcb6HIUDr7NHhMRABa3lrEvvngBsKH/4BVsZeQJ0kCQ7E/sbGhbFwzY
X9GPRQzN1cf38BQ6onSH74BrW9m01wzeQxUmoAN45SV8gvagQ056Z19gnRtJjcX6IBqieqvDGjxc
UWkUaVIaRoRlqEGQ6VoaAFYIXZJJTJXr1a3tAsWnwAkcP++N+m1XfjXGq9KTCPCZL82pqSzVBshU
YP3AKF3YgIOwkSrAigUA5Ahb+9z2nbqXA/73sK7Lu+k7T+VBUyH17qL5XXYx9WD8uiPrIUaWvqQ2
FVpKjaHyHSh2FKQBVdQUcxtAESp9xvudbnFOHrRtOgQ4hVm2on5ztF98nTKfzsujfqCB0sO/nR4+
huEQGl5xJ3vJ0EWb5t4BUzFArhW4eP/Z9kiIUBd2mUAkUzjrdxawKfYh2BoqRpK1gCYbjX13YAKg
5INbZDBqm24wnTlRlH1hrG6lePqBClaO0014sH1bPfmerzbkmsdRz1vcx5dXuRS3uPGQLS4v4rLI
mhzYapNswbubO/ISjMFm9ybs8qOum06fKIZD17V4OVauGyVAmvP57jWYD4LGkhtBhyUBJzE5oxHw
IMbIU4MUwq3s3IGHS2mFPq8V4vLZdRe9t8P0Yze7m6tcanWORGpjIb2ayptq6zEcxq+IaSRRnZVE
1/4kI+uKjhxb5gO6bEaGvKCCr4yj/0gEO3aZfpScobHFOxamxLSgbCJnzQMYpDlKcSRpRB/9sIK6
IJ3uKIGBVbWabLi8UrN8Qqajym8SyprzwO9jQa94tjgQu5RoO4NqVP4/Dq7blfNTnEfgNkJ53qiP
fRaGwjJK4nDlA770BQHWUD13j6t2M/y4eJ5RmrZt5cIj+n9fXGayTPRRg6Zt5U6zkQo7laqLsL/h
wJeLNmSEL1KzYWoZnt5QaYpyqY9Vfh6NgaQ4s2rvUmqujIEmrII7IBC14ekyb01/UygNxz4Avct7
bJcfSpdYM4fPC027mVgc3X/vMpvrItOzPy5jatx3iitYngu6hA3S+TlaIgs7jAAPff1KxK/OeBMB
gV2nroN0IIpwiHcASIUoUT5hO6PWjElIQlv7rwsQ8R3UL6EN0JaN4+mZaXtLSYeZExj2DA/4Sgb5
TIvhFCIhpqhe2+cKo+G+Qds15jvAUQNg865pyluhW7DNz2jaIxE4NZ93IK7fHzV3523tnNFubgDK
WUwY/9N7gl/+uCg7Py541MWB3wYgT1ttclXARwzMhddN45ZGnGN0I2zhB9N5uXxnsNfHFASCkCBf
T6B4ltkAhpoUw/HVzRPPExvSP5/+29sKTxoDgHYcZYeRnwnEhoBqFhuQAlFdrcNsvLvix8H8BiJ8
ItW+mj09MUR5O3CGKJZp9rmANKTviUl3WtZh+kZMjyWJX9qKF04UZ9TiKhMfUUJARJQO8QVka3OA
m3UrqidsSwIyDxsUCfTcYDQk9bjqwzrgGYRCm/CfmoxijztwcI5DYgpEhyGMjukOmljhHos4n8Pk
g9S3eNp6QnsBCzYV3OaKTT8T+mwuvz9cNAe81+jLYTlfuG5VXhSBl0wF/pBnTBXXRa4eRPCif0K2
7YPJmLmVHFWHykAC32J1jRVZjZC9D7pxNkQqJ6gV7dMQPcZXQ2c7hBAq2h6aBsOheMoIy6mIjIWZ
oknp0mWg5bBcwtE4BqzZQgzHaoIApethTAhXfAb9FHvm2cvLS1VRhKuOZZSbStuRXh9jQkyB1TXw
9JxNThvMzIF3S+6S7TBTL2R0c6LZQAD3/FBXAoZKGy8moitVazCYKFAn3wqV8+o3QsqOzJDwV3v7
19qL71wgRbHJgxTW7Kg7LVfgJSzAm6axfKiK2Yc34t9Q9w+FdmPWjusVWSB0G6qcwsAtyAXoyxsf
/IpYyHTbhn5kNGdfnDAeSxGuzcQrbOdTmUIJjC+D/j/NQ6wukjkXUE0iAjmyc3Y/3c8JyhRKJG8B
KQDR0g/gD4qK34wJhyp1zfUyA3g2jUBkqclvxbepD/hgVo3GPPuEoNkZ0BeSEt91oDu5wjNw8O5T
aDSVM8pd3i8EW3JjY5h1KBwE3AsXTPZlWOaQxccw5r0voodKcM7z6dnVZvNP2eVHVAO0t7gTqu6I
k685qklUEWeou/NK8EYZ5yBsxBOI+l586+gHQQMXr4yg5AqucCXPBtcsbovF6pw3upw143oxuRrB
ceVH0M10YL6de2u/uTtg4fSdTv1RHyqsvkYkGzWSJpNS435FzC0HTaiWGiDeR2XtY3UrWKm7YeL4
WjFrRECLBmKhpyDIHOvgawaMfPEGEDyBLSUyimgXcQfqB20QvOvFY5fGfvhmIBulvuk6q1Xp7Xvz
8ba883dwNwJ66Z5Lxc3GvLx2/Shd9RZyTs3kSN6cvUX01dWNuDV3lfHBC995bCky766gNKB8yvD0
9zmjdNq2ev6VSLBz4fETFnYWlYgMWl23vvZwwA9OUlmCK49AyQmmbFBfNAsXnhrWba/EVmbYz7V/
3KU90u6JflWxSv+89sgCXagcF/HNmWNQw24JEw3CHtqyb2VqWscXhse7sqLvzvYfjJec38QcbhOs
WLko7nOOh2Y0UJWHefAQWInsF4Eums+KfWpxZZEF8DUkk2zDynhrhmEsCIa4oCyu3pXt7BNABjiB
tKKoLBpe2PA3aCNHCTK+1fMbL5f0ADTW5dLkejOBS4pjVJ+crpKSYrHpfu/1JBeyFmq3+nLitHYa
lZqTqI82I4xXP5sTRzyQ4/pBE7XYRMMTQOBoIrfk2KQ4vew+L7D0CV6s7Q5ItJMQ2CbHUcgpJppM
WUOtqmI7xDNEtJnpP1yn9qsERFfKHxEHt2rHb6o3CoOpPLx+69Xm9nwxeIN+zwh/R1ro6j5p+ERJ
9ARRckT9d8ifagMEspx/yJObwCd3mJ+a5fn9R1MquqLSwyMx4JOjEvs/zi2Ww/cL9rhEn7gm07+O
y82bmueOgsdx0P3WE2EB4S8t5TgiK2q6td4z5x9mbHBEqEmQf4xiAGh1XZGuYaMKHE1uAAZkMyA4
2nbxS5XsU/5Z7x2ygetDpDdebGuj6vDq6m5toXLl3cc+lRM5ccuvRMGV55I+FBE/BMzGIUnQIZm0
huCewfH6NJgZG/P/YRb81AL07xkAUDAhNfw1jg1CwTmN8N4Qcq3IBgdsQ3gZQ/9k2umwgwThncwa
nXi2Tsm+lV7TEwFQl3SjA2LZ/AZwxv0UWDN5BfRLv1EA1p++EJTh7dU6oosIyx0HigOGAjmiEDCL
Nd8ogOBLDd0SfYaDCZ5klOPUsP7KeFMPMw6gZt3oQYgIWe0HmW2HRx7Rsy6XjxhJKUm20x3Uxd8S
kqJWzlSQ9SIbp5v25nYL+LGnC9zifeNfk5l8/Nl98x+r/FjBYrwgqct3I4A3CPVMETCDiL1YzVbe
+iaPkWUcEOnE9C+VZMiGYCpsu7BlAGz1g3MR7HGBDtYtxp9QPqwAI0RgXczlVCptlb5I/kUGvDv7
r8fIYr50LKba75yB1UYpsIXGBVf6DgcnAEUm7Vpfc96IagLDgE6ovFOuPOPXvZGfBAT0hzvh7T9N
MuQv9AMu9maTYrd6kxnyC537iZrC8FnnbUiB1s7p9dspOfinjsHLBwXFuwBjDQOE2DQv4ULwEFiS
t99DrHSY40qSbKwGCUxhUX56n2N4v6/2shXXNPnX9bQd9sUdONgP5ET4gPtmAEDEunmFH7ZW/0vz
+0tMSTqWNaWawsSuesJQjUzv4n8cB4KN6jqwEH3TvWlr6usEY8VpRx7aD/Eml8oeXPgV8AbL2ZGn
9uVP2rzDXpqs+kNd1Ucm2Cab6RWVADdgEJnDDs2je74ExOlc4cN/yrnNIVAdMUwHOfoemSYrW9Nl
14ehPT62BDC5fW9Wr9LjFqzGR4iNLu8thB5/3r5grmwdmLKq80iN+ZF4xb3bHjEPT0tWK53PmQ5h
2YDvFVYp6Xol+FavnhnnGOPrzYwAKCArmUF5CFRLFAIjjOPYXgIYervUqKBblGkZONA1v2gx+VFz
QoiYMDKfQ8fkxruwtiuWaTiWwwzzb5oDjOmrAJIeSF/LTs8IJXJzNpRb6G9EzgWPgdPNeuuHLVCY
do34mOQGQWmsFnP4ftH6UakNnksYsd5zJeFxsSMvNDK6weo1RyZ8pxPoEWO9vbEP77YQJrd2Sr5A
P9xi9iMrJkPi6sbNN4WSC75PlRlv8x5z/99xLE+sU1zNeI76fkEFJS2JDfYw6lrPtgFazrCWL/t0
4HDZYnstuqi4VtflFTMkEkPaJ6XwwKlo6lLp2P57xulBntncfDcgnAjPuEVRY9Q4pfPMk5DPwpMI
8oK92OqA/OMiCH1AHW1I0iakd5UXYgVLeWelShUKscG4FtcmI/0LUE/oxAJf2ppWah/O+HBBPoCj
gPCUu4bEtlHXBhzyh8B5U8pJvt9W79S1i0mYIS3GgPHcAWZ6AjpaWod5k9djwtmC0KAoQFjcQT9b
7APbCgxRmBXNOoORjCwGe4OueTeJoHa95LTqdYUF6W07QZNUMStvUyvm4blRxcDdKmHPbyRhauFm
6r3Ha3IuFptqEXBRVv/rvAfj2DE6keu7wtILWgtd46mYsQfnqnJeR0cbt5zwgyHU/xCSlwTz/LJ/
nkOUE8VlYstXycVVCXKbmr0GGRtSuWhjVu/U8o4inXFn43mufwpolieaJWQ34O3VtEmoKtrsgd24
t9nYanEh4bE6MetXqqlgDnFXdkCjlgOIQpOVZ5+UoomBMwJ1u7k8ObWkKdLw/NqpWbcEiPdGc1mA
XNd0TDvcBJVCm7FJGjZGtyjlWqg6WCWOEi9fHop8nc4ThBxmc8ExwQedOL+sSVyhacNHllFCcAgs
77NdYJo9h9gWqiE/IdlKACL3IB5Ta/fpJhhG1/1UrBXZ6XDSnLe805YIVTa3MXGf+muIH/3ItPwr
cikgFY58E3DNgmOH6j+1fWASBhhSIXJ94j/8TuiMmPzle8Kv7dvJ971l/8PDOIf7vxwV+wZcUSeB
n6AeQHYz4HmXKygdGKW03t7tLE5D0l5Hk1CvqsbgobWDlez/JOsA+ztdLvYIp98VVRNnKgAobRBh
tD20hPY+ZiHuFM8WwL9oBguXnu6M7b/NWzX52HAeY6oiUVxO0Yc0HLENxJiILcFMHbsCZx7SEze9
OAXQY59kQX7O1XRnWNqoYfz+Q+xGTUA60Qf/xd3EFBJo+3P11cyHx9Q/8+KuPZHujha3SPD63RDR
AE8VBBwC1kfRBsdVQ8CYAbSicQOOg+lb2sbx41nYQpJZBcSZbq+zS4plRZvp8d1LDsoTndAZaMU4
hX7YHAlPcFnmBNAGN3g/CJMjqMUA0arnMoffh+W5uE4A4TU979nr6l3erCE4tLDohWoVvxrQzSIF
qHQ19Q1i/whR/xJ2UL6OUwPXT0c+7VdOPS8cBToi2nJkrSwGBo2BrAXRs060+zRotFY3pULJF6vq
mXAhxc7J7xFQ2S813gKHASz3j8jATS/wURzMn8G0dvFE/t4ZKe6YTO5dUroKGRwqf+N0finRLKz+
SdARcy+owEcsSXvggKS4QOjbQTGALv6jxTWXV2vOKOKsoNAN8QHp6VFs78+5Zyymx1OSxol6F3cl
FonnX8eqlXmJBKhIhijl/+0YREfsuJy4ahshWNwrIfRdS35RyS6itvmpIdGEjl6yiBh1vxDhrbqa
e6+YAHIlslcUZhdDAFNkaSo+N9fHEvs4ZM5ZNwq5dHNbb1Vg0Z74fYUnWcwZCMCrrMSbs+fiCZGG
79864ADKEkHT1T3jM1MNhJhv2aAYYUFUDCbzE3V5pgW+aNfcWkycUkT/tF0y0AxBhvCzvQzUC74m
S/+OW8MjYsNn4eABOoaNZ0CYCfj0R+5n2HUgbDfY+kPusx1eSelaTrNZj14NvpxZyEm89/FtA1VV
+p13bpIGQOyrfSLWWd19YWJLQs+bYJMk+pgYbjcRQ1DNk78vqEIsBOqIhE88Z6ZhpfhGjpiIG0oS
1KqyFtCQ8fcqNX53P9KcCGqmxgRutq4zry9RUHjfbW2OlQIOgFIRDLY7tWR9L4FiYi4Khc+bPeKu
wDxH/X1tMIzIGJRjenJKYZTPrzdv/SDKb3PEe9f1y8WITO8aacprC2dfmFNTlspzRg8MrziwH4eu
XiPUfw+C7SKeH5do3JOEKN7+Y5M3MO3b0JU0Rv2Uf4rhi4xkOHQU3mzWoyEg/+1hVR838FLOY39C
z6kwCMgSoET1bTaj0yE/U8UPJemE39m2b2laq/e0M6Wl2IX4quBIL9x7gWJSGzMLLD7K3bGa2tbP
p0BTQw2j0nhiV0KWqjuORCW7AYHeVrq/lRmSWWHIuVbYe/YsbwzX78dodnosWh+DgEp3OlVDBfSE
aHswLGdYtav61z6XY2LRySpYI2oWMlYzIWh05HPaAWHfz2R2RrXqKWYf5q8MDrq6svq734c1+qT/
Duj8VBdmuuKCfNWNzlwmJQ4GSpOr/fBuCpvBKg8aPKV4GeZKOsNR19C0QdMdp/0+iLX5egGQOWq9
aSwgIesorEJRAwgeLVKYvLOOKP5JYPQ0YJo9Z2g6fm4PRiRMu1Y6gm9mgDwFjO9Mp+GFHU0gDwIm
3z+q7jDgi3vCYkpE3YQfRNZwm5rNs5aT9/sGfoHoN4kRZriHhNAF9ATWM1b5C6UyGLuRYFYMktkV
RAHZSKIVeoq0a5rrpaJ5oqmXLv4zE/mUD7cDvfH0nJMVTDXZL293Lf6XR3xQFKsrzT713Qb+rUhp
BRG4AGJ9wLV8O1ZlEe57HsP814WJRhx3ljjSTdC0aEWGKAfUIHBJnyglq6MD/0O1vZMgFdWxaINQ
/Qsu8RqCnVTtbl60zaUjbHXLzBuANyM8AntDaxwaQ0FmOdJ/WOZprZZpt0NdNEeM3IU6cpIMiFrq
tkf23mXLzNSBlfk+Omcmr+8Bc+C4BQn3agVocwI0NSqa39yznvHxn5qMBLcd5LtLFQtr0Flk/U2y
rnDu4GPtHPPepkYh41L1I9hvKWe+ZlYuGGgJB2/zwvauwTdtWfIL0ORJBwaltReNIEVfHr6AggV+
WZQfk/h5oDeRGehx1ndLyCMVkfan93HEqRaVuoJNy2K2E9uuIQ6R41IjHIwUhWCB/EPLdIa246wH
6H4Hp482xRtxUU7hCPNwFR4ivAl2oqVAJgmBXU5NcT4XlKQkhP/J3lhR/y40ruKXtHPcN2IKjmp0
rOy46ujfuKXOL+Q4CWYffTkJVmi8KuLUV1bdAVJwAo1WwpLM5EIzPQ1qEXY6RNUvmo+gNfojZvRY
gcULCHDxqkqZgjzbQxax3Z01qHPUYJIZFhRd8Jg7YW5WAQP3xnhlCmgyUGvbHlVymApmD9Kmtoyb
HgTKDmMaawJGqab1njwK/JxpapYQhBGVsFRyRndoyQrgSDQwUFMOkMPVMJ8MjHUmB58En1oPwscC
xhRZCyBmf+bZFocgC+1+G+P9FdJeWW4tZwwKYSwrn8bg6DVwu0yUol8If+pHpBOycKqE9G36RUhd
V+l6uRuusBo9nJL9ti4vfOJtZVZtL1AfenW1z6e8R8+u9rribBa4B+3cicCkn6MqsZpqzlwrFHAz
wxXksIvOZWLoGZ3pG/UkqyXxg9O2dg01K5BWjJgv+Jp5Q15TcqAt/cO65VK3HRo3Tjjc3aqL7DDv
yap+AJWDU9hRCeGMtEwQKxGI9KXAXHH3fEqt52kXaxbr0cn+UHanHqIFMnqxsGIc8NHznam+SMY9
57O4GJwn14Tlra1SUbuwno8W9fSro3fF8Zm/RH1epfdwWFDUQoBbFz8/pNDJBpwKYpIAJtaC9gnU
hevz/th+bQKW98hhRZWmaseWm5O+O+g7LJb7ygvbTY9389H5Ga5fBoqBdX+Rr4NkFbzxoLXQ0Xnv
vbMXi+eUvJtvFzWZIGNf5VhFNrlEcz/Juj9jpuKvem6257R2Swdf8ggiGP6/HyTJ3rdeKSfsHa6B
6hSD/7jblomayGoOPUIVb7izSRBYP0d5sfALEei+tKBmnId5rvrxVNG7r9SaCiPGIS0obqeV0cIp
tuavwA0tKR0SjrjLitA7WN0qPRfl3R1hqH8yzj5gLtPPeHsaI+cnsE930Ar8UXF/JuWBXBTqynIu
JXgX87P53QRS4/JynEea1DbcrQKocPjNpoZ3+Ov2OSG8bTDMkZQqhAkty3fbWSAiedbLDPt4DxWr
wHX7gNpLxudswkCxfNlIIg2GmwAuwps1vQYjeD5tN1Oxq+egfhoms0Cyjd/pc0rTODBx8bJbcVGL
u9gDs50HaQTV8eoEeJJJVLwhWtMzSmRSLeGdzYrAeJvjrOqpmJoL4gQZvPJ62XDstOd/YBlHOLP8
asyu14sff8gknJgbWFbgh3M2ddBUksl3G4iQ3EfdJsnwVFYQjA9NJLlRhpu/sIkqO7sv3yogBQmw
K0WP2aSbT44jFu0ud7Af8wmNxD4T6oY3TNDA2hy/yXwJw34lSqQpY1OhwQdeQW0LeAz19gOmztJH
RMtyEC4HjzA4i7Ag+8gDcttPRHWvFPTm1IBCA5JmpTy8Sh4xryQLloJVwpdtIgp2ZdbYc7oFbXNq
0z32OxTvBlg+vbcnRbaByGyrkBoH5Ge3996Hb5/a6pwoZRsHyqYOFIiqrKOry1QElasFvLUd5ApF
uNxy7RFENeoprDQpCdm13dCsWTxChc8b7FhGsbQ8dCLA/8NYBdz8hZo37A0KhrAhBlvEt5rfURNc
mB5msmb1URbsUzNtvT79ua7TGdkrs7h/4EaDjMbvF0gBU7q38WBA/PguC1qK4YX34xaBFhjZ6l2g
T0Oz4GA+rS3P7xwvAmTrb9BWI58Pfq/Fe0/TbdxTBQY99cf8jY/QADbnVEUAgicPqRp8Cwb6CMoo
OiuKiKzTaTFAFMIlnvdO4CD1EDuMwUzPNKbgOigv7alHyUuLbYN/xZEUcqhmuP/kORKZONo48Wo5
/pe+vWefWXdhnQUgdknBh3+E9WxgXXoPjkAxwuxqtWxjyVX9Qjh0++YYmt4pD4A8LofC1/Rtxnv4
7W2YnIEiSmt62e6Jva1XaVBWsmbykkzUt5OLRIkqTfRlIktNspaW+o/ja6I2+6A3hFdQJGUM6FQi
0ctAEQd4lr9MMTfODOT3eMKLvqIlXf9Bwne3fYhr3Otkva0LOcGP3iO/ie+uY13FS1sEDHgetd7U
qMsBlwH5UfQJNlVZSecrvCMB5cwkh++C6x0YCz5sW7uGLBFjKVLOhYpHx6TQugHfwOVjBoGxG/q1
tZCtsy3sU/ebqSE+rAkeZfCayUVhyzBSw43Zs3hM5nMQi1qtE+IrfuO8lAHkDbRE/DL9tryTJQJy
NnlvqwL5/abhxjyJn4FQ72eZWPctGdzOIhRwtDk1of83t4kenO6DXHuMkTUzwbWpolqkbgsazd2I
sX96RohzzWqCGkDFK5/TxY+9PuvJ0tESSsCfE6FnsfBYyEhQgRe3EnWbtPlzkcPeLIBHApb84pWL
p2gZW5W/snPTvFZQcAmyQgYrWZdb0+OVCO5LZivxa7wHGRQIfVr+hUKXwg1a5bbKOELE64Xawe/D
+oQZK5Mr8IdjyjT2DWXtYkwhr8T/tRN6eQG2/5+5E2ecxOKGHReHqu/ZEOIqVcL6Ocis6BiNPcBl
lHxDi2aB+7B/31Dx796Bm+yMIgLvh0bIcKOG7mel4tc2Q7X7JRIqVM4EteXlHuJ0/jNjq5EAJ2Ho
HFAJ6DQODGsdUIJ3mBTKb/OdgFlOha1khzsVJig/KjmDDVuL4HniXiMX2Ir1ndfJu50CYZ1qjoL4
FKFJahaGb/sUpz1fPG6Rsd9cwiyaWyXc2o1ypGrsack+7QB+sm5c8f6xNgK8feLxZQ1Ksv6TqeJ1
+kUvDijdgDUS1ZppEc9V5OBGGgpK3X86RozGPpwJPbtI2J3ogIzvioQ+4IFtxCnmldqsAUYKiK5N
olMAt1h1BzNYCAPY2MkCCyO++jjGRWzobkPfMs7L5uZ9ee1irF0O59MSSAug8s9BRtVBe2a+1JCO
CLi9ck50zWX9wdXMvwmLpes1O190+3zoFd8jknoOpznJvXPt4aH78T3nDDbzlPCN5J/m2SneQ8Qt
pJxcg7AWZBdm1GagWrOpUEykZPz9AW9/tFmMbMK6gDny6Lj0Z4v30f3UykpDr2SjiVHl8byIg7E0
S6J2wC8VaTIKA2+yaKMjXR+7MmZEz1UXuuoy6O7eir4Ead2aUK3l/lmB3YmoZdvJHodnT8xW2y+1
2AjXLLTIHYKE//4uDGuI/kYUyvp9LE5FYHVI8Hsl5wMl1mqdMrj9msUHnynqnv+FVCSIKmbc0EiB
BE3OBCK9/i6y5KeVJlSygDC8ftcy50XhDT65c3tlkrvgplfD35f1wU8JSOf6b/X+8hvWun0w6/Em
wlhhcibgJi1//BGcqZTsdMbc95y1+iVdunSglnGC1vzgkPg9Wla7RvusQTrDIsbKNcZZM7245AsU
3wQRbTiHuWFf+y0AyXALtwnZIrTl0Gqe5kmKzMkN+mixUUzBQB7oaY3ZjtPBLsAl/finUHpsIIaE
E1+Aur7mKDVz9bTU4lOkeJc55Fb9uPM/GbvyDijlnC7APItCfsf0duiygmVfL8UOqL2fGgzhQ82m
9p+1jOyqOBpiMsrFkZqoO6lf0QrLvHoTNJkHa6UNmyQuc+Y9LT/xcAEhwc05DiyZsk1kf8NrbT5C
OgMf/7umx3TAYLzAVvTnaDBOowgFD/7+2O+TeN6HuT/gkQTUBZUBAT2zUrK/cJj03v/3uNC8/iop
6czswlQVy7wc9PDwmBOXALXmmitQ/3MCqV3tQrGDePpZ3R8GibNRCR3BqednERXEwiBY9BurE654
XRheD9AMRAyWUNGBpfSCLlNHdnkCY9EQ2wSCitC7aEywz5hGrsmBZ7ZfpgUXwkgr1fsgE8b3yxgR
F099hQgn7Sr/8LN4XdRc4KVkHxJin0brWJrtGuy67Fw2RbynRcmdU99/qdpccUo7Y9M7cHftpFqk
Lj8DH+UMVbYyOufBkL6fgcekXJ0+qF4xCJrpGjHDJN2DkvZbHwJlVszL+mX5a5TwUhftkRmJpobB
hmaw/eHNgu7NRRV2JwWlmRMKXar6Fomq3J2Ogw/2kepGQy5zWAhCZkago78nLxU9BHlTUWB7Gi60
6l4Pl0NrD+RMhMcgZI4z5stVb1ztT3ZglQT/n4JFDOOdLldqaytx8q59XMyOtH43ZUfOWuFD/XkV
GKap9nAXvunwwvJQt4sIZxJSq/NC5cmFwcx+9FLajZzwxgrUAyml9keIA8Dzc9gfwUJXNFRDgvLJ
bxgdbBACTkE3gk513lmEOz7tEePd7x9Vj5K2FoaYiSREg8MmupNhLHWz6ayvQm1bqu3K3j+8G7Ku
KVN4aG4KtFzd1Fw2g198rUl5tYcdJJkYJBSXZQNLOXYvtDYh3eVnpSJpE0J4XDOruxeO5pyyrFk9
lpfHXJvedhqlLNnB5TMEawR1uPbBX/lm42tR+Z7xVTxsOZt7hVW7tSpGpiOG95DBZ/eot4I9tsIP
M/IinQdSRArh3lluoe2sQ1mmytbwHa3jfSyw0xs7qqzJbwefw4JyMKrbndVO7GypAAc4Nbirc+Se
zrO9Yt+aACO0l/fCRVyYsEK3fSlqdpaA5G/M3Kbrrl27vSA/t8/3nQ3I0YkW45onJbevanmRGQyN
MMKFonW8OXXqaeQe5R2EPOz63Sl9tFMry4rajiqlQfPjREXK8FItyhxyI3dJ+YhVNoakl46miNvm
qH0/qO9RuafNkhrYxDm5g3VzeV9jKEDzyXO+rHusRV+TDvWHAshJiuKnU/9zCEdW14XF8jg56Y0A
rgs0I4eZQSwWsHmLogsu571IvkGvoXM70C0n2d4egIk0V03aAAy6PUuDTQQBnifC+S4I3PB0q9aL
TarNJUO6zbzDcLuo55HUyzMZYNZOic7+hE/tbAc8ZGj5rJGN7mEflN/MTwsv2/a/GRQp1O43BLpV
IUGlWoh57UOG49OJxPWwr5lAQhc1DLPAD0z40AEfGSY/oUg+jGoXuhjjoIkMFjRXrFLkHJtRiH4Q
RIFSeZN/fyd+dL+n7gLZe4V/GLerxFhWFN1XjNpk9RadnpYiStegM1oGUfU10ydSeoW46ukL2w4Q
ANKsj6Nkx54FulIa60hRDrR3+MP5ZF3OI4RU/Rwq04p8rJmOL1gyWjSgusCzRuIp3Z5FBAIHQ04B
CqBvVwZU6ZmGCQP3ECkkuaFAGjxda1LfJSrNnpJtyaH+KnjsPBwD0QNu54cMr+jhzfd07SdvTWpX
RP9wgcy2RnwvouW9AsCdHL0QxzvBVVRgrykdc4xYKi4fQNzgZdiAQtcRNGm9882YyW635fEGofp/
bCJHjt7HdTZNRJPjzp2sRPUelRkbaq01HyfOrHAQN+ikwZRib6/qGMCzhBE3EPDcaD3tNw20HV/Z
Gvzi6MIagcjiw/ozQUHQWIaXp2XXLF2S4FSP3/O3irbPhNRNktObh/CiLOYu8b/AqyEKqDv7+u+F
//p/1/P8EIWmwE6wWqG/LkpKTaMChKerauwLbBQLGLIG4ce69B0Ujz3amDY27tHLg5/c63kvN7P8
jhM56uU+f4aNdDSP0dLT6JXrCFpCWNZ7fzFRvr9tyub8+cSGKzhAloifbQOqLZaVdLtb5YEodGag
CWD2XWVZL3ZkstD7UNEaEod7/50v4m0azweCXB2PJeulfIFUZTqFmZZAirdVxHVpt075nGQiZezs
kOTVAWG+WBzodvnC8LmwQFDmfYOW62KQj0OFW6Ja9a/SmXqcVJY80H6qvEwNBP7dT7udBQvagWKy
bTFRN4P3uOEQ0epBjUWpi2x76tSPLiQddnRyt/gNPDOQHFBNkXYrfMsG+qMnP9ZI5AGc0cWMNnCI
9hOqDnwEyR2iRAkFYSOz9hIBoIlnfeUHIhm5twKVhBzcjbimx8WEEnMbffuDz34Hq63DXa89G2Rl
+AZScO5BX5DMm+roBvfrGfsDHLNiyHYNLYa0A3aPdrUWfYboSLWlilfMhj9NTkfOPk9tHqjlSFSy
OKHobHX22qUS5nLIoeHU1Q9c9pgdus1xra5t1UitSk/twaUk3VrhN/YvTydSNJpHXijsbrF/FvcZ
CBm8QHzI0xmWk8TgFGuqavfj28AMH+GR/mZeTGUiyXVVpkLTl+nVgMh2ohFEQriYG97FYy2xaDRS
mkPWy3gNCF3H6yr9Yokn7xDqIHSmbjvosAunBICL87mFMI1a1pWSCo3NquiqoMUNduhP8iSV14XI
Dot7JNT8JyPQDchkGU8oktE+BdgkQGDvqh9X6HAxpCaefK7xF4hAdawDRYPfiYf0YiTFBqmJf6S1
b18VECXHHR2muQq4DVvVbL59YdOz/kvY4b5e39DPFeVMz3WH0sqlFI45UTwlXrHvT45Rifn14VmM
L9SGyLnb6YWnh1iFAwkmCB8PJjvz790LEA7YqVmy8doxUAYy5Df3uGfdnxXht166dMZGUQb4EehG
oHxt/VhM4Sr+eq6Cr4se3UNj3fZ1qwAbHLn5g93CaifIbGJWphW+MxqMGncJZmR96+Y1zbgkTZf/
2HkhR2xej8sEQmXxAeRyIOPej1+RhSs0++LcWXfu/MLNF8y93tIymbcsQJOXZg2DZiE7VIAcg/+y
La9IYMR8HDKDyXC0GEQRRIVeE9hruvEAfcformT8m0C80ymCQMt0wuMiafMCmiaZ94nx5sI4LZnp
5p4gCv28xFD0AcZR0crIeaXxKVTkWEjC54MgnP3kywvUf9GNba9aDkSALYKWUTitIdKh04zyRBG4
VYA6PVMTW7x/nKwtbMS9s2t9nZgAJNhsCPjIuJNIyhdDMcz+iUVScNAl5L5euGdY675eyd81B4kg
CXaE8CmiodGRD21oNKMULwmLsOzHAg5XjzvmCUrey9YEiCg6ooB/RUINRSx9ZebfTb+EyYvRcwpM
1tfsqeK+fZjD6R9Btid5cYJbJM87w79Y73lwTRMaZlMtNTOqCgWKuPAanWiLjhmPJvbKc9VPmWnA
FUra+r8+nvSJ1h312QOcalwWimQ0NestFRXOHicdRfzUjWhzYYZpKt+FqEzsPQSiJ5UrgxQvUZcl
rgfxgQbKE+gAi6Dm1u5C/A6YQJFKEhkbyBwPC+8t4m66SSgkWvIEs8NemIu2sWB5KM+MwYZX+JIn
w8lhKKKCEetcpCW4OkqLXqVTF3bYcMhdB55LSxCedxPETYMjCBr/rJM9qfuIjv+36YmnTK4UbzCF
TMBn4Dug4F2t6cl82J18/TIQoy7soFpawLZZbFZ853t3VxPge07gfoz8gNaTHv1//xW4EG8/NHZT
hBA5Qq6say1YSw/DMZ3yMqa1uOhmzX6Ko+qQDxutXnPG5p5ypqTyId/WDpDO+eJe/0ykKWZekMag
pYpn8sBhxLACrR3Tp6ZdORP+RORGx7XDUgyVMAD2I9I0D2XTLXfkiZO8X8jFeEAuQT1QnDyyBAMw
uCqA/W0C/00mSzpjJswivaelOOKhMKSEnVzTvCmwE12vzVXphSwtpJ5Xg/1dPJRZo/xUNjVyR8dh
2AO5gLkARPitniWLOB4a1MhpHZNtSttoezjKeZl3Yc5hKEWRQqhsIK6QzxtOgMSUpZDgnRz8OmLw
N8ceDF+mPM2+gA2xynj9ckBEf0iKV+hWJoyfUuLCNvkgVuRT41yQ90OupFi67SWpbyE4qPJcbX3N
/uG8UEA8aJeHhp/0XdCB0OqaL5jlSyhEQFqPlPq7KHaUgV5cso6zQcweQp6iSlYnzWAlf409yuJu
cQDhUBu8vDO0aI7DMwhMrpSkAZ6YgWhZ1XclD8TDJ6ZQI4ARbiP3hHgZY2/zpxZowBRtO/ositpA
nNn9FF/vhSxNFCq/W7BkGYWCwcACk7DmxR7WF+1PtHf7ziqpIZN4w2ThMMC3pD0X+G2s96MxcKg/
iU6kzOW/Y8g99z9onZ36nX0L/vf8dapgDRXu2eB0qaGaDqPWAp3l5LUG8J4F5a00g4XIOTtXxryH
H/f8rrVGwWAyLyxhOMDaqPFjovi3E9ktpNG60kJHW5v7quVO9HEV0i9aTFVnChH7L3jmHu8CIK9+
0UUSx9yKS2Wye0bm+bsAI6Bx1OSBFeKUNENmj7qK3afsg+uZdi6VUFCCRvSYpQwkb688EIGwip5m
tsBO3YEEAdvBaKmLRvJsa4haoPPvvCc4BznnM9Rn2lCvm+ar6h420QeJY5k0LkYRHJZzZ9YaLpP8
opJNo6E7sVdTll9eqnBdWeOljR82brl6YWPQ/+1VhYLRsvPewJzHowwRoLuAArWNDak2ZwT7/mk0
G0afdpSbjsNtcpWEyMIALW3sTJDmwmp8A/OBaaE2seRkiTuQhBeufxN/ReE+1jyHTPyGcL5qriwa
LDNQYBtzq5Sn/oAWvtWPp4MPFgW/cBebCJh/qOcnbIEzSZVj40um5zWRWf7cP6nM6faczoQz5wyG
52dLft0a6enDQwwcatZm6qtUGG5+hBfOlGHG3h4JCnLqHcTreJrHX0xnjFMy5+SRBX0th1By4Ni3
RiPWL1P/INlI2sS4PhZZkgLFZ20zogSKqPLRSzL3OKZzEdw1ip3kEVFybKlZUCv3zPwkEaOwjf8D
vXAJB8PpRSWrGjP/W4ghGx6DUIgnGKaaawcxCIMlpp+aI5I4tEBH/vJn2XPS9jsZD3QoAOiA3wP2
eK60SCzhxhLcOfgT+0vBe6wXxQFYvAHeoYSziazq6OoOU/o+xMDMI1IjQreadVbgAZI7OF0doy3d
qkNq4Z33ULMqyvD/IE2irZ8Af1pjFUnS+U06NlzH2M0dWeGoFTZVwyTVtplHLzynx1J66gBD7BLQ
S6BYdJtqXimyUTVnuV1RCOeJ0tCm+cQoSalwyeWFK7ahK5jsvB+7m5zu4kCXqBUh74ZsQ0015uZO
3nPfq+D0nsXdq57v/Q8nKHksHIzqv0qc+V+CzZq0p08ONJdGTH6e49v3V0gA+5+ywYDXqTYtvfDp
6bOr+QpzdBAR6nYHv0jcANdoBhjXEbtBC0Xhwl7Fu553JvWQeKQaDdOeQvgZHEiA5lE1CQCsrEX4
fq4gnjF1WSZGJ0rFm5e+fTSraBdugg4N/lla6hhp4yTxMRhMtOXrITSKljqaBFwrhH66hj8iScb6
8gUOBK5pcgJGu2rkPPuZmZu6XGcKS82MaBVwJ9oURlAXOKyCZh+YwcmesJDtTr0sHTHKKMJgK2wW
TvBxxopoQczkEuDEFuNy+i8HWy53UwTsK90NknVUOKDVgJhB88ybPZjBxm8MKnQXgIIb2c3KX+Ha
FDMqDswQiQ9xLv9fihwPf1joau4XKsDOoedrwul8PseV5zG0AwD+tChQSTeV6uTTFZ1s8P/+v0Uw
OG+b4Er/imtV7YK0eXhoaZD9f+EzEqJxmR9EVqbhEykOn1YKZzf8AaIZiUhzjVZZmaJhV3ksCyeA
TuuzJ4FXlQpifiMSEtVmR6+n5g6FP93Ym9y0A10II9o17muhvMnk5on/vDHmvFgmEgzapdAfg0gS
yl4cMJOOSkRzc0fYdAqMRktw/BTruXiPKHt3ZGkny5cST5yTIYOiu64KBjJbAd/Bdlq7KP15D9PK
UijSmiHUd2zygzlL+TyTnzTNPxxHsvCQSEcTnfS+51H3x3x5SEw5O3gtmgC92VBP1gMl6GR6sXNo
UdKR4YQMfmdrlEV3vbeBNc6zmLkK/yyJOUGQ35rYzJWILcfofOLyBPd+4PEjr9Rgj0xbFEuJMAu+
1tJkRW5J7siXIXSqIzhzTh7Lx4q1RSWOGWDnL8hWHxPXi1MIemjZVVNkB5fkOVSQ/0cjXNERGqQr
hIywog8UAB6bVWELlrNU2w6+GWH5gFHsI3aed/IzSaOQVqSwbXkHFl+eP7IlOVDYVev2fcqmkj5k
OUtWCWJdClAKm4mLHPQrtdPF97ESAzI9KNiCijGrh1aoin8bmeV98tmGF05Gg9UHw+r8EAevtPzd
vsh7ZaQTcw9Z1P6Kb8BEO4VE1aiIAvaTcwDqkCeyyRQnJXg6tkzV/jpOm/ZZyHewhb/mdQRdquJM
yX3roXqPQqoTCXfr+bRuVgjmrEl3vNfmjxsqAR7EC5ev6C7L3U9duYZMgMvK9wD1P31FCjcETC/5
s1Td/veg/Qj8q4Nsyn27x3SSzHXoxtsn78UXd6qhLDjRxStxsTbIDWux7b965wcyZu36NWMUgrcr
4c1tUyWm2txpHeunhpkCXyKjbj6guvDzhw2DdW3TrfO1QYlznlaR/yoVCpt8Br9K7Xytb7O/g8xe
+eY77vBPlE7+Pma79anZyiWtm0qsDJbLJz13rJlksXSY+59o/XXMLEF4lGH6SsQUpGC3MNkT894e
DXAvLjsSPGhLkpMvciFNeBn5+hdNq1/nre2X20BwJRTdEBKe3d8tqhMIknR/lTVqM5VmyaTtUB9M
iekaMxMaYfKAS8ZkmdGnQ9uCaLhiXFL+I7d8syvjrPP/0Tk+EMYKF4clV7V/yVf6tyEKzWEERS83
Gdj6ssdrw67GTo2P7xNNJ7yg4ZudWAH6rIRhM3hOBnNTdR+OaAiO4weYpsA04xgidbuIxdYORpZk
K1owtSAnWvC/pmDIZ5IJPs4GHFdc419v7TgtBzhoyPGpBL7Yz3FVnj5RxwbmmyNyI2+vMhu8JfRo
HMWQ3rFG0/ME6BmgQ09mk3jbGo2WAqLVYL5hTa+VYY67nK4v17k9zl09QwUXh68OSGJNj8cO1fql
HTsZoQMRcQ8rFGrwYCEfvtN7wkYiNuGCCsNL0jJV6Uer7l1sB8N+6Zpguk14oL/9oWG4ra782bBK
NqEBMGS1b95COfCb/pSTfsKMMRSr/FWw4/VWZoWFc8wvQd3MO7h1V4RNQqV9EGPHU+KWHIC0ffG+
+TydYVsNYhX9LeZOj+KB+lOoEjR6U+RyI5yqAgTamVtN5o1QJ32U+qzj3pAOdxz3gqW+IUa1kmcy
PtRXSbuKc2t3ixUBpTsqSJGP5OJ7HUFMsXnG+GDxWb71Ynb/BzMmim69u6MtX+UT5/HUeYQWwca+
Qh5htgaaAhbs6+1O8ub+aMlsonnHiIT+kJmiJwHtT2wm5+fUfGMawF9aePltvSynTyO48R6xbpkE
TKoqN6eqTSUOIrqDSNfQWw1zGm4mE19tY7+8rny7NG8KAz2XRgZRdzqPgvBV6mg0nqxNOJ532GiF
/4RGWqa+tOdFcMhmlf7yJl+osGeMWDgJMweuTVViGiE2EqDKeLs5driRiJM9r/HinTrRm/n/uRIR
fC8sgXZUNGWGgu2v+miuc/bAkQAkhCW0ROy/zysADL1wit3Lnrh5/PZZc2XOQssS6ng6PPgfhiua
iLFWUhlhl9S6thVCkvs77FPqTO1Lw9qYh14S/iFlv6MolCcE68nUiod3fXoKPW+jIcnFh/8qFwx0
j7vsxAPUwln0kEVlCYK03j2MQFSE/+5i+9T/gxisr6memx4Y+P7HjDIam8Jl3zrnZci9eveJITmQ
sDvyvSiM1NG19UCksW5fxslLO8fKSSdCh7+3vvPaVgwLJ7Dq2E2D8fbTSaxkFgZeafNql/+UV74Y
GU2EByrEqOKMcRownVNtvx5wyS8jtLB/zzXajEUQuRVCrxX8GYbZD49GHyHE/MzLsZWkvvfQ8Fs1
5mUkw/6TI062BLahQYkFqCT4gAcy/fLsEoS7uLm+jw0p3tV5UfHjihDTTQe7gJlGg8Upci1Iqi/Q
kEEKKAor1f168UKAHIwcINIsUEkP9v+Kdu86Ek+UaONL6wZ9tnVTYRtOdqkDCIp4+7bKXq7xAKBM
ysXSrFbbvTwneKHPm9oCCESioJGwqoBy/gPnoI2CMhXH24XJERxvnOwpC4mzv/EMZYUZgER+WwjQ
k28U+tGAqSUasaKaXHiUdDMMkHHlxjKXLmKOSJ6EjH74Qbpokmdkuh95tST3XQ68SqljXD8fyLW0
7aDNXkP96ERIUDO+nW4LQUd3jpz4z/WJ9YmEBWpFaJlqx5irOWnYJxtisg60VqkYhQcpbRcONZmi
XUsVqq7rvX3chESEO1h7q2xraBBPf+tns9MesWrTqMyNgcdjVv6+N3dtpo0armTh0hioEQx01bKa
giFR838/A+2YZwXVntJVO+omyURympA26iwUAlL6y4AzpT/TDFEk+BKJny11gttkBzYnWZ3DS2kq
5urlDgeOvHV9IIjbZJ0dRDD71XeLFtbHwLiblHFV/PVBqgILmg/0KUC20/onZ0m0uWggKQQdD5Bw
BX6Fd3YollzwYL0+njWikaJLtWUqHyqBzp1rIJ6qtZco9z8YDuCsR6rd6WJaQDvLOQX43yXSXd+W
p7b9KU9jQHiBsmQXX2Fhtj46JVJ3mYIjsu2SLARxZRWFHI9pr5qtmRANGMpUz2rwRGlAEMFjHG/5
6xENFClJmWwoYUg+9OmPE5KPzWrG7U506QkpEMNQREr0vAXx0l5z7KsHKGzbD989WdHJCXZ1pDC0
qzkkshZAureBqzlgCFfjxRd5e+4B3VvYaRAfuXkCRlqSrkfXCz/8v0HC6HF9+MpTWusk4KE9+1io
FEznheF+jnIreTlwQUSaEhi40Q7VkATgQS4qe9Q5uObxumWgZhNSLJMhLHDd80FPctgg26otvGL6
6F1qeOgCrNYUq+EfqiRdy6ruor06LWty1+8Hh1LOyzz7YZ4blOczM+VezXu8mTSvR4RigVKD7335
b1lFa6eLLPrSny9JLNQ/+Klejpu6GSXZrm+3r7O7ihp7lEV/Dmee1ZiSgdqb1SyV21Sye97v3fsw
ebEudFpxwqOhePanakGNQw61w/25nhnUa7CFpESxceuSLmFoseVMEAhmRSKah7k2Ul8V1QUJyAj9
8tMeB/7z3wEcKmU0lRAoW9vYgTSMDAF1hsm1NVPTCRCz+6YWViM5wLKWfzYFKu+X0TFbkJ1Es26u
tOvsDLo7VQjyopieeUFlDZWJmvF7Q6p8O5fl2u4fTzSdRbxeuUtbDTclucSdeRh/oGgkjOKB7S/Q
9eLGKcDb19y7r3Ho0E5VhKzEmla3WGRHBoCYVm+Qs4br9dXTw/kSbP0l+e5xntXYbtNgmqoWWWK6
Iqm+dk/T2gWR+OdYKUd/J6VfqPpFAR2T/T5hwmIm3WVS8vPB6GMpv7xBspsiMqBzcBfOE+Dy53R0
UpD/opp54KHlozXcnZONSNg2jVI8hU3zYJQoIvLKndr/+Er01Tthjh88IEBFVfidVFegTjZ4Ac+s
OAHfZhmWUXh9or7HzuWmW/mVwa/DSRs6GAG5zamJeiSa7jVFcPxvQNGzJJhUo0+mxK+OiSWvje/l
k+9i+RqcTm2dxABoImTmvyTqRqDWQzrz1cHH/DebjSbV9xAbOtW4MV+Lo5nNMisYog40wA+ilWTz
2/8e4VeY+qcEcHBrsY9Z1Y0vBo4u3mhs4DhDoFM4//Vri7hiGwAn+v12vf1bYASKNqDf3h1V987t
4qBDl8Pq8CxSaKLVEjPKKXfkbWi1bbcPUtkLX4jARHqSnUWANDArXDxnDFqHlxEW8wQ7adm7eyFI
vXSKAN5AGyw67Sv7rfMtAZWlQXogvsKN/LYULCp7EXfzIjOaqzUU8bQ5wsNTw+YrLhZ/XDvfGUJs
r6kPISkN7jTeu3kUEE6PjRkoRKsTR0+6zDo5Sp2cHE+qUXfaAg5YLgnGanDoq5CD9RRgeiRpj41C
9rxjFBl+hgXREj/Q5yfBb4j5lrfOG71AykycwD4VI1jp9AFasA0GiNEKX0WwO5zlqIhaiFnyIkjz
5nob2U/Pl+KNjcTeGnsQwHgfQTNDVcd2rJHTlbLxDgvg5wiS/zk4SbPIrPwv3mpYVpXVoK8LOu8O
5OacHk6yFJg79VMJGTNVWS0IPksVO7Xnbq9j7MQJhSNUB5eWYLSCD1LTLTlfeJYUwuN9QbAlCM3O
kzpn3Z8b4l6/KbpWVm0fEcpbDDCaBLIhiGK4KVLE+qvR7Iy1a2nGwIE4HPf+/DOX0KLLeJtfMsxv
nQB/BtGrCoxvb8gNUGyTJjHkykp/qnZdxjzJuLc2E/GR9K4JzXehpkCvcERUf66/QW9wKQRfliwh
i5S/o22M4dU08t40RIdxeZB518sZTvrGzxRhVFd0T3HYxP6XYEshEiwEYnRqfnanr3yhmJt78wIh
r7G8rlROXiYzsVJJVvHmGfPZPHYiRbi9lbNK+zYkJPErgtIf3oc0mkVlVp+alV6dgJ0U+jnyY4aD
bWzvIGnyRyoEmjFv8QgS+VyI1d4Xckf9GQ1op5bwg7JpTa5xoFIwZp8nsnIQdsE82VAZuoABikIu
geyeTJ/ZMnaZgS5QxbNVDTeKkGXKnclts2k/+aaRgrmcchVbpAebegcap/HOcCx3sRw1pUbMWada
zxQ7QPLb269xgPkWNrZfhrrufDhoWf4Fl4+np3wXSAfOfHqQUEeE3qWpnKDBfnHXVMF5kDn1oFOc
Qd6pGsGkD8Wb4lemYK54rfKfggR+8CZFWK7szZ4UJPtx6tXyZidiHsSWCBE/X11OiRgQ7xlty5JF
8lXDrs1f10SmQEWUX6d35mp2wR+NubIsUxM4QtJsrVUEIy4D7TGTHnnvpFCYsx+CByXSiEmJnGTB
V4LzsWvW06rx0qqPao5GgcVE4TFYlxKb6oNoi4OwUbVAIhXhChKT8NkoMwEeNJTPLsnIP7s6V1tQ
14Uo7clqOs6qWz8x05weiyQh6d2+L/4U8Hmi95Cte8LtbXEzbjvoVSQ7bpImC5b5db8UpfMvByFe
2cUN3PIp6sT4WPCZljYc4XWtpTlEvYJTGuHNxuNzthxlmuHNnytF4yloNnyc/PPJU1nahcyWs8Qn
B9nC+roPrvTFtD7BBVXt9hD9iIX/3Th7gXkdWTWbYnlfmwG4owbuK4UHUAY+n1ph84UJ7xL/ZNsz
g7IqWpYD1d5C7DTDYYT9sZ5lAdjFxlmudYjfnRjZGLKmXbZBtYOrAlLwQxitUvfpyqwPbdGCgA/i
Iaz+pV1V28icAt0HNf+fwYzCpnDG7NCybxM4u4B3a/i6r2kRJxXDbHlcoDabiDt4S7MjOda/t0Dp
0179Am58o6jXGVuNwpMpYyAhXVG5c0v0POEcnvdftQHYOHAkezpRLM4DC77TD7iafhGbjwrMQGCk
lWJy8PtfDTIWbA7dMcsC2hdhrlG84edXmC1TxoXXEctMt4KrGT9lq3dbwqTwegLYgtzFTFkYto1D
f9wdvCevw6ztvs5JZu/X5dMK4X+mfixjMtnFs4AdTD/H9kZ0KxFZBqnSkvr4uW1Z4wn8Sngn8UXc
Tk/JUAboaqLqJprcMw5n+NMcKaSDmhzEqmqbm0qL16aQfrrHRhvgEHleFXo0bF+u1xE2CJX0lh4c
6PRoSc0y5kHyEN085S8eqcHugkImycaLmR/1h21bOYVUHop8GJ5Z2Pn5QciMVf5TA1V0rqcbfhVO
gb2XDQI2HFjBO21tTwvAJScgxO9UIwRBy+nb3NOcseq9yZtApfxQi8aLqY7T7jnuxX0L//3CwhCV
RjPdjzV4DyUc0BiLJTlDWQ33krpZV8PBRVOYsxoL/5jtUPx5LofjGRUIX2DkDb2tnHCi/vtlbr8F
MRNISjjFqK11amry0FYy3g3qsfdWgZKX9w5BkNcb//dcQFxFXZCJn4v0LiP2T8/SOOu2XYky9vIT
XTg4m+FIuS7zN/Tboe11TJY3wFJJCIlupWJo5FmS5IG24eizpippnJ+2KWVUobUUVxypmFu7Mfx4
iW4E68C21xZvbUAqJaBSxkPhbl9CufWe2Wt3Brt8INAcYzQY3vcAVxmTIHergcKcqIgzhoo/eZ8D
wKQCxDrYY1/j0zVoc/Q+k/5LfYhe3iLknNvVtwtlP1h0gE17i6k2D+7luFeQlEV4zFIcMSRcYTaz
INp6WFPWmD55rVBrY14RvzPuGe1406uskvnn6+QfSquAdSWs7DM3o6jGeGqxLvqDFHDJ9GTpMbdM
dXDft+a7OG8EyerX01kIsZFSQRkFsfulxLLZsuDRMwq1pqcOh17VB2Ya22iPxO/ZRjK8xqqi1PWv
gc/8ywL6Jg9BSNJ4JAQRBL8bg0Ht7ajaY+v0g4Ll2R45BIXwOOLWVhwrNYY9Trgp8hZyNCxq+z6N
XjUWWhrqK5WChB50M6vl8zkH7mJvuncKqnNYXe8jwSvKv/yerBpfKTvsZgRHjzjRULAn87GAtqKK
8wX5ht9hKXgz+6A8j51CVGu0vDE5kZtcUrbRFwX/zMJHnOBnzBdzD5JFOO4jScC+A+koNLwaZ4Qb
OGlDB6tMZzc28e5MMfu/IaP70nuADvA+EOS0I9epyPdp73XM77uLmNupp4KAIM3GfoGybOSi+MVH
lo38cP8F2O3sdZaa5lg00KZu8fbEfMNEqsJQJ8BAsw4vfVWFF9ljD/GhmrhhWGq5+nJO0iAJRKtq
pQkd6JaDvAbGRZDbG7WhTwKNL7EtnXRU5WXFuIU/hMM9qSlfzpv9YdjggUeaHcx11DIKDfXSVLsx
eDebNoPK2Swr38s8uWdXBx/deL46J9YyhgC+2/yIQz2JjMEa9tbKfhMwthG2zTaBF3Zw0QE45/yc
bNe6mklPtJwbLIsxRAJh9+LMf7AmXNbHgQz/wASWfFyFMO6jmDnWx49QK65qAwkalAe+hpqUYKa5
3B2ThgI8REn03XT+r+DecpzxCi+tar9nO2BMg1MUNLSlLyLTm67yrAm1T9xxbT5Ql8NaWpsAqfmq
MiksbwR60D+l/7vXDLfuq1AYkcvMx7piinVdLlGzxE9xxFK5WU1V9wd4nPx8F3oiv4ekKzHav3mL
SIXpYUkeEXpJE6B6e6WI4TC3Hpe7LseB9AwD2RmFKuqi5pQ7yvm1RYffx6yipIqmFVAQDQKeoz6U
ybguJAr3eZjjb3BygpMrUB4HBQM+CXycDVwLaBuTicq1OrQ+SWPqQ9sjTKfLgVbiJBdraYWT+KtU
A1GojzRFOmnMW/QU/sqRbrNkIrMPOF6boq/11r0ttdc+AjwdxwG6BzCfety4mRlfGGO4D98lbrZT
4AD+4Q923xhkJCAOghz4jyKYECQLoDlVRM/2q95EvOyk42NjuALktOnYiE3fM0aPqAOK1YoEzV2F
1/KlCTV7cDtLvAT7ajcjT8YLx9HWFSu5SDcd/0u183NOTaAGK3bb2TEdhj6wxVfvMStRcz+0Qssk
Lj6sdSUKlG9bsOitgzbVXrcqFZwg876WNLrvfmi4zcopIIiHYkyAffnaGi9XRBOMljAnd9ztjyYy
MAa2okJ5Rb83Klmv4PjfoAgQg7puBnN5ROridG/ZFMVOaNXOVt+4Qzoiro/qYAPAxT0NwaID7bCZ
3Lfb0NdgPl8QOhFybkNmE+XUC1KUmznC+FzKh/RIpCaoi+KuK7gYHymYAk3GwdBeqSZ70P9Or5Uy
Zz8L4PeD7v95zXyYDtea0+1y2zLDVKvaHgtOVbzLyQNgZjVhFGuiQ25r7s5cxpFwuZpwU8vfMMr1
JWzBcwSIfG0GQrzF2hdFB7YbS8lak76ElC8pk52su2Z8/pUDltwCDpHu+pKrw1Gl3bMU1cC1ZAbV
uBLmQAluyxaNe9oCQGJC9eIbYnf5MEg2SyuZqvFP6XD1sGhVNRN4JvREtUnrH62XY0/C0M/LaQXA
eJC4cwagBuwEb35m24RiqnxDou7+X1mbXWBSHP10RThurx74miHrYCvWTpXjiyiKRQT/vZLl8QVB
0Zl+IyzOQs8rgtEmwIF4HT8FyCe2/40S+tLIBMbdmpA6A20UvdQ7XOLFz5u7Pmn4cByUrKdwLgEj
DPrJtz8g08hBcJIVie5CxfvWJ9/0ct74XOYmB3WhnEiufo0NgR8VH4FruSTqEwddLBADBfoAodN3
baCRimPNi/x/DTN1g1uIYdEVutRaKdmLGW+ehKIExXR8PFBLbdeaKY5BRWaeMR0FbPhGly+k49pv
EsyuIM0HrlWmsWw9saVGLRQA+4c7nPPjKHMWb/IDL0oWN4aOoSKA91GhEiGVLeylXZHebCuHJm9r
6fslXHCFlJIxOfzuT2RhGo5Ozy/9idCvu2/ztwS/ycJ+l4BgsWt2W6j+49erIfnETPugLlAlV0BB
0NLkji9ZKbgELi8DEv6dTL1ocytore2i1ZBX3GgvyGYHCYZqJN/gzNLI3UvPXtfo2q/tHJ6sEhzs
Ru425C9QNGOxLoel7mdzmsjtqEQItZRPUaheScUEA8RK1C5lqRwGRCoUCpBPA//VrnBSkQokBNN4
luRGJVwqg6/REHhhtGWxMMolwTmcqBifqb2Eg6T7UqTfiQpBH88ATUspUi6D9gJTkzInypisFNt1
Z7KjTgOR+jkb4aqluDzvA8k4N2ZLiFH0kXhXS+Vv6LvK8POHg+zRQHiglcEmqLJkcxYwawW/WatY
Zq+R87n3YPa39teUlq4z1b1BVB8vjOotInxhod4XQdk+dP5zEX9ckhMONA/Vget0k/VApZJhT+fc
HEmoGzaAtmJgQlHielvpx4aKUsS6h6acznnHW/q2YZPsf4mtfeL9UHyftZCzN9G4tk9ZDYWUnk3x
Sln5ZqQ5oDJSeKm2Oqa12XBiy5Iw/Jnmfh32d91y7Ase2w9RPJajSNE1IoLoju+HpcRzEBDPFDyy
zXWpiQFSN/xGu7aoYMqkocp7k3b54AsIXRYiRr2Y4ZMg4JSSy5C6cBhnC1B61DP/Y2lhrJqOsAFC
pStH8J4QhC42zXO+ZzcB5oncOn37IO9c2Nf4j1uYy5bPkBJNGvfTYQwNLAe4lHZJabcC4uY5gGgn
V6+J46CjSjA1Nq0QH1ffBpVNF/Q7xCSOi71fetPzZ1XUt8EaGk2lWB7ycroer2uZHCFqp2BYazRc
g4DXPoaD+pn10nXMAtGGNreiBQWL6lD9p0UotvuFw5OWjpJp8sZb2gA4Q8D3cqS2h5MKVbUO+ySs
SUBNu0qji/GX0OIa3g3Mj7M5r0BxlA3CHXo1Hl8kaVChIOPwLkSZAYFWVhC/xOYHq5sCg5XKLxTc
hFTysYWrnwTf+trGv0arAjDn6c9HkGvu8nhP32p6TywdK7IY4tGZRBRjQ78ftX9BJo4rQxgyRsm9
2GfBHzlgYEanjvvy8pIjV2pAtXLJ0LXS9g4kGXCPfN4leVv6AtMy0zzo6EAUHDh9AdNbEiYDOG8R
VfXtORBu7DE69Tq+emkmfnNkcs3Cd+YRZstneUndX6iz3L/ep9lnbdty9FsyCAUMBVGxxKo/Q5eJ
/t5t3YzVvzI/08u8W0a3s0Qd/a9FF4lbJR+vY1SW12vV1FaevSztlDnyoxYmcHQEzPGHk0BNGayt
xTmim/2upR4c/T4OM1VYCElriQJcB2z4E94UmS1cJe+JLt5Sl//aUafurbVseAbKON3fL2yrEIRX
BwjvJSSpjgKhunGYtks/daz/4X7G2vTa6ektJJ7YF0YcYlSn8Lo6cs5Ba8KNzLmuMGtBDICGcNRc
9BXZRLb+bSoOauv0FdXbOObYMibb7miyppudFni88tmNSxU2+FbHHmjQjA8HnBurG23RTUoZxbXr
bwbJWMkPVEW+H+oMX2H2as7XxGLwpM5RfNgUE/tZGyVDd0bTDL9XtKeWVa7n2pce685/3NAxlQoZ
M7jRdN0BFglEixUhAhb62qoHJsSGossF3oj6Cy1iNQKza7yuzYn4yJdOfJ33URPaa/NT823/vK2f
+WS8QKF7SOvFElf6U9UcLESngDJynsNwMBem8/5DSoHFX2ky1j0tTSBMh3e0g/K8lmA8nnZJN8d6
RgwbVFJBqeys7qlZV8XefqIuMx0/u0/UKmM7YCcyPlAKihFvV0Zdththv60m2iCyBZkXqZnOkZ4c
b6ao2myYq3PQSwyeY+g4sJGFouirZN9rSL4Ck1Gbq6+c+fdoBaQCvb/+J803byw8h5pDsZwXmUQS
44XsmtCjqMtcrAxQk+U31rVlml+nF7gw07ZIpPz6OAGjUzrbwykRRGpdDwEyX9GTDriAoMlLvape
cFTjJrN/1bmC7Ed/SaBWJeNISkHXk0JcUSjQQrwcwALHpN8Lsa4wRMONEBEY1Ix+mT2XAF7ZPGRs
PNDs/BR2bft+xRKsVI+0t5zlPZihpxmLAIahLkRqy/v6+wAWIRkUuMGisbaVFUB1doJf/xdoheBU
jkCxOIQIYUj6JgZ4qFyoXT0uD6NQzqKVTos56H6DS3ipjX72OJiCpvWt7RmwwMVrnoiTWeCbxqls
Fk2YYtHf/M8wz20B8IhcHKWWbAd3btacNfIEGbTXI46MeYShbJpDrHKnrzUqPpU6tOO0jqa35vy2
vClhFF8RLURSNozc8iBSdAn6EUAHBlMkqO7EUI3MIJiGnaDx5vQ2tCi6yCHHn2XCOmBERGEwHKKY
1LVohnkTCoI2mXk//h4hPq5Rp2aJ0UJfD2WAu891QlmUDgfF7Z1nJ+7Hp6RAZYYOjFEbsjb2wYfZ
Fp7IQJIE8nmU5IXPbpvGhX53lEtTLTWMUa0MIFiBvoBa9I1WWR1KNkk5TlUQh0mBoP3bhxkRSME7
92+jQqZDo4myNUwLhilezJv07dMV9YoVzfQtZpJ4OQqA9b/QGFQ9QwRhHuRC0JzKNS6ywMm1Kpcc
k80OlsVpOiX3c1Go1oLN0fHVtL2tRfO5BZa7TKyLvcM/Ke4nzU3bU/PpEyFXKgfWaday7LXPNdGC
fUmd5JaCunYq1tHb850q264wSnQJNMmBHLyOSjXC+jvUYx0Q5ERQC4+QIvuLpxk2fJPE8T/FP3DP
BHUMADbdKWcOwHY3P5p89slZtH/MPu0GUUNDEVTJeLhdYzPH+QuZCNoUWB8pHeKe7os/vHznU0vI
To0+qwn9pyeXbd9EzCArwnedyF2u5XG09BySTGCnQFk8hGqpUaCRuHsXZSe0Q9gC/vbf/XFAo4NX
JlbnGeOUz5g52lFP5HXnRVI9vKAjZwukF6SFeaByFWLGn82aAQ1uM1/EVsrSlmyFi3nGUA8qth2q
WmccxP4HDPzYB8ofM7QuDSnWrQz31vuE4vB22hRAfz5snDjxAEwR2NLcFMkCu6p4vrfe1cMlVwJQ
I4YMh419601hbQOEyfQPI08FyaPpej0VyM0VojIE7I7Vj3B50CwWOcsOL0R+lPSlYyFeqvEmc1uu
QZO+k7pXpGuuOf4sSOaI/gBozSB+vAvUXnBPuNNFplIYdY+Tyl/A+mI2fU4k6jDyCA1mcDMShhd1
4aUzJ1AyX+a4cp0cuoW6DOm+LNv6ioy43o3bDrQ72Jae99KOe5SEAsziearJqh2Yku7oBPKc9FE1
oMl5ZQX80EcwNUQSXPQyH/GaWUw4hundkmlvBGNwKfMElt/IpastJmMTqE6UTXbWfk0nWNkYgLYq
p3n4rGAk9Xq9Skn3CxEv4QI2hMfunD98Auy9Kxgx4VTUPel8RzhcdQGWq/uN3dbLfUgUmqjCvzyX
sP6iEq8pzYBVtRFlPpEY/7vPVK3B2L76jGwpMgX6JPXyMnbCwps8f4JoIqatG+uOw/X3/rqd71DV
uDFCqEiXdXahb9ktQybEPFk7sisit6f57Kv7NdJMzRVYOWXP53eRQd5CZfdYXmCTAFUQhEDCZb/j
2mLl23JIG2+28NWhz0S/7srK4VbITF1DEQmzfgFW0fDXhd+6B0r5q9XXiX5BHq7MJWNf4lXJ2Rg0
S9HSZK0kPqrmM8dsDFcNXZAuSlfq8F5vfKTrUrJelxcaackzbxTL1JSnHN5/fEOwB64ZUTBz0Uyn
nXeANXUFumev9DOOg0jJy3PdPelWASFy9BrLMEsyEDLkx+GSRWnM8zfIvEheNiOSBbMY7Smb8uPN
uueJfWvCafUr44DAppPDh202vlijn2VbWgA2aNp7qEaAIcYBmTptLdSA0MjBpk+VPFS9UWyS4z0J
yE5Rb11+kfRTXpwAGGNCMmTTugW7wMZcWWDurq8ixwiZN4ixbDjdo+MTAiABsZkxwJMOigwElqXv
utlFObxNsCz4XIMamrnCCljXxv+qxnlZMHHyAifLql6Qdqc7jj8jnr17sg4pgKIZiGmnE2uJjC8r
BXQUFY6FrmwHT0Fny1g5y2qBXP+EotSDs6sf8qjbYbLB6vxoW54oEo4lEdKGB2vipUujB4UAY//W
8On1cMppjjbaUt6+GO2JuWOHqj0Lqm2hiMc313O2/66tIKA4Q47hCMW56Gzk/ss+Sk1mBjShXgJw
onslwBzoIxpwKYt9DnTAwoLj/CDmrvy5wsZgRNZAXtFBs2y31mOBwqkgQ5lTrz3xVpmxGBc8oWjT
KJl02/7FwBtJwfHGMB8W4CHlXi3Y1z9tJqcIutahmJlg5qMg0LOFU2K9njTYzPULrIQszbsGxeqm
OTkgyhnyvD+171u6XSsGga0+HpaudhXM1lwRkgayBwkTWaxz+RVYRqZHgBOBM9AY1iT4X6TmVYDL
kv2kh+uk5A+p2U0kg0ZGsCBzIhhrqWeuqpK9brYOQQMhlCxLxzyCGSVeN9gcH883x2U2A/H9JW2l
Agp5RvDJ8XcEfQKCpWQEJjM1KqZLzlRGS4DaCh7LzR6Rt3epdOEXA9SLSl/F9c2erNINL8Pc6k2T
KhzpaXYS075C/mr0bhE+L5w6LjVAzuu86beEtJDL7llcaOaG7NaRxZqXytShaKsH1sVMGuaNdL6V
v168RAKEFQIs9DkPeBiAuCpWfdlMM+xB6TDfhLjALljzdcogSpXhgQL4hroDaLYTx6C/xTRkOpJJ
YNZ5nAmWkTpBCFtBPJl1qexRLEJAmcVYCIVl+dXc3lGyc8zQ7V4oZug7t1qo0JjK8vf65r8ssPu/
8fKkrBj/eeRA+GagRBriqNr/zbsX//gGRR6Iwo3fWLuLSsofBhbjk488U0s7UlVucW5eGBfPNM8Z
sfklWaDUaTSZjyd68m2V4Ep+d/eszGZsxRc/b97fqxIttoXcSZHOl4D/vmahnhoszVWB/gKKsSnN
l/8O9JihMddVtlkAJ6wNU7/G40jt6F2OGTRXDEn7C3l6TXhXWgyCF7UomNVUBcHCatVXYSKK57zF
7K5SZnoVRveTlfY/q9r3OzMbqt0VjYvJscP/TX/PZ9IHL51/uodE6gOJsgjNJcnZNznateK/IFge
+lkuDvy+41e2r+YhXuEfqyoTLbr0mwtEUoMQOtA8Gls2+t7u1e0QqV1AhNX7P2mveTXJS9WAh1gV
DlpEZhRJsalEsLseQ9PlKHe33FPQkLs/RI1nZK0yd8+PJs6Tjv0qz8yL1yPSlLuMYCOT+JcQxkfC
XZ9+SFJQpl/fx/ltjeOWsChBuoL4+sTJUqkT/RlM1N0KHeVbFkMwJIiWOwIxRb1NUag1vstgP4cG
d8E9nVPyTMTSi8j9/NuIkGsShostYNeRdv3Q3G8MHqSiLq9OgfckQ754aExrGWOR6c236xjl60IY
TmDnMY61DZo25itd3X6jdNe6I/jm0oMShgnOl8PoErHM0ynmeNOdywGnZwLc8HZF13NiBW6N+wlG
TnBwgFtJw8oIbh43E19lSpA0rCE3lhft8e5v+DlyLi+6K6RJeeRCana65aRb3q8ADZKqqoYPIimO
+H9c9aVgSJtwWRlcELb3NneUdpVlB4MG06u0S5a4Q+/twAkkjRuPrDeAwmfHPI5gNImKBS2fq1Id
VtVaShtyUW+XhippAR57+3p2m9GFHMDLvJ8B5G7SGFpAI643jwd2buqRl6Pan4+XWloMgSg5m7b1
dLTtFCp4S0n/noORn2hZv7O+MfUDs2UegQyec+pTe3Bebc6CI8s1PCmoNuaoU6ICZJ+WwtENycmN
m05x+1Fk1Vlqmq0o4+BwOKkeSQA3lwPSuko2MiNSCIYs6XrObPVIaa3WjCroNtcUqCuF5K1OfKO9
Cne5BY1bK01Ih9Nq/keaWeBGqtcz3AZJApgpoNISKToyg+8SOojEf46DfXQy2vn9ork6D2RO06vZ
gc4AxAJyEMKVuKIP5FSA1RFzfSrVGo23EWAdciKJ0mYgtia4sWqUWE2W0w0NlrDwqAGcFgR3n9/r
mP1Yx41Jli761Qwi+rxBkgUGytb2ynKMV8pU3qfyxEkISnjSRuZx2a3Y1VV/GHiOxq1ORqZnKrzd
KEkZr5KeZ7onTyHD+aR7KLElOza9XoOAb7wuPJ/Rq05d+QYWjmi7AXhfd3wgxYuxoBFHrtHedTj4
XwVKt11qfcQkhe0dncecBY4hIstjlXQskmiWDX9/6L7vgSMfMkah+WmtrzRTt8TXywIQB51KXIiv
2BNLkHsVpk+Cm5wSf37+B/ipTJYob+ShUsiZryEpg1V/O3UwUyiebLwatHA7lz+kTVL2p2zRT9xR
2pX5L0i7anWDImv8SVFoAflLCbkmj7q2/s/dGYhnA73OkGtUvnQq5scjBEBRWAot4FcVJrq2RXpZ
sRy2V45xvihizceqBCwEBJMINC4X/Q3v12x3tl5Fb66ByyW9N87qqVzQ9hAf8ebV2n2a6UrXW2IM
spEP12mjWN4bO44asY1Jrs/VBnN1vuMUJhfGXn6pK7/XQd76h9CO36g9SaiCjS6rOGIO/jrBO63r
jexYWXoFpNezrk7V68949B06HzS42/Rt7oYhGuaxdV+5cPj8Rd+FRVYEOmQhaY6kzlZ0spkugqKg
76E1aFeV/IakKBmVTC0IBlqqMwn5WP6JHwcZhC3MncFGtrXGKu5NBMhlWr2me1mCe4VbWR5YqkwO
9YcxWxBH6DMqTDpdfVufbHVylzUDk6RdU/YynUrIWSDvpD0F7nQsDd/lNfMfGJ12Vi6Z71jSC0h3
xYL1l30Pmu/mJ57sh5TxQWO3jQPcsstLkGXijhKNM3/kiX2nq700ymVXnaurvG/0Y3EUTH6mP/A6
8ark1tq12DOiaV/7BqGSbZ+0dxUj7HbE5Y2ejiKnUcKxIKiW8TZKmxhBnugpq+xFIOXkzUM9z1LW
GxAqCpJkMpUnTFCB6RP8epz+nfpOCQMV2/pOE7mntpBVt6TamF02mQ6+ErGAOrbKnSb7OSYQ07Sw
ISi9xidMz5TPHNeMFM/M3qDENeioS9o/siId1YvZ7BUJ9Az7nn739mzIqMaG+iL5Kz+az5FDrAsB
ibU3O++1qKVIAhNPdarg4NqC76bEGEcm8c0qdJemHWPye/e9vqOt2v6dL+t9M90aGL/k4TROQiyl
LKgYvYNav17DgmZFemLUJXkyYdisLiwsdQ1dZOhJxb9kLDGP00WYRMBsZUr82UFbJ55SYrGZpDRe
DuCczKMFQMbFMeIaVY2+j1RG/55gacv5UtzG9ltTzqJ+gaHb26cFFNKespIRC/yOm9frq9Em1kW1
LuwFq3FkeW3QW1sEsShZsrsItANHCOkDLjfu3Dd5LViLwk6DZJwQ7W+XTj8JlH4I/6eTrVblKR1t
cHxGrFwriTYPTJpEJw/PRe2DOzSYZnx0lTcayE//5OaPAdhGmChSP9lg7CrM2QqW6Eiairz/f/hL
0fPtGG7LXho3TApgjfVeyRA94NXW760xF9i3T5Na8fjCdIUy2WopTJVBCyvdtBnUJggmJiFySt2L
H5CZfvfze/ny7Bfk6/FMzaJBsy2fJiZ/BKsgiZZ4Ke7i0aHm5CxE/jVnejXM4OObDWeaZPbGQ/A4
g666aDBHzi8gko7n0y4arB1qUE7WPyCq/z8QrrdPBwmR4CRe9UkZYqWB43oUgdvKbfdzIy8vJbUz
sqtyKyiW9OZeFdYVGqrcOK27Slko3ED4WFFUeRTZSr+T4S0GI6Dc+rw0yyBqDkcIYlDeZmHD8moc
xqKeXeXuU/zrVszv9GXiiyKSl0LvOkxTl+3BomMGIyvliiD++sIwetr7nL7MBk31oqMwjT7RYzpZ
VeYk+iDln2eikmg8yKTJL/T/mWtRvpcPcSfbtSkuAUtroqunDsajVPCxCI5SNbnkLtrlEkSwa/BY
LRsx5T2M3z6rIxVpxQ/lcMWAEVSrHnR1F2Ccu4NsO6Xm+STfse7ZSxP+nA0J8n2kqzGS2P6iIwzZ
iruKDRI+NTEFXUTnzSChevEipfUd/N31mf4t8R52kr566PSJZmEYiztZeswnX8H3Fn3c+ndm/9ol
7XdXUlkJx9leS2ALiBJCx2DfJ6cUgH8NE/YytNF0cu7i5LQYr0+XDzTZQoQdLrcQ9FHF8nFtPaJm
RZatT4yNQIljJk2K/ODZ/557Ed0mFdjzFPqnqJmHmOCCbXyd6RfoJj1rTba4291+7SbDeAtLSUBv
ZEP6p+j7m7AKfWmJM8eNlI6tlTDpDtJePsLG4mOic0z9298Rcy3eYZtNRJTtDc2r+PfXpXH/wSlY
TqAFSljP5iutGmewfwzxw1lKHGKSsfuRzNVGVv0Iiz6Y4hduNS2H4i3ykEDdSKw8IJKY8xHqlabo
FzKc8PDZDTHTEb/MAJiKLHcbf2Li70hDD0UgjTWOI3B3WLIxTcfs17nZeik5GumKp6PC3eYs/kdS
C7kH281xdsEyDIltGs+DStW3S1qAwJxC9nXjiac7bwY3gFnR2FiwCakJQLkAbkO5OhjXthdW6rrR
jchIge2FxEXaoD6SY/DbZXl5bqhRekmFPpyZbNhPupXYW2YuhOapX1cFDY/R7GSFGGYIe4sKhWtc
Yyz5prFe9hrna8AYEr5a+J6poleQa9YR5mZC5kWYeGSbbFFO5zLjQkudnuUr/kA3Fw9o/1I3LSiZ
fwZcGBacYK8Lr1aGZuu818MaQamvo1k9js/pW1wKsQ+1YLWbwtKh8fv8wGzTv7RCYghyWfxQEk7x
Ln0kxz9dsKsfSncCEEP5uG1bQ9OUmc3GiehEyJBQF9ikmmk+gCPKwM51PGjsCu2ZkxSELBXJMWBE
LIUsM8xYezB92+9YccQQpriBnHrOZCxcEVn/umz/KMaQOdMWjQ9jSE1h7IxWRSp+zes04gjaWrmM
x68C4daQ0617WAZ4hHfqARdp8E3pm6MD+jy1P+MJjFbs7BQxyaXtaTIbk76A8UdB9ENnzlTxSJwd
qGn0c7pwXMdda+0gwG8OUlA+vEa3sjpJQgcgr33C2tGfp7Ge3QXK675BKbrmXa7Omrk0FtwwBjrN
ioNhm2/lo6GhTYuEQkxvWbMRbjs5Sswj8m/V6BPydTcCey+5h7+NHX850fa+6yFa/1xMW20GDcWB
QaQ9iuICIFoVd3uKbmpP7vJYyscVaR1vtVWxrsBIwB6tYca2QtTq0m9Y3XENj06oW8Jz6C4N+BE6
3JktZMbYZ9s+Gawwbc+jk8h8isyVO0ABpT0ie/7kjUWDQcDltcPMP4TllBgKhHXYHHZODy7uojrk
f3RBUQRZ/00YaakK3QxKlvZzQS+K38YbyPcA2phi518GOJzjb9Slh2elAK7KzRyq6Zr655Kny0yL
hmOatGDkQaXT8Ajgzftm03cxCz2raC+IUIot1rZ3Vth8AasyX2+T/c9da8prm46m8XIo5HOjtQS4
1gaK7o96cgJbIHhLVWepYXMg0ZjNAmVNRRYC4FfzC6sa+YjYurzM7YSoURm7uyu9f3a2XpxPPfcM
HaGhcwf1XjCIoyvL+SHHetuS93gu/Q0JNU/n8rpMwiz7/pRP8E6Rhw7Ng546f6MOLxvW8JwFA23P
Ure52k1fWyT5xCdPgEqD+kKMk5dov2GWGvUXUXIoSyOGO0TGau4mJS3Y7MrS0M/+LLuoAxPg1K0j
bNqX8A5WVeSbekvtKVwKpMLXV4nlQdvWs+2/1i6/LD+cTZAVpQjzxnaXI+Z6XLYQVCVnpzUUTIyo
kPriC6KidK7SseVz9mmKZNMgZUmT0vtpf3W9KcV7LN48dQ1ANdkxoW61ydyT4eRW9awGl+jPOXoq
iPz+mPFHYRzHpbjZXCFLrgWkjcG7QK/LYr+4ylSvw1a0R/hZ0xjKkdQo006ZT83Qfkk+0z6rKAuY
To9nVYtKzKdRHbuX/SEGUTgsZndOz7Lu/4CD4ntjXPtgU0bmjA2MHTAxgG+YlssNuEYGYo9Oh5i/
r9WSQY5cAg6drD8aWMwzkoYQceVdNo6kn1ZfOqJKQDS+/omXsOS/h5L5lyH8yuhH7Iv+nOvO1Mqe
jcZogM07esWFWnlul5LJGQK3OoOGL5TiH4V6qseb6foALSCQ9lLXITpBDfoLaH+HaVCiH/VH5Tot
rdzHRS5euRiUxPWxIWKVaeG5QIAphfT/E6xv5aNB0AORkyQ2k9mLkxH9ZVQn1h5bGechjaSTSfdj
ocxhRtoCSeOC2xWCxfeT1ht4day4SK1v8mw9SomnUrIzZ/jvjSfR0NPDfnPQGJWJpmOvnaRuygNQ
6RCuoRSLynOvEeBHUprCABhYU3/pC3myASCUXz0eFiUI0CyqGptt0u+WOWDexiNt9hu2HTLfPvS6
Meg6oPNdsN2CAw8yqkKX9tRbZO6jr3lLmnM20KvbAkYIq9Uja6CTswN7CpXlrOkudhs++1hla8gX
1de86amTFdSEvl+Qtq7XaNG44UwVdJSU38SBfRI3GIEM5HxKBSB4zLsF9CWvkeOcHL9zqyH7p6Bf
/FYAc3hvhwX3cpWXEhqa9ITd7Z+EnSEZMW9zxUHPCsDhZmLGfahxysghiPyS1+vPgcrVaVW6An7E
ONLg2gxIi0KSCM0smDoFoXRx5ibnmxob7L2AuzhbyQa/weT3GkMNcDwUxNeAHLFogCIbXHJG2otW
EEmRYjRJui4yYCq4675/p3lElLBDuymbll2WTpb/NUg+PzYxlHMLdji2cZ8hvU4cJUPgUR1KiocH
gisTuDxg0F8C8xAfNlhkvR5ixwAQzR3KFkdjcOwjlAEWc1DEP8+JHMv1YarByHTG/9CA/44TAH86
Gde/Hd2MAPf92xi066VP6AGyC960dFpUxNMrUTfFQkNF+6S9+djjev0CQswcOUev2QLv9F5Je3EH
GPPaIN/tSxBf0UWt+m5g2QPyadfPudbANv0BWzmF37+Pnd0A9LRkJFoa8ybZRUDbFS9rZQUZRHEm
4NB0mEAQ1D2iCluTj7L1a85gMz5eiY4EGGXzU3duTHSNiMDBb8JMPTz569RKCyf9DdP/0VCXBbTu
3sFJgVpkcweJfw7QUXCrI7eTcByhh9QAVNlQ+Bn1EzjRjMDY5QYvkXTyJuvnikb6FLEVpFep9od5
I4r0KLMF0Q83YtiVkLWUSy8uEczHmUoWLwY3SBt1vMGhSAUPLoaHyxczfKCPfnDd5VAYx0wnchbx
c6YbWGRBFpwy5kCzqbOiAU4vPn2Ai19ZbQHr0NNjQEEmhm769LhYAOVinQp+a4uDDfTo/DI0xNNK
mNpnJy/QSTQzW92ScnLm9Pbty9Uibr2zPT4kJpu8V31xAHc0A8ZtfPGnyoa5G9LixMwiB+GquVUD
Rxuhq3R9zoELLpv9kYd1cadk9OpDdhaEpS9WcL3dKw3xvpwsM5PStSbbs6Bk0YcN6OMbOepDLe9a
d7D0ZS43U86hp7WD48lauu8IWn1nq/C7pTt4uJaw9nO6E4dYr3GHs56/3UjMv/KJEa9IHN6a6/PH
tFvjyuUrP/6dKfeS+2cLI4dhEDRbpcxidTW+qyEbzQDA0sOcux4BvNlNaJNzy145bf/DreHQ0H9B
UzDYm4Kv1yliBgAEG4U3PmhxJHuCl4h4AqTDQEI+m4qZn73HGdF6pO7LWJ0AkT7SiaUxRL7D15kJ
lm52f1si2Rra3ywiADCZdVK0+rtTOIqVhYDFUeTPiToowG9IYcZ/EVNOHFwShjgMZ+578P1RDjN1
3dGG754dHMQQVHVpo60Tsns+0tSHL0koBdCwXklRgYGTVyj7eSaQHWSzPrf4emK915gehEoCZ93s
qHW6acl/IpGyslKRdJQhPLcVeEESrCaUGgSEgi5icrior4qD1FNOKFFaODzpwRVIutETL7n+0lTX
PIKcNz+U+v3/S/UziZEd5A7OUXX3THf5eXMOnCerkZkFSzkIEw/eoX1GjBOkYYidsJCIvOh3IFVx
nHjPkpIO6HH1dutNg+iz8jJGembIcizqgh0CZkDqthhei5MZC9BZEjPtX9uhnUQ+ZHqCf1M8GJDa
N6ks5pnZtq/hQrD+P2YLC3Nxvx0QfgHI14dlRzK5EjKAHJ1H0kpoKbCB0TSpQrORnOwAtkmE+d3z
xkpj6glpSIFCfI501L5qS20aKIL5UfC6sgCI5LUH8LY2IDZtmkZfzJIcXmi82MGG4NMV6SEob8lt
uY37KTU3he2yuCpjLHAQZ9ha+f362qdK6UiAEE/bI3jM+jVeVU3kwLxPb6A2tYaO8Brc0xYDEmtF
9oXiQvyNC44MctUuf0B1rfG6wKSVxssayht3m5N8cvLv3plLIr7pji06jHWk7rD58O7TXfkCXwec
peMhUb1V0fe060SPOhPSYqapnn3gy9RnHRZiXNkKcHst3xuof3T2Hiw1TN6yePo13RarbMLc5Xwq
WtCm3q3rDfshr4zmsW7Z9MeOlco3fbx04QA20IlsfDvvZtcsLhytNB+n/3am1Gf+svbyEPZybqe3
8c0DQ18wKwgUmATagIrEQIhTTUJJ/P4G3SfOtQDOVUkRZkHkRVUcr6uJ8mczec/nxEPo5HHbswl8
yjWVHXwtKLprSy+XHNEIEV6X+2bnfxZPZZlbmcqSMBLdi3g2xPcuWcvABTHQSqGVmEvtRVSvBFRG
K8fr72c4/y1vTcM8pAUD6RRnqiIl02Qae7EaVsoQjDquplSc43FYo8RzvLPiCThmv4iYUOEMNfKS
rlEIWjIHHdeHilVLUUmd00zxVbBReTTTFVWvRy493uxq1EI/1NCWldsxkKJkAemrWvwW0rtXAgsO
AOYCkUAct3KyJZc2HMwfOcjiIMhHATwhJqEe9AsLDbnabC6zjgz+dGFjR6Yo0vp2BvuJ2Ul95p85
xbtPuAB5h8FRVeC0zpqziZp5BCrP3I0BzQKW0G27fb/YGugF0T1qgVhvLrZsEPV7L7mlUx3NbOPh
JeG+dT/U9wg3BzyF2Uc7dcCshjBirkh5486I1F3b/wkXJDNW2JAeuMNvKPMAyQPiyoBGiV+3mB7f
GECM11u3M/UZBLL1ZR4aWDkk5a4IZXCipcPXJPurqswlNfZhb9kbRscgWqBQR8wmSuKxaZ7F8fU/
vUjJ4Dk+EaxeKCUzWi8YnCRtE9iDErUjGCZ2/WsYbLXdSQQSJLaZVRbhxn1ePDZ/KIkBuJjPMii6
I8D8v+x+fCNsrxX/+DHuXqJR8to7fvPTV8wjoOuPmI4dpx/wkut3i3rCrxygM5BWiYfA0slWnY6C
ygPtuRoIR2tRSb50cPaUR7Whi1AdjWi77kQE51tYdfRCvSF7i6krHD1+qrr8o+GC4qe0sU+d2Zoe
f8s4GiVaLZu7tMYBFOJEfbeXsJpZME5LOo5dHStCKytMCrS1o+uFGXHXnndWoBjff7paEV+Qz22Z
b2Zba2MIkKqir2XJfkvodUUoJWUo/8oUeWasEx2FUlejgAdfsVFw7mAhsHs4o4vUMa+1th4j/syg
Yoc9AKyr/r8uWULtnBHbOPQIcpBLqZqSqb7YGNqqZZSVckQF6blL2oVjipK7ubtYGa5CRuCaIpdE
DskH6Tnc2E22O8qUysnWGEe4a3cJQzv5EYI9F5ktTEmEZNu4j9VttlEk5X9I//XqlNcfjf8IrIEu
Qex/umXSqZleAWkG/UD4GLlw8650xPi3G7e5bgFaC50knm+3lHEJGbeYbClXyFl1OiRbaX8SZ2ge
fLThg4pumsuHvfsRINMzGUJARLnT9JJ+oHot9Cl6+i4kCp+h4392Qm0jP96qH+200O6FkXOvJjfB
oyC5vvhC9dTMf9KOCJTV3sIJ8FJcry/jPY5q4w9UDHNL19Agl3/LN/LhES3Ogh85HJKJOk0UjfyF
jZlyzj6F0OKyQCkS0nfkABSezPYX2hclCOkNZHCylrKZ/+q/8BcW6+16XS50YSe/eb2uekGOf+PT
haWAwpyg/E3JcOBBqzKvd8Yj07XJcG/18UYv0O0lwhwqMk9pIBkcbd4TJgg2g2xREqmCduMvnEj8
Ox0rgBeehGcMN/FvKYBQdxdV8FFJcc0lhdptC/AfqeZ0Z6LO6vWVp7X6Q7meTud2EgM7dqNF2Aj2
q9HHVxK5y1Goh2gxXoVThPlOx4VIIu0gxcKGoO52UtzXrDZIGOmhesXnqH+G4gdQ2t5wjvCTmh+u
VsPr7Yft5vhiGbSBJmGR2xOuH6MEPfvmtYWo5cHjxtIYrqUxWqY/gagqj97zmRHVoG3WkKpINDdL
olGlQZ8SkHRx5taNNWRMpxEkiDUWoW1AuuUENH/A/k+bQA1rvlKqDofeVBKsDTugjtKYhZz8ZNH7
pJHR7dI4wdzUXTPuGCe4ZA8x6tCasYwWLpa3f9irIVKc8rORU6t/wbW329//SvpEeotZqh+NYsSS
Q9tUhptoGWzFJAZenLiOdPsuHtuHHYTDb5YVwTwYxbTZ6ANmygnl0odY1vCx9ynyd0vnagcMxSqZ
q453pu0T8sbn5cg7Ty55i1hWDk+H4niwkWp2qmCjnE1gxZwgVX3zReFWlAfspN93byUdjgb97tb8
dU+0DDfTIf5tZ3MxZrXa1ulxeT/WrZ3B3z5P/f/QEOhnvEd6AWDpnqhvCYXl1YWzWRU5xbYEbkkJ
Yyc/686BrEmdK4GzrzyMHLz03F1VtaoOeeL4WbjlXCAwV9pa4aw+4YDMjwvL20oYV87eu+XmbLHA
0N6/88N3up4SBHCjlyQcV406/a44jGzO2Pn1bfK5tBgCcj2QMdRTxogHHbmx1xu0gFUkuHqZTASS
mfm58sydRm2HF8aw3JPtiZG8kEzswP2HbQRN6Hdf3BFPPSDalb4lejzsJA+6dQ/e62NFPhkqoDPC
SkMVwwBurbbdLZt3CzPSbENxB0sgUKOmLeseU9k2MoLqC4wSEWOjmmv0dpNyp5WtbvOWMpvXHiYD
FCew2sNeQ3ALHL1YwCsnjklRDNou+7ufkaurndjvMQV/XnmovgqfNytIXZKdWaD5uSmNFZWYfdiO
DvIk+j9Cv5qkufL2LmPYaF1ZlRbtC2LR6O36/Ut2P4YztUAYDXBiphvpsWVNn/aiXMdgTtm+U4iE
NZZ/nS0JUOR9Y0Y4JrYySZheKReFe9ElQj+A3fAa3KLgc9ysFCwFU5jkx0vpGzjcq9a8f7QWYAsb
qaX4Z1xsGNDDnp78kRxQOWQy2G38xA3jK8ELv/QwqttEzBNQovhI5eukbQ6fgohKYcIulmRmF03j
qHdQLblIUeqDVRvJ7cE5z1hHruRTxpx43K34MhiR1iCauUh9T6I4R4LXfS7H2AtsuiMUdq+3DN8h
f8euoM7/pYJfmaDe2Iw0n0Z5y3StPhl9VEjMBLc6a1Ine7M26MTSLi9dnemiW+sb+3+W8A6ze/MI
G85XaVWfnrWLOSpajpL8XNTn3eT3lzgOYnWP3tp+UWaAFow3CiMdtvMRWurMY1LWUN/UuaX6kREL
rPOKNlAjFJfc/ouUXYGVCCyAlYd7NdYK1409U2i0nFTtsg9FTy/Y+8dQP15wcA30SnZXfNC5IwtC
Z8G86xAdn/S98XTjJPuMBnN+TBFFtJ8TIg39Gb5bOLyqOiB2u6zdl5GFdDlXGljSyODbM5Tqs03B
QTJJFua8plvWPd1Rn6BBXs/mltHSrb4ml6W0jGnNglxZYFjAdhwLStN0rp8o0X+xmCEtfQbT8KwV
y+NvYehZ/CezlvR1FOAlAkfuBBQv5B3M3G+cTAsqNwj6CHjwl86lj14OoS4JGweRpGuFgOhIgCif
Hb2Kg2SBfLZJp6L5QOjKHRzdvrz4VwLIZaX7sHOc1KpDOVe9UJMFx0R3jys5I2a8sc0USjeHED2j
ehQyE0LWbSY5qyi+donCwh4o5tBk9ULG/dVPwTb5jAymR4zjGUKByKUiBHaWK8c7xkXaShYKVj2a
zyYtS+LqbpRB4hBRLsDhU05OKQOirL+I1UNvdP18Tb06OZEdQVENG4TWLldqXiunZIzChEKkG9yI
aIbME3llHVUwF8PQjCRWcvQewQJZw7jrx2G2GWUFOmZjmuCMBhGS0h+dGT6QJLPPZDufuqjtAS6G
SY5fJVR0muRG7xK+oFxxwbb5rzo93LWqFynLxiCTka2txPnOYR2vQ4UOTs8a1+SJKopRppXwOCvC
SvR+kifB9mz+riHdbjg6kr5bZQPLrzToPLfNnn7OxjbgqgnB+xydcmnwMuEXSv2tKMEgN2+UW7td
UEMQjARTowNq8TXcOPiogK1LJUEGfIyHAJ/3tKo0gbEJOK+pvHauVwkHJFQjvr0ZTPme8PPxPYwo
cOGGYIg6TSCVA4ZyCiQrvLSHnXPM1PqOTLSBxn/2ClMWl66o2RX2fUXQa1PmCHbRYSUsr3gBnswG
wR/CFh9gB1jlCXN5+U5vOSTYhpW2lCsKaEGQp6djlR5FSh3LwKc0+fHVLsPIIYgh3zsADkgcPsYp
cF+/ibONQ4IeJPYB63vPIS5l3TVIAXHGldr+sz7Unn5t8Y7G99Tq7HtVVj7IgRn+1PbEkPU7m/Lu
oAg7Xu2abv+3kPWIqXWjfbuHahXWJsfGxSTuwiORfOPCIWfJP2bI2IscsgKA/BiR2nBhy012+/MY
VmyAUTZvYxzdgKn9Z9TR9elW9pwr3MXSUwBzwFmU3UYG1NyZNdRIhmrx0k/75sYNNSvy6bBJ/kjZ
hre5mjm8Ir+8qR4+ETl+sCynAU9ireSotni3BLM+K2UcMB2P7Ko+X1tShxa2JwgIqWDM0RswrLs9
h8kczdr8YNawQ4omBYWTnECMhN9hkz/xa5BDfEYZFjOlQaVX+ckXC4sPkvKbXKT9Nl554uK0W9F1
nNLFJptwBQKSK0HQxm0S5YFCUKx5HA55Qc7q4Hx6795WGrCn3Pt6BeBoyyVjOBPgoKYkgFuXFOEM
vlsukZIetB6EaHJbHNo3OemjHx6YfT73SyjA++n9Ht02dksglYUrkxt7L3hlbO5uQMv2ejtwvxf0
oC7kFNIaOvKpLcsHKoyf1yylkloy59jTTZ2KqTyKmZ91yN9zyb/bbLxKjXvvpoc2BZ9sKLScrx2k
nwDQZULo1VCoIQI1F7jqEWalqThDIWlksYWKFu4fTghyKnIYOPd0Z6EMp345GvQ373pA9dcyGqTc
wVYNOKHsbX6scEIRA6dbAqz4/WRRmUDJtSjgODK59tEQ8d/sob609MT2bePDS2tuwIkJaXQ5ZION
tJKFa1snMPbve+onj/2ytMOPOhmNNrL4GGjLoc2P8tb2Qps7wvMvEFXA+JHA2c7Ko6ATgyJhncXq
VZxncL5PJDaY34hRK3zaAwXqfFhAfysercv6oCBKwDSlTvn7uJ9zGoCrQzRoIU5ABzQI9Ukqnr/I
GDwdJGVGsvpOwGQmLieyA7SrqUr+/HoGEMWTvxWSBui9StOnUdB/FYEmabKR/mEN44JXV2uy3aVI
QctIKU4bevW34IAiUP7jXOKQtKKazOY1nLM+MxAUTjMN6/VERbbgMRaMTB48saKQr74fzL4lD8aE
DAlYJUuA95xiuGm8zpitMZug/upYwq+Kl/J6vijNl4z9kEja/swxMsM+L/jp6X/JlIGEB/pJOpwT
GVtK8ekFwIxOPzlywz5+pT9OWR1TKCbufPkX85hfCDHdWvTWY4tPPOWigEUe0PpfY7j6QWPWbymz
V+X/pJnWe2uZ1XwlvPUypv2/XD8UUuWK19KrCTGuUiHXt7oKY4VBLyOZMIublPgno8eaSeeBMa9C
1sX/Sz+LYWD5OIgbrRwJiMYu9olAEJ2iaVK1wfze1lKq3mduT16B9Zw7I8bATTXSpB5yZBGdp9pN
hSPpfWde8susW/EKilM06CNyGsf5Usi44b0jeVVFWaYg97tjBCmiiupex38Ai0U0DCb+boBKOcRE
nSuiP8rhA13JpuI5qOImro5R2P94bgBCfmVgNUBMGiOix+MXlFFfa1zUis7MXxlIoDJESZZp0bXh
0wYtaiz8SHL4RyS3QDNqHWFK1aMHRW6+jnojf+FbAwMI3zizRaM8hx2P6/NErGh/rvhhjP0PFxbG
zhm6lNb+7ro0sWNMAw5YHDrWtsRgQuQdhuJuwJUQPdroPFQv5ETwjYUqGdJqjb3McdHqg4sOiv8x
xTrHkYFNam/dh45DmwOvX0vMPxE70QWeCKhnqPIQv8D9Ejq6AfX+KI14B05WMEX7ZuobXrPIjgxH
Dnnx6VUqVGa+YlnVgbIKmrta4GQcR4HYiR7q/ezaviXsOyd8BOpzMsh5VrwSj0R9wuVALsPVUJUE
zdgljOh2d2cZ0sf6SvLz2+4sKCTamgm9T1o/MMYZPzCTNSRQ9dwPA7WEwO2aQdfL0lcAdmemkAhV
jocvhNfo3m8Kg0dr/9uWzqjNZHlMLBvuh9rXafI6E462baC7mlL0Q90qZyFk4jLNhPZBc3aDEI3V
mLHH/pfLcl+JuriefZZBEtlFVh8L9MoKlJUKkR3UzTOKfhujbnLJvZ5bGQ9qgrr2EzaVG9MtTXEe
KXLbPcarx5CDLMTW04t1pb/pzHbqfJnY2y+6ZAK8kgas3Cc0kfrvFwBI7CAG+pdoJCpZeHx8prxT
8ZE89PQszLtqUcYHxzH/69M2XXK3nAr6VHe6Rkz1QbdIlJe/3Gs1mfKrnlj1CLxpzl9/Is3Fe0K8
6gzQ1bS2EKpr1aU1JwMkVGZcQT0MfvynClL6B8TsjSCEZDp8U9q7OKNGdXJD+aLM4ZwolEdMQHw3
jREieoX/3lid1aMDa80a52xCKehfgiD9HBh5odBZpQwx2wBZgvO0Xoqo68Mg2gSqVx2fjR8xaKBR
KCf43t9KgC0HxUGhtLK46ww/hvflRlAkMW4msfNKnVPhD37wkY7bKL6KVNK+fCyB4xWHdVWRBSnM
gU/owwWWS50DZ2wWHDUu9z2vDG/FmRk0eAydpN6pLlgmo7v4U1+UTjzIXU/mMatmzz4xKR4C2UGQ
Rkj/q5E1YGsXF+bp5krpFjE2vfexUcAUilA83ZOVovWC2ZFCB7CwvAWJa2tlHlnIqGrSM2u0Q/pB
KKoKZTLv1+EmQD0w+Dvgd4HtsqVLl5R2gQSYvaqxHYwGUxbUEo/vUz3bEetdsD71MK+qOyE26ukl
l00cZA+6Fkd36onwgFsEzLwEOZGARKheLBleq3miMPccXh6aVIJPN89Hirf8rtbcYhvSBbFGS5Gt
+sKlk86nvUH6ifkWK4f4J407GZTa1gCOaJvJ0Mb6hNwECDMe/DwiYlR5JyEQfmTFv416UEEpi5Vo
8M0YqiE5NjsFRmVuPjKUPWasVHhQCOuE5iCVcUvD1XDYgUWY6X/XsvfFsYA+xYD7Y8RTboOMhVi2
mNyvSTXMy3WK3vqAMw3sR5F68HHDziZfqmZkSFuvbrQSQuJvRUFRW743/C8uvAiCPY2ph+rrSO7n
KXYpJRA+c2btMk3BWa3oG0+u5twfP7HvurtWPO4z5jkqnU+f8Lvg7gPa2KhHS5g78zCAwjyfs2O1
wpFv0/VqV6Xa3IhAQLcu7pdIXn4uNrFWIdTQMG0UOBlKhxNVaApV6bQwTuXOPudWTJ4Y13jL2g2O
kcl2WoOBH7jmpN3WJ1iLNeq7+3Jsk0Ry1ybo+dwQxyFDIjeW6j5/Dr9cRYZuyV6dnOPzHvMlBoPD
wWSrnncED55iyopodadwLGLDEFJ/qW2Ie/IKNLam0V/yEGWT5mZp7G429oKRfiLFgT0magL/BldH
zv7RBVIz2PNgKc9eEI9Tonq2KAjphZV7S3uD5Tnem75g4wZ5MiOV8FWUgYd7ZUMmQckwcLsDtpsQ
rc0rX6QQdPW5rdXT+ge05YTsVu5G78lIiTj6wIfAk3mV5zJMGLiQWroA3TiAya8TcCPvJmLS0oSd
wc1owLMkMX8rf7+1ljV2qYf+1hflQzFxvs1xWUqAgrm3hQ+91Ex1nVXsvHA382tleatYqquR/ozw
2F76xAmtNsNmQzxgKEu50Qi3GEvdV5sjLQA5xPsXO3Vr0kriWRWnDtYmP8XLp9KfDu6qziXyk7me
HEoZfyNMfhBHy6ipl7QiUUZ4ya8yX8Vd/tNmKkKwJp3CCVZSZooe1gydW3v9/9q5TxZTWkVt0tLW
uKI+QrdXqqSITTzMuWZbNN6ysnIWv9Qs5bNlyBCNr/E3tdpusBl39+3fDOQ3uQ7f1S/BZjbcDmYW
YJuPPibIpL+3ktCzDI7IVr16NJIp8DC7fdInRrHlFfW1w6FxcGLxG8WDyIBrLYT0JTUJ+Ehhe7cq
3QjXe6nalm6dn5wCCana7JbqF8pe4DzdAS/LsBhw0Q4gGPBHWSx46YKL8b+M1qR63PUCMTUEedZl
bjNrNxtElVJD//lB8XADDx/U+Rd13p6wSG/uq53f3R4XONZXXYbw1CGKWlOkkimVbm9IlCBVxbS5
18cU91TtIh2KLSAUJrsuhdtZ+KNFO8jXFEWYQmxdVyxmAc5Nl6KhFkW/CAB4CdYYR5cLk6U/1cbV
tGVMr5ZJQQmgfrxlC2iY8yI8rySzYDDZrZRMMy74GJbEctFJQmZtcxK6Xc7KbrHns0U54f2D0kVY
YNjy4mmTdDdFOe2WHOoLsgI49GGBaYD7VchOqTVzhhBwJtTaNbMNZkPk0uYvcvKqb1exBPDGvu/O
coiKEvZBzbcSUl6LFU/97xIpruUMAjIuH3wldQqgxpsqg646XFuWnUir/lcY+RN4Nvdx6QjKwWp5
Jw13Je2TMGglth6/HfM6BxnXq1WYURCV/Vg4HMq5UhcTuhfFDlghLeO4cRuoow6lZPOwJWDxg/mv
zddX3u0b137BTMOorvQHak8VVcN69JplBQ3yDM5XTpUpoEZMbuchQwUvYN53aPKTVvSW8tuL49VG
OV/vmVKgX9I6TJOd1ayxzkgtYIlcdCBPatP+E3+6aW55fTcCxG089aIHi3jdzNStGoUEzo2N3wkz
YYFZ+Ue8gOnRzwutpUQGR6e/IytIU3OP+5WY7Tq4QEP4bQFF81sBnZ2v3XCAn/NbFVwRNM2X49NL
dgrbDGIqjP0pwofYKi2ppXJwz4boMAfm1x1COqbO2tFS44H9v4lDIVIvt/zPdSEHe671EbuK3f4L
eKT9Ug9N5VhPv10hQ7bjZbXZKx8LthbEuHlISA6I+O/nPAaxTNyPoeiC52AZcXzTN/vywVxuvJUZ
FiYcuOSJaoQnTVRJCdbaRgdvjWEbNeimGzWCYA0aR3ztSoWLhsLgU9QirYOHOw0Ub1IgosuLFp3Y
W7qTp9O0DG2Od+emve/vUAJKFGX/IeLT2mq2Z6Vnbj2GyOWnhqQI+yZnMr2Sr32FCgOM0NI249jc
+ouDqiclnzMpyNN/YO+9vPo0ek/7LQHcsZ0+WoAjEoQfooAT6439j1XYv+XpbyjD1oh57pqu9Obb
ROXidxyypMxJpyp+5z1bAHOhfcxSgUmR09FRIhT1j4S/nvHVGSZkyiS022g/d665Vz4sHlKoFqG3
KEmtyz8K3owZQG5jExaRSnZYOZlWKAvHqB1Zkapwo/SrgohewJ2J3VTFxd5CyRAUM+M5BM37OGq1
dduc2ZRMsGotzNP9e4TD4VhtNRp7bXA011oBxGnV2MY0SzBhfe91i4W0dzgUE6B3/VqkQz2YTIp4
DIdyqG6pwa68TEkHDKFB44Cal1yzgi15e3Z61L/EnJuwIIKcMXV51uTFZoGUz3PBxhLz5Er0868D
AR0jEzpQUjA/XuVssU2b0PQo0TbHBz/kaHX3w0z5HbLgxEZ/h3LnnOESa5OQEHDJUOUYB5znTdVy
sEMn8vomU5LWo9X6wKE2rr6eLIdUFPfXzyKtzKGgbmdugjivkp9Kk9f1Ukv/yaAFBjQ9J3FBNMOe
/zMNRdbkJwVx2ETwVRt9zK5mospjblE2ax++nzcCEAJLyxpHKohcWLx2ZCO0sNgFAjOk8iIMI42l
TWtzx3e6YHfCyQtQgct4EI44aOV3srhOssYHhb9FkuBqF0wtN4uFHylEO68WKwIQIRRcJVawPmyw
PnTUepDt5ga8gBnZrbwy33YgDUqoKQesu8SI7wQ9YVuJO5RK5C8KwsTVR6g4OIcEQBXPXoNexCqa
3e6snIOLDzvIYzAu3HxxpWQv8vKDLr+8q51saEP8FYvC0EPT+rGNRHOk9AnNy0BmzKKcVY8cv2LK
g7vW7qsVVX3jXN8CfBhGdXX7nVnRiIImWLhWQ9C5YitQC8Hathvz65q+VVEZF1wRifiwAZ3O2cKU
7TJPjp3Rd0aigey3VMlC+OAGloQyzJDxCpvzeJfXAaqZL6YnPoBaG7lwP8tUtZ/6zSjMChggCG9S
ByJfrQc54oljidseuOQZSmuIBE5b4o3s1HhimSoALTvwLUSTdnma3Br+YqTHajvNqxN095bJyG4z
npBvqTP7dy210qi3RjDEhceTNjJbAk/FfETCf8aLpMKAfDxuOpyZGpcUNM/jTfR1GPeqMzGVhQHl
7lt59R/tVCqmza8eg6QpSKXX6tD9d/KCocXn2pKmf8bvPWgW34ITd62gmkDk14LK9s6Kdl8s4L0V
esY9+me6KErPbysGy3xA+xv2WHRy/4tkyCqrQfHevrXFfnvqVlYAZiUSTPNSSID7sRFMXSSlL9qJ
3QV+cNN2rIOB6vQlaKrPG0ffRHhYAMEZvTs0rYURSGvykn06CIYKzDEpt8YILKz7YEe7qkUcvJVf
GFqLQdZTduM8umr4pV0EaSHJv8Y5yN/glQ9ZIPo/7swxnTrw/bQX4D1PuSxJDad0gEpetHCr3K7k
bUdvnKtqfbhPf2mgPcProoyNbvxV20YiBx5lOMkfvl0m7WJgsusQCC0OC1hzJ7ThZ58dP1AvU9+X
d38kX1AOHHnbeFwAup8mVCht1Ni1xjIQtJ4qnQhJ9s9e68autuIWS49VLuZDObzCexX81MpQGVWe
BtVep6gFm6A+T4wQQ83uKrUH9D1jGiqrUbZsc+9HER/EWuBcjVdYQ799jXwd9YjzqMCw4CBr2Qnq
BTqJ9DlmcU8SgCJJilx9q1/DotZLI9LTyVLpsMPUy8aN+ybw53BVXTNqClim5HcGl5GJ2rG+uo5i
BWKr9EQ1fXHOAcal1+CkoY9BHXrNd+ZQj0JlQ6/orHCJ6Onf1hCu9QuzJpvw9z4AtjDJJ1phYkh+
LVRiuCqlHhxRteA5gCCVgv8kQiJMwunl3nEKT7P+DwABvVftWax3oXAdGGuv5euxmaqNp1AMrLJS
lzbjXWb58NylyQALyX5K0Wng04RRnSt4P1n1ydEUS3sr71x2qoaPRTtWBU6p1xXKtL3GcdcqYeBq
xsXVtbFIDHPgl6asb5I0WM6pXQlgLcrntoDuGVBxOD4hJ1XWN9demGslRYX8+V9Y9EB2q9ohpaS6
W/660xPuGoeuIANt7DjCQoKgL8v73gJUXgCkz0WYBfu9Dy4tODxnZjzZ2AKk+a9/F4PU7RCIgh4q
1MR0BaFjPp8QtXtQXV+u+hoodFWEUU1u1vN/tnl5LiURWb358xvwW3WyundUXU/ZpkY83DaVridi
AtxVzfvKYUsIMXMprGqvfH0jwvmAqexUNOAsW6JgjiqGqGnzk1lgC/Su4fApAojoAWYNHhSjLF1U
OKR7W5GAWg8RzhEldb5sD95VRO7aEoYw0YJakiAseAvSfPH0GQoV0CKIobciLbWO8q0Kbfc86jJ7
0HXCW9FYjjK8tznZ2M6PACWO0RepCmK0p7ZjUNaFFHH3WHNsJRrljQFTaXJ96wpaYApaggs+nBWw
WKWvB9dhLG2CDtwai8gXL+nCEZRRrFBSPqck0I6Xvf6w7Wg9hDto4qjst1QP7wSLUY5rgdaK3oWP
3ooJ4l//MmozbnLxyEWexm9QfcrSxPg+/MZOp5g2xS49XbGL4s09I66PpYQqSV5exAgW/ij6TkY0
1fwP71VVSIpkw8EVIUNviYSb1YqYrCWhjpibDetZrfj4EzHMDqq3ko7tylcYHOMVvXsKf4RRiTfR
7bBJ0Rj6MGkdUAhpr1dr347LosLn1YkTtHlhZrU/2Z9WyOFgus2yrmxnOIVdo5st8v+NdRf0VArV
z6pRl04QiuLXpYG+TrHQRmAWmiCW3Oi65zWfBwZfit0AL+UTVJ9y3CItvgZvC/RR4zgdz7JmmiKI
d2sGBT53cr93At/MYCBdp9Ib61F/j3la7E8cgEvMnPxBhiK3Kpdl8bli8hXEUqkvTf/64fswunQp
EXKPr66YGcUN3GU8w1ejr7kIe2M6cbxyqXjpi3uQFbw1ifVfkqN13a17UcG6GhQOmhOSjA6zZ53s
AYTjl1/fumUM8+sdb/fxjWAe1DNrIOXY2gWVAwc/6R/kvgQkS84ip/B4t20Je7SGwy+UEGGlVci9
H5jo8ovJLAUwxiu1t7mBzwJ9vbk1TC6dd0ELyqJyAAB8eX3WdS03JDOtcqHAmhsPXPBrD8pM998c
/MU25kOdzhE2jKb+1VuNpzfrrkZDrzmahGGtGnioocoesuEj1QH4dzT3rrOyzypgFyDMzFxn+XYz
jrylE+ZvJO5lhXa5iCkQl1gtYyp3LGe0KtCd/QktDyPzvmPWPb7bpBq70uSZ0N2Qkoxkn+fvpM8g
7Mof2cWMrkL3raR2+pIZ5/Lloape8XZ+gASVnB9DoC+ruiP2slscLt1QJpadFsYHS4ZVt7abWEcJ
tfYHMBVLX4SKQ/Nh0T41GZwFmATG/hdzltPwnAbshDMoOAuuYcj6Toj20x3S8yF8/4N7R+xjqsiV
3B/gGh+DAk1y74R88dhMxBEPFFKUsb434cZf3fWstVAaIS+HvjJ0T0rBcchhfls0Hzrw/UAf0/aY
1JaZJjekUsJnTicin6IevIWNqMyb5YR8h/ut3NWVIEFUJK5QsKbHTTSQn3TG1Cx7bgJxXZviR9Fn
A5f63+e20KSafgttWIwsH3rXykdsC/kQ/qfDMgeYZEwR8557bQHhgQnpKH1unyBXeywcSHpFNFJD
zK42o0ej+Qyb9HFvdzBwadAzEeyqRfGI/BJj87tGvufilyulD0ycH+Uk94CZyN6k4ZL6y7yXT1gq
xcJTblbCTvCyJGB5k9YxnqYGsQYgvUKYQSbtKmHO3wCs211834Ke1h4F9dgLSwQy7E+vkq/pQfah
6cDghD7UHM02qMQjVrPRfpTzWJV9fgVqSpt4M7rcFHjFmJR8r6BC4dRKPFpEFeuyHDQlzNaIfYeH
Owx1WhlJ7fxlhRkVKxf8sS7XE3wmYPXBADCaQvtkY4ahRg3lPIp8mZsAOTDV7Sbgb5MLQbKijDzj
sYlJTzYtEJzIIazt2Pide4jb6L5knfaHqi/CscExT1LDFKBaCvxSp0ia7mbauhQZ4M09h4+BOEfJ
hj7Z/qQssaucQC8XEI0TJL0cuhl1EwAbqBtdpeCgbjHVXWm31hjbm/+bCK3mrursg1eZjjcknFWt
dYyUSxeUd6z2u/nBTc50ZLwLBYih19dirny6xXYbguq400QIOwnGPCK8+GqkL4OrZXaRzMJvML9Z
IU7/gRCSPYjhRAVefMjnOSxAb+YgirHOU9PzOZxqV1QNgK3B/3bo9BEcK4GWQNWw0dEeQOSXn/MZ
UnlixM4JMmVpsCOoDnWP0RUJnqr9ho9INNploMHFtdVZUZzg+WEayNz7JgYp5+cAjMHE1hLW4VGx
LLhQkegdiFyz3IWDxyJBb/yomGcKQnLHGJsIdZpSkKhOiyHziBIDD9SZLzsCjT8YdbXkkf+EZ5/g
V3Lztl0jFWou+ocUFxlRF2hJu6OiLAli014G7xwxdou+f0KiMp5IM1tAHzbsuF1Bzzz0HlF+C8A6
ml7y4VIMBRqX8SEvDJZ8wH8Jphcaan0IX7TsuQSIfRs4qv84b6A6zO3qqBvA3kmQ1tfs54LoL443
78pCA2KAQM3CDcFQwF26DIdkfoyxjjrOj34ntknBWzPqyV4W1BIdiJES771s1V+7LjGSxqwMjZtZ
sTBXjgGhrWBfddLcfdc+jHOJBCPtX0m7acJWUlP8knpHRUk1efCMvtkLqZb5tomiLy2ccjbeuZx3
YRyknpQDqxxXo0eXIBtrM87ZWeUdN3Arm59g7xcKLIEvfSY56NrPm6/U/FahGlj6kcBtg49wFRI1
eefax0qvyObC8f9wg3+S8RdnVdv1P1dx9LkSeDzSzLBYtBmoWO5YAsc1bj47i9iMpZDJyyka2RMU
bN6nYQaNT5YZsNvLIpyRTw3fO9jQN0cj0HNf7eO8tTc1kd5h+mwthwihiFbCAyg9W/YBVYupdP/j
5CbpS+cYGSB81T0dPXdDqHsdTGsSdAv2pKvBUwiRtvTWj+vp1/8dymuz3btDznC3n923joaiyt4x
lruTgcmU+s9NrR6KLU1h1UegeQoX0LAL+WcsXIqylsKAiB8Gh7ONxQKVbznkJmaDuQp/0S6R+9Sw
7X29Vci/+O64wLoHdpUS41E4ScZK2Csmm5wtfzqXWjqKTUy/kT3am+QeKZeemB6wvwaY2nN0umPA
u/YyVIoG+hBSJ585bbawhu/7PTDe7UOGdSsL54m5m9wHuq6LOoZZyq7cyhHqhjqpDrB3kNizkcDy
3CPqtI6odcb3Vkogi5TU4w2yKzFrXxGKliN7Lrn5d0yhDoIdrJjqQX6lcX+Bf583KGQtEeIKtAxl
e47OIU416JqSMIXx1qWwuoKdaXaksTXCpn1WsL6RE3Qc7+G0GNmiUE6vsxzCrxWB1w6vFXiUsVvP
8C5o+0D0HEEMysZxnbXwQ9ygNeveGjH20KOQ7/TQjMJzPb9jlSRGeErdpYKEvdm3UjsXjXnNRPo3
/AI4MAfMxBGO7STgq4ixHhq3nVz/wrh+KMAk5wXsFfH+cXcYJFORrF9RVENQAHcC0RptTieJj1GZ
W6CIexxBhc9Q4tMrp/cw+GcEqsZ+qBnKDXlqlrcn5GSmVtMOyPtkcbFlE4QyJG+czFwKkbsbH2ba
ahCa9+j5YJWwx6Zh3xNVwPm5j2YnrzmT5603vcdaIpC/Q5N0nUAAy/VaqtTVvjfGkHTLIsewhuE9
jYy2oefKZVZgrll04MOda+YCrG1am/jssMZoxt23ecibnKW2/S4kyZs2WEZRTpR8mkz+wCtCXo8y
PFo33RGLPokLXcPGPT0TcLJOM7HiMQJxs2vGIEHQ28KRJU3sbi0FXs26tXDFLUoM129PUCfG071J
0yU1sX03/3xxasDr0Ka709vVl6WqjN9yQhN9holOBbPVcJAp75FZscA/oeYiXxjskW0rKjj9zyaj
g9L7rYf26O1rvvkNIEcXCrBZWINS+g8kiYQ1L+ZR13SvHQvvC5DE1z9tV3uMnkR6OkK7OinZkO0r
j4EVzE3+HiENJD7OwAt9O3mg0xQRlUSURchJ6XniuJLpaVwQ+b6f56onxxAEKJYC46JAHzVml2MC
KZR/He1BUaVW0IGlIvfnWk3cvvq2StOm79IOaALZ4ZIEShWi5Z2q1p79qmiV6m/A5Wkwx99zoksB
sezxOk5d/Int9FHRi9q7tbFNtd77DL9xqrqbvdq0WbDgKtdcd8wXQFFgswT4bjdd2JHDO4qqT8qz
I16A1ZB6vuF8DvOIkpmuBdBpXlu8jqm2wHdMQYswsQ6jLK41ZTJXwDcOzyJixNr+LQPGNgEWH7J2
bLdbWdhHg4Cs2Socw/ep7LkIrJe1ekuT9ctHbo89VtBnCg41NVY2Na1b6roUu7+2eihhGnpLndNJ
/97Hxw6AZTI9y/spmj9jhEjrBHbpXWdQd9m9DMlKBDZcpJ0i1taJtMh/o+TFBCQRz3rtHlfESkZ9
5rnsPq581aM0ivoKkV6F17GLFNRYH5tZAQQQTm3fr6wnooLCQeo4txrguuAE4P2frd/5GrZy3TjJ
tJzfot8UTojg3S5evHp3rN1z6dX5DrzaWuY1lA85z2Tkz9ANta20UUlbcowFzq1gDGB8kmdOacvv
kZgjng8tS6IF14fZwU0HWwBf3CHV1f3jpxkhlDtVJnAChiP8yTyRP+ZokdbobbTyV70zkwWgmeyp
dzt+G/itPg4e98fbNBYSIaHbvxd1UF4UBHU2UgNBRDTAEDZXEJHMzdDOH0hhGThsyhyddNov5MBn
urNHsS1MeA6OdqqWOqJT42QQbMpQyOJpcxdPjlfxHQsyo7JVYvpBMN0vLJFkSEemVTDyq+CoPuDv
snhy1szJDNCVAj5ZB/8hqwhrSkjpL2vOnwfqDgEqspUb74QI0qJTaqMlhkUEe9ZLtFxZdd5H5y0E
hD+T00q8ECsobXzxd5smL7zey27Skpg6iLsrOD36F4Jw2nTvdS/qV9TzijZ3kvO3lZNlnmCt1wFz
OlI3fIHdK8577iGr5R8gowAwhzRSdHut+mkIcKnPvqd68gzWIoTqWpFOR0IliP5k6IY6CvUCKhM2
J9kGEkx78PYzQZvrsv34RsjVRLQdf4bX1H81p0we/8RZlzGK+i3yaONmHsJhFwiKkQGewTSRe/bO
EbaXs/LtyHkpataltzvHz3/7390xBvTF1UemB3SDdWoGVYaYfMTDZpakCax60zs/813QuENwcR2Q
QVYF/wD8HpiB9+QiI9EW6qqhtDFAtgKjseW64r6/ociLvIMBvpp/2ptOSW1h0i4LitTVug6Vx+WN
++r/pxkgryFYlhtw9NRYU9UultFA4mEbOv6HlR6N18eOT1UPIyxUzCjopk5KyAPpgLjTewGwHpU7
aUzowhQVs2LqH7+R19TFkpj1BeXCnS8pwgZyZDAxVK4DDofC2UaDaua4mYMb6KEJgn4gatJ6LXr4
5sNcHaxM/LW9sYsSEXYPgQ3yVlH5Po/DjBo9NFOcbIMZkrwS/JEd8Z6ixVF5fxYyT/bx2JkGPbpd
9xXtFpL9UQH2Vdx71TIf73LE0to1LZTaNgTa+5dhgtf6HeYcxF/dfmtU+eKEnZYrV6blF0iJIhPx
YuQTVg1RdkagG0lqaTmUo7RAPD3cvTXG6GNBm4cPNENjM9cg+TmiS7gtWOCfuVpRKAZamuicO0yb
IzPnLV6UeTAn5tMOCkCazLKX5iSinPZDarOuEKORs7yBxTAelNIpXEHIjstmMrqchrn4hP4HHFxY
oc4rYQ1u3zOHcCoeLeopCgczoUe4YFb7Chr9g+hkvwCVBfLvGZwxa4il6/EwQ8Q+r2PkqBciGPzy
pHhNzArd5KoUq0Wc2qpy+kxaG37pvwMzPTm2ijD4R0Lg4e3M1GWOxG0qEtfmrgPYLS87c8cBV7w7
VVcBQNA7m2rov3Mx2WNsUvoOgPpohHAoaDOFziQrabfjn4/nKXbwhd0QWjGQ0Shsi/pzTZFq5Hh7
EhKI8jlsSev5mIm58TIkvpErODZpVMDd90eE80nCt8Fn5emCeDxD12Kdo8cf+EeAdkCQ4y+E+soi
0wU3Rk3HYIMjw/RwTxfGx3mNIO7QUQo/HQLILiBWGeuAKPNhF7nTQ3FRn258O49/2u6Ip40iFkgo
devBSfyivWU/OQHEk56wlACTrCg8a1vJ+7hN60sT8HfnlMrkGPe2lGVLJHfhKwWXYp9esn7/N7nn
a24UR6VQFSSBaqbi7fxMW1CNcLBx4XpjT+ZPH8eEowarJhu2p69myjTuBYVSbaQR3xxa8DmKO4bR
HO7GZZTKLtYWPfPXD4xzpT8iEV5BiEvwsdB/TmzAJw54ZkPwvtsPZXrdFsgPl0GAL0ICXI9xNWef
3zSR3fZjtUDFF6L/2c+dVFdlLpHuWqSLb7IAid2x6yJfuexpqYN3Nb8IYSbZIUFIlC9zFA6MhB2W
fqNK/Y5DOA3u7mURNLgDHYCte4fpAgQk/3DvJN5mL4d4QJXt+CPRqvfi1PQyUKnLOLw/oDVC7nws
tuh4fip3byoGjBRJCRpPg4+iiP/mQoN32Azep0kMvdRUMU64MEzA86MB3y1xGkxCv/UBzvUSqp7s
FFHU5f+Sl/WOr+RwIAajiZ/asg8bh/PEEdD7wj8yYA/5YM8yZk374Cm/603v3u+GbdtReM0LFDaD
2U9nfqaa0qk08ff3Vc4SByw5SUpE48jEqMFdRS6HYXcWCtvbk/dXTpX4d2+3ire73jLGdXgfBml7
ECXOYvbpQ7YsK1KlPVYxyEvl2DQ5hypDuCR3FPmJmFgRABXF9dQCJ2KO6ni8+/raL3kDpMm2mFOf
lJ7+ZO7WwUgrNPxu3+kAk4HceatDXTCGP4qcGIVeUvpcz38xYkG1+ZyWOB69ONZ7BwBa60VCkR3t
RJKNmNfC7lUIO4ROUj3awW6YcVoYQ7qfc2zc/I9x13jXYA3BrWcVkpS4ECF/08BFiBG8rfQRKKOv
ActpLRjBI4FZs1gmXt/2+h/iIPjMEFxpN4rjFvRAI2+jTwPtwEU+YE4gVuXIafOfRmluBLnFYB6M
RPf8e4+CiYWGou1KcxlRh/DKUyp267GXUPNXL05BcJPPD1/2tj1rfrdvZz6IjA3tYBRMNn08rFM9
tE0IxMWINLKlLVir3FL5hL8JJVRkHiezBobc/NZURsljCs8x9O3SSDOBaKpya6wso2E+NcXh+p23
QUnNf8EvLQRd3IRzVllynVauuH7C8nGQzhD4tltcCM2hTdfCRUrgHZnl0u1Ui2eR52Zxc/fFN4Mn
KMjywF7pk9SOTD0FF9bIi+4Jz9vHziacGziAWU1G2Luk+GoU3xfsLG8iIQ3UCLen1NrG+gbcXujB
nZ+ZdlMjNHJAHOXEa/hvqlR1PsFTH02F6exh3nMRZrzIHk1zje/W7FM4pyjBJBf7YocFVWtkkTuw
PwQ4qpC3CzOReGhADq7EVSWkMCg/VGRmE3n3bPwuiuGxyVqo1aVzEg/bYDHjRf/gxAl77ZADl48W
fbC+wj1+u03/FwjZzWX8pa6j/jWV9DgTCSiYIe6VDWcusQd6cRsM+s1CrPRF+ffri+kvPbos8kM9
cOf0YCB2cCPL8psq/jXlP9Hj2SobRWHtHHkozFfEulpGwcTZOGWeDIr+ID12r3O9lLUrMtxiF0lg
CFQT9dvQDxjlV2ur2Ok0pMpH6nbRU8GiwQ0XbMWTZQB6VYabhA9mNglSWlYubjZo09cDWOApBpDv
3V70duKKq4e9hy+V7mLnQ6TG5U3VtkIcmXA9zOlG02LL60KQNQR/RjeiWQo1U7j97tVmpQGcKC/i
MNfsH1EHmalVDcBxajrp2utG5tAFiLlOxqI8AGYxPDPTc+qJw/yc8bxQYUWexyJXZNcmBBTyhdzd
+jwAOf4hkSmimXqcSDD/FY/Cb2X8Ecj05gsvAU710XQvx9dcxcJeOU+aoam8/2Q6S0sZ+8W/dFBt
MVZJduqv0iaAEy7t0q14D021IzgQk/U8+9DyvI8SyySjZGTLr5uhjPgn3m/hf2ELntRM2mJRjOTO
tedgcVHMzhK4iplOya+wdDoX3J6gYYYMRVK6l5iV4ae4f9pKCmCo0kI/hXZFF5YHN1bdguAJ4imq
XwPErsKy1+CyJFkTIyexiamdCrQvnSlbPgzJ8dAStqAa9KBAUNDjSyCTDgU7+5y3C8QfhfXfbZ7T
TOE0CuwhBDbTzcxt/9wAenD1BxqLILGg78XQe67NvERgEdKRXNCcCWvv9B7isJdgKRLEQ2IH89m4
+632DIerUUBMxTI3SYOaH93bXWQw9MImiDYolS6iE65v7Hr8oZ50xNEce7TGQlZ89nx7VBy58JfE
+zhUkrI2GerDgjPo+HRXzhHQTaWSk0JdUVmQT0ExTiLQmWbsEFdlovStzfmiW5xG+atBbJvwQ7Ng
+aBBHIEWPoRjc8QutoxzZgr7x7AVSrPUA7C2xXcp4gHDKAmtcPH33rS2E28IBhZ5HcO5IbVWD3RD
+KMsy6jElLcMP8fOQIYNzGbsgpPTVn+7jO3rqI0Ts/GRh9CkCQ4UsN4aV6yP5yLnRCLvTpnhN0AX
qYUWeBMUqH6e1Wf2FzGgbIyTFvcfJ9NbMQmy3gclxj8yY3Q3H2PylV2GvPfHNal5iw8860P1zIJQ
4jMMmEFjwnvLtZLPD2RslTlhOXzCV5W+eiYIezubV0vkjGf8wqcIOjuMd4bU3oZrh/+b6VHOyicJ
GcWg1W5d3zq6L+Mp/mhaGis/0h0UX3LI1vI1oB31g+Fff+h+PCqunlG7h3OuRdOCosaXKSamZcZb
ZWEmIi4+Qbjy9sPkTc0BG2RZrCNCgwMYj2JJ/gHOues7gaKHr/Zd5Xr9QN7h2uLa77OaZppCXw/+
vq4NZYcNO5OtF0esG6d09JH0bfQPOErHU/n4KZCfpvxxmfndd4o3MTtG7GCkY67nso6e0ttFvqFJ
dxEzouWRbhD6hruf7ZsUEVgztR5MVSebkgJqjUO+4LQc/JeswPEAoX5ondRKldAvKQbzxs1ssvDY
PxzxBLcoT+9axv7FS6OQawsrj3tDMqYQUFB7539m4PzZ7AhgC5yUhb9VNqOjBILZi/Ug/fmadpvx
Q890nVyXooAZD17Q160VBwee5CpEoH8NVmkkj8s/HR1zdvjlWgc46U/jqn1ceO/Y1m8HABNNNJU9
hp6K/tS6yMm3f06iOy6hzS8AqMZ9GX/xZ4h6EObyv0J2RK0v3RZDSxs/1UnzLCLCrVD+AmAmMrd+
hdekJLvc1tnqDUlFLMlOSLwtJdVTeAD05a+LcwGxVx1y23RjaSipjOlPdZkGd+YUOIyi6lhGhTOZ
09nefKdaZ+E1gqHYtP/zUnTP9C27WVY8xQ8J5h5WPZl2O7S+DdepBrOVTNVma/Aw/C3TX3fFPyux
u40nZO8RxR3pudqhIeq/B8AmkSzXJ+swFzE64kWMFUh8Ny4aIn/Hy6/2q7RJZCM24tmt9aBlK/is
Iyg3TR4Uzk1aRaAqae2+5CHmfN/8eoHkihqSY9oTrsnWSB8REPVuamz2flfYCBxQfOoklaxJSy4j
sT0dzfqaEAGQzB2N4o+bMaVneVSJN5Z0ozXlmrogtkN0kpNnrgUSKNsEsZUYG7vdLBauPhhY/bjY
YkuaZbzs9HkbU6c5f75QGjwM8a4zrktSRGUf61zwpaDB4CjgrA6tCT9iVYcYemkV4GXfDZ4mgAZN
NrCo5rGuxztxlS39v4uLAbaiCTk21+HfnpSYCxHqN9xQ2ruoFcMWBVxU8Kqpnzm3+NlpicfNYiQF
3FnOpL7xtvTg8Ghb7oKfRPvnXMUd5yKwM4zYv1LCGpsJZjY/Wp8wqndxgZT9HIWzqi9S4nAJ57/c
9SvF07hqbQqoGj56yMuAeA4BYDWc8Uz+TWMLHBYWoyKmkkeazC8usGwNoLSg5Vw3Yb4zlKJUK6iF
gJksVHYvPISKxFHFSKxVzZa5EfOZAqZvjft0xmzF5gtf2hkZMblVIAgC8G8YDFi4WvKNUBC+kWWa
PLw9U+htm4MR4Yrx7aw89R/npKEnQhd/fKueMt2CrdfoadKJYJ9ekhMWgs0gqSo4K1a4UB66Es2z
OScYFLUmb9PGAMd+G/UiwL/uinBxYaipVacPFliybHKuw0+lNwgPFE4btxcHXQ1m+rPQ/lxjzkev
kjtIavqPYyAb+DB0otgxu4jr+dQ6eKlbg2nQpIsA+/1DBbgKoTKq7mFp5/Izd/hdhB8YL9YRNWlX
V3dPQMdtD6Kjy5a3mAnBU3p8JKOiEcM10kly9LDqOlB5W1/N/5PIWbb2WKcrKnKaqyICAev3xt+V
NYcaxuWZMfcih7vMxAE6FnwC4isUm53LAH1kiQ0i5uUIxTLN7bBliINP1NR6CLveH1umIyZ4ja12
F9tkRH8iB2SHfWA4nZROesu4RgQl+eKgUtZtatktx8O8ViKsO9SsBnbuo845Tm0tqjo6M9VWWaH8
FaU67bzv08kDn1n9n5dpZwIukNSYlOhOQXWO3WmyNAxBGH1nUjz3C34IJrMdZTWj8M7GgAXKas39
fQp4WuEL4ru1MGU5u+VyMOv9SyygBYPwsLIac6pLWieDz60BPYDN6lsvcZpI/o04PQlWYNGBSFXk
RFUJXJZhRwadkIveLgwAMcSVyOmMCYbzualxvfJmrPjZHcgF2nnKuuA4M5vhaPqDFl5xynECFm5f
iQH5LcjkBlRPfBg+YfMDGwHm04Tzz5oCTdH5hzs3mjr+6AGJTmfd6tcyLw6JAJFtDOhmkA+EUTbP
Vu8wxmVmHHfV3bj7OhMAvYeT6BiLLdjjT05iITASNUnW4MaHbSfQf1X04FJ428sWNh4Os7H6wRoD
raEExL6my5AWhQa5P1QBIiaKt+iO8CH6b1JgV5CIhLrLBBjUHD/W3J7uJSQ6KGLChEdKMi4KVGCf
09KnkcmIV/FcCp6TWaXEAU5AI3MwEf3aTSmpXD7LqsXW7zq6t9yx7KggrWXFAsnN+1J6aiT3A9K6
gZLBmI1IUZWe8Mw5WuCTMHnGf+xDeo0NkDaHvZ8P5CPyZue0RTmQ29IrlzxxHGR5KBfqCCAuct3V
vyNaY85qW+5SvWtQDcVYnHaor/Aad899ANlKR3JYTicSgpJpfm8sKYH0Bxh8ag/p2sbajleNo9SP
mwPssZKOVQfhLtUUBj0i6tatlF86Z505cuMAN7fCg1GP4syjhkVkkzz1tTrE4FqluOK+eQWj/q/O
vsmjFutsG9Cbwe0m97sdYxy59Be40p+YfsDB+34NcmW4qJnBLxgVQQ8mjlXAMM1CQV+QNSFCVEUJ
gKmGPDDUYjXPEbv3XSGYi0+JJyjoUZbQDfRN9ZFD9DMPJ/vkx3tK5Zv2Tk9ex/e/9vq7fOhEUoJm
blhMIkKbyAFUaCt+M9JSjo3Z71Mk0VNKirwiCxc+vsVqo31Y+boEiU2VbA6sjM96/P5KU+sDoMgR
qyrE828E3gvS7VXFVksuuFUE7QPYiLIotMhu1RzVKAQGzx1n4OTw495lTPT0jSrytoYhBgaYTWdQ
AWL9xM542CsxkXirx7XJ4RmDH1IiIoeqqe9qX3A9kaalJZPZenJWLHXlg9ZPa3Gu7x5o0SDYGeB+
UFTTWyqgsv5zGyGVFR6466iUI0uEAin86Jt55qZgbqn/XYxTb4wLdNp9mxWWE0oLkDi7sFWe3BaF
Jf1dMH1YpZEV+Vd5X3xDWcSegVU578GhUTChrTHMH0zEhIANaTk2f9/qD56zzWcty8GE91ViNQdc
oLZPEb4OzLFUEYhZdopsZ+aFX92cqz+cOD3ujsmNDjDsj3lmvuxrqTF84v4G08b/Cl9bhtQZs3iv
jk/0jImm9qf9Ftz7E2D8cKUN/JJ3xC0DnDiZOKCAErIMtfX+UgrYiZZkWsd3AaDuTmbbAc8ijo9d
Ucv7VAtl9REooe80VcU/OYRLuNgYui+qFGZhK4iplfJgFYce2KYfFMqA6baEG0c8GGGyfruv0I7S
lq7TfoJUQS4cto/la6NgXC9oNjsh/ehPCYsiiA+iQeAeEX0VICAQkKGpgu7IWClCWjIStg5F9wvq
HKu4yv8ZHrGSp30E3ZA2T1nLSEh780GAKo5aO/VP+dJFABlvRUUDIJUEg9w3w85uroWu6lpL8+ox
Pgnv0Vgx+R2siwgO69TPkYjbv4f13nMAdKP2HWsKKQw7m8XyPU+9QI+NT97jk3dWZZb5trLJiv25
lVotZXu89MuH/UHW/TyxkkJV/D6qLkVuuPFulTDwao8i7KH/O97qa5Y6aWO96LwhJKFGH//YM5Ly
Ah0NFYyUQgkPas2GHdnCpWYgHRZhGh2TXzbdueiW9SaZkaFJZJyynyX56WyyqZO7vDO5H8mmRqpK
Uc++QVtalV1tgptaM8z4yj9vM0bOiTlplmUu9uxlg0oSMHpyzVwol6sNRWISTmBaFMxFM1yu5Lis
e5N7HDKPz50nuBgxI4o3vXE1cyN17akqdpjpml0XSWLH3Gteh9uh6achnNCnUfShxjgvkZfrXLFe
EROXQE//chWUp60vjbAA5gxkljCEYvaeAIHnRihH/m1iAYC5L9//ZIkskwfcno+HcyQ0pJ6BsXDx
wThxmoWshlMvR4Ehntj2AT2+mJVIXx83hB+LYnegKmIfr6iRdOYATfPYJWpZmEezQYI+LkxP1Jub
qfuFtZmFPSOK1SLiLDoW97YAXdRE0hh29m/qcvyleMnfE3xWzeCOqPe1Vt1pvBzql7vFWZn3SoZU
riXwmsIm+vTNbRZ4zwHQr64abUG6Wnx5oBz+munG83HZGuqtgLXhY+/i10C3CS1B5TzqD5AuGa/b
6vQxNpkGsTn/sJZYcLzIrEcKJz+mdOQjMg2HKEb08qee4SM0ajsQ8k+yDG6L5gwOdylgTqaR1dmE
fJiDpWzEcuzcMnbhmhAjT9o6fHsGA9HdjqfAn+plwziCuiGJOHbW00G9yj6bI2KrBBxTNvOYgGaD
4YwryC5cvqnkTF63mOmES/F8BsFGuAoZygbvF361v856o/bQ7iFhNukXIk3pWYEWiNqbVNDlYoQ+
GdChNU5W0phMoOKUrNPvFp3T8RwX/ZZlJ9iUZeT23YujMm7HdU17U2eTmXKTl89QcodXAguY90ou
VWUBsqrjhYBHo6bPyE7yXnKbOmP+6fCMMugQh6OyM7wlZirSqMWuhHYf05fjpY9kppLdMLkLI/Cw
hmqldeMdClYBBoX+pES4MtfKaKj8I5wNL3FQZKHPBd99XH9joLMRFJ5XDeUbqka/IJM1b0iByoiL
lUus0kvak8l+Xje2OJYzUwD0Ty8odEi3Bma3GPusvnhWevPGHPzhODAHwofexdJf/LdkrePKsJQT
dHlVoVNsjVh7glqqFdr3TMsI+okY7bR5VTAehqTYMkMvWU1h9rj5/VPBKY/hwPx22MVK+Top2SYZ
q0qKyxnsNWJh3STesbmuJmMs9XWXHMGkLKQ6qDhd9yrUOyxE+rogno0mNIiuOOHYs8ueEqEwFhZT
Anle5JstMW/EuwMooIgX6gQO8IA3Bf56EndCJD5W+k/8hTh0bKgnxc0xReaxLoMQMiSRrmDn3B4o
GTZgTVuUjqJHEyWuDQiNkecCyY5kw1JK+eqSye7L7QE4Aaf5I2Cg3twdMIjMzgIDxBxCWXOioQLT
nyyT5hRDp6Iu6FMmBFYLMEQn3zF5Cl3eiaOJZLOApq1Y5gfkN37ZeIu7pNUbWt65Q8fbtFt8PgZP
pXVk+/c8WlzqJ2Rnb+EDLE+KQ/6M7szp/v2XAhG49BO4MzGiBXpTU2I9e6WLV6xQhuNKK91hp51e
8m3IB9t25nBckaDps5vQ0Lo+Tm8FXdsxdbb1jOwVAxPR50u4R0uZxnK1hNax4KOzuj7jiORfwRrV
nsDeAr8I57KVB3j7yVyL+WblNdYO8R2ud1MD+JbykWjP7q6WyInc/RyO7GHf/iDUwsGSTHYo8LHf
D0NcCspkwpwC9Xy4Yq50nnRxp8mIg5c58dPTdqtlZGrqeyayhxjg26XVJfYnIZvlrLkgf6o68xrD
wnm1Peh1B7dtSEeXFj/DdG6ty9wZAKl06NLukLzRJQw3vb4LTzhbPGLht0Q4KGRm1hvxghoARazC
VqimU5R5TT0nM2NLbVFrd2giZ7+WPOBsoVYC/3itk+2AnwQ0qUyMIWKbx8AKzu+vO7z+CfGfyu3G
D3aHCtjWcYJBOqps+UK4vRiAFNNH+1mBbAXE7Wn2oLL6alepNQtkF51q0ZV+GxI+Wzk+HHE0pehI
CTwtLmItrEvO5t2WWimRl+1vYA7hggollR5sTeTqMohYt712iuBGl90fpCHujyYarR+w3Im1rzvL
V+EYZeLydUZGYc4Jmei3EH6wPHXmKsvNcSjq7XT2ec32/W3QQePmIbHzZO0Rm7n4Qp7EzAu0iUyl
3GfuV46do3+TbVUkT8299oLD5O63rUD/EeRmy7WU12xKhbsqWF+v8XSZiXZt+rOH8u0yRL94JgZr
UNwaqxAbx9rwLRynJzdCH7AGZPpGPPOSodOH3qyq/HiUGmwbxAUro8cKUsyYx4yP0vLNlmATdcI9
GT8tnlimQSec9lgAMz+9d/7n2wL+7ZOHXWNbnUNsEUrfWawYla2i7sUwYUKs4YFieBvXJqkvcLZ4
D5iqPxVTNL0Fh4+xMzo0kRr5ONWxg3mzGR5QQkY0eDxMDDG5rrT1JWrXwclXAqp9DbNcqcxN7qCY
DVDqZ2ed7VLzmL5LgqzI5Wl44Loi2vhtNOaajDTLdBmiqiFwwPvA1a993KZHySy6ZacnoEyGmkEB
nVI6PJC1OqavCzXOdNpg/j4cF5uC4K6mnc+iD+gukabXUSB/WepGtYXOFocaEGS4H9k7kODFbj1w
2wPXw34AQMHcO3ZuhSwX5lF77rMhndgmYuQ3GYwDT/QFK8vdDWvNtaVmKHI2rUHQP96eAm9KX2bp
nHhhxe39Zlntrv0yAQv34XMOmqXesLdZ1GD5DPA4SmOWlBzR7w1eoL0DvtileyCIDGB00nAj11ut
Lj980zwqobQ25YhTjt2lQL/WYHyu9zV9TkwCIWiElTMelOP9oGI53uN7oz9KVg/XOiTFyUmGQRQ5
qmkQccvOQCPR6VjHJump/MHZfmTSyVC4Ix2/yoORztMXb/cWc+cCE3ziJwHeXCXY2+iDbX2Tur/4
E299HVeO9Z0ocK/ZkOC6k/sVCRxFhEw5Nd002PWItNkxs14gNm/CVpqZkial1POQGwqmvdrXKZ2i
pCEAr+YtFuKCd6uT764VMAjpI0YCORHvlqTXDZ3Lm6USyP5kbBg7rFdDrKRuC2joKYr5O2UsysLe
DQ5gBLN26NbrqVYOnw/8FGm9i5nv9vnX+gy7+4ttQEExdsEd7aPrAsarwdME81M6KbDTUISWH+vb
AAU2jF15Gqg7Wfz5+MuuIAsK+jhHCY07v+YnH71V4O2n/KbzbsXxL1rB42R2riip9q0ba6k43xdm
pBSNm2JN6lbUffoO0/m8SmcBbeSZGO5llEVSGjS4K44tuYRR09q7yJwe43kiU63x7mzu1HhwkwLp
mYcVBSbP5sctt48mjPPGMh8zt2HhGtXybNEtEAFraTiSPm7cVqYmQ8xRr9IKBRPsxV0/5K1j7U/P
lHcytaNycBbpxbbVErGlzpIvuKTIg5mxxu8aJpkFoBnyOduUt1JsIqSbj08Zh3KBXEUpjNF8TPZo
KpOJa88oARdufod0fuCIyUTkBe8YVBApFeAoihEY1U3dqU58RfO8FotgY/3YkXe65OftW5fE8FhL
QlsZOBUS1yq+6r0fj/Ua6GhJel+oemoPsdyxdLBI4X75qn4rNFAle7/fm7pvXpUltUD6fzkUC1Gn
W5UNi8low+YhssThY2f/6iUrg0ZenOxgJopB+PmaKX9RbJs5hY2hC4CEPiu9PqdreQ8TZBj5k/p4
mPwozhgCAM2DaM4V+ynYvMEJ0zhbE8E6e+ORHzQ2iNogia3H5rMR7AP6ahfl7q/FON6f2JvVduMX
i3Ik0i79E7MCxXMwhgapTrQ1pEHWLAIuZtY17WaobD9lW6/SsU1PS71uVaK+6LdDWfIC4hpY3C2V
6fUxaAXR0p7vp79wAEB2e9XJlc2LXoBKkH70K0oqroxLE3wLmHKrlybPDJYcarSyKp70XVDFCzLi
jSJ0wAXzinj/M8ucBemYUb2Yr3MZsNxArzpX/k0uTPsms9/1bZTfn6Gsn1AoLB4NFD4VkEcVEWBT
hhkBkJ6BVgftMcWNJWL17DeehfTuy3Ya7xWipBUrCy9kSukQqayPEgnHMmOFPfpkMOUD1V+dxleC
RK2aSCXD6P37ca3J2jP0n9LpATNEphrFeWUKgAqP/vZ9j7g9dKxY4jSO8R2BO4Hxfowiir+auKEt
I+45TLChNLZ5chDVPVLlflMN085h57UHm9R5rU42Ta2sKT19ABv46jQrcUdKuOnkUfKzLfKQ9Krh
FOkdKvTj48nFvJH2vyLu+aruMWPbLgD9Yx6AcH32bPGZhsmutMtSohjlvoN2u4NAYTwa9d7qGEl6
ATUXQ148X/pS7Gnba9R8i8vM7gSgz/tPSJsGVRm2h4G5UiM1/RStb54VM+E6T21KGa3oyBahcR7q
k+vcNshkKXEFU11KcWUeUkeA53GXdTEJYhh3aQ5rLaJ2spdBTJTvv+v3Do5xQKfjwTytW1nxE5lm
HOpFz3i7D6cRdW31XabQxSTVs1uOu0vaRR9rpTE4aRu4Z59GYIMjaWspokRgljFqLK+2eKzW1Hci
xcl0Gte5aXue+H61jdSDthYSQUKVHR2d+r0z4G0DhsfwjzkWyMbbE1eUjFApO13D1vWbPPql4oxQ
quUqNk5okey2kXIrEwiToAdzyIr/b2YmLNARIfJ9U/2YT0tG7YZzAdY6puJcwd9GUBjHkzjDx9cC
Fg56dcC2ru57NuRBsovhHMKV1rjpfk192qOo6YZYMm3q9zUFgO+/tka+y6gSMySTeOBnnUaEBriB
2WVB+tWuSZo9H2veMpqCMIeNS7AW+jrOCrtN3xCO9Sythu2oGhFhRLHaGVeoQo+GvQofwaz3aiz2
DYSx4ae4C36yDTUzHXrBJKuDYh3xygbrHFNu0nMSU9TxE72sRwbIlGdSIUZVP04vMEGjmyeMG0Zj
YYIQKOJSIxaqvOKbbkbRYyTGV9huHKG0j6j8YNi/wt6mn9NMODmd/K6Bky5CuhEUUmodXy6E4u4u
Oz37uraREaLCTIxjHZpqJ27NUlVDyODLK7+TanDLNohkGFj9E/KIoGsl5mashh6KVRDVa1ZfTbo4
FTgT79sw175N5mFWkzCYIUnLwHccUalvh6K573cIsvaBJIItPyTkI/mLsndZApdfEJrtrf9y8xOF
2nEAPjT4wI4GuuTWC3zUrDpAz4w+Z2lhfCy2v2JRlytu7on4+ju1q8DWYXS4KPNPOESeiyVKaVdl
yoIhT6JmPMx0RHywc0CaQn5w0ST6CpnEiYv5e0VCrY3fdYXrUyxf0RkQF449sQPYLhh+FYJTixox
tmKIkuh5q02plG3t/nlVJH9X2uPdlz6RU3ZPwMtiRqtTGhTodOcOQnWAZtcJSBTZmiTCLAs5ujF3
6hdFHvQ1V0TfXr0qUwGYJBdia39uyvynLwhneU4ERI/Ptxdi1V605gp3wxdL3tvvInRXxxDuK4UM
rtg59HBJyaCsNOWmjlOEveqP64nbAU3a5EBqYswQResSrDQnJ/+MV/0vXMUkNG6wTj7xkvbMf1DB
M9BewxX3GPNxyDiS6BpbfnNs0b1wdlqvF6np9J2S1p34sPnh/nn4xXUWK892yt3QWOlY06cq4xYS
Zy0OhXlXS6GEhkmgvkkjBFLlsci6c6zLrIodJPaLGH7m0USYlFW25JsVJUouONQUh/vhm8a7hAxi
agBrZJJRuaZDtwIvACwp5+Fivemcdaz/0Qgv09PgvRIy39UXurQC96vSGSCE+QGM6sWQAeQm1dEv
qPdjnsOt4rFaRi1DK5uR7+PUehRoW2o1DJ9x7y7iXDNp24+NlYDQ788GqZ2TNHbZO+hVGAQyRhxU
GOHf6GUuJr/xZqGyA5s05YdwRILqYSxwX9Ypr4iPeX4Nuwz4XETb2P1Ze76PtC+yFnxQHbo7wLdL
SqWXT4l2RZGSMTQFqzRkQU/lJUc8WUUhgnUkPzM5N3nm/PCtxh6wDQ/gnPEqePf4z2kIIaAzVjZi
uEATm1l3df91wtRI+0W2w/whO0ufJqPvtuOEUybFcD8nRtK7DG2NIUDmLU6oaTQ+yJw7xUy9Wy1p
/FKEPJKwO3wr4FXEg/0VXQ+ZxdVlrWK9+Dw3ohzBkaX7vq3kjAvpmfaY5sztu3rZ7xYGEN7tXBEU
DYdiMfwAlOKU1UBBcgG8FI9R0K05O/q+J0dzzIyaJdBKrPg60ww25zBfzdbiPECyruCGJC0bP3g8
52PQq0TlepAJ9B6TLxnG6xFGNE+g/sfWiuQiVI8MTE9jnLVNOGlDBCsC4a3xnqEMca6PqaL4R32R
hyABjoKNkSQy9gZ+m5am+yVf+wkHHZt6JDjKqIfXDJGjN0bo9MVBtrAmku0Of3MEma7Hd4wHRpoJ
3zlcw0o+01kpuFMwRPSOqsNFwzkjGUP8kTIAj6dRV4WP4lrscoT9KSKw4MoVbQ/R1EofW2ZxdcUl
oaWPHjLojEeHWLdJMtZ1yamww8EjQWftcN5VsqTvOAKyDHwpt5bJhdNupcdjhyAkcDC6P04qlRyA
0nzfXJDJcuOkFnOGELq7LWZUbsvsPmrvpicSm4a9SEQzeHg4rserwQ9nHaicwA+65H13m/OyGM1/
ah/HaQhDWp4A0qQnlxbGxU3zH68qm8QYhciw6JooesEdvhAE8ce+3qG9YPX8v21yek/1DETilpLv
DKMRrSwaL2t2mT3TG5CdQUTe1KpHon9QmdKD+aRU9zZloKA6FSf5kwIV01ig5LE8XqE0Kqb6GfcZ
IYTZ5+svQB/KQJCmcSZT1Sfi3vNgnZfI62hFWOiuGe9alRVQfwTVxzh6PQj1YnJjREkyLpHhSrbn
LFI/7PgowLQMl/+8ly/oPjkjcU/p7t8a/Zvk8TLUWiv0sD/JVT3NYcuNohRo5W6w2b7EjjRbqKcB
mQPHiwi76tRp/K4DWBJlQVTFr1u+nfA8ZAM0+DmBg6f3cr+qrUlWUrJOHrSw7To4U0lriKKLFm1M
m4ojxE351CvOrRejzvxQmlLUMJJUwf7yfPMpBhYR/Td6+fS84xm3BdASIV9AAa/QZ/x44USGnY57
MxdTZlG02CjVKpjX1qZSIIiRGJRkF/9BwFEHlriqnwfkwkLWLLPx59wPmXgHHCgAoSi2jZ9s/zRe
rhDV28vl+R1JjAZsp1DnVvQWKzlJHkQTvzUsK/687LiOcK3rLK7iYxs0SzPQDV4zwuVPjIbOzIJI
WtKXLVhK4aiCYeepJoU/dCQtMjNqnO8kgOLJzpSvK6W+Iv/JGEFIdenNxiOCDyvmVkC5DJtcUm+X
T565RmVJPkgoRNQk7/93+X3lxB0xuEACkLoCfTPbtypHnjKxbfveEihPbfuJZsP1Jd91fOGj6qF5
avtRXP1Gbw5EjLpGxVCIL05uFJOhiyeJOaV5Wxu4tGRbaa6vLNaMy5Ex7Pw+oOXQddT+gxGls4XZ
MxFi8zO7CyYtYH5uKAq+bckSTg0WFqIWxliDqjrflj5rIpHa0VeV/UDZpU5YNI6rSZIL5/m2ZaCL
ns2sepBHxW7/gMjoV42hAp3iGdMx94MP8AaQMUjeeTdJGh/jFDgHpy3r2XPt4zfdsTpqzjG913Vj
HRJQDzW3uCrRQsEnRbYyFkqFUue1GzDeC7vcGx8vhzHciGaltlAckXUfHUoI6+CaPTsGeaqRbW6J
ywwNMkq3/ozBwQX9tYlwdQ5ZjYJe9BvIAB19Uys4c0b4xXaa5AZdRvxlfwoD3bCyK4BDWSwsfZGf
x/po37qn1emyUYgRRZOpFSG+Yt8eMdC8jQJpn++6IcpdZxlvVoFksL6o8NVwZKFXuV9Hy2EFNUvS
rE/czxtnCz29JCYRxgq9YgWePliTJK2FFnJWxUBVDdrxo/+5tU91hSDoIgQPL4xr07XnAuDnLaJH
nMLNV5WEPYmiPa8b5VJzmBLMvUNPspFV8gMja2dKlYhcVTzIBlDHtDHTZ9pLUjxcRScKk807JBV5
D0YvGIh2plUIN8v/4QOI0hcA2t8/iS6WcZlB+wKilxOrQRxPs5IaFx0Sl7za6J5r8vLp1tXkHxI9
y2Cz3rQNEWHHfBUmCpsZ2vrm8InxZE/kXPIvwNJwnEF+AfY/frMaEkJa3SEhESss9naj+0hrVYwD
EtknANAu0tkq+3rmONDSOBz+kIPIwjDiDLbcQ8D+PMDbHIssHpOJCHFOpKJYGNJrLLxeA9R2pKrq
fhWHmmx16K6U9K6hKo2kHyj11/IGzvEgjnmUVbC7jbLlo6uYajMwhNspOcqpvGFwQ/APq3Br+WTA
xieo0vPsNsgXmb/AZFybhlK/D2GheLNkJOAe0PzqneuYzgn0xp02nvWy7ApIjemjju5OQ8r81t5o
qsqA2zS2sKpoRe/tr+RefFUSGrHEWAo2h9DUcvQ0bQXu/WjXPBNZlMb4ff+yLvq+ZgOb2bqr93Lc
e1WlfY16jzzf+63fUXrwaqIwW1RlShO4n66ZdxAGqK4QaUFzOqjj3lndORD+48XFdV+/RuMPEuZn
oKzOxelSo+xCu9nL+IzWQtvykJ60ZBavaHDRE24nhaOmQO6eFxwkyj7YM+KePEGs1rfA+pZzw9MB
ZEUQG2lieQ9DSS0YRVUdRauGA7F5A84c79D07iZrKEkEVO7E96FreQ8lneOlpi9ME4llPqL72lQ3
1k5mqkJnYTkMOF1nlOWl/z1LPdYUp7PEWwHl+0rCEadbyPXrSmHb8SOHkRE+MmjwjMGL/ROuqs7m
jMLt6Rdf5CNXW42+J8SmqJjOUqG6HWBiWWPKe3iBxQNwC57NGHuqvbxvW+tBAAMMQyMWDv/V0peu
yZ8V6TQH/fHFegHF++jiLgoAj9F1/GtNnTWMB4pfxR0mS5IrHE68BTdnmSUlEQXYVsSxCWpjNOnt
ztkT+UqB2VtJg1g8TZ4A6QlvyxUqU+1og9yeLrdpmJdi5nvxh32+ipfaLMXxZ6klbQdA0Ewd6Uii
Fjs8s5MP35nBJIOLCXQKs+V+jS2ZVcuXoHR+na6q57HCW48Y4GQ8lJvmlw3qLe8bGLkMzrHOoBAV
pxEs9H6Z/ERC8/jRqZAgaWl/9tfrNo74ofbwslKxPlzf322h8wV7mKwIgs8BKlNj10ancFvz5j7n
pew95rOQtDsgyu5CKfI4lKeaL7T4yaVLCStbxn9yKLTDbw1ynQOBm+MtPicWF+rLhsA9sYmKtB2n
f/3t1Hzv2NZu4sVqxxgMUpI5PwZciHX1ZJ2ie4YO+CQ6t7+n1qNAbtYVrKtsmQzIiSOUKAd0o5RH
IP8+YbcfbJxsKbMs46Dq9u215UXd6WXYbRUY5+K+HpD5AEv5Q01PYadWmB7RqxpE6SAZv5ny9nsA
UXPr0P3HiTajvZWEg5yXu9t/R4jxm1mIfsyGXdoWcd32V1f/dM1X2u0AUUuNzOZgN3tLdG/v/SUT
D2JDf+Unzgfmlr/1C3mPgA7MTEvp6buc6eGRxXKXRuMWuH4QF0BZwXWHdVv1dX3uJ2Zy2jMxwj9h
3WplA8A9QabdPadNHKEMfGrHANzrl7mvczz2bCFXxi/DP8BcNoTJZaWFKeWbQAtPJtsPM6NhIZDk
gefRvjMr+l4o+VT6vLtzQbj3dho/2h9fO+lLmtHkBI5CKuDemnAZXdd0/WTiWl8G/0UReKawgS50
y+8jxA383VjbvAPjoUceKBAYqcRpNZiLMCaBx4jT7QWMikA7IqmdIiqHuSaewVYPydEAFf+scJ0M
x77y8Li8yinVQCSdYbpfNRbkcC6gckrQvHLIgSVFZEAzq5vkRDen7QLn9LS9m6NiLWJ2bAcR9Ee7
ryitHPopUx1x0qQ9BCFO2eSlmZHPbeqOD6XPH8g/irt6BBr6IZJzN2dhX36RcZtb7l4w43xquHvF
jL8GmhOPR+cC3PbOPx+MGpa8qKUhl012tOxdjo1gGcY25hq6yPMHfZN2DzElZzl587huqZgn9pQi
EN14/xPfHCIsjZsWTTTSqgoOfG3XUOSUngTvzIJ0cWNdXXXWQg6AsidlUfUKFl759xnH4SXwdXKF
xEGd7Ys19qUyxOfX+uL/vkdoHnVMu2IkhleSBCJBXXqv9Qz9VwBA0JT7x3TfAF5k/aOo1CxujNAQ
g7gFo/iYVniM+Ne/CwjqVxErXGkEMRV/UAcwCgOxW2ERTZGeQoIiKh5QduwRU6ujpjicpZ6gpx8p
BM58eqn6Cu+NRlt5mg7bwlRJJCUkVl/Q9ns/v0mpiC+Lm7BxCgq0TixGVsUkkD7CMnShf01LgzrR
SkWs8dUA85PXyvJmUVhAzbdFOiB9jqK1GpocY1LfOQ7+nTo6VBOCWuFrEc3MKku2iDkZfvO2Iwf4
1JaENndY/Q3ANAhYK5SqjGv3PWcEcdu/hM2p1HZTc1bU9psVMUK/yS+a7FCTHUsEU3ltzrJWMHR/
2AFC6EpOQJWIca01nbuwe4JAPK2ryDBGnP4f8lnXBSthRKI+FjFAuMphor7EjaD/R8mNSXOKy9YH
SNZpOzjm75sKlLZkbsxYVHpFxXnuqVxfTj1KClMrhS3sFyVfSCly9NoSLE0xthJxf2fke20ackUa
2lTAvJVUseV7dCyAWYuSTyOPTLDH8IqzgWLfsFuAaNOgsEutwQ7ZPblGEiGmuYDmzj+ITdA1ZsNB
o47KOnhLj5EUYYas8QzRHg3kkqMuXEHlI0w3wzJxf7slUkjCIK1PqWSEqHoVM4u8dU/mNGPqyCtI
KfkODHtdn8ejn+g+pfIQtOBjrqdJ9kg94xQOAr3MkNFkAVuctLqfhuk5vJ8mS0QZp1QSB3vfu7JE
i27mOvoLakn4BMp25u2skIsmwRCW5QkS+JWlcpgGxdJQfSRIOR5yFrEcTJmm5u2SYDyVLDwxnwUp
l60KCBjeFXfqjFlTMRAwuxAovKFDbvo4bblFMPzZ63rUJ2OTjYCheCeaukMUT44Yk7UV48N+XLSQ
+YQE1C3wWCm6cMxhtrQHEEisK0NYettVklY+pklzpT2v1pmYK6ny15g152EYVWgOG88U82TUWL/y
54POa3eCs5vxiPgfXrkepiTfjfwhVe0Z8fVfierikIQop6OxTogvT1KdjlaiB58hV1ijhZs/XBMb
dQP6ZpKmWyT9MEJntd0NNWJrwWZHJxCc99SAWLHws7jWA5R64/WjNrjZ8o76zE9DeLzFhf9p4nlC
51xjmmZJdYH7em8qkjIJjCa4qy3A6+b0b86rTqoD5QOnSOjFSWmmWludR6SwRyE9nSIpt32ng5Cb
QFjD3BzPGIe4jbjG/ZkdTfpVqCooxv6rsqqM3PIcwulUhZhlc5iYhH5QH4pb5tkpLG2z/eexpZDQ
l9J9dK5YPWha1V8fKOSUikKqNE8xcZrcwPTtJI+UueiihDeuDyeDzv93rVdM9T/HVrRKlQD0/Rac
yRPfC6zCV8f+syadCjmt7JwotT1r6qqMmzxqTcSFwgjszJy8/z8w68srjklF2GlAw4bUHEiN3WBs
bghjDX8/IKYFErUZJyGI7/FcbdHsa2td5LjhF2pVhMkUkynPOkxAeVD24PYJZp4V5XmEcZEqm1Db
90ip9+KM7qUU/oC7lWuJvVYECUXB6HxtcTJjWKTbROh8KZLhfP9tnRUdPx/hen0jsvQqLu3lOFcg
Nx8rbRJEOg/5yXFZ661xUYf1fpFq76xy0DOLQHui0z3dA7oB5b69YStatYB09U099mwm0xo+o15O
xXlU8/hJLH0WCDJtHfC60tTqS64H0zdn44LysAi+9rw8JowF+nDstkZTvkd4Zr+kLPNIvxkNg8V1
f6zlr20hO5mbhsz5tydJf0AW2uIX/PV/WhsCNZSb9eG6CkiyZEdfaxlE8K8NFv3XTgxfg8IZC7y2
XVVQphQbe4LCxKDFVSF0sHnc4Tisusr/yomB6rL2Tn+AwXsXXE4UK0wlszC9W4KlaYxNvU/md8jP
EOxG4dl7/tPb3qg0LarOL3UVZszv7Ew3Dvdm//CsA1IfSowPENWru8XdNZNYC4E22IfqROIfPxEu
fj86YiTIS0wPp3tDQkhz3Xr5ns6hk5/IH+osIRY0mI5LAeR4u7NWBTaJZ2Tm7PQH7vL9bNauFtBk
j2FUhmicPjmhHyZJSTBCY2ZOnQnidDvxm4JjGlfgks2o9h9ZZ+cTva4TDs6exeyVWaDct4KjgQZc
FVp3+fZGfBx86W0IWrKz7Op9leLSLiiZRA60fJc/nDp/3tpQqkTCowiNxhWh5xfbjJE5hHnRmgCw
rbs7DYvZrHIGlagpcZ1JS/0SwYnr+1QY77ZaYt8o3RbH9L3eV1Dy9jJYTEAazq8WqHhdgb6KdEsb
M4HfKJiULGu2K2XBYrRedxYid/6/hU+FXV/zFdmw9WK2KP+hxK6mRgkwJWUkeQm8oTJHXAJ8DzjB
nihLH63/RUhsWYRG2pVbe6q8qsy+zDhVl9RQ+s62dP7QzLg6HKis6nwQl+hbh0b7I+eoM8NdVVpO
BJ6bcU0RbRO3zLu9bCBEOij/sET4b8R3DFjyDLUP4t4Yp8YZcbgDp3DmDYhQgimrcdXrigAmwFoW
UEAuwaiZl8UaWlFAmT4Up48f0FA2JoiM0av1LlBKftfEcuej/JFRoIcqOd9uh50R6aF3zmestddq
rTWPFPxgLkNHzV2ppFKiW0517dvS87mN5nMQTZQkvYxLx2MlJCGNRq7d2oVf+gvAGr/6lq7ANne6
/makWvFYxrS1BtKGXfHRow+WrKm8P60u3nMcl/JhGiz1kwhL0nOHXZFwDHVE28vAe0JvSh6NC1zL
uLEq9fbaDubnK/UbtB90uzPO7lC4NbtsLyqUet8UsmGCTzNMad619afnd0e7Xpb9lGN71/0wJNB2
0hEVDG6sYKzQgihxD7xQGzlAiWA9p3MfOy9n127ex+Eh0UMqhwHl1DnFhGts2DWCB6ZhU4yPmLra
LGRjGMFlDVnPfFTVOYvKvntPCkrpD02R8l5gdCDUpmtx3c9BaNmcGjquQuL6TEogF1QOjFnFU2wx
VuTM+7w3jWhlnqkgxGgSEDda9RGzLrU5rOWROIc4u0UJabblSgbLuc7u5IDoVxqd06iCYvAhkSPL
WN5mHHprVF3aBfciDcnCPPbSCBppEQ5lhz8Metr65/S87fMdP2R9/C+Fc3+Ln+KO3IdYW9GHY9sg
LjBnM8LqbqDiKAU7mbqFP/srf2/0Bo6EMTcijItfvscjd1nOyFeKSDpHoXtXW7GMzMCAwKfi+KXF
eo3zvotMzffoPYeOjZV2ar4LEGdqfSfAm+W1Fb+ialTkU3v/2mKvQVbrh8ePdPhb2ll3uCePnplu
VoJmvuAa4P/FTujZWP3HOJeOJXjb3PUnlMkO7yv3biqzU4zV4Y61S08lyZeVAfGKuWbtIcD/JIQc
OOaAI0xkkiOVePvzJ9zKRwVb63YeuKrMj21HU0g6rDVd4c8qzMtps/d5cTFEv6uZv+cRwUZod6Ea
n7WbeKtGOffbDDJwN1L3gsWwLcLvXHKZ7gTinJS3Y3sD1FVoTwIIXd4MhvzDabzhNvqaarOAKwca
oNleaNXLdCM2Av04lvhNgHmJJen1y2HqoYnaCm4Idxw0RsD8x9molp7Qd+PFxWh4gi3WUWAjHWEq
aNeelKFI16yp4i7y/plJSYmvwWldp29QXTHQMlCe5GDjVxzNaDoN9yj1zz/1OEOZ1tKOf9eybXjE
qeYi413Vd6wktHQ3i6l1aEkWbbMamwMBZy8WxXOyxj5Jt1UdBp1LrLfzRhUQaqFd5j+SLlrs7odl
4HHG2reXil3tZ7IHFoi3djZQxo6KpdFZiQs3ZesVxLJ+IM3F/ePmb0w7z56YujlfT5S77+YIGa7h
vTrzHbCLM0pIkSe7/f9YFOZM4LkQXEFfsRW4KXSNkoxGPgDOZKtndKVgReeN0ZsYgxBL5DVkEkw3
qRswolQWN/pUKH0kpLPfxu9uoLBqpO59vgtSSE52/yhGoG720KDpdm2dVxYZ4oHeV6xbWI027CPj
EXprZ/xOawR1Kk6D3sOU0OGqtEsw0HSn8wbpcIWJIf7PdvXsZFeIFOLAM7N/N4LFEJE2fjkxX2AZ
1rNUxP2tM8k8V/74PO8QyxNjKLnNAswdvlFR/yxF/fFLDM023mYc0RMvNdL7H7TExsMs//wMWfdh
/r8rR1nDfyg52u6qXZ4Fq7qNMvVeR7ek+R1FK2YkhN+HS5S2+TpVp4LM4AsY55wWFexUybY+9WB7
4ibSlvRYIHzB49CyxH8OtlYXYBNSidMTyD5/62MFz7a5iIJ63h1s488jIH1zZUREpjK0beM3tgFa
mKkp/2aeJf6x7MDM+5nt2LGVgWlc4sywT+rmE2Sq9A7ZZ4THGwFRXjYmJUgbSWQ9qIlBRbd9OhFQ
FyncNkMotXIgYocvIJqJnjiJI8GVPqIF323e43epT6hWLX4dyC9XsChaTXJ8X9et0I8dLlGTGMDg
h0DtqdkDPKCrhj6RGzAKGZ5cE6vsYRJX2udq1bjnCVP0UESM2jZjHtawo1kQeCUVO/0fnRax7a8O
SfVgzixa9cGCzVxZhWU/rvs0fbNjTGRTt61DKU9f0lJhyKGNvI9SB3JJn+zlvPECMnrFEhcmBGmJ
TngWWsgwGsUYS5RwmLbg6HbBGqLxTj5NHizHLCnlZd3hoDYn3XwQPxv6vhxAOrJoFaXWLCyW8ohN
ay+v6JaGQCAyTy+As70teve3aq5fEgLsbhmlg2r0NiZ8eGfeK3IEeu3RWyYCGinRE1o6btWRPNH2
0KO3mhQHAW1zd6wad7DdLL4IBtp2DDxOjC+8FafCbacDj5WWWa9vzotEX9bHBRhQaFNxsdteAkNf
Bx82xz8qERd0UWpnrft4/mAqSQ3vUl27xXse9U9KeqJmgW1DsWxBq1TuOdFg4ZZb6ke5MUm+IfJP
/jrjTwq66tBShRx7WfA9tdGL0JRdkeDYIE4W30OOHiy+kvHlw1hVv9AwQCITi+W/ZKGJ3Mj6Jb40
vEp11mQlM5y6R71O226oaZRvbyKK4AnkSOS2/oZeJKpkLhoT0pMFIy2StMNMrADgvz/Nz6QPFaPq
7/V6y9SYWgBfuuhIQ9OoU3QtLvDPnt2No2OoYrTcOPutYbkhMEtI5p+aIqJbHZmDnR09DNWErTq2
7b1cHM2e2ElM11oxALvtGZdL5eHe1D6W4ch6b0kOkZZnbM6K4xrsxRhLNr9HEN54yPi9TRSz+mbr
g6/+sYOHgsCQB7ZjUVM4KCyw56eoF9ekxjf4DlXMzyZdUaHgZT7cKeqGtzfvQ+eFjoyFPxjuB0H5
jWj55d67GH5E84g0UCDDqWdD68z3RFelxPAV6VpQopejBF1yJ2IXJ5PJ0LMcCDPFBqILLDU26in/
eLLoj9QEDDg+7DLoUWTTbpnZ20JZZaO1bY+2cIzYU0koZJSFQ2H4iaOUvanpyMovtt36j7U9s1os
+enWhuqkBZPxKwbanNkZQ8Xb2FGXbjQqVsItpZKUFkYS5Bf8f6yCcffD3sM9lugXRNH7v3Af0dNL
o2iVChxB2WizCEFDcNrw68AmorGzc1wLmqr1uiGzrBrAXWSe8YA+pkmRXuIqPU6PlS0+3YMP9eJZ
KL4fOf6q6ouovjAzTeJ6+s/AaVisMhFOKAW67R9DRUQBgCRv2pDbRvqgUQ2dHXoS3WBnti8k5qFd
wsSAbSiIQeg8Yio3kOMBIo6niw6XxZNzF4BcpbO13E3wQHu+Gl9FSj/XixFHv2vNzj5rk2jwrV6S
Eyom3HH66grI5rXKkoyEJAuzF2RMI0U5SF3yplfeks2+1dOmYFOERswY34SmYlcWe1LISHo9eOqg
RPEzXVMtqh/Usws+DvXA10L1bUvjEL+B+0DQHX3g5moQJK7wetoCgmpS/YpVhcmkJccCLaBe2srh
sss5k/kPlqLJlt/vawGxeho1o5gUK90rsIJsMAuzqFNc7RXSYfiAO+JDQUdJvnXRZBkrSMLsoXsI
ZbHJ2bh9PqE8AO52RTGm2rLgEvEXx3Mhw7nHHR4YwA1cRB3gEjiWoOtxnTBPiI4FoeywrnJnD1xL
urGsTrpGtHvAxNFgyh09xXzzT4o1VS6e94t2o3efy5Dw65adSPddVSS/N80V928tlbz1eZ/+7HMU
hg8KdulUNd2wN0hSBrFnl9RwVs7SFPTJ4O5MbNfMhGjqNaImdghhlOR4iAeDBo72c5sVsOmV3Wcl
vGGddPa1p88Kbydnpmt8BBoSMfMCBBeB42iZHr9VEi0xXrzcZuuxSsFs2OZjRM1HkBnS+hihqVQ8
UlhcogGkSqMLHZcBf6d3BWYfpNB7xz623pt+y0GQm7syFj8alNKZY10la6Rp921Mouiw9UJDppfY
5TVGbGF8kr0bsAh3ewmfnZGYdeZWFbIFfC5nknzaLOWPwS/bNhhnVzqlYSgaNLF7qNyY2n7Y46+x
S2mzWMFHhq1BFoPN99ZMhXmdMBipnfQaZfVZ5XZjeo6lhQT2dRzi0he29+uRcZajeUYQcbLotNqw
qNt4DH1SQ/uem8zf5tluOS3gUHWC0IKbQfQPQocEne2E0oDbizc4LgMrVNG+GcKQPP9mMBVcyz3r
KDhR+tE3akkI/U1Qkl/rOkN/RoH2JTFsGe0Rreey1TP5TYSZlKCruO6TZc+Mb9BifUmT+0BHvqQD
Y98RCfEK8E2e/7iF5+Tk8ddvCNxAoZjXvNkOAIbUROiZ6PgwnY4Lw61OyoqbjzdDqErjx43TJjX5
dzFLd2duHaFW1/NbDg3YlVHprF9rqRmzbkOUALrldxCZdB9B1BLWVuc+ZTv1z0MLfgiqSwWieGOB
xYz5XLoffOlkJYiHfhjQz/PwhvXOI2fYA6zUaR1UFwcikBxgOE6uPb8hD5fEgZx2FqtA+lut774v
HjrrC4yUQjxvseNMOxdeGU/QQskK9raApeY0JgCjLF8ygLgMVa3mGs8b6OFglCxWIu+w7nuKihqM
4+zU15xqhNG8XugRvPCJ2VFG3LciBOs6tjB7KNWZltaY5ydy05jNDMMdarPnCzZn64tzage5X7ZK
/lf6Evq7tKate6r5/16pbVS1ndlAkt5P5PCtN59ooT7Ft6mp1/cw12kOACDrKkIZRMwFiGvM1gg8
kV+jOJm0VItCROmHZnPMpr3v6bOt9pxrnXOmTK4IYRLlX0vMrmcz4N/dZCJpDymKaIrcfL+ImNof
DvcVaZ5o+39ySEZuQd5I9eGPDJnUul1AGCOJi83OQvba1R4KNtTWm3tyWPDgLclERlv6d+iz4gpq
OFPt6YOSoFKJvoGPpQMcFCAmZZCN1A/5PmfWuBK+xA5VG+sMFz2YFX/EaPFl9esnwywSqLKFj3U2
p/iQs2DHx+DY57apyBYzanQ9l4VHKA4YHBqicdy6VViq3nqbRbhQCEeUVODc9DgdID/stXy9gJF7
aRYzh3GJNzBdVY558sNH/KPArYV5tHmMsK32WMhBIq5RW+tEQdg5Jd/5L0LocmAzZ/vJgNzJGyl1
zGTN2NA5UGFUVYVMepKAKcToXhmhsU4KpREbyWcyysUO8puvcXcOv2Lr7TvjEOtzQxbSuopqfV1v
2DhcHL0hg4OJV2ybn7W5blW+lCCMEOWgoumjzyWTzkYKNkfLto8k4AmN67FuHvK4P1qY7kgz2/wL
m5LICNgGQop0Vhf5rAhUEtREc9iUxbMA6qyg63jGDdbYNPRqaja6us6chco0/xP8Aj58OXUCYQ7L
dBZk7SSPugvLXos4Ltp6KNw2Ec7HxE54HJLbwwKnNFQXuuCj4VgJCSjfWmPgIyYn8qr5OZYpw8Yi
YYE9qQ9LMpbzybiDadV9lGKYNgJ0VFatcpyue1KfBhTegiQGMVl6lvtKgkzuhBm2W7qGuqMGiToT
Ahoq2ZVVvulV4V3wr18ON3Z0rVI/6+VllNcxL4GOuusUDbDkNaIVaZAUMH81cKCBX4Yqr/QSz6RD
UPP0Uie7sCCxbFVL24B4aVjGQtHs1x2vqmggkeh/NERIboa96jf5DOo7WGYfbeYhrv8DIO4WhBlf
85871ARf6WOwtJSXnXbYNfUy3jHlygdfKkQykFKccu0tbsRb4tCL3X3OMG0dSR79wX1t/6f3iLh3
4IKPX/GAZ0shoD0/qIbPPN3xloj2L7HhZ6KHeLOozvdjQewo7YZmTerHMIxmlA1/9Kqm6hUxdprO
xNcAkndAnrIltIHlHOxvdAOWnDSRutQ+3jG/O5evIfvfLGfJpBn7iDuC0HpGecjNCvlX3tvwdewG
9w44ftEnaux/F3flvXmtRL8aQF68KlzfEmK7ocuES3LXsw8AD8WL9OOrVzlhjH77wmhzEeR0KyZz
J+fyKj8JPVZbmdq50Ny3kCEN3Yhzg5mac0WdIzZhFIo9KdLckAKn42+6s30Zf0IlVjT55G/qhwWk
JN8A1GXvvhhhtGlxz9WsGUm9/In7QjdmTzG/jl2J2GTUb0VNYbGAf2+kaVhH/2pdd9+jp2CGB/JE
3UN4/I2y53Q5V/XOHRhQVyBtLNj+oJNApZKjvyAnkvDPrYoOydRBsBpOGEPGr1TprQVdHT6GH1dV
UdFqdkigmeY5SvnWexBOekS+DGTqnwR3WdcuSfRPjiph6Bscit8kGKHaM93teEboILC9YJ/2lvSz
x35Q48yn2fsi2MhjIB1cwu6VjEZM+IsWzR+mPbbNEitf1RphCGn18d8SUGcPZQABY4o6ACtfmz2/
MiDAVve5qFQ+9R2QPbfU+rAWEMpGXoMIFHmndk2HQZwZ8ChwCBSDn0tPox5FtfunQwzVVyOyybXB
mG1y2EnW0FdJFyvr6fAsy5e8pDmojkGV6E7PQmiKQ3Fa/tmWzZjMS+NAUMx0tl0TpKGo/gBtyIrN
ZBsbDYK8KfB0bzn7ZNBEcMesz9Zt/5WPjJzhIgG7Zf2ukHWXoPbSrKA0rIV3UvZfq53pmw8d/0ZF
XF9ewjkO1EDb0Wgh7kEaZ1QmW4Cp224fF6ykg5H1Wzkio2I5cL5G+Ywldy9hI05p0TxaAx8EitYW
K4Ktm42n7hXlfyeQCWLyk/d2DA86qLjycFL3eEwNh401JYlQqMlcmcjBzQ8e+R2AOZKmxCCm1IOO
5fWfGslntX/FmI1ymUpcXNB6bW8Xb1RelJWqhXMf2adhS2IHrDfjHzkPSVVUxduOxOtQuflnr8n/
NRWQshJuOuxDCNvKM0l+kZTJEkaJeEkIHay7mlOzTfOlZUdq6hmWOgRdE9/f7GRgkvt+PFQx4H64
9kNGQsNyYpqF0JM0cit6JAndYMbIhtXEIWkfwY+60w/TgwbQtr/MWWE+QI9UIhS4WMEzSNdGne7x
1beWXsEYujpck9gK0u3VkXyWdTS8SK8vSfhdypsdTltYq9XilXAXVGMY64Xtbys+HDni2vNkboph
n6rPH/4J2P8nHyXhrJTDVjP2oiPWTh/m95HVggZxCxiCpjuKblGqIk01ipVBIvDYOJdFXGNlmGBG
dqV81avvLKFYBXzkvm3mNiVRJC91mkPkQsVaPV5R8xRO/EmqZ7AAe61SPq5pKbsnVXSba4uUiyg9
UyyrEqEmOIJZcg8QbKrPCXLSAIQhtgW1/Vy2AjTSFE/v+Rd44wRzkWfhKSpkJSI3Xi2cnUbX9Hfz
gSXaHcFJpqQFCEV7lgVn0CoSy6apHUeC1Lc9owWf9qGKQzwWZyJRxM7EIUKn3e/5v9UaBiivmz26
KNPKSOWyGnEOBKHdCvsA1fwZuBDjQdANIwY3jKfuuWsMHKhSndxUl9nAJ9hCjrvaF7fDXXR7O3DB
OR4jzBtIHEy41nFxGt1MNpYffrLsP0EWdAcn0JrKJNQxBcaF3U9jl5azvIEeRNpmpPOGGpWw3XEn
zKcxell9jLlrHDS/BpXOUSz25vJJQR9gs+aVe0Voo76d6PB3tzzbsUdx3UR5azD+EXm0UwzJF+uJ
gN9gMpg7lil6VvruHwonhTlUzeO2nv0C+jWnCLr7tmNbkrrLDeROxbppuB4ECASiyVm/H+W/CesL
aVDn5RwtF/kvWiFfBZ8prXHENNqLCCqKILbBYEa56aQ/8KhdzHtrO681laX5DDGJZDEkzvKUOjwH
F7WSTjW/J0RPWvPll3hvxBpvA5xZDOQICztlRZhHvlXi2NN7Jq7m45DA5k7tUv5u/IYzngD9NQjL
I5kucSYP72cgmVDc2mBpuZCE6uk+GZZwWScmgybywP3TgO/UQQJcoW4alNvr8MB1ztdIx2s79UXx
IzZvgOA5zai9Nq8vpfH0UkT0Wg7rhNocjb8aXPLui37PW1DrxhzBRmjkRYexCgaKyTRw0yIzuRl4
XWkGciIyycAOAo7EmyRBL5T42HhZ7EVUiD09MvZlz1qNCVCBbj68ZOnR1MIRbUQVHUsMV1uJhDYB
rytO66euA2g3ancrdVJCwoC2uaScWotWHFNmqKYmj6Ho/edZGln7cCEQ0xtlIaCztcQD0N3ZuXEf
xFwaED5KFHnbpB0Psnk5WvYD/pQlr5MbeK2b1y2Vw0FlGd7y5W/t+qQIyHbjP3ySE+RNoz+eqhAE
VkhTkKXxH9a/dfK0UQJNQV2cSlYKggEwNC6ykLc7bv5KosRkgAaqjBUuCqH4cVG2l5d3GZ5tNglG
i0NcKH4yXzURw5wgpVMwlfWWf0VTFJvttqhdqiPiXeGPVGacQ2eAR3NuX/vOVHla8vMOPtFfzKQJ
qsdHSDcAPPuwJfDpwedk9vjOajY5G3o7OytTD8E56EsqcMvaxa7jG0gQbVfOdJNAQoak16xkIb6d
dAh4oNpq/p6ND9cTn67KU3IaH91Y836KJHzoHJAa8+Ni8fUuWm+6j3zpTy0IdRBFY2RtvtzSOP+g
UAo7HUo96dxbBE6man0dYAYgltfga5f4S+NvtZ3IY8szBkCGFs1imecLssfX0+KrdoJdHB+0o7Xf
1koJaJ7GukU2IeSyc9ZjNPJZG4uDyptcOr6Gll8UREBgWM2kKtAJZvQTapPlYRsxFiaQZPrt1jc1
rnP2kWIlBIfWdlW2ncdqgDcBvErtOFz3qkzUnfYsvMX7yU8aMp9FPlX73iqsz/28FcDTgYmGR7va
F9AYcMUczq688oMCCrCEQegOea6rnd2P5b0t6rNYR+qiRVHoslfNt0jaUIaDsq4bCElYVI0ZKxx5
s+j5H/7dJx6tADjUaUVlIKoT71tWEDfuLiDHxkFhh7oI4qlVlDtpFboOwHCGIj1Dss5ShTDMAudb
SuW3DpEr0qYNuilyB9rk4GWUxLXzu7WLVGyyHIN0fq+ymzvBaPNcfpNfOtPESAeGyUs37uTRc6oN
UNCQsOHlcU9PiSgFyhKLpt2fCxiqm+p74NE4+EgZqP0485HKIW5GVlamGuGQOwXBQrbUHw5Eo1oZ
oMOUF7jXsAWSQOQd+bod7D29divf4lrmeWfn58OZL9rIEuNG1rvz9I5sNq9H6KeZbpx3sPZ9qsUT
ePMwljW9fTAO8ECqwCpTu/AIqh6EBPch5HF3XDO0c5Nb0Zp8J8tTVfDSK/hm0igJKPcqtKXxWkGz
K0Cu4Re1SKDIyfFRzWoLqVpBvrgw91bPYpQhD4TWu4/WngtPwDY3YKfFp/TSMevR8aS7WkspodZP
iu3fiMXyfARwOCqGNIspdsPfnnq5WyJhTyMCYVYbDb7rYqZNM/5jJ9/XC8RzuBvwOECOHBRuRPd3
QH/NeOeW97vg9poklqzLlTYynDFfi5T0yWcVu4LxF34xqRS5DIS0A0KwlE8LF8ZoCGxmEAGfN8Hg
/qsFap374XjSi6Dn+ilJsP5RJMieo0lCkI+QwO/2678ILjcoxU8oerzd39jPUkaNl7U53bqYztRT
HpHx/YJ/kY36ND636gSlCAWOQ8SuPDP0MJ1iDp08tZP6M4Fkpvmi477DYUNZnm2IPbqb/RgwuPdK
n+XSXYKdEIoajoOmvxuPY4A81MkY8+XCkLcm2djfY2PIXllAxNnHj7BElzs6Q8b8TNUTaWWzTrjF
QuYm9E3fzfFJo7SCoq40ANqFQMkNLJCpSjEGQRXaz9AnNYBmom1mrJaVof/ZuG6x6GzHiVmHdUhG
rSl+KS2l6gTJlt1Og9QkyiW+j7sLTRocTR+UjBS2rHsaIW/2F3072tsNfqb7zyVeNLWliE66g20q
lETcH8fgrRChH0x3Iw9GJXxb6t183vKAmfF3ABO/nBDlJjxo1XXuZYwSERhHQSTkRQIuRyY3AZmw
VvG9CVGBBoLktYIgqexkuGf6w1ck0Dl0hMFJSjk5j/WUIvmUaj0gAqNXjiBhfTDbLGEec/BTVEtv
yzd4vCK8I4VwPQmdD2frBHJvJKyHTtKeMNtOwXjLnSceTBY+Pj2hoH+XHc2vy5b1Nq0CYOr/Poux
zEQR01bNyrwcWlG7IVPPTJnG//8qf9S15SPutFZLNNUcrsJnr8r0q1k0WfQIn8NE+kkUPgZNObB3
5wAtZwbSUI3oD7gObFU90wGbA1PjxZbYNSf2S2BYeQrV+i+snq1QWI++ZkDs25Ekz0YB19rSID7K
agiDnxQtZMCatsbdMzDeDPw3D6hxEy7nfwxd0cLk1rDqU1Ldlo+zzrFofp5ZjElJ8ci2qBv9tfZM
HpR23hmTkjgHrN2Tt9WYE5lfBcD9yTA8J9yZJC+FU5SRLtBXcHXFmDi40eyRdC22x5MfIA83n3rb
yOfKskftYCIWT3zUshzwkllP0jWNr3W8arwQFqNPyOjcIVPI4VdSZCf1QsfZsB3SDtScgFhZwcI7
E9ydz9Y1ZxkxcWrY8iqfIFnsWVK8wmOTkMzJYW2/Dv9kBLedV0mCE3ReUKplD06yPwMrr9TjC69r
rZl37rz/1Ir2PyHSMdwO6Dp+GV/c9vOgXncHplhHUhmcGgrZRKnHRAI+F8iOk37GrLPyDlKnutr5
QN77dvVvSmKjl0km2oTi3SxrhuXMLB8G9ZJ3Pes8L0PehOYVgR0UV/OikXLKrY7aQ1frJWNAsOb3
75GEqVweMZqvyDAdm0zk8nx6M3XU3mz841Q49KIuiFeAHitE3p8Y77yjOcrXD5/BBuUlNLsf7YpI
ijSYzYhU7pWEW+kgtKlK9feeRvp+Xc5S1e2SQKCDObtPlGwTom5ZcyuUCHiU1/HyagEa/ng7aOPv
XAiQrDUHBJBr1kV1o2tldNyjfskaqdqpJ3YuVoFHsuUlB0vcjsW8i3L0xxPRftKZHJDru+UCMan6
BYceWvRrbFMMKHEhW1I0PJieD2lv2hQqbx0/Fdm4owK2YyUPgmQF4bqsnaFLkoXzp1zTYIX76mfI
zgmyPrwYf4eaemXOPbWzL9cfOHn9qG5/xiBYisMn7GtpeFaG1tpsovpHzb8r5UNQJVaJhTapSgDZ
nrWbBeGocdl3V01xT4Ql6ivFoKdXTk3OOVMvlCB0IZG37vtspwCqNI8k+BE0TdsUWUcDvlm50BW/
6j16GPBpdy6WeYL9HiYkqythoweNXPUWJWsk8Jcw2R07JRG7IkNOMB47Vtlepx76fmhJgUHq2GAj
CReHI+RIMNDyZjvIMls2LtB14lrNwwheHDH6HmkciVI8/TklRbma9Q7Xg8AxKifucQXN9dcqI+Wy
yMw9uxg0NWdexxZCh0EhxlokUeSdIr5mUm7N9myJVPB9n4apvWYzuwxGPKCJ9XT1lbr6giK+gojQ
8fxRGtPvrUSL9RPoyap9lSUTys2PzbSMuGN41sq3BMVTHWtzRLxtnC/GmZyvcI91pfblFwFnPceu
UnGn6ZH79yFLF/oSvUoO4ENHohTAdSt2N019vsqKjZ3ZfxLMb+LXYJ8hOAQZ953ImYR1fqQlLDgN
CmBslfV4FN+AtB2ZJuaFCF4jCsOMnIER1FVzrVqW3QdY1Vg6tI2jc3luB7XRpfGD0msyrUWo8dCI
1KxjLYGC3MeAKONEQOoc2/aHrh1L7OKAPjgyHitBxfjEJE2x6t03PySz5mlbTNjOitJYAZ+f8aXS
qSlWgUTaDHJLIsI5V+C8W1u6hRvCAqsh3rSMnqur1DFAwMlm/Wf2eKGWfkVzjTVrTvDb65lkCh1c
E8RuQyX0vsl4ddSuZNsS+dCht1HLyvOmYEjzKSXC4368fpTb6u3uuHA4DPhsmogHBSt3OjsVQlfV
sDvXdr6wxO2FydQVUE6F6hcnUmX+ZrjVFiL5C76aA3FVcDqTVZrY8X36Kqva5eATPh7OAScNqDGj
xmAzxQeDUd8wU0YsqVRg1apPONnwQNCRj+nknlS4VS3gKSagDOCoVQS8nPWXMTKjhjiuLxMiQgWB
J1UeR2lw2g1bo1U8lc2VRjvyyqhuyAi54p7TGPhomqkOVoUldhC3d2AeNP/hJ+ZwyhCOeR22+c7w
C99ikSsfLQTlPL5J+reIO5iqov7OVGPp2JaGFqym+TV7ZSMIX1ToUXtg0mQ1nsxxEMabcX+2MhMS
rJkEVBqHE0z1vZ+fGyc4Dyu+/0wNInsZsBYQZv8DqBkUhYuGC6j7z/HA2AlS5LYLMjp60OOIZwIp
tKbtb/CuOctQTi3r/1vtZQNF5bDesBufMpus7IQW67SfsgA5u8RmuHpVcFx6ufZz8CEppVmL6v+7
xgzwtkkgoF1ViI7GFFMNuwEMugXjDBdUOb4E/NJ2S51qa6HxnemxYikUebN5EV4JOxAPbVcmt91H
7rkLnTJlmdZXs7NvM47XqRN2lu3RFuK8XHMjaUgVVCXumkZtAVVfwwSExGaHcBvmiMmQOpdQU5o9
vwDeyeAdQB9JNftDMcYChjTplvS+uaJPdEg/Tj8CF8R+4JV7gWn8STYx262hux9CTVBkFyxJc546
J5ExzznbZlI6c6HJzwfA/I8QJBTYHj1q4XlJcYuXbccfMCJrmXzC7Ctb8cwcHXEtsgZKN3G4aaUJ
imvpVUW6ZWlqo159e2C1AUj9qz1eAGPPyXLqu9lvTKv1dboZ8+IZsn1Xox3L+uwkQ1GbAE+MR8Hd
h31iUQsHJS//hdKWjx63yjbQJ8ltkqSkdGjG4gwwYaNoOwM8SeioYD64e7Vr7HyXfLcyJl3rjYSE
ITk2JcnxrNf03l7CWCgBgJJZ+Vg8PdarpWNJmfvk1WDH4e/ccOsT7jxvczwWk810dv0pZAI2TH5x
8AjrFxa1iCmPNs/GtiC3H+PxWceF3gqH5DX/zcRjhZ816gFkVrvPwsQzbInZ3I/5zDnJhEiA3xpa
JJUvRgd6saNn6RbA3URkBNOYQfXTyWaH6+CrfET/mm1hnGaMiNYql8w+d3ulaiYUHGh+d5DcnCig
RIBjPoLwaxBL92Fciv0wQkq+oL0xT4WvGZI4R8bcviPpZeeN48yLLu0yHPOATo+xgC5FH3XRy6Te
SLz0/ti0oTDn5zbcdSXHKsKpXdNIPcXI3TfeA+lD+MxKiHdz5/bdSQOhCs+VeK+6gQW8CNbFJLEO
j0vNZ7Vmc3atviXpFVKo23AkNHDNf/8A/ohTIconrDoau7dQvou2DTxUyoFV26fV8sScQvcWewUz
RLvdI0AIXYugmlUGt1xOsZt19nmlmuBSRS1mAzVEI1zq7/Pp+3KE6ytGju5j7ibu0UNsz4y6VIWd
M5RU7fPhyXpCGp8Cq58eWTgZU3TuDA/ubRFv1tvY38wHLzXVnlDEcmU6GfTmpVfC3avn+HTnrSz8
uBIxTzbxDNHZ3sLMBEaBUrCMsHkZHa7YLRlsI+ozUDXHcblCTJYY4AIErOXpDyq+CoedStJDzJ3M
TfimqlJ8Hhgmf/pmDr03M09u057TlhKMcGgsvknrv4MnYWuMcrhHPeJkkOueXrFRr0YImr8koTGF
IsQdMAk6Leq7KujxB6uKe7KRsfuwgbPfdpepQ3nCnxDAfExwDbPWeUAoOC3GGc13aKyxTOKnVm+j
h3ctVF0ePPkqUoLXGh3/aJ+yJKwLyo4dAa3UDigTqn8cGYEoj8A1J7aR6KbHgvzDlil4wfNsvp9w
DALW4BQAZYNv9LZp/YnnZj2YMUxE6FMwleCt0FUXq8Xj6m2JachIiFatlqTT33IC+ueS7Ga9zRKW
x1viGNniQ85yiUssXEHUsDxQ2M1q1EMIawy5H8xCVGA8bbGTcgUQBdTtvXf4LyUNhXeAu+LmlpcV
DJEFSageis5x4CX8RqE14bHzEA1aFmTFRnR1FupScZU6Hobl42sAI3QxG8QjXjvFeb+u/kP5aRw1
osW0mxnjn9+fIv2MW5Q1t8eo21goGSddXFcPdVIvSlxFrA1a+xkXi4cyRlneZghnb1JLBf36T/Ol
+oPCStm3P3L+mqVAXtWEhCcQk0Q2iNfLftj9Y+2Tv8zcCXogI0KE+boGs4oclRDlF4zCTxaRhh/V
MYrUGNT45zC0W3h2tcHacows2MYj9mxEzHvNPADjUcXjhTbMqTNv4dekRmXx98JYLcCVlykrk1gw
zrRiMSs5zjPF06iTszO5PFHoFesvhD9sKpKdj/81SLB2r3gYWX/CnsF3y1DDNjaRJex12ei66/jd
qd4ymZfBWzNDbAwkgnFjMPu06Jv0iLlcwC34CO8H2jxNnPw1SrUhBSdwTjRcR0ff58QKB3Czng/V
+OlD/o3djyic+zoUVUBs3DMQlBWGlxlEbdNeg3UJ/wlP3bSHUepIUr05sE9h0qQUNe9W8NCmZYgH
QRUBfSvAhdeuQ3q7FxIS/n5MpjBCXoos9rsBBgiQt0pjSYDrjAsiPPt+SEG/f1Mlh1JE3JFSNRq4
rMwr//FxyOvcys95QQpvwDV3GH7wxhjwbhdYPW0NokhoUxtQOhwNTIPDsmzWbeLx+bOjmb78nhqV
SCsOSog3lWb6niuutgUxY4JFkcXC9BAoYmwYr8BOrpJAY7nGVpSQ/cq1te275WymaUQq03cFSkCo
LtJcmQrVNXibWs8VaTJmkJKfaxKeoWLRCBsVnc5E7df13KgG/hoSDZe2NSurnN7ZDrtkOy1QVrCI
vPdBjByzd6qIPLHwtAR0ITxm3AWOi5OKswqln+3TJAgbORqsEGngMDmG+0/smWV8iMTXQ9DQHxsi
j65aIosDPTNwVGGJ4IesnBlO/DBQE/TP/09B9qz2mEh5quKLEvdlLlpZ5xpt1HKjdgueeE24p2V9
xdZyDGdaUVaB+8avrM3AQ81tWakeI7PCo0p8SIiOZCUog6AAAtddxguJCRhhYt0M2z7KPP8x7D11
dhqYD3VxwrusJ5tm0TACUvCp7A5WWH5hQ9QhrTMBgjGbYi4LhNJ5Vj3U++baN+7gheNCrsvMn8Tq
IGqwiOG9GOied+7W7Qo7K5nG7smm5bmU7+3/+Fx0kiW+r6PPtBIEZFNnqRM1d33qSlR/RXh3/Bvz
cIMDw37h1/Oc7FUbgHw7cws5PrtqbREUkJV02ZmLMZp8l2H/BmUuhJ7LIbI3yfyMoZ28Fmsi5M+a
ASlRXJGIcMP4Uq+CRXg4OlUetinqW/6xNfCMlYu+bfaVvDdL6yR4gGZn/W2t+/ydb+DvjhFB4po0
EwaAyJnCoYiSuJMVeV1mjNzYh5d3KMz/OeS0VKmROe8rMlXRIWwrIV535sDusbltR/ra/eK4z7LE
/dLaRIhH+q6Sd4wsJ7alGGLo0MAc0BcaMLgTou+KBW1p1sPsQWoxGw/lYUXfELPg9CGPMbq+WfOL
MjLwuKJsxxmNmYAb0QSFm7B0kpRDLg1qGU0BCruGz15Pk+OcPLykCiDBmegVdlgk2HetvBQqT60x
hpr+yWy8PwuOaH0umLT4p/AXugjvsBgG4WWpsJL2Tlod0vG0M6AWx6gCtZD8geSsutumt30RbIGc
Ws/DRGb8nRqzeFefZ1zcIXvEAbtjQ9zryBxiCJ5UwJr0lfoojQTlgUFngh2lmdIOW/+/SlzI185M
FrcAP7LQf/Az/CF6VB2wKOzp3+/V2EYWn6s3cg7qU+pcZz+p9IsAwQePM9mZRm7sXI0wMJi8Bwlz
q+8a8rtUpZlKfgj4EM6dhsatlTM25Iyt8m43VnkFKcYSMoIYKnyzi2ATlghT8dCP5AIaMrUQWBb4
TqozFJDVJKmhFaOuqrx3roows0UfGI3aVdYLSFs/8nPmkVSfBnKi6pYqVM/J/dcZSeZudTv+Qw0D
Z0XDk/r65iAIoIPlgY/cD3XkZQdbyYznd90YbGHkak1pscPKTgqJCkaQW/7UnvNBq3EBI2txyUiC
IyqvPFyA5z1bzrIdrSI1G+ir9HGvcUE1xpFJJXF9n4CAb0L8VwaAsX+LNRWHxq1IkiVgA3MnJ18U
g0vqSbgtsqp5LnkgfR2svlfdJYFEohUsJYwhL1KZPN09qeW6mB7kN8oKfrf7m3G+JXKPmzrpKThR
R7gz0MDIHfar7tsvYSZv9F/ez/rIck9sgwZMe3I2+7VV4awzqof9O/x5bRwD6bxiEecBZn0hk0/V
Dp3f/CqvNVF64HHV0vlgP51/eaBQ13u3+3iyJOCDLf8ETkvCjz4vbr7PYqpT0rjIGlTAz1Z/nelk
R5LT9FfdIe45zsM02bZEg/GCB3N0NV8Q3k46jHhtQt/4MceM8jTn9Opn0eYgYwtN+vQXQJmZb7hG
419jMEQ/0KAaHRYytjX0yj4O+v9iOk7UNn97X0DWHp/bRxYh0kOBeIRZ+wL+rv88gwLHGn0+s1oN
Mq3019nzY1ffQS7bTx3OLZbzcd34y46X4e8VwMxaKf4d23Lfkg9j/Zi8RF7RHdN5d5p1n+Vvche1
1192y188OnEpbfMErllu06HMT9r/kkBE68lLPiD9y3BEqY1hZPJgUAN2CdmVl4X9P7SxbISgekh9
Pp5p/LgP8nmyU1JkWF4YCmpaUNhAHtIJYAbtNqZmHPkTePpf216Sct7yC7l908f8ggZXDpmZ9uJo
UauV4H6AhXJihOcdXbMZnyNLotglMYMMOoEmRvxM6kUa7IM+PWG5m7OiszfZ09fHCDR6ZkUkbNvv
JnbDlBJWhoRZjsWWL7y2X70eKjlrBsFoBQWsy+ABJdeTch5MAuLGOljp3GMFu+veB/5GNDf0yi/K
I4DVVmR3a/WweF3/z2cahw1kd4D/2gjjGc/sJh3hPrHBKAYXsG6XqrNl4r/W3xzRHH09EZoHhSBt
9M5UEGiurEYwJmtsWInEGU4nlUHOPMjJpRwD8w74iUBhcVOvyEDM4zuBuOzvZKNC0fmIW2Ek0yB+
waowsqzojytlf2RkFRm1GGF4dFQm/DDyJKKXZIZwm3HfamIvH+maY4xotuYw2PirqJxHuDaW6/y0
AMmTY+g2G9tqOaXSPPTs+2YjTBm2LsrtXRzpEoZMv1x1zuFH0moC/KrpMdY/JkFkJc5JPD1DDdf+
GvLuo9Zv8OPUhIHRzYo+s8XDWTgJWIKpab9lOr/gWmJOMi4w+pPVQZSm3SuidIOvVL25Z227Vmu+
hbm9infCyS9aIMtG1HH8Jh8Xt7J4nJVABWxQkw4o361NCSB3PBcsN8VGDK8qaF6QZyTEP0B6kMAQ
7IjtdNKTvUpKSH75LVfG/pjJUSNGIOr6nAppLNSZ08QJig1XIrte5vfAy8WVwLaw6FtDuwjyEPey
kvT5dSpET4TsPEj8rBYR1L4uB/ibrxQe8pETsDrPpxlumwTxVnNHgv89bSq/1eCP5AiV8iN5nM16
KbVsBhEzB8UVnH/geMky8fJZ1NpX9lR1UBG3rMFR271eQjMdJEsgzMFcIOEpNinUyPsx0+BgJ1CV
A8k+HbkCBrvE0MzWaUvrXvlwuY4JJmazRPeUbD1EfilsTpdpNBfyLyofYrj7tdx9I5i2XdSk+Dzw
PX8WdjiEPIjrgEHLiKQ2Vt4/IMg5wvFB+u1MBG25fPTvnuNfoqLvqtJYRtmU5TVv9driznzwdAh1
6u35RWbXuEl+NLS3zoF1HyPDTdpfpcv7iv4zlEQhexKuCLANFdUO9f8uKj37nKyXWou6sM9GC5Hl
7aIbx2dGFczmNI000qR63RkrW9X0T54M2vhtGxP6AYOTyXmlocdo3ln8DgGGW78+mYjaEG+KCJf8
3osPc1vegBgRKSnCwbiwm11mSlgoNacgofU+WMwyo+gh0qLSFohMEbiTR71R01yCsMT4eWxL5vpm
P0MtrzJXffgt/UMSOXWlfBQQV6KdSKuA/TLeWeOo7plhGacenVGYcwluyBPZUrJTo2zcG57O8K48
8KSG+i9kf/gpFxf/GRwwymxlYuAlgeekVE4bmBJueHc57NnIGjDGHBNzqyxYu1B4CptypvSvxDXU
ZQtR//58Z068gcGrF/Br3F7SjbCl7zfCW/i2xxOnx/47Z1dgU7ms8qYKnKUs8yBHiJE8W3L8oCsp
klYdebQJ8VAZqUZ0IU2tCuFux0uKpeWzwa52KBm9wh3DO07ZfrzYj2vcCvgHnu5CQYfrMWsImqjv
ds565irQTu+E5fXQGrjJ4eF6Pg3PnBlGhcFtJbpGLMVWrWMgEHh43zAs9nE8M7W017qrKfuuRsoS
GbbOhqRcEjpBZCgZSUb74WUeb5rzF61XkFRYtBKOUXlXjgZEdqdINVXZ93spA5Pymd+0iKrPqSzM
1FC7Cnh5y/INPR9NgL6hqu7imQmXQpzsZfCXP+3igtjWymatMa56gX3dB9Coif4TcdnmfuTfFKmK
aCMXXY8OUw0oF+SVfe+suCzlY/O/ZxNcIsJV/BpHqHaEpED1lFnHSJ5WfgFC1XPE9A625UUbDy2d
YC6gfz0tcz6eTBzRoE3Vv49i6K+SRReYjylrxCdyPy2xSSrkzh7/xVr8TbOIRfFhFNGfyYInm8K+
ie8OCoZ2I42F8Wp+taOjupFYXpV17JoxU/lLz+2bOtJs/H9bylUFcauuuYY2BX75I8y3g4NYmoao
F2iWx3yLDOmbT58v30yrZh3ebjJUOCo8Bkm66tGnFqvJhfLI5CBN3t7IobBiedz6gv6Nypk5xN3v
jgAu4hMDY3Bdx/e14qwxuU3pgQlSTDwpauoOEHMTk6VBwPJ3hYpGX/NyJR2HydYhKOT2/ZnFGsWs
xZyYFhqdzC9N7z3357yTioQmsWYufJxzgDvejTHrwwAF8yM27MDsKoV/9CQmK+fgAev2h44YqYDJ
ezK1h5KmCHgGHdplhxC6OVvt9soJBTHC4jMQTfHDt7GqkXn2SDMjrD3JH7NDcwucZoN7PdYPNjzv
DmKbHppWQsh4h5zZSL9z+bxW3Pfap1yxj+mSeIrWMLoph5LFEqgPAP+mHc2zsc02ybbR+ngy0vPj
X0YbZkgppwLfywd/dSdXdNEOJKhMocklwJbeEmqLUiaSWEo3kDfEwoNBaBbBN/MVUOxNZ+q9A4QA
Bkw7gn6QXj4xk8lN+aG7soVb5pMRwHbF8UOdrLQYqg99521cm7Wo1MwC4Jemmksb5kyOjtqghlXu
CNFCdtUJ1KGKZqY6iFn9nJaMQ0mfHR5vrv6NtofzohalZsjZKuAFIzxR/sla3pZy95QE2EvApzkZ
iqlpG/KPQfvzn1a0xcugFj7ADHNK3js4JYZGcmDlWQhtrsaLZJrnutYieWOxTCEjihJ0lFvEHsc3
T28A9vdOeNofFgFc0lCpRp9PYy8vlUnsE1TOgPVkOCjghE6hubAsIRrC3kJN5A14j+lkOuOlFyBK
DN1OM1RM+1IjI0wlhT8g/+x3iOu/VkzDb99uu6fSb607e5MGvK76Zxs1hYC9rGDyQ/YSJkhfv8y5
4oL21+pG9fkhFPxTOZPlCgcWv1uD+QWjrw0qW3I+L2JTkDrW8naSSTZ2OZfkb+P8tZxbfa9diPxv
xO2lflbQJXKDcXOutLaK9wrjwd4kY95dfM3gwo55+72/D5npMTuk+PSKGkvf+dAP1d9hWORy9g1/
7fmf/JiHQ2f3b1sPxBHF1HEavcHiMHGoJgoYiCQjeLZN0JWsuHmBk3suSixfeySWjaeOuk7MvhER
LE7cqMk7K519cNrDsdHXOm9dpQ04UNea/21jrm5R3ygIYAUt4AZ+nkPrnPT5uAmQoaPb5tuqQS1G
vGDk674axwg2c/63Z/x35F+0WnIEYql9pc/qie2FjohoU5tHIg1htIv3RAdfZ/lJcZIuNjH0sHug
T6JyrFomzu3iULITqgN8F2Vl6cmAc/R40I3lJwuyxL/T5c5ShZbfqdonbo5z9ZxRBORLMj/DLw83
21LqfQF7IxuL7IcO/HLO38lK88hsr0Yocl+kCAv9Lpcg1bxOhqM9VIBpuHzOfqOZwXNtzUKxtev4
i1+oVr4LBupebJlifnB1k5d9zSltbFJNcjZRbauKFG/marQc8FcYmLLmXFKg19lXcBtwr5HpQHad
2f2ZXeOO7sQLPOqYDjo/vba+KDfMQgeV9738QcUHindkzTFKN68z+5jGsyyBH1spwauMu6aRnQzk
6K4/b/gf/5T/ryYuVcIXhPuf89BpYSaz6ufIAnr80/llD+8PPsQ3j2ZhAp0sK9bChcaDEDWxNENd
QQ9tixGFnOD4rofPpjanoeJ7bqPSmyLMOaDXESUxuyx/W9rbh5MRfcgkjCdkjp6eARfBrClA2yd0
8r04l59+lfM7kLV1/95Gs81YSIHZASoVx6uULeYv29FvuX3hMFjbHOD+ueUJBIjuBm4PNnXCYk44
A8hMdi4JkMN/XXGCB6KRO188VANfWznLb+9++Didx+Gt/NrYSqahRKk1FMnEpib+TXNqJ4ql/vdp
3uOGlNuA8xPVOLDlQK0+9J+CnKEb2RvPh2j4ddTD+B/RtD32Z2Euasos1UMUGHtLoRV74BqvHkGe
pvdawgLuqHUJ5+8m0Gtl+8K6BAn7s2MxBX2JHMjvRie2qQjYy+ynmUnimzn6U9oIqe7cM7mBmyHn
q0cPsuZypAPNDTnLWJpbQpfVaCIlLh5YCMS1GNCjDLaMKmL6n9esnHr6DP365vsgRZ8LKytYYfXy
BLPL7LnDrHx63qKO2GG1sDGlnGTlPEaO+QnZQi+64BeXISRzVs5RAOF5JTSt2D3XaueCBiEEkUiu
006L+awL4Vq5cPP/qwn56bfZ2MkKaXpztq/geQKg45rW/S7p/m/L3vEZQrIpJ0GcmKhCzWZh8ljZ
qEtcUZBlVnFpCHEir/MAF3/cv4F7LgNmrZwmRwlYDt+dexveGZ/30lGKVJGgINf3tpLU26sMqTq2
E2V1GBd1y1RQeYGPaukQkhcHvRTVIP+t1rqC60oNQTTdzoQtOXZzOwoimn2Cg6+z7TbpVDe3OOgz
3SV5XrkenK1VBaFkuW2JgllyXAUfbFERVGupC5t+ZYRAwLUlCCYUqE1piQkKrqJwpwN9+GWkPmT7
oC7EBHn3jWGbw0vTxHKNIVUr7u/0FcdhD2f6OvJ2Ysu1NKs3zCHRo4jj0d+2wb8p3tHsmFPjxTV9
rIsPKeXXEBpcRn4iBMOEkNEH6bIDrtwqSnjvfm46LZH3iJ+x2nE3z6TRw7xZ5WQjU2Z8fqBdFduY
9k9i2l4p3qsR5Sh1P/7HEUGP4uYTmw3tX09rrpOiTZhg5Qy7y19qmIt1miDkkDdfY2riN1+41cFa
0kDy9/KA+07N7Z2t9/l0DIfqs8MLWxRZqQBENQOgqSvMNTYuUx+v4rDjBQn2dt12ktkwfahQJhS8
8OmxcXJG/F2ONZn/1YwJpBDHAfQi6WkHMqoC6f7qhvFmd22i+e9zM65bn94JGwuKKpecB9XtjR3Z
HdGUcadmekfPtnsL5PnaHTSG5yv+2OsvcWmdSLM7f+UWE1wjDSw9PxxzYOoLZBeDiXw3pFwqakX3
Rbx/tzA7t9FKAsah1AFFEgO5c/3nbCWC8apC9jeR7fLW7bFgK+cSeIgRJGytqVuQ1voECitxPtQN
R31sKd5CKAh/A7SzxpeyEK8FUOhPm9d74o8LpUQVkIrRobt39fHVLhPBPZSWDcswptcNlYY5FO6J
ZmUI9OUHIPveVEl2cotSelozb1LxVAtyIwqtyme4kTSOur7uV9rZUpiTQpW74yAX969amvRrXbMj
07Kqj+46KGzp8aND9s+xPom56jvRkWM9j5RGRoirFZW/Fy8HraLa2jx8Qi/AT3bTeZ6IG6esu4r+
vKhR7++Uk1Ce5n/uWm17QVmLtVygPssoVB4k6XtpS9UOwmCgEYA1YlNxgP/Ef/JmFH/rJ7dg1oTY
JlhthpvJgT3Af5SFfU4otmYtUi/W7kho7Lr5AXANTY9u1H7RDD7BJAEB00ktS8oOgA0GU/c8GOzn
f+mw/CXFMsPPSqKn51rfSreVoX8BS8dfnoIXpFvevRFBmdH85l50IGA3CfU8LH1u8PN9AmDOdVXY
aeOcZrkeaYbcDUqg+lL4YwRQztEuhi495wGT0SPlTy+jDSEtRVutJnWdsBMitqQT89+d0h9jDfx3
eNwLCHgugkT91QvZdws2hejOjZIw8Heioov3WX9W3oQdiLt2kDW85GNNohMbIsEfqJHZG5oT1jyz
v8eUCeMbMzefaYhYjeS2sq6AhHd703f+7rXCQNNmjSA1C7qhqEF3cxIFFlNzAuF/DfFnojwV8Upm
l16GIgOMyLkMT0xowxZfc1SrCu+DoRan9m89Xy+qPkvHYSmWKmBF3HWUETwOQmdH4FnCYQjiqz+e
742xP78+lEVbD97wVXpCoQych0FwwsCMw1ygHh1QbSKF4AaujSBOJAIgywXVEZYS23Cd5EV/IIKA
xtrZ1BTP1kVgemD7ziOSuAw/lyQQkDmYmcXsvkCG5oHHJ5R5Cjaub4NWxEgrSPULZJKzZH1qns/I
ircXgHIzRReIc8eJTww3qAufCgJMec4zm+aS3XkN59T6zOqzVNB3FKm/eg1rMa3vmho4HLiU2b9d
NQ3zV5ga/J5NSwiMApzaDNoPMojZAmPScCnmjpG7Cq9ldff54HudcbYb13/ukwSTHzvOllPjNhPH
i7LB1DgKiqKyt/32ey7z70uJ/OCuZrdF+OouG1nyGcLH+0nHEe51m/jNcRaVMcVD+iCr1HnQ0KGu
PJX/BqEEnVFgNsSuVHmPBmscf3B0/F5dGCAmNSsSG1AXs/qZK+CsNN3bLDHj+eD+lVPGv6f+NYwf
lj0Li/lOGaSl8Sd/EsGggNmj6zFuFA5ldvPjC/wCQcaoW/TXXPdjZc+QuyhsGYoBcc6oSs1VPmwZ
zgwXlRSXJeM77mtFxigvR9ziDuf14b+stF6/o6fgXrYHgJ8jHJyxYVRW/k7Gjym9BBp3w8m2t6wI
ZjMaV7rpYMuHzhd8KZwLhW6VQ4ew3Dt+1q9StCHJJDro8mdCRGcCGT4Z3ROgNuaJ069gWttkfnWm
cnJmzN7YHijob5ehPDPMXkkCLV+x0H2BFxBT3GPdX5ZL43faFcJafJehp/RK1+X1WTBfx07tEJPQ
JEUObJ+aPW22+Kzz0us2E6nppJrPNFNvQAE55X+HNheScL+Jfx/g8441qAGwhTz+DZC1y6wByXHh
+DasTTp8EHEv4TKS0utCTIuY4dfi4lcnY0kDq0oZ5a80AUdp0iVQamvpS4Df0/4/pjnfy6h8PYdd
bAmJGI+OrQbaosqdPAxVItdcJc5txC1oLivC06Oat/aiZ3GuUEzGykgEyMaHYLEnhA/zJLn3hnV7
jdHGNCglhtzcyEr+alIH+gmqXTa0MXy325SxrtdxFBnII6EyE6vAUBF+ilOfNc0JRKhNuUpCP8iQ
WRNk9/udpSPbKPpXox7VZqK+/tKuc2Cm/ZRJcQEqze3/2X4pm5XmyJ/P8LUlSC66SXo7Z6mD3XnK
WZ1IvvkxWGbP/ASu7AQNFflD8xKDCD1Wk59JHI2ZFxe4rvNYzaIwwD8pwysM0BgUuEEHOMOAg5z+
7IxU8Tz7NLkm4aFWfUUP/IYI8kuXN8h3f+zJ0eES2btJJEjzciqJKGmTkHvXJnrG4vrTL1jMXYbk
k4yYHR3xvE+eHAN+t7fAwAgOADw3gkYJQrGn4KM9Dc2Hee/0xq2Kpzud3ZI9M3/BRO+vhuTYmUFb
6H/ewkw3vDgrpM6OOI9b4xTd54fFO6NbprjLoQQ4Fys1BXtnTknAYluTUDvq7jVMOuRziJ6bB92T
Z2V126dRiKq4JJ6rWtKehpO4Zm5rAkIRDBKIxMuisa+lRxpGH1oFCVqCeTrmx9PDfINceO7sORKM
C94XtTV0Kssb8evBI+PA7b8wKmMKlOwAhRRQeABPXgqltxt+srfLi895jpaa2ACgaeX/H/jylonG
QBrsOEqmOpgilo7OGshzd9riNV+Jg9Wf7oOvQEdjcGdal9Y+2KnArXZ3ReQAGDS2ivIiXMVI5Eth
NlgImKqSipAn+I5gyxmE9X6sXSRbrhnJO/N6SNlylh3jbNHhfCMKxGHPPAeB6yaeEjpKpEg7gBxE
yQbhD0VB144mKSkGNuwCrxCZLI+I55dE7hM6OrRh9BDuP6O/DbFLGvM+gkzgZS28lu9hEIFyIfDP
BLvee6JTSl0WVpXs/xnvTHxi8GRhRHWGEu1VmC21zKXSutxlTZCwbAqaf9YD6mRcSXCktU4KMN4N
zuLZXk05DkZ/p4Xyuad1JDgdNbUPfoMK1iZ0iHD1q4DnjtIo6c0U4r0W6sbOmVYp/6hGEjQDpfXF
g/HwgGTF3pXokf1zz9gYWdWikGSgY28pTsJR80by4XugXOBl1TB/qrYPsakwLI7NgHwre1D2JPWk
IaX43VFzPPz4Yzo2h3x2lAIddyQK3b/YNygvNS6vFCIf0l9agcTTfkw6Adl6TNJJBx64MAGzuZW+
vRM5KmLiSk+h0EUjm7a+tV52BbQJTzrFPZunBPwiTLFY59Z56Jy5qBhaLcQ5V1K6bznZc6wFBGyp
av8x5WlDec2oqGULWmF45hW4FlKfQgr9j6UNy+YJRXjOFtRcMPUQJgol22rbEH8qhznuy7IS1Vy/
b8/sR0/oCACLDrCoN/I5rb+QqV2pKemmhkiLyYkNNPpzWDmVDFH9Y5zlxBHLf981uV+y/64oHnUv
9w87wRf0NjA6qWoW0QuryAuF73XHpufXLUbaSMQqRLOVmeNrKPopOjs5VZyIWtX8F6zCpKvQgGHt
vHKAA8p9zsKdFd/EnM77M/Gm/xjWO1FIGDPc9nzKYBLi9WWUZ9266dJI2xKHa0V3ZH200ak9MSeQ
0PkmsqMqgoslROARJoN656la1AqxjhaNae6PIQ0j9kS3rH49yLHbjiVNPOQg2z8RKxc1XcSJ3h/3
uihV9l4HxSRN7k2/L4Yr7rtkuMIHJ5ABVavOgUAEvMxPVirIlihzmsB8HoqfSRc2CjUTrzGSj1KL
x0IN+4/wYGVonyWdub1DEE5SLbWHmPpTe7WAIgn9S+0O1RDgbY26h4rEmqusQZTbEZRvjex7uROE
xA+x2ATtKnunFBC6UoTcGaAoBEmyO889MLs8yv94wWGTqFaTyz+2ufLmZOeScxfnWFpEgPJgHRp7
xyx8smBEixReXEInwKo79EBOlakbrkbZjpEeoywygh+spfn1DjGXFwtrVhma4mZVdHhp2ijX1N8a
QVHKBeZkGhEX87ZpEA4VZ4rnW5Ieamn1qm7HFbLcueMFRRghgIuPFTFnC2h4KjgO6gEzd/qhzeyr
znmJWBWjgdnWOrM28AEiY20OdZfj+p84C3lrKKcQt50fo23BJkGAFxmZq93SHyslihMExPw437hI
KDN8mfDph7LVTSain5fsTorha9aZlU5WINVeLgw+rSQE+vqYtODEx+BqffajMIzhVQXrV2IIUZzE
NWIaFlstM4i+7/4laJnixDgK6jcECVGRhfhkRIOb6TJExMretcxfgYEnFR0DlrUJYGV4/D3jufPr
Kxl6WzEgImgheTPa3WPJ16724W7vixh5yZI6oiearpXzu2dV+gN3L35eG4TTChTd+cF3s/CJYvF0
DASYSi980YdMyDvnHHfA6veblQbawLHJufYV5wodkvWOObrvrDxx2DIfO6FXYvR4i/j6S08lSExf
pESc/33qvzxHF/63ao06pHwBnlQKiuaMrjPGV5zx0jicSKy2sibgg/FqCeoDwwQoc0JIV5PrYQpS
r2iYyM1KI1KS/J/BfRhE4fBFjkfqntXbZx1RgFFPNM2i4PGLvfYCRwJCBMXuAVJuoIM/pmQtd/iQ
yKLpzvYA9jSr+rjSP7V/O07mJvbwC8FZ3YsOwXfOZr+ATZQ3GPaB9R+gQz7vdeGfihMxDzQS1s86
ENTdas8Fd86WYWkl+jcE6/TiioMxpf/iFo/4mMReX/kTQn2y6aQ05mjsFvwmQ9hUAX8a7jXMmo2E
wSByJ+170t4Pu1+xR8r4uMopAS0kJByw1DEtwSpS5hHeqedZXosU5e/6b5g7mpKYgU2JYZ4q/RTr
/0HVnCOcKOQrHYDsfTQ/cj6bB3FtjeLylmmehOACOvYUuPZB56fPrM60yotJY4wSz2iysx9/zlM1
RYWqcwkOsZEYWjkJrerkJoYB7v4jvflonGmHwHIBBxU2fS2V9/aLwsPZO9JbuuSk5u1QvJ5AROfi
nc6owdfI+Fn2PiPDu2RninffLDfm4sIyhM9MAO0HNuEhlcpSKW9Xe9LM2/1sLY3S35OgfE9HN+i2
rY2GtBftbg+Xa95qYIHa9aam040XzG1jgcKnb5ES5klXDyVi/Nmyv8QPKUzDr2PJeVscnApUfnJZ
qaekoT2/Pc7/esq1ZTCCvxWejGvilbDkd1c2GjKz7tavWGg5pvqWVVUSZCfm5lXD9xjJsUcr/Kdm
iti1XpWP06cipsmsEj9+Ys09/XCaNkvMeqdzx73ofSz+1kpuxnd0UqxlXDD7p2OMaVqn4T6LIatZ
gO+ZN5J8LvsQbvev8uk2CpWQkE5UChJW6X6Db2T4E6ounW2Qvo5jg4yzXF7wQdkZ2O2d4NTRvgoa
/jh/I34PMt4tb9g/CP22gSUzkA9STjVcVPfHcLYAgJbgVYBb7rSzjGLhD5FIlCKD0ZjkWc9VHH6X
YE+WO55S0zoTOWGgfSpWxkJ1NCH6qug2E+T/yygXDyf482W4vyfo0lTtoakXsA2AuD36MTvlrZll
2lxg5/Va3kS+R9aHEXxzNyZ7Sts3W8y3P3rovIpj/GXp6LR2uy/VjERMZWwDS3uxTNvVO0KsvaBd
5OhmSuUzRtXFBJLURIMUfMMwwsy+dmc0VmZmkVvSQdhzrtMX1Ksk5JKIzTOw4l0+pM8te78wEY70
saO65p70z6qY+XZ+BZrwkedXjMNWpUIJJn4l1nZBeWOpRng+c0k1PacJ3G4hY9LCWHoAH6+EgTXS
wL59lDgOVIZN4oQ1fTpelZz9sgXd1MJAyVxXv9pupuefrZX6mu2V6OkmjFJSn+7Ou0d5w/wK/FfT
Je933nQg1GhMSZR8wKlzehDpoDKi8ShIB2kWbsjJvBX0DuEB1kqp6RJKLKmzv9QIwpiG266w2+GH
8ijHyd28t0MO0hGRAZ5Cqit4JnaVRpo038Kt2GLL64zdAmkDQjgQw6UY+mFkpr3SY4jhF2EjKVPg
OOJqH/o2K9JQxHs0W++11FWDumcMe4kSgKM9KwRg/pEd4l9QCwJiDknTUlMTlIwEFUlFKiAomCGJ
34YacFgfhIjeToU7VzInietdgPT51wZ315ktl8JbWOM9JLu0QJd2OS746elr1XOHnR8i+C7s/L9Y
aQn7X5ZwEbJ18GIDnH7Tl6hV3rLUWhlqcI4DhSs0JVw9bSCqcc2QrrAg0aw7LfY3DWcY/tD4x4+U
BBWOYPZDYSOAj8ir1NYNZFpTDA8OTZlDPgyMzWXSsZLEXsVigh+YaAyTz2jVztJi9YJUsg8QkQl9
6Y6xhnFZWsjIG6U/Ma6y/W1AHAmlh9DuaebjaxZfeUab0OnICqUgSUtgNSoP+auwIixckdQdPFcx
NdwWis+FOad95h8r6wWWZqvjxlIfbREzE+11kfd8QkeQckdmJtnUHNu0Mz2wH/FHOYXPZIraOBdu
cDO9h5pAWOyddvx0VO+csphTfRs0oPtn6tNpnBnFXVyfVbh2nvf41Zid4WdRQ9ckSrYK8u+y9Fbk
mqBNskVo0TrP1dBZNCNHfly0u5OqK7DyvDlNV83eynSQT2I5YcvJrQaT/iayyySQpp4DlONOV4zt
AOozhmwXD4LSSrQ2orl+1Cft/je2QRoMx9S3HsX0gEg4bPCCu0p6h98M8FxN6WHwV+D1LOGGDzjX
t2GKqxXf61kgrO2e+F5/GqXGoS+R+96RrKflc+PJnP7naNQ+HK1m7mcLi2vFaVOAk5iASXINs7RA
pGSQD9Lh2mdhaiTkkMcSUJfjEIFEvkWuIAHmP6SBaXMW7EOLkFGEsLMBRWMQm/Km9i9FteG0P2xP
n+q39IDCrX5ww7GMPvdXTlW6xiILhb1rfQx6qiXPnSAdN46BDPqCstKw38zFQme6U7/bslbmFvUe
DJNkJiDP0Oppwy70Lk6D1imVejTpetszLn85ezuBJtGn7myyhxn+hxicc1v9Atpnzi+wqJAhb8Rg
et+ZqyMpVwaSyp7f2ijsxZHGEWXTICxpcPHzfl8g9rCXuZKNP5MNITne216vxsKRSjb3YMLdPBIB
bDJay3PtUZW5yLWh6ZrMH+f8I07aQtNZeHuCn5uNO26eV0BQy8xMcRxT5e3STRE/uI1aP4AVRSk6
BacLHmPK3QGnU/8+4zaihhfEOvxFGGvjjUZTjN4sv75x8d+KTWH+uTJYZRomolkW3l4PwIwKDehJ
lG+wsBQPsxDIi1zcjmABW2XoaVfOhSt2Xqws9y/Oi2ArfvAI5paJDP4/t+IigsrQXY/LMmDTzMNz
0JTrXKqX7FE2C/u3QdjmCaLU1NyGpi1ErM0uR1BdarUR3d3x6ycvcqbTB9SZARdlErjYHsdy7QN/
yv2anuImw6FnIZ9vnLwMzVfe23P5sQUTE4T4TwStRx2nPeiW35oZXdQ2aCYWwrKy3sSVD2EP/twT
rqrURAplubMo+klPSWE9I9rWhKKAYJkXxQ3juB/LpMNrSj3VnApRQC9lLLndG/WEAOF6EdZ89eCL
2qt55wRdhLb+IcH7hgq04BpgkN/ImxXNcXab6WHlGQPR40C52AGdqqBFmYcgOAun7wCOehU2dJiZ
CfdagsZWBDSQDs+GnxXHUoIzrH0DzXNrE20VENOk5pDW73mY/dxCbLsVEzP9Qk2MVoto5CLqT70I
P+ECZY+e7VIYTdbC2y1cFFcYc10oiNWOHbxkEjyPpQ876xd3v833uinotLdilypC2M8CF+G9Gjnb
7+03SOgjVhR+yQgHv2N0EYB0GbXSVYW18lMafnBkk1xthqPNRJ20qv7lw9bw5wz/P8N9dqONWl3S
8ExfFIwSTSBbf8A3AXxsg2AQaIuD04qhZrJZVJsX+fwmoSUbtapzModgVI6yu4M/SxRZEwZQ/kZA
7Ps1PyeQ7jqLHSDggIUKvdV7tBFLT5pbCje+LPabP+eRUBb8r3pTsvZ2iiYanbf1eCj6z/XV+qAr
r6PTHFbXJMBnwTll5AVpKELysHLGUuvmdrh/EDW2V3l1+IpVl65g4UM1DfUaKHB+lFrYmMS9Mktd
/eechCyf0cZ1TmVjVjdpV2IB7R/z5VNl42BEK8I6KfEwdrxHKFpA3tgkY3k3Yjzp/AX8AyuPE+rs
Rgo5xX1UqTQWeifaKPBF87l5idaFxkQEGfwHPvUpC3k0cfuO9IIr6IQbknNWU37DFiCrjRXeFu2Q
1JojFIMnyQM6OB6uJoj7furDP4dC09gdtLTg1yF546/D8IiQkT0BQhXCDO9W3MX13HfZo+hhmXgN
NgQ4dH406hs4hL0guN86yTU9uZlGPL3csGBU0isUzO0OVaSwO5Gdw5XgYg5M8+sNkX0a6Yeffea9
azK+7tCof9KYeLom5+VJNRAC0A9fWFGC4GzR9+hV36W5GuGo3IHJLb9S2ZbhbZ/Ua1nWW48K8rRt
4rGSy6MrxfoFfsH5VXjsJr1h41RXXN4XQrncOPcDt6SLz83uurybjW0B+yXTWvvN3qgUyVDuCrmQ
1QCuokFn3KVWtotUPUlAoqAcDBr4tbFxQ9JNF9xXbKYMXAvCGfVkrraH0G/ekJfMN5kcV1K7Ui/t
Vpo/K9q37Sq2fwzAuu8GqJaWuicl2FGGbs2aZ0cL8iFQjwCqAqfmPxYxWw/MCG7cq/5EgWEUWf68
9ZPY+hSFHPVg/AIv1n78NR60Dh7eTxeVjYBOfRA4U1OBoTI1fsXuBgwbRBMNd2gaEKQU1JT/BiaL
TcYnQ7qTgECXlV7CHlWx3jKEUpdnx9HAzYDYg/yiRfZ9vRHAYvj67vkbtkV7PDgjTcGvZybT+2Kp
f9Rhh41hS3OPmDd/FlkMQj29fqZNrWfml6Jhy7akQ3pyMdI6l3Wws3MW8ThpGEoqQx1okbHUBYCL
cbLOVGJFI3N1xBVOwGsQIwuNXboI07ZSmLZEGE7vL8Q/FMT+5a2XDtO9XS/4I2NjuM+MDBYs/+g+
DaK6LdBEBFoe9WR4Wrc+hf1SE5XNZdzT9oeWegAT6i4a4VupcgxuPKtBQdgj3g3YpB1WK/WafIkh
AoDzKdY5xoR2BoMbJxC1TfUlU4gIXHOHguzJaWLLp3f1MXCEtyVnri/BZFHbPLxRafDIcM+caAAz
iM/a15dlBAVcHqLH8Pi0SY1vLfi7Re3Mfx/376whO+2TZh9LLc1l7GZlbgtZl95SC1eIrLbyGg98
alPhVir0nf5YOywdTx4JJ2OHEhlTVTn1ll+HwW0aTq4Fo4ct+Qpw/SBc/AUEdVcEXrZtOPtM2jqz
xgcmgMg76BD/sbkiLJ/f5jvHai/SG36y79iBDK4kFzEG/IsWMBuWYj6H8cRRtDVwKa+xXMnB6+W3
JvQh7hKNdhj20sRUVN/RjpXJRF0PKSz+vAc2CpFxFYjm2ljGxI/GP1unuA9fby+wlvINpFE7Vt+w
aQ4nBCRAuZah+WIGXBLe+r4j+xj45yLGJw0G53k1/hAIY+wIu9ydqhfFgzSyO20dx9kPNxoOPQ/6
QlN8NM5lUcDv77AUPmFY0RYNXv+ZhrTcbgh+NWVXugEf5ua0otQn7nKx8ljeHbbyAugZquUJRIhA
D1AS5QVHplYQCzrGMaJ7t5FMXuX4NPqd6ostXEhuDUySyNVadQsfXbedn3DsedFIDXZyIefOS5gp
SLLP7BLt/zTw/GC5UoAU7lmXfbJZ444OZOsnsrvikGHsnEx25Rqj3dguaIXQ/7UYvRxz4XflyNGx
3BzvK6JIhFYfq7qIKFy9Q9u0RaAahPxQc3DCDyPGu9uGnNY6uTUr9p//8awoSraJsrQU164HQpvE
6PLhPNhye6x48GDRRiy+DtRlxF/05e7VwOOl4IVOrqMiRGENaamxgdNZ6F8wKw1khXy49Bj1YVwM
swKteBSAsdUujIyPx/derKixnyiK8chGN2H82BYR91mobs1GxoEniFKv3l+Jejdzm9+H/fFASoB7
L9CB9mWyRi3tQkWzYYL+xJhpN4ZwVZqzynhmgXycWxMPLTLVScj8gX8aGy1ZSOh6paO5V2xk1h7Z
TMluplGFtpfHNv6RM5/ndXFRRBEGjVcP56AQ0UOTbnPE6ybF8l9q4Yv4uXJlcZqFYgKQWHmb5hhK
C6OUywqep3Ajcof00Fg8i6dzctrYvwbWrSL+GIywzWngXZK6ViJP7uHK95Q/ne7a/lmdRO975lgH
bwujiZwr78+bGPrFzpH73igwpl2cdSFNHg8T8vY7dldq5+UPawaTyr+htb6n48CEx78rg16h3KL4
1KY5zX7GFee+SSJ/jCDjLsPh3Xv0qP2gePYsbHhFRMeSQqQfll/rzKd3ljMuAHgDgSbioku0Sx3s
0MbZGvmJTOMBe/tXQU/55pCuuBDWxEDZ1hjlU3VG23D5bsfMpbakGQG+LxgPtL/iuT2rUVvvslDu
+93cFf1QEMX3AFfi1mkoDzBMFWea5Hd8Q7KNqofwkaoQqvCqc14SrT7Y5DpbxRSAaO78HVVRVqwq
fzDv5Wsq2KZQPzMst/BKJDBHtGGGJEb2afbNfHdJjirsgT9aRwoJ4NKLYIoKi0Tnd/43GRGmgjB/
arFvvV8f/G9GRCCWtd3V9LZaa0hZyYzEhFPxzxCNcQn4GI4a6AzVg/bIDRWLg/eW2mAvHHNYQPtI
X7kqcIZpqfT9vaM3kn7FjqU3Xh2WOJSeLFVaKqqww9qTnpEOByBrYO896aBW9gWlyMI/zBpP0Z/0
eBRqd3pyI8cUu5Yrp55MytBvwhS1ERESuUbWuBZaRg2kGc2qhw9F/cxhAT/pXVAcjnlPkLS84TOv
Py9Js94JJsWWYQd8Nf3Sm8Hm0gvlLTMLlwMeuaVbrvVlBKNtlIPXxR9nHmUrVyWY1QHmp+QWjPf5
cUFYaTC9yJotYCmtlBlcQoS0SywLreFBXRXJny2tWehoW25ObLo7voey+UcFEriRJCuM7sMgcE6E
c++WIinGm8XfnAdJyTWzTYNtGUJSl4BuUEd/M7CnQBUmn5tPtRd7NwdCmy5cb2mYIkaPVT9qIp/Q
RvkvQTu9NfiQ2s+55u15wlbKljQ4SLbhBNYqKpfZTKk451/sE3COQe0MrnseXZMBOXw31yuL2uy7
ftuRQlHcBQw9g7ppWoJtAB1b24u0jdVNIoscRqgBGouI3vRkId3E4v4sJcH91yCC1fQ6Hy1O40I1
dIknl9JjtMvuCVuNOBTgOev0GmcCy3YcoxmfM3fSCWDojrozMx7OGplpFkkVtSfyP7tfC0vC/+6l
wOf8oDBUvEeoc1fvNe9O6r2msQ+jIVsgwPafUDbkAATNfGnzeXbRXEq2brSStQ7JQsnXhLgNZ6jc
LnZARBBMTr+FkPBKJ4kDSqYi76Cad50rCVa7JC2cxXqmlijiH5lWWrROb/Sv4Ru0DjXVjUbDb9m/
LP4Ja20UHRg52H0x/G487bu1Or1FNctfnNV4WuUaHaLcpoxqs83DlegTKRt/Dr+IgdyTUjxIdsQV
54JgzyzFiwztm28uzWY10vQLScnPcYoBPNxOX1OCiF6Hioy74TQltDm01Ah0QUFUEFxK5bcMyplt
46cXbJex978AK3Xz1iqiyNa6OAbL3wjFaeF6mTRaZuUppsieYj32Y5FftNWsvdLKOxGBjyYmE5fn
L7l44m30fOgBT84n9Gg6KNpcJwOdoAZ+gTQM+HyYVlKK6Swtc/al1QZ/EnH2/6a0+3Pw8dcLtf+Y
MPtFkFaxy7Hb/JkpGMTq+KUpA1VdRVZ/Iu5wb7djZts6V438fWRxJNoOVF1blwLKfPYCb/2e8M6J
r21dmYVLNfWNmUU7+d/9EFwaGiYL0h7qikBj007p20/A1cpQlw8lw7n+/T5JPU0WsQ/XDYfntn8H
xAI+VORQIYhVrYWIa1fZyWApWNg3pkLIdgUKy7+M6/a47SVSvY6m8Hek+97QP6PWkrYPkeI0vn18
BMdjA3k6iz1XL12HY9cJWTrE7ntcMsqJOog4jY+Rw6tbsv4iu5+ai2S7LBsT2D6oCE/VlvkfGfeI
Xmk3ndY3fgb5scj1KJYH08Z+ZDO2/UWbkO258/siuQIzDHnamV4k8T5cdYKxAxoSmBe4fmi5Me3L
h/OfluHssukFQW+cNMW1BoR1rteRYYALvvYavk6ukPH1Pp+zBJi5L7zzE8LFUAo3lAXz+AUOxbDQ
Xg4kmHDL/OV24+noizXgGzPY9ZqB+N2QnC90gvhf9FPNndgUNI6ziIH8R3a4RZOPDgvAfO4zdiwS
/9sQWfETd3KaB+9IwP1yamThVslJeydQymggnIi71PZh8sv2AQMFxSD5pwnV/ZcSmGGD21tZ4fxR
hB+L5KFAy5i8QEIAMbMDeReEsdOSJvoGlG8+V4YRZxdR8DrhqgBTQeA3hRdD5/2qxXQL94KEygN9
6VfzrUnZKzghAb1YdsCsyNstigAVzGrDcafi4X+pqwVyxotdxGI+6p08CQb/29Jh18EcNgeK02d3
NIejyXq3aZV32GTczFsxMA8/mEaiKScfnuIwy2ItXeV5Fs1kN8aLhwAxSM76aKUYcDY1l34+sq+d
ZTk91xVaC2uEB1jfSWCvfiRENLVtNBfSn4b33Q7H1lFf75zKrrC9ZuQ7paTMXwCTIEuUKj9CceTs
1pYf6cZfsrnB0k9R+gY1230Y7i1b63F19RUK7NnzGd79UCZK/Rm8somrV5C8tcgoOlXk6/lnCTej
Ywzm59+rcrWXf249WW0+eFUMH6L7oGbSyX3Y0wxifwGrnBEzjyFc9oWfxEdC97UOT6bEhxv+pZKZ
is6N7Q1ni17HN9lBME8zJipQwcI9YUGZ0LZ7FFaSdaYEMVzB1X0VueU+lLWaNX2BPLykwVfBIyxF
ueF6ai/rewhn2S0SuheqnhXmbnKTI9uMwGkYrE3saLMaiXkptdfFZm6Y2X1d5Bm+mx/LiWXZOUXe
DUR2RpOtyBytjR7M14tCC/NiDkYzAr68c2hCbbMxYSr9sHlvpBBGdbSmdlK1Jf13EMrx/Y9mqXY7
Pnl52zKFQPSC4jW9FDYbATT4M7xUxaYNNR9F2LdzZIyhRAGQQPni66NXKXtZkOL39D+LPtRVdexI
D8JvWdAWc8y2UIkFMpX+0OfRJ78V3RITGAikqWHjNgnxCx8/jyclLtxWsMhD7nMaxx2z0yYrsZVb
IyudWfVUNY36STF0WLaFT4rrz+dVpe1+hYU6/re6gjuRn7Cmno+i0n4WRnHnFpza0jcn8HTZZpd5
M+j60eXVaR+CV8GJWqI34x+lRRExhlTHUX2zTOAkZPxylgcVh5YtyMfIjSofg7UResje2SK2ZkOt
/kzGgFGCGNEl2MD+tTueH15GD4Jxl1RTGi7gFltnvObdoVmugIttk/yBPfUaQbjK/olQ6i3sE0N5
NNjE2cLoZbyip4akIOSuNAVP2zl/ZwA8Tye/65itNTbWyaGLi44RuJyM3MymIfWHUK2wthHeLuXD
IaUnrUyeQlWKv5DJWtU8xtlzZSSUCWM3Uk9UzD/O8vXJ2Kwu5yzV9P91CU2kRJb6mbRwrWcupWH/
ABFEsiAAi9mggm8CLmPaPfDXRMimKPIRfvdHXzJW+xmbB7qeHsE5OurAdFtYC3fbnV2OhlY9SCxZ
Q+1lgFaNmxbv3mlgxy9qcFM4MU3UkIPxxc0MAy7CrtSdQKc79UCRfweh7gZPW5L/trpvSJXtMAc1
ce/J4zyW8RypIlBYlWpo4IMHR7pBjPwS2wtwqvtyoeQjb/oB6SPY7rVfAMRgQZv44c5Pisd2rXo1
2rgfaLT9BfP+lhrTCqAe/FULhyEISjbmQ04DtrTcT7nZAe3st7rbpZFY09ahRRxQmuYL6DL1/gmv
oEOKZik74DaZu5imA0AwBoJY7ashx9hiEqL7K04/3NidwqIOH5BahbK37HQeHeAhDrEXuZOMrz1h
W2QHCBt7cHmJmzzET+VirMf5EtGfUvb9v8FYc8FGIFmmx0R2INP4pU5tGxhMhidMRkqHyAXf3KAg
sYRCPu3rCljNpr7ghb2QWNugvpu+GrTvPk8DReI3utDaJKcmDW6gJx/WXq78auBtb4YAFE22gCHZ
8T872H6b7/yIzTEL0h53rosy65Dkjt35BIBpYOEyeAGUSOm+SlyWdeiTpI4qFqXhFcXNjsAYsj2+
tAScecF3QYjsnsVOBxwlCTb4j98Bco6lurEC64QtaPn9730B6/EURbV4f+j0eU849kzmDzXdtHg/
KhXzMhGQ76f72nxxt+P+UOyw4WUVeb2jug8YeW0UPkVii984sdvPCuyxeau9Q3lnrQNZKqmbyoTO
W1Y4X3NdUAcSVoo4sWQ6XnfFynAxb3j4OQs0Oz4Ljr3pg9JgzSWE8KK2sQaCmN9B/fhJYflg+l6V
6eK6dw1oA+9HLLxo+zLFD6j9SNnKLIj83DAxP5+ANY1DvERSj/+RWduMnPJX+dGKdnwsYPk/tLqR
PwOtPytuAYAuo2v/ucMdNNuLbE6BBMRh/1sYsE39sKg/fYpUOIhdErhBKlo9+kq78Nhh85LlXIvE
urNNIki+t4w9OhyQI0Gpeb693e3fMYfsr3tJ9KU8YeDDQu09S4MKFZrIF/BZ4UgTVBDElMaRpsSf
d3OwMuyL6g/L4aFzWyfH1ZhN1RiXLxq+nevLiaL9RMIqsrJt6Z9huZKbDK9irV6xGepxGSUu93jP
1i+enLTHLvQaoZcLxU/J7kEviGVmQlFLOkyof5pCFWWUOEQqVwzq2FFTIPfmW66n9ojXej9BCg2h
u2mIq6zg5yP9aX7UJan/19skF4U6u4Q3hffLz+skU4VpEodqDzi8ER57L+I+5cf0nbtWj+oq8EHF
hpPkwHNZvq2AeG0LGOBLP99Yx+B0kdoZf3ySKrZ4jd9erwkxaF5bpVi4CRK5qDAkdqSdhQZb5rjp
GzsR+uUu6KdNFUVRqY1lC7zhQ55b0cSRleOVq7Xs06q97rtfE+W8Azbf7bZInuimeL3Tt+U0P5Ox
vjOGO1GeeTtHwEWCHZ1LOEa/mfO8quMjJJGLOk32JPFxwV90bpcuXk9wWxKAu6druHIcCoyB6ysG
f6/zEuMSJtDf+ZYgpDTqV6myUS3o34VN/x/aYfe1YapYuoSTM4qzfk+kWDcTYCK2dpa8SKss9ZQs
ucgo9QNRT+DSHf4HoqjTSmVHl00N986yK4Nksxk2YZHpoG7/9+BFIXAT5MriDqLwD3fQDqDMWb/D
5DemgapVO5BiYKe+cl8wJ/nuwqvCq9aZcKWrWx9hial7DSnrrExmyCMfAs3EvR1f4M8BMBNCAJaa
nx5BYcBjNoIIC7UNGtZVSMyaW0qEqkrwJZabaN7Cbq2CuPrfH62znKIb9N5W9YiA2atIQuX1w0vh
htcs7drguUp0qa5FeqtvcZxgsVhEBTkj0/rN9bvFX9NFnCWbNNY11hwHqWewAgVtU6lsg9XpjycU
vtFa5yoMNbkU3C+a3tMVeo34BxxXalAZvqgwDVuQDaxKqg2DGuqdTh1plPkmrWHk1y09yxy+kR78
RlM+xBa2GNV3QwBhWZ19oW+wey2P9+0HIZfI4PEGD/d6iMrU0jgBFhgt8FJQRbRwcKtPImAmSmxw
EmzUPKiFhWSVYj8/qahx4/xfGkcXc4YRNMfUtJOGhQkdhsyxawtiPU/zb4RlPxPd/TzCDHm9rxQ+
UyQawDYLIzpP6bHbXze8ZOyvFmS8vENNRP+38NtEHBxps8QatjVqZvDasoJ+Jqad/EoFnFiqkIJH
rkwjkQu3unrB/Bv2G9WhjK/r0Kuv/SL6EXb+XBbB2uy7r/kz+Iis+Wdk30kTudjD2PIAn5opSrI+
nzE/D+EfveJLpiqAc1RSFYdj2Au/xOJafXB6DXaxHaKQu9+NPenA19zpLmhDESBOMJ6B5AJpWRlg
CxtdlG1qt0xbo1vI5enrV8vfkVUh217C3s6JDB/G/Fy45mtOhual0BDpwSWlZiMl3j03DVWKCydN
XuWVNDylQb36Kn6jjy7yZG1ybSsD1tqCwo6drv4y6uL3g5UPG1aGEXjZMT4BF4jUpBGcz9wYDp+D
siirCtLHfTr3y5yY114bUzdLCW8ifQwHfAKKsp71Hg1vljFFog94DUmrMfNj6VoBHDvpoqkFkoT0
kCiPlk4wEVh/+w7SJwc2mSq1GRwnzOcGYmf+T8DnDrvBPT/d4Md2oXLXl+Ep/3yjYc6L9UhbChlN
Gr/AN7x0xZdZWtCBHazeXT77laoEvpXrZde2wAwVbw2N23MSc1ws0e1hrY/Gt/LVe/79Cd8yJZ+d
lUDwLsUqzzHqaUKqChj0ZxkUGfe7cVtLTk05u4GYsp4uqGtDyResgnufAcMANP2HKlec9zOXnEED
RX8X+sTbxwC+7f1B0u36eUFPoPAdmNgof665Y6av/cMiP9nkA2vU1m/bsw6vsUx7cSkln5z1neR7
AYA76pXo235SXQ+Y1TLa9EgyPj13dZMj6RYHkN5LjNuRoY/xi0bSu3vNtwYKlZusU1c7yhls3iz0
PoQWg6l++xCW0cUOE/FPdEQA5NThNAc1LFSqhpkL35HELkBLsCbezwHZfQuMBNz1imxUGLZpgeBc
N3QI0OJ0xRMjwyXLiD3N+373E6XlGazF2ZtkFsqac2+FEob7yRKA7J25BSp1bqecXnuQEU+05tnV
uQTL9NGOGRK0fobFz26YGsMrrDSeN9sxJ0+htCiuY1hoe+9u2monk/G4QoZrT/1IO4c+gj+yR5Z2
5i2PZHTeafC/YIbn8bLL7tJ7QTdzjANh4dJk29KR7vocripdLdXOPYOtX5O3gI1qQg5X02/wM4+q
psyzEcONiR/1mecs1eM9aaXPLhJYiAVbJOx1WYTx81jmt3p2lgCipPcc0m30F/nB3ut/r/UnJNq9
Y7Jkn43e2UtMyc3PPcYpcHd4wZXuHRA7s2JLD66My7WpIbYW5kncWuNsV/zolGXfiEQPieAhfoFv
TGLt25dviUwxawOTQp4EirSqCMn28sfSb1b1M/o+0/mHZeWVz6VykHkk6RI2H9w/JsCrnkEJl7G/
pWv6UHh0K6IywE4/52P4HkysYYbZg5Ax9qe4zbY6xXTDsgxxxp1/Rm5yrxeJYWFUTPoeU2c/8iFO
eNeklqHJYPtEBxPgURWZHyrQnhcfs0QDONRZ4xxa/FudVAA4Yg1lk3ELYBqVnnqTO2p6eWS/QF9z
2lOxav7kqrMx8ZQeCGNtyZ6YCR0pfRvmpYAQ9wjtCVpigVIRzd5nsFq+LPfm9Jq5jz6x6GCYSEXH
nxPf35w9oV8e1szLOJpIGV40MeuAeV03UgzTC8gDlUaaQ9bgXyrXIHDoLMO2lCyIiiVa1cLIkd+p
kHfS+0uIOoTo+1u5ZSRGFBjitjIi4SEXMbHKTzNK/N46Q+PxWN3YoFUcfDLgMmJ3f3WHbN6VVOaU
jiVaKo9S1/Ktefrl6wxLwWsn1HdwOqwcUU9ZEog/A4XjAunM7HhZq4r9RHySQk+UTkNHfiZEZpWS
Nyv2LZbRee1Z5rkzK7C0F8n0d+zvrjRTPEIJtR9a0fi0d25qpi23Q3loy8g6+cau+xc8IR8jrZb2
DLiW1sYTDs7ERuzQcT2y0K7pQaGIs73KCH0lOvgrOq/IFohzTn83TtrWcFnzQIg0fJLdvQmZRDCr
O4bZ2JutjT+XVzX4Wcoh2MIjC+SoaatgJvuQTUgt3iMX/NZnYEMS7o1W6V+Csn9jN0O3Ag91Nvak
X2PbRg3D+YXIeWnTR3vcQnpDQJZPJ+AYqTKchFKi+QdeU92YOsxRykb0We9ObP08DRcYgE06ke9x
MycynXoUNgBqP+cXqzoDxfhA12P8ETB6/9d+KvURDKlr3aXhNsHbl9SxNEp+SDzCMpsjqgopClIP
ts8oPb0XHQcBYcaIxPPkyFpyxOjQd2OLo0MkVrRmIxAsG1USE8TBqdy/vlY/wIlEbyS5FxtRJvG2
0ajjpu7NRfEMe+u0dD/y4ciUKjAhmPq+XfUL+NbWsuskxVnhprhI/uGS5knvyx9JqcfgHdKmgu2D
WBoAg6nzEzT2OMfkN/cfTGmeHy/0Qh89/apfUBeGWWbBEUeHkm1R3DC9FxmoN5zOO6h0dqQEBcfO
Xii1MIhnJ1dWRi+J/3ryj970kAVnNVhG6dv0XHchHbDWffGu+5ueesHOHCy7VO2HCpT9UqBIz9mU
Ayb0KU3DjumDRtSROZkHsH7MUQCdUD0SdHH5clA5ru5qhprh/w0S/uXoJSvX1Vz8YNrRdkn+VJc/
4DiY2kzYYIshbtF1Yk+NIWt4PJCCcd8v5ES0g5SfoPYZQ+BiR7MNAtku5YZfw898ab/mGKQ4p9K3
I1m+jLwUDmN2hN86mci/ZInMPrGBUaljrI0higA82Cdku5Dw8bNOQh9GKMkCpSCfTvtcZNCQ7JGR
ewMSAVCsjTAS3vo8lHZPqay3lOEnjToVIPiZ5pLZWf4jZzSmWYYqWbrGE2guEAGdpfVnj1ag1Jb/
p4lGbaSOftOx5fbLTEbTA/RnHoQxItk/YF+UOhme71P9AGivCbGu3HXWnuLUfZaLwVKei6HgPmm3
NxCBTtmKbju8xUvGXLWLPhu4MPcyUi4vCaeT3k0PDGJkhR+5W2LOlYasVZAkCKga2P5Vt4kQsx+c
0yjEspT1eBKpby+5m7qC4lvgs+Qo/TSUyzxqsgyAOmvrszI8qBHfsvCwUvDEzVKmz6y6/YimXcsB
ahjAgjAUbASpw5irC1/AUZScM+0Bj7Mo/vdNWRLvRbK7kzxVKqiKo0x9zKdA2DhAi0OVhzEh8NzE
ob8/8hqZBLvHfq3NoJKAGPxomKS6zsWxBvyUQNY+1hkROHNAgJMHwJnWMGfuPKaMhalO0Jxf8UP6
TIuF9Wj3vI3/TvDff5h/DWbpr/brj8pISHrDwp7BeJIb+WEJw6wOY2ci2EJp2u0oCfSwFhdj3qee
eUxSrkU3fwLMkSrrr1rDCRUHvQ6I8CFv29WrtU3UXDhCJE3+PIO44UxRdvXruPuVU3teZiVVHhDI
4Dq9e66Js++FIo3ajsdY2U68hOdh27fMXoFmW/nt5PfrdeCCRt/0O73gI6Xvt48znD2CdcSZN8Pq
a531eLcPXkJkxGJ7Tux8SmteROuzahyESYksXOtX9CEPZjXaK0fzdyUKZcJZe13Ecz6LlRj8873c
27vTDNlgtOwPVKyVo/jshe3UgK79FMfCT8TQXF1yBXYgZB3axj1eB2UFjq+8ghkCLgmMT09KHVT0
lFt1TBcCsVKSD2eTGS8TAH9ysJ4Iff5Ma2V8BmX0kjM9KLifECcg3N+9DzvS0BshPdagXGxWSM4Q
bQBUibk/banz5WDxtVfZcGZyHJDkr0unuigL1xP1VtJP7UKh6Bq2lTzBy563hs3thzRd01ByLr8s
U9ovPQGXEYAoAtBoiH0I+TuX6R3b6sK++DJxm+oyGGWGRukpppijr8U970d+GcipJDuHoqn1MYKL
pNG2UZZQ2J6ArZGvS8/xa8VPJ0/ydaheyw05xBvJ+oePTaCzkVJogHOLt6MhuiyXMhQqoLnHMLFw
I/60Tb5kGriTZPuz1JGnMaYF0XkcnV8pYal7VPpSPHGkYDYKcl4zKd/kkE1wi4awRjOHZRzTdFiA
IB4rSAO1sjjX5vJUj6IFUAqixSijymfDO7PDvpxQf3fKQdokxoGq2nLPYf+AxZWKiM/2Wzz6QNM3
An+P+c+VbSAs5Qjjlo2voxAphM1wxUyuqR/m+Yw+M2LlSqpxE/4kWtU1p6vFHyqK+wLhUs3wca//
qXcCbDj2OhFSG2/QwI8lXOXNmVMFT5HzE8Dy74f3BHRdaVYIxys0gariHKJav92s0lGZfpSj8CBo
AwWgQ9HRF961nBlXooqdUnz7BsUerQ3URQCSMoQse48S/jtLiBJHD3kdE2YnYWzzI+z/+WQfLlMy
WzaVLgCeT3ZTZCaaFjJVfFIvyy5OdBsG4zDn0H1Z6AUK3lxa11YAvOXe0yZuRxdnRRcD34vRKCLX
LSlZAomWd1eLvnmzDesniggZVMku3ZoroegnW3ZkHmmCXspyayFItI8ayiqo/xhBG1iseuXy9KmE
yFg6F76CkPsZcREVWsOVEPse5WbRHOnF0H5Z3CqbTLYs8LXFp+ux4wHTmuzES9IQBe6ddpBDT6jG
gWS6fJGjOHmN9jPh9hAu725mIVtfV3pirBWnOVs+dW8+CtiYxY35IGKoKs1y2m4vT5cx8TeF8NMC
xayi3fECBWp/T3APxWE0GkPmHm2NZ31IbBcdBFdOlQVtJwjeB1Q3+kwtVqMwbTl/j1pe2ZUzLcmh
1n/GkAGWK3sfUx03/6U9vzXNxLvHh1tRKzDuJs0chqV1GyiQgs9eynsEuXxaBfaWwSXxE/VTaKCD
2MyjRkYm1GYp6mEiuqb1CbbAdjd3oQf0iXJppDR7INPniYgLbm0EMUG3xuAx127407N2cP3n7hHH
i0Pq/X+aZQVpa34uIDAKoATe6lE7BTmNJKi12rz690DkDavIyvoD8wBZPDsrpbq5w4iOqYZoj2Ai
xhOgvpH5r1ylrQMuXmoC+s3SdiEeaQHylyx0JVNXOd/T0BEumRlA/oU4QNJ8CsM+la9fDI7vLFFU
kTmsec/EeYkuGPRxS3UJSRV1uFZbvdGoW/htG/iCfavwSl4quJakswZv1U67E4yAzK18G9b/ij5J
wxEmYyiVO5lzf/HdVM8qGOUz7uevg1agAXc4ynaFtkxPlB0zKg0fZmc9x7BHK+R+NhnMlfv+mKiL
WAATKv0/ADJBuh47MqmJlx7j5HG6SRKKItsmyqruFa1ZHhS7JMzLKiVyiW+g6nTpuZFStKFH3j1Z
1pFjjju8RJwbRNFTmunmDf4Okqja23GKTXqxJ0SmgP57fkpSjnVpWec9uvQOEb0NqPvz9+E75Hhv
6vEEaHVurKz+Uz8oz77Xeb3skf2xQteDY1X3qSGfJmMwUOjdAaXCdPwkxtfdAtHQTTLseckhGC0R
didedddSAk377edsdFlrTPuNijDAjBA1EnLq0VavMrn9iwL9yePx/+M+P6eU7lPY1gQgrbmCYwOm
03RAhmBMib+u1VepV5eplZ0GoS2WnXwHg6iMWHgQZbOYCe3K5Tw8TBW+Xg6z3znzeaVCa2EyKVks
jj/SUZcLuFgy/sq/PAM2U+4CYuEnYGrSHhjyttzuppbK9CpcpKRvWf11Wn3VRy4vjtcJgITI0Qwy
QPVCU7R/zQc8CIncZ/1zRpcmXRStp1VYhd6L4489X0NHYYFhl2THuY88yN4FG9RdcZcdKInvwKpp
xkhbTIUS7DwyWi+PvLoIITl3m5tKYRMlHAKK9u2ceX99nGRE4OnoHHctY860vVjsjr14QsLiPIfA
/Z81tLU4b0YO68wGDilLnh/z4aGrtDEZj9ygIEnwLYIIAoy0N8yQtQnbgmxLaOBZUaNH0r9xK7cn
KGYGPTm9n98f6JnulG1VtQgle0Wvv0/Cewp1n/WANSqNp7CtPf449shcTetK8grIYtDjHEc/eGsk
57wFl2rLTfJklMOjFuO+HGj5ua5ADxvrJlMSqRw46L2nyR76TV0uR7K9cBVO1o7IY1OigdqAHfTL
07yKEuttJQtVeF57mTSxugJjN0suBs46UV10tXI7Ap4TMaA5DGdLUfMPfKer7U/z6zZiYysI3xdk
AVvnPNEzueDicCZmJkhlXINkhpL/HRUelmYTHf6CXR+dwVxtcjThWTDq15nQ4zuk/PNxXd60T6YT
M9mMEd6d4eYIXjSlR/aLxeI4IVWdVRY10nQnS1kckCq9uSROQyRF+1R7KfISne092j8ig8s8nCfj
D+XVuMBRtA7L7Hx1KmO26YyQdfTYnl/wKPuVbfrFEr4k9yE0A2Jjaqu6K3uuTokwc+KUuGNqbCaX
0DbPKhLb03nRQxbDZnqSCKFb5czVR4urBFdeaH7WQSu8GVrG1KhowIxSGMZiL5Gt2uqZKDH5VOh2
D+PJSLZFJt7Fan/9IsQktGetoRLxFbo6uSjmDxcFTsJegkcokkusI91johwWYn0loGl/fo/y81NI
j5D72r0TryYSOR2neHhNM8NlMLHg8+2UR5MEtgc5CjAd/awnV/HCVcKjHvDzT5iHczJoXOUA/F5c
blVzxTg/yRqwRqUCCFbhv1ipA8ZzuPwFmEkSTpyJFS+HUyKrWQ7NwDyl249UBB4HatHpmx99JKfd
c2iiwYD32p+Ii9+lqRqd++XUcF3aKUX4FoNQz1I+hRhtZuk49jQgsSdwkhEmhwt4mc9qMKkVT9kQ
qgj4WwFAr3Y4EvzYB/dTeRfqebeq4D7VeOa231Sbl/GpxHowvZO4EWyGw4dPH22G4w4cZMNfBhTV
tjLC92b2qcm3n+WT2+PkCuEBNXAwF62tU7gMcld3u3OnpTWoo7iulmxDMXK1GG45fWkoBJuDPvIe
tjyWpffXxdPGUCSXsxYzZkCqUDdUKngouDDmpaL3aLCaVFii9a2UsqOY6mdIPBZBq1+YiHq0i7SC
AHE7pH6qlIj1OMV8Msrby5Tj4X68F0PJ5RGpanAUO5ZHYGpJVfI473+y+kGOgCMehbtvsFa5iunq
+qCMgJNDSckjsc2AQ1JSCmQ9LLSSFL+uEyU0wRSTGY1A+VAK25fAHfU43DkKS5bREw9+typB0D4z
i7n/c98s7+G5C2RsoBia62VXasZoAXJmXc18d7raJnRoVZ0DpH6nxQsItZ2r07zust+AZNeC1Ftg
DeEDYkPghwbE/8QV0SJSMD18zUsvmtZSSUYmdGqzLTSa6Zxs5vKP+BXrPLxovcRMSLkoxYmTvqTH
pX2Fr2aMtrf+FPMRPPKl74gVdk1t7RNCC6oFnS4OSE1yJL6zLjJPfsBpQxnUbPOtcKAJ41fg//F4
TsVh7np9ZFWkmyRfXEkL36fou8NDfe6gc2l87OL1duY/z+wiPhnSY+iXzSBJs/dIhTTAE1LnoQyC
KFp9/3DVS5UcctAxjxNKr+Vfr5/PBgXOKK4aiL/Wc8OsXoTt9DT67yQyeQad0zLTazww0pYB9XvP
GmfEj9daD2bzJYjlRKD5fMXZlkTzQrlZrt8VPFEq8hax5r6dsitRHp/JR9+jqJYR7AYZwbNhAs/H
VaOI/oe1FjWNEYlVRqcWhS3Nb5gnb3XdUdbxxb0NYq9TMEi8qIk8eyrGaD+XX035IeNgZaw5ZVtQ
PPoTA1K8/+9HdUIP8IIFUes0QIN49lTZe6gmN7B8sP6cv6SQhEWJu6mhRgUBJSPWgbWSFGet1h5S
EuywpO3J4j3K1xc+DmvTZ5zolT1Zxs8dnLAdjOplQ/xXwTpi3RM8skPtWXIlveAS+wfxRouEKzvc
478XRjfjf9/ZFx6R9rKg32YX+qyU9w5PxH0U3cCVirtq8ssJsyAcjwSPTn5w3HoqAl9FS2KHsmXV
Xi9IWgzRigRnMkMNr1LeT3t1Gu5cl9uw14sEy339BNkLjQiyZAz0wzNb6bK5WcOUbm0Hnxw+CmAh
vnydyz1G4ZbgdHDdbfd+Fu4QPncenyfpX23uPUpoiMmwC1gMeyH9cMKm7wzlmGhxS9wxBVvm/QHn
syXTDb2cbwSStmbYJkTyfAYjvFG5KyjoFbmNAA0/GXrx1cmt/+0yfspn+F7m3Ttc0Mq9O0fRrGPr
LTs5TMi3/cN8Tjq71xjsk4QPBOtWBT/w4SuldVHRLQYHOaJStIOm4K4LoVzf7fls2bMMH2eHhc5C
Xy2QPDPXEPGkcjBOmhvN6aVuWxtni8Ryu8ZLjrhaf6FOlz1DIiO6cDWOiNPaVyY/UGaWGHrljppG
0A617MGVXAnT3PlfYia9aqx7SEHDZ+HLfTbkFamw8XuimZAlx13jug28KNZ2eHiJX70wO8OOARtp
ugo01f3LwdDmaxiwd+Oh4F/UQnSuEgRGb4vjvwWNKg9f2mO1I+hInWwbmIbfmq3e8lQ4gy4DOQKu
f8qrBA0q9kNxNyqElxnbjq5thovKEQhcR1yhqUM5pBX4QuLAUmF4utm2ZoBHYIE4e4gsu0akY7V/
kZpp4WHn2MsSNsY/p/7bw30W+pqZjSOa7pK4dJWxSsBx+rAYO2SVXc1JGk1GHpUVb0EYCL8XFsVm
XJyTHhChP4geluIkQNUlwdYRkTciOtvJZ9qb94K7fZn45GHLzEjKxaR7tmzPWlnzP6lPU1I6eyYp
vTJzdOMLy4F57okHer7mK+kDFUHpie+8a4QijnE6IAq2hLUFcuNx4R7WTGv+9p0XVvVnO3qJ6vV7
94hC+ER+FlwkYIKSUkEYs9Qg+c+8LIgwZaLa39TfF2OVZQTbep0sYb9hFrepo+5kfu0FTeyu1Se/
7wiYKoLZ4SgJFHFf27OqrKZ2u3aKKeqREsDlUeWKPdvZ/8Cfa9TXkhAYp6Z3Si21u/QgV8zG5pMd
4MxBCqoyXsbaULir2m9hTu9xvJwzuxx7MMEPENKDB7Ehvt+yGMkmovov9+1xfhLWzGqgTv9Mw67Z
xn15I2SWYseEWxUTnAvd/Sg6y0P90CJZwUOE9YPAQMamiRyLPj8IIv3zbAn8m+5Ub9ScMKl5xDa+
5xqnRHMAhrW/jI8qMVsIiyf5dsPid3w0Bm0MLePFYMK22ZoW/0lfi/kBP1A8/ICE0x512qrBmWnk
t0zbGfiD/VHSsPaJBfzCXeZcnDiq0RGL2tp3aWVzh546jn71i52Hgf93dYSrkHOVC3gkI1YbOmnG
2N7wpUVBBNlrVUMw7z4qJhmLbwaWeENiZhcuelvmK9rgwSvoAmlgMsmI4o+ynbdM0Ldpp8NhHwu4
M/bvTWqMM822t40JODO87a8fe5nTofGoZ0USkvwwm0uNMgiBa5sFXDFaA3MvKrb7MnRWNUmOnvyt
QOBMlREf9xiGe1m3G9PZBS0L2KP2J/yCrZ18pzgeUL1XwaiGE1fgJbpjaNAaNxjb99ZpErgLHh4J
sKPZU/yxYoCIS5JX2r4tNezYc8mvzSdvBqdtSg8qayA4wmuWNxV3I4Z1bHQG+T3oKzwY8R+Pe4dP
zfvSVG2IluwUVgslMA7SXAnUYgm5BHh6/anA+N9JQbiolXGXeJoJzvYCfTcQ8TpT3KNZHl2x9Ime
hCoVTKjaluIFxDtdhLa8JYDXgEcPS+Gk4h1l7x0qOgxQQ6m/z02ojH5vY/ZiCPA5lb8TzT9LJWke
KQkW77AaeB65iuiWDtD9WVsByVVgZk1xCTgVuVor3pJ7H/BIQVP8b2ivze8R6xQcUAwzSOY0+6KH
ZbKaCwg6jHAMqQM1Pz6ftpx4Dr8O7Le9mdHuaQ22yaeIdg0nHkSTVY4zrJT0UtUX1/Qry8NhydSW
Nb2laV/Y4qLEoD7n2+wu71haQf6YnMfcotbW7mkbwvWbDtxVUIKiDvGIyNvVznJeW6lZcKVCa5/K
if5Xp9EWNPGp4w1RzH08QGc1hxyiLn+3ZWBjXs8zkXJXtTcIUOMpiacdLxrcoJgsibet877FkkQs
uR+QtHag9NETgf7IOxtHaFS8S5juMHvuw9teGP+B69PCZVpNICVYNEQGjtmefr+ShAUIbvIkoEkB
/2v7CbYgtHvrX0BNWFAceNdlnEosAvJM7OzPswtLk7+3BWQ6rosHvgDF/BJ5RJuXIaBeRDN3p4+Q
yr22mZBWxm2tLkYfiGRB5WRwnm5meyy/YbpnilHEK/m8ySBIHLiPLNwq8FRqb8WmC52qeRLmUCLE
2dvy7gBCTOPqJHj+k2i1x4Wn/X2CT2VIHkp8Krc2ThJw7GlNxg5kQ47FftetEA8Hs/1jp3x9+PPc
RfnUB9zTma5jVbACQ4MuoyCkTV/ndigHRSErJ3g6oWU6wMoYIDN8+JatVhTH+tpKK9zQltH30f+v
C7063EcLlqf8lL/LhUvC4xaA+yu5SC600PhZ3K4VbxMhGY+W7nB6OZuCIqNwbtnut48csg+0jwel
NwacDPsl/tN1geHEKQ74cWSMusDhlqsKban/inoF2CMnA4SrKKK/x4GUczONK8FcrOvyCAHP/Hx3
dYl60w/bKzixvido9YV80LZMNCasnTSGRkYvKSviBis331eYYg2VKrfChdBrmtyrCLWhyWFjCaht
WDr2s0H6uFI+56bluc0NqDe479gg/REzx5WHcCahuhoX0pByHcX/bbi1k1XQq0bNY0gkqjZSV4UB
qpDU8CK0pSxjKwpWG5NP2+kBjrKPnAjJYyXZ+T1Hn8PRhFZQQR9W8uURrnWcZ/XXoTF8T20B25Fc
DIQPx4XAKFvOJXd5DnFUvLx2/v7caA7r1meLnzmzUUD3MC2/Q5fECB/lihSmMnLh57E82UDLv1xQ
pZLl6DCUGH5+l0tDXt0dcdq/d5ONgvtedyJrGLoPFt6DffFd2zuvCY/pJUsME65N6SiwTxOJ5Ea7
CsiqFw8DSucK1hoTuyCrFyrPBtmRqHJ5FGVo/2EiK7w5b7S4MATQllKvYZLaaSRyPHIq4u8xtT4o
M/cpOVesSTwfS73GDZCJ46ghzlzq5310b0XEGQ2R81YAEQCBSKv5Khoj5i9l4uKEXxsD+Wrf8n0n
vQPO0CV1gFNk1AUXNmYYaI8iq9ExJNdW6l4YadM/aHRQPZw8YPCPVkRxmEdk8jn4B3BpaLZlP0CB
/vfi2g5IJqjxihITh2rNeTGRzIcV5bFwPxNwwAzUIs6eKesssD+ctUZsbG/B5cQRna6oaQWZWk4S
RHvN/vw3nBlg7q7Dj+NIQ94GepmKeh/cHCxl+/3usCzRRdabIfsgd+/3KaDceGfWl0TDIXwP8tcd
1JoJ3rdGaQzMZ38ko9PNZaEk9V9KR7L0ze/9ElPgbrHC5+ktFc0vnG3PTv94a1mik0bsMrI/nk66
tUgygghk4yieoS75lliQ4K1ya1fu2WkhUOqCT2hAaE1KXgRpO0FLXwEupgHzVjW10HY90We6JZd1
7IMD8yeBeCrYDBde/KRncW3IaT4TfRGXPaAqkNcAZq9QTjO3XRMvU8VcomvfdVWObh9MsFApPSvb
2S679QHMyeEVy7N6H1JqrbnZb96rveJJ4TRwVSea9iJdyoYft0cHACCRcdcv7d5k+JFhElR9Ud6v
m+TtimlyZQLZA/wifdEF0Bkr1ldkpIqXhP8aAM8/hRsfkh9z5tE6ogHx3oUTNjgqrsV2UKHs6I+S
t902SyhRqrAzhvtS/q6+rVUnBc0qXDgDkasne9ptQcB59lAOsw+D01KV8+5UfmEzXQFNf8Lr6Ghc
ZQg24ESvZQToXUQ/L1G9dj84+J1OiM0rff7Df1fsUktMK4B0eGw8Tu6HIov66DNCy9m1Z6nL7u4j
nHTs6LtY8K3yBAlwGlXbAvDuzkZ/EeDCnPbf3S3cDX9AnjyQnH7v8+qZUcUP8mF8DBkxly1APZi1
ZOTF0Yw0ZAamoLGCD+znBXSB8/ZeVxPvtP52Fkbb9We6y5cVMZv8xmYs92QhymkUw3j5RjUaNDQ2
DzaofgAQqqb379Mi5Ddhh6oaJhff/7zFZCxgh+GcoK5ccy2ogShYGB8FBtxT0NUyB5zPpM2z6nZM
Cd5fyKc1Ze2eN8CvzNUf8TPaWkEBU44+tiwBuaiDjdi/4AUgLmRKbnf2Mp4BauXs9Zfa/qKLvFKn
5hN7pdQHIZSQE7cw+1KS6Ddk6AllOdHki5zjOZEEbyohhTN43K66XBaC0enE7LmQoa6Wj107Aehl
Ebf8qxCKHMKmWNo1IqxjQ677GXUS0srh0t2CLE1UOQOJubUNNnJT5gsEwMApxCvUyQZqK5ugWMWC
Sr95HqsyIgXgJJCGm8puxJZfqJaNxhMLwniUWYnuQhf8QSB83j7eutXqahz3EMI1nsiI03ovK+F0
4dWBXMI1S9zjAnNkYTjMVi3pop/kKrTAYJ2+jN4UxzEe1DTTbeLbQEN13OvTgEeUWjojoJRYjNxn
ELY4ZIVfb5IuOWs4nbA74FuZWDmhn7iwh7VpZvfyKneMCmGIdqcCREIcSbnXnE6DxZRT9hG4eikQ
bwVyool+SgE+Z6X0ZCDF/K0ZeFAHE9714oJiqN6kfkK5DvUd/p5AWuF7M6SNj2rtoUmASKy0gMKf
6+WPHS6CZnhfN6ypl7MPpeQsnsKAevlCwyUOnKRGFNjD9+kb2F8Px1xr9/yvrGKFs3iSE7R075IP
/g+SkPm+2wdpCak48+YP48K/pHTC+aTAYQ/+5Ir4GekHef1fo+vpXtNhi/yhmJbT+Y9t63alRjJ7
bggPifjrw0UHLUNDW68eCPW8A1u6JSCvxRKvfuwtrruGpM759E+jUSWUWVtpmCT3Vm30hUJGbjXX
+pf7k2sZw5bn3R6+V+PTuIHQUpOseuWpj0iMQWRO1UHHnfExYTfUr5VfYsapDZ7ZVuhDI3KGRpFk
yn4Ogqf14EiSfAZKJWpKyTW0hoQKMjXsx/OkW7PUf/BwpQfQsIN7dD1DwQP6wn5sL9yNfPtkBGg/
SXWechleo+0VLX5RYWoAGnyjPqNEKzWYFf5aOX6kXGlgAfRsZpImw1RiQl9nTNR9M252YgOUfCWJ
2f4PLmXkCiUQcJvwUaC1bzxcGLK9oAL565occK2aAVMHSrJPWEfcDuUCoHFCBSPTqevT9SwLwe0K
yyeSdAKLjS4n0E5n4AqTbc3dh/V/ToOJ1LWmUmXV1+Luj54Dhvja7SHAH+riVOQxZ7Ex7yYosbGy
/4r87LD9hV4hTc+oK0cKlhn4De9YP12VIqZsO5CjuVFPZWHrbuzyfzBVlmGy6eDCWaCRJP994PLO
I5kQfGAJHUnRIQmUCnH0Wh7jLu0TiMbqpGnjKWrGgCbGmaap2YkbvkUm+TvHlGaOFjNNDxJvhr4M
Htv0xqpDTvt/Z0TXrf136EstBe/WC3LjdoflKzCWKl/mJwYVGMRzTQBJ1LApAzUUjQiWV5HaRzb3
BjOFGLyc9IpyYgA1qkyZnyXpuL+fNaGT7tIa+aNIPVUuXormjXilY2i6RxpT+tHsze4bXgkzhXH5
uhAPXETzKRr7IMO/3ML45r1dqbnzobZ1Ew7Ox7M9hTgtXFpjPApnbYfuG3YtsmckYQ1lYeFXt1qp
6axgDUC/X6jKJHVVLZ5vbCPR3/xQ+ccY81PMWnhVo/9y809NnOxW0c35nHRjeMIvm4i/CdQaqmZx
8BSZPx2/Qx0re0cbqiOrIivJqU3P6TGhW5Xniot/Frg8ZhLeh4nYSkxgYySResNTcJQ9a+ry0oxv
bpKwki8ABV7VLSxeR+NbLqOW9ZGIOETD/L44YSoujQ5J5IWJfkXc4CESItAGQjByXxWibdz5EpSZ
+UCxtLiOiFUCdC3vsqqhlPn8P9v7dgpyJhwAHBV1/+QCaVOvP3+4H+Aoz9wEpgTQ3LR2zdxm5P/u
DCGn2i3lR3bZ6nH6g+ousHkVjufbG6+K8MXFmYqi9k2kVdcglXM24nhg9C3ojVXwZ3Xo+JaT95uy
mDk5MSa1dvQNA1K5/S25pZvlTikuwYtNAnVQ5PmMCXVlDcBf0ZY0wb/w+gNpeL1iaT8MdU+32jry
9K+szJYRwrJ1oNSKpeqFbPXfg8pvJXS68tkZqnW/MmtPd4JqaIM3f8ZKZYJxZZH7imueKEawncHI
hdpP59zfNI6jjDEwRu1C7rC0A1dKCDXpzHccjrKGoOJopBDGQkVMvVBqa/lTQ37A00EFEa0PKpPU
0zQrVuqFgB54MEs/kOOGYsNEqHJDUZqCMmYlMXcNOv8JSYeazGnCjaXjO0bgq+l5nuyEgMKkOqNN
IMeZaDJcXmprUVS2QVYplqHp/ub12QQUBbX0qwzkejHWLF68TFSRrVE1T0TB8J5C1S7GUaYXD9dg
GsyxsH/LEyMdWvZUnfgBsWNKljLRIWq/T4YRU2jQFnFTOE0htyxlInYMs1QNGBBIp7xJPCZtKtHj
3+nH1kU4tUkE110LzYL1VxIUnuB8y4ek+Jm6+PeeXAE3ejDdXzy1FuM+8FFUHbaDUNsEYl8dW9W9
nx2CnmsahBJULX8aSPkZcaQIfx9hSCpuD3T8cdo+OKbkeMIbX90sPk6DIzRSYToWURdsYhtPdQR0
70/lIOfemajMhDE8AgO/P/nu46ym3lqzsLkOH6aUbhmzdB0VmEe6QP5Fk9JWww+aYjq8/m6GMTsi
6IIYjBtSYRbVodAk4MQjqTfkCWrxoul1f4bwFM3MhXtdq+XU3dBI/13U71UHyeajjpluYAoC1FHd
ISFye2aG170xgBwJb7Z5jPPB1TDlChT47FhKb3mbMXzhRn2jXcHMI3XVTotdiYrBAgQC2Azijggo
omr4VLqAV0g1K6vgI6PGqqtBKe1EOhpAce1tRaiqWa+9KTCEpSc5XEjDVJf+2Q+5oT67wo5FI/aQ
kiCnd+IAwrrXmIHF2aOKyXxzhGT0WCdT+YtWT9Fy1xu99/5lFgVPgSyX7+jg1GK+0N3HLy2E18W7
Y8m/fA9jQcO73l5a7Sfmpg0N8fxG+OoXb54ylacKCEUMK3ID5MpjFksO+XIZn+sg/oj3VtTE20ey
iJOikbemT+hK91+z3ETmirlsAiMsJqw+nuHakV+lQzwTPSW6nl42dB/prLgCYpjcGnaqG86FfduT
yGBgjilcPmijhtyisHeSvKWrJczT7YnGQJDLux/IvIcUFXsXd01NIkZQjoZRJ1Es5zg+JjikcT5d
zN3n5cQBZaA2DYdGDBbihNkFt2EGSsrTVmBe9sNehd2UFWKSVLJYAFYHLvSFmDDM+IRfUhdrSwYv
eihFhwG+M8cABy1VXB9KchvEM5jOnKwxAz+djmjNuGXDOBjVpkqJM2W5wqgZlEFDM3PXnx7MuNeM
dwMFGHlO0vhwoufICFa6k+Lms0hCuCVuZcqn/PrawifJ9uOFxeCpgvgk6wQurHq1NmpGD125q1NC
u4ES6sfIDCSoj0jYKuC5d9NGIVIgjVzI5TD4YiL8/PMyzEUoNII53G7vFd+JL3r+U4UbVbBCo1wr
frFi1ZT/g/2ZJuSsK98f2CUw5aXSSWGAC2TaoOM5y+lLxTNOPLTx9mZ/Sq531/I2e/kx0oTlKedS
+Kmu0wqlzYWb6YEMej0LwLAL7H7nIRsbK3V8GphbqjwUBlDPqj2PC+etzuiKx5qcmox8qT3d4yIN
8IDTahZNOxc9cdDlV3q+6kp5WPmXLAtNFUTee60T+iYOZTPBQe2V5+GiopRttgViVnMSIH0V9vXD
bs2++ax3xn26twA1/262rAHscThND5cd/Anp1jzw+6nJLSX+RsLekCoc6mBHRQVC+HoHc0WLoRpu
nQgQfKnZ3NNfS79628Sh0rAE9B16vhOvOcohB/Mlcvlb+LoWoOD3MgJiTHMrNdYXkf/hzafRvJ+Z
JUsyUfFSG0TK8zjB5kp8gw4Lg5tbRyYtVrvEavBh529wuh4Mf8TDrvE2pOytBxElLYrPednzxyrO
AKXj6eb3B9G360/To4XpfkAsjqyN+y43LuVTH2BTfctPQEYbyPa+CLBeqN8MqEQbt3Ha/NoWbcQc
rkNVIIRmVOYGrwhBJXm36ts5MorF6SZVaLltrmyTFwTSG1aANl1gwas8BTzXMwVJ/yVHp+Tmnv9m
jXbmihU0DzkOCGhnz2p880FsxBGyg+S2S1ntEj43dBX3ooXTf5CMPdDXyJLJuRT3kQaJm80AcSLE
GPI+QXGXnNwEIOGBZWAFQ9HrspxQYCagKR+TUFj3uMfztRNgxCjyyOIqg8iB/w5+viBDfhngtgEe
O94pbW6LwuMjdETsSF5IwkQkiZVnQW9yUyHKWz96jwLgNvbSE9FzNIKIPsBsaaNQ17znSGEncp1S
AFap3SCkrX1GQcLzD0v1XNOttjOyeABbzl+pkz7SgPOt2K8r0xL7i1+kIdgZjVp3xeD6eemBV7N0
F3LPJA46uyAf442UMgqGy3RnGahLe8doDpxWasK0xszy3LK+Q4XLjam8beTYvbX0URPB7UkpH+tb
8E2iyCOOIqYIb41wfci5/fg4dm3tK61SWIW5vZaqNS4fcEOrAvwLOGHHICwTQ/bKXVLEUW1TqiK7
I4rcqdn3L2oDPtOIlRH/Z05/aVdv3VJqOBF6E5+vJQOiKQSgXCkVMCuUFW7kqQIoM1rIZWf4cxmi
MqFs0j/vfF2FsafX8ykILzdeMPbhML1Fzc8cBJMSKdkXr7Py0qy0DRJAYCZVGnWX/EBb2FxhKapu
vv2IPh6IP1E/O9Sxqs5XAgib5KhK18/2dF86wXtoF1pj+7WfZzANTmnMAWq/c9QIiq24nEIHOvEQ
1E4nndDS+GUnJk0v09S9KoH+cGCtXfQ/OEtnwL8gx7eFN1bjwh+PZDIO5Bd2dynHYoAtfpK0W7rG
0GVb2Il/QQ+aBFh4zn3Jjgum9IMYYbtDFyBJFnC2IQc6d1KM0uuBxYXlTkpwtyWv6jdSUdIupjrD
LXapVTso2b8jh/2Hj4igfgKTKG/oSdpXSSJ03zrmrJ9760uMoZLrwqmU+QowCotcRzdmlPUrgPPM
lW9acTye3O6m8xZGWjCwR775AlT9XzhbfaffROyEiuNZqfH/WnQmfJvIOOn0tfW94BJ6a1x2UkVY
vH19ZiypHebBxhWlHhuJyENc57SWtYik3bmuBcGCWQ67+a+BvtQ+evuhQD0qyEbh/KEQNt6IWmJN
jXXfJnDApVp/LiBFjm37yVojvX16cA9aLBGeFkCo10Sb2NAqupfAzx7Dsc+XjM1mY+LjfyPF/5DE
KJms0Jw+OcCmQ0zW5tgEUf1IvAXups8SNpTLahtTsMfpk2ep1TXW1dVqxqCbyEeD+bx4lrGfM3Dq
MNyna7mr7E0qlQSTfSADTKNWa/MbPhE5jpVz8sQIZAL6j+aWUEotYfjV4Syt5hPu8SgQPO27eUZ3
XBt5d75nhDm1gE02gwgvBB502X8TqEos2jSGAHdX46rWxXbyzdDZ9xgFVBe+/wWnIbgoX8tFnSIT
8binwLf6j8ygnR1PWHMcWysImXaNFxYOg+EsWNRmFUBHrhul3uOuBsn5GgSghNtP1l6G+ELr47ac
/dBsahHF8lXwU1p1CmSGtyuONLuMnCKKldFJuBWLaTJ74blOM1r+jxFetN22JkcN0bRTgB8BrQEk
eViBscqeW7NvVsrMtLNQPHLiEcwee7tKEh8uytg/QYkoCqpi2mSf9LXliKGaqNtut+fFe75CsO5y
fGUes2soTAHghUu1AKbHuGZzZYXYSVzZI8FbsCvyrjSpAzAlFH2c0UKWJ+a6AMFxKxNaSmC0JQdH
qyvzOVLfwudxH7bEr8N18PQBW9pNZxU5CY2B3z5WeJAjnXjGvB7PasorifeguSD41mmH0lfdjN2Y
cNF0O9FSTFLZuWyM9SL9y94YkHbnEllhicdebXEXmTLt+l3XgQQ3nq69++LNbkh+JJQyr81K1PMF
zxFnJGr75Fpcue6hUYZvAagHnymNGNsIPAWA8aGid9tCutguB39MhzhIcVLkQTjeIWpCLyBW3At1
smi1D8j6sEsX52prFR7Alxdndbm0i/vRn3VEE+rWOBiykhXYxjJjtS2TGb0RT1OzCKF/KTOQYC/l
rFVFAEG5f5L0irnHt8fROvMhAcIHyJlsUD8FJHBgNOso06yqvYGBIa8xlqk9fKj7q+W/hHB48LbC
57tkwEC8EPQOqp/VMR/llsUlDD8twSbO18JzzDZWquVd+SCS2lndDSZMlbqsEm2VJ53dpe8ixJiX
LkVs+ThCpPBVemlvK7MjJ3+D5v9q26ro1Hao4LpD26NE4z9Oo7GIfmhEiy/GflCajnyCBFQa1qwB
AqkA7bZMEskjS5DmU7HFnMYJFKSpdfBYJPqtMZqUzZSqChVnsfga/aOhV3wWQSqtgQfPPbdC05Tt
KKnMhgpBsGh4Ag5EES+LuWWqO7NhKZCvdoJ27mVekFMJZJF3aQnR7RH6lVoUOsfjQALZxaQcSkpl
kYyo+3p643blEz1+9fRlT9aW+THxENWaxu0yBAYV1zUZs5usSNXpoPtoUClUrpfFBiSlXOzP33qn
m7TrKa5fUQE2+rvh79s9f6NgJgXvmBQ4acn1O341pcT9Bk1E9WrtDpvQ+hS3aDJGvZToKPEc53Yt
Pj/mLaP1xWh5GFZ4VpDvLNWLL8NGEXCVXDNPebX/FcwDbT4wgK8cIAozsXtuwAmUZhSAQTjmmM7R
mUrDok4PoU4WzuAFczz193PHx29eldVXkyjxWs7w/XNNkJMYPapOjKRnckGj6aAH+FZ8rjdl6KWp
BvxUF7naAEyw80Ex2S94EqqaMmwSzi42SXwwNNJfyZFeGpvDCpbI8z05LhNgVnBwIvM5riveBFTB
oWXv1mg2MLlOj/MvgSGOX5h78JGwA/xJEftAaLG9wTA374sTiZr7Zs7RvY3jfz1XQuiZFq61//yz
5oMrbWi6SN8saZkeLlc3BnpUSy8Q6V2xxaIFJ9v6LHOtgysvDNlokl34NnzYGLkdEkb0eJzFT4a6
Bb4u1ZHcKhFvV20grkfuekXnR9XqaNwLjmSTDYULNUOIqyQvfTnYgRf8JUey7bwAGOj6QOQkFOxW
DoM/dmdOztd3eyeHfpfS2k5iDNR0JI7hTADbLW9F0ovcwS9/utyQZD8QNGJaqHAago7tf8k5l5Ex
o8w8N7yibHoSw7DOCHe8amEOZcLfDvR+GF4MZ3MoOwAQnls9nSOU/1NO4ys96jJAHo9dMNqyDiH0
P7ALIq9yZwRZfiPFf7qrv8CMW7AZDf/GtXMf+CGYyrO48O6jEW8U/YSpxIs+KxtRoqcI7m0NBd3z
kc741QiEEg54DXJ3qX013hJGqoyLcLStTqcdbAr/PtNNez+km6BW5B9yT3ONNNtG9Kv8L4yrhy31
b1QHJ+QF9bb5mWcinTaUBhSONk/wlBHhwu34oK8GxoAz01VID3rhVETxjA5cwUH9qM980aeYigHf
xhDhjtcgI+x1qDZXOSyd3QKLaKoBVx97Y7PkY6yTt0Xh0J+EnNtafJp5SzXx8MwwhloaEp5xhXvJ
xIwrhA1Kt/Bcw1kE69IdBA664Lh17kkqRE/Bcm5leDUdrkRo+St4/CkjptZu8lB5vyNidqbHtK4q
uwhNtCcuMcUMUTD0sCDutBjIBO5tbWUXp2cHuE8oAB+dextPU2GiepGZTedcnEvwAwtnCev6Dhwe
nh2oZjhKhfF2tOJ+6jAtvtzX0Neo0+d9RY3/0TWriL8Qq5S1vwqxnHanE1KuLYXlihWfTHWC+1CL
AGNj5nw9//lgeNo0aCQBvBZoVS2+m7hhqQOGAmbWmsqQVSLt4Z0gC2g+kVw+3f4jHFP3UzoSU17d
C1sci3H7KXzYqIBtVL2SDr3rejYFoXvJ7+aUO7y5SO0xwakK4DL9mTlfkFnBc7X2qc0+7BYXjdRa
JiJrJTsngHfzIG2hXIzD8tUBf4WdQyeWQ0PnKqFSyz/NHNJltZZXBRqEJUMih6I5hYNAOuIlIMz3
Qq0ejY2ZfIMmLMxTGURb7B2QvNTLuzS4X9TXJ2pgP4/doK+G7NVhusmFHIF45vwoRSCseh0A3Mvh
tFzzeGfcEuqbhD75moFY3C6tx+6hIPUzpFceWOUVsVm6pZJcg06ciZAFULBTt9vtrChkLUytKGvW
cZPYXOANwyV9J17NIP4/z7zE8w3LTeWWrr86LEb0nf0pvGRd0u3kdxM4U8hyCNL+WvmNCRAzaciX
ZWZufF4+fhkhgVtfT/ZnWYv3JnoMppvxunKcHiCLtVVRebA6qIoT+lYZLwxzKOjARhtOYM0tmLFA
wsxTqGDXr8xI4GcDkQYle8i48lQ4xmvAWHHotvXzx+d5NlhxThj9vgzVbGujY4QItVvWxitSkUSz
4POSPZERqOQgH1yxlQ2Rk7JNaVzsBEIxgOYaIb0ckFDZ6pdq/1fAd/6mhq2FpHQlqjA2NrlpcQOR
z5Aww+WJZ6MF90IykyRe4an7Q6LEsNOOsokcceD+zOKReYDhkAbk1HRtZbMKWDpuwV2e2g6Ady/y
Y3KlOEGbD6BFjr4crXn7MsRwTVfJNqK7ueH4M4geUVib7uic3/KVHYdlHyW72wKXtEnhmQxfXspw
SV0SLIM8rrFgykKuiPSKlvGupF8ugGf74Vs2H9+cNdUpyba6tzPBcOVZj45/N9A/5h+G9k2dP3It
Kw49Das53Jpb/jZC98/ifP7v6eSFi3AT2itf6jkPn8/8s9115CcP0Z2JlWTMf/yAITYsptD9BVQe
HCotCfvXhuyLjo9F5dyWO0m0spS5XM5kDd1MUxs/b3V942urJDedCLLcZzjlzqbkLP4epE3njKND
y/hs0JweB2+aJ2LZQQhPaobs27X7niIilGjgd83rX7EYS1uWUe6f2te6qMI8q+uxb/UTIolU2D5S
A11q13k9QyrowdDziz3k4X7LMkEEhyyh4G3Ija3ldiQHCf8TsQUI2mzuab759bzHYFm+BuIHhBpQ
Ec+UWj+hvbX3uSmJ9vfrMGncj84zO1nG2RxsthsEtxdNE2JaxLAw40L/l5Uq1TKaBIbf4gOlauFk
agL7zKuE3H4XdlS5OP7FcNBXCON3FZ0Zig5h2B7qr/194W+j7avZWqu3HTq6txblDNcw7t9RbYvq
kj6+nQEl/yD+iEVzCvIy7ZKrP5wuGtfReA6MWGevdgfJ4S2Y/4ubcKC16LKXFFmBKUCrHiEaM3qZ
GH0nPC0PBcB4If3laN/4YXHDF05N+NCgvm/8rxv7zd6nOXrIY5ShuHegcIVNw7Ea8uG3K07pd9Ow
D8Zn4XClFZni4PjnCN9JdKdVp4DwcwdW3oo4U+2JA4xOAJR9tbupCIQXXfZ8Q2ijqLPpF7RJ3MZ3
HtF/vpI/X9n/pa+ANpzuSa/5/g4gYgOS6cgO6f+uI49qTKIJzoCP33+xHZ2VhcBbVE4XuctM9GZb
uKD/P0YDzwwjd04ir82W/J5FzT2OrAYGPFdqPZAvSI4w8vu4T7Q1s1ggHfA0TvjQiT3TTZVgtZt0
VEtmNt+1Zg2xumUHbUXlwuDkF8sLjAwLzDeMZGB4tJcJqz66et0RZ5ArNrAS9KLH5XHwEFt5ToVw
DFsMTe/BwMDBPOf+7rxs8z9yLoouiIKa6DE7FxyytGmb63XQhTCkx4a8sv3YYBnsJZdgLQFidOHE
wclgh7W3OVktAQQlEQ8Pm1Zr2f5u6313Q02Wbd1pZiiJKkuvrvN+IVdjPPpgQdbHygxCycLd3dGd
5h5AOpRh7JNoeMN4cY4lOlJlFqaKJnClPBFmE0sfZ9vTECRjP3W4gsP2BtH+fqfKJ+lTYyM3STso
9nZche1wK8woy4VETMkpcMFsgv/Z3zYkP6ajNgtX4Tf+ZW7zwPx+yWJStaYiSkTqEeUmQIXQV8jZ
976NePOn0SM0hflqA1T8ZI6Mo0jRwWgmNoBWrW/QNth/OZG3TYDmsd7UfQeBiBMo9oyDIOX9LYRG
TP/Zy5TeMlWa0eJEVdOXIU4FnFmstZ0LYDOeAiDZ/Kq3uKYOu3Gr2mzs6e8KBWb74MqeBJyrxboY
NiMgeiSVh2scj4mj6HGhfBtq44JEXwBzDkPPWEVxGaPI8UlV3J3qXd/NArfnlAg6+MjevWBOGZEr
OJOZWyF46ln8BYxvfcaHjrofH9oTJsBA/HJho1p5KQLb4hAoB8Koyz/SFZO/4NcCUj/BgBn74NIO
W6sQ2+VBpjvLPL5EGfDjCZvCrPp8zPUPjlW5r7zN23ehA6ruf4yxoUz7z3UMF5PC3ZgDQr/nD7ii
pIF7fwCYEetOxVp+uv1lza3btPccblSgfgkWjfLkYCXkTkzBsnV5hrg3d1c6OIig/GHutUz7Ubum
S7z2uKBQLWar9Zr/Gzlq16pogLIKprCpVMlM/8PuhbpaZaXpNIuVHXEa4GRqILhP54wxbogqWJ/D
AOPAkaw72M+3T2Aj3yR45FL/FNJKplgYxJcD1JucqlLn4ubi3cmFso04tnHWC+Ot2LIHK3JT+uyv
S865SojskE7zmpdnbvSudS3CxYbY2yuiTILtl2af1Rv/CfF8PJjJlrah1TjLpO7b4W8pWBdMzpGt
tK9pejNrYFNHhd6nvqwQpjE0vC3u9SUtcrmDnc7EahY2ikx+AVsEgv8VQoPzmKxf69ApTlMv4CVm
JAle2jUL/dbRq9ePHSyzTGbkf2u35QYXuT2Mo20Bir3agZ6AoAuzZzm36/+ZBo9voIwjk0kYIeCK
TZqXkqv3aHP8Wuattxxqi9CF/ifuUVyVoyjjndMd06xEG4OXTmNgnFjim513fT7XX7jvFg/YN4MJ
6hq3Vw4KuLAXsjshDUukiQK+ESAU5e619S82blHQ2eA+rkM7D+8U3IG3iDKMINobHwi+w01t4fsP
O3HjNN6r2xUG53Wryd1LrsY2ywOeNcN53SNmGdxkSLjcEH7e6z63Iyfqd2cQJHEn1KbiQGRbHiqS
dk63hyZjQdtz7T+NGbuajyV+w88wKCmXLZw92abkTLdq9PsNYZqLtkbovWVSQReBHNxINBCjzUJd
pbOc08VGj0xnPlFfOtlGo7gbwh43MeS06Sp1QSuYUbk/zpSBb3PQcjsdN492TdJdgivHXLfeYtQv
xwWa9KKW9+/xWfcyBU0ESqyoO4yQoro/tz8k07ZGI5kygy0qxNexXXc5kzxjLEplIhaqZIBEQL1e
gVX3kTT2YJVQpNnH7L8ItVO2TMeZFw+pbu2Wj+Jma75P44l/q7Ckx/OpuoVkMXKt+iylH1VinaaV
jq9s9INFCdWn8ecUgtg2qQKi7D/GXGXV42Inck9nOaIMqChRhs9J31INNE6eNK7BCpoiFhzmCLko
grRm1I8i63evfhYqkfwJzZAbeUj9qFVLy3WOfRs2g3yGhiXlrjF00NEQByLfPDmkRao7KXYms/FC
9RS0MW7K6fqQp02R3afXBHUlY+UMUoRu724R7fbgKmuAfaRo7EjT1bJ09xmUArulJhpCBE6CuCBN
vG6+uVe2CSpVoej1TZwVY/4IPg+J1vDn19c2Hsndpwqm0CPw4By6mbEk6cylII0Fya2JlAtq5TWk
jzNI7Lul4qTViZAW0TSXzI+MFCXz9FOYjNH9kSSaNleb3WPQU0guHoj3Ea/FOgJISowqhxLaVYG4
wZO9KDWS1aHIQcYIZ9K0k8rzXR7X/dWpjF93I192j92c/W5Wtla26H3WZt4MeFPIQc3HvbqG1upl
P//q4V4W4aB0x896aWpInkLCeM331MaSOYfaLwS2zcmWqKA2s/wr9zeKcc5DRCrnA5DpSJuRfJUv
zmxbIDqET+jUa9CFkKHXbTOx1mPDp/R2fOFX08I4Qmmz1Rscb2Dgi3XTZNtFJeIaIrRa8fxPcTEX
M8yEt0pdZnNcKVYVGaHUi0b8qsCIiBucnbntBzFZanLirh+vV0f4PbdRKXx346ke6dBPyPCwnp1k
Y5ZQJd1R6LhyNWTXpB3FufdCxm+B3m4TkDkrFKxISV53kROMezF5Q0pZqD1PZWXTB+D6cho+b9J5
yGFhgv+ZPyctXhmgsaZNXqmTj/1vfsqmbUJ1tEWPxCWtBOyH292vIf3fWUdljxubNf+EQ8hJZO7e
5PqnmGgCl5AeRD1toK9QG834ujjxkVVUwniQDIFijFOM5g3IVT4CtGr3mAwOxmsytXGP4JqFAAau
H4I/b8AgE+0HaYErqNpY2YoiON4L7+VWEjF/dl/eAvrkGOgGQ0jZwESQvirT4rHDuSdU21Ws6sY7
wW9aJSi7cS3B9XDgUAxJp18ebwc2KW+PWHFo0AyJ+KFDiOd9qOyFjxb9deQplmZBirF2fWt9Uehq
YbZuOisd0qUk48kFePnOXLTo+6/Nbu9MSpUDBjOFZTmXBC4XRsRID9iDsPL66i+L7PNTXO+qmVXA
i08T+mqVu3zT5sEdOD5oaG9eYiHoZsCvZcseC7fvM5AID33e0Dpma4H873Hu89MXvuAAw77zj8dS
zZe/McCwuuCbczTqVlJHTFHp/LtRKlPaWcmQZscxZje1+NUc08yT5LWIqNwFmh4ik/9HrNd6eA7s
X86kBi+V15BEdn5wACDrAoZfigl0tJW0CckrSQFz2ohgcn92xJIVk/X5xjF0VMmdGX47mEUG6wgG
YUTmYPqA6owSuv3ppzDCI2qQMlXggfSBxYXTSEgLfoXIvBZkWXJDUxB+n1qKW2YdOIZqzrDPn38C
SEmRW6ItInvOH4SBwJpyTMyXbEtrKWZKXgDXcX+VxxwjRcv2Fg+vAZbntlIBahBJHdrDPyNnpPWK
2kgpQHoFKW3iuIMNFXPQCBTttv9phAlWQBpGwo1ck4Ry2+VrVFti+qdi16Ao1j/lrcx59g5yW5K7
LCy4buKke0jFUnOM4ZErH76Oork6HYcdNnyAinqACHJqqmEnKf8aJbosthiYMVVYnIHwIYAQBv2J
14BEf0vLuXRK4ecRqmuoN+RamsRDMr8dPeb65F3VWePyHFnB95SN/sus+VFQ+hmvHI+HgmFkgnyB
b+2tfohOB0uR5LNyzv+DscznK7FT5/N4DtYKszKmC65X145/lGUebpfb+NuJrUqW/vVU689Jdu60
1OtTXjOv3DPXo3uAmYtrmyvAsnKAVYaEo4UJ7SQNXsRRQfDCiCZVw3Gx7saaXQmoLSSlaIKOzAfk
PmLzDI9XEElaAiSGjI1NKH+nF1jYetuYg8vQqI/T41NWs25MHZiFkOCO3bdcf52g6OddmVQifJOG
r6CjHjVnaazGZf3cfQdqzE21u2ioZf2CPruB4c0IBGycKv5cRY1iPLBDCSUaX7RBiZjqamd9RWP/
JMAy2V2YnVApnXWYBlw4y+3meRmoZNpmmkeUjt1jhaqtW6VoqUvekT9jjN9CMiB8n8yCIyqjLdhu
JlRXERhMsm1N68o7adJ6giL3Os0WUxEddguLsDaiHrGlxC678YLFYqhbzKmTPDfqnwYXlBz8CW+l
/oV4NZCKnVQw3bY+Pteyz+8zYYhzr87JrGdceOgM9JCOEaLURgWIMamvXoHNggkYaML9Z5bBl+u8
EZht3hBzoE6PVse2yxy4zZmqBqMqGyyqDXLPx/JHGuI03RemcUsYAtpXzngDaizubtdjuFrE+Sa4
GKqKP4MKyGcYPMJQAYrD81hrFrWlzZ//zDl5fa4b6mSJrw8b3kPeTvgJ5w0KEDhU0mhqYldUPTNT
lQH3N6SRV6FECrvM6fgyL7PYfdYfMw72ooJ0jgFk1oDsvat+j08B6FmWZcO4KS3EkvDLJjqZFdsz
X18RY4O98gx5YZhlavleUSjjtqxGFQspiilbXxlIc4iSUlgZ13we+tZZeQ68zCDtDM+eN3mnfUI5
uO4BENePTXx0cTNQFHOZvLPB/XiXLlPHg41PpElBH2uKOca1Qpi1zZpmVRSuVm/R6G5W7P/CoWI3
H3HXeuOWpsV7zm1773McOjIOzBzSKk7VtpeS8p1oN8/ZnYu2dnDa3EUIwVBAxHBsy26lv32lP8dR
jJzeiRIBiUsBkJkI4VbYHc92A1uucCyWZa5z4kUOR85OWUL2A8qtw018wNC9aXdNihcfnZl0fZXz
9O9eoSd7JuzBS3e1ZEwKMDReOmgXMjFpwh5PI69VTqRoIlXRq1I3Zm9ipe2NKnjVqE6R9v/XsGvW
AZiUwuaR+Avc4OrWW8/3sZZMYbtPR/LZiGC0BECdAgJxRId84P82xwvxdnQGN2AAlKjtUTOMXxEN
/oiZOHg2U4a1wfS1kuH61WuF0lBFWEYksnoQP6961t7QRSj9gM67X7PI5OyXu9f8S3yfsQcgtZjt
yzviHCa864Q/3kSWhaLPnqQe6PiONfm6DUcqxjJ0U/hIDm7Ty6OQcMpc9GygW3Go47NNl91+TVPK
1I3xV3H4pQAJGNJclZnM1Gv0Vqb3uU2BuAtX4fArP3Dj9GiqlPjLdpUqgDsaRIIKkI5a18lHi9ih
H3ibtG3P0dI17fLC7tDsmsMs+U9fHZMRCRQp3QIsgq5YWMQA8wgHoPoIAVRp2YazMlUInxTyOT/p
efyapWXigbEZUZr9EPqaRO0WxyaYbW1yfqYMHNwT8vWttxe9mOgpcIhLGDIft1CdOFBvsf5QMsSa
R0ALHmuJc2Jt8zY7lV7h9qbwMv6M0FlbxDGwOOP+7BnHcefKPpfjBf727MjEaU4m0JcihBZfGmYP
wo5sMj/4UMkSIi5IweW0jlkAcXukgIVoayYap2IP8vYZQev8xErlDgDA6/QVHNtZqgGznGQZCYbz
cq89j5jwakNYVaCdXwrtVlbptZveLxKR5vMkp3R+Y6d7lHjxTnBCXI36ovagDOmYXmWYWUlJZjW5
fDX8oCiEaDT3dEpF7yJ4bcnfqvFT52QF1mEqhMJINIoQrqGt8s231ji61hAlCkkexjTiNDZmyA1r
tQUwR4K/RimqY+Cxcl6b7n1dtSyRDIEq/Qnwka1wx4iGfPgmXGP//6AOmppudbAIbro5wy9cT4Lu
xBB9mWHAw4HTaVFokc1gON5X/HZ51VWFKwROupVqN221bgGYbPMVbKVeV+ASpF50QjeKlibn31Ma
usGonjRlNabfOBLYlfpRpU9gd+9c2OzkYsFHxTPcXtjlu4lenceM5eDCwmC8Ic/lNQ310Te32ZtW
ajrwKuQpTxd3jpL7KGXkqUsdQyIfPIwDbdi+cU5Mkek2w2U43ErcxHsYnTIfd/vOCU+oBOIIPKQ5
30xhdUT+SwPIsphZ7DUNc/L1OJtn745XzXMCPnEGBYCzNFqAQ7w9K5aAcLkQLP2H5d3Zc1N79UlM
W68IGCT5iID9OcJ+4FwBsnfHsOpjCdr9wbyT5u8CU8sD1vCf+4qPmX2sWavIRnCQU1+EOe13OGgt
pn7+FVefMF2oD8v9BiZ3DXXUJWVVw3FGKQR8EIVwscYfOko7m0ywQh5y9UMIKH4Oa7JgmmWsWTpk
IZNnaMgDu0uP3AlcRpL46+FXtgOQvW6XA7LIILsq/qL8AbOVt9ACpagRUIEKbAcervImCGj/83XO
fzXSPqGMBkgQJeHgKnjUmgKpguN1VbizcIOBR/ChrRkp4eJWXVGK8P8mk7pcUqhxY5yThddV4Nl5
066hcp+P0nReW247ZZNkIbr+EJgtMPdq43b9Kh54i21VDE4+/xotePuyAlvY6e+txJULbA3bfane
je0e5k3BqVc+mTtsyy/bbsAZ+KN21OU7NP87U+odiGaXehp/XPeJGdDXeoGFH5PuDUJ7QqyIiUKY
nc1cqVqY0O36TRq0Uu1S2EC+BSkgBN921lK7I2ffk+2prC+BC7nUkDzq/sE4TT4bR7GHnR7eKSD8
MDm5IYI7O9ncWvrUVhlenTsPbRTIy14mx5tt65B2KFd/X7lutHE1ma1hbuC4TfiRh+HikcSDLB0w
qn98z2B41KkeF4NkpJ2kZ4Lwn/VLoTlW5bDbEWmHSHrR5sXK7DnlOD+jIgakQiCTs5gBtciyI4Zv
itfefG1j+WnGjJCaYsHllH92fwJPwCFUOabVmOYZrtvYC4qNO0sy0AGRToMA8/QvYxoApnKGat1q
kT8uHyLjC6UL72ylATbR+y1yV7nETRJfmJkBpCe3URZflUOT8v76HI3p9w2+odOJcoUmN3QqezVI
AJ9OYeOHPSF8+XeU+2glIqk9HLIEzXJdFllNY8v/uXNy/1GsB7ldwzBw18OOlHuKa7AQ0PxHv63X
fqjn3rSout+oNtW+Ox0SQYdqhRrWv3sZFBQSxWhTHQr7kZuKFVnl/Fyw/Flgj87HErDJBfeGEvLW
0rBp4tOt0yAlenauAhvhNAl5fxvlU2KVfWb+XOH62UBFix6Qcm3xeC1nKmnc/W2U3FFJZD1Vs1dY
tZANxXN+OX4JOouoZrq0AwIBgXi/d07IYmGZgUEhSWJ3zySmxTgUfPy/VG2qTFgiNSHvpiu8hsES
HNK2uGatqqlgrX04nsA4M0aMte8XF5lWKkJIsWOWpBVQYklfLzYYPI4z2Mk7RsGXj71+N5numyzx
IzAbLZU+PReNUIiituoUITQgBJ+A9oj/4nkrYRHeAjTBIVIrb+TGXuts9zNbhTRKn3o8Nvyt2zOM
ZkOQUuuwp6zZMqdlCJjcy6oc6TiTnTidvXgTu7LETmUyzOGFl/KQIxjaAH2a6EPZNF4omJCD1li4
u9smHl355HlaI6oLSbzVh1wPN7zrjBePRnkE6BSrpvWqE5csJSEJNUEvEO+x2KkeMgtmsAJQYPRv
mUrbLHg5/+P1W3uiSjpdnteA/U2aSb0IbyxfVh7harcx80VFOckUqDlKb8zUMadbW97PrIGM5bDD
Nrr5SvnVpSbtaqKiG1tG9ofo5Ngpdq7i03PATiUm5ReJW9pVTOwT0E1oB0cnHIIhhtmoopuwN8kw
Y9Z15jJcppvhglQm3wqUiDjmWO1fezYrK6BnzaybqeR8d1vZESyTlbFVYohpxXVqHlr4pfZXdjnV
snu+NnN9FVlCnPLRQ70MzBTnBWocuulNnH7hRkXs46CsczDEOZjTJNiuPSy3qs4soSjneg1mGcVw
33bxfl00td872hKLEF46cKLgC079DF7k8mj81n7kGQhEPkeuYyS97qWIa4HWCmzfshF0YHXj3bvm
OEZxxRGxoJQx5zFDkRSG4PPMpP/RX7vD2ezX+Grpztg5/8JVRzmNXOUn6tQwe2cUwUSJ+zYLSGcZ
gBqFEujnH5PyAubheyAsQvT9K09ZZTJ+bwctWleYs8uWV0BvSU8uLEx73r/uWFDh44FZB7DZDsZL
1kI2+U7Lae0qZaCJIXwM5pgDrGMtlNNJ7tvKhkSQ9YhsQlZvrCWe7x/vwMNku0mUFqjalV++ntcn
WSmhWkJAYPZPqxUdw8KblXnDmSKW7VGpHo25K62wM3aNAgcyRAetEGwzCetaWJnF/ni7j5CHIWeP
0biCd0YklyQJt4UkdpizIXSIEoj0//M9qCq9AiIGDsOI1u7REVmv6Td7D+GPEDxMyplNxKMT95pL
w6/VrW1TEemvMesPz8l8CUj6RNRC7xPo+QK2vgNzHU5vIsOn8NParnjfWMl6hHapmOlhqm0xcY0p
7/LKdaxgbR0A/wlwUS4RPyqBeVYLArDd1W9rHtYEje/XYVV6Y87TCKRzLtMwtDgJFxr0xQtbFC/X
P54QJOXIg2+ArBs88nWQ8mlJ79WphHJj4dFS8sgQ0caYr33G+z8lKV5haQDf2yAdnlOV2evyDGkT
f/QjZVVOGkWaNU+afo4mmZVfsAzUJ0D+ePQz507UBwoq4ScLcEW5f5S4uGHNQti/heqGLa/QgJ+O
FjxgjDndxJQl66JTIK8kDTvsqJHVf2TWZDU+71i0S9hem7PB6uLctXvDLwg/DO7eYhFSNH4EawZw
54xMWjOjlRZuJzlzldImOFVRpw4Sx+MGSMMiWQEY7DqJXn8N4kNzmXSRD8oP8CdijK/oj6JbsGSa
9LbQAazpv+bavoB88BUoH7VcSu/NzOL3nlqV9GZ9kCIAcmd8+TaMbvfxXMzF+iB4EglZ/EDHyLVt
Wb45mpJc1eJU5gSocYbjFw9+fc2uH+ieb1IBzD9RaYzMhcpZlYdn4jL0sYORlhUIdS80/lqFdmlt
GX9fZOvSUMoJwPGmYpGbNchmZGv9+OhvqSpN6Z5d1FAbhyTTXbu4kkOk9jlGc5mJIa0wjpsXBEgw
oUk4jntmWCKpe0x1CcqP8xhWA0ujaGKmFtAI14gBagxISJ3sigAN/M28ZczeQjQa498tKnNig3mO
IScNgcEpxxg9aTYqO4xrLuZC/ocfzAFA6+foumPaa71QB3ZV4rXFvnxklicvY8bD1EAEPPfsXnid
xBJxXbjY4y+PkNkRtk6Ym6cZpElY/dWs2H68t3kmtf5b731i+mdv1Z5HBQwK92Myt1NpNxPu/ovH
Q2DWFs6u1dKEU3HyM1wswmNv6wQKrz9JWhAmrDVvX+335bQfnKrx96b/gReOmE9QK0H2LPRUG7GY
XF/EGzVIj41bLqVkkiFCkDYEtSSCZoZWbNLLKUytRPtpPtYFYaT+KiknEJQT+ho/ijwWz784hIVH
WEeY1UCr/GBJi9rRvGxpO019K2jHw/3bSY0Prb3wysok/adyib3te0HMm9wQzLwGP3qzYUF64Xzl
J46W+isxZeDgt3pH9PFizqPlCQpT46ms/aHtkA8NggfqY/PELIvyEIUa9xwRmRR2tAc+s+cSD3oW
lmraocjvU+CEH/PNSYHPehYXgJyeYKciQd63pBiCgt3mnCO8yx8SluObb/5zjDR+MdDjD10xRmQn
ooffYmIYTei8n4Rfvvl0LznSw/Sx6sUdw4owfPxx+b8YLxb2YP6So6oM6vUxXpMKTlcDOVzzB/XZ
BjOoqnvlWkB/Y1QLXAfx55W4d0UMd/c0tS9kdZe9PE7L8VkOeOwbOONwzxGgb2bnCHw/CY/NzZ/D
puoht37w8uYtVRmbrm+8jIVMRcM6z43gyA3FsAkbvDTxwhALzxImZ4dPOIUjDo1OgP1VBTiUx9yC
HmkSA5mP4YKOCxb2G2j/XB0txGTkF0sHNgy7oQGMYhkxkbDPuhgfw1QpyaCHnSi2QV2p7r0K1vIg
aF8JGmlQiRoeHrl10iwaTfGWjWr4B4QeLWXMenTm+UL+t6Dtx12s4JZL6TYkrzi+CllLrs6weH0C
F3COI6Le7mNVQSxa5o1pVlPXAZlxw3J0fftgX/mmEHyvPCb4GuaIXhNJMHKL8ySBad7XHoVW//MR
m3jmlfH58aNLlh4kD7EQVzq10IXEKoZJL/DkbLkteEJpeTke+fytIkftakMZPAweMho3Vy4qp71t
x/SZCnhKHH7wb1hu1aPBzJWKgyIFmVWkU97CRv7f1/WVzjaERbjB44bsX5z4e8mgKb8SZqhytd2A
SGK7HFF1zltjBW7I0SR1d6614BmmEUc6hrvbUKUt2p0/91C84y8fdWS3c8lyzlpNKahuCwJdjX7I
Is02x//5hSSUClVv6OrUASC/ly8x5xmDKR+8UB7OWFQYATsfI2Nn3Rrf6pY89gX+FGzN40xZERtf
qlUPajjuhgZSXCg5CNFtxGUz9Nmb3H4ZWhy5PeXyH9RaMPR6UY00VfCRLG8VksgN1RT/dccplNnV
q7Y1lz1Cd9sx2M6E0DtYX5JelEIVqNkLyrgXOretQkQBG16Fbc5qWW4tOPiHQ66UDwhte84L5V2U
Rdo+6We0NzqtKOEfPujgFu3ydFHNWjcimajpET7JNKN4u11Zfl4H3M6MS5ovBBBSePBK5QE4Jek3
oPHrqPylgaMpVIH1Eka99NfmrYK5Q4v2V2sh9mkxYE9ZgLE5hIhIR0K2ZOLQMvcqFqQHuz3487kG
YIWycoYsoJ+lhQro7fr3ydVNT9tLEgoHP8dwPGQduGco+RpCQRi3yrip2iIJkon6bZUQoRvbtsAb
EFGN+jEMME+MiuBTjpsKSTw/qY4WzwaYrjaOGaLqXtQbTnib6AAZjSYavqe0GM4urtGosypC4Z0L
3kboE4QYlzOARxCXr22Szh8Fw0kAW5M/yyjQM1IImEF1Hp6mGflGDA7yku8nC819VMQwLJ4h0FL8
viAK0tGZlbJD4t+UNNlpsCPatrWEGvSpbdBLYxaKzxiDyX1lw3tL/0mtfzImMQuICopgTlA5XL6F
KJjIwhX+fg85FQD9Z6PTiyMDnubjwiCYlLal6uiMFpJgV1g6620y/ezY4lhZrSQ+q9gbM0WeH/1N
cGS9xgDY+o+jwIAKo6/3x4KT0PQZZQhA0ddyHagJG1InUaz42hr49/2+P/KTAkjdpPYmjewMjzpO
Z8oYpvXasBUq8KRfWOIxywrKZ5IADDRM8JmrvY0pKNtz3+8PKw0bD1oXvZGBT4ImhcfwGbhlxVjG
MmQyHi2RPthzLtDmigMIJD73wfMzWO4raPqpFNhKatpwQM841emqPHVHff0ih1R0lbbz8Yb3d1lS
XAGD+jbFD1SU8uF7monQDGF5nnoVBvsdHWdZuKaxW6w5YJInLjtwncjgrxNmhAbD4BqA0bJ8YoHl
bBFJCtLCRzV1PwwDiX3LaByEDS12a7U1kjoe9KnHMPYls4gBCCI/vsHUUjGg19+ppb8B8UymzsXO
y7g2EZ7l4kpZfQjBCfEMrtvnLKH2DMcrbEP0nwU6ZpgGuLdF1H8wkbDRKcCl/ZHVcwxtrSYpeDpb
q9lu8JzxoVFgQwL8IlUwg8SWmTCCC85P42retL0xZOJNKFfxl0jjJVWRDsam2rnq0Yks9IYV9K5G
UdzDxwxvlfSD+Fx/pdh7O+UN3D8dkESiEoV4vZ1SImQB6RbsSASj+ZnoOKDeUHc1oKPDPRGPyCBn
WD9hQ6ajlsz888+/qY5X5b6LR0t7iXG5z+jdT/Ertv/xs34+EC4SFKvWzFN5IUEntSEY1WhbOiyn
Ddy61qxdy58TkIyBbqs96TWj4UXxZ79ko66jw0/bTqKM4KACAI0Y8rOa0mo0zCsdI3suOklSRfhU
rUAAMtUuHHWH/peoXfm8CRqyTajA/ogqN0L72UNq/aAq3Xpvpi002k0FyqdjgPXjyX+usoC+/5eu
C+476fDlPoiH5ZGPLEViVaFMYgDbB+AEG77rYUsPzNdzESxGKpxKyj8MFktpsCysRlA7WhtqFO8h
ImMfLnBgc8MVIk4EBgUGyHJju62pzJjyymi2QYmutyaGZqgSKEOo708XXiSNHv4oFE9oZnJixXAj
jl3/ZjXd1cApwcLxRIdyM/Dut8g5qAUUkB2O6hArUJsLgqUg9A5sbFwempg1Qsoscs1Zdy6pU/nQ
CKJRiTzszW/IxwA9eWXwVk1WapYOyYPBY3VQBCGxOaFe4nUDs2wn1Z7hdCV+O65BWbjBzm/hhGaO
yWYo+vPsAeN1uZSdAgCAFA8/uNPbMHtAa8/sNm8x5XVCi4UxRCphxpeVYzbZDWcdFujW4KbGDX3E
azKgkxwnyopbVoTMD4z6gfR7dO+PJpHOKUZMF8nLd6nKRkzXaVc1fiXjM2EVESR2fYs9/2i/+o6K
rifOPLlThaPMjrr4ZUe7guSwlzAGuD9vrtSwShrdDBrW0VrccwXWA0ug6uKX3q/zQcKyTgyXcB1z
a57RdlDJX5EIS3V9xwtAB6mHSHwm/GDMCZup2I5wh+j8qR94WJ46g0MCEk4FqqNwQKxUlkjo+zWI
8CVXpGe/c4GU4h/8tJuMEqYk8lA2tJari+CPodfHb4s5r+5DJ9CipimeLx3sd7EQOzoLm2ybpico
xonB8NNmvRTPzrLm8Bax1916ScA6nBAtsc5olTOpecrgGniKeTr8yk4AvpgV5Ng0LkGVIPdRLCII
8BdkMuJojrUYQXhA8EUiTwm0HHdXrG9kI/v/xsm9L4bH7KogDwqBuMudf0WV15HUuQH6zcLflodC
U+MIw0WqhnCCQQ3XWKyv2n7KZDOMv0ve/aMN+gs3MmL+kTKGPwpJrLWe3q0m7DGxxHYvSY962KaV
colS7qW0fBJTDCkcTp2BhokXTVD29m8xG9u0tfZN0/2NBvPlBz0kyAcBiPbtD26ZIMIVFUPlFOnu
J9x3tAo6H/PwBSrftpF453qCzuOZJH071fXr/ewDmfbMWiUW0WhMMbm/tbtGMDn9jRnbYnLf+aZP
Hdu7oXqpBPNFdwfbkhlmzD40Wd9soy8XYToHTcvzoE3iK6iZfEgcAs+mCdQlrcsbi0/IYSblpYcD
Zml7ppCgOdRyUHmgc947i2kYewVn7MTJrxqcqkX5XZbImXAjO2NOUHw7pbZFeRJc96evMhdSIRCh
J7XtGFSD9yWagcmW661ZdaRvWEZaS2cwDH5u/UtIwzk96qI+Xyoyzr2zn//sMHTO9mTw/XPidF7i
5K1yKLcZKkQWWMGHtQeJnXM2VURF7Mxo0PxSsHbGJ9JlLbHjHNAi3dbRX1eAiI8DVcmwLL+kILkb
JlA6ZZ1orWdPAjkOWsa/0P3OvvnfJZOI9NTRoDNhCx+JBpbD1DKtPrgO/q3uQTfFSzjo2Kz7HfEi
shJdTQ77KMd9PtLoDig4jV4YziXuIRoN8QJ/BmbrW8D7rhSTkWeJmRpKBTPtCE7ZutItUj37wJrB
ey0VriBkDfvemLe15+h4ZJStNgZB326bQ4VetZURQrmsrr2UsSuum6WLNxvi3di0bS27C/Kjnu0h
vvtzMZOGbY//rC8yQ55PrHJbegPcyIhHfSuomImRqKaC1wdGakN5TysYeGbUbrhWMHpp56tRWHoZ
K1bjunxvEE/e6u8A/o+XG7QXeGVjv4TuY3RzhdSmDkx3nmAlvjJHeKM6wAUVFVF27DlmdNsiMtIY
/vJYC6F1R64+svtuOtf2F97p9beBopxeq8n1gnDVsqfkra69xDZ9JGgqJRJH4ECaHEPh4LvgPBWT
qYqLvZqSD0DJtvUJ21ToM0V5uVitD0B8+g6Ivg5ojFJuFypffhFoG91L73KdluL2jr5UaWrtS90V
qa2OvcRO9xhbqPUWkZOSjDvBGRfoExMtULyz14zb69PD+3HVzsD+6ilDhsGNKTNnNJ8HCGqig1GP
sfqMgYvxuJELCq0tgmNCi7HBwXjeSVRZRyFqoozIK3hcMqZJ+B9+rdLw/82Y8Zxf2o7URN/Wr3pD
n579ARd88HcCZN4BOn4mzHPwS+KJloHOXAqSXhYyaPn5dWCeDicSxK0mJ0wahtgZqwpt3T/9Dd+j
x278TxLeBC0OLMoqE44yD/saqJMeqCmaJLrSTUfo+qteGeEkXmRtNMh5Ts4qg1Dfd2PlDwmpC+Rt
rCKzCemTEzVvUo3lWm1nxCE0ivwF021VuA1gST3+jaJ9FWdJ2wSMWN00mMewJ29YrX6W+5t6JBON
fw04pMpaXRdyCNDOJ/gNVb3aPFvtYzKVDViUBvxOhVjK3da+9l2yENrcUNWIYl/dbrR63MATl6bj
LAwVCU/YfSkrTFYtQbuH6fWdorRQ+XLJAgjmNCV3Nb6nFUe1bMeBkSFYI8Bd7LTFkzRhmrpkKMgJ
nb9OQVXLfOoCLk9PYDmktvkv4nL8M8TDHBEXO/RoNH8DstyErfKgyiTpm3z2foECivTrgR2CYcsI
L3A8CSdQbAgzeBSEg6UOWYUcu/3LCuuOTirgt8C8nh8GzCNvWHxXgmak0N83EyoHPJopiK1Xqc+0
Akjj2iCJg78QxHg3muN0ZQqq+1gXEAA5UQXEdcNbwQDhJHcoOjbEodCosItmEPlob5wg09olzFIA
uNM0XgtFYGHIHP+JzJYiqjhvrZc3AlPtvY+yGOphBv9FsZJahd83Gp0E71Ncs3cNkVu9xgn35LGq
mI7Dd/DSOI3oq/RoSfWc0kNmqGrLLFQeYaP1RP9FBYkBVw1pasmpWkRj+ZeW/bGAKxlb+IrXS9TY
UT0xRmilEy0GApi02dd6cKhDsrSx09bgTrHh52SwuXcYcICcrlGr5T43DlyzF56WyhEfX/q4dmqy
beefXC+8MC80OthD0j+X1iA09EAvhRgzeQOValxN7fVzQ4W/cli3WY1mlTJdC38Aa73ChJrjmoOx
8T6tqyE7tHmUbOEx2UC9UF5V7xnqeS49aUa24HjYjHrfAqKvSnsE2HR2SplFRbhbOtfwnATn0Fhv
5hZiS2zNs70QPw1kfmZQh/GRvyQ9I5SgY2/+McxxRf0PHe1L5gAQu21b5tv6ysKu2tukUoOuQdRb
1PWl/wWBpAL+glwAwP7Eky0HhYrHC9Tcqrp+C8aGyUXAj/9KDSyzJzwE+MhD5jRBp2wseRvwyLnO
L9myBlEfROfLmqEI7kS/UdiMo+bBRTzQEmICsANVKO1sBv7OpaD/msZv6e5f82QDLgoQlUepca/T
kA/qgZvIFWm36qcENhHLi1iclBX6nIv1aMi2d7QlpBWWESVBmNskUZqKXkUW93YasOAXrAJhvQm4
HEGPNKSgQ6HqOPnvp1UuKpakpLGaRS/EFVcZ5fwOASvpaPyLI5BiU3p2SaxD5xkgDmoXttG3ekhs
daVs9avvxQVvmq0xOTNLZMpYCa01rGiMTAXHg5uekE9L07DHitPU+aUOICIvnLJI8R+mZw6KXnfR
LfYBO7Rwhm94TIa6mm/0TpDBZSZk9Lit7GrPG+m84g5XVSVz8dei+nJjyaAnejDKjRB/AV4Iv9Z0
Wtw8mt6VY72OB/C7mgQT68quzT9jAXzRO7fCmNo6IU7CvIyIwaePMtVLfOOYL7JdgjEA9noJfoMl
ehpMiIT85yxBkJvIsZ5E+kUTGR26dwec0E1YjY2+ioX9tisOU1JGbaLP3cc/F5K3RRIxzgpmNMy5
y8oeSRIG/SU/xIVJQGrBQjiC6RfUJ3JvBSFg9u9cSQcYwsTVeKzbk4Qdca6prdzKEWqESgpXO7mh
mB982o+cV7Y3ROUNKDhLUR2Ucih3YFGwrekXKrWiaQcuKgWQDTeRd6qcd1YDdcReqPeTXhZypT9v
Y6XupXUNC0Nc9DjRCrh041cvtQ16bs1VxsnAMCeccMw36zpuJIZLqISdP+8B7uv3yL9h/F1sa4w2
97x2SSPLNNrfdPSzI0zaS7w/WjbqcWaCLpba5xa70CAz6OWuggiXwKy1NSQA5TbebV/NYLPIDsok
Deg/FpzIlBtIkCP8M0FioLLv1iSFlXSfBXp7XjNPkw5FllduxzO5Eal8bdvzwTohqglIyUly3gHw
P/QfdNvzu0xmUaTmBXCQ1oj7ULee1R+EEXXx1tBwmkCFFNQJ8g754D2d589reDhJciUKQh6Uf89X
nRvKxmPZ9NS2Qe7KQEGypp1II8BMgUCzOSHCFpjjeQJ4ZaRTE30yWsvRvzSQg23d/AcrNu/Grmvn
qRKYsF8c7CjEsYzvJO9dmtWlIkWzQzThyske8yQ6HhAV+C6dHjA8tsrkwu1oPOx6W7W0BWhLdoVs
WMfIKv32XX+9Zcq+e20rsr5NrpcnFihm8nqSPmEbjFrWLBHFpGPQFjv9Ul3NHNM8W0szYYM0Njc5
y03zXXlkhFW94ASxvR/TEvWLreL5g9iY6g3r7kvPij+fJ58ZNnVfmAHP7ngl1Gt6ev7Afpz8/gkN
qc4wRylldK5+Vx+nUoUBXayL3Y0R/NRuWX2dAnuNBotFkMfUoYr6pExQ4ho3qvwMAGC6KT0kx33C
nhxtWLtiJl8MCEQ90G6tB3XMGG956sMZ2kZb+Bo3VtphQyIZRIH8BmP3aThiZQISt/iglNE0fVkY
PrdQYUXGQ5zCFFsO2VJu2jHzZ2z9NGBatH7+XY5iu56Zu6Z2OHCvm13NxM0hoXEJmbCNT0cVgaVU
7LEXpg0nuGp8cDgIZSJhUQ7mO5cTeQAFF2lZFEH5LLR0ygtGIg+H4XBdO0Cd2hbniR3oVI3KgulY
uRhmVl1zsOKjotP3GpuMebteGqaRbC2jtmad3tVvjf0x+ep2eU2GMJ8upy4iWCud8SI/1dRFsbXZ
giWWZZy6QgpgBDjmAc4qeYWysaKg4NTNbyFd58A8K3j2bQ8AOgfS5G7/GK3DzyAy9a0k2qvmOKeT
9lRnIJ27vW05MGc2XjWXVLRHobmoB1SKFbKo1VMFqGumMgKekQZlVstAvwCB05mwWfV/Ql5bGGo7
neytgf6pGMvHIsNyc7TC93TUzn3hhsFABZMFtv6dFqKLLrEhRsnIQeg0CXv5OAJdnncfoEzysD5F
FMSLl9kpfBsGiVcsH1q3MC1fIslEbDMSpgqJ93SnhwLVD9yUUhay8+kRYO2WQ0Yh/Xv3bfAgQj4K
gSKjvsLuY17mdVGxCNpmlvCtznSzN1k22NfZvv67Fq1cXivUQapZukc6QRibMgYuthrpZPkvtF+G
wQk9+16gnqTzEyJrVvIvy1V+vfO2800vyykEZfQEhiEw6U10ITl8QJSafu+MrSSmZWtnREZgMJmC
Kyy1lTQCR4eyB+YRKJbamvctfVrlywLftIxTxCcgBcM7jI3reW8FOsSLeNoxQ0txDFMPyKj0Gs96
VNA6hvjJ9L14jEuEXifSlEhV6ILn6ZwSagZKdcnsSam6/YSmAB3CwfOAWwFV5s54iyViw+J4GyVS
/L56kZvMeKqMV5xFQhyiIeJU+hS2pRV7XL5xBYtEcj1N2oVO2kpEUE3TEyD2DcCqZv4z7ePQPtxu
36YIr+ni0QTkTI1hI4yOlLMII5SDx30msgtTS1fqqr6L9dGiXBHsrXHqi2O0n2Qj4EtFkPD2UZmp
JybwR5Rj4YfePCHvSHLWkpvdASzIHQleYe/kHn0aUIqLR0eu7OE7OHz+g8vJi6EFMWAb4Zv08Nor
iiBkdApl
`pragma protect end_protected
`ifndef GLBL
`define GLBL
`timescale  1 ps / 1 ps

module glbl ();

    parameter ROC_WIDTH = 100000;
    parameter TOC_WIDTH = 0;
    parameter GRES_WIDTH = 10000;
    parameter GRES_START = 10000;

//--------   STARTUP Globals --------------
    wire GSR;
    wire GTS;
    wire GWE;
    wire PRLD;
    wire GRESTORE;
    tri1 p_up_tmp;
    tri (weak1, strong0) PLL_LOCKG = p_up_tmp;

    wire PROGB_GLBL;
    wire CCLKO_GLBL;
    wire FCSBO_GLBL;
    wire [3:0] DO_GLBL;
    wire [3:0] DI_GLBL;
   
    reg GSR_int;
    reg GTS_int;
    reg PRLD_int;
    reg GRESTORE_int;

//--------   JTAG Globals --------------
    wire JTAG_TDO_GLBL;
    wire JTAG_TCK_GLBL;
    wire JTAG_TDI_GLBL;
    wire JTAG_TMS_GLBL;
    wire JTAG_TRST_GLBL;

    reg JTAG_CAPTURE_GLBL;
    reg JTAG_RESET_GLBL;
    reg JTAG_SHIFT_GLBL;
    reg JTAG_UPDATE_GLBL;
    reg JTAG_RUNTEST_GLBL;

    reg JTAG_SEL1_GLBL = 0;
    reg JTAG_SEL2_GLBL = 0 ;
    reg JTAG_SEL3_GLBL = 0;
    reg JTAG_SEL4_GLBL = 0;

    reg JTAG_USER_TDO1_GLBL = 1'bz;
    reg JTAG_USER_TDO2_GLBL = 1'bz;
    reg JTAG_USER_TDO3_GLBL = 1'bz;
    reg JTAG_USER_TDO4_GLBL = 1'bz;

    assign (strong1, weak0) GSR = GSR_int;
    assign (strong1, weak0) GTS = GTS_int;
    assign (weak1, weak0) PRLD = PRLD_int;
    assign (strong1, weak0) GRESTORE = GRESTORE_int;

    initial begin
	GSR_int = 1'b1;
	PRLD_int = 1'b1;
	#(ROC_WIDTH)
	GSR_int = 1'b0;
	PRLD_int = 1'b0;
    end

    initial begin
	GTS_int = 1'b1;
	#(TOC_WIDTH)
	GTS_int = 1'b0;
    end

    initial begin 
	GRESTORE_int = 1'b0;
	#(GRES_START);
	GRESTORE_int = 1'b1;
	#(GRES_WIDTH);
	GRESTORE_int = 1'b0;
    end

endmodule
`endif
