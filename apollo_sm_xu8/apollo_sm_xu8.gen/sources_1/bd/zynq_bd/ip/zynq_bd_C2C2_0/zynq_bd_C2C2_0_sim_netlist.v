// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// --------------------------------------------------------------------------------
// Tool Version: Vivado v.2023.2 (win64) Build 4029153 Fri Oct 13 20:14:34 MDT 2023
// Date        : Tue Jul 16 12:27:14 2024
// Host        : Thorntanker running 64-bit major release  (build 9200)
// Command     : write_verilog -force -mode funcsim -rename_top zynq_bd_C2C2_0 -prefix
//               zynq_bd_C2C2_0_ zynq_bd_C2C1_0_sim_netlist.v
// Design      : zynq_bd_C2C1_0
// Purpose     : This verilog netlist is a functional simulation representation of the design and should not be modified
//               or synthesized. This netlist cannot be used for SDF annotated simulation.
// Device      : xczu7ev-fbvb900-2-i
// --------------------------------------------------------------------------------
`timescale 1 ps / 1 ps

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* REG_OUTPUT = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) (* VERSION = "0" *) 
(* WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "GRAY" *) 
module zynq_bd_C2C2_0_xpm_cdc_gray
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [7:0]src_in_bin;
  input dest_clk;
  output [7:0]dest_out_bin;

  wire [7:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[2] ;
  wire [6:0]\^dest_out_bin ;
  wire [6:0]gray_enc;
  wire src_clk;
  wire [7:0]src_in_bin;

  assign dest_out_bin[7] = \dest_graysync_ff[2] [7];
  assign dest_out_bin[6:0] = \^dest_out_bin [6:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\^dest_out_bin [2]),
        .I2(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [2]),
        .O(\^dest_out_bin [1]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [4]),
        .I2(\dest_graysync_ff[2] [6]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .I5(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [6]),
        .I4(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  (* SOFT_HLUTNM = "soft_lutpair215" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair215" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair216" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair216" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair217" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair217" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[7]),
        .Q(async_path[7]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module zynq_bd_C2C2_0_xpm_cdc_gray__10
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [7:0]src_in_bin;
  input dest_clk;
  output [7:0]dest_out_bin;

  wire [7:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[2] ;
  wire [6:0]\^dest_out_bin ;
  wire [6:0]gray_enc;
  wire src_clk;
  wire [7:0]src_in_bin;

  assign dest_out_bin[7] = \dest_graysync_ff[2] [7];
  assign dest_out_bin[6:0] = \^dest_out_bin [6:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\^dest_out_bin [2]),
        .I2(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [2]),
        .O(\^dest_out_bin [1]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [4]),
        .I2(\dest_graysync_ff[2] [6]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .I5(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [6]),
        .I4(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  (* SOFT_HLUTNM = "soft_lutpair210" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair210" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair211" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair211" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair209" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair209" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[7]),
        .Q(async_path[7]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module zynq_bd_C2C2_0_xpm_cdc_gray__6
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [7:0]src_in_bin;
  input dest_clk;
  output [7:0]dest_out_bin;

  wire [7:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[2] ;
  wire [6:0]\^dest_out_bin ;
  wire [6:0]gray_enc;
  wire src_clk;
  wire [7:0]src_in_bin;

  assign dest_out_bin[7] = \dest_graysync_ff[2] [7];
  assign dest_out_bin[6:0] = \^dest_out_bin [6:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\^dest_out_bin [2]),
        .I2(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [2]),
        .O(\^dest_out_bin [1]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [4]),
        .I2(\dest_graysync_ff[2] [6]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .I5(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [6]),
        .I4(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  (* SOFT_HLUTNM = "soft_lutpair177" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair177" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair178" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair178" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair179" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair179" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[7]),
        .Q(async_path[7]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module zynq_bd_C2C2_0_xpm_cdc_gray__7
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [7:0]src_in_bin;
  input dest_clk;
  output [7:0]dest_out_bin;

  wire [7:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[2] ;
  wire [6:0]\^dest_out_bin ;
  wire [6:0]gray_enc;
  wire src_clk;
  wire [7:0]src_in_bin;

  assign dest_out_bin[7] = \dest_graysync_ff[2] [7];
  assign dest_out_bin[6:0] = \^dest_out_bin [6:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\^dest_out_bin [2]),
        .I2(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [2]),
        .O(\^dest_out_bin [1]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [4]),
        .I2(\dest_graysync_ff[2] [6]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .I5(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [6]),
        .I4(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  (* SOFT_HLUTNM = "soft_lutpair184" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair184" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair185" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair185" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair186" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair186" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[7]),
        .Q(async_path[7]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module zynq_bd_C2C2_0_xpm_cdc_gray__8
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [7:0]src_in_bin;
  input dest_clk;
  output [7:0]dest_out_bin;

  wire [7:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[2] ;
  wire [6:0]\^dest_out_bin ;
  wire [6:0]gray_enc;
  wire src_clk;
  wire [7:0]src_in_bin;

  assign dest_out_bin[7] = \dest_graysync_ff[2] [7];
  assign dest_out_bin[6:0] = \^dest_out_bin [6:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\^dest_out_bin [2]),
        .I2(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [2]),
        .O(\^dest_out_bin [1]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [4]),
        .I2(\dest_graysync_ff[2] [6]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .I5(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [6]),
        .I4(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  (* SOFT_HLUTNM = "soft_lutpair145" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair145" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair146" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair146" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair147" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair147" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[7]),
        .Q(async_path[7]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module zynq_bd_C2C2_0_xpm_cdc_gray__9
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [7:0]src_in_bin;
  input dest_clk;
  output [7:0]dest_out_bin;

  wire [7:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[2] ;
  wire [6:0]\^dest_out_bin ;
  wire [6:0]gray_enc;
  wire src_clk;
  wire [7:0]src_in_bin;

  assign dest_out_bin[7] = \dest_graysync_ff[2] [7];
  assign dest_out_bin[6:0] = \^dest_out_bin [6:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\^dest_out_bin [2]),
        .I2(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [2]),
        .O(\^dest_out_bin [1]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [4]),
        .I2(\dest_graysync_ff[2] [6]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .I5(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [6]),
        .I4(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  (* SOFT_HLUTNM = "soft_lutpair152" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair152" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair153" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair153" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair154" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair154" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[7]),
        .Q(async_path[7]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "5" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module zynq_bd_C2C2_0_xpm_cdc_gray__parameterized0
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[3] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[4] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[4] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [0]),
        .Q(\dest_graysync_ff[3] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [1]),
        .Q(\dest_graysync_ff[3] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [2]),
        .Q(\dest_graysync_ff[3] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [3]),
        .Q(\dest_graysync_ff[3] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [4]),
        .Q(\dest_graysync_ff[3] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [5]),
        .Q(\dest_graysync_ff[3] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [6]),
        .Q(\dest_graysync_ff[3] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [7]),
        .Q(\dest_graysync_ff[3] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [8]),
        .Q(\dest_graysync_ff[3] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [0]),
        .Q(\dest_graysync_ff[4] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [1]),
        .Q(\dest_graysync_ff[4] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [2]),
        .Q(\dest_graysync_ff[4] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [3]),
        .Q(\dest_graysync_ff[4] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [4]),
        .Q(\dest_graysync_ff[4] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [5]),
        .Q(\dest_graysync_ff[4] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [6]),
        .Q(\dest_graysync_ff[4] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [7]),
        .Q(\dest_graysync_ff[4] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [8]),
        .Q(\dest_graysync_ff[4] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[4] [0]),
        .I1(\dest_graysync_ff[4] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[4] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[4] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[4] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[4] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[4] [3]),
        .I1(\dest_graysync_ff[4] [5]),
        .I2(\dest_graysync_ff[4] [7]),
        .I3(\dest_graysync_ff[4] [8]),
        .I4(\dest_graysync_ff[4] [6]),
        .I5(\dest_graysync_ff[4] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[4] [4]),
        .I1(\dest_graysync_ff[4] [6]),
        .I2(\dest_graysync_ff[4] [8]),
        .I3(\dest_graysync_ff[4] [7]),
        .I4(\dest_graysync_ff[4] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[4] [5]),
        .I1(\dest_graysync_ff[4] [7]),
        .I2(\dest_graysync_ff[4] [8]),
        .I3(\dest_graysync_ff[4] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[4] [6]),
        .I1(\dest_graysync_ff[4] [8]),
        .I2(\dest_graysync_ff[4] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[4] [7]),
        .I1(\dest_graysync_ff[4] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair213" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair213" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair214" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair214" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair212" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair212" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "5" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module zynq_bd_C2C2_0_xpm_cdc_gray__parameterized0__3
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[3] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[4] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[4] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [0]),
        .Q(\dest_graysync_ff[3] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [1]),
        .Q(\dest_graysync_ff[3] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [2]),
        .Q(\dest_graysync_ff[3] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [3]),
        .Q(\dest_graysync_ff[3] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [4]),
        .Q(\dest_graysync_ff[3] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [5]),
        .Q(\dest_graysync_ff[3] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [6]),
        .Q(\dest_graysync_ff[3] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [7]),
        .Q(\dest_graysync_ff[3] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [8]),
        .Q(\dest_graysync_ff[3] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [0]),
        .Q(\dest_graysync_ff[4] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [1]),
        .Q(\dest_graysync_ff[4] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [2]),
        .Q(\dest_graysync_ff[4] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [3]),
        .Q(\dest_graysync_ff[4] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [4]),
        .Q(\dest_graysync_ff[4] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [5]),
        .Q(\dest_graysync_ff[4] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [6]),
        .Q(\dest_graysync_ff[4] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [7]),
        .Q(\dest_graysync_ff[4] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [8]),
        .Q(\dest_graysync_ff[4] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[4] [0]),
        .I1(\dest_graysync_ff[4] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[4] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[4] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[4] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[4] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[4] [3]),
        .I1(\dest_graysync_ff[4] [5]),
        .I2(\dest_graysync_ff[4] [7]),
        .I3(\dest_graysync_ff[4] [8]),
        .I4(\dest_graysync_ff[4] [6]),
        .I5(\dest_graysync_ff[4] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[4] [4]),
        .I1(\dest_graysync_ff[4] [6]),
        .I2(\dest_graysync_ff[4] [8]),
        .I3(\dest_graysync_ff[4] [7]),
        .I4(\dest_graysync_ff[4] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[4] [5]),
        .I1(\dest_graysync_ff[4] [7]),
        .I2(\dest_graysync_ff[4] [8]),
        .I3(\dest_graysync_ff[4] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[4] [6]),
        .I1(\dest_graysync_ff[4] [8]),
        .I2(\dest_graysync_ff[4] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[4] [7]),
        .I1(\dest_graysync_ff[4] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair180" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair180" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair181" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair181" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair182" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair182" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair183" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair183" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "5" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module zynq_bd_C2C2_0_xpm_cdc_gray__parameterized0__4
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[3] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[4] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[4] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [0]),
        .Q(\dest_graysync_ff[3] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [1]),
        .Q(\dest_graysync_ff[3] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [2]),
        .Q(\dest_graysync_ff[3] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [3]),
        .Q(\dest_graysync_ff[3] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [4]),
        .Q(\dest_graysync_ff[3] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [5]),
        .Q(\dest_graysync_ff[3] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [6]),
        .Q(\dest_graysync_ff[3] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [7]),
        .Q(\dest_graysync_ff[3] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [8]),
        .Q(\dest_graysync_ff[3] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [0]),
        .Q(\dest_graysync_ff[4] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [1]),
        .Q(\dest_graysync_ff[4] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [2]),
        .Q(\dest_graysync_ff[4] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [3]),
        .Q(\dest_graysync_ff[4] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [4]),
        .Q(\dest_graysync_ff[4] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [5]),
        .Q(\dest_graysync_ff[4] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [6]),
        .Q(\dest_graysync_ff[4] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [7]),
        .Q(\dest_graysync_ff[4] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [8]),
        .Q(\dest_graysync_ff[4] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[4] [0]),
        .I1(\dest_graysync_ff[4] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[4] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[4] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[4] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[4] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[4] [3]),
        .I1(\dest_graysync_ff[4] [5]),
        .I2(\dest_graysync_ff[4] [7]),
        .I3(\dest_graysync_ff[4] [8]),
        .I4(\dest_graysync_ff[4] [6]),
        .I5(\dest_graysync_ff[4] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[4] [4]),
        .I1(\dest_graysync_ff[4] [6]),
        .I2(\dest_graysync_ff[4] [8]),
        .I3(\dest_graysync_ff[4] [7]),
        .I4(\dest_graysync_ff[4] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[4] [5]),
        .I1(\dest_graysync_ff[4] [7]),
        .I2(\dest_graysync_ff[4] [8]),
        .I3(\dest_graysync_ff[4] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[4] [6]),
        .I1(\dest_graysync_ff[4] [8]),
        .I2(\dest_graysync_ff[4] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[4] [7]),
        .I1(\dest_graysync_ff[4] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair148" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair148" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair149" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair149" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair150" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair150" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair151" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair151" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module zynq_bd_C2C2_0_xpm_cdc_gray__parameterized1
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[2] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .I5(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair220" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair220" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair219" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair219" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair218" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair218" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module zynq_bd_C2C2_0_xpm_cdc_gray__parameterized1__10
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[2] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .I5(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair316" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair316" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair315" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair315" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair317" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair317" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair318" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair318" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module zynq_bd_C2C2_0_xpm_cdc_gray__parameterized1__11
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[2] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .I5(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair253" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair253" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair254" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair254" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair255" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair255" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair256" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair256" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module zynq_bd_C2C2_0_xpm_cdc_gray__parameterized1__12
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[2] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .I5(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair262" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair262" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair261" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair261" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair263" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair263" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair264" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair264" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module zynq_bd_C2C2_0_xpm_cdc_gray__parameterized1__7
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[2] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .I5(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair189" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair189" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair188" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair188" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair187" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair187" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module zynq_bd_C2C2_0_xpm_cdc_gray__parameterized1__8
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[2] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .I5(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair157" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair157" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair156" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair156" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair155" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair155" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module zynq_bd_C2C2_0_xpm_cdc_gray__parameterized1__9
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[2] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .I5(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair307" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair307" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair308" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair308" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair309" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair309" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair310" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair310" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "5" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "10" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module zynq_bd_C2C2_0_xpm_cdc_gray__parameterized2
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [9:0]src_in_bin;
  input dest_clk;
  output [9:0]dest_out_bin;

  wire [9:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[2] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[3] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[4] ;
  wire [8:0]\^dest_out_bin ;
  wire [8:0]gray_enc;
  wire src_clk;
  wire [9:0]src_in_bin;

  assign dest_out_bin[9] = \dest_graysync_ff[4] [9];
  assign dest_out_bin[8:0] = \^dest_out_bin [8:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[9]),
        .Q(\dest_graysync_ff[0] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [9]),
        .Q(\dest_graysync_ff[1] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [9]),
        .Q(\dest_graysync_ff[2] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [0]),
        .Q(\dest_graysync_ff[3] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [1]),
        .Q(\dest_graysync_ff[3] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [2]),
        .Q(\dest_graysync_ff[3] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [3]),
        .Q(\dest_graysync_ff[3] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [4]),
        .Q(\dest_graysync_ff[3] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [5]),
        .Q(\dest_graysync_ff[3] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [6]),
        .Q(\dest_graysync_ff[3] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [7]),
        .Q(\dest_graysync_ff[3] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [8]),
        .Q(\dest_graysync_ff[3] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [9]),
        .Q(\dest_graysync_ff[3] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [0]),
        .Q(\dest_graysync_ff[4] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [1]),
        .Q(\dest_graysync_ff[4] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [2]),
        .Q(\dest_graysync_ff[4] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [3]),
        .Q(\dest_graysync_ff[4] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [4]),
        .Q(\dest_graysync_ff[4] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [5]),
        .Q(\dest_graysync_ff[4] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [6]),
        .Q(\dest_graysync_ff[4] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [7]),
        .Q(\dest_graysync_ff[4] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [8]),
        .Q(\dest_graysync_ff[4] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [9]),
        .Q(\dest_graysync_ff[4] [9]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[4] [0]),
        .I1(\dest_graysync_ff[4] [2]),
        .I2(\^dest_out_bin [4]),
        .I3(\dest_graysync_ff[4] [3]),
        .I4(\dest_graysync_ff[4] [1]),
        .O(\^dest_out_bin [0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[4] [1]),
        .I1(\dest_graysync_ff[4] [3]),
        .I2(\^dest_out_bin [4]),
        .I3(\dest_graysync_ff[4] [2]),
        .O(\^dest_out_bin [1]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[4] [2]),
        .I1(\^dest_out_bin [4]),
        .I2(\dest_graysync_ff[4] [3]),
        .O(\^dest_out_bin [2]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[4] [3]),
        .I1(\^dest_out_bin [4]),
        .O(\^dest_out_bin [3]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[4] [4]),
        .I1(\dest_graysync_ff[4] [6]),
        .I2(\dest_graysync_ff[4] [8]),
        .I3(\dest_graysync_ff[4] [9]),
        .I4(\dest_graysync_ff[4] [7]),
        .I5(\dest_graysync_ff[4] [5]),
        .O(\^dest_out_bin [4]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[4] [5]),
        .I1(\dest_graysync_ff[4] [7]),
        .I2(\dest_graysync_ff[4] [9]),
        .I3(\dest_graysync_ff[4] [8]),
        .I4(\dest_graysync_ff[4] [6]),
        .O(\^dest_out_bin [5]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[4] [6]),
        .I1(\dest_graysync_ff[4] [8]),
        .I2(\dest_graysync_ff[4] [9]),
        .I3(\dest_graysync_ff[4] [7]),
        .O(\^dest_out_bin [6]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[4] [7]),
        .I1(\dest_graysync_ff[4] [9]),
        .I2(\dest_graysync_ff[4] [8]),
        .O(\^dest_out_bin [7]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[8]_INST_0 
       (.I0(\dest_graysync_ff[4] [8]),
        .I1(\dest_graysync_ff[4] [9]),
        .O(\^dest_out_bin [8]));
  (* SOFT_HLUTNM = "soft_lutpair257" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair257" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair258" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair258" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair259" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair259" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair260" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair260" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[8]_i_1 
       (.I0(src_in_bin[9]),
        .I1(src_in_bin[8]),
        .O(gray_enc[8]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[8]),
        .Q(async_path[8]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[9] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[9]),
        .Q(async_path[9]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "5" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "10" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module zynq_bd_C2C2_0_xpm_cdc_gray__parameterized2__2
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [9:0]src_in_bin;
  input dest_clk;
  output [9:0]dest_out_bin;

  wire [9:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[2] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[3] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[4] ;
  wire [8:0]\^dest_out_bin ;
  wire [8:0]gray_enc;
  wire src_clk;
  wire [9:0]src_in_bin;

  assign dest_out_bin[9] = \dest_graysync_ff[4] [9];
  assign dest_out_bin[8:0] = \^dest_out_bin [8:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[9]),
        .Q(\dest_graysync_ff[0] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [9]),
        .Q(\dest_graysync_ff[1] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [9]),
        .Q(\dest_graysync_ff[2] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [0]),
        .Q(\dest_graysync_ff[3] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [1]),
        .Q(\dest_graysync_ff[3] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [2]),
        .Q(\dest_graysync_ff[3] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [3]),
        .Q(\dest_graysync_ff[3] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [4]),
        .Q(\dest_graysync_ff[3] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [5]),
        .Q(\dest_graysync_ff[3] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [6]),
        .Q(\dest_graysync_ff[3] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [7]),
        .Q(\dest_graysync_ff[3] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [8]),
        .Q(\dest_graysync_ff[3] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [9]),
        .Q(\dest_graysync_ff[3] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [0]),
        .Q(\dest_graysync_ff[4] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [1]),
        .Q(\dest_graysync_ff[4] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [2]),
        .Q(\dest_graysync_ff[4] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [3]),
        .Q(\dest_graysync_ff[4] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [4]),
        .Q(\dest_graysync_ff[4] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [5]),
        .Q(\dest_graysync_ff[4] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [6]),
        .Q(\dest_graysync_ff[4] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [7]),
        .Q(\dest_graysync_ff[4] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [8]),
        .Q(\dest_graysync_ff[4] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [9]),
        .Q(\dest_graysync_ff[4] [9]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[4] [0]),
        .I1(\dest_graysync_ff[4] [2]),
        .I2(\^dest_out_bin [4]),
        .I3(\dest_graysync_ff[4] [3]),
        .I4(\dest_graysync_ff[4] [1]),
        .O(\^dest_out_bin [0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[4] [1]),
        .I1(\dest_graysync_ff[4] [3]),
        .I2(\^dest_out_bin [4]),
        .I3(\dest_graysync_ff[4] [2]),
        .O(\^dest_out_bin [1]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[4] [2]),
        .I1(\^dest_out_bin [4]),
        .I2(\dest_graysync_ff[4] [3]),
        .O(\^dest_out_bin [2]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[4] [3]),
        .I1(\^dest_out_bin [4]),
        .O(\^dest_out_bin [3]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[4] [4]),
        .I1(\dest_graysync_ff[4] [6]),
        .I2(\dest_graysync_ff[4] [8]),
        .I3(\dest_graysync_ff[4] [9]),
        .I4(\dest_graysync_ff[4] [7]),
        .I5(\dest_graysync_ff[4] [5]),
        .O(\^dest_out_bin [4]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[4] [5]),
        .I1(\dest_graysync_ff[4] [7]),
        .I2(\dest_graysync_ff[4] [9]),
        .I3(\dest_graysync_ff[4] [8]),
        .I4(\dest_graysync_ff[4] [6]),
        .O(\^dest_out_bin [5]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[4] [6]),
        .I1(\dest_graysync_ff[4] [8]),
        .I2(\dest_graysync_ff[4] [9]),
        .I3(\dest_graysync_ff[4] [7]),
        .O(\^dest_out_bin [6]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[4] [7]),
        .I1(\dest_graysync_ff[4] [9]),
        .I2(\dest_graysync_ff[4] [8]),
        .O(\^dest_out_bin [7]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[8]_INST_0 
       (.I0(\dest_graysync_ff[4] [8]),
        .I1(\dest_graysync_ff[4] [9]),
        .O(\^dest_out_bin [8]));
  (* SOFT_HLUTNM = "soft_lutpair311" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair311" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair312" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair312" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair313" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair313" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair314" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair314" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[8]_i_1 
       (.I0(src_in_bin[9]),
        .I1(src_in_bin[8]),
        .O(gray_enc[8]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[8]),
        .Q(async_path[8]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[9] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[9]),
        .Q(async_path[9]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "10" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module zynq_bd_C2C2_0_xpm_cdc_gray__parameterized3
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [9:0]src_in_bin;
  input dest_clk;
  output [9:0]dest_out_bin;

  wire [9:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[2] ;
  wire [8:0]\^dest_out_bin ;
  wire [8:0]gray_enc;
  wire src_clk;
  wire [9:0]src_in_bin;

  assign dest_out_bin[9] = \dest_graysync_ff[2] [9];
  assign dest_out_bin[8:0] = \^dest_out_bin [8:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[9]),
        .Q(\dest_graysync_ff[0] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [9]),
        .Q(\dest_graysync_ff[1] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [9]),
        .Q(\dest_graysync_ff[2] [9]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [4]),
        .I3(\dest_graysync_ff[2] [3]),
        .I4(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\dest_graysync_ff[2] [3]),
        .I2(\^dest_out_bin [4]),
        .I3(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [4]),
        .I2(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\^dest_out_bin [4]),
        .O(\^dest_out_bin [3]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [9]),
        .I4(\dest_graysync_ff[2] [7]),
        .I5(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [9]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [9]),
        .I3(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [9]),
        .I2(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[8]_INST_0 
       (.I0(\dest_graysync_ff[2] [8]),
        .I1(\dest_graysync_ff[2] [9]),
        .O(\^dest_out_bin [8]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair268" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair268" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair267" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair267" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair266" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair266" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair265" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  (* SOFT_HLUTNM = "soft_lutpair265" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[8]_i_1 
       (.I0(src_in_bin[9]),
        .I1(src_in_bin[8]),
        .O(gray_enc[8]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[8]),
        .Q(async_path[8]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[9] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[9]),
        .Q(async_path[9]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "10" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module zynq_bd_C2C2_0_xpm_cdc_gray__parameterized3__2
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [9:0]src_in_bin;
  input dest_clk;
  output [9:0]dest_out_bin;

  wire [9:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[2] ;
  wire [8:0]\^dest_out_bin ;
  wire [8:0]gray_enc;
  wire src_clk;
  wire [9:0]src_in_bin;

  assign dest_out_bin[9] = \dest_graysync_ff[2] [9];
  assign dest_out_bin[8:0] = \^dest_out_bin [8:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[9]),
        .Q(\dest_graysync_ff[0] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [9]),
        .Q(\dest_graysync_ff[1] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [9]),
        .Q(\dest_graysync_ff[2] [9]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [4]),
        .I3(\dest_graysync_ff[2] [3]),
        .I4(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\dest_graysync_ff[2] [3]),
        .I2(\^dest_out_bin [4]),
        .I3(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [4]),
        .I2(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\^dest_out_bin [4]),
        .O(\^dest_out_bin [3]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [9]),
        .I4(\dest_graysync_ff[2] [7]),
        .I5(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [9]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [9]),
        .I3(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [9]),
        .I2(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[8]_INST_0 
       (.I0(\dest_graysync_ff[2] [8]),
        .I1(\dest_graysync_ff[2] [9]),
        .O(\^dest_out_bin [8]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair322" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair322" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair321" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair321" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair320" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair320" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair319" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  (* SOFT_HLUTNM = "soft_lutpair319" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[8]_i_1 
       (.I0(src_in_bin[9]),
        .I1(src_in_bin[8]),
        .O(gray_enc[8]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[8]),
        .Q(async_path[8]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[9] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[9]),
        .Q(async_path[9]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "4" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module zynq_bd_C2C2_0_xpm_cdc_gray__parameterized4
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [3:0]src_in_bin;
  input dest_clk;
  output [3:0]dest_out_bin;

  wire [3:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[2] ;
  wire [2:0]\^dest_out_bin ;
  wire [2:0]gray_enc;
  wire src_clk;
  wire [3:0]src_in_bin;

  assign dest_out_bin[3] = \dest_graysync_ff[2] [3];
  assign dest_out_bin[2:0] = \^dest_out_bin [2:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\dest_graysync_ff[2] [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\dest_graysync_ff[2] [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[3]),
        .Q(async_path[3]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "4" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module zynq_bd_C2C2_0_xpm_cdc_gray__parameterized4__4
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [3:0]src_in_bin;
  input dest_clk;
  output [3:0]dest_out_bin;

  wire [3:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[2] ;
  wire [2:0]\^dest_out_bin ;
  wire [2:0]gray_enc;
  wire src_clk;
  wire [3:0]src_in_bin;

  assign dest_out_bin[3] = \dest_graysync_ff[2] [3];
  assign dest_out_bin[2:0] = \^dest_out_bin [2:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\dest_graysync_ff[2] [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\dest_graysync_ff[2] [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[3]),
        .Q(async_path[3]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "4" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module zynq_bd_C2C2_0_xpm_cdc_gray__parameterized4__5
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [3:0]src_in_bin;
  input dest_clk;
  output [3:0]dest_out_bin;

  wire [3:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[2] ;
  wire [2:0]\^dest_out_bin ;
  wire [2:0]gray_enc;
  wire src_clk;
  wire [3:0]src_in_bin;

  assign dest_out_bin[3] = \dest_graysync_ff[2] [3];
  assign dest_out_bin[2:0] = \^dest_out_bin [2:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\dest_graysync_ff[2] [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\dest_graysync_ff[2] [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[3]),
        .Q(async_path[3]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "4" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module zynq_bd_C2C2_0_xpm_cdc_gray__parameterized4__6
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [3:0]src_in_bin;
  input dest_clk;
  output [3:0]dest_out_bin;

  wire [3:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[2] ;
  wire [2:0]\^dest_out_bin ;
  wire [2:0]gray_enc;
  wire src_clk;
  wire [3:0]src_in_bin;

  assign dest_out_bin[3] = \dest_graysync_ff[2] [3];
  assign dest_out_bin[2:0] = \^dest_out_bin [2:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\dest_graysync_ff[2] [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\dest_graysync_ff[2] [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[3]),
        .Q(async_path[3]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "5" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "5" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module zynq_bd_C2C2_0_xpm_cdc_gray__parameterized5
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [4:0]src_in_bin;
  input dest_clk;
  output [4:0]dest_out_bin;

  wire [4:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[2] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[3] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[4] ;
  wire [3:0]\^dest_out_bin ;
  wire [3:0]gray_enc;
  wire src_clk;
  wire [4:0]src_in_bin;

  assign dest_out_bin[4] = \dest_graysync_ff[4] [4];
  assign dest_out_bin[3:0] = \^dest_out_bin [3:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [0]),
        .Q(\dest_graysync_ff[3] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [1]),
        .Q(\dest_graysync_ff[3] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [2]),
        .Q(\dest_graysync_ff[3] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [3]),
        .Q(\dest_graysync_ff[3] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [4]),
        .Q(\dest_graysync_ff[3] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [0]),
        .Q(\dest_graysync_ff[4] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [1]),
        .Q(\dest_graysync_ff[4] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [2]),
        .Q(\dest_graysync_ff[4] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [3]),
        .Q(\dest_graysync_ff[4] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [4]),
        .Q(\dest_graysync_ff[4] [4]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[4] [0]),
        .I1(\dest_graysync_ff[4] [2]),
        .I2(\dest_graysync_ff[4] [4]),
        .I3(\dest_graysync_ff[4] [3]),
        .I4(\dest_graysync_ff[4] [1]),
        .O(\^dest_out_bin [0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[4] [1]),
        .I1(\dest_graysync_ff[4] [3]),
        .I2(\dest_graysync_ff[4] [4]),
        .I3(\dest_graysync_ff[4] [2]),
        .O(\^dest_out_bin [1]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[4] [2]),
        .I1(\dest_graysync_ff[4] [4]),
        .I2(\dest_graysync_ff[4] [3]),
        .O(\^dest_out_bin [2]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[4] [3]),
        .I1(\dest_graysync_ff[4] [4]),
        .O(\^dest_out_bin [3]));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[4]),
        .Q(async_path[4]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "5" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "5" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module zynq_bd_C2C2_0_xpm_cdc_gray__parameterized5__2
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [4:0]src_in_bin;
  input dest_clk;
  output [4:0]dest_out_bin;

  wire [4:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[2] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[3] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[4] ;
  wire [3:0]\^dest_out_bin ;
  wire [3:0]gray_enc;
  wire src_clk;
  wire [4:0]src_in_bin;

  assign dest_out_bin[4] = \dest_graysync_ff[4] [4];
  assign dest_out_bin[3:0] = \^dest_out_bin [3:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [0]),
        .Q(\dest_graysync_ff[3] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [1]),
        .Q(\dest_graysync_ff[3] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [2]),
        .Q(\dest_graysync_ff[3] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [3]),
        .Q(\dest_graysync_ff[3] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [4]),
        .Q(\dest_graysync_ff[3] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [0]),
        .Q(\dest_graysync_ff[4] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [1]),
        .Q(\dest_graysync_ff[4] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [2]),
        .Q(\dest_graysync_ff[4] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [3]),
        .Q(\dest_graysync_ff[4] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [4]),
        .Q(\dest_graysync_ff[4] [4]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[4] [0]),
        .I1(\dest_graysync_ff[4] [2]),
        .I2(\dest_graysync_ff[4] [4]),
        .I3(\dest_graysync_ff[4] [3]),
        .I4(\dest_graysync_ff[4] [1]),
        .O(\^dest_out_bin [0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[4] [1]),
        .I1(\dest_graysync_ff[4] [3]),
        .I2(\dest_graysync_ff[4] [4]),
        .I3(\dest_graysync_ff[4] [2]),
        .O(\^dest_out_bin [1]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[4] [2]),
        .I1(\dest_graysync_ff[4] [4]),
        .I2(\dest_graysync_ff[4] [3]),
        .O(\^dest_out_bin [2]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[4] [3]),
        .I1(\dest_graysync_ff[4] [4]),
        .O(\^dest_out_bin [3]));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[4]),
        .Q(async_path[4]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "5" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module zynq_bd_C2C2_0_xpm_cdc_gray__parameterized6
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [4:0]src_in_bin;
  input dest_clk;
  output [4:0]dest_out_bin;

  wire [4:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[2] ;
  wire [3:0]\^dest_out_bin ;
  wire [3:0]gray_enc;
  wire src_clk;
  wire [4:0]src_in_bin;

  assign dest_out_bin[4] = \dest_graysync_ff[2] [4];
  assign dest_out_bin[3:0] = \^dest_out_bin [3:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\dest_graysync_ff[2] [4]),
        .I3(\dest_graysync_ff[2] [3]),
        .I4(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\dest_graysync_ff[2] [3]),
        .I2(\dest_graysync_ff[2] [4]),
        .I3(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [4]),
        .I2(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[4]),
        .Q(async_path[4]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "5" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module zynq_bd_C2C2_0_xpm_cdc_gray__parameterized6__2
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [4:0]src_in_bin;
  input dest_clk;
  output [4:0]dest_out_bin;

  wire [4:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[2] ;
  wire [3:0]\^dest_out_bin ;
  wire [3:0]gray_enc;
  wire src_clk;
  wire [4:0]src_in_bin;

  assign dest_out_bin[4] = \dest_graysync_ff[2] [4];
  assign dest_out_bin[3:0] = \^dest_out_bin [3:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\dest_graysync_ff[2] [4]),
        .I3(\dest_graysync_ff[2] [3]),
        .I4(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\dest_graysync_ff[2] [3]),
        .I2(\dest_graysync_ff[2] [4]),
        .I3(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [4]),
        .I2(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[4]),
        .Q(async_path[4]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* SIM_ASSERT_CHK = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SYNC_RST" *) 
module zynq_bd_C2C2_0_xpm_cdc_sync_rst
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module zynq_bd_C2C2_0_xpm_cdc_sync_rst__14
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module zynq_bd_C2C2_0_xpm_cdc_sync_rst__15
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module zynq_bd_C2C2_0_xpm_cdc_sync_rst__16
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module zynq_bd_C2C2_0_xpm_cdc_sync_rst__17
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module zynq_bd_C2C2_0_xpm_cdc_sync_rst__18
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module zynq_bd_C2C2_0_xpm_cdc_sync_rst__19
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module zynq_bd_C2C2_0_xpm_cdc_sync_rst__20
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module zynq_bd_C2C2_0_xpm_cdc_sync_rst__21
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module zynq_bd_C2C2_0_xpm_cdc_sync_rst__22
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module zynq_bd_C2C2_0_xpm_cdc_sync_rst__23
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module zynq_bd_C2C2_0_xpm_cdc_sync_rst__24
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module zynq_bd_C2C2_0_xpm_cdc_sync_rst__25
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module zynq_bd_C2C2_0_xpm_cdc_sync_rst__26
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

module zynq_bd_C2C2_0_xpm_counter_updn
   (Q,
    src_in_bin,
    DI,
    ram_empty_i,
    rd_en,
    \count_value_i_reg[0]_0 ,
    \src_gray_ff_reg[0] ,
    SR,
    rd_clk);
  output [1:0]Q;
  output [0:0]src_in_bin;
  output [1:0]DI;
  input ram_empty_i;
  input rd_en;
  input [1:0]\count_value_i_reg[0]_0 ;
  input [0:0]\src_gray_ff_reg[0] ;
  input [0:0]SR;
  input rd_clk;

  wire [1:0]DI;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i[0]_i_1__2_n_0 ;
  wire \count_value_i[1]_i_3_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \gen_fwft.count_en ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [0:0]\src_gray_ff_reg[0] ;
  wire [0:0]src_in_bin;

  LUT5 #(
    .INIT(32'h696A9999)) 
    \count_value_i[0]_i_1__2 
       (.I0(Q[0]),
        .I1(ram_empty_i),
        .I2(rd_en),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(\count_value_i_reg[0]_0 [1]),
        .O(\count_value_i[0]_i_1__2_n_0 ));
  LUT4 #(
    .INIT(16'h9855)) 
    \count_value_i[1]_i_2 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(\count_value_i_reg[0]_0 [1]),
        .O(\gen_fwft.count_en ));
  LUT6 #(
    .INIT(64'h9A9AAAAAA6A666A6)) 
    \count_value_i[1]_i_3 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(rd_en),
        .I5(ram_empty_i),
        .O(\count_value_i[1]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[0]_i_1__2_n_0 ),
        .Q(Q[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[1]_i_3_n_0 ),
        .Q(Q[1]),
        .R(SR));
  LUT2 #(
    .INIT(4'h6)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[0] ),
        .O(src_in_bin));
  LUT2 #(
    .INIT(4'hB)) 
    \grdc.rd_data_count_i[7]_i_8 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[0] ),
        .O(DI[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \grdc.rd_data_count_i[7]_i_9 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[0] ),
        .O(DI[0]));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn_21
   (Q,
    src_in_bin,
    S,
    DI,
    ram_empty_i,
    \count_value_i_reg[0]_0 ,
    rd_en,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[7]_0 ,
    SR,
    rd_clk);
  output [1:0]Q;
  output [0:0]src_in_bin;
  output [1:0]S;
  output [0:0]DI;
  input ram_empty_i;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input [1:0]\grdc.rd_data_count_i_reg[7] ;
  input [1:0]\grdc.rd_data_count_i_reg[7]_0 ;
  input [0:0]SR;
  input rd_clk;

  wire [0:0]DI;
  wire [1:0]Q;
  wire [1:0]S;
  wire [0:0]SR;
  wire \count_value_i[0]_i_1__3_n_0 ;
  wire \count_value_i[1]_i_3_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \gen_fwft.count_en ;
  wire [1:0]\grdc.rd_data_count_i_reg[7] ;
  wire [1:0]\grdc.rd_data_count_i_reg[7]_0 ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [0:0]src_in_bin;

  LUT5 #(
    .INIT(32'h5AAAA655)) 
    \count_value_i[0]_i_1__3 
       (.I0(Q[0]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(ram_empty_i),
        .O(\count_value_i[0]_i_1__3_n_0 ));
  LUT4 #(
    .INIT(16'hC02F)) 
    \count_value_i[1]_i_2 
       (.I0(\count_value_i_reg[0]_0 [0]),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(ram_empty_i),
        .O(\gen_fwft.count_en ));
  LUT6 #(
    .INIT(64'hA999A9A96AAA6AAA)) 
    \count_value_i[1]_i_3 
       (.I0(Q[1]),
        .I1(ram_empty_i),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(rd_en),
        .I4(\count_value_i_reg[0]_0 [0]),
        .I5(Q[0]),
        .O(\count_value_i[1]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[0]_i_1__3_n_0 ),
        .Q(Q[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[1]_i_3_n_0 ),
        .Q(Q[1]),
        .R(SR));
  LUT4 #(
    .INIT(16'h2DD2)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_8 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .O(src_in_bin));
  LUT4 #(
    .INIT(16'h9669)) 
    \grdc.rd_data_count_i[7]_i_15 
       (.I0(DI),
        .I1(Q[1]),
        .I2(\grdc.rd_data_count_i_reg[7] [1]),
        .I3(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .O(S[1]));
  (* HLUTNM = "lutpair2" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \grdc.rd_data_count_i[7]_i_16 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(\grdc.rd_data_count_i_reg[7]_0 [0]),
        .O(S[0]));
  (* HLUTNM = "lutpair2" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \grdc.rd_data_count_i[7]_i_8 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .O(DI));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn_29
   (Q,
    src_in_bin,
    S,
    DI,
    ram_empty_i,
    \count_value_i_reg[0]_0 ,
    rd_en,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[7]_0 ,
    SR,
    rd_clk);
  output [1:0]Q;
  output [0:0]src_in_bin;
  output [1:0]S;
  output [0:0]DI;
  input ram_empty_i;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input [1:0]\grdc.rd_data_count_i_reg[7] ;
  input [1:0]\grdc.rd_data_count_i_reg[7]_0 ;
  input [0:0]SR;
  input rd_clk;

  wire [0:0]DI;
  wire [1:0]Q;
  wire [1:0]S;
  wire [0:0]SR;
  wire \count_value_i[0]_i_1__3_n_0 ;
  wire \count_value_i[1]_i_3_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \gen_fwft.count_en ;
  wire [1:0]\grdc.rd_data_count_i_reg[7] ;
  wire [1:0]\grdc.rd_data_count_i_reg[7]_0 ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [0:0]src_in_bin;

  LUT5 #(
    .INIT(32'h5AAAA655)) 
    \count_value_i[0]_i_1__3 
       (.I0(Q[0]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(ram_empty_i),
        .O(\count_value_i[0]_i_1__3_n_0 ));
  LUT4 #(
    .INIT(16'hC02F)) 
    \count_value_i[1]_i_2 
       (.I0(\count_value_i_reg[0]_0 [0]),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(ram_empty_i),
        .O(\gen_fwft.count_en ));
  LUT6 #(
    .INIT(64'hA999A9A96AAA6AAA)) 
    \count_value_i[1]_i_3 
       (.I0(Q[1]),
        .I1(ram_empty_i),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(rd_en),
        .I4(\count_value_i_reg[0]_0 [0]),
        .I5(Q[0]),
        .O(\count_value_i[1]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[0]_i_1__3_n_0 ),
        .Q(Q[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[1]_i_3_n_0 ),
        .Q(Q[1]),
        .R(SR));
  LUT4 #(
    .INIT(16'h2DD2)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_8 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .O(src_in_bin));
  LUT4 #(
    .INIT(16'h9669)) 
    \grdc.rd_data_count_i[7]_i_15 
       (.I0(DI),
        .I1(Q[1]),
        .I2(\grdc.rd_data_count_i_reg[7] [1]),
        .I3(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .O(S[1]));
  (* HLUTNM = "lutpair0" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \grdc.rd_data_count_i[7]_i_16 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(\grdc.rd_data_count_i_reg[7]_0 [0]),
        .O(S[0]));
  (* HLUTNM = "lutpair0" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \grdc.rd_data_count_i[7]_i_8 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .O(DI));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn_40
   (Q,
    src_in_bin,
    S,
    DI,
    ram_empty_i,
    \count_value_i_reg[0]_0 ,
    rd_en,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[7]_0 ,
    SR,
    rd_clk);
  output [1:0]Q;
  output [0:0]src_in_bin;
  output [1:0]S;
  output [0:0]DI;
  input ram_empty_i;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input [1:0]\grdc.rd_data_count_i_reg[7] ;
  input [1:0]\grdc.rd_data_count_i_reg[7]_0 ;
  input [0:0]SR;
  input rd_clk;

  wire [0:0]DI;
  wire [1:0]Q;
  wire [1:0]S;
  wire [0:0]SR;
  wire \count_value_i[0]_i_1__3_n_0 ;
  wire \count_value_i[1]_i_3_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \gen_fwft.count_en ;
  wire [1:0]\grdc.rd_data_count_i_reg[7] ;
  wire [1:0]\grdc.rd_data_count_i_reg[7]_0 ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [0:0]src_in_bin;

  LUT5 #(
    .INIT(32'h5AAAA655)) 
    \count_value_i[0]_i_1__3 
       (.I0(Q[0]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(ram_empty_i),
        .O(\count_value_i[0]_i_1__3_n_0 ));
  LUT4 #(
    .INIT(16'hC02F)) 
    \count_value_i[1]_i_2 
       (.I0(\count_value_i_reg[0]_0 [0]),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(ram_empty_i),
        .O(\gen_fwft.count_en ));
  LUT6 #(
    .INIT(64'hA999A9A96AAA6AAA)) 
    \count_value_i[1]_i_3 
       (.I0(Q[1]),
        .I1(ram_empty_i),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(rd_en),
        .I4(\count_value_i_reg[0]_0 [0]),
        .I5(Q[0]),
        .O(\count_value_i[1]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[0]_i_1__3_n_0 ),
        .Q(Q[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[1]_i_3_n_0 ),
        .Q(Q[1]),
        .R(SR));
  LUT4 #(
    .INIT(16'h2DD2)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_8 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .O(src_in_bin));
  LUT4 #(
    .INIT(16'h9669)) 
    \grdc.rd_data_count_i[7]_i_15 
       (.I0(DI),
        .I1(Q[1]),
        .I2(\grdc.rd_data_count_i_reg[7] [1]),
        .I3(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .O(S[1]));
  (* HLUTNM = "lutpair1" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \grdc.rd_data_count_i[7]_i_16 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(\grdc.rd_data_count_i_reg[7]_0 [0]),
        .O(S[0]));
  (* HLUTNM = "lutpair1" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \grdc.rd_data_count_i[7]_i_8 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .O(DI));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn_50
   (Q,
    D,
    \count_value_i_reg[1]_0 ,
    src_in_bin,
    ram_empty_i,
    \count_value_i_reg[1]_1 ,
    rd_en,
    \grdc.rd_data_count_i_reg[2] ,
    \grdc.rd_data_count_i_reg[2]_0 ,
    SR,
    rd_clk);
  output [1:0]Q;
  output [0:0]D;
  output \count_value_i_reg[1]_0 ;
  output [0:0]src_in_bin;
  input ram_empty_i;
  input [1:0]\count_value_i_reg[1]_1 ;
  input rd_en;
  input [2:0]\grdc.rd_data_count_i_reg[2] ;
  input [2:0]\grdc.rd_data_count_i_reg[2]_0 ;
  input [0:0]SR;
  input rd_clk;

  wire [0:0]D;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i[0]_i_1__3_n_0 ;
  wire \count_value_i[1]_i_3_n_0 ;
  wire \count_value_i_reg[1]_0 ;
  wire [1:0]\count_value_i_reg[1]_1 ;
  wire \gen_fwft.count_en ;
  wire [2:0]\grdc.rd_data_count_i_reg[2] ;
  wire [2:0]\grdc.rd_data_count_i_reg[2]_0 ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [0:0]src_in_bin;

  LUT5 #(
    .INIT(32'h5AAAA655)) 
    \count_value_i[0]_i_1__3 
       (.I0(Q[0]),
        .I1(\count_value_i_reg[1]_1 [0]),
        .I2(rd_en),
        .I3(\count_value_i_reg[1]_1 [1]),
        .I4(ram_empty_i),
        .O(\count_value_i[0]_i_1__3_n_0 ));
  LUT4 #(
    .INIT(16'hC02F)) 
    \count_value_i[1]_i_2 
       (.I0(\count_value_i_reg[1]_1 [0]),
        .I1(rd_en),
        .I2(\count_value_i_reg[1]_1 [1]),
        .I3(ram_empty_i),
        .O(\gen_fwft.count_en ));
  LUT6 #(
    .INIT(64'hA999A9A96AAA6AAA)) 
    \count_value_i[1]_i_3 
       (.I0(Q[1]),
        .I1(ram_empty_i),
        .I2(\count_value_i_reg[1]_1 [1]),
        .I3(rd_en),
        .I4(\count_value_i_reg[1]_1 [0]),
        .I5(Q[0]),
        .O(\count_value_i[1]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[0]_i_1__3_n_0 ),
        .Q(Q[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[1]_i_3_n_0 ),
        .Q(Q[1]),
        .R(SR));
  LUT4 #(
    .INIT(16'h2DD2)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_4 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[2]_0 [0]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[2]_0 [1]),
        .O(src_in_bin));
  LUT6 #(
    .INIT(64'h9696699669966969)) 
    \grdc.rd_data_count_i[2]_i_1 
       (.I0(\count_value_i_reg[1]_0 ),
        .I1(\grdc.rd_data_count_i_reg[2] [2]),
        .I2(\grdc.rd_data_count_i_reg[2]_0 [2]),
        .I3(\grdc.rd_data_count_i_reg[2]_0 [1]),
        .I4(Q[1]),
        .I5(\grdc.rd_data_count_i_reg[2] [1]),
        .O(D));
  LUT6 #(
    .INIT(64'h69FF696969690069)) 
    \grdc.rd_data_count_i[4]_i_4 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[2]_0 [1]),
        .I2(\grdc.rd_data_count_i_reg[2] [1]),
        .I3(\grdc.rd_data_count_i_reg[2]_0 [0]),
        .I4(Q[0]),
        .I5(\grdc.rd_data_count_i_reg[2] [0]),
        .O(\count_value_i_reg[1]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn_58
   (Q,
    D,
    \count_value_i_reg[1]_0 ,
    src_in_bin,
    ram_empty_i,
    \count_value_i_reg[1]_1 ,
    rd_en,
    \grdc.rd_data_count_i_reg[2] ,
    \grdc.rd_data_count_i_reg[2]_0 ,
    SR,
    rd_clk);
  output [1:0]Q;
  output [0:0]D;
  output \count_value_i_reg[1]_0 ;
  output [0:0]src_in_bin;
  input ram_empty_i;
  input [1:0]\count_value_i_reg[1]_1 ;
  input rd_en;
  input [2:0]\grdc.rd_data_count_i_reg[2] ;
  input [2:0]\grdc.rd_data_count_i_reg[2]_0 ;
  input [0:0]SR;
  input rd_clk;

  wire [0:0]D;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i[0]_i_1__3_n_0 ;
  wire \count_value_i[1]_i_3_n_0 ;
  wire \count_value_i_reg[1]_0 ;
  wire [1:0]\count_value_i_reg[1]_1 ;
  wire \gen_fwft.count_en ;
  wire [2:0]\grdc.rd_data_count_i_reg[2] ;
  wire [2:0]\grdc.rd_data_count_i_reg[2]_0 ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [0:0]src_in_bin;

  LUT5 #(
    .INIT(32'h5AAAA655)) 
    \count_value_i[0]_i_1__3 
       (.I0(Q[0]),
        .I1(\count_value_i_reg[1]_1 [0]),
        .I2(rd_en),
        .I3(\count_value_i_reg[1]_1 [1]),
        .I4(ram_empty_i),
        .O(\count_value_i[0]_i_1__3_n_0 ));
  LUT4 #(
    .INIT(16'hC02F)) 
    \count_value_i[1]_i_2 
       (.I0(\count_value_i_reg[1]_1 [0]),
        .I1(rd_en),
        .I2(\count_value_i_reg[1]_1 [1]),
        .I3(ram_empty_i),
        .O(\gen_fwft.count_en ));
  LUT6 #(
    .INIT(64'hA999A9A96AAA6AAA)) 
    \count_value_i[1]_i_3 
       (.I0(Q[1]),
        .I1(ram_empty_i),
        .I2(\count_value_i_reg[1]_1 [1]),
        .I3(rd_en),
        .I4(\count_value_i_reg[1]_1 [0]),
        .I5(Q[0]),
        .O(\count_value_i[1]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[0]_i_1__3_n_0 ),
        .Q(Q[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[1]_i_3_n_0 ),
        .Q(Q[1]),
        .R(SR));
  LUT4 #(
    .INIT(16'h2DD2)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_4 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[2]_0 [0]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[2]_0 [1]),
        .O(src_in_bin));
  LUT6 #(
    .INIT(64'h9696699669966969)) 
    \grdc.rd_data_count_i[2]_i_1 
       (.I0(\count_value_i_reg[1]_0 ),
        .I1(\grdc.rd_data_count_i_reg[2] [2]),
        .I2(\grdc.rd_data_count_i_reg[2]_0 [2]),
        .I3(\grdc.rd_data_count_i_reg[2]_0 [1]),
        .I4(Q[1]),
        .I5(\grdc.rd_data_count_i_reg[2] [1]),
        .O(D));
  LUT6 #(
    .INIT(64'h69FF696969690069)) 
    \grdc.rd_data_count_i[4]_i_4 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[2]_0 [1]),
        .I2(\grdc.rd_data_count_i_reg[2] [1]),
        .I3(\grdc.rd_data_count_i_reg[2]_0 [0]),
        .I4(Q[0]),
        .I5(\grdc.rd_data_count_i_reg[2] [0]),
        .O(\count_value_i_reg[1]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn_9
   (Q,
    src_in_bin,
    DI,
    ram_empty_i,
    rd_en,
    \count_value_i_reg[0]_0 ,
    \src_gray_ff_reg[0] ,
    SR,
    rd_clk);
  output [1:0]Q;
  output [0:0]src_in_bin;
  output [1:0]DI;
  input ram_empty_i;
  input rd_en;
  input [1:0]\count_value_i_reg[0]_0 ;
  input [0:0]\src_gray_ff_reg[0] ;
  input [0:0]SR;
  input rd_clk;

  wire [1:0]DI;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i[0]_i_1__2_n_0 ;
  wire \count_value_i[1]_i_3_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \gen_fwft.count_en ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [0:0]\src_gray_ff_reg[0] ;
  wire [0:0]src_in_bin;

  LUT5 #(
    .INIT(32'h696A9999)) 
    \count_value_i[0]_i_1__2 
       (.I0(Q[0]),
        .I1(ram_empty_i),
        .I2(rd_en),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(\count_value_i_reg[0]_0 [1]),
        .O(\count_value_i[0]_i_1__2_n_0 ));
  LUT4 #(
    .INIT(16'h9855)) 
    \count_value_i[1]_i_2 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(\count_value_i_reg[0]_0 [1]),
        .O(\gen_fwft.count_en ));
  LUT6 #(
    .INIT(64'h9A9AAAAAA6A666A6)) 
    \count_value_i[1]_i_3 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(rd_en),
        .I5(ram_empty_i),
        .O(\count_value_i[1]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[0]_i_1__2_n_0 ),
        .Q(Q[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[1]_i_3_n_0 ),
        .Q(Q[1]),
        .R(SR));
  LUT2 #(
    .INIT(4'h6)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[0] ),
        .O(src_in_bin));
  LUT2 #(
    .INIT(4'hB)) 
    \grdc.rd_data_count_i[7]_i_8 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[0] ),
        .O(DI[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \grdc.rd_data_count_i[7]_i_9 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[0] ),
        .O(DI[0]));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn__parameterized0
   (Q,
    enb,
    DI,
    \count_value_i_reg[7]_0 ,
    D,
    S,
    src_in_bin,
    \count_value_i_reg[0]_0 ,
    rd_en,
    ram_empty_i,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[8] ,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ,
    \count_value_i_reg[8]_0 ,
    rd_clk);
  output [7:0]Q;
  output enb;
  output [0:0]DI;
  output [0:0]\count_value_i_reg[7]_0 ;
  output [7:0]D;
  output [4:0]S;
  output [7:0]src_in_bin;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input ram_empty_i;
  input [1:0]\grdc.rd_data_count_i_reg[7] ;
  input [7:0]\grdc.rd_data_count_i_reg[8] ;
  input [7:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ;
  input \count_value_i_reg[8]_0 ;
  input rd_clk;

  wire [7:0]D;
  wire [0:0]DI;
  wire [7:0]Q;
  wire [4:0]S;
  wire \count_value_i[0]_i_1__4_n_0 ;
  wire \count_value_i[1]_i_1__4_n_0 ;
  wire \count_value_i[2]_i_1__3_n_0 ;
  wire \count_value_i[3]_i_1__3_n_0 ;
  wire \count_value_i[4]_i_1__3_n_0 ;
  wire \count_value_i[5]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_2__2_n_0 ;
  wire \count_value_i[7]_i_1__2_n_0 ;
  wire \count_value_i[8]_i_1__0_n_0 ;
  wire \count_value_i[8]_i_2__0_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire [0:0]\count_value_i_reg[7]_0 ;
  wire \count_value_i_reg[8]_0 ;
  wire \count_value_i_reg_n_0_[8] ;
  wire enb;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 ;
  wire [1:0]\grdc.rd_data_count_i_reg[7] ;
  wire [7:0]\grdc.rd_data_count_i_reg[8] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [7:0]src_in_bin;
  wire [7:7]\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_CO_UNCONNECTED ;

  LUT5 #(
    .INIT(32'hABAA5455)) 
    \count_value_i[0]_i_1__4 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(Q[0]),
        .O(\count_value_i[0]_i_1__4_n_0 ));
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__4 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair223" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair224" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__3 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair224" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__3 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__3_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__2 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__2_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__2_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h0000AAA200000000)) 
    \count_value_i[6]_i_2__2 
       (.I0(Q[1]),
        .I1(\count_value_i_reg[0]_0 [1]),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair221" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__2 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair221" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1__0 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(\count_value_i_reg_n_0_[8] ),
        .O(\count_value_i[8]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(enb),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[0]_i_1__4_n_0 ),
        .Q(Q[0]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[1]_i_1__4_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[2]_i_1__3_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[3]_i_1__3_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[4]_i_1__3_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[5]_i_1__2_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[6]_i_1__2_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[7]_i_1__2_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[8]_i_1__0_n_0 ),
        .Q(\count_value_i_reg_n_0_[8] ),
        .R(\count_value_i_reg[8]_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFE00000001)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_1 
       (.I0(Q[7]),
        .I1(Q[5]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I3(Q[4]),
        .I4(Q[6]),
        .I5(\count_value_i_reg_n_0_[8] ),
        .O(src_in_bin[7]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFBFBBAFB)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [0]),
        .I4(Q[0]),
        .I5(Q[3]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair225" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair222" *) 
  LUT5 #(
    .INIT(32'hFFFE0001)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2 
       (.I0(Q[6]),
        .I1(Q[4]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I3(Q[5]),
        .I4(Q[7]),
        .O(src_in_bin[6]));
  (* SOFT_HLUTNM = "soft_lutpair222" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3 
       (.I0(Q[5]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I2(Q[4]),
        .I3(Q[6]),
        .O(src_in_bin[5]));
  LUT3 #(
    .INIT(8'hE1)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_4 
       (.I0(Q[4]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I2(Q[5]),
        .O(src_in_bin[4]));
  LUT6 #(
    .INIT(64'hFFFFEAFE00001501)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_5 
       (.I0(Q[3]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .I4(Q[2]),
        .I5(Q[4]),
        .O(src_in_bin[3]));
  LUT6 #(
    .INIT(64'hFBFBBAFB04044504)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [0]),
        .I4(Q[0]),
        .I5(Q[3]),
        .O(src_in_bin[2]));
  (* SOFT_HLUTNM = "soft_lutpair223" *) 
  LUT5 #(
    .INIT(32'hB0FB4F04)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_7 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .I4(Q[2]),
        .O(src_in_bin[1]));
  (* SOFT_HLUTNM = "soft_lutpair225" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_9 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .O(src_in_bin[0]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [6]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [5]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [4]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [3]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [2]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [1]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15_n_0 ));
  LUT5 #(
    .INIT(32'hABAA5455)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(Q[0]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2 
       (.I0(Q[6]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3 
       (.I0(Q[5]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4 
       (.I0(Q[4]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5 
       (.I0(Q[3]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6 
       (.I0(Q[2]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7 
       (.I0(Q[1]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8 
       (.I0(Q[0]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [7]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1 
       (.CI(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [0]),
        .CI_TOP(1'b0),
        .CO({\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_CO_UNCONNECTED [7],\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 }),
        .DI({1'b0,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 }),
        .O(D),
        .S({\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16_n_0 }));
  LUT4 #(
    .INIT(16'h00FD)) 
    \gen_sdpram.xpm_memory_base_inst_i_2 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .O(enb));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_10 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[8] [4]),
        .I2(Q[6]),
        .I3(\grdc.rd_data_count_i_reg[8] [5]),
        .O(S[3]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_11 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[8] [3]),
        .I2(Q[5]),
        .I3(\grdc.rd_data_count_i_reg[8] [4]),
        .O(S[2]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_12 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[8] [2]),
        .I2(Q[4]),
        .I3(\grdc.rd_data_count_i_reg[8] [3]),
        .O(S[1]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_13 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[8] [1]),
        .I2(Q[3]),
        .I3(\grdc.rd_data_count_i_reg[8] [2]),
        .O(S[0]));
  LUT3 #(
    .INIT(8'hD4)) 
    \grdc.rd_data_count_i[7]_i_7 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(\grdc.rd_data_count_i_reg[8] [0]),
        .O(DI));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_9 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[8] [5]),
        .I2(Q[7]),
        .I3(\grdc.rd_data_count_i_reg[8] [6]),
        .O(S[4]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[8]_i_3 
       (.I0(Q[7]),
        .I1(\grdc.rd_data_count_i_reg[8] [6]),
        .I2(\count_value_i_reg_n_0_[8] ),
        .I3(\grdc.rd_data_count_i_reg[8] [7]),
        .O(\count_value_i_reg[7]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn__parameterized0_23
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    \gwdc.wr_data_count_i_reg[8] ,
    wr_clk);
  output [8:0]Q;
  output [7:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input [8:0]\gwdc.wr_data_count_i_reg[8] ;
  input wr_clk;

  wire [7:0]D;
  wire [8:0]Q;
  wire \count_value_i[0]_i_1__1_n_0 ;
  wire \count_value_i[1]_i_1__1_n_0 ;
  wire \count_value_i[2]_i_1__1_n_0 ;
  wire \count_value_i[3]_i_1__1_n_0 ;
  wire \count_value_i[4]_i_1__1_n_0 ;
  wire \count_value_i[5]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_2__1_n_0 ;
  wire \count_value_i[7]_i_1__1_n_0 ;
  wire \count_value_i[8]_i_1_n_0 ;
  wire \count_value_i[8]_i_2_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire \gwdc.wr_data_count_i[7]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_3_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_4_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_5_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_6_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_7_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_8_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_9_n_0 ;
  wire \gwdc.wr_data_count_i[8]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_1 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_2 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_3 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_4 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_5 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_6 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_7 ;
  wire [8:0]\gwdc.wr_data_count_i_reg[8] ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [0:0]\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:0]\NLW_gwdc.wr_data_count_i_reg[8]_i_1_CO_UNCONNECTED ;
  wire [7:1]\NLW_gwdc.wr_data_count_i_reg[8]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair230" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair230" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair229" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair229" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__1_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__1_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__1 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair228" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__1 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair228" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__1_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_2 
       (.I0(Q[7]),
        .I1(\gwdc.wr_data_count_i_reg[8] [7]),
        .O(\gwdc.wr_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_3 
       (.I0(Q[6]),
        .I1(\gwdc.wr_data_count_i_reg[8] [6]),
        .O(\gwdc.wr_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_4 
       (.I0(Q[5]),
        .I1(\gwdc.wr_data_count_i_reg[8] [5]),
        .O(\gwdc.wr_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_5 
       (.I0(Q[4]),
        .I1(\gwdc.wr_data_count_i_reg[8] [4]),
        .O(\gwdc.wr_data_count_i[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_6 
       (.I0(Q[3]),
        .I1(\gwdc.wr_data_count_i_reg[8] [3]),
        .O(\gwdc.wr_data_count_i[7]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_7 
       (.I0(Q[2]),
        .I1(\gwdc.wr_data_count_i_reg[8] [2]),
        .O(\gwdc.wr_data_count_i[7]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_8 
       (.I0(Q[1]),
        .I1(\gwdc.wr_data_count_i_reg[8] [1]),
        .O(\gwdc.wr_data_count_i[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_9 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[8] [0]),
        .O(\gwdc.wr_data_count_i[7]_i_9_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[8]_i_2 
       (.I0(Q[8]),
        .I1(\gwdc.wr_data_count_i_reg[8] [8]),
        .O(\gwdc.wr_data_count_i[8]_i_2_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[7]_i_1 
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_1 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_2 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_3 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_4 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_5 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_6 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_7 }),
        .DI(Q[7:0]),
        .O({D[6:0],\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({\gwdc.wr_data_count_i[7]_i_2_n_0 ,\gwdc.wr_data_count_i[7]_i_3_n_0 ,\gwdc.wr_data_count_i[7]_i_4_n_0 ,\gwdc.wr_data_count_i[7]_i_5_n_0 ,\gwdc.wr_data_count_i[7]_i_6_n_0 ,\gwdc.wr_data_count_i[7]_i_7_n_0 ,\gwdc.wr_data_count_i[7]_i_8_n_0 ,\gwdc.wr_data_count_i[7]_i_9_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[8]_i_1 
       (.CI(\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_gwdc.wr_data_count_i_reg[8]_i_1_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_gwdc.wr_data_count_i_reg[8]_i_1_O_UNCONNECTED [7:1],D[7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gwdc.wr_data_count_i[8]_i_2_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn__parameterized0_30
   (Q,
    enb,
    DI,
    \count_value_i_reg[7]_0 ,
    D,
    S,
    src_in_bin,
    \count_value_i_reg[0]_0 ,
    rd_en,
    ram_empty_i,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[8] ,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ,
    \count_value_i_reg[8]_0 ,
    rd_clk);
  output [7:0]Q;
  output enb;
  output [0:0]DI;
  output [0:0]\count_value_i_reg[7]_0 ;
  output [7:0]D;
  output [4:0]S;
  output [7:0]src_in_bin;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input ram_empty_i;
  input [1:0]\grdc.rd_data_count_i_reg[7] ;
  input [7:0]\grdc.rd_data_count_i_reg[8] ;
  input [7:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ;
  input \count_value_i_reg[8]_0 ;
  input rd_clk;

  wire [7:0]D;
  wire [0:0]DI;
  wire [7:0]Q;
  wire [4:0]S;
  wire \count_value_i[0]_i_1__4_n_0 ;
  wire \count_value_i[1]_i_1__4_n_0 ;
  wire \count_value_i[2]_i_1__3_n_0 ;
  wire \count_value_i[3]_i_1__3_n_0 ;
  wire \count_value_i[4]_i_1__3_n_0 ;
  wire \count_value_i[5]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_2__2_n_0 ;
  wire \count_value_i[7]_i_1__2_n_0 ;
  wire \count_value_i[8]_i_1__0_n_0 ;
  wire \count_value_i[8]_i_2__0_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire [0:0]\count_value_i_reg[7]_0 ;
  wire \count_value_i_reg[8]_0 ;
  wire \count_value_i_reg_n_0_[8] ;
  wire enb;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 ;
  wire [1:0]\grdc.rd_data_count_i_reg[7] ;
  wire [7:0]\grdc.rd_data_count_i_reg[8] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [7:0]src_in_bin;
  wire [7:7]\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_CO_UNCONNECTED ;

  LUT5 #(
    .INIT(32'hABAA5455)) 
    \count_value_i[0]_i_1__4 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(Q[0]),
        .O(\count_value_i[0]_i_1__4_n_0 ));
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__4 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair192" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair193" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__3 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair193" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__3 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__3_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__2 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__2_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__2_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h0000AAA200000000)) 
    \count_value_i[6]_i_2__2 
       (.I0(Q[1]),
        .I1(\count_value_i_reg[0]_0 [1]),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair190" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__2 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair190" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1__0 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(\count_value_i_reg_n_0_[8] ),
        .O(\count_value_i[8]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(enb),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[0]_i_1__4_n_0 ),
        .Q(Q[0]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[1]_i_1__4_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[2]_i_1__3_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[3]_i_1__3_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[4]_i_1__3_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[5]_i_1__2_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[6]_i_1__2_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[7]_i_1__2_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[8]_i_1__0_n_0 ),
        .Q(\count_value_i_reg_n_0_[8] ),
        .R(\count_value_i_reg[8]_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFE00000001)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_1 
       (.I0(Q[7]),
        .I1(Q[5]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I3(Q[4]),
        .I4(Q[6]),
        .I5(\count_value_i_reg_n_0_[8] ),
        .O(src_in_bin[7]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFBFBBAFB)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [0]),
        .I4(Q[0]),
        .I5(Q[3]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair194" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair191" *) 
  LUT5 #(
    .INIT(32'hFFFE0001)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2 
       (.I0(Q[6]),
        .I1(Q[4]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I3(Q[5]),
        .I4(Q[7]),
        .O(src_in_bin[6]));
  (* SOFT_HLUTNM = "soft_lutpair191" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3 
       (.I0(Q[5]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I2(Q[4]),
        .I3(Q[6]),
        .O(src_in_bin[5]));
  LUT3 #(
    .INIT(8'hE1)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_4 
       (.I0(Q[4]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I2(Q[5]),
        .O(src_in_bin[4]));
  LUT6 #(
    .INIT(64'hFFFFEAFE00001501)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_5 
       (.I0(Q[3]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .I4(Q[2]),
        .I5(Q[4]),
        .O(src_in_bin[3]));
  LUT6 #(
    .INIT(64'hFBFBBAFB04044504)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [0]),
        .I4(Q[0]),
        .I5(Q[3]),
        .O(src_in_bin[2]));
  (* SOFT_HLUTNM = "soft_lutpair192" *) 
  LUT5 #(
    .INIT(32'hB0FB4F04)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_7 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .I4(Q[2]),
        .O(src_in_bin[1]));
  (* SOFT_HLUTNM = "soft_lutpair194" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_9 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .O(src_in_bin[0]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [6]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [5]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [4]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [3]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [2]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [1]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15_n_0 ));
  LUT5 #(
    .INIT(32'hABAA5455)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(Q[0]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2 
       (.I0(Q[6]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3 
       (.I0(Q[5]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4 
       (.I0(Q[4]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5 
       (.I0(Q[3]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6 
       (.I0(Q[2]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7 
       (.I0(Q[1]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8 
       (.I0(Q[0]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [7]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1 
       (.CI(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [0]),
        .CI_TOP(1'b0),
        .CO({\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_CO_UNCONNECTED [7],\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 }),
        .DI({1'b0,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 }),
        .O(D),
        .S({\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16_n_0 }));
  LUT4 #(
    .INIT(16'h00FD)) 
    \gen_sdpram.xpm_memory_base_inst_i_2 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .O(enb));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_10 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[8] [4]),
        .I2(Q[6]),
        .I3(\grdc.rd_data_count_i_reg[8] [5]),
        .O(S[3]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_11 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[8] [3]),
        .I2(Q[5]),
        .I3(\grdc.rd_data_count_i_reg[8] [4]),
        .O(S[2]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_12 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[8] [2]),
        .I2(Q[4]),
        .I3(\grdc.rd_data_count_i_reg[8] [3]),
        .O(S[1]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_13 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[8] [1]),
        .I2(Q[3]),
        .I3(\grdc.rd_data_count_i_reg[8] [2]),
        .O(S[0]));
  LUT3 #(
    .INIT(8'hD4)) 
    \grdc.rd_data_count_i[7]_i_7 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(\grdc.rd_data_count_i_reg[8] [0]),
        .O(DI));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_9 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[8] [5]),
        .I2(Q[7]),
        .I3(\grdc.rd_data_count_i_reg[8] [6]),
        .O(S[4]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[8]_i_3 
       (.I0(Q[7]),
        .I1(\grdc.rd_data_count_i_reg[8] [6]),
        .I2(\count_value_i_reg_n_0_[8] ),
        .I3(\grdc.rd_data_count_i_reg[8] [7]),
        .O(\count_value_i_reg[7]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn__parameterized0_33
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    \gwdc.wr_data_count_i_reg[8] ,
    wr_clk);
  output [8:0]Q;
  output [7:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input [8:0]\gwdc.wr_data_count_i_reg[8] ;
  input wr_clk;

  wire [7:0]D;
  wire [8:0]Q;
  wire \count_value_i[0]_i_1__1_n_0 ;
  wire \count_value_i[1]_i_1__1_n_0 ;
  wire \count_value_i[2]_i_1__1_n_0 ;
  wire \count_value_i[3]_i_1__1_n_0 ;
  wire \count_value_i[4]_i_1__1_n_0 ;
  wire \count_value_i[5]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_2__1_n_0 ;
  wire \count_value_i[7]_i_1__1_n_0 ;
  wire \count_value_i[8]_i_1_n_0 ;
  wire \count_value_i[8]_i_2_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire \gwdc.wr_data_count_i[7]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_3_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_4_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_5_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_6_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_7_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_8_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_9_n_0 ;
  wire \gwdc.wr_data_count_i[8]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_1 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_2 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_3 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_4 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_5 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_6 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_7 ;
  wire [8:0]\gwdc.wr_data_count_i_reg[8] ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [0:0]\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:0]\NLW_gwdc.wr_data_count_i_reg[8]_i_1_CO_UNCONNECTED ;
  wire [7:1]\NLW_gwdc.wr_data_count_i_reg[8]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair199" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair199" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair198" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair198" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__1_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__1_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__1 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair197" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__1 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair197" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__1_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_2 
       (.I0(Q[7]),
        .I1(\gwdc.wr_data_count_i_reg[8] [7]),
        .O(\gwdc.wr_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_3 
       (.I0(Q[6]),
        .I1(\gwdc.wr_data_count_i_reg[8] [6]),
        .O(\gwdc.wr_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_4 
       (.I0(Q[5]),
        .I1(\gwdc.wr_data_count_i_reg[8] [5]),
        .O(\gwdc.wr_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_5 
       (.I0(Q[4]),
        .I1(\gwdc.wr_data_count_i_reg[8] [4]),
        .O(\gwdc.wr_data_count_i[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_6 
       (.I0(Q[3]),
        .I1(\gwdc.wr_data_count_i_reg[8] [3]),
        .O(\gwdc.wr_data_count_i[7]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_7 
       (.I0(Q[2]),
        .I1(\gwdc.wr_data_count_i_reg[8] [2]),
        .O(\gwdc.wr_data_count_i[7]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_8 
       (.I0(Q[1]),
        .I1(\gwdc.wr_data_count_i_reg[8] [1]),
        .O(\gwdc.wr_data_count_i[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_9 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[8] [0]),
        .O(\gwdc.wr_data_count_i[7]_i_9_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[8]_i_2 
       (.I0(Q[8]),
        .I1(\gwdc.wr_data_count_i_reg[8] [8]),
        .O(\gwdc.wr_data_count_i[8]_i_2_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[7]_i_1 
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_1 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_2 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_3 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_4 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_5 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_6 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_7 }),
        .DI(Q[7:0]),
        .O({D[6:0],\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({\gwdc.wr_data_count_i[7]_i_2_n_0 ,\gwdc.wr_data_count_i[7]_i_3_n_0 ,\gwdc.wr_data_count_i[7]_i_4_n_0 ,\gwdc.wr_data_count_i[7]_i_5_n_0 ,\gwdc.wr_data_count_i[7]_i_6_n_0 ,\gwdc.wr_data_count_i[7]_i_7_n_0 ,\gwdc.wr_data_count_i[7]_i_8_n_0 ,\gwdc.wr_data_count_i[7]_i_9_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[8]_i_1 
       (.CI(\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_gwdc.wr_data_count_i_reg[8]_i_1_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_gwdc.wr_data_count_i_reg[8]_i_1_O_UNCONNECTED [7:1],D[7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gwdc.wr_data_count_i[8]_i_2_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn__parameterized0_41
   (Q,
    enb,
    DI,
    \count_value_i_reg[7]_0 ,
    D,
    S,
    src_in_bin,
    \count_value_i_reg[0]_0 ,
    rd_en,
    ram_empty_i,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[8] ,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ,
    \count_value_i_reg[8]_0 ,
    rd_clk);
  output [7:0]Q;
  output enb;
  output [0:0]DI;
  output [0:0]\count_value_i_reg[7]_0 ;
  output [7:0]D;
  output [4:0]S;
  output [7:0]src_in_bin;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input ram_empty_i;
  input [1:0]\grdc.rd_data_count_i_reg[7] ;
  input [7:0]\grdc.rd_data_count_i_reg[8] ;
  input [7:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ;
  input \count_value_i_reg[8]_0 ;
  input rd_clk;

  wire [7:0]D;
  wire [0:0]DI;
  wire [7:0]Q;
  wire [4:0]S;
  wire \count_value_i[0]_i_1__4_n_0 ;
  wire \count_value_i[1]_i_1__4_n_0 ;
  wire \count_value_i[2]_i_1__3_n_0 ;
  wire \count_value_i[3]_i_1__3_n_0 ;
  wire \count_value_i[4]_i_1__3_n_0 ;
  wire \count_value_i[5]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_2__2_n_0 ;
  wire \count_value_i[7]_i_1__2_n_0 ;
  wire \count_value_i[8]_i_1__0_n_0 ;
  wire \count_value_i[8]_i_2__0_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire [0:0]\count_value_i_reg[7]_0 ;
  wire \count_value_i_reg[8]_0 ;
  wire \count_value_i_reg_n_0_[8] ;
  wire enb;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 ;
  wire [1:0]\grdc.rd_data_count_i_reg[7] ;
  wire [7:0]\grdc.rd_data_count_i_reg[8] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [7:0]src_in_bin;
  wire [7:7]\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_CO_UNCONNECTED ;

  LUT5 #(
    .INIT(32'hABAA5455)) 
    \count_value_i[0]_i_1__4 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(Q[0]),
        .O(\count_value_i[0]_i_1__4_n_0 ));
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__4 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair160" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair161" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__3 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair161" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__3 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__3_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__2 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__2_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__2_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h0000AAA200000000)) 
    \count_value_i[6]_i_2__2 
       (.I0(Q[1]),
        .I1(\count_value_i_reg[0]_0 [1]),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair158" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__2 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair158" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1__0 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(\count_value_i_reg_n_0_[8] ),
        .O(\count_value_i[8]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(enb),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[0]_i_1__4_n_0 ),
        .Q(Q[0]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[1]_i_1__4_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[2]_i_1__3_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[3]_i_1__3_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[4]_i_1__3_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[5]_i_1__2_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[6]_i_1__2_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[7]_i_1__2_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[8]_i_1__0_n_0 ),
        .Q(\count_value_i_reg_n_0_[8] ),
        .R(\count_value_i_reg[8]_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFE00000001)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_1 
       (.I0(Q[7]),
        .I1(Q[5]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I3(Q[4]),
        .I4(Q[6]),
        .I5(\count_value_i_reg_n_0_[8] ),
        .O(src_in_bin[7]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFBFBBAFB)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [0]),
        .I4(Q[0]),
        .I5(Q[3]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair162" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair159" *) 
  LUT5 #(
    .INIT(32'hFFFE0001)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2 
       (.I0(Q[6]),
        .I1(Q[4]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I3(Q[5]),
        .I4(Q[7]),
        .O(src_in_bin[6]));
  (* SOFT_HLUTNM = "soft_lutpair159" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3 
       (.I0(Q[5]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I2(Q[4]),
        .I3(Q[6]),
        .O(src_in_bin[5]));
  LUT3 #(
    .INIT(8'hE1)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_4 
       (.I0(Q[4]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I2(Q[5]),
        .O(src_in_bin[4]));
  LUT6 #(
    .INIT(64'hFFFFEAFE00001501)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_5 
       (.I0(Q[3]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .I4(Q[2]),
        .I5(Q[4]),
        .O(src_in_bin[3]));
  LUT6 #(
    .INIT(64'hFBFBBAFB04044504)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [0]),
        .I4(Q[0]),
        .I5(Q[3]),
        .O(src_in_bin[2]));
  (* SOFT_HLUTNM = "soft_lutpair160" *) 
  LUT5 #(
    .INIT(32'hB0FB4F04)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_7 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .I4(Q[2]),
        .O(src_in_bin[1]));
  (* SOFT_HLUTNM = "soft_lutpair162" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_9 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .O(src_in_bin[0]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [6]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [5]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [4]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [3]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [2]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [1]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15_n_0 ));
  LUT5 #(
    .INIT(32'hABAA5455)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(Q[0]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2 
       (.I0(Q[6]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3 
       (.I0(Q[5]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4 
       (.I0(Q[4]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5 
       (.I0(Q[3]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6 
       (.I0(Q[2]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7 
       (.I0(Q[1]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8 
       (.I0(Q[0]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [7]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1 
       (.CI(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [0]),
        .CI_TOP(1'b0),
        .CO({\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_CO_UNCONNECTED [7],\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 }),
        .DI({1'b0,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 }),
        .O(D),
        .S({\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16_n_0 }));
  LUT4 #(
    .INIT(16'h00FD)) 
    \gen_sdpram.xpm_memory_base_inst_i_2 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .O(enb));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_10 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[8] [4]),
        .I2(Q[6]),
        .I3(\grdc.rd_data_count_i_reg[8] [5]),
        .O(S[3]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_11 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[8] [3]),
        .I2(Q[5]),
        .I3(\grdc.rd_data_count_i_reg[8] [4]),
        .O(S[2]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_12 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[8] [2]),
        .I2(Q[4]),
        .I3(\grdc.rd_data_count_i_reg[8] [3]),
        .O(S[1]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_13 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[8] [1]),
        .I2(Q[3]),
        .I3(\grdc.rd_data_count_i_reg[8] [2]),
        .O(S[0]));
  LUT3 #(
    .INIT(8'hD4)) 
    \grdc.rd_data_count_i[7]_i_7 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(\grdc.rd_data_count_i_reg[8] [0]),
        .O(DI));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_9 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[8] [5]),
        .I2(Q[7]),
        .I3(\grdc.rd_data_count_i_reg[8] [6]),
        .O(S[4]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[8]_i_3 
       (.I0(Q[7]),
        .I1(\grdc.rd_data_count_i_reg[8] [6]),
        .I2(\count_value_i_reg_n_0_[8] ),
        .I3(\grdc.rd_data_count_i_reg[8] [7]),
        .O(\count_value_i_reg[7]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn__parameterized0_44
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    \gwdc.wr_data_count_i_reg[8] ,
    wr_clk);
  output [8:0]Q;
  output [7:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input [8:0]\gwdc.wr_data_count_i_reg[8] ;
  input wr_clk;

  wire [7:0]D;
  wire [8:0]Q;
  wire \count_value_i[0]_i_1__1_n_0 ;
  wire \count_value_i[1]_i_1__1_n_0 ;
  wire \count_value_i[2]_i_1__1_n_0 ;
  wire \count_value_i[3]_i_1__1_n_0 ;
  wire \count_value_i[4]_i_1__1_n_0 ;
  wire \count_value_i[5]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_2__1_n_0 ;
  wire \count_value_i[7]_i_1__1_n_0 ;
  wire \count_value_i[8]_i_1_n_0 ;
  wire \count_value_i[8]_i_2_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire \gwdc.wr_data_count_i[7]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_3_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_4_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_5_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_6_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_7_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_8_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_9_n_0 ;
  wire \gwdc.wr_data_count_i[8]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_1 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_2 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_3 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_4 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_5 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_6 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_7 ;
  wire [8:0]\gwdc.wr_data_count_i_reg[8] ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [0:0]\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:0]\NLW_gwdc.wr_data_count_i_reg[8]_i_1_CO_UNCONNECTED ;
  wire [7:1]\NLW_gwdc.wr_data_count_i_reg[8]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair167" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair167" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair166" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair166" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__1_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__1_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__1 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair165" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__1 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair165" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__1_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_2 
       (.I0(Q[7]),
        .I1(\gwdc.wr_data_count_i_reg[8] [7]),
        .O(\gwdc.wr_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_3 
       (.I0(Q[6]),
        .I1(\gwdc.wr_data_count_i_reg[8] [6]),
        .O(\gwdc.wr_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_4 
       (.I0(Q[5]),
        .I1(\gwdc.wr_data_count_i_reg[8] [5]),
        .O(\gwdc.wr_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_5 
       (.I0(Q[4]),
        .I1(\gwdc.wr_data_count_i_reg[8] [4]),
        .O(\gwdc.wr_data_count_i[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_6 
       (.I0(Q[3]),
        .I1(\gwdc.wr_data_count_i_reg[8] [3]),
        .O(\gwdc.wr_data_count_i[7]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_7 
       (.I0(Q[2]),
        .I1(\gwdc.wr_data_count_i_reg[8] [2]),
        .O(\gwdc.wr_data_count_i[7]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_8 
       (.I0(Q[1]),
        .I1(\gwdc.wr_data_count_i_reg[8] [1]),
        .O(\gwdc.wr_data_count_i[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_9 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[8] [0]),
        .O(\gwdc.wr_data_count_i[7]_i_9_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[8]_i_2 
       (.I0(Q[8]),
        .I1(\gwdc.wr_data_count_i_reg[8] [8]),
        .O(\gwdc.wr_data_count_i[8]_i_2_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[7]_i_1 
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_1 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_2 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_3 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_4 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_5 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_6 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_7 }),
        .DI(Q[7:0]),
        .O({D[6:0],\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({\gwdc.wr_data_count_i[7]_i_2_n_0 ,\gwdc.wr_data_count_i[7]_i_3_n_0 ,\gwdc.wr_data_count_i[7]_i_4_n_0 ,\gwdc.wr_data_count_i[7]_i_5_n_0 ,\gwdc.wr_data_count_i[7]_i_6_n_0 ,\gwdc.wr_data_count_i[7]_i_7_n_0 ,\gwdc.wr_data_count_i[7]_i_8_n_0 ,\gwdc.wr_data_count_i[7]_i_9_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[8]_i_1 
       (.CI(\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_gwdc.wr_data_count_i_reg[8]_i_1_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_gwdc.wr_data_count_i_reg[8]_i_1_O_UNCONNECTED [7:1],D[7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gwdc.wr_data_count_i[8]_i_2_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn__parameterized1
   (Q,
    E,
    \count_value_i_reg[1]_0 ,
    rd_en,
    ram_empty_i,
    \count_value_i_reg[0]_0 ,
    rd_clk);
  output [7:0]Q;
  input [0:0]E;
  input [1:0]\count_value_i_reg[1]_0 ;
  input rd_en;
  input ram_empty_i;
  input \count_value_i_reg[0]_0 ;
  input rd_clk;

  wire [0:0]E;
  wire [7:0]Q;
  wire \count_value_i[0]_i_1__2_n_0 ;
  wire \count_value_i[1]_i_1__3_n_0 ;
  wire \count_value_i[2]_i_1__2_n_0 ;
  wire \count_value_i[3]_i_1__2_n_0 ;
  wire \count_value_i[4]_i_1__2_n_0 ;
  wire \count_value_i[5]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_2__3_n_0 ;
  wire \count_value_i[7]_i_1__3_n_0 ;
  wire \count_value_i[7]_i_2__1_n_0 ;
  wire \count_value_i_reg[0]_0 ;
  wire [1:0]\count_value_i_reg[1]_0 ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;

  LUT4 #(
    .INIT(16'h10EF)) 
    \count_value_i[0]_i_1__2 
       (.I0(rd_en),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(\count_value_i_reg[1]_0 [1]),
        .I3(Q[0]),
        .O(\count_value_i[0]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__3 
       (.I0(\count_value_i_reg[1]_0 [1]),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__3_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__2 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair226" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair226" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__2 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__3 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__3_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__3 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__3_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h0000AAA200000000)) 
    \count_value_i[6]_i_2__3 
       (.I0(Q[1]),
        .I1(\count_value_i_reg[1]_0 [1]),
        .I2(\count_value_i_reg[1]_0 [0]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__3_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__3 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2__1_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2__1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(E),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2__1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__2_n_0 ),
        .Q(Q[0]),
        .S(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__3_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__2_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__2_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1__2_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[5]_i_1__3_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[6]_i_1__3_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[7]_i_1__3_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn__parameterized1_24
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ,
    wr_clk);
  output [7:0]Q;
  output [6:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input [7:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  input wr_clk;

  wire [6:0]D;
  wire [7:0]Q;
  wire \count_value_i[0]_i_1__0_n_0 ;
  wire \count_value_i[1]_i_1__0_n_0 ;
  wire \count_value_i[2]_i_1__0_n_0 ;
  wire \count_value_i[3]_i_1__0_n_0 ;
  wire \count_value_i[4]_i_1__0_n_0 ;
  wire \count_value_i[5]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_2__0_n_0 ;
  wire \count_value_i[7]_i_1__0_n_0 ;
  wire \count_value_i[7]_i_2__0_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [7:7]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_CO_UNCONNECTED ;
  wire [0:0]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__0 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair232" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair232" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair231" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair231" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__0 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__0_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__0_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__0 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__0_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__0 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2__0_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__0_n_0 ),
        .Q(Q[0]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__0_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__0_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__0_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__0_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__0_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__0_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__0_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [7]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [6]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [5]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [4]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [3]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [2]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [1]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [0]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1 
       (.CI(wr_pntr_plus1_pf_carry),
        .CI_TOP(1'b0),
        .CO({\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_CO_UNCONNECTED [7],\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 }),
        .DI({1'b0,Q[6:0]}),
        .O({D,\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED [0]}),
        .S({\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn__parameterized1_31
   (Q,
    E,
    \count_value_i_reg[1]_0 ,
    rd_en,
    ram_empty_i,
    \count_value_i_reg[0]_0 ,
    rd_clk);
  output [7:0]Q;
  input [0:0]E;
  input [1:0]\count_value_i_reg[1]_0 ;
  input rd_en;
  input ram_empty_i;
  input \count_value_i_reg[0]_0 ;
  input rd_clk;

  wire [0:0]E;
  wire [7:0]Q;
  wire \count_value_i[0]_i_1__2_n_0 ;
  wire \count_value_i[1]_i_1__3_n_0 ;
  wire \count_value_i[2]_i_1__2_n_0 ;
  wire \count_value_i[3]_i_1__2_n_0 ;
  wire \count_value_i[4]_i_1__2_n_0 ;
  wire \count_value_i[5]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_2__3_n_0 ;
  wire \count_value_i[7]_i_1__3_n_0 ;
  wire \count_value_i[7]_i_2__1_n_0 ;
  wire \count_value_i_reg[0]_0 ;
  wire [1:0]\count_value_i_reg[1]_0 ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;

  LUT4 #(
    .INIT(16'h10EF)) 
    \count_value_i[0]_i_1__2 
       (.I0(rd_en),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(\count_value_i_reg[1]_0 [1]),
        .I3(Q[0]),
        .O(\count_value_i[0]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__3 
       (.I0(\count_value_i_reg[1]_0 [1]),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__3_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__2 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair195" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair195" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__2 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__3 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__3_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__3 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__3_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h0000AAA200000000)) 
    \count_value_i[6]_i_2__3 
       (.I0(Q[1]),
        .I1(\count_value_i_reg[1]_0 [1]),
        .I2(\count_value_i_reg[1]_0 [0]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__3_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__3 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2__1_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2__1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(E),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2__1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__2_n_0 ),
        .Q(Q[0]),
        .S(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__3_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__2_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__2_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1__2_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[5]_i_1__3_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[6]_i_1__3_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[7]_i_1__3_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn__parameterized1_34
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ,
    wr_clk);
  output [7:0]Q;
  output [6:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input [7:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  input wr_clk;

  wire [6:0]D;
  wire [7:0]Q;
  wire \count_value_i[0]_i_1__0_n_0 ;
  wire \count_value_i[1]_i_1__0_n_0 ;
  wire \count_value_i[2]_i_1__0_n_0 ;
  wire \count_value_i[3]_i_1__0_n_0 ;
  wire \count_value_i[4]_i_1__0_n_0 ;
  wire \count_value_i[5]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_2__0_n_0 ;
  wire \count_value_i[7]_i_1__0_n_0 ;
  wire \count_value_i[7]_i_2__0_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [7:7]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_CO_UNCONNECTED ;
  wire [0:0]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__0 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair201" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair201" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair200" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair200" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__0 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__0_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__0_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__0 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__0_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__0 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2__0_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__0_n_0 ),
        .Q(Q[0]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__0_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__0_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__0_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__0_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__0_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__0_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__0_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [7]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [6]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [5]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [4]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [3]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [2]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [1]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [0]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1 
       (.CI(wr_pntr_plus1_pf_carry),
        .CI_TOP(1'b0),
        .CO({\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_CO_UNCONNECTED [7],\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 }),
        .DI({1'b0,Q[6:0]}),
        .O({D,\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED [0]}),
        .S({\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn__parameterized1_42
   (Q,
    E,
    \count_value_i_reg[1]_0 ,
    rd_en,
    ram_empty_i,
    \count_value_i_reg[0]_0 ,
    rd_clk);
  output [7:0]Q;
  input [0:0]E;
  input [1:0]\count_value_i_reg[1]_0 ;
  input rd_en;
  input ram_empty_i;
  input \count_value_i_reg[0]_0 ;
  input rd_clk;

  wire [0:0]E;
  wire [7:0]Q;
  wire \count_value_i[0]_i_1__2_n_0 ;
  wire \count_value_i[1]_i_1__3_n_0 ;
  wire \count_value_i[2]_i_1__2_n_0 ;
  wire \count_value_i[3]_i_1__2_n_0 ;
  wire \count_value_i[4]_i_1__2_n_0 ;
  wire \count_value_i[5]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_2__3_n_0 ;
  wire \count_value_i[7]_i_1__3_n_0 ;
  wire \count_value_i[7]_i_2__1_n_0 ;
  wire \count_value_i_reg[0]_0 ;
  wire [1:0]\count_value_i_reg[1]_0 ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;

  LUT4 #(
    .INIT(16'h10EF)) 
    \count_value_i[0]_i_1__2 
       (.I0(rd_en),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(\count_value_i_reg[1]_0 [1]),
        .I3(Q[0]),
        .O(\count_value_i[0]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__3 
       (.I0(\count_value_i_reg[1]_0 [1]),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__3_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__2 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair163" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair163" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__2 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__3 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__3_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__3 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__3_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h0000AAA200000000)) 
    \count_value_i[6]_i_2__3 
       (.I0(Q[1]),
        .I1(\count_value_i_reg[1]_0 [1]),
        .I2(\count_value_i_reg[1]_0 [0]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__3_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__3 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2__1_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2__1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(E),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2__1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__2_n_0 ),
        .Q(Q[0]),
        .S(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__3_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__2_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__2_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1__2_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[5]_i_1__3_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[6]_i_1__3_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[7]_i_1__3_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn__parameterized1_45
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ,
    wr_clk);
  output [7:0]Q;
  output [6:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input [7:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  input wr_clk;

  wire [6:0]D;
  wire [7:0]Q;
  wire \count_value_i[0]_i_1__0_n_0 ;
  wire \count_value_i[1]_i_1__0_n_0 ;
  wire \count_value_i[2]_i_1__0_n_0 ;
  wire \count_value_i[3]_i_1__0_n_0 ;
  wire \count_value_i[4]_i_1__0_n_0 ;
  wire \count_value_i[5]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_2__0_n_0 ;
  wire \count_value_i[7]_i_1__0_n_0 ;
  wire \count_value_i[7]_i_2__0_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [7:7]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_CO_UNCONNECTED ;
  wire [0:0]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__0 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair169" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair169" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair168" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair168" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__0 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__0_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__0_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__0 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__0_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__0 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2__0_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__0_n_0 ),
        .Q(Q[0]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__0_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__0_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__0_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__0_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__0_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__0_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__0_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [7]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [6]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [5]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [4]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [3]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [2]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [1]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [0]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1 
       (.CI(wr_pntr_plus1_pf_carry),
        .CI_TOP(1'b0),
        .CO({\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_CO_UNCONNECTED [7],\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 }),
        .DI({1'b0,Q[6:0]}),
        .O({D,\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED [0]}),
        .S({\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn__parameterized2
   (Q,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    wr_clk);
  output [7:0]Q;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input wr_clk;

  wire [7:0]Q;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[2]_i_1_n_0 ;
  wire \count_value_i[3]_i_1_n_0 ;
  wire \count_value_i[4]_i_1_n_0 ;
  wire \count_value_i[5]_i_1_n_0 ;
  wire \count_value_i[6]_i_1_n_0 ;
  wire \count_value_i[6]_i_2_n_0 ;
  wire \count_value_i[7]_i_1_n_0 ;
  wire \count_value_i[7]_i_2_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  (* SOFT_HLUTNM = "soft_lutpair234" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair234" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair233" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair233" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(Q[1]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn__parameterized2_35
   (Q,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    wr_clk);
  output [7:0]Q;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input wr_clk;

  wire [7:0]Q;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[2]_i_1_n_0 ;
  wire \count_value_i[3]_i_1_n_0 ;
  wire \count_value_i[4]_i_1_n_0 ;
  wire \count_value_i[5]_i_1_n_0 ;
  wire \count_value_i[6]_i_1_n_0 ;
  wire \count_value_i[6]_i_2_n_0 ;
  wire \count_value_i[7]_i_1_n_0 ;
  wire \count_value_i[7]_i_2_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  (* SOFT_HLUTNM = "soft_lutpair203" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair203" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair202" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair202" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(Q[1]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn__parameterized2_46
   (Q,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    wr_clk);
  output [7:0]Q;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input wr_clk;

  wire [7:0]Q;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[2]_i_1_n_0 ;
  wire \count_value_i[3]_i_1_n_0 ;
  wire \count_value_i[4]_i_1_n_0 ;
  wire \count_value_i[5]_i_1_n_0 ;
  wire \count_value_i[6]_i_1_n_0 ;
  wire \count_value_i[6]_i_2_n_0 ;
  wire \count_value_i[7]_i_1_n_0 ;
  wire \count_value_i[7]_i_2_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  (* SOFT_HLUTNM = "soft_lutpair171" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair171" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair170" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair170" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(Q[1]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn__parameterized3
   (Q,
    ram_rd_en_i,
    \reg_out_i_reg[7] ,
    src_in_bin,
    \count_value_i_reg[1]_0 ,
    D,
    \count_value_i_reg[7]_0 ,
    \count_value_i_reg[0]_0 ,
    rd_en,
    ram_empty_i,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \grdc.rd_data_count_i_reg[7] ,
    DI,
    \grdc.rd_data_count_i_reg[9] ,
    S,
    \grdc.rd_data_count_i_reg[9]_0 ,
    \count_value_i_reg[9]_0 ,
    rd_clk);
  output [9:0]Q;
  output ram_rd_en_i;
  output \reg_out_i_reg[7] ;
  output [8:0]src_in_bin;
  output \count_value_i_reg[1]_0 ;
  output [8:0]D;
  output [7:0]\count_value_i_reg[7]_0 ;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input ram_empty_i;
  input [8:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  input [1:0]\grdc.rd_data_count_i_reg[7] ;
  input [7:0]DI;
  input [0:0]\grdc.rd_data_count_i_reg[9] ;
  input [0:0]S;
  input [8:0]\grdc.rd_data_count_i_reg[9]_0 ;
  input \count_value_i_reg[9]_0 ;
  input rd_clk;

  wire [8:0]D;
  wire [7:0]DI;
  wire [9:0]Q;
  wire [0:0]S;
  wire \count_value_i[0]_i_1__4_n_0 ;
  wire \count_value_i[1]_i_1__4_n_0 ;
  wire \count_value_i[2]_i_1__3_n_0 ;
  wire \count_value_i[3]_i_1__3_n_0 ;
  wire \count_value_i[4]_i_1__3_n_0 ;
  wire \count_value_i[5]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_2__3_n_0 ;
  wire \count_value_i[7]_i_1__3_n_0 ;
  wire \count_value_i[8]_i_1__3_n_0 ;
  wire \count_value_i[9]_i_1__0_n_0 ;
  wire \count_value_i[9]_i_2__0_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \count_value_i_reg[1]_0 ;
  wire [7:0]\count_value_i_reg[7]_0 ;
  wire \count_value_i_reg[9]_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_7_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_8_n_0 ;
  wire [8:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  wire \grdc.rd_data_count_i[7]_i_10_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_11_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_12_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_13_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_14_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_15_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_16_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_17_n_0 ;
  wire \grdc.rd_data_count_i[9]_i_5_n_0 ;
  wire [1:0]\grdc.rd_data_count_i_reg[7] ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_0 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_1 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_2 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_3 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_4 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_5 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_6 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_7 ;
  wire [0:0]\grdc.rd_data_count_i_reg[9] ;
  wire [8:0]\grdc.rd_data_count_i_reg[9]_0 ;
  wire \grdc.rd_data_count_i_reg[9]_i_2_n_7 ;
  wire ram_empty_i;
  wire ram_rd_en_i;
  wire rd_clk;
  wire rd_en;
  wire \reg_out_i_reg[7] ;
  wire [8:0]src_in_bin;
  wire [0:0]\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:1]\NLW_grdc.rd_data_count_i_reg[9]_i_2_CO_UNCONNECTED ;
  wire [7:2]\NLW_grdc.rd_data_count_i_reg[9]_i_2_O_UNCONNECTED ;

  LUT5 #(
    .INIT(32'hAABA5545)) 
    \count_value_i[0]_i_1__4 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(Q[0]),
        .O(\count_value_i[0]_i_1__4_n_0 ));
  LUT5 #(
    .INIT(32'h04FFFB00)) 
    \count_value_i[1]_i_1__4 
       (.I0(\count_value_i_reg[0]_0 [0]),
        .I1(\count_value_i_reg[0]_0 [1]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair329" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair326" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__3 
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair326" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__3_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__3 
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(Q[2]),
        .I3(\count_value_i[6]_i_2__3_n_0 ),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__3 
       (.I0(\count_value_i[6]_i_2__3_n_0 ),
        .I1(Q[2]),
        .I2(Q[3]),
        .I3(Q[4]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h0000AA8A00000000)) 
    \count_value_i[6]_i_2__3 
       (.I0(Q[1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair323" *) 
  LUT4 #(
    .INIT(16'hF708)) 
    \count_value_i[7]_i_1__3 
       (.I0(Q[6]),
        .I1(Q[5]),
        .I2(\count_value_i[9]_i_2__0_n_0 ),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair323" *) 
  LUT5 #(
    .INIT(32'hBFFF4000)) 
    \count_value_i[8]_i_1__3 
       (.I0(\count_value_i[9]_i_2__0_n_0 ),
        .I1(Q[5]),
        .I2(Q[6]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF7FFF00008000)) 
    \count_value_i[9]_i_1__0 
       (.I0(Q[8]),
        .I1(Q[7]),
        .I2(Q[6]),
        .I3(Q[5]),
        .I4(\count_value_i[9]_i_2__0_n_0 ),
        .I5(Q[9]),
        .O(\count_value_i[9]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \count_value_i[9]_i_2__0 
       (.I0(Q[0]),
        .I1(ram_rd_en_i),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(Q[3]),
        .I5(Q[4]),
        .O(\count_value_i[9]_i_2__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[0]_i_1__4_n_0 ),
        .Q(Q[0]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[1]_i_1__4_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[2]_i_1__3_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[3]_i_1__3_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[4]_i_1__3_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[5]_i_1__3_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[6]_i_1__3_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[7]_i_1__3_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[8]_i_1__3_n_0 ),
        .Q(Q[8]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[9] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[9]_i_1__0_n_0 ),
        .Q(Q[9]),
        .R(\count_value_i_reg[9]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair327" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_1 
       (.I0(Q[8]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ),
        .I2(Q[7]),
        .I3(Q[9]),
        .O(src_in_bin[8]));
  (* SOFT_HLUTNM = "soft_lutpair324" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11 
       (.I0(Q[5]),
        .I1(Q[3]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I3(Q[4]),
        .I4(Q[6]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair325" *) 
  LUT5 #(
    .INIT(32'hFFFFDD4D)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12 
       (.I0(\grdc.rd_data_count_i_reg[7] [1]),
        .I1(Q[1]),
        .I2(\grdc.rd_data_count_i_reg[7] [0]),
        .I3(Q[0]),
        .I4(Q[2]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair327" *) 
  LUT3 #(
    .INIT(8'hA9)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2 
       (.I0(Q[8]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ),
        .I2(Q[7]),
        .O(src_in_bin[7]));
  LUT6 #(
    .INIT(64'hFFFFFFFE00000001)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3 
       (.I0(Q[6]),
        .I1(Q[4]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[7]),
        .O(src_in_bin[6]));
  (* SOFT_HLUTNM = "soft_lutpair324" *) 
  LUT5 #(
    .INIT(32'hAAAAAAA9)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_4 
       (.I0(Q[6]),
        .I1(Q[4]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .O(src_in_bin[5]));
  (* SOFT_HLUTNM = "soft_lutpair328" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_5 
       (.I0(Q[4]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I2(Q[3]),
        .I3(Q[5]),
        .O(src_in_bin[4]));
  (* SOFT_HLUTNM = "soft_lutpair328" *) 
  LUT3 #(
    .INIT(8'hA9)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6 
       (.I0(Q[4]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I2(Q[3]),
        .O(src_in_bin[3]));
  LUT6 #(
    .INIT(64'hEFAAFFEF10550010)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_7 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(\grdc.rd_data_count_i_reg[7] [0]),
        .I3(Q[1]),
        .I4(\grdc.rd_data_count_i_reg[7] [1]),
        .I5(Q[3]),
        .O(src_in_bin[2]));
  (* SOFT_HLUTNM = "soft_lutpair325" *) 
  LUT5 #(
    .INIT(32'h9A55AA9A)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_8 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(\grdc.rd_data_count_i_reg[7] [0]),
        .I3(Q[1]),
        .I4(\grdc.rd_data_count_i_reg[7] [1]),
        .O(src_in_bin[1]));
  (* SOFT_HLUTNM = "soft_lutpair329" *) 
  LUT4 #(
    .INIT(16'h6696)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_9 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(\grdc.rd_data_count_i_reg[7] [0]),
        .I3(Q[0]),
        .O(src_in_bin[0]));
  LUT5 #(
    .INIT(32'hAABA5545)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(Q[0]),
        .O(\count_value_i_reg[7]_0 [0]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [7]),
        .O(\count_value_i_reg[7]_0 [7]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [6]),
        .O(\count_value_i_reg[7]_0 [6]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [5]),
        .O(\count_value_i_reg[7]_0 [5]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [4]),
        .O(\count_value_i_reg[7]_0 [4]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .O(\count_value_i_reg[7]_0 [3]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .O(\count_value_i_reg[7]_0 [2]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .O(\count_value_i_reg[7]_0 [1]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_5 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .I2(Q[0]),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I4(Q[2]),
        .I5(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .O(\count_value_i_reg[1]_0 ));
  LUT6 #(
    .INIT(64'h8200008200000000)) 
    \gen_pf_ic_rc.ram_empty_i_i_6 
       (.I0(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [7]),
        .I2(Q[7]),
        .I3(Q[8]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [8]),
        .I5(\gen_pf_ic_rc.ram_empty_i_i_8_n_0 ),
        .O(\reg_out_i_reg[7] ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.ram_empty_i_i_7 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [6]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_8 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [4]),
        .I2(Q[3]),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .I4(Q[5]),
        .I5(\gen_pf_ic_rc.ram_empty_i_reg [5]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_8_n_0 ));
  LUT4 #(
    .INIT(16'h00FB)) 
    \gen_sdpram.xpm_memory_base_inst_i_2 
       (.I0(\count_value_i_reg[0]_0 [0]),
        .I1(\count_value_i_reg[0]_0 [1]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .O(ram_rd_en_i));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_10 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [6]),
        .I2(Q[7]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [7]),
        .O(\grdc.rd_data_count_i[7]_i_10_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_11 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [5]),
        .I2(Q[6]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [6]),
        .O(\grdc.rd_data_count_i[7]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_12 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [4]),
        .I2(Q[5]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [5]),
        .O(\grdc.rd_data_count_i[7]_i_12_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_13 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [3]),
        .I2(Q[4]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [4]),
        .O(\grdc.rd_data_count_i[7]_i_13_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_14 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [2]),
        .I2(Q[3]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [3]),
        .O(\grdc.rd_data_count_i[7]_i_14_n_0 ));
  LUT5 #(
    .INIT(32'h2BD4D42B)) 
    \grdc.rd_data_count_i[7]_i_15 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(\grdc.rd_data_count_i_reg[9]_0 [1]),
        .I3(Q[2]),
        .I4(\grdc.rd_data_count_i_reg[9]_0 [2]),
        .O(\grdc.rd_data_count_i[7]_i_15_n_0 ));
  LUT5 #(
    .INIT(32'hD22D2DD2)) 
    \grdc.rd_data_count_i[7]_i_16 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(\grdc.rd_data_count_i_reg[9]_0 [1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .I4(Q[1]),
        .O(\grdc.rd_data_count_i[7]_i_16_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \grdc.rd_data_count_i[7]_i_17 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(\grdc.rd_data_count_i_reg[9]_0 [0]),
        .O(\grdc.rd_data_count_i[7]_i_17_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[9]_i_5 
       (.I0(Q[7]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [7]),
        .I2(Q[8]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [8]),
        .O(\grdc.rd_data_count_i[9]_i_5_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[7]_i_1 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\grdc.rd_data_count_i_reg[7]_i_1_n_0 ,\grdc.rd_data_count_i_reg[7]_i_1_n_1 ,\grdc.rd_data_count_i_reg[7]_i_1_n_2 ,\grdc.rd_data_count_i_reg[7]_i_1_n_3 ,\grdc.rd_data_count_i_reg[7]_i_1_n_4 ,\grdc.rd_data_count_i_reg[7]_i_1_n_5 ,\grdc.rd_data_count_i_reg[7]_i_1_n_6 ,\grdc.rd_data_count_i_reg[7]_i_1_n_7 }),
        .DI(DI),
        .O({D[6:0],\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({\grdc.rd_data_count_i[7]_i_10_n_0 ,\grdc.rd_data_count_i[7]_i_11_n_0 ,\grdc.rd_data_count_i[7]_i_12_n_0 ,\grdc.rd_data_count_i[7]_i_13_n_0 ,\grdc.rd_data_count_i[7]_i_14_n_0 ,\grdc.rd_data_count_i[7]_i_15_n_0 ,\grdc.rd_data_count_i[7]_i_16_n_0 ,\grdc.rd_data_count_i[7]_i_17_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[9]_i_2 
       (.CI(\grdc.rd_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_grdc.rd_data_count_i_reg[9]_i_2_CO_UNCONNECTED [7:1],\grdc.rd_data_count_i_reg[9]_i_2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\grdc.rd_data_count_i_reg[9] }),
        .O({\NLW_grdc.rd_data_count_i_reg[9]_i_2_O_UNCONNECTED [7:2],D[8:7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,S,\grdc.rd_data_count_i[9]_i_5_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn__parameterized3_10
   (Q,
    ram_rd_en_i,
    \reg_out_i_reg[7] ,
    src_in_bin,
    \count_value_i_reg[1]_0 ,
    D,
    \count_value_i_reg[7]_0 ,
    \count_value_i_reg[0]_0 ,
    rd_en,
    ram_empty_i,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \grdc.rd_data_count_i_reg[7] ,
    DI,
    \grdc.rd_data_count_i_reg[9] ,
    S,
    \grdc.rd_data_count_i_reg[9]_0 ,
    \count_value_i_reg[9]_0 ,
    rd_clk);
  output [9:0]Q;
  output ram_rd_en_i;
  output \reg_out_i_reg[7] ;
  output [8:0]src_in_bin;
  output \count_value_i_reg[1]_0 ;
  output [8:0]D;
  output [7:0]\count_value_i_reg[7]_0 ;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input ram_empty_i;
  input [8:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  input [1:0]\grdc.rd_data_count_i_reg[7] ;
  input [7:0]DI;
  input [0:0]\grdc.rd_data_count_i_reg[9] ;
  input [0:0]S;
  input [8:0]\grdc.rd_data_count_i_reg[9]_0 ;
  input \count_value_i_reg[9]_0 ;
  input rd_clk;

  wire [8:0]D;
  wire [7:0]DI;
  wire [9:0]Q;
  wire [0:0]S;
  wire \count_value_i[0]_i_1__4_n_0 ;
  wire \count_value_i[1]_i_1__4_n_0 ;
  wire \count_value_i[2]_i_1__3_n_0 ;
  wire \count_value_i[3]_i_1__3_n_0 ;
  wire \count_value_i[4]_i_1__3_n_0 ;
  wire \count_value_i[5]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_2__3_n_0 ;
  wire \count_value_i[7]_i_1__3_n_0 ;
  wire \count_value_i[8]_i_1__3_n_0 ;
  wire \count_value_i[9]_i_1__0_n_0 ;
  wire \count_value_i[9]_i_2__0_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \count_value_i_reg[1]_0 ;
  wire [7:0]\count_value_i_reg[7]_0 ;
  wire \count_value_i_reg[9]_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_7_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_8_n_0 ;
  wire [8:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  wire \grdc.rd_data_count_i[7]_i_10_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_11_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_12_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_13_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_14_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_15_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_16_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_17_n_0 ;
  wire \grdc.rd_data_count_i[9]_i_5_n_0 ;
  wire [1:0]\grdc.rd_data_count_i_reg[7] ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_0 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_1 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_2 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_3 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_4 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_5 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_6 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_7 ;
  wire [0:0]\grdc.rd_data_count_i_reg[9] ;
  wire [8:0]\grdc.rd_data_count_i_reg[9]_0 ;
  wire \grdc.rd_data_count_i_reg[9]_i_2_n_7 ;
  wire ram_empty_i;
  wire ram_rd_en_i;
  wire rd_clk;
  wire rd_en;
  wire \reg_out_i_reg[7] ;
  wire [8:0]src_in_bin;
  wire [0:0]\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:1]\NLW_grdc.rd_data_count_i_reg[9]_i_2_CO_UNCONNECTED ;
  wire [7:2]\NLW_grdc.rd_data_count_i_reg[9]_i_2_O_UNCONNECTED ;

  LUT5 #(
    .INIT(32'hAABA5545)) 
    \count_value_i[0]_i_1__4 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(Q[0]),
        .O(\count_value_i[0]_i_1__4_n_0 ));
  LUT5 #(
    .INIT(32'h04FFFB00)) 
    \count_value_i[1]_i_1__4 
       (.I0(\count_value_i_reg[0]_0 [0]),
        .I1(\count_value_i_reg[0]_0 [1]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair275" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair272" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__3 
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair272" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__3_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__3 
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(Q[2]),
        .I3(\count_value_i[6]_i_2__3_n_0 ),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__3 
       (.I0(\count_value_i[6]_i_2__3_n_0 ),
        .I1(Q[2]),
        .I2(Q[3]),
        .I3(Q[4]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h0000AA8A00000000)) 
    \count_value_i[6]_i_2__3 
       (.I0(Q[1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair269" *) 
  LUT4 #(
    .INIT(16'hF708)) 
    \count_value_i[7]_i_1__3 
       (.I0(Q[6]),
        .I1(Q[5]),
        .I2(\count_value_i[9]_i_2__0_n_0 ),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair269" *) 
  LUT5 #(
    .INIT(32'hBFFF4000)) 
    \count_value_i[8]_i_1__3 
       (.I0(\count_value_i[9]_i_2__0_n_0 ),
        .I1(Q[5]),
        .I2(Q[6]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF7FFF00008000)) 
    \count_value_i[9]_i_1__0 
       (.I0(Q[8]),
        .I1(Q[7]),
        .I2(Q[6]),
        .I3(Q[5]),
        .I4(\count_value_i[9]_i_2__0_n_0 ),
        .I5(Q[9]),
        .O(\count_value_i[9]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \count_value_i[9]_i_2__0 
       (.I0(Q[0]),
        .I1(ram_rd_en_i),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(Q[3]),
        .I5(Q[4]),
        .O(\count_value_i[9]_i_2__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[0]_i_1__4_n_0 ),
        .Q(Q[0]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[1]_i_1__4_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[2]_i_1__3_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[3]_i_1__3_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[4]_i_1__3_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[5]_i_1__3_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[6]_i_1__3_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[7]_i_1__3_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[8]_i_1__3_n_0 ),
        .Q(Q[8]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[9] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[9]_i_1__0_n_0 ),
        .Q(Q[9]),
        .R(\count_value_i_reg[9]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair273" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_1 
       (.I0(Q[8]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ),
        .I2(Q[7]),
        .I3(Q[9]),
        .O(src_in_bin[8]));
  (* SOFT_HLUTNM = "soft_lutpair270" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11 
       (.I0(Q[5]),
        .I1(Q[3]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I3(Q[4]),
        .I4(Q[6]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair271" *) 
  LUT5 #(
    .INIT(32'hFFFFDD4D)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12 
       (.I0(\grdc.rd_data_count_i_reg[7] [1]),
        .I1(Q[1]),
        .I2(\grdc.rd_data_count_i_reg[7] [0]),
        .I3(Q[0]),
        .I4(Q[2]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair273" *) 
  LUT3 #(
    .INIT(8'hA9)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2 
       (.I0(Q[8]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ),
        .I2(Q[7]),
        .O(src_in_bin[7]));
  LUT6 #(
    .INIT(64'hFFFFFFFE00000001)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3 
       (.I0(Q[6]),
        .I1(Q[4]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[7]),
        .O(src_in_bin[6]));
  (* SOFT_HLUTNM = "soft_lutpair270" *) 
  LUT5 #(
    .INIT(32'hAAAAAAA9)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_4 
       (.I0(Q[6]),
        .I1(Q[4]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .O(src_in_bin[5]));
  (* SOFT_HLUTNM = "soft_lutpair274" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_5 
       (.I0(Q[4]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I2(Q[3]),
        .I3(Q[5]),
        .O(src_in_bin[4]));
  (* SOFT_HLUTNM = "soft_lutpair274" *) 
  LUT3 #(
    .INIT(8'hA9)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6 
       (.I0(Q[4]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I2(Q[3]),
        .O(src_in_bin[3]));
  LUT6 #(
    .INIT(64'hEFAAFFEF10550010)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_7 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(\grdc.rd_data_count_i_reg[7] [0]),
        .I3(Q[1]),
        .I4(\grdc.rd_data_count_i_reg[7] [1]),
        .I5(Q[3]),
        .O(src_in_bin[2]));
  (* SOFT_HLUTNM = "soft_lutpair271" *) 
  LUT5 #(
    .INIT(32'h9A55AA9A)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_8 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(\grdc.rd_data_count_i_reg[7] [0]),
        .I3(Q[1]),
        .I4(\grdc.rd_data_count_i_reg[7] [1]),
        .O(src_in_bin[1]));
  (* SOFT_HLUTNM = "soft_lutpair275" *) 
  LUT4 #(
    .INIT(16'h6696)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_9 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(\grdc.rd_data_count_i_reg[7] [0]),
        .I3(Q[0]),
        .O(src_in_bin[0]));
  LUT5 #(
    .INIT(32'hAABA5545)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(Q[0]),
        .O(\count_value_i_reg[7]_0 [0]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [7]),
        .O(\count_value_i_reg[7]_0 [7]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [6]),
        .O(\count_value_i_reg[7]_0 [6]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [5]),
        .O(\count_value_i_reg[7]_0 [5]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [4]),
        .O(\count_value_i_reg[7]_0 [4]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .O(\count_value_i_reg[7]_0 [3]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .O(\count_value_i_reg[7]_0 [2]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .O(\count_value_i_reg[7]_0 [1]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_5 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .I2(Q[0]),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I4(Q[2]),
        .I5(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .O(\count_value_i_reg[1]_0 ));
  LUT6 #(
    .INIT(64'h8200008200000000)) 
    \gen_pf_ic_rc.ram_empty_i_i_6 
       (.I0(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [7]),
        .I2(Q[7]),
        .I3(Q[8]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [8]),
        .I5(\gen_pf_ic_rc.ram_empty_i_i_8_n_0 ),
        .O(\reg_out_i_reg[7] ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.ram_empty_i_i_7 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [6]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_8 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [4]),
        .I2(Q[3]),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .I4(Q[5]),
        .I5(\gen_pf_ic_rc.ram_empty_i_reg [5]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_8_n_0 ));
  LUT4 #(
    .INIT(16'h00FB)) 
    \gen_sdpram.xpm_memory_base_inst_i_2 
       (.I0(\count_value_i_reg[0]_0 [0]),
        .I1(\count_value_i_reg[0]_0 [1]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .O(ram_rd_en_i));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_10 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [6]),
        .I2(Q[7]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [7]),
        .O(\grdc.rd_data_count_i[7]_i_10_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_11 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [5]),
        .I2(Q[6]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [6]),
        .O(\grdc.rd_data_count_i[7]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_12 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [4]),
        .I2(Q[5]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [5]),
        .O(\grdc.rd_data_count_i[7]_i_12_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_13 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [3]),
        .I2(Q[4]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [4]),
        .O(\grdc.rd_data_count_i[7]_i_13_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_14 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [2]),
        .I2(Q[3]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [3]),
        .O(\grdc.rd_data_count_i[7]_i_14_n_0 ));
  LUT5 #(
    .INIT(32'h2BD4D42B)) 
    \grdc.rd_data_count_i[7]_i_15 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(\grdc.rd_data_count_i_reg[9]_0 [1]),
        .I3(Q[2]),
        .I4(\grdc.rd_data_count_i_reg[9]_0 [2]),
        .O(\grdc.rd_data_count_i[7]_i_15_n_0 ));
  LUT5 #(
    .INIT(32'hD22D2DD2)) 
    \grdc.rd_data_count_i[7]_i_16 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(\grdc.rd_data_count_i_reg[9]_0 [1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .I4(Q[1]),
        .O(\grdc.rd_data_count_i[7]_i_16_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \grdc.rd_data_count_i[7]_i_17 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(\grdc.rd_data_count_i_reg[9]_0 [0]),
        .O(\grdc.rd_data_count_i[7]_i_17_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[9]_i_5 
       (.I0(Q[7]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [7]),
        .I2(Q[8]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [8]),
        .O(\grdc.rd_data_count_i[9]_i_5_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[7]_i_1 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\grdc.rd_data_count_i_reg[7]_i_1_n_0 ,\grdc.rd_data_count_i_reg[7]_i_1_n_1 ,\grdc.rd_data_count_i_reg[7]_i_1_n_2 ,\grdc.rd_data_count_i_reg[7]_i_1_n_3 ,\grdc.rd_data_count_i_reg[7]_i_1_n_4 ,\grdc.rd_data_count_i_reg[7]_i_1_n_5 ,\grdc.rd_data_count_i_reg[7]_i_1_n_6 ,\grdc.rd_data_count_i_reg[7]_i_1_n_7 }),
        .DI(DI),
        .O({D[6:0],\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({\grdc.rd_data_count_i[7]_i_10_n_0 ,\grdc.rd_data_count_i[7]_i_11_n_0 ,\grdc.rd_data_count_i[7]_i_12_n_0 ,\grdc.rd_data_count_i[7]_i_13_n_0 ,\grdc.rd_data_count_i[7]_i_14_n_0 ,\grdc.rd_data_count_i[7]_i_15_n_0 ,\grdc.rd_data_count_i[7]_i_16_n_0 ,\grdc.rd_data_count_i[7]_i_17_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[9]_i_2 
       (.CI(\grdc.rd_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_grdc.rd_data_count_i_reg[9]_i_2_CO_UNCONNECTED [7:1],\grdc.rd_data_count_i_reg[9]_i_2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\grdc.rd_data_count_i_reg[9] }),
        .O({\NLW_grdc.rd_data_count_i_reg[9]_i_2_O_UNCONNECTED [7:2],D[8:7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,S,\grdc.rd_data_count_i[9]_i_5_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn__parameterized3_13
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[5]_0 ,
    wrst_busy,
    rst_d1,
    \gwdc.wr_data_count_i_reg[9] ,
    wr_clk);
  output [9:0]Q;
  output [8:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[5]_0 ;
  input wrst_busy;
  input rst_d1;
  input [9:0]\gwdc.wr_data_count_i_reg[9] ;
  input wr_clk;

  wire [8:0]D;
  wire [9:0]Q;
  wire \count_value_i[0]_i_1__1_n_0 ;
  wire \count_value_i[1]_i_1__1_n_0 ;
  wire \count_value_i[2]_i_1__1_n_0 ;
  wire \count_value_i[3]_i_1__1_n_0 ;
  wire \count_value_i[4]_i_1__1_n_0 ;
  wire \count_value_i[5]_i_1_n_0 ;
  wire \count_value_i[6]_i_1_n_0 ;
  wire \count_value_i[6]_i_2_n_0 ;
  wire \count_value_i[7]_i_1_n_0 ;
  wire \count_value_i[8]_i_1_n_0 ;
  wire \count_value_i[9]_i_1_n_0 ;
  wire \count_value_i[9]_i_2_n_0 ;
  wire \count_value_i_reg[5]_0 ;
  wire \gwdc.wr_data_count_i[7]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_3_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_4_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_5_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_6_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_7_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_8_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_9_n_0 ;
  wire \gwdc.wr_data_count_i[9]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[9]_i_3_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_1 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_2 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_3 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_4 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_5 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_6 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_7 ;
  wire [9:0]\gwdc.wr_data_count_i_reg[9] ;
  wire \gwdc.wr_data_count_i_reg[9]_i_1_n_7 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [0:0]\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:1]\NLW_gwdc.wr_data_count_i_reg[9]_i_1_CO_UNCONNECTED ;
  wire [7:2]\NLW_gwdc.wr_data_count_i_reg[9]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair281" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair281" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair280" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair280" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[5]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair279" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1 
       (.I0(Q[5]),
        .I1(\count_value_i[9]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair279" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1 
       (.I0(Q[6]),
        .I1(\count_value_i[9]_i_2_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[9]_i_1 
       (.I0(Q[7]),
        .I1(Q[5]),
        .I2(\count_value_i[9]_i_2_n_0 ),
        .I3(Q[6]),
        .I4(Q[8]),
        .I5(Q[9]),
        .O(\count_value_i[9]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[9]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[9]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__1_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[9] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[9]_i_1_n_0 ),
        .Q(Q[9]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_2 
       (.I0(Q[7]),
        .I1(\gwdc.wr_data_count_i_reg[9] [7]),
        .O(\gwdc.wr_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_3 
       (.I0(Q[6]),
        .I1(\gwdc.wr_data_count_i_reg[9] [6]),
        .O(\gwdc.wr_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_4 
       (.I0(Q[5]),
        .I1(\gwdc.wr_data_count_i_reg[9] [5]),
        .O(\gwdc.wr_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_5 
       (.I0(Q[4]),
        .I1(\gwdc.wr_data_count_i_reg[9] [4]),
        .O(\gwdc.wr_data_count_i[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_6 
       (.I0(Q[3]),
        .I1(\gwdc.wr_data_count_i_reg[9] [3]),
        .O(\gwdc.wr_data_count_i[7]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_7 
       (.I0(Q[2]),
        .I1(\gwdc.wr_data_count_i_reg[9] [2]),
        .O(\gwdc.wr_data_count_i[7]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_8 
       (.I0(Q[1]),
        .I1(\gwdc.wr_data_count_i_reg[9] [1]),
        .O(\gwdc.wr_data_count_i[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_9 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[9] [0]),
        .O(\gwdc.wr_data_count_i[7]_i_9_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[9]_i_2 
       (.I0(Q[9]),
        .I1(\gwdc.wr_data_count_i_reg[9] [9]),
        .O(\gwdc.wr_data_count_i[9]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[9]_i_3 
       (.I0(Q[8]),
        .I1(\gwdc.wr_data_count_i_reg[9] [8]),
        .O(\gwdc.wr_data_count_i[9]_i_3_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[7]_i_1 
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_1 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_2 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_3 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_4 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_5 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_6 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_7 }),
        .DI(Q[7:0]),
        .O({D[6:0],\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({\gwdc.wr_data_count_i[7]_i_2_n_0 ,\gwdc.wr_data_count_i[7]_i_3_n_0 ,\gwdc.wr_data_count_i[7]_i_4_n_0 ,\gwdc.wr_data_count_i[7]_i_5_n_0 ,\gwdc.wr_data_count_i[7]_i_6_n_0 ,\gwdc.wr_data_count_i[7]_i_7_n_0 ,\gwdc.wr_data_count_i[7]_i_8_n_0 ,\gwdc.wr_data_count_i[7]_i_9_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[9]_i_1 
       (.CI(\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_gwdc.wr_data_count_i_reg[9]_i_1_CO_UNCONNECTED [7:1],\gwdc.wr_data_count_i_reg[9]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,Q[8]}),
        .O({\NLW_gwdc.wr_data_count_i_reg[9]_i_1_O_UNCONNECTED [7:2],D[8:7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gwdc.wr_data_count_i[9]_i_2_n_0 ,\gwdc.wr_data_count_i[9]_i_3_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn__parameterized3_3
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[5]_0 ,
    wrst_busy,
    rst_d1,
    \gwdc.wr_data_count_i_reg[9] ,
    wr_clk);
  output [9:0]Q;
  output [8:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[5]_0 ;
  input wrst_busy;
  input rst_d1;
  input [9:0]\gwdc.wr_data_count_i_reg[9] ;
  input wr_clk;

  wire [8:0]D;
  wire [9:0]Q;
  wire \count_value_i[0]_i_1__1_n_0 ;
  wire \count_value_i[1]_i_1__1_n_0 ;
  wire \count_value_i[2]_i_1__1_n_0 ;
  wire \count_value_i[3]_i_1__1_n_0 ;
  wire \count_value_i[4]_i_1__1_n_0 ;
  wire \count_value_i[5]_i_1_n_0 ;
  wire \count_value_i[6]_i_1_n_0 ;
  wire \count_value_i[6]_i_2_n_0 ;
  wire \count_value_i[7]_i_1_n_0 ;
  wire \count_value_i[8]_i_1_n_0 ;
  wire \count_value_i[9]_i_1_n_0 ;
  wire \count_value_i[9]_i_2_n_0 ;
  wire \count_value_i_reg[5]_0 ;
  wire \gwdc.wr_data_count_i[7]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_3_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_4_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_5_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_6_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_7_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_8_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_9_n_0 ;
  wire \gwdc.wr_data_count_i[9]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[9]_i_3_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_1 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_2 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_3 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_4 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_5 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_6 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_7 ;
  wire [9:0]\gwdc.wr_data_count_i_reg[9] ;
  wire \gwdc.wr_data_count_i_reg[9]_i_1_n_7 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [0:0]\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:1]\NLW_gwdc.wr_data_count_i_reg[9]_i_1_CO_UNCONNECTED ;
  wire [7:2]\NLW_gwdc.wr_data_count_i_reg[9]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair335" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair335" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair334" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair334" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[5]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair333" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1 
       (.I0(Q[5]),
        .I1(\count_value_i[9]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair333" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1 
       (.I0(Q[6]),
        .I1(\count_value_i[9]_i_2_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[9]_i_1 
       (.I0(Q[7]),
        .I1(Q[5]),
        .I2(\count_value_i[9]_i_2_n_0 ),
        .I3(Q[6]),
        .I4(Q[8]),
        .I5(Q[9]),
        .O(\count_value_i[9]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[9]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[9]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__1_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[9] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[9]_i_1_n_0 ),
        .Q(Q[9]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_2 
       (.I0(Q[7]),
        .I1(\gwdc.wr_data_count_i_reg[9] [7]),
        .O(\gwdc.wr_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_3 
       (.I0(Q[6]),
        .I1(\gwdc.wr_data_count_i_reg[9] [6]),
        .O(\gwdc.wr_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_4 
       (.I0(Q[5]),
        .I1(\gwdc.wr_data_count_i_reg[9] [5]),
        .O(\gwdc.wr_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_5 
       (.I0(Q[4]),
        .I1(\gwdc.wr_data_count_i_reg[9] [4]),
        .O(\gwdc.wr_data_count_i[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_6 
       (.I0(Q[3]),
        .I1(\gwdc.wr_data_count_i_reg[9] [3]),
        .O(\gwdc.wr_data_count_i[7]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_7 
       (.I0(Q[2]),
        .I1(\gwdc.wr_data_count_i_reg[9] [2]),
        .O(\gwdc.wr_data_count_i[7]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_8 
       (.I0(Q[1]),
        .I1(\gwdc.wr_data_count_i_reg[9] [1]),
        .O(\gwdc.wr_data_count_i[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_9 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[9] [0]),
        .O(\gwdc.wr_data_count_i[7]_i_9_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[9]_i_2 
       (.I0(Q[9]),
        .I1(\gwdc.wr_data_count_i_reg[9] [9]),
        .O(\gwdc.wr_data_count_i[9]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[9]_i_3 
       (.I0(Q[8]),
        .I1(\gwdc.wr_data_count_i_reg[9] [8]),
        .O(\gwdc.wr_data_count_i[9]_i_3_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[7]_i_1 
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_1 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_2 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_3 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_4 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_5 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_6 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_7 }),
        .DI(Q[7:0]),
        .O({D[6:0],\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({\gwdc.wr_data_count_i[7]_i_2_n_0 ,\gwdc.wr_data_count_i[7]_i_3_n_0 ,\gwdc.wr_data_count_i[7]_i_4_n_0 ,\gwdc.wr_data_count_i[7]_i_5_n_0 ,\gwdc.wr_data_count_i[7]_i_6_n_0 ,\gwdc.wr_data_count_i[7]_i_7_n_0 ,\gwdc.wr_data_count_i[7]_i_8_n_0 ,\gwdc.wr_data_count_i[7]_i_9_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[9]_i_1 
       (.CI(\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_gwdc.wr_data_count_i_reg[9]_i_1_CO_UNCONNECTED [7:1],\gwdc.wr_data_count_i_reg[9]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,Q[8]}),
        .O({\NLW_gwdc.wr_data_count_i_reg[9]_i_1_O_UNCONNECTED [7:2],D[8:7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gwdc.wr_data_count_i[9]_i_2_n_0 ,\gwdc.wr_data_count_i[9]_i_3_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn__parameterized4
   (ram_empty_i0,
    E,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \gen_pf_ic_rc.ram_empty_i_reg_0 ,
    Q,
    rd_en,
    ram_empty_i,
    \gen_pf_ic_rc.ram_empty_i_reg_1 ,
    \count_value_i_reg[0]_0 ,
    rd_clk);
  output ram_empty_i0;
  input [0:0]E;
  input \gen_pf_ic_rc.ram_empty_i_reg ;
  input \gen_pf_ic_rc.ram_empty_i_reg_0 ;
  input [1:0]Q;
  input rd_en;
  input ram_empty_i;
  input [8:0]\gen_pf_ic_rc.ram_empty_i_reg_1 ;
  input \count_value_i_reg[0]_0 ;
  input rd_clk;

  wire [0:0]E;
  wire [1:0]Q;
  wire \count_value_i[0]_i_1__3_n_0 ;
  wire \count_value_i[1]_i_1__3_n_0 ;
  wire \count_value_i[2]_i_1__2_n_0 ;
  wire \count_value_i[3]_i_1__2_n_0 ;
  wire \count_value_i[4]_i_1__2_n_0 ;
  wire \count_value_i[5]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_2__2_n_0 ;
  wire \count_value_i[7]_i_1__2_n_0 ;
  wire \count_value_i[8]_i_1__2_n_0 ;
  wire \count_value_i[8]_i_2__1_n_0 ;
  wire \count_value_i_reg[0]_0 ;
  wire \count_value_i_reg_n_0_[0] ;
  wire \count_value_i_reg_n_0_[1] ;
  wire \count_value_i_reg_n_0_[2] ;
  wire \count_value_i_reg_n_0_[3] ;
  wire \count_value_i_reg_n_0_[4] ;
  wire \count_value_i_reg_n_0_[5] ;
  wire \count_value_i_reg_n_0_[6] ;
  wire \count_value_i_reg_n_0_[7] ;
  wire \count_value_i_reg_n_0_[8] ;
  wire \gen_pf_ic_rc.ram_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_3_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_reg ;
  wire \gen_pf_ic_rc.ram_empty_i_reg_0 ;
  wire [8:0]\gen_pf_ic_rc.ram_empty_i_reg_1 ;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire rd_en;

  LUT4 #(
    .INIT(16'h04FB)) 
    \count_value_i[0]_i_1__3 
       (.I0(rd_en),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(\count_value_i_reg_n_0_[0] ),
        .O(\count_value_i[0]_i_1__3_n_0 ));
  LUT5 #(
    .INIT(32'h04FFFB00)) 
    \count_value_i[1]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(rd_en),
        .I3(\count_value_i_reg_n_0_[0] ),
        .I4(\count_value_i_reg_n_0_[1] ),
        .O(\count_value_i[1]_i_1__3_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(\count_value_i_reg_n_0_[1] ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .O(\count_value_i[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair331" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[2] ),
        .I1(\count_value_i_reg_n_0_[1] ),
        .I2(\count_value_i_reg_n_0_[0] ),
        .I3(\count_value_i_reg_n_0_[3] ),
        .O(\count_value_i[3]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair331" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(\count_value_i_reg_n_0_[1] ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .I3(\count_value_i_reg_n_0_[3] ),
        .I4(\count_value_i_reg_n_0_[4] ),
        .O(\count_value_i[4]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[4] ),
        .I1(\count_value_i_reg_n_0_[3] ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .I3(\count_value_i[6]_i_2__2_n_0 ),
        .I4(\count_value_i_reg_n_0_[5] ),
        .O(\count_value_i[5]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__2 
       (.I0(\count_value_i[6]_i_2__2_n_0 ),
        .I1(\count_value_i_reg_n_0_[2] ),
        .I2(\count_value_i_reg_n_0_[3] ),
        .I3(\count_value_i_reg_n_0_[4] ),
        .I4(\count_value_i_reg_n_0_[5] ),
        .I5(\count_value_i_reg_n_0_[6] ),
        .O(\count_value_i[6]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h0000AA8A00000000)) 
    \count_value_i[6]_i_2__2 
       (.I0(\count_value_i_reg_n_0_[1] ),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(\count_value_i_reg_n_0_[0] ),
        .O(\count_value_i[6]_i_2__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair330" *) 
  LUT4 #(
    .INIT(16'hF708)) 
    \count_value_i[7]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[6] ),
        .I1(\count_value_i_reg_n_0_[5] ),
        .I2(\count_value_i[8]_i_2__1_n_0 ),
        .I3(\count_value_i_reg_n_0_[7] ),
        .O(\count_value_i[7]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair330" *) 
  LUT5 #(
    .INIT(32'hDFFF2000)) 
    \count_value_i[8]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[7] ),
        .I1(\count_value_i[8]_i_2__1_n_0 ),
        .I2(\count_value_i_reg_n_0_[5] ),
        .I3(\count_value_i_reg_n_0_[6] ),
        .I4(\count_value_i_reg_n_0_[8] ),
        .O(\count_value_i[8]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \count_value_i[8]_i_2__1 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(E),
        .I2(\count_value_i_reg_n_0_[1] ),
        .I3(\count_value_i_reg_n_0_[2] ),
        .I4(\count_value_i_reg_n_0_[3] ),
        .I5(\count_value_i_reg_n_0_[4] ),
        .O(\count_value_i[8]_i_2__1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__3_n_0 ),
        .Q(\count_value_i_reg_n_0_[0] ),
        .S(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__3_n_0 ),
        .Q(\count_value_i_reg_n_0_[1] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[2] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[3] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[4] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[5]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[5] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[6]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[6] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[7]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[7] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[8]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[8] ),
        .R(\count_value_i_reg[0]_0 ));
  LUT6 #(
    .INIT(64'hFFFF800080008000)) 
    \gen_pf_ic_rc.ram_empty_i_i_1 
       (.I0(\gen_pf_ic_rc.ram_empty_i_i_2_n_0 ),
        .I1(E),
        .I2(\gen_pf_ic_rc.ram_empty_i_i_3_n_0 ),
        .I3(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg ),
        .I5(\gen_pf_ic_rc.ram_empty_i_reg_0 ),
        .O(ram_empty_i0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_2 
       (.I0(\count_value_i_reg_n_0_[7] ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_1 [7]),
        .I2(\count_value_i_reg_n_0_[6] ),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg_1 [6]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_1 [8]),
        .I5(\count_value_i_reg_n_0_[8] ),
        .O(\gen_pf_ic_rc.ram_empty_i_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_3 
       (.I0(\count_value_i_reg_n_0_[1] ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_1 [1]),
        .I2(\count_value_i_reg_n_0_[0] ),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg_1 [0]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_1 [2]),
        .I5(\count_value_i_reg_n_0_[2] ),
        .O(\gen_pf_ic_rc.ram_empty_i_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_4 
       (.I0(\count_value_i_reg_n_0_[4] ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_1 [4]),
        .I2(\count_value_i_reg_n_0_[3] ),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg_1 [3]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_1 [5]),
        .I5(\count_value_i_reg_n_0_[5] ),
        .O(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn__parameterized4_11
   (ram_empty_i0,
    E,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \gen_pf_ic_rc.ram_empty_i_reg_0 ,
    Q,
    rd_en,
    ram_empty_i,
    \gen_pf_ic_rc.ram_empty_i_reg_1 ,
    \count_value_i_reg[0]_0 ,
    rd_clk);
  output ram_empty_i0;
  input [0:0]E;
  input \gen_pf_ic_rc.ram_empty_i_reg ;
  input \gen_pf_ic_rc.ram_empty_i_reg_0 ;
  input [1:0]Q;
  input rd_en;
  input ram_empty_i;
  input [8:0]\gen_pf_ic_rc.ram_empty_i_reg_1 ;
  input \count_value_i_reg[0]_0 ;
  input rd_clk;

  wire [0:0]E;
  wire [1:0]Q;
  wire \count_value_i[0]_i_1__3_n_0 ;
  wire \count_value_i[1]_i_1__3_n_0 ;
  wire \count_value_i[2]_i_1__2_n_0 ;
  wire \count_value_i[3]_i_1__2_n_0 ;
  wire \count_value_i[4]_i_1__2_n_0 ;
  wire \count_value_i[5]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_2__2_n_0 ;
  wire \count_value_i[7]_i_1__2_n_0 ;
  wire \count_value_i[8]_i_1__2_n_0 ;
  wire \count_value_i[8]_i_2__1_n_0 ;
  wire \count_value_i_reg[0]_0 ;
  wire \count_value_i_reg_n_0_[0] ;
  wire \count_value_i_reg_n_0_[1] ;
  wire \count_value_i_reg_n_0_[2] ;
  wire \count_value_i_reg_n_0_[3] ;
  wire \count_value_i_reg_n_0_[4] ;
  wire \count_value_i_reg_n_0_[5] ;
  wire \count_value_i_reg_n_0_[6] ;
  wire \count_value_i_reg_n_0_[7] ;
  wire \count_value_i_reg_n_0_[8] ;
  wire \gen_pf_ic_rc.ram_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_3_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_reg ;
  wire \gen_pf_ic_rc.ram_empty_i_reg_0 ;
  wire [8:0]\gen_pf_ic_rc.ram_empty_i_reg_1 ;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire rd_en;

  LUT4 #(
    .INIT(16'h04FB)) 
    \count_value_i[0]_i_1__3 
       (.I0(rd_en),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(\count_value_i_reg_n_0_[0] ),
        .O(\count_value_i[0]_i_1__3_n_0 ));
  LUT5 #(
    .INIT(32'h04FFFB00)) 
    \count_value_i[1]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(rd_en),
        .I3(\count_value_i_reg_n_0_[0] ),
        .I4(\count_value_i_reg_n_0_[1] ),
        .O(\count_value_i[1]_i_1__3_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(\count_value_i_reg_n_0_[1] ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .O(\count_value_i[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair277" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[2] ),
        .I1(\count_value_i_reg_n_0_[1] ),
        .I2(\count_value_i_reg_n_0_[0] ),
        .I3(\count_value_i_reg_n_0_[3] ),
        .O(\count_value_i[3]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair277" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(\count_value_i_reg_n_0_[1] ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .I3(\count_value_i_reg_n_0_[3] ),
        .I4(\count_value_i_reg_n_0_[4] ),
        .O(\count_value_i[4]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[4] ),
        .I1(\count_value_i_reg_n_0_[3] ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .I3(\count_value_i[6]_i_2__2_n_0 ),
        .I4(\count_value_i_reg_n_0_[5] ),
        .O(\count_value_i[5]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__2 
       (.I0(\count_value_i[6]_i_2__2_n_0 ),
        .I1(\count_value_i_reg_n_0_[2] ),
        .I2(\count_value_i_reg_n_0_[3] ),
        .I3(\count_value_i_reg_n_0_[4] ),
        .I4(\count_value_i_reg_n_0_[5] ),
        .I5(\count_value_i_reg_n_0_[6] ),
        .O(\count_value_i[6]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h0000AA8A00000000)) 
    \count_value_i[6]_i_2__2 
       (.I0(\count_value_i_reg_n_0_[1] ),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(\count_value_i_reg_n_0_[0] ),
        .O(\count_value_i[6]_i_2__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair276" *) 
  LUT4 #(
    .INIT(16'hF708)) 
    \count_value_i[7]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[6] ),
        .I1(\count_value_i_reg_n_0_[5] ),
        .I2(\count_value_i[8]_i_2__1_n_0 ),
        .I3(\count_value_i_reg_n_0_[7] ),
        .O(\count_value_i[7]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair276" *) 
  LUT5 #(
    .INIT(32'hDFFF2000)) 
    \count_value_i[8]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[7] ),
        .I1(\count_value_i[8]_i_2__1_n_0 ),
        .I2(\count_value_i_reg_n_0_[5] ),
        .I3(\count_value_i_reg_n_0_[6] ),
        .I4(\count_value_i_reg_n_0_[8] ),
        .O(\count_value_i[8]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \count_value_i[8]_i_2__1 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(E),
        .I2(\count_value_i_reg_n_0_[1] ),
        .I3(\count_value_i_reg_n_0_[2] ),
        .I4(\count_value_i_reg_n_0_[3] ),
        .I5(\count_value_i_reg_n_0_[4] ),
        .O(\count_value_i[8]_i_2__1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__3_n_0 ),
        .Q(\count_value_i_reg_n_0_[0] ),
        .S(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__3_n_0 ),
        .Q(\count_value_i_reg_n_0_[1] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[2] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[3] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[4] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[5]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[5] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[6]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[6] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[7]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[7] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[8]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[8] ),
        .R(\count_value_i_reg[0]_0 ));
  LUT6 #(
    .INIT(64'hFFFF800080008000)) 
    \gen_pf_ic_rc.ram_empty_i_i_1 
       (.I0(\gen_pf_ic_rc.ram_empty_i_i_2_n_0 ),
        .I1(E),
        .I2(\gen_pf_ic_rc.ram_empty_i_i_3_n_0 ),
        .I3(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg ),
        .I5(\gen_pf_ic_rc.ram_empty_i_reg_0 ),
        .O(ram_empty_i0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_2 
       (.I0(\count_value_i_reg_n_0_[7] ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_1 [7]),
        .I2(\count_value_i_reg_n_0_[6] ),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg_1 [6]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_1 [8]),
        .I5(\count_value_i_reg_n_0_[8] ),
        .O(\gen_pf_ic_rc.ram_empty_i_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_3 
       (.I0(\count_value_i_reg_n_0_[1] ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_1 [1]),
        .I2(\count_value_i_reg_n_0_[0] ),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg_1 [0]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_1 [2]),
        .I5(\count_value_i_reg_n_0_[2] ),
        .O(\gen_pf_ic_rc.ram_empty_i_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_4 
       (.I0(\count_value_i_reg_n_0_[4] ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_1 [4]),
        .I2(\count_value_i_reg_n_0_[3] ),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg_1 [3]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_1 [5]),
        .I5(\count_value_i_reg_n_0_[5] ),
        .O(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn__parameterized4_14
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[5]_0 ,
    wrst_busy,
    rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] ,
    wr_clk);
  output [8:0]Q;
  output [7:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[5]_0 ;
  input wrst_busy;
  input rst_d1;
  input [8:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] ;
  input wr_clk;

  wire [7:0]D;
  wire [8:0]Q;
  wire \count_value_i[0]_i_1__0_n_0 ;
  wire \count_value_i[1]_i_1__0_n_0 ;
  wire \count_value_i[2]_i_1__0_n_0 ;
  wire \count_value_i[3]_i_1__0_n_0 ;
  wire \count_value_i[4]_i_1__0_n_0 ;
  wire \count_value_i[5]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_2__0_n_0 ;
  wire \count_value_i[7]_i_1__0_n_0 ;
  wire \count_value_i[8]_i_1__0_n_0 ;
  wire \count_value_i[8]_i_2_n_0 ;
  wire \count_value_i_reg[5]_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[9]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 ;
  wire [8:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [0:0]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED ;
  wire [7:0]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1_CO_UNCONNECTED ;
  wire [7:1]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__0 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair284" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair284" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair283" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair283" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__0 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__0_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__0_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__0 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[5]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair282" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__0 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair282" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1__0 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__0_n_0 ),
        .Q(Q[0]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__0_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__0_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__0_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__0_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__0_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__0_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__0_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1__0_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [7]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [6]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [5]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [4]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [3]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [2]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [1]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [0]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[9]_i_2 
       (.I0(Q[8]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [8]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[9]_i_2_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1 
       (.CI(wr_pntr_plus1_pf_carry),
        .CI_TOP(1'b0),
        .CO({\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 }),
        .DI(Q[7:0]),
        .O({D[6:0],\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED [0]}),
        .S({\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1 
       (.CI(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1_O_UNCONNECTED [7:1],D[7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[9]_i_2_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn__parameterized4_4
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[5]_0 ,
    wrst_busy,
    rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] ,
    wr_clk);
  output [8:0]Q;
  output [7:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[5]_0 ;
  input wrst_busy;
  input rst_d1;
  input [8:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] ;
  input wr_clk;

  wire [7:0]D;
  wire [8:0]Q;
  wire \count_value_i[0]_i_1__0_n_0 ;
  wire \count_value_i[1]_i_1__0_n_0 ;
  wire \count_value_i[2]_i_1__0_n_0 ;
  wire \count_value_i[3]_i_1__0_n_0 ;
  wire \count_value_i[4]_i_1__0_n_0 ;
  wire \count_value_i[5]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_2__0_n_0 ;
  wire \count_value_i[7]_i_1__0_n_0 ;
  wire \count_value_i[8]_i_1__0_n_0 ;
  wire \count_value_i[8]_i_2_n_0 ;
  wire \count_value_i_reg[5]_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[9]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 ;
  wire [8:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [0:0]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED ;
  wire [7:0]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1_CO_UNCONNECTED ;
  wire [7:1]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__0 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair338" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair338" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair337" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair337" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__0 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__0_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__0_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__0 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[5]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair336" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__0 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair336" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1__0 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__0_n_0 ),
        .Q(Q[0]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__0_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__0_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__0_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__0_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__0_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__0_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__0_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1__0_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [7]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [6]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [5]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [4]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [3]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [2]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [1]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [0]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[9]_i_2 
       (.I0(Q[8]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [8]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[9]_i_2_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1 
       (.CI(wr_pntr_plus1_pf_carry),
        .CI_TOP(1'b0),
        .CO({\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 }),
        .DI(Q[7:0]),
        .O({D[6:0],\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED [0]}),
        .S({\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1 
       (.CI(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1_O_UNCONNECTED [7:1],D[7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[9]_i_2_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn__parameterized5
   (Q,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[5]_0 ,
    wrst_busy,
    rst_d1,
    wr_clk);
  output [8:0]Q;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[5]_0 ;
  input wrst_busy;
  input rst_d1;
  input wr_clk;

  wire [8:0]Q;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[2]_i_1_n_0 ;
  wire \count_value_i[3]_i_1_n_0 ;
  wire \count_value_i[4]_i_1_n_0 ;
  wire \count_value_i[5]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_2__1_n_0 ;
  wire \count_value_i[7]_i_1__1_n_0 ;
  wire \count_value_i[8]_i_1__1_n_0 ;
  wire \count_value_i[8]_i_2__0_n_0 ;
  wire \count_value_i_reg[5]_0 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  (* SOFT_HLUTNM = "soft_lutpair341" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair341" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair340" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair340" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__1_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__1_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__1 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[5]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair339" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__1 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair339" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1__1 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(Q[1]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1__1_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn__parameterized5_15
   (Q,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[5]_0 ,
    wrst_busy,
    rst_d1,
    wr_clk);
  output [8:0]Q;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[5]_0 ;
  input wrst_busy;
  input rst_d1;
  input wr_clk;

  wire [8:0]Q;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[2]_i_1_n_0 ;
  wire \count_value_i[3]_i_1_n_0 ;
  wire \count_value_i[4]_i_1_n_0 ;
  wire \count_value_i[5]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_2__1_n_0 ;
  wire \count_value_i[7]_i_1__1_n_0 ;
  wire \count_value_i[8]_i_1__1_n_0 ;
  wire \count_value_i[8]_i_2__0_n_0 ;
  wire \count_value_i_reg[5]_0 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  (* SOFT_HLUTNM = "soft_lutpair287" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair287" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair286" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair286" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__1_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__1_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__1 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[5]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair285" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__1 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair285" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1__1 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(Q[1]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1__1_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn__parameterized6
   (D,
    Q,
    \reg_out_i_reg[2] ,
    E,
    src_in_bin,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] ,
    ram_empty_i,
    rd_en,
    \count_value_i_reg[0]_0 ,
    \grdc.rd_data_count_i_reg[4] ,
    \grdc.rd_data_count_i_reg[4]_0 ,
    \grdc.rd_data_count_i_reg[4]_1 ,
    \src_gray_ff_reg[4] ,
    \count_value_i_reg[4]_0 ,
    rd_clk);
  output [1:0]D;
  output [3:0]Q;
  output [1:0]\reg_out_i_reg[2] ;
  output [0:0]E;
  output [3:0]src_in_bin;
  input [3:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] ;
  input ram_empty_i;
  input rd_en;
  input [1:0]\count_value_i_reg[0]_0 ;
  input \grdc.rd_data_count_i_reg[4] ;
  input [3:0]\grdc.rd_data_count_i_reg[4]_0 ;
  input \grdc.rd_data_count_i_reg[4]_1 ;
  input [1:0]\src_gray_ff_reg[4] ;
  input \count_value_i_reg[4]_0 ;
  input rd_clk;

  wire [1:0]D;
  wire [0:0]E;
  wire [3:0]Q;
  wire \count_value_i[0]_i_1__4_n_0 ;
  wire \count_value_i[1]_i_1__4_n_0 ;
  wire \count_value_i[2]_i_1__3_n_0 ;
  wire \count_value_i[3]_i_1__3_n_0 ;
  wire \count_value_i[4]_i_1__0_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \count_value_i_reg[4]_0 ;
  wire \count_value_i_reg_n_0_[4] ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_3_n_0 ;
  wire [3:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] ;
  wire \grdc.rd_data_count_i[4]_i_3_n_0 ;
  wire \grdc.rd_data_count_i[4]_i_6_n_0 ;
  wire \grdc.rd_data_count_i_reg[4] ;
  wire [3:0]\grdc.rd_data_count_i_reg[4]_0 ;
  wire \grdc.rd_data_count_i_reg[4]_1 ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [1:0]\reg_out_i_reg[2] ;
  wire [1:0]\src_gray_ff_reg[4] ;
  wire [3:0]src_in_bin;

  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT4 #(
    .INIT(16'h10EF)) 
    \count_value_i[0]_i_1__4 
       (.I0(rd_en),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(Q[0]),
        .O(\count_value_i[0]_i_1__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__4 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__3 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(\count_value_i_reg_n_0_[4] ),
        .O(\count_value_i[4]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__4_n_0 ),
        .Q(Q[0]),
        .R(\count_value_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__4_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__3_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__3_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1__0_n_0 ),
        .Q(\count_value_i_reg_n_0_[4] ),
        .R(\count_value_i_reg[4]_0 ));
  LUT6 #(
    .INIT(64'hFFFFEAFE00001501)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_1 
       (.I0(Q[3]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6_n_0 ),
        .I2(Q[1]),
        .I3(\src_gray_ff_reg[4] [1]),
        .I4(Q[2]),
        .I5(\count_value_i_reg_n_0_[4] ),
        .O(src_in_bin[3]));
  LUT6 #(
    .INIT(64'hFBFBBAFB04044504)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2 
       (.I0(Q[2]),
        .I1(\src_gray_ff_reg[4] [1]),
        .I2(Q[1]),
        .I3(\src_gray_ff_reg[4] [0]),
        .I4(Q[0]),
        .I5(Q[3]),
        .O(src_in_bin[2]));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT5 #(
    .INIT(32'hB0FB4F04)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[4] [0]),
        .I2(Q[1]),
        .I3(\src_gray_ff_reg[4] [1]),
        .I4(Q[2]),
        .O(src_in_bin[1]));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_5 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[4] [0]),
        .O(src_in_bin[0]));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[4] [0]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6_n_0 ));
  LUT5 #(
    .INIT(32'h718E8E71)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[2]_i_1 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2_n_0 ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [1]),
        .I2(Q[1]),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [2]),
        .I4(Q[2]),
        .O(D[0]));
  LUT6 #(
    .INIT(64'h2BFF002BD400FFD4)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_1 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [1]),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [2]),
        .I4(Q[2]),
        .I5(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_3_n_0 ),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hDDDFDDDD44454444)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2 
       (.I0(Q[0]),
        .I1(ram_empty_i),
        .I2(rd_en),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(\count_value_i_reg[0]_0 [1]),
        .I5(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [0]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_3 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [3]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h00FD)) 
    \gen_sdpram.xpm_memory_base_inst_i_2 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .O(E));
  LUT6 #(
    .INIT(64'h1EE1788787781EE1)) 
    \grdc.rd_data_count_i[3]_i_1 
       (.I0(\grdc.rd_data_count_i_reg[4] ),
        .I1(\grdc.rd_data_count_i[4]_i_3_n_0 ),
        .I2(\grdc.rd_data_count_i_reg[4]_0 [2]),
        .I3(Q[3]),
        .I4(\grdc.rd_data_count_i_reg[4]_0 [1]),
        .I5(Q[2]),
        .O(\reg_out_i_reg[2] [0]));
  LUT6 #(
    .INIT(64'h1701FF7FE8FE0080)) 
    \grdc.rd_data_count_i[4]_i_2 
       (.I0(\grdc.rd_data_count_i[4]_i_3_n_0 ),
        .I1(\grdc.rd_data_count_i_reg[4] ),
        .I2(\grdc.rd_data_count_i_reg[4]_0 [1]),
        .I3(Q[2]),
        .I4(\grdc.rd_data_count_i_reg[4]_1 ),
        .I5(\grdc.rd_data_count_i[4]_i_6_n_0 ),
        .O(\reg_out_i_reg[2] [1]));
  LUT3 #(
    .INIT(8'hD4)) 
    \grdc.rd_data_count_i[4]_i_3 
       (.I0(Q[1]),
        .I1(\src_gray_ff_reg[4] [1]),
        .I2(\grdc.rd_data_count_i_reg[4]_0 [0]),
        .O(\grdc.rd_data_count_i[4]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[4]_i_6 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[4]_0 [2]),
        .I2(\count_value_i_reg_n_0_[4] ),
        .I3(\grdc.rd_data_count_i_reg[4]_0 [3]),
        .O(\grdc.rd_data_count_i[4]_i_6_n_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn__parameterized6_52
   (D,
    Q,
    \gwdc.wr_data_count_i_reg[2] ,
    wrst_busy,
    E,
    wr_clk);
  output [0:0]D;
  output [4:0]Q;
  input [2:0]\gwdc.wr_data_count_i_reg[2] ;
  input wrst_busy;
  input [0:0]E;
  input wr_clk;

  wire [0:0]D;
  wire [0:0]E;
  wire [4:0]Q;
  wire \count_value_i[0]_i_1__1_n_0 ;
  wire \count_value_i[1]_i_1__1_n_0 ;
  wire \count_value_i[2]_i_1__1_n_0 ;
  wire \count_value_i[3]_i_1__1_n_0 ;
  wire \count_value_i[4]_i_1_n_0 ;
  wire [2:0]\gwdc.wr_data_count_i_reg[2] ;
  wire wr_clk;
  wire wrst_busy;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__1_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  LUT6 #(
    .INIT(64'h4F04B0FBB0FB4F04)) 
    \gwdc.wr_data_count_i[2]_i_1 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[2] [0]),
        .I2(Q[1]),
        .I3(\gwdc.wr_data_count_i_reg[2] [1]),
        .I4(\gwdc.wr_data_count_i_reg[2] [2]),
        .I5(Q[2]),
        .O(D));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn__parameterized6_59
   (D,
    Q,
    \reg_out_i_reg[2] ,
    E,
    src_in_bin,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] ,
    ram_empty_i,
    rd_en,
    \count_value_i_reg[0]_0 ,
    \grdc.rd_data_count_i_reg[4] ,
    \grdc.rd_data_count_i_reg[4]_0 ,
    \grdc.rd_data_count_i_reg[4]_1 ,
    \src_gray_ff_reg[4] ,
    \count_value_i_reg[4]_0 ,
    rd_clk);
  output [1:0]D;
  output [3:0]Q;
  output [1:0]\reg_out_i_reg[2] ;
  output [0:0]E;
  output [3:0]src_in_bin;
  input [3:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] ;
  input ram_empty_i;
  input rd_en;
  input [1:0]\count_value_i_reg[0]_0 ;
  input \grdc.rd_data_count_i_reg[4] ;
  input [3:0]\grdc.rd_data_count_i_reg[4]_0 ;
  input \grdc.rd_data_count_i_reg[4]_1 ;
  input [1:0]\src_gray_ff_reg[4] ;
  input \count_value_i_reg[4]_0 ;
  input rd_clk;

  wire [1:0]D;
  wire [0:0]E;
  wire [3:0]Q;
  wire \count_value_i[0]_i_1__4_n_0 ;
  wire \count_value_i[1]_i_1__4_n_0 ;
  wire \count_value_i[2]_i_1__3_n_0 ;
  wire \count_value_i[3]_i_1__3_n_0 ;
  wire \count_value_i[4]_i_1__0_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \count_value_i_reg[4]_0 ;
  wire \count_value_i_reg_n_0_[4] ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_3_n_0 ;
  wire [3:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] ;
  wire \grdc.rd_data_count_i[4]_i_3_n_0 ;
  wire \grdc.rd_data_count_i[4]_i_6_n_0 ;
  wire \grdc.rd_data_count_i_reg[4] ;
  wire [3:0]\grdc.rd_data_count_i_reg[4]_0 ;
  wire \grdc.rd_data_count_i_reg[4]_1 ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [1:0]\reg_out_i_reg[2] ;
  wire [1:0]\src_gray_ff_reg[4] ;
  wire [3:0]src_in_bin;

  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT4 #(
    .INIT(16'h10EF)) 
    \count_value_i[0]_i_1__4 
       (.I0(rd_en),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(Q[0]),
        .O(\count_value_i[0]_i_1__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__4 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__3 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(\count_value_i_reg_n_0_[4] ),
        .O(\count_value_i[4]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__4_n_0 ),
        .Q(Q[0]),
        .R(\count_value_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__4_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__3_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__3_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1__0_n_0 ),
        .Q(\count_value_i_reg_n_0_[4] ),
        .R(\count_value_i_reg[4]_0 ));
  LUT6 #(
    .INIT(64'hFFFFEAFE00001501)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_1 
       (.I0(Q[3]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6_n_0 ),
        .I2(Q[1]),
        .I3(\src_gray_ff_reg[4] [1]),
        .I4(Q[2]),
        .I5(\count_value_i_reg_n_0_[4] ),
        .O(src_in_bin[3]));
  LUT6 #(
    .INIT(64'hFBFBBAFB04044504)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2 
       (.I0(Q[2]),
        .I1(\src_gray_ff_reg[4] [1]),
        .I2(Q[1]),
        .I3(\src_gray_ff_reg[4] [0]),
        .I4(Q[0]),
        .I5(Q[3]),
        .O(src_in_bin[2]));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT5 #(
    .INIT(32'hB0FB4F04)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[4] [0]),
        .I2(Q[1]),
        .I3(\src_gray_ff_reg[4] [1]),
        .I4(Q[2]),
        .O(src_in_bin[1]));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_5 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[4] [0]),
        .O(src_in_bin[0]));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[4] [0]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6_n_0 ));
  LUT5 #(
    .INIT(32'h718E8E71)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[2]_i_1 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2_n_0 ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [1]),
        .I2(Q[1]),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [2]),
        .I4(Q[2]),
        .O(D[0]));
  LUT6 #(
    .INIT(64'h2BFF002BD400FFD4)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_1 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [1]),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [2]),
        .I4(Q[2]),
        .I5(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_3_n_0 ),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hDDDFDDDD44454444)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2 
       (.I0(Q[0]),
        .I1(ram_empty_i),
        .I2(rd_en),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(\count_value_i_reg[0]_0 [1]),
        .I5(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [0]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_3 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [3]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h00FD)) 
    \gen_sdpram.xpm_memory_base_inst_i_2 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .O(E));
  LUT6 #(
    .INIT(64'h1EE1788787781EE1)) 
    \grdc.rd_data_count_i[3]_i_1 
       (.I0(\grdc.rd_data_count_i_reg[4] ),
        .I1(\grdc.rd_data_count_i[4]_i_3_n_0 ),
        .I2(\grdc.rd_data_count_i_reg[4]_0 [2]),
        .I3(Q[3]),
        .I4(\grdc.rd_data_count_i_reg[4]_0 [1]),
        .I5(Q[2]),
        .O(\reg_out_i_reg[2] [0]));
  LUT6 #(
    .INIT(64'h1701FF7FE8FE0080)) 
    \grdc.rd_data_count_i[4]_i_2 
       (.I0(\grdc.rd_data_count_i[4]_i_3_n_0 ),
        .I1(\grdc.rd_data_count_i_reg[4] ),
        .I2(\grdc.rd_data_count_i_reg[4]_0 [1]),
        .I3(Q[2]),
        .I4(\grdc.rd_data_count_i_reg[4]_1 ),
        .I5(\grdc.rd_data_count_i[4]_i_6_n_0 ),
        .O(\reg_out_i_reg[2] [1]));
  LUT3 #(
    .INIT(8'hD4)) 
    \grdc.rd_data_count_i[4]_i_3 
       (.I0(Q[1]),
        .I1(\src_gray_ff_reg[4] [1]),
        .I2(\grdc.rd_data_count_i_reg[4]_0 [0]),
        .O(\grdc.rd_data_count_i[4]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[4]_i_6 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[4]_0 [2]),
        .I2(\count_value_i_reg_n_0_[4] ),
        .I3(\grdc.rd_data_count_i_reg[4]_0 [3]),
        .O(\grdc.rd_data_count_i[4]_i_6_n_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn__parameterized6_62
   (D,
    Q,
    \gwdc.wr_data_count_i_reg[2] ,
    wrst_busy,
    E,
    wr_clk);
  output [0:0]D;
  output [4:0]Q;
  input [2:0]\gwdc.wr_data_count_i_reg[2] ;
  input wrst_busy;
  input [0:0]E;
  input wr_clk;

  wire [0:0]D;
  wire [0:0]E;
  wire [4:0]Q;
  wire \count_value_i[0]_i_1__1_n_0 ;
  wire \count_value_i[1]_i_1__1_n_0 ;
  wire \count_value_i[2]_i_1__1_n_0 ;
  wire \count_value_i[3]_i_1__1_n_0 ;
  wire \count_value_i[4]_i_1_n_0 ;
  wire [2:0]\gwdc.wr_data_count_i_reg[2] ;
  wire wr_clk;
  wire wrst_busy;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__1_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  LUT6 #(
    .INIT(64'h4F04B0FBB0FB4F04)) 
    \gwdc.wr_data_count_i[2]_i_1 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[2] [0]),
        .I2(Q[1]),
        .I3(\gwdc.wr_data_count_i_reg[2] [1]),
        .I4(\gwdc.wr_data_count_i_reg[2] [2]),
        .I5(Q[2]),
        .O(D));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn__parameterized7
   (Q,
    \count_value_i_reg[1]_0 ,
    rd_en,
    \count_value_i_reg[0]_0 ,
    E,
    rd_clk);
  output [3:0]Q;
  input [1:0]\count_value_i_reg[1]_0 ;
  input rd_en;
  input \count_value_i_reg[0]_0 ;
  input [0:0]E;
  input rd_clk;

  wire [0:0]E;
  wire [3:0]Q;
  wire \count_value_i[0]_i_1__2_n_0 ;
  wire \count_value_i[1]_i_1__3_n_0 ;
  wire \count_value_i[2]_i_1__2_n_0 ;
  wire \count_value_i[3]_i_1__2_n_0 ;
  wire \count_value_i_reg[0]_0 ;
  wire [1:0]\count_value_i_reg[1]_0 ;
  wire rd_clk;
  wire rd_en;

  LUT4 #(
    .INIT(16'h10EF)) 
    \count_value_i[0]_i_1__2 
       (.I0(rd_en),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(\count_value_i_reg[1]_0 [1]),
        .I3(Q[0]),
        .O(\count_value_i[0]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__3 
       (.I0(\count_value_i_reg[1]_0 [1]),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__2 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__2_n_0 ),
        .Q(Q[0]),
        .S(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__3_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__2_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__2_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn__parameterized7_53
   (D,
    Q,
    \count_value_i_reg[3]_0 ,
    E,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ,
    wrst_busy,
    wr_clk);
  output [0:0]D;
  output [2:0]Q;
  output \count_value_i_reg[3]_0 ;
  input [0:0]E;
  input [2:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ;
  input wrst_busy;
  input wr_clk;

  wire [0:0]D;
  wire [0:0]E;
  wire [2:0]Q;
  wire \count_value_i[0]_i_1__0_n_0 ;
  wire \count_value_i[1]_i_1__0_n_0 ;
  wire \count_value_i[2]_i_1__0_n_0 ;
  wire \count_value_i[3]_i_1__0_n_0 ;
  wire \count_value_i_reg[3]_0 ;
  wire [2:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ;
  wire wr_clk;
  wire [4:4]wr_pntr_plus1_pf;
  wire wrst_busy;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__0 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(wr_pntr_plus1_pf),
        .O(\count_value_i[3]_i_1__0_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__0_n_0 ),
        .Q(Q[0]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__0_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__0_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__0_n_0 ),
        .Q(wr_pntr_plus1_pf),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2 
       (.I0(wr_pntr_plus1_pf),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [2]),
        .O(\count_value_i_reg[3]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT5 #(
    .INIT(32'h718E8E71)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[2]_i_1 
       (.I0(E),
        .I1(Q[0]),
        .I2(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [0]),
        .I3(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [1]),
        .I4(Q[1]),
        .O(D));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn__parameterized7_60
   (Q,
    \count_value_i_reg[1]_0 ,
    rd_en,
    \count_value_i_reg[0]_0 ,
    E,
    rd_clk);
  output [3:0]Q;
  input [1:0]\count_value_i_reg[1]_0 ;
  input rd_en;
  input \count_value_i_reg[0]_0 ;
  input [0:0]E;
  input rd_clk;

  wire [0:0]E;
  wire [3:0]Q;
  wire \count_value_i[0]_i_1__2_n_0 ;
  wire \count_value_i[1]_i_1__3_n_0 ;
  wire \count_value_i[2]_i_1__2_n_0 ;
  wire \count_value_i[3]_i_1__2_n_0 ;
  wire \count_value_i_reg[0]_0 ;
  wire [1:0]\count_value_i_reg[1]_0 ;
  wire rd_clk;
  wire rd_en;

  LUT4 #(
    .INIT(16'h10EF)) 
    \count_value_i[0]_i_1__2 
       (.I0(rd_en),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(\count_value_i_reg[1]_0 [1]),
        .I3(Q[0]),
        .O(\count_value_i[0]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__3 
       (.I0(\count_value_i_reg[1]_0 [1]),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__2 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__2_n_0 ),
        .Q(Q[0]),
        .S(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__3_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__2_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__2_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn__parameterized7_63
   (D,
    Q,
    \count_value_i_reg[3]_0 ,
    E,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ,
    wrst_busy,
    wr_clk);
  output [0:0]D;
  output [2:0]Q;
  output \count_value_i_reg[3]_0 ;
  input [0:0]E;
  input [2:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ;
  input wrst_busy;
  input wr_clk;

  wire [0:0]D;
  wire [0:0]E;
  wire [2:0]Q;
  wire \count_value_i[0]_i_1__0_n_0 ;
  wire \count_value_i[1]_i_1__0_n_0 ;
  wire \count_value_i[2]_i_1__0_n_0 ;
  wire \count_value_i[3]_i_1__0_n_0 ;
  wire \count_value_i_reg[3]_0 ;
  wire [2:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ;
  wire wr_clk;
  wire [4:4]wr_pntr_plus1_pf;
  wire wrst_busy;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__0 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(wr_pntr_plus1_pf),
        .O(\count_value_i[3]_i_1__0_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__0_n_0 ),
        .Q(Q[0]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__0_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__0_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__0_n_0 ),
        .Q(wr_pntr_plus1_pf),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2 
       (.I0(wr_pntr_plus1_pf),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [2]),
        .O(\count_value_i_reg[3]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT5 #(
    .INIT(32'h718E8E71)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[2]_i_1 
       (.I0(E),
        .I1(Q[0]),
        .I2(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [0]),
        .I3(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [1]),
        .I4(Q[1]),
        .O(D));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn__parameterized8
   (\count_value_i_reg[3]_0 ,
    \count_value_i_reg[2]_0 ,
    Q,
    wrst_busy,
    E,
    wr_clk);
  output \count_value_i_reg[3]_0 ;
  output [2:0]\count_value_i_reg[2]_0 ;
  input [0:0]Q;
  input wrst_busy;
  input [0:0]E;
  input wr_clk;

  wire [0:0]E;
  wire [0:0]Q;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[2]_i_1_n_0 ;
  wire \count_value_i[3]_i_1_n_0 ;
  wire [2:0]\count_value_i_reg[2]_0 ;
  wire \count_value_i_reg[3]_0 ;
  wire \count_value_i_reg_n_0_[3] ;
  wire wr_clk;
  wire wrst_busy;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1 
       (.I0(\count_value_i_reg[2]_0 [0]),
        .O(\count_value_i[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1 
       (.I0(\count_value_i_reg[2]_0 [0]),
        .I1(\count_value_i_reg[2]_0 [1]),
        .O(\count_value_i[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1 
       (.I0(\count_value_i_reg[2]_0 [0]),
        .I1(\count_value_i_reg[2]_0 [1]),
        .I2(\count_value_i_reg[2]_0 [2]),
        .O(\count_value_i[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1 
       (.I0(\count_value_i_reg[2]_0 [1]),
        .I1(\count_value_i_reg[2]_0 [0]),
        .I2(\count_value_i_reg[2]_0 [2]),
        .I3(\count_value_i_reg_n_0_[3] ),
        .O(\count_value_i[3]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(\count_value_i_reg[2]_0 [0]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(\count_value_i_reg[2]_0 [1]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1_n_0 ),
        .Q(\count_value_i_reg[2]_0 [2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1_n_0 ),
        .Q(\count_value_i_reg_n_0_[3] ),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5 
       (.I0(\count_value_i_reg_n_0_[3] ),
        .I1(Q),
        .O(\count_value_i_reg[3]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module zynq_bd_C2C2_0_xpm_counter_updn__parameterized8_64
   (\count_value_i_reg[3]_0 ,
    \count_value_i_reg[2]_0 ,
    Q,
    wrst_busy,
    E,
    wr_clk);
  output \count_value_i_reg[3]_0 ;
  output [2:0]\count_value_i_reg[2]_0 ;
  input [0:0]Q;
  input wrst_busy;
  input [0:0]E;
  input wr_clk;

  wire [0:0]E;
  wire [0:0]Q;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[2]_i_1_n_0 ;
  wire \count_value_i[3]_i_1_n_0 ;
  wire [2:0]\count_value_i_reg[2]_0 ;
  wire \count_value_i_reg[3]_0 ;
  wire \count_value_i_reg_n_0_[3] ;
  wire wr_clk;
  wire wrst_busy;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1 
       (.I0(\count_value_i_reg[2]_0 [0]),
        .O(\count_value_i[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1 
       (.I0(\count_value_i_reg[2]_0 [0]),
        .I1(\count_value_i_reg[2]_0 [1]),
        .O(\count_value_i[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1 
       (.I0(\count_value_i_reg[2]_0 [0]),
        .I1(\count_value_i_reg[2]_0 [1]),
        .I2(\count_value_i_reg[2]_0 [2]),
        .O(\count_value_i[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1 
       (.I0(\count_value_i_reg[2]_0 [1]),
        .I1(\count_value_i_reg[2]_0 [0]),
        .I2(\count_value_i_reg[2]_0 [2]),
        .I3(\count_value_i_reg_n_0_[3] ),
        .O(\count_value_i[3]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(\count_value_i_reg[2]_0 [0]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(\count_value_i_reg[2]_0 [1]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1_n_0 ),
        .Q(\count_value_i_reg[2]_0 [2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1_n_0 ),
        .Q(\count_value_i_reg_n_0_[3] ),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5 
       (.I0(\count_value_i_reg_n_0_[3] ),
        .I1(Q),
        .O(\count_value_i_reg[3]_0 ));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_SYNC_STAGES = "3" *) (* DOUT_RESET_VALUE = "0" *) 
(* ECC_MODE = "no_ecc" *) (* EN_ADV_FEATURE_ASYNC = "16'b0000011100000111" *) (* FIFO_MEMORY_TYPE = "block" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_WRITE_DEPTH = "256" *) (* FULL_RESET_VALUE = "1" *) 
(* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "128" *) (* P_COMMON_CLOCK = "0" *) 
(* P_ECC_MODE = "0" *) (* P_FIFO_MEMORY_TYPE = "2" *) (* P_READ_MODE = "1" *) 
(* P_WAKEUP_TIME = "2" *) (* RD_DATA_COUNT_WIDTH = "8" *) (* READ_DATA_WIDTH = "45" *) 
(* READ_MODE = "fwft" *) (* RELATED_CLOCKS = "0" *) (* SIM_ASSERT_CHK = "0" *) 
(* USE_ADV_FEATURES = "0707" *) (* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH = "45" *) 
(* WR_DATA_COUNT_WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) (* dont_touch = "true" *) 
(* is_du_within_envelope = "true" *) 
module zynq_bd_C2C2_0_xpm_fifo_async
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [44:0]din;
  output full;
  output prog_full;
  output [7:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [44:0]dout;
  output empty;
  output prog_empty;
  output [7:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [44:0]din;
  wire [44:0]dout;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire prog_full;
  wire rd_clk;
  wire [7:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire sleep;
  wire underflow;
  wire wr_clk;
  wire [7:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* CASCADE_HEIGHT = "0" *) 
  (* CDC_DEST_SYNC_FF = "3" *) 
  (* COMMON_CLOCK = "0" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "0" *) 
  (* ENABLE_ECC = "0" *) 
  (* EN_ADV_FEATURE = "16'b0000011100000111" *) 
  (* EN_AE = "1'b0" *) 
  (* EN_AF = "1'b0" *) 
  (* EN_DVLD = "1'b0" *) 
  (* EN_OF = "1'b1" *) 
  (* EN_PE = "1'b1" *) 
  (* EN_PF = "1'b1" *) 
  (* EN_RDC = "1'b1" *) 
  (* EN_UF = "1'b1" *) 
  (* EN_WACK = "1'b0" *) 
  (* EN_WDC = "1'b1" *) 
  (* FG_EQ_ASYM_DOUT = "1'b0" *) 
  (* FIFO_MEMORY_TYPE = "2" *) 
  (* FIFO_MEM_TYPE = "2" *) 
  (* FIFO_READ_DEPTH = "256" *) 
  (* FIFO_READ_LATENCY = "0" *) 
  (* FIFO_SIZE = "11520" *) 
  (* FIFO_WRITE_DEPTH = "256" *) 
  (* FULL_RESET_VALUE = "1" *) 
  (* FULL_RST_VAL = "1'b1" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* PE_THRESH_ADJ = "8" *) 
  (* PE_THRESH_MAX = "251" *) 
  (* PE_THRESH_MIN = "5" *) 
  (* PF_THRESH_ADJ = "126" *) 
  (* PF_THRESH_MAX = "251" *) 
  (* PF_THRESH_MIN = "8" *) 
  (* PROG_EMPTY_THRESH = "10" *) 
  (* PROG_FULL_THRESH = "128" *) 
  (* RD_DATA_COUNT_WIDTH = "8" *) 
  (* RD_DC_WIDTH_EXT = "9" *) 
  (* RD_LATENCY = "2" *) 
  (* RD_MODE = "1" *) 
  (* RD_PNTR_WIDTH = "8" *) 
  (* READ_DATA_WIDTH = "45" *) 
  (* READ_MODE = "1" *) 
  (* READ_MODE_LL = "1" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WIDTH_RATIO = "1" *) 
  (* WRITE_DATA_WIDTH = "45" *) 
  (* WR_DATA_COUNT_WIDTH = "8" *) 
  (* WR_DC_WIDTH_EXT = "9" *) 
  (* WR_DEPTH_LOG = "8" *) 
  (* WR_PNTR_WIDTH = "8" *) 
  (* WR_RD_RATIO = "0" *) 
  (* WR_WIDTH_LOG = "6" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* both_stages_valid = "3" *) 
  (* invalid = "0" *) 
  (* stage1_valid = "2" *) 
  (* stage2_valid = "1" *) 
  zynq_bd_C2C2_0_xpm_fifo_base \gnuram_async_fifo.xpm_fifo_base_inst 
       (.almost_empty(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ),
        .almost_full(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ),
        .data_valid(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ),
        .dbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .full_n(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_full(prog_full),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .rst(rst),
        .sbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ),
        .sleep(sleep),
        .underflow(underflow),
        .wr_ack(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_SYNC_STAGES = "3" *) (* DOUT_RESET_VALUE = "0" *) 
(* ECC_MODE = "no_ecc" *) (* EN_ADV_FEATURE_ASYNC = "16'b0000011100000111" *) (* FIFO_MEMORY_TYPE = "block" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_WRITE_DEPTH = "512" *) (* FULL_RESET_VALUE = "1" *) 
(* ORIG_REF_NAME = "xpm_fifo_async" *) (* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "384" *) 
(* P_COMMON_CLOCK = "0" *) (* P_ECC_MODE = "0" *) (* P_FIFO_MEMORY_TYPE = "2" *) 
(* P_READ_MODE = "1" *) (* P_WAKEUP_TIME = "2" *) (* RD_DATA_COUNT_WIDTH = "9" *) 
(* READ_DATA_WIDTH = "38" *) (* READ_MODE = "fwft" *) (* RELATED_CLOCKS = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* WAKEUP_TIME = "0" *) 
(* WRITE_DATA_WIDTH = "38" *) (* WR_DATA_COUNT_WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* dont_touch = "true" *) (* is_du_within_envelope = "true" *) 
module zynq_bd_C2C2_0_xpm_fifo_async__parameterized0
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [37:0]din;
  output full;
  output prog_full;
  output [8:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [37:0]dout;
  output empty;
  output prog_empty;
  output [8:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [37:0]din;
  wire [37:1]\^dout ;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire prog_full;
  wire rd_clk;
  wire [8:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire sleep;
  wire underflow;
  wire wr_clk;
  wire [8:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ;
  wire [0:0]\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dout_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign dout[37:1] = \^dout [37:1];
  assign dout[0] = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* CASCADE_HEIGHT = "0" *) 
  (* CDC_DEST_SYNC_FF = "3" *) 
  (* COMMON_CLOCK = "0" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "0" *) 
  (* ENABLE_ECC = "0" *) 
  (* EN_ADV_FEATURE = "16'b0000011100000111" *) 
  (* EN_AE = "1'b0" *) 
  (* EN_AF = "1'b0" *) 
  (* EN_DVLD = "1'b0" *) 
  (* EN_OF = "1'b1" *) 
  (* EN_PE = "1'b1" *) 
  (* EN_PF = "1'b1" *) 
  (* EN_RDC = "1'b1" *) 
  (* EN_UF = "1'b1" *) 
  (* EN_WACK = "1'b0" *) 
  (* EN_WDC = "1'b1" *) 
  (* FG_EQ_ASYM_DOUT = "1'b0" *) 
  (* FIFO_MEMORY_TYPE = "2" *) 
  (* FIFO_MEM_TYPE = "2" *) 
  (* FIFO_READ_DEPTH = "512" *) 
  (* FIFO_READ_LATENCY = "0" *) 
  (* FIFO_SIZE = "19456" *) 
  (* FIFO_WRITE_DEPTH = "512" *) 
  (* FULL_RESET_VALUE = "1" *) 
  (* FULL_RST_VAL = "1'b1" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* PE_THRESH_ADJ = "8" *) 
  (* PE_THRESH_MAX = "507" *) 
  (* PE_THRESH_MIN = "5" *) 
  (* PF_THRESH_ADJ = "382" *) 
  (* PF_THRESH_MAX = "507" *) 
  (* PF_THRESH_MIN = "8" *) 
  (* PROG_EMPTY_THRESH = "10" *) 
  (* PROG_FULL_THRESH = "384" *) 
  (* RD_DATA_COUNT_WIDTH = "9" *) 
  (* RD_DC_WIDTH_EXT = "10" *) 
  (* RD_LATENCY = "2" *) 
  (* RD_MODE = "1" *) 
  (* RD_PNTR_WIDTH = "9" *) 
  (* READ_DATA_WIDTH = "38" *) 
  (* READ_MODE = "1" *) 
  (* READ_MODE_LL = "1" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WIDTH_RATIO = "1" *) 
  (* WRITE_DATA_WIDTH = "38" *) 
  (* WR_DATA_COUNT_WIDTH = "9" *) 
  (* WR_DC_WIDTH_EXT = "10" *) 
  (* WR_DEPTH_LOG = "9" *) 
  (* WR_PNTR_WIDTH = "9" *) 
  (* WR_RD_RATIO = "0" *) 
  (* WR_WIDTH_LOG = "6" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* both_stages_valid = "3" *) 
  (* invalid = "0" *) 
  (* stage1_valid = "2" *) 
  (* stage2_valid = "1" *) 
  zynq_bd_C2C2_0_xpm_fifo_base__parameterized0 \gnuram_async_fifo.xpm_fifo_base_inst 
       (.almost_empty(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ),
        .almost_full(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ),
        .data_valid(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ),
        .dbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ),
        .din({din[37:1],1'b0}),
        .dout({\^dout ,\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dout_UNCONNECTED [0]}),
        .empty(empty),
        .full(full),
        .full_n(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_full(prog_full),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .rst(rst),
        .sbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ),
        .sleep(sleep),
        .underflow(underflow),
        .wr_ack(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_SYNC_STAGES = "3" *) (* DOUT_RESET_VALUE = "0" *) 
(* ECC_MODE = "no_ecc" *) (* EN_ADV_FEATURE_ASYNC = "16'b0000011100000111" *) (* FIFO_MEMORY_TYPE = "block" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_WRITE_DEPTH = "512" *) (* FULL_RESET_VALUE = "1" *) 
(* ORIG_REF_NAME = "xpm_fifo_async" *) (* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "384" *) 
(* P_COMMON_CLOCK = "0" *) (* P_ECC_MODE = "0" *) (* P_FIFO_MEMORY_TYPE = "2" *) 
(* P_READ_MODE = "1" *) (* P_WAKEUP_TIME = "2" *) (* RD_DATA_COUNT_WIDTH = "9" *) 
(* READ_DATA_WIDTH = "36" *) (* READ_MODE = "fwft" *) (* RELATED_CLOCKS = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* WAKEUP_TIME = "0" *) 
(* WRITE_DATA_WIDTH = "36" *) (* WR_DATA_COUNT_WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* dont_touch = "true" *) (* is_du_within_envelope = "true" *) 
module zynq_bd_C2C2_0_xpm_fifo_async__parameterized1
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [35:0]din;
  output full;
  output prog_full;
  output [8:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [35:0]dout;
  output empty;
  output prog_empty;
  output [8:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [35:0]din;
  wire [35:0]dout;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire prog_full;
  wire rd_clk;
  wire [8:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire sleep;
  wire underflow;
  wire wr_clk;
  wire [8:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* CASCADE_HEIGHT = "0" *) 
  (* CDC_DEST_SYNC_FF = "3" *) 
  (* COMMON_CLOCK = "0" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "0" *) 
  (* ENABLE_ECC = "0" *) 
  (* EN_ADV_FEATURE = "16'b0000011100000111" *) 
  (* EN_AE = "1'b0" *) 
  (* EN_AF = "1'b0" *) 
  (* EN_DVLD = "1'b0" *) 
  (* EN_OF = "1'b1" *) 
  (* EN_PE = "1'b1" *) 
  (* EN_PF = "1'b1" *) 
  (* EN_RDC = "1'b1" *) 
  (* EN_UF = "1'b1" *) 
  (* EN_WACK = "1'b0" *) 
  (* EN_WDC = "1'b1" *) 
  (* FG_EQ_ASYM_DOUT = "1'b0" *) 
  (* FIFO_MEMORY_TYPE = "2" *) 
  (* FIFO_MEM_TYPE = "2" *) 
  (* FIFO_READ_DEPTH = "512" *) 
  (* FIFO_READ_LATENCY = "0" *) 
  (* FIFO_SIZE = "18432" *) 
  (* FIFO_WRITE_DEPTH = "512" *) 
  (* FULL_RESET_VALUE = "1" *) 
  (* FULL_RST_VAL = "1'b1" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* PE_THRESH_ADJ = "8" *) 
  (* PE_THRESH_MAX = "507" *) 
  (* PE_THRESH_MIN = "5" *) 
  (* PF_THRESH_ADJ = "382" *) 
  (* PF_THRESH_MAX = "507" *) 
  (* PF_THRESH_MIN = "8" *) 
  (* PROG_EMPTY_THRESH = "10" *) 
  (* PROG_FULL_THRESH = "384" *) 
  (* RD_DATA_COUNT_WIDTH = "9" *) 
  (* RD_DC_WIDTH_EXT = "10" *) 
  (* RD_LATENCY = "2" *) 
  (* RD_MODE = "1" *) 
  (* RD_PNTR_WIDTH = "9" *) 
  (* READ_DATA_WIDTH = "36" *) 
  (* READ_MODE = "1" *) 
  (* READ_MODE_LL = "1" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WIDTH_RATIO = "1" *) 
  (* WRITE_DATA_WIDTH = "36" *) 
  (* WR_DATA_COUNT_WIDTH = "9" *) 
  (* WR_DC_WIDTH_EXT = "10" *) 
  (* WR_DEPTH_LOG = "9" *) 
  (* WR_PNTR_WIDTH = "9" *) 
  (* WR_RD_RATIO = "0" *) 
  (* WR_WIDTH_LOG = "6" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* both_stages_valid = "3" *) 
  (* invalid = "0" *) 
  (* stage1_valid = "2" *) 
  (* stage2_valid = "1" *) 
  zynq_bd_C2C2_0_xpm_fifo_base__parameterized1 \gnuram_async_fifo.xpm_fifo_base_inst 
       (.almost_empty(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ),
        .almost_full(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ),
        .data_valid(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ),
        .dbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .full_n(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_full(prog_full),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .rst(rst),
        .sbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ),
        .sleep(sleep),
        .underflow(underflow),
        .wr_ack(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_SYNC_STAGES = "3" *) (* DOUT_RESET_VALUE = "0" *) 
(* ECC_MODE = "no_ecc" *) (* EN_ADV_FEATURE_ASYNC = "16'b0000011100000111" *) (* FIFO_MEMORY_TYPE = "distributed" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_WRITE_DEPTH = "256" *) (* FULL_RESET_VALUE = "1" *) 
(* ORIG_REF_NAME = "xpm_fifo_async" *) (* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "128" *) 
(* P_COMMON_CLOCK = "0" *) (* P_ECC_MODE = "0" *) (* P_FIFO_MEMORY_TYPE = "1" *) 
(* P_READ_MODE = "1" *) (* P_WAKEUP_TIME = "2" *) (* RD_DATA_COUNT_WIDTH = "8" *) 
(* READ_DATA_WIDTH = "3" *) (* READ_MODE = "fwft" *) (* RELATED_CLOCKS = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* WAKEUP_TIME = "0" *) 
(* WRITE_DATA_WIDTH = "3" *) (* WR_DATA_COUNT_WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) 
(* dont_touch = "true" *) (* is_du_within_envelope = "true" *) 
module zynq_bd_C2C2_0_xpm_fifo_async__parameterized2
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [2:0]din;
  output full;
  output prog_full;
  output [7:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [2:0]dout;
  output empty;
  output prog_empty;
  output [7:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [2:0]din;
  wire [2:0]dout;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire prog_full;
  wire rd_clk;
  wire [7:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire sleep;
  wire underflow;
  wire wr_clk;
  wire [7:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* CASCADE_HEIGHT = "0" *) 
  (* CDC_DEST_SYNC_FF = "3" *) 
  (* COMMON_CLOCK = "0" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "0" *) 
  (* ENABLE_ECC = "0" *) 
  (* EN_ADV_FEATURE = "16'b0000011100000111" *) 
  (* EN_AE = "1'b0" *) 
  (* EN_AF = "1'b0" *) 
  (* EN_DVLD = "1'b0" *) 
  (* EN_OF = "1'b1" *) 
  (* EN_PE = "1'b1" *) 
  (* EN_PF = "1'b1" *) 
  (* EN_RDC = "1'b1" *) 
  (* EN_UF = "1'b1" *) 
  (* EN_WACK = "1'b0" *) 
  (* EN_WDC = "1'b1" *) 
  (* FG_EQ_ASYM_DOUT = "1'b0" *) 
  (* FIFO_MEMORY_TYPE = "1" *) 
  (* FIFO_MEM_TYPE = "1" *) 
  (* FIFO_READ_DEPTH = "256" *) 
  (* FIFO_READ_LATENCY = "0" *) 
  (* FIFO_SIZE = "768" *) 
  (* FIFO_WRITE_DEPTH = "256" *) 
  (* FULL_RESET_VALUE = "1" *) 
  (* FULL_RST_VAL = "1'b1" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* PE_THRESH_ADJ = "8" *) 
  (* PE_THRESH_MAX = "251" *) 
  (* PE_THRESH_MIN = "5" *) 
  (* PF_THRESH_ADJ = "126" *) 
  (* PF_THRESH_MAX = "251" *) 
  (* PF_THRESH_MIN = "8" *) 
  (* PROG_EMPTY_THRESH = "10" *) 
  (* PROG_FULL_THRESH = "128" *) 
  (* RD_DATA_COUNT_WIDTH = "8" *) 
  (* RD_DC_WIDTH_EXT = "9" *) 
  (* RD_LATENCY = "2" *) 
  (* RD_MODE = "1" *) 
  (* RD_PNTR_WIDTH = "8" *) 
  (* READ_DATA_WIDTH = "3" *) 
  (* READ_MODE = "1" *) 
  (* READ_MODE_LL = "1" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WIDTH_RATIO = "1" *) 
  (* WRITE_DATA_WIDTH = "3" *) 
  (* WR_DATA_COUNT_WIDTH = "8" *) 
  (* WR_DC_WIDTH_EXT = "9" *) 
  (* WR_DEPTH_LOG = "8" *) 
  (* WR_PNTR_WIDTH = "8" *) 
  (* WR_RD_RATIO = "0" *) 
  (* WR_WIDTH_LOG = "2" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* both_stages_valid = "3" *) 
  (* invalid = "0" *) 
  (* stage1_valid = "2" *) 
  (* stage2_valid = "1" *) 
  zynq_bd_C2C2_0_xpm_fifo_base__parameterized2 \gnuram_async_fifo.xpm_fifo_base_inst 
       (.almost_empty(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ),
        .almost_full(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ),
        .data_valid(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ),
        .dbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .full_n(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_full(prog_full),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .rst(rst),
        .sbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ),
        .sleep(sleep),
        .underflow(underflow),
        .wr_ack(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_SYNC_STAGES = "3" *) (* DOUT_RESET_VALUE = "0" *) 
(* ECC_MODE = "no_ecc" *) (* EN_ADV_FEATURE_ASYNC = "16'b0000011100000111" *) (* FIFO_MEMORY_TYPE = "distributed" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_WRITE_DEPTH = "16" *) (* FULL_RESET_VALUE = "1" *) 
(* ORIG_REF_NAME = "xpm_fifo_async" *) (* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "11" *) 
(* P_COMMON_CLOCK = "0" *) (* P_ECC_MODE = "0" *) (* P_FIFO_MEMORY_TYPE = "1" *) 
(* P_READ_MODE = "1" *) (* P_WAKEUP_TIME = "2" *) (* RD_DATA_COUNT_WIDTH = "4" *) 
(* READ_DATA_WIDTH = "20" *) (* READ_MODE = "fwft" *) (* RELATED_CLOCKS = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* WAKEUP_TIME = "0" *) 
(* WRITE_DATA_WIDTH = "20" *) (* WR_DATA_COUNT_WIDTH = "4" *) (* XPM_MODULE = "TRUE" *) 
(* dont_touch = "true" *) (* is_du_within_envelope = "true" *) 
module zynq_bd_C2C2_0_xpm_fifo_async__parameterized3
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [19:0]din;
  output full;
  output prog_full;
  output [3:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [19:0]dout;
  output empty;
  output prog_empty;
  output [3:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [19:0]din;
  wire [19:0]dout;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire prog_full;
  wire rd_clk;
  wire [3:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire sleep;
  wire underflow;
  wire wr_clk;
  wire [3:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* CASCADE_HEIGHT = "0" *) 
  (* CDC_DEST_SYNC_FF = "3" *) 
  (* COMMON_CLOCK = "0" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "0" *) 
  (* ENABLE_ECC = "0" *) 
  (* EN_ADV_FEATURE = "16'b0000011100000111" *) 
  (* EN_AE = "1'b0" *) 
  (* EN_AF = "1'b0" *) 
  (* EN_DVLD = "1'b0" *) 
  (* EN_OF = "1'b1" *) 
  (* EN_PE = "1'b1" *) 
  (* EN_PF = "1'b1" *) 
  (* EN_RDC = "1'b1" *) 
  (* EN_UF = "1'b1" *) 
  (* EN_WACK = "1'b0" *) 
  (* EN_WDC = "1'b1" *) 
  (* FG_EQ_ASYM_DOUT = "1'b0" *) 
  (* FIFO_MEMORY_TYPE = "1" *) 
  (* FIFO_MEM_TYPE = "1" *) 
  (* FIFO_READ_DEPTH = "16" *) 
  (* FIFO_READ_LATENCY = "0" *) 
  (* FIFO_SIZE = "320" *) 
  (* FIFO_WRITE_DEPTH = "16" *) 
  (* FULL_RESET_VALUE = "1" *) 
  (* FULL_RST_VAL = "1'b1" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* PE_THRESH_ADJ = "8" *) 
  (* PE_THRESH_MAX = "11" *) 
  (* PE_THRESH_MIN = "5" *) 
  (* PF_THRESH_ADJ = "9" *) 
  (* PF_THRESH_MAX = "11" *) 
  (* PF_THRESH_MIN = "8" *) 
  (* PROG_EMPTY_THRESH = "10" *) 
  (* PROG_FULL_THRESH = "11" *) 
  (* RD_DATA_COUNT_WIDTH = "4" *) 
  (* RD_DC_WIDTH_EXT = "5" *) 
  (* RD_LATENCY = "2" *) 
  (* RD_MODE = "1" *) 
  (* RD_PNTR_WIDTH = "4" *) 
  (* READ_DATA_WIDTH = "20" *) 
  (* READ_MODE = "1" *) 
  (* READ_MODE_LL = "1" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WIDTH_RATIO = "1" *) 
  (* WRITE_DATA_WIDTH = "20" *) 
  (* WR_DATA_COUNT_WIDTH = "4" *) 
  (* WR_DC_WIDTH_EXT = "5" *) 
  (* WR_DEPTH_LOG = "4" *) 
  (* WR_PNTR_WIDTH = "4" *) 
  (* WR_RD_RATIO = "0" *) 
  (* WR_WIDTH_LOG = "5" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* both_stages_valid = "3" *) 
  (* invalid = "0" *) 
  (* stage1_valid = "2" *) 
  (* stage2_valid = "1" *) 
  zynq_bd_C2C2_0_xpm_fifo_base__parameterized3 \gnuram_async_fifo.xpm_fifo_base_inst 
       (.almost_empty(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ),
        .almost_full(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ),
        .data_valid(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ),
        .dbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .full_n(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_full(prog_full),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .rst(rst),
        .sbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ),
        .sleep(sleep),
        .underflow(underflow),
        .wr_ack(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_SYNC_STAGES = "3" *) (* DOUT_RESET_VALUE = "0" *) 
(* ECC_MODE = "no_ecc" *) (* EN_ADV_FEATURE_ASYNC = "16'b0000011100000111" *) (* FIFO_MEMORY_TYPE = "distributed" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_WRITE_DEPTH = "16" *) (* FULL_RESET_VALUE = "1" *) 
(* ORIG_REF_NAME = "xpm_fifo_async" *) (* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "11" *) 
(* P_COMMON_CLOCK = "0" *) (* P_ECC_MODE = "0" *) (* P_FIFO_MEMORY_TYPE = "1" *) 
(* P_READ_MODE = "1" *) (* P_WAKEUP_TIME = "2" *) (* RD_DATA_COUNT_WIDTH = "4" *) 
(* READ_DATA_WIDTH = "20" *) (* READ_MODE = "fwft" *) (* RELATED_CLOCKS = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* WAKEUP_TIME = "0" *) 
(* WRITE_DATA_WIDTH = "20" *) (* WR_DATA_COUNT_WIDTH = "4" *) (* XPM_MODULE = "TRUE" *) 
(* dont_touch = "true" *) (* is_du_within_envelope = "true" *) 
module zynq_bd_C2C2_0_xpm_fifo_async__parameterized3__xdcDup__1
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [19:0]din;
  output full;
  output prog_full;
  output [3:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [19:0]dout;
  output empty;
  output prog_empty;
  output [3:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [19:0]din;
  wire [19:0]dout;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire prog_full;
  wire rd_clk;
  wire [3:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire sleep;
  wire underflow;
  wire wr_clk;
  wire [3:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* CASCADE_HEIGHT = "0" *) 
  (* CDC_DEST_SYNC_FF = "3" *) 
  (* COMMON_CLOCK = "0" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "0" *) 
  (* ENABLE_ECC = "0" *) 
  (* EN_ADV_FEATURE = "16'b0000011100000111" *) 
  (* EN_AE = "1'b0" *) 
  (* EN_AF = "1'b0" *) 
  (* EN_DVLD = "1'b0" *) 
  (* EN_OF = "1'b1" *) 
  (* EN_PE = "1'b1" *) 
  (* EN_PF = "1'b1" *) 
  (* EN_RDC = "1'b1" *) 
  (* EN_UF = "1'b1" *) 
  (* EN_WACK = "1'b0" *) 
  (* EN_WDC = "1'b1" *) 
  (* FG_EQ_ASYM_DOUT = "1'b0" *) 
  (* FIFO_MEMORY_TYPE = "1" *) 
  (* FIFO_MEM_TYPE = "1" *) 
  (* FIFO_READ_DEPTH = "16" *) 
  (* FIFO_READ_LATENCY = "0" *) 
  (* FIFO_SIZE = "320" *) 
  (* FIFO_WRITE_DEPTH = "16" *) 
  (* FULL_RESET_VALUE = "1" *) 
  (* FULL_RST_VAL = "1'b1" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* PE_THRESH_ADJ = "8" *) 
  (* PE_THRESH_MAX = "11" *) 
  (* PE_THRESH_MIN = "5" *) 
  (* PF_THRESH_ADJ = "9" *) 
  (* PF_THRESH_MAX = "11" *) 
  (* PF_THRESH_MIN = "8" *) 
  (* PROG_EMPTY_THRESH = "10" *) 
  (* PROG_FULL_THRESH = "11" *) 
  (* RD_DATA_COUNT_WIDTH = "4" *) 
  (* RD_DC_WIDTH_EXT = "5" *) 
  (* RD_LATENCY = "2" *) 
  (* RD_MODE = "1" *) 
  (* RD_PNTR_WIDTH = "4" *) 
  (* READ_DATA_WIDTH = "20" *) 
  (* READ_MODE = "1" *) 
  (* READ_MODE_LL = "1" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WIDTH_RATIO = "1" *) 
  (* WRITE_DATA_WIDTH = "20" *) 
  (* WR_DATA_COUNT_WIDTH = "4" *) 
  (* WR_DC_WIDTH_EXT = "5" *) 
  (* WR_DEPTH_LOG = "4" *) 
  (* WR_PNTR_WIDTH = "4" *) 
  (* WR_RD_RATIO = "0" *) 
  (* WR_WIDTH_LOG = "5" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* both_stages_valid = "3" *) 
  (* invalid = "0" *) 
  (* stage1_valid = "2" *) 
  (* stage2_valid = "1" *) 
  zynq_bd_C2C2_0_xpm_fifo_base__parameterized3__xdcDup__1 \gnuram_async_fifo.xpm_fifo_base_inst 
       (.almost_empty(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ),
        .almost_full(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ),
        .data_valid(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ),
        .dbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .full_n(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_full(prog_full),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .rst(rst),
        .sbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ),
        .sleep(sleep),
        .underflow(underflow),
        .wr_ack(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_SYNC_STAGES = "3" *) (* DOUT_RESET_VALUE = "0" *) 
(* ECC_MODE = "no_ecc" *) (* EN_ADV_FEATURE_ASYNC = "16'b0000011100000111" *) (* FIFO_MEMORY_TYPE = "block" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_WRITE_DEPTH = "256" *) (* FULL_RESET_VALUE = "1" *) 
(* ORIG_REF_NAME = "xpm_fifo_async" *) (* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "128" *) 
(* P_COMMON_CLOCK = "0" *) (* P_ECC_MODE = "0" *) (* P_FIFO_MEMORY_TYPE = "2" *) 
(* P_READ_MODE = "1" *) (* P_WAKEUP_TIME = "2" *) (* RD_DATA_COUNT_WIDTH = "8" *) 
(* READ_DATA_WIDTH = "45" *) (* READ_MODE = "fwft" *) (* RELATED_CLOCKS = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* WAKEUP_TIME = "0" *) 
(* WRITE_DATA_WIDTH = "45" *) (* WR_DATA_COUNT_WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) 
(* dont_touch = "true" *) (* is_du_within_envelope = "true" *) 
module zynq_bd_C2C2_0_xpm_fifo_async__xdcDup__1
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [44:0]din;
  output full;
  output prog_full;
  output [7:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [44:0]dout;
  output empty;
  output prog_empty;
  output [7:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [44:0]din;
  wire [44:0]dout;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire prog_full;
  wire rd_clk;
  wire [7:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire sleep;
  wire underflow;
  wire wr_clk;
  wire [7:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* CASCADE_HEIGHT = "0" *) 
  (* CDC_DEST_SYNC_FF = "3" *) 
  (* COMMON_CLOCK = "0" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "0" *) 
  (* ENABLE_ECC = "0" *) 
  (* EN_ADV_FEATURE = "16'b0000011100000111" *) 
  (* EN_AE = "1'b0" *) 
  (* EN_AF = "1'b0" *) 
  (* EN_DVLD = "1'b0" *) 
  (* EN_OF = "1'b1" *) 
  (* EN_PE = "1'b1" *) 
  (* EN_PF = "1'b1" *) 
  (* EN_RDC = "1'b1" *) 
  (* EN_UF = "1'b1" *) 
  (* EN_WACK = "1'b0" *) 
  (* EN_WDC = "1'b1" *) 
  (* FG_EQ_ASYM_DOUT = "1'b0" *) 
  (* FIFO_MEMORY_TYPE = "2" *) 
  (* FIFO_MEM_TYPE = "2" *) 
  (* FIFO_READ_DEPTH = "256" *) 
  (* FIFO_READ_LATENCY = "0" *) 
  (* FIFO_SIZE = "11520" *) 
  (* FIFO_WRITE_DEPTH = "256" *) 
  (* FULL_RESET_VALUE = "1" *) 
  (* FULL_RST_VAL = "1'b1" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* PE_THRESH_ADJ = "8" *) 
  (* PE_THRESH_MAX = "251" *) 
  (* PE_THRESH_MIN = "5" *) 
  (* PF_THRESH_ADJ = "126" *) 
  (* PF_THRESH_MAX = "251" *) 
  (* PF_THRESH_MIN = "8" *) 
  (* PROG_EMPTY_THRESH = "10" *) 
  (* PROG_FULL_THRESH = "128" *) 
  (* RD_DATA_COUNT_WIDTH = "8" *) 
  (* RD_DC_WIDTH_EXT = "9" *) 
  (* RD_LATENCY = "2" *) 
  (* RD_MODE = "1" *) 
  (* RD_PNTR_WIDTH = "8" *) 
  (* READ_DATA_WIDTH = "45" *) 
  (* READ_MODE = "1" *) 
  (* READ_MODE_LL = "1" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WIDTH_RATIO = "1" *) 
  (* WRITE_DATA_WIDTH = "45" *) 
  (* WR_DATA_COUNT_WIDTH = "8" *) 
  (* WR_DC_WIDTH_EXT = "9" *) 
  (* WR_DEPTH_LOG = "8" *) 
  (* WR_PNTR_WIDTH = "8" *) 
  (* WR_RD_RATIO = "0" *) 
  (* WR_WIDTH_LOG = "6" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* both_stages_valid = "3" *) 
  (* invalid = "0" *) 
  (* stage1_valid = "2" *) 
  (* stage2_valid = "1" *) 
  zynq_bd_C2C2_0_xpm_fifo_base__xdcDup__1 \gnuram_async_fifo.xpm_fifo_base_inst 
       (.almost_empty(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ),
        .almost_full(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ),
        .data_valid(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ),
        .dbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .full_n(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_full(prog_full),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .rst(rst),
        .sbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ),
        .sleep(sleep),
        .underflow(underflow),
        .wr_ack(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_DEST_SYNC_FF = "3" *) (* COMMON_CLOCK = "0" *) 
(* DOUT_RESET_VALUE = "0" *) (* ECC_MODE = "0" *) (* ENABLE_ECC = "0" *) 
(* EN_ADV_FEATURE = "16'b0000011100000111" *) (* EN_AE = "1'b0" *) (* EN_AF = "1'b0" *) 
(* EN_DVLD = "1'b0" *) (* EN_OF = "1'b1" *) (* EN_PE = "1'b1" *) 
(* EN_PF = "1'b1" *) (* EN_RDC = "1'b1" *) (* EN_UF = "1'b1" *) 
(* EN_WACK = "1'b0" *) (* EN_WDC = "1'b1" *) (* FG_EQ_ASYM_DOUT = "1'b0" *) 
(* FIFO_MEMORY_TYPE = "2" *) (* FIFO_MEM_TYPE = "2" *) (* FIFO_READ_DEPTH = "256" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_SIZE = "11520" *) (* FIFO_WRITE_DEPTH = "256" *) 
(* FULL_RESET_VALUE = "1" *) (* FULL_RST_VAL = "1'b1" *) (* PE_THRESH_ADJ = "8" *) 
(* PE_THRESH_MAX = "251" *) (* PE_THRESH_MIN = "5" *) (* PF_THRESH_ADJ = "126" *) 
(* PF_THRESH_MAX = "251" *) (* PF_THRESH_MIN = "8" *) (* PROG_EMPTY_THRESH = "10" *) 
(* PROG_FULL_THRESH = "128" *) (* RD_DATA_COUNT_WIDTH = "8" *) (* RD_DC_WIDTH_EXT = "9" *) 
(* RD_LATENCY = "2" *) (* RD_MODE = "1" *) (* RD_PNTR_WIDTH = "8" *) 
(* READ_DATA_WIDTH = "45" *) (* READ_MODE = "1" *) (* READ_MODE_LL = "1" *) 
(* RELATED_CLOCKS = "0" *) (* REMOVE_WR_RD_PROT_LOGIC = "0" *) (* SIM_ASSERT_CHK = "0" *) 
(* USE_ADV_FEATURES = "0707" *) (* VERSION = "0" *) (* WAKEUP_TIME = "0" *) 
(* WIDTH_RATIO = "1" *) (* WRITE_DATA_WIDTH = "45" *) (* WR_DATA_COUNT_WIDTH = "8" *) 
(* WR_DC_WIDTH_EXT = "9" *) (* WR_DEPTH_LOG = "8" *) (* WR_PNTR_WIDTH = "8" *) 
(* WR_RD_RATIO = "0" *) (* WR_WIDTH_LOG = "6" *) (* XPM_MODULE = "TRUE" *) 
(* both_stages_valid = "3" *) (* invalid = "0" *) (* keep_hierarchy = "soft" *) 
(* stage1_valid = "2" *) (* stage2_valid = "1" *) 
module zynq_bd_C2C2_0_xpm_fifo_base
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    full_n,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [44:0]din;
  output full;
  output full_n;
  output prog_full;
  output [7:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [44:0]dout;
  output empty;
  output prog_empty;
  output [7:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [1:0]count_value_i;
  wire [1:0]curr_fwft_state;
  wire [7:0]diff_pntr_pe;
  wire [8:2]diff_pntr_pf_q;
  wire [8:2]diff_pntr_pf_q0;
  wire [44:0]din;
  wire [44:0]dout;
  wire empty;
  wire empty_fwft_i0;
  wire full;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_0 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_7 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_10 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_11 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_12 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_13 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_14 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_15 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_16 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_9 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_7 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_8 ;
  wire \gen_fwft.count_rst ;
  wire \gen_fwft.ram_regout_en ;
  wire \gen_fwft.rdpp1_inst_n_3 ;
  wire \gen_fwft.rdpp1_inst_n_4 ;
  wire \gen_fwft.rdpp1_inst_n_5 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ;
  wire [8:1]\grdc.diff_wr_rd_pntr_rdc ;
  wire \grdc.rd_data_count_i0 ;
  wire [8:1]\gwdc.diff_wr_rd_pntr1_out ;
  wire [1:0]next_fwft_state__0;
  wire overflow;
  wire overflow_i0;
  wire prog_empty;
  wire prog_full;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire [7:0]rd_data_count;
  wire rd_en;
  wire [7:0]rd_pntr_ext;
  wire [7:0]rd_pntr_wr;
  wire [7:0]rd_pntr_wr_cdc;
  wire [8:0]rd_pntr_wr_cdc_dc;
  wire rd_rst_busy;
  wire rdp_inst_n_10;
  wire rdp_inst_n_19;
  wire rdp_inst_n_20;
  wire rdp_inst_n_21;
  wire rdp_inst_n_22;
  wire rdp_inst_n_23;
  wire rdp_inst_n_24;
  wire rdp_inst_n_25;
  wire rdp_inst_n_26;
  wire rdp_inst_n_27;
  wire rdp_inst_n_28;
  wire rdp_inst_n_29;
  wire rdp_inst_n_30;
  wire rdp_inst_n_31;
  wire rdp_inst_n_8;
  wire rdp_inst_n_9;
  wire rdpp1_inst_n_0;
  wire rdpp1_inst_n_1;
  wire rdpp1_inst_n_2;
  wire rdpp1_inst_n_3;
  wire rdpp1_inst_n_4;
  wire rdpp1_inst_n_5;
  wire rdpp1_inst_n_6;
  wire rdpp1_inst_n_7;
  wire rst;
  wire rst_d1;
  wire rst_d1_inst_n_1;
  wire sleep;
  wire [1:1]src_in_bin00_out;
  wire underflow;
  wire underflow_i0;
  wire wr_clk;
  wire [7:0]wr_data_count;
  wire wr_en;
  wire [8:0]wr_pntr_ext;
  wire [8:1]wr_pntr_plus1_pf;
  wire wr_pntr_plus1_pf_carry;
  wire [7:0]wr_pntr_rd_cdc;
  wire [8:0]wr_pntr_rd_cdc_dc;
  wire wr_rst_busy;
  wire wrpp2_inst_n_0;
  wire wrpp2_inst_n_1;
  wire wrpp2_inst_n_2;
  wire wrpp2_inst_n_3;
  wire wrpp2_inst_n_4;
  wire wrpp2_inst_n_5;
  wire wrpp2_inst_n_6;
  wire wrpp2_inst_n_7;
  wire wrst_busy;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ;
  wire [44:0]\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign full_n = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  (* SOFT_HLUTNM = "soft_lutpair175" *) 
  LUT4 #(
    .INIT(16'h6A85)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[0]_i_1 
       (.I0(curr_fwft_state[0]),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(ram_empty_i),
        .O(next_fwft_state__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair175" *) 
  LUT4 #(
    .INIT(16'h3FF0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[1]_i_1 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(curr_fwft_state[0]),
        .O(next_fwft_state__0[1]));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[0]),
        .Q(curr_fwft_state[0]),
        .R(rd_rst_busy));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[1]),
        .Q(curr_fwft_state[1]),
        .R(rd_rst_busy));
  GND GND
       (.G(\<const0> ));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_gray__parameterized1__8 \gen_cdc_pntr.rd_pntr_cdc_dc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc_dc),
        .src_clk(rd_clk),
        .src_in_bin({rdp_inst_n_24,rdp_inst_n_25,rdp_inst_n_26,rdp_inst_n_27,rdp_inst_n_28,rdp_inst_n_29,rdp_inst_n_30,src_in_bin00_out,rdp_inst_n_31}));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "8" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_gray__9 \gen_cdc_pntr.rd_pntr_cdc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc),
        .src_clk(rd_clk),
        .src_in_bin(rd_pntr_ext));
  zynq_bd_C2C2_0_xpm_fifo_reg_vec_36 \gen_cdc_pntr.rpw_gray_reg 
       (.D(rd_pntr_wr_cdc),
        .Q(wr_pntr_plus1_pf),
        .d_out_int_reg(\gen_cdc_pntr.rpw_gray_reg_n_8 ),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7}),
        .\reg_out_i_reg[7]_0 (rd_pntr_wr),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized0_37 \gen_cdc_pntr.rpw_gray_reg_dc 
       (.D(rd_pntr_wr_cdc_dc),
        .Q({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 }),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_fifo_reg_vec_38 \gen_cdc_pntr.wpr_gray_reg 
       (.D(wr_pntr_rd_cdc),
        .Q(curr_fwft_state),
        .\gen_pf_ic_rc.ram_empty_i_reg (rd_pntr_ext),
        .\gen_pf_ic_rc.ram_empty_i_reg_0 ({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3,rdpp1_inst_n_4,rdpp1_inst_n_5,rdpp1_inst_n_6,rdpp1_inst_n_7}),
        .ram_empty_i(ram_empty_i),
        .ram_empty_i0(ram_empty_i0),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[0]_0 (rd_rst_busy),
        .\reg_out_i_reg[7]_0 ({\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }));
  zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized0_39 \gen_cdc_pntr.wpr_gray_reg_dc 
       (.D(\grdc.diff_wr_rd_pntr_rdc ),
        .DI({rdp_inst_n_9,\gen_fwft.rdpp1_inst_n_5 }),
        .Q({\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_16 }),
        .S({rdp_inst_n_19,rdp_inst_n_20,rdp_inst_n_21,rdp_inst_n_22,rdp_inst_n_23,\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .\grdc.rd_data_count_i_reg[7] (count_value_i[1]),
        .\grdc.rd_data_count_i_reg[7]_0 (rd_pntr_ext[6:1]),
        .\grdc.rd_data_count_i_reg[8] (rdp_inst_n_10),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[8]_0 (rd_rst_busy),
        .\reg_out_i_reg[8]_1 (wr_pntr_rd_cdc_dc));
  (* DEST_SYNC_FF = "5" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_gray__parameterized0__4 \gen_cdc_pntr.wr_pntr_cdc_dc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc_dc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "8" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_gray__8 \gen_cdc_pntr.wr_pntr_cdc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext[7:0]));
  (* SOFT_HLUTNM = "soft_lutpair174" *) 
  LUT4 #(
    .INIT(16'hF380)) 
    \gen_fwft.empty_fwft_i_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .I3(empty),
        .O(empty_fwft_i0));
  FDSE #(
    .INIT(1'b1)) 
    \gen_fwft.empty_fwft_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .Q(empty),
        .S(rd_rst_busy));
  zynq_bd_C2C2_0_xpm_counter_updn_40 \gen_fwft.rdpp1_inst 
       (.DI(\gen_fwft.rdpp1_inst_n_5 ),
        .Q(count_value_i),
        .S({\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\grdc.rd_data_count_i_reg[7] (rd_pntr_ext[1:0]),
        .\grdc.rd_data_count_i_reg[7]_0 ({\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_16 }),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .src_in_bin(src_in_bin00_out));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_cdc_pntr.rpw_gray_reg_n_8 ),
        .Q(full),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[0]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[1]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[2]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[3]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[4]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[5]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[6]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[7]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .R(rd_rst_busy));
  LUT4 #(
    .INIT(16'h88B8)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1 
       (.I0(prog_empty),
        .I1(empty),
        .I2(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h01FF)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ),
        .Q(prog_empty),
        .S(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[2]),
        .Q(diff_pntr_pf_q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[3]),
        .Q(diff_pntr_pf_q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[4]),
        .Q(diff_pntr_pf_q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[5]),
        .Q(diff_pntr_pf_q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[6]),
        .Q(diff_pntr_pf_q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[7]),
        .Q(diff_pntr_pf_q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[8]),
        .Q(diff_pntr_pf_q[8]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1_inst_n_1),
        .Q(prog_full),
        .S(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.ram_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i0),
        .Q(ram_empty_i),
        .S(rd_rst_busy));
  (* ADDR_WIDTH_A = "8" *) 
  (* ADDR_WIDTH_B = "8" *) 
  (* AUTO_SLEEP_TIME = "0" *) 
  (* BYTE_WRITE_WIDTH_A = "45" *) 
  (* BYTE_WRITE_WIDTH_B = "45" *) 
  (* CASCADE_HEIGHT = "0" *) 
  (* CLOCKING_MODE = "1" *) 
  (* ECC_BIT_RANGE = "[7:0]" *) 
  (* ECC_MODE = "0" *) 
  (* ECC_TYPE = "NONE" *) 
  (* IGNORE_INIT_SYNTH = "0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* MAX_NUM_CHAR = "0" *) 
  (* \MEM.ADDRESS_SPACE  *) 
  (* \MEM.ADDRESS_SPACE_BEGIN  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_LSB  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_MSB  = "44" *) 
  (* \MEM.ADDRESS_SPACE_END  = "511" *) 
  (* \MEM.CORE_MEMORY_WIDTH  = "45" *) 
  (* MEMORY_INIT_FILE = "none" *) 
  (* MEMORY_INIT_PARAM = "" *) 
  (* MEMORY_OPTIMIZATION = "true" *) 
  (* MEMORY_PRIMITIVE = "2" *) 
  (* MEMORY_SIZE = "11520" *) 
  (* MEMORY_TYPE = "1" *) 
  (* MESSAGE_CONTROL = "0" *) 
  (* NUM_CHAR_LOC = "0" *) 
  (* P_ECC_MODE = "no_ecc" *) 
  (* P_ENABLE_BYTE_WRITE_A = "0" *) 
  (* P_ENABLE_BYTE_WRITE_B = "0" *) 
  (* P_MAX_DEPTH_DATA = "256" *) 
  (* P_MEMORY_OPT = "yes" *) 
  (* P_MEMORY_PRIMITIVE = "block" *) 
  (* P_MIN_WIDTH_DATA = "45" *) 
  (* P_MIN_WIDTH_DATA_A = "45" *) 
  (* P_MIN_WIDTH_DATA_B = "45" *) 
  (* P_MIN_WIDTH_DATA_ECC = "45" *) 
  (* P_MIN_WIDTH_DATA_LDW = "4" *) 
  (* P_MIN_WIDTH_DATA_SHFT = "45" *) 
  (* P_NUM_COLS_WRITE_A = "1" *) 
  (* P_NUM_COLS_WRITE_B = "1" *) 
  (* P_NUM_ROWS_READ_A = "1" *) 
  (* P_NUM_ROWS_READ_B = "1" *) 
  (* P_NUM_ROWS_WRITE_A = "1" *) 
  (* P_NUM_ROWS_WRITE_B = "1" *) 
  (* P_SDP_WRITE_MODE = "no" *) 
  (* P_WIDTH_ADDR_LSB_READ_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) 
  (* P_WIDTH_ADDR_READ_A = "8" *) 
  (* P_WIDTH_ADDR_READ_B = "8" *) 
  (* P_WIDTH_ADDR_WRITE_A = "8" *) 
  (* P_WIDTH_ADDR_WRITE_B = "8" *) 
  (* P_WIDTH_COL_WRITE_A = "45" *) 
  (* P_WIDTH_COL_WRITE_B = "45" *) 
  (* RAM_DECOMP = "auto" *) 
  (* READ_DATA_WIDTH_A = "45" *) 
  (* READ_DATA_WIDTH_B = "45" *) 
  (* READ_LATENCY_A = "2" *) 
  (* READ_LATENCY_B = "2" *) 
  (* READ_RESET_VALUE_A = "0" *) 
  (* READ_RESET_VALUE_B = "0" *) 
  (* RST_MODE_A = "SYNC" *) 
  (* RST_MODE_B = "SYNC" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_EMBEDDED_CONSTRAINT = "0" *) 
  (* USE_MEM_INIT = "0" *) 
  (* USE_MEM_INIT_MMI = "0" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH_A = "45" *) 
  (* WRITE_DATA_WIDTH_B = "45" *) 
  (* WRITE_MODE_A = "2" *) 
  (* WRITE_MODE_B = "2" *) 
  (* WRITE_PROTECT = "1" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* rsta_loop_iter = "48" *) 
  (* rstb_loop_iter = "48" *) 
  zynq_bd_C2C2_0_xpm_memory_base \gen_sdpram.xpm_memory_base_inst 
       (.addra(wr_pntr_ext[7:0]),
        .addrb(rd_pntr_ext),
        .clka(wr_clk),
        .clkb(rd_clk),
        .dbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ),
        .dbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ),
        .dina(din),
        .dinb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .douta(\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED [44:0]),
        .doutb(dout),
        .ena(wr_pntr_plus1_pf_carry),
        .enb(rdp_inst_n_8),
        .injectdbiterra(1'b0),
        .injectdbiterrb(1'b0),
        .injectsbiterra(1'b0),
        .injectsbiterrb(1'b0),
        .regcea(1'b0),
        .regceb(\gen_fwft.ram_regout_en ),
        .rsta(1'b0),
        .rstb(rd_rst_busy),
        .sbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ),
        .sbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ),
        .sleep(sleep),
        .wea(1'b0),
        .web(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair174" *) 
  LUT3 #(
    .INIT(8'h62)) 
    \gen_sdpram.xpm_memory_base_inst_i_3 
       (.I0(curr_fwft_state[0]),
        .I1(curr_fwft_state[1]),
        .I2(rd_en),
        .O(\gen_fwft.ram_regout_en ));
  FDRE #(
    .INIT(1'b0)) 
    \gof.overflow_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(overflow_i0),
        .Q(overflow),
        .R(1'b0));
  FDRE \grdc.rd_data_count_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q(rd_data_count[0]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(rd_data_count[1]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [3]),
        .Q(rd_data_count[2]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [4]),
        .Q(rd_data_count[3]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [5]),
        .Q(rd_data_count[4]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [6]),
        .Q(rd_data_count[5]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [7]),
        .Q(rd_data_count[6]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [8]),
        .Q(rd_data_count[7]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \guf.underflow_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(underflow_i0),
        .Q(underflow),
        .R(1'b0));
  FDRE \gwdc.wr_data_count_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [1]),
        .Q(wr_data_count[0]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [2]),
        .Q(wr_data_count[1]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [3]),
        .Q(wr_data_count[2]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [4]),
        .Q(wr_data_count[3]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [5]),
        .Q(wr_data_count[4]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [6]),
        .Q(wr_data_count[5]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [7]),
        .Q(wr_data_count[6]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [8]),
        .Q(wr_data_count[7]),
        .R(wrst_busy));
  zynq_bd_C2C2_0_xpm_counter_updn__parameterized0_41 rdp_inst
       (.D(diff_pntr_pe),
        .DI(rdp_inst_n_9),
        .Q(rd_pntr_ext),
        .S({rdp_inst_n_19,rdp_inst_n_20,rdp_inst_n_21,rdp_inst_n_22,rdp_inst_n_23}),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\count_value_i_reg[7]_0 (rdp_inst_n_10),
        .\count_value_i_reg[8]_0 (rd_rst_busy),
        .enb(rdp_inst_n_8),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ({\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .\grdc.rd_data_count_i_reg[7] (count_value_i),
        .\grdc.rd_data_count_i_reg[8] ({\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_15 }),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .src_in_bin({rdp_inst_n_24,rdp_inst_n_25,rdp_inst_n_26,rdp_inst_n_27,rdp_inst_n_28,rdp_inst_n_29,rdp_inst_n_30,rdp_inst_n_31}));
  zynq_bd_C2C2_0_xpm_counter_updn__parameterized1_42 rdpp1_inst
       (.E(rdp_inst_n_8),
        .Q({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3,rdpp1_inst_n_4,rdpp1_inst_n_5,rdpp1_inst_n_6,rdpp1_inst_n_7}),
        .\count_value_i_reg[0]_0 (rd_rst_busy),
        .\count_value_i_reg[1]_0 (curr_fwft_state),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  zynq_bd_C2C2_0_xpm_fifo_reg_bit_43 rst_d1_inst
       (.Q(diff_pntr_pf_q),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] (rst_d1_inst_n_1),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg (full),
        .overflow_i0(overflow_i0),
        .prog_full(prog_full),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_counter_updn__parameterized0_44 wrp_inst
       (.D(\gwdc.diff_wr_rd_pntr1_out ),
        .Q(wr_pntr_ext),
        .\count_value_i_reg[6]_0 (full),
        .\gwdc.wr_data_count_i_reg[8] ({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 }),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_counter_updn__parameterized1_45 wrpp1_inst
       (.D(diff_pntr_pf_q0),
        .Q(wr_pntr_plus1_pf),
        .\count_value_i_reg[6]_0 (full),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] (rd_pntr_wr),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_counter_updn__parameterized2_46 wrpp2_inst
       (.Q({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7}),
        .\count_value_i_reg[6]_0 (full),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_fifo_rst__xdcDup__2 xpm_fifo_rst_inst
       (.Q(curr_fwft_state),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[7] (full),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_0 (rd_rst_busy),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_1 (\grdc.rd_data_count_i0 ),
        .\guf.underflow_i_reg (empty),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .rst_d1(rst_d1),
        .underflow_i0(underflow_i0),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wr_rst_busy(wr_rst_busy),
        .wrst_busy(wrst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_DEST_SYNC_FF = "3" *) (* COMMON_CLOCK = "0" *) 
(* DOUT_RESET_VALUE = "0" *) (* ECC_MODE = "0" *) (* ENABLE_ECC = "0" *) 
(* EN_ADV_FEATURE = "16'b0000011100000111" *) (* EN_AE = "1'b0" *) (* EN_AF = "1'b0" *) 
(* EN_DVLD = "1'b0" *) (* EN_OF = "1'b1" *) (* EN_PE = "1'b1" *) 
(* EN_PF = "1'b1" *) (* EN_RDC = "1'b1" *) (* EN_UF = "1'b1" *) 
(* EN_WACK = "1'b0" *) (* EN_WDC = "1'b1" *) (* FG_EQ_ASYM_DOUT = "1'b0" *) 
(* FIFO_MEMORY_TYPE = "2" *) (* FIFO_MEM_TYPE = "2" *) (* FIFO_READ_DEPTH = "512" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_SIZE = "19456" *) (* FIFO_WRITE_DEPTH = "512" *) 
(* FULL_RESET_VALUE = "1" *) (* FULL_RST_VAL = "1'b1" *) (* ORIG_REF_NAME = "xpm_fifo_base" *) 
(* PE_THRESH_ADJ = "8" *) (* PE_THRESH_MAX = "507" *) (* PE_THRESH_MIN = "5" *) 
(* PF_THRESH_ADJ = "382" *) (* PF_THRESH_MAX = "507" *) (* PF_THRESH_MIN = "8" *) 
(* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "384" *) (* RD_DATA_COUNT_WIDTH = "9" *) 
(* RD_DC_WIDTH_EXT = "10" *) (* RD_LATENCY = "2" *) (* RD_MODE = "1" *) 
(* RD_PNTR_WIDTH = "9" *) (* READ_DATA_WIDTH = "38" *) (* READ_MODE = "1" *) 
(* READ_MODE_LL = "1" *) (* RELATED_CLOCKS = "0" *) (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WIDTH_RATIO = "1" *) (* WRITE_DATA_WIDTH = "38" *) 
(* WR_DATA_COUNT_WIDTH = "9" *) (* WR_DC_WIDTH_EXT = "10" *) (* WR_DEPTH_LOG = "9" *) 
(* WR_PNTR_WIDTH = "9" *) (* WR_RD_RATIO = "0" *) (* WR_WIDTH_LOG = "6" *) 
(* XPM_MODULE = "TRUE" *) (* both_stages_valid = "3" *) (* invalid = "0" *) 
(* keep_hierarchy = "soft" *) (* stage1_valid = "2" *) (* stage2_valid = "1" *) 
module zynq_bd_C2C2_0_xpm_fifo_base__parameterized0
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    full_n,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [37:0]din;
  output full;
  output full_n;
  output prog_full;
  output [8:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [37:0]dout;
  output empty;
  output prog_empty;
  output [8:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire clr_full;
  wire [1:0]count_value_i;
  wire [1:0]curr_fwft_state;
  wire [8:0]diff_pntr_pe;
  wire [9:2]diff_pntr_pf_q;
  wire [9:2]diff_pntr_pf_q0;
  wire [37:0]din;
  wire [37:1]\^dout ;
  wire empty;
  wire empty_fwft_i0;
  wire full;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_0 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_7 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_9 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_9 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_0 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_10 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_11 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_12 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_13 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_14 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_15 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_16 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_7 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_9 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_0 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_7 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_8 ;
  wire \gen_fwft.count_rst ;
  wire \gen_fwft.ram_regout_en ;
  wire \gen_fwft.rdpp1_inst_n_3 ;
  wire \gen_fwft.rdpp1_inst_n_4 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[8] ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ;
  wire [9:1]\grdc.diff_wr_rd_pntr_rdc ;
  wire \grdc.rd_data_count_i0 ;
  wire [9:1]\gwdc.diff_wr_rd_pntr1_out ;
  wire [1:0]next_fwft_state__0;
  wire overflow;
  wire overflow_i0;
  wire prog_empty;
  wire prog_full;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire ram_rd_en_i;
  wire rd_clk;
  wire [8:0]rd_data_count;
  wire rd_en;
  wire [8:0]rd_pntr_ext;
  wire [8:0]rd_pntr_wr;
  wire [8:0]rd_pntr_wr_cdc;
  wire [9:0]rd_pntr_wr_cdc_dc;
  wire rd_rst_busy;
  wire rdp_inst_n_0;
  wire rdp_inst_n_11;
  wire rdp_inst_n_21;
  wire rdp_inst_n_31;
  wire rdp_inst_n_32;
  wire rdp_inst_n_33;
  wire rdp_inst_n_34;
  wire rdp_inst_n_35;
  wire rdp_inst_n_36;
  wire rdp_inst_n_37;
  wire rdp_inst_n_38;
  wire rst;
  wire rst_d1;
  wire rst_d1_inst_n_1;
  wire sleep;
  wire [9:0]src_in_bin00_out;
  wire underflow;
  wire underflow_i0;
  wire wr_clk;
  wire [8:0]wr_data_count;
  wire wr_en;
  wire [9:0]wr_pntr_ext;
  wire [9:1]wr_pntr_plus1_pf;
  wire wr_pntr_plus1_pf_carry;
  wire [8:0]wr_pntr_rd_cdc;
  wire [9:0]wr_pntr_rd_cdc_dc;
  wire wr_rst_busy;
  wire wrpp2_inst_n_0;
  wire wrpp2_inst_n_1;
  wire wrpp2_inst_n_2;
  wire wrpp2_inst_n_3;
  wire wrpp2_inst_n_4;
  wire wrpp2_inst_n_5;
  wire wrpp2_inst_n_6;
  wire wrpp2_inst_n_7;
  wire wrpp2_inst_n_8;
  wire wrst_busy;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ;
  wire [37:0]\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED ;
  wire [0:0]\NLW_gen_sdpram.xpm_memory_base_inst_doutb_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign dout[37:1] = \^dout [37:1];
  assign dout[0] = \<const0> ;
  assign full_n = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  (* SOFT_HLUTNM = "soft_lutpair345" *) 
  LUT4 #(
    .INIT(16'h69A1)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[0]_i_1 
       (.I0(ram_empty_i),
        .I1(curr_fwft_state[1]),
        .I2(curr_fwft_state[0]),
        .I3(rd_en),
        .O(next_fwft_state__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair345" *) 
  LUT4 #(
    .INIT(16'h3FF0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[1]_i_1 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(curr_fwft_state[0]),
        .I3(curr_fwft_state[1]),
        .O(next_fwft_state__0[1]));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[0]),
        .Q(curr_fwft_state[0]),
        .R(rd_rst_busy));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[1]),
        .Q(curr_fwft_state[1]),
        .R(rd_rst_busy));
  GND GND
       (.G(\<const0> ));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "10" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_gray__parameterized3__2 \gen_cdc_pntr.rd_pntr_cdc_dc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc_dc),
        .src_clk(rd_clk),
        .src_in_bin(src_in_bin00_out));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_gray__parameterized1__10 \gen_cdc_pntr.rd_pntr_cdc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc),
        .src_clk(rd_clk),
        .src_in_bin(rd_pntr_ext));
  zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized0 \gen_cdc_pntr.rpw_gray_reg 
       (.D(rd_pntr_wr_cdc),
        .Q(rd_pntr_wr),
        .clr_full(clr_full),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 ({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7,wrpp2_inst_n_8}),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg (wr_pntr_plus1_pf),
        .\reg_out_i_reg[0]_0 (\gen_cdc_pntr.rpw_gray_reg_n_9 ),
        .wr_clk(wr_clk),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized1 \gen_cdc_pntr.rpw_gray_reg_dc 
       (.D(rd_pntr_wr_cdc_dc),
        .Q({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_9 }),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized0_1 \gen_cdc_pntr.wpr_gray_reg 
       (.D(diff_pntr_pe),
        .Q(curr_fwft_state),
        .S({rdp_inst_n_31,rdp_inst_n_32,rdp_inst_n_33,rdp_inst_n_34,rdp_inst_n_35,rdp_inst_n_36,rdp_inst_n_37,rdp_inst_n_38}),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] (rd_pntr_ext[8]),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[0]_0 (rd_rst_busy),
        .\reg_out_i_reg[8]_0 ({\gen_cdc_pntr.wpr_gray_reg_n_0 ,\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .\reg_out_i_reg[8]_1 (wr_pntr_rd_cdc));
  zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized1_2 \gen_cdc_pntr.wpr_gray_reg_dc 
       (.D(wr_pntr_rd_cdc_dc),
        .DI({\gen_cdc_pntr.wpr_gray_reg_dc_n_0 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_1 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_2 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_5 }),
        .Q({\gen_cdc_pntr.wpr_gray_reg_dc_n_6 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_7 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 }),
        .S(\gen_cdc_pntr.wpr_gray_reg_dc_n_16 ),
        .\grdc.rd_data_count_i_reg[7] (count_value_i[1]),
        .\grdc.rd_data_count_i_reg[9] ({rdp_inst_n_0,rd_pntr_ext[8:1]}),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[7]_0 (\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ),
        .\reg_out_i_reg[9]_0 (rd_rst_busy));
  (* DEST_SYNC_FF = "5" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "10" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_gray__parameterized2__2 \gen_cdc_pntr.wr_pntr_cdc_dc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc_dc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_gray__parameterized1__9 \gen_cdc_pntr.wr_pntr_cdc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext[8:0]));
  (* SOFT_HLUTNM = "soft_lutpair344" *) 
  LUT4 #(
    .INIT(16'hE0CC)) 
    \gen_fwft.empty_fwft_i_i_1 
       (.I0(rd_en),
        .I1(empty),
        .I2(curr_fwft_state[1]),
        .I3(curr_fwft_state[0]),
        .O(empty_fwft_i0));
  FDSE #(
    .INIT(1'b1)) 
    \gen_fwft.empty_fwft_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .Q(empty),
        .S(rd_rst_busy));
  zynq_bd_C2C2_0_xpm_counter_updn \gen_fwft.rdpp1_inst 
       (.DI({\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .Q(count_value_i),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\src_gray_ff_reg[0] (rd_pntr_ext[0]),
        .src_in_bin(src_in_bin00_out[0]));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_cdc_pntr.rpw_gray_reg_n_9 ),
        .Q(full),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[0]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[1]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[2]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[3]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[4]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[5]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[6]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[7]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[8]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[8] ),
        .R(rd_rst_busy));
  LUT4 #(
    .INIT(16'h88B8)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1 
       (.I0(prog_empty),
        .I1(empty),
        .I2(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h01FF)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[8] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .I4(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ),
        .Q(prog_empty),
        .S(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[2]),
        .Q(diff_pntr_pf_q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[3]),
        .Q(diff_pntr_pf_q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[4]),
        .Q(diff_pntr_pf_q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[5]),
        .Q(diff_pntr_pf_q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[6]),
        .Q(diff_pntr_pf_q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[7]),
        .Q(diff_pntr_pf_q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[8]),
        .Q(diff_pntr_pf_q[8]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[9]),
        .Q(diff_pntr_pf_q[9]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1_inst_n_1),
        .Q(prog_full),
        .S(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.ram_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i0),
        .Q(ram_empty_i),
        .S(rd_rst_busy));
  (* ADDR_WIDTH_A = "9" *) 
  (* ADDR_WIDTH_B = "9" *) 
  (* AUTO_SLEEP_TIME = "0" *) 
  (* BYTE_WRITE_WIDTH_A = "38" *) 
  (* BYTE_WRITE_WIDTH_B = "38" *) 
  (* CASCADE_HEIGHT = "0" *) 
  (* CLOCKING_MODE = "1" *) 
  (* ECC_BIT_RANGE = "[7:0]" *) 
  (* ECC_MODE = "0" *) 
  (* ECC_TYPE = "NONE" *) 
  (* IGNORE_INIT_SYNTH = "0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* MAX_NUM_CHAR = "0" *) 
  (* \MEM.ADDRESS_SPACE  *) 
  (* \MEM.ADDRESS_SPACE_BEGIN  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_LSB  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_MSB  = "36" *) 
  (* \MEM.ADDRESS_SPACE_END  = "511" *) 
  (* \MEM.CORE_MEMORY_WIDTH  = "37" *) 
  (* MEMORY_INIT_FILE = "none" *) 
  (* MEMORY_INIT_PARAM = "" *) 
  (* MEMORY_OPTIMIZATION = "true" *) 
  (* MEMORY_PRIMITIVE = "2" *) 
  (* MEMORY_SIZE = "19456" *) 
  (* MEMORY_TYPE = "1" *) 
  (* MESSAGE_CONTROL = "0" *) 
  (* NUM_CHAR_LOC = "0" *) 
  (* P_ECC_MODE = "no_ecc" *) 
  (* P_ENABLE_BYTE_WRITE_A = "0" *) 
  (* P_ENABLE_BYTE_WRITE_B = "0" *) 
  (* P_MAX_DEPTH_DATA = "512" *) 
  (* P_MEMORY_OPT = "yes" *) 
  (* P_MEMORY_PRIMITIVE = "block" *) 
  (* P_MIN_WIDTH_DATA = "38" *) 
  (* P_MIN_WIDTH_DATA_A = "38" *) 
  (* P_MIN_WIDTH_DATA_B = "38" *) 
  (* P_MIN_WIDTH_DATA_ECC = "38" *) 
  (* P_MIN_WIDTH_DATA_LDW = "4" *) 
  (* P_MIN_WIDTH_DATA_SHFT = "38" *) 
  (* P_NUM_COLS_WRITE_A = "1" *) 
  (* P_NUM_COLS_WRITE_B = "1" *) 
  (* P_NUM_ROWS_READ_A = "1" *) 
  (* P_NUM_ROWS_READ_B = "1" *) 
  (* P_NUM_ROWS_WRITE_A = "1" *) 
  (* P_NUM_ROWS_WRITE_B = "1" *) 
  (* P_SDP_WRITE_MODE = "no" *) 
  (* P_WIDTH_ADDR_LSB_READ_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) 
  (* P_WIDTH_ADDR_READ_A = "9" *) 
  (* P_WIDTH_ADDR_READ_B = "9" *) 
  (* P_WIDTH_ADDR_WRITE_A = "9" *) 
  (* P_WIDTH_ADDR_WRITE_B = "9" *) 
  (* P_WIDTH_COL_WRITE_A = "38" *) 
  (* P_WIDTH_COL_WRITE_B = "38" *) 
  (* RAM_DECOMP = "auto" *) 
  (* READ_DATA_WIDTH_A = "38" *) 
  (* READ_DATA_WIDTH_B = "38" *) 
  (* READ_LATENCY_A = "2" *) 
  (* READ_LATENCY_B = "2" *) 
  (* READ_RESET_VALUE_A = "0" *) 
  (* READ_RESET_VALUE_B = "0" *) 
  (* RST_MODE_A = "SYNC" *) 
  (* RST_MODE_B = "SYNC" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_EMBEDDED_CONSTRAINT = "0" *) 
  (* USE_MEM_INIT = "0" *) 
  (* USE_MEM_INIT_MMI = "0" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH_A = "38" *) 
  (* WRITE_DATA_WIDTH_B = "38" *) 
  (* WRITE_MODE_A = "2" *) 
  (* WRITE_MODE_B = "2" *) 
  (* WRITE_PROTECT = "1" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* rsta_loop_iter = "40" *) 
  (* rstb_loop_iter = "40" *) 
  zynq_bd_C2C2_0_xpm_memory_base__parameterized0 \gen_sdpram.xpm_memory_base_inst 
       (.addra(wr_pntr_ext[8:0]),
        .addrb(rd_pntr_ext),
        .clka(wr_clk),
        .clkb(rd_clk),
        .dbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ),
        .dbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ),
        .dina({din[37:1],1'b0}),
        .dinb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .douta(\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED [37:0]),
        .doutb({\^dout ,\NLW_gen_sdpram.xpm_memory_base_inst_doutb_UNCONNECTED [0]}),
        .ena(1'b0),
        .enb(ram_rd_en_i),
        .injectdbiterra(1'b0),
        .injectdbiterrb(1'b0),
        .injectsbiterra(1'b0),
        .injectsbiterrb(1'b0),
        .regcea(1'b0),
        .regceb(\gen_fwft.ram_regout_en ),
        .rsta(1'b0),
        .rstb(rd_rst_busy),
        .sbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ),
        .sbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ),
        .sleep(sleep),
        .wea(wr_pntr_plus1_pf_carry),
        .web(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair344" *) 
  LUT3 #(
    .INIT(8'h2C)) 
    \gen_sdpram.xpm_memory_base_inst_i_3 
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .O(\gen_fwft.ram_regout_en ));
  FDRE #(
    .INIT(1'b0)) 
    \gof.overflow_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(overflow_i0),
        .Q(overflow),
        .R(1'b0));
  FDRE \grdc.rd_data_count_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q(rd_data_count[0]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(rd_data_count[1]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [3]),
        .Q(rd_data_count[2]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [4]),
        .Q(rd_data_count[3]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [5]),
        .Q(rd_data_count[4]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [6]),
        .Q(rd_data_count[5]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [7]),
        .Q(rd_data_count[6]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [8]),
        .Q(rd_data_count[7]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[9] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [9]),
        .Q(rd_data_count[8]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \guf.underflow_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(underflow_i0),
        .Q(underflow),
        .R(1'b0));
  FDRE \gwdc.wr_data_count_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [1]),
        .Q(wr_data_count[0]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [2]),
        .Q(wr_data_count[1]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [3]),
        .Q(wr_data_count[2]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [4]),
        .Q(wr_data_count[3]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [5]),
        .Q(wr_data_count[4]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [6]),
        .Q(wr_data_count[5]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [7]),
        .Q(wr_data_count[6]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [8]),
        .Q(wr_data_count[7]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[9] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [9]),
        .Q(wr_data_count[8]),
        .R(wrst_busy));
  zynq_bd_C2C2_0_xpm_counter_updn__parameterized3 rdp_inst
       (.D(\grdc.diff_wr_rd_pntr_rdc ),
        .DI({\gen_cdc_pntr.wpr_gray_reg_dc_n_0 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_1 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_2 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_5 ,\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .Q({rdp_inst_n_0,rd_pntr_ext}),
        .S(\gen_cdc_pntr.wpr_gray_reg_dc_n_16 ),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\count_value_i_reg[1]_0 (rdp_inst_n_21),
        .\count_value_i_reg[7]_0 ({rdp_inst_n_31,rdp_inst_n_32,rdp_inst_n_33,rdp_inst_n_34,rdp_inst_n_35,rdp_inst_n_36,rdp_inst_n_37,rdp_inst_n_38}),
        .\count_value_i_reg[9]_0 (rd_rst_busy),
        .\gen_pf_ic_rc.ram_empty_i_reg ({\gen_cdc_pntr.wpr_gray_reg_n_0 ,\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .\grdc.rd_data_count_i_reg[7] (count_value_i),
        .\grdc.rd_data_count_i_reg[9] (\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ),
        .\grdc.rd_data_count_i_reg[9]_0 ({\gen_cdc_pntr.wpr_gray_reg_dc_n_6 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_7 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 }),
        .ram_empty_i(ram_empty_i),
        .ram_rd_en_i(ram_rd_en_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[7] (rdp_inst_n_11),
        .src_in_bin(src_in_bin00_out[9:1]));
  zynq_bd_C2C2_0_xpm_counter_updn__parameterized4 rdpp1_inst
       (.E(ram_rd_en_i),
        .Q(curr_fwft_state),
        .\count_value_i_reg[0]_0 (rd_rst_busy),
        .\gen_pf_ic_rc.ram_empty_i_reg (rdp_inst_n_21),
        .\gen_pf_ic_rc.ram_empty_i_reg_0 (rdp_inst_n_11),
        .\gen_pf_ic_rc.ram_empty_i_reg_1 ({\gen_cdc_pntr.wpr_gray_reg_n_0 ,\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .ram_empty_i(ram_empty_i),
        .ram_empty_i0(ram_empty_i0),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  zynq_bd_C2C2_0_xpm_fifo_reg_bit rst_d1_inst
       (.Q(diff_pntr_pf_q),
        .clr_full(clr_full),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] (rst_d1_inst_n_1),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg (full),
        .overflow_i0(overflow_i0),
        .prog_full(prog_full),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_counter_updn__parameterized3_3 wrp_inst
       (.D(\gwdc.diff_wr_rd_pntr1_out ),
        .Q(wr_pntr_ext),
        .\count_value_i_reg[5]_0 (full),
        .\gwdc.wr_data_count_i_reg[9] ({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_9 }),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_counter_updn__parameterized4_4 wrpp1_inst
       (.D(diff_pntr_pf_q0),
        .Q(wr_pntr_plus1_pf),
        .\count_value_i_reg[5]_0 (full),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] (rd_pntr_wr),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_counter_updn__parameterized5 wrpp2_inst
       (.Q({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7,wrpp2_inst_n_8}),
        .\count_value_i_reg[5]_0 (full),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_fifo_rst__xdcDup__3 xpm_fifo_rst_inst
       (.\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] (\grdc.rd_data_count_i0 ),
        .Q(curr_fwft_state),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[8] (full),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_0 (rd_rst_busy),
        .\guf.underflow_i_reg (empty),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .rst_d1(rst_d1),
        .underflow_i0(underflow_i0),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wr_rst_busy(wr_rst_busy),
        .wrst_busy(wrst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_DEST_SYNC_FF = "3" *) (* COMMON_CLOCK = "0" *) 
(* DOUT_RESET_VALUE = "0" *) (* ECC_MODE = "0" *) (* ENABLE_ECC = "0" *) 
(* EN_ADV_FEATURE = "16'b0000011100000111" *) (* EN_AE = "1'b0" *) (* EN_AF = "1'b0" *) 
(* EN_DVLD = "1'b0" *) (* EN_OF = "1'b1" *) (* EN_PE = "1'b1" *) 
(* EN_PF = "1'b1" *) (* EN_RDC = "1'b1" *) (* EN_UF = "1'b1" *) 
(* EN_WACK = "1'b0" *) (* EN_WDC = "1'b1" *) (* FG_EQ_ASYM_DOUT = "1'b0" *) 
(* FIFO_MEMORY_TYPE = "2" *) (* FIFO_MEM_TYPE = "2" *) (* FIFO_READ_DEPTH = "512" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_SIZE = "18432" *) (* FIFO_WRITE_DEPTH = "512" *) 
(* FULL_RESET_VALUE = "1" *) (* FULL_RST_VAL = "1'b1" *) (* ORIG_REF_NAME = "xpm_fifo_base" *) 
(* PE_THRESH_ADJ = "8" *) (* PE_THRESH_MAX = "507" *) (* PE_THRESH_MIN = "5" *) 
(* PF_THRESH_ADJ = "382" *) (* PF_THRESH_MAX = "507" *) (* PF_THRESH_MIN = "8" *) 
(* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "384" *) (* RD_DATA_COUNT_WIDTH = "9" *) 
(* RD_DC_WIDTH_EXT = "10" *) (* RD_LATENCY = "2" *) (* RD_MODE = "1" *) 
(* RD_PNTR_WIDTH = "9" *) (* READ_DATA_WIDTH = "36" *) (* READ_MODE = "1" *) 
(* READ_MODE_LL = "1" *) (* RELATED_CLOCKS = "0" *) (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WIDTH_RATIO = "1" *) (* WRITE_DATA_WIDTH = "36" *) 
(* WR_DATA_COUNT_WIDTH = "9" *) (* WR_DC_WIDTH_EXT = "10" *) (* WR_DEPTH_LOG = "9" *) 
(* WR_PNTR_WIDTH = "9" *) (* WR_RD_RATIO = "0" *) (* WR_WIDTH_LOG = "6" *) 
(* XPM_MODULE = "TRUE" *) (* both_stages_valid = "3" *) (* invalid = "0" *) 
(* keep_hierarchy = "soft" *) (* stage1_valid = "2" *) (* stage2_valid = "1" *) 
module zynq_bd_C2C2_0_xpm_fifo_base__parameterized1
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    full_n,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [35:0]din;
  output full;
  output full_n;
  output prog_full;
  output [8:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [35:0]dout;
  output empty;
  output prog_empty;
  output [8:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire clr_full;
  wire [1:0]count_value_i;
  wire [1:0]curr_fwft_state;
  wire [8:0]diff_pntr_pe;
  wire [9:2]diff_pntr_pf_q;
  wire [9:2]diff_pntr_pf_q0;
  wire [35:0]din;
  wire [35:0]dout;
  wire empty;
  wire empty_fwft_i0;
  wire full;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_0 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_7 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_9 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_9 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_0 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_10 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_11 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_12 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_13 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_14 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_15 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_16 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_7 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_9 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_0 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_7 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_8 ;
  wire \gen_fwft.count_rst ;
  wire \gen_fwft.ram_regout_en ;
  wire \gen_fwft.rdpp1_inst_n_3 ;
  wire \gen_fwft.rdpp1_inst_n_4 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[8] ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ;
  wire [9:1]\grdc.diff_wr_rd_pntr_rdc ;
  wire \grdc.rd_data_count_i0 ;
  wire [9:1]\gwdc.diff_wr_rd_pntr1_out ;
  wire [1:0]next_fwft_state__0;
  wire overflow;
  wire overflow_i0;
  wire prog_empty;
  wire prog_full;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire ram_rd_en_i;
  wire rd_clk;
  wire [8:0]rd_data_count;
  wire rd_en;
  wire [8:0]rd_pntr_ext;
  wire [8:0]rd_pntr_wr;
  wire [8:0]rd_pntr_wr_cdc;
  wire [9:0]rd_pntr_wr_cdc_dc;
  wire rd_rst_busy;
  wire rdp_inst_n_0;
  wire rdp_inst_n_11;
  wire rdp_inst_n_21;
  wire rdp_inst_n_31;
  wire rdp_inst_n_32;
  wire rdp_inst_n_33;
  wire rdp_inst_n_34;
  wire rdp_inst_n_35;
  wire rdp_inst_n_36;
  wire rdp_inst_n_37;
  wire rdp_inst_n_38;
  wire rst;
  wire rst_d1;
  wire rst_d1_inst_n_1;
  wire sleep;
  wire [9:0]src_in_bin00_out;
  wire underflow;
  wire underflow_i0;
  wire wr_clk;
  wire [8:0]wr_data_count;
  wire wr_en;
  wire [9:0]wr_pntr_ext;
  wire [9:1]wr_pntr_plus1_pf;
  wire wr_pntr_plus1_pf_carry;
  wire [8:0]wr_pntr_rd_cdc;
  wire [9:0]wr_pntr_rd_cdc_dc;
  wire wr_rst_busy;
  wire wrpp2_inst_n_0;
  wire wrpp2_inst_n_1;
  wire wrpp2_inst_n_2;
  wire wrpp2_inst_n_3;
  wire wrpp2_inst_n_4;
  wire wrpp2_inst_n_5;
  wire wrpp2_inst_n_6;
  wire wrpp2_inst_n_7;
  wire wrpp2_inst_n_8;
  wire wrst_busy;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ;
  wire [35:0]\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign full_n = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  (* SOFT_HLUTNM = "soft_lutpair291" *) 
  LUT4 #(
    .INIT(16'h69A1)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[0]_i_1 
       (.I0(ram_empty_i),
        .I1(curr_fwft_state[1]),
        .I2(curr_fwft_state[0]),
        .I3(rd_en),
        .O(next_fwft_state__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair291" *) 
  LUT4 #(
    .INIT(16'h3FF0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[1]_i_1 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(curr_fwft_state[0]),
        .I3(curr_fwft_state[1]),
        .O(next_fwft_state__0[1]));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[0]),
        .Q(curr_fwft_state[0]),
        .R(rd_rst_busy));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[1]),
        .Q(curr_fwft_state[1]),
        .R(rd_rst_busy));
  GND GND
       (.G(\<const0> ));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "10" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_gray__parameterized3 \gen_cdc_pntr.rd_pntr_cdc_dc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc_dc),
        .src_clk(rd_clk),
        .src_in_bin(src_in_bin00_out));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_gray__parameterized1__12 \gen_cdc_pntr.rd_pntr_cdc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc),
        .src_clk(rd_clk),
        .src_in_bin(rd_pntr_ext));
  zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized0_5 \gen_cdc_pntr.rpw_gray_reg 
       (.D(rd_pntr_wr_cdc),
        .Q(rd_pntr_wr),
        .clr_full(clr_full),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 ({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7,wrpp2_inst_n_8}),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg (wr_pntr_plus1_pf),
        .\reg_out_i_reg[0]_0 (\gen_cdc_pntr.rpw_gray_reg_n_9 ),
        .wr_clk(wr_clk),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized1_6 \gen_cdc_pntr.rpw_gray_reg_dc 
       (.D(rd_pntr_wr_cdc_dc),
        .Q({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_9 }),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized0_7 \gen_cdc_pntr.wpr_gray_reg 
       (.D(diff_pntr_pe),
        .Q(curr_fwft_state),
        .S({rdp_inst_n_31,rdp_inst_n_32,rdp_inst_n_33,rdp_inst_n_34,rdp_inst_n_35,rdp_inst_n_36,rdp_inst_n_37,rdp_inst_n_38}),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] (rd_pntr_ext[8]),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[0]_0 (rd_rst_busy),
        .\reg_out_i_reg[8]_0 ({\gen_cdc_pntr.wpr_gray_reg_n_0 ,\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .\reg_out_i_reg[8]_1 (wr_pntr_rd_cdc));
  zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized1_8 \gen_cdc_pntr.wpr_gray_reg_dc 
       (.D(wr_pntr_rd_cdc_dc),
        .DI({\gen_cdc_pntr.wpr_gray_reg_dc_n_0 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_1 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_2 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_5 }),
        .Q({\gen_cdc_pntr.wpr_gray_reg_dc_n_6 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_7 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 }),
        .S(\gen_cdc_pntr.wpr_gray_reg_dc_n_16 ),
        .\grdc.rd_data_count_i_reg[7] (count_value_i[1]),
        .\grdc.rd_data_count_i_reg[9] ({rdp_inst_n_0,rd_pntr_ext[8:1]}),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[7]_0 (\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ),
        .\reg_out_i_reg[9]_0 (rd_rst_busy));
  (* DEST_SYNC_FF = "5" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "10" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_gray__parameterized2 \gen_cdc_pntr.wr_pntr_cdc_dc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc_dc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_gray__parameterized1__11 \gen_cdc_pntr.wr_pntr_cdc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext[8:0]));
  (* SOFT_HLUTNM = "soft_lutpair290" *) 
  LUT4 #(
    .INIT(16'hE0CC)) 
    \gen_fwft.empty_fwft_i_i_1 
       (.I0(rd_en),
        .I1(empty),
        .I2(curr_fwft_state[1]),
        .I3(curr_fwft_state[0]),
        .O(empty_fwft_i0));
  FDSE #(
    .INIT(1'b1)) 
    \gen_fwft.empty_fwft_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .Q(empty),
        .S(rd_rst_busy));
  zynq_bd_C2C2_0_xpm_counter_updn_9 \gen_fwft.rdpp1_inst 
       (.DI({\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .Q(count_value_i),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\src_gray_ff_reg[0] (rd_pntr_ext[0]),
        .src_in_bin(src_in_bin00_out[0]));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_cdc_pntr.rpw_gray_reg_n_9 ),
        .Q(full),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[0]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[1]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[2]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[3]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[4]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[5]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[6]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[7]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[8]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[8] ),
        .R(rd_rst_busy));
  LUT4 #(
    .INIT(16'h88B8)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1 
       (.I0(prog_empty),
        .I1(empty),
        .I2(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h01FF)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[8] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .I4(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ),
        .Q(prog_empty),
        .S(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[2]),
        .Q(diff_pntr_pf_q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[3]),
        .Q(diff_pntr_pf_q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[4]),
        .Q(diff_pntr_pf_q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[5]),
        .Q(diff_pntr_pf_q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[6]),
        .Q(diff_pntr_pf_q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[7]),
        .Q(diff_pntr_pf_q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[8]),
        .Q(diff_pntr_pf_q[8]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[9]),
        .Q(diff_pntr_pf_q[9]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1_inst_n_1),
        .Q(prog_full),
        .S(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.ram_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i0),
        .Q(ram_empty_i),
        .S(rd_rst_busy));
  (* ADDR_WIDTH_A = "9" *) 
  (* ADDR_WIDTH_B = "9" *) 
  (* AUTO_SLEEP_TIME = "0" *) 
  (* BYTE_WRITE_WIDTH_A = "36" *) 
  (* BYTE_WRITE_WIDTH_B = "36" *) 
  (* CASCADE_HEIGHT = "0" *) 
  (* CLOCKING_MODE = "1" *) 
  (* ECC_BIT_RANGE = "[7:0]" *) 
  (* ECC_MODE = "0" *) 
  (* ECC_TYPE = "NONE" *) 
  (* IGNORE_INIT_SYNTH = "0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* MAX_NUM_CHAR = "0" *) 
  (* \MEM.ADDRESS_SPACE  *) 
  (* \MEM.ADDRESS_SPACE_BEGIN  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_LSB  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_MSB  = "35" *) 
  (* \MEM.ADDRESS_SPACE_END  = "511" *) 
  (* \MEM.CORE_MEMORY_WIDTH  = "36" *) 
  (* MEMORY_INIT_FILE = "none" *) 
  (* MEMORY_INIT_PARAM = "" *) 
  (* MEMORY_OPTIMIZATION = "true" *) 
  (* MEMORY_PRIMITIVE = "2" *) 
  (* MEMORY_SIZE = "18432" *) 
  (* MEMORY_TYPE = "1" *) 
  (* MESSAGE_CONTROL = "0" *) 
  (* NUM_CHAR_LOC = "0" *) 
  (* P_ECC_MODE = "no_ecc" *) 
  (* P_ENABLE_BYTE_WRITE_A = "0" *) 
  (* P_ENABLE_BYTE_WRITE_B = "0" *) 
  (* P_MAX_DEPTH_DATA = "512" *) 
  (* P_MEMORY_OPT = "yes" *) 
  (* P_MEMORY_PRIMITIVE = "block" *) 
  (* P_MIN_WIDTH_DATA = "36" *) 
  (* P_MIN_WIDTH_DATA_A = "36" *) 
  (* P_MIN_WIDTH_DATA_B = "36" *) 
  (* P_MIN_WIDTH_DATA_ECC = "36" *) 
  (* P_MIN_WIDTH_DATA_LDW = "4" *) 
  (* P_MIN_WIDTH_DATA_SHFT = "36" *) 
  (* P_NUM_COLS_WRITE_A = "1" *) 
  (* P_NUM_COLS_WRITE_B = "1" *) 
  (* P_NUM_ROWS_READ_A = "1" *) 
  (* P_NUM_ROWS_READ_B = "1" *) 
  (* P_NUM_ROWS_WRITE_A = "1" *) 
  (* P_NUM_ROWS_WRITE_B = "1" *) 
  (* P_SDP_WRITE_MODE = "no" *) 
  (* P_WIDTH_ADDR_LSB_READ_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) 
  (* P_WIDTH_ADDR_READ_A = "9" *) 
  (* P_WIDTH_ADDR_READ_B = "9" *) 
  (* P_WIDTH_ADDR_WRITE_A = "9" *) 
  (* P_WIDTH_ADDR_WRITE_B = "9" *) 
  (* P_WIDTH_COL_WRITE_A = "36" *) 
  (* P_WIDTH_COL_WRITE_B = "36" *) 
  (* RAM_DECOMP = "auto" *) 
  (* READ_DATA_WIDTH_A = "36" *) 
  (* READ_DATA_WIDTH_B = "36" *) 
  (* READ_LATENCY_A = "2" *) 
  (* READ_LATENCY_B = "2" *) 
  (* READ_RESET_VALUE_A = "0" *) 
  (* READ_RESET_VALUE_B = "0" *) 
  (* RST_MODE_A = "SYNC" *) 
  (* RST_MODE_B = "SYNC" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_EMBEDDED_CONSTRAINT = "0" *) 
  (* USE_MEM_INIT = "0" *) 
  (* USE_MEM_INIT_MMI = "0" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH_A = "36" *) 
  (* WRITE_DATA_WIDTH_B = "36" *) 
  (* WRITE_MODE_A = "2" *) 
  (* WRITE_MODE_B = "2" *) 
  (* WRITE_PROTECT = "1" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* rsta_loop_iter = "36" *) 
  (* rstb_loop_iter = "36" *) 
  zynq_bd_C2C2_0_xpm_memory_base__parameterized1 \gen_sdpram.xpm_memory_base_inst 
       (.addra(wr_pntr_ext[8:0]),
        .addrb(rd_pntr_ext),
        .clka(wr_clk),
        .clkb(rd_clk),
        .dbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ),
        .dbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ),
        .dina(din),
        .dinb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .douta(\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED [35:0]),
        .doutb(dout),
        .ena(1'b0),
        .enb(ram_rd_en_i),
        .injectdbiterra(1'b0),
        .injectdbiterrb(1'b0),
        .injectsbiterra(1'b0),
        .injectsbiterrb(1'b0),
        .regcea(1'b0),
        .regceb(\gen_fwft.ram_regout_en ),
        .rsta(1'b0),
        .rstb(rd_rst_busy),
        .sbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ),
        .sbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ),
        .sleep(sleep),
        .wea(wr_pntr_plus1_pf_carry),
        .web(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair290" *) 
  LUT3 #(
    .INIT(8'h2C)) 
    \gen_sdpram.xpm_memory_base_inst_i_3 
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .O(\gen_fwft.ram_regout_en ));
  FDRE #(
    .INIT(1'b0)) 
    \gof.overflow_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(overflow_i0),
        .Q(overflow),
        .R(1'b0));
  FDRE \grdc.rd_data_count_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q(rd_data_count[0]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(rd_data_count[1]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [3]),
        .Q(rd_data_count[2]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [4]),
        .Q(rd_data_count[3]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [5]),
        .Q(rd_data_count[4]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [6]),
        .Q(rd_data_count[5]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [7]),
        .Q(rd_data_count[6]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [8]),
        .Q(rd_data_count[7]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[9] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [9]),
        .Q(rd_data_count[8]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \guf.underflow_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(underflow_i0),
        .Q(underflow),
        .R(1'b0));
  FDRE \gwdc.wr_data_count_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [1]),
        .Q(wr_data_count[0]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [2]),
        .Q(wr_data_count[1]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [3]),
        .Q(wr_data_count[2]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [4]),
        .Q(wr_data_count[3]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [5]),
        .Q(wr_data_count[4]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [6]),
        .Q(wr_data_count[5]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [7]),
        .Q(wr_data_count[6]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [8]),
        .Q(wr_data_count[7]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[9] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [9]),
        .Q(wr_data_count[8]),
        .R(wrst_busy));
  zynq_bd_C2C2_0_xpm_counter_updn__parameterized3_10 rdp_inst
       (.D(\grdc.diff_wr_rd_pntr_rdc ),
        .DI({\gen_cdc_pntr.wpr_gray_reg_dc_n_0 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_1 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_2 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_5 ,\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .Q({rdp_inst_n_0,rd_pntr_ext}),
        .S(\gen_cdc_pntr.wpr_gray_reg_dc_n_16 ),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\count_value_i_reg[1]_0 (rdp_inst_n_21),
        .\count_value_i_reg[7]_0 ({rdp_inst_n_31,rdp_inst_n_32,rdp_inst_n_33,rdp_inst_n_34,rdp_inst_n_35,rdp_inst_n_36,rdp_inst_n_37,rdp_inst_n_38}),
        .\count_value_i_reg[9]_0 (rd_rst_busy),
        .\gen_pf_ic_rc.ram_empty_i_reg ({\gen_cdc_pntr.wpr_gray_reg_n_0 ,\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .\grdc.rd_data_count_i_reg[7] (count_value_i),
        .\grdc.rd_data_count_i_reg[9] (\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ),
        .\grdc.rd_data_count_i_reg[9]_0 ({\gen_cdc_pntr.wpr_gray_reg_dc_n_6 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_7 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 }),
        .ram_empty_i(ram_empty_i),
        .ram_rd_en_i(ram_rd_en_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[7] (rdp_inst_n_11),
        .src_in_bin(src_in_bin00_out[9:1]));
  zynq_bd_C2C2_0_xpm_counter_updn__parameterized4_11 rdpp1_inst
       (.E(ram_rd_en_i),
        .Q(curr_fwft_state),
        .\count_value_i_reg[0]_0 (rd_rst_busy),
        .\gen_pf_ic_rc.ram_empty_i_reg (rdp_inst_n_21),
        .\gen_pf_ic_rc.ram_empty_i_reg_0 (rdp_inst_n_11),
        .\gen_pf_ic_rc.ram_empty_i_reg_1 ({\gen_cdc_pntr.wpr_gray_reg_n_0 ,\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .ram_empty_i(ram_empty_i),
        .ram_empty_i0(ram_empty_i0),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  zynq_bd_C2C2_0_xpm_fifo_reg_bit_12 rst_d1_inst
       (.Q(diff_pntr_pf_q),
        .clr_full(clr_full),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] (rst_d1_inst_n_1),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg (full),
        .overflow_i0(overflow_i0),
        .prog_full(prog_full),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_counter_updn__parameterized3_13 wrp_inst
       (.D(\gwdc.diff_wr_rd_pntr1_out ),
        .Q(wr_pntr_ext),
        .\count_value_i_reg[5]_0 (full),
        .\gwdc.wr_data_count_i_reg[9] ({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_9 }),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_counter_updn__parameterized4_14 wrpp1_inst
       (.D(diff_pntr_pf_q0),
        .Q(wr_pntr_plus1_pf),
        .\count_value_i_reg[5]_0 (full),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] (rd_pntr_wr),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_counter_updn__parameterized5_15 wrpp2_inst
       (.Q({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7,wrpp2_inst_n_8}),
        .\count_value_i_reg[5]_0 (full),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_fifo_rst__xdcDup__4 xpm_fifo_rst_inst
       (.\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] (\grdc.rd_data_count_i0 ),
        .Q(curr_fwft_state),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[8] (full),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_0 (rd_rst_busy),
        .\guf.underflow_i_reg (empty),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .rst_d1(rst_d1),
        .underflow_i0(underflow_i0),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wr_rst_busy(wr_rst_busy),
        .wrst_busy(wrst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_DEST_SYNC_FF = "3" *) (* COMMON_CLOCK = "0" *) 
(* DOUT_RESET_VALUE = "0" *) (* ECC_MODE = "0" *) (* ENABLE_ECC = "0" *) 
(* EN_ADV_FEATURE = "16'b0000011100000111" *) (* EN_AE = "1'b0" *) (* EN_AF = "1'b0" *) 
(* EN_DVLD = "1'b0" *) (* EN_OF = "1'b1" *) (* EN_PE = "1'b1" *) 
(* EN_PF = "1'b1" *) (* EN_RDC = "1'b1" *) (* EN_UF = "1'b1" *) 
(* EN_WACK = "1'b0" *) (* EN_WDC = "1'b1" *) (* FG_EQ_ASYM_DOUT = "1'b0" *) 
(* FIFO_MEMORY_TYPE = "1" *) (* FIFO_MEM_TYPE = "1" *) (* FIFO_READ_DEPTH = "256" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_SIZE = "768" *) (* FIFO_WRITE_DEPTH = "256" *) 
(* FULL_RESET_VALUE = "1" *) (* FULL_RST_VAL = "1'b1" *) (* ORIG_REF_NAME = "xpm_fifo_base" *) 
(* PE_THRESH_ADJ = "8" *) (* PE_THRESH_MAX = "251" *) (* PE_THRESH_MIN = "5" *) 
(* PF_THRESH_ADJ = "126" *) (* PF_THRESH_MAX = "251" *) (* PF_THRESH_MIN = "8" *) 
(* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "128" *) (* RD_DATA_COUNT_WIDTH = "8" *) 
(* RD_DC_WIDTH_EXT = "9" *) (* RD_LATENCY = "2" *) (* RD_MODE = "1" *) 
(* RD_PNTR_WIDTH = "8" *) (* READ_DATA_WIDTH = "3" *) (* READ_MODE = "1" *) 
(* READ_MODE_LL = "1" *) (* RELATED_CLOCKS = "0" *) (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WIDTH_RATIO = "1" *) (* WRITE_DATA_WIDTH = "3" *) 
(* WR_DATA_COUNT_WIDTH = "8" *) (* WR_DC_WIDTH_EXT = "9" *) (* WR_DEPTH_LOG = "8" *) 
(* WR_PNTR_WIDTH = "8" *) (* WR_RD_RATIO = "0" *) (* WR_WIDTH_LOG = "2" *) 
(* XPM_MODULE = "TRUE" *) (* both_stages_valid = "3" *) (* invalid = "0" *) 
(* keep_hierarchy = "soft" *) (* stage1_valid = "2" *) (* stage2_valid = "1" *) 
module zynq_bd_C2C2_0_xpm_fifo_base__parameterized2
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    full_n,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [2:0]din;
  output full;
  output full_n;
  output prog_full;
  output [7:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [2:0]dout;
  output empty;
  output prog_empty;
  output [7:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [1:0]count_value_i;
  wire [1:0]curr_fwft_state;
  wire [7:0]diff_pntr_pe;
  wire [8:2]diff_pntr_pf_q;
  wire [8:2]diff_pntr_pf_q0;
  wire [2:0]din;
  wire [2:0]dout;
  wire empty;
  wire empty_fwft_i0;
  wire full;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_0 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_7 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_10 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_11 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_12 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_13 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_14 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_15 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_16 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_9 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_7 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_8 ;
  wire \gen_fwft.count_rst ;
  wire \gen_fwft.ram_regout_en ;
  wire \gen_fwft.rdpp1_inst_n_3 ;
  wire \gen_fwft.rdpp1_inst_n_4 ;
  wire \gen_fwft.rdpp1_inst_n_5 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ;
  wire [8:1]\grdc.diff_wr_rd_pntr_rdc ;
  wire \grdc.rd_data_count_i0 ;
  wire [8:1]\gwdc.diff_wr_rd_pntr1_out ;
  wire [1:0]next_fwft_state__0;
  wire overflow;
  wire overflow_i0;
  wire prog_empty;
  wire prog_full;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire [7:0]rd_data_count;
  wire rd_en;
  wire [7:0]rd_pntr_ext;
  wire [7:0]rd_pntr_wr;
  wire [7:0]rd_pntr_wr_cdc;
  wire [8:0]rd_pntr_wr_cdc_dc;
  wire rd_rst_busy;
  wire rdp_inst_n_10;
  wire rdp_inst_n_19;
  wire rdp_inst_n_20;
  wire rdp_inst_n_21;
  wire rdp_inst_n_22;
  wire rdp_inst_n_23;
  wire rdp_inst_n_24;
  wire rdp_inst_n_25;
  wire rdp_inst_n_26;
  wire rdp_inst_n_27;
  wire rdp_inst_n_28;
  wire rdp_inst_n_29;
  wire rdp_inst_n_30;
  wire rdp_inst_n_31;
  wire rdp_inst_n_8;
  wire rdp_inst_n_9;
  wire rdpp1_inst_n_0;
  wire rdpp1_inst_n_1;
  wire rdpp1_inst_n_2;
  wire rdpp1_inst_n_3;
  wire rdpp1_inst_n_4;
  wire rdpp1_inst_n_5;
  wire rdpp1_inst_n_6;
  wire rdpp1_inst_n_7;
  wire rst;
  wire rst_d1;
  wire rst_d1_inst_n_1;
  wire sleep;
  wire [1:1]src_in_bin00_out;
  wire underflow;
  wire underflow_i0;
  wire wr_clk;
  wire [7:0]wr_data_count;
  wire wr_en;
  wire [8:0]wr_pntr_ext;
  wire [8:1]wr_pntr_plus1_pf;
  wire wr_pntr_plus1_pf_carry;
  wire [7:0]wr_pntr_rd_cdc;
  wire [8:0]wr_pntr_rd_cdc_dc;
  wire wr_rst_busy;
  wire wrpp2_inst_n_0;
  wire wrpp2_inst_n_1;
  wire wrpp2_inst_n_2;
  wire wrpp2_inst_n_3;
  wire wrpp2_inst_n_4;
  wire wrpp2_inst_n_5;
  wire wrpp2_inst_n_6;
  wire wrpp2_inst_n_7;
  wire wrst_busy;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ;
  wire [2:0]\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign full_n = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  (* SOFT_HLUTNM = "soft_lutpair238" *) 
  LUT4 #(
    .INIT(16'h6A85)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[0]_i_1 
       (.I0(curr_fwft_state[0]),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(ram_empty_i),
        .O(next_fwft_state__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair238" *) 
  LUT4 #(
    .INIT(16'h3FF0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[1]_i_1 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(curr_fwft_state[0]),
        .O(next_fwft_state__0[1]));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[0]),
        .Q(curr_fwft_state[0]),
        .R(rd_rst_busy));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[1]),
        .Q(curr_fwft_state[1]),
        .R(rd_rst_busy));
  GND GND
       (.G(\<const0> ));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_gray__parameterized1 \gen_cdc_pntr.rd_pntr_cdc_dc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc_dc),
        .src_clk(rd_clk),
        .src_in_bin({rdp_inst_n_24,rdp_inst_n_25,rdp_inst_n_26,rdp_inst_n_27,rdp_inst_n_28,rdp_inst_n_29,rdp_inst_n_30,src_in_bin00_out,rdp_inst_n_31}));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "8" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_gray \gen_cdc_pntr.rd_pntr_cdc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc),
        .src_clk(rd_clk),
        .src_in_bin(rd_pntr_ext));
  zynq_bd_C2C2_0_xpm_fifo_reg_vec \gen_cdc_pntr.rpw_gray_reg 
       (.D(rd_pntr_wr_cdc),
        .Q(wr_pntr_plus1_pf),
        .d_out_int_reg(\gen_cdc_pntr.rpw_gray_reg_n_8 ),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7}),
        .\reg_out_i_reg[7]_0 (rd_pntr_wr),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized0_18 \gen_cdc_pntr.rpw_gray_reg_dc 
       (.D(rd_pntr_wr_cdc_dc),
        .Q({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 }),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_fifo_reg_vec_19 \gen_cdc_pntr.wpr_gray_reg 
       (.D(wr_pntr_rd_cdc),
        .Q(curr_fwft_state),
        .\gen_pf_ic_rc.ram_empty_i_reg (rd_pntr_ext),
        .\gen_pf_ic_rc.ram_empty_i_reg_0 ({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3,rdpp1_inst_n_4,rdpp1_inst_n_5,rdpp1_inst_n_6,rdpp1_inst_n_7}),
        .ram_empty_i(ram_empty_i),
        .ram_empty_i0(ram_empty_i0),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[0]_0 (rd_rst_busy),
        .\reg_out_i_reg[7]_0 ({\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }));
  zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized0_20 \gen_cdc_pntr.wpr_gray_reg_dc 
       (.D(\grdc.diff_wr_rd_pntr_rdc ),
        .DI({rdp_inst_n_9,\gen_fwft.rdpp1_inst_n_5 }),
        .Q({\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_16 }),
        .S({rdp_inst_n_19,rdp_inst_n_20,rdp_inst_n_21,rdp_inst_n_22,rdp_inst_n_23,\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .\grdc.rd_data_count_i_reg[7] (count_value_i[1]),
        .\grdc.rd_data_count_i_reg[7]_0 (rd_pntr_ext[6:1]),
        .\grdc.rd_data_count_i_reg[8] (rdp_inst_n_10),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[8]_0 (rd_rst_busy),
        .\reg_out_i_reg[8]_1 (wr_pntr_rd_cdc_dc));
  (* DEST_SYNC_FF = "5" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_gray__parameterized0 \gen_cdc_pntr.wr_pntr_cdc_dc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc_dc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "8" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_gray__10 \gen_cdc_pntr.wr_pntr_cdc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext[7:0]));
  (* SOFT_HLUTNM = "soft_lutpair237" *) 
  LUT4 #(
    .INIT(16'hF380)) 
    \gen_fwft.empty_fwft_i_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .I3(empty),
        .O(empty_fwft_i0));
  FDSE #(
    .INIT(1'b1)) 
    \gen_fwft.empty_fwft_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .Q(empty),
        .S(rd_rst_busy));
  zynq_bd_C2C2_0_xpm_counter_updn_21 \gen_fwft.rdpp1_inst 
       (.DI(\gen_fwft.rdpp1_inst_n_5 ),
        .Q(count_value_i),
        .S({\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\grdc.rd_data_count_i_reg[7] (rd_pntr_ext[1:0]),
        .\grdc.rd_data_count_i_reg[7]_0 ({\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_16 }),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .src_in_bin(src_in_bin00_out));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_cdc_pntr.rpw_gray_reg_n_8 ),
        .Q(full),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[0]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[1]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[2]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[3]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[4]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[5]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[6]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[7]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .R(rd_rst_busy));
  LUT4 #(
    .INIT(16'h88B8)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1 
       (.I0(prog_empty),
        .I1(empty),
        .I2(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h01FF)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ),
        .Q(prog_empty),
        .S(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[2]),
        .Q(diff_pntr_pf_q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[3]),
        .Q(diff_pntr_pf_q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[4]),
        .Q(diff_pntr_pf_q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[5]),
        .Q(diff_pntr_pf_q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[6]),
        .Q(diff_pntr_pf_q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[7]),
        .Q(diff_pntr_pf_q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[8]),
        .Q(diff_pntr_pf_q[8]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1_inst_n_1),
        .Q(prog_full),
        .S(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.ram_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i0),
        .Q(ram_empty_i),
        .S(rd_rst_busy));
  (* ADDR_WIDTH_A = "8" *) 
  (* ADDR_WIDTH_B = "8" *) 
  (* AUTO_SLEEP_TIME = "0" *) 
  (* BYTE_WRITE_WIDTH_A = "3" *) 
  (* BYTE_WRITE_WIDTH_B = "3" *) 
  (* CASCADE_HEIGHT = "0" *) 
  (* CLOCKING_MODE = "1" *) 
  (* ECC_BIT_RANGE = "[7:0]" *) 
  (* ECC_MODE = "0" *) 
  (* ECC_TYPE = "NONE" *) 
  (* IGNORE_INIT_SYNTH = "0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* MAX_NUM_CHAR = "0" *) 
  (* MEMORY_INIT_FILE = "none" *) 
  (* MEMORY_INIT_PARAM = "" *) 
  (* MEMORY_OPTIMIZATION = "true" *) 
  (* MEMORY_PRIMITIVE = "1" *) 
  (* MEMORY_SIZE = "768" *) 
  (* MEMORY_TYPE = "1" *) 
  (* MESSAGE_CONTROL = "0" *) 
  (* NUM_CHAR_LOC = "0" *) 
  (* P_ECC_MODE = "no_ecc" *) 
  (* P_ENABLE_BYTE_WRITE_A = "0" *) 
  (* P_ENABLE_BYTE_WRITE_B = "0" *) 
  (* P_MAX_DEPTH_DATA = "256" *) 
  (* P_MEMORY_OPT = "yes" *) 
  (* P_MEMORY_PRIMITIVE = "distributed" *) 
  (* P_MIN_WIDTH_DATA = "3" *) 
  (* P_MIN_WIDTH_DATA_A = "3" *) 
  (* P_MIN_WIDTH_DATA_B = "3" *) 
  (* P_MIN_WIDTH_DATA_ECC = "3" *) 
  (* P_MIN_WIDTH_DATA_LDW = "3" *) 
  (* P_MIN_WIDTH_DATA_SHFT = "5" *) 
  (* P_NUM_COLS_WRITE_A = "1" *) 
  (* P_NUM_COLS_WRITE_B = "1" *) 
  (* P_NUM_ROWS_READ_A = "1" *) 
  (* P_NUM_ROWS_READ_B = "1" *) 
  (* P_NUM_ROWS_WRITE_A = "1" *) 
  (* P_NUM_ROWS_WRITE_B = "1" *) 
  (* P_SDP_WRITE_MODE = "yes" *) 
  (* P_WIDTH_ADDR_LSB_READ_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) 
  (* P_WIDTH_ADDR_READ_A = "8" *) 
  (* P_WIDTH_ADDR_READ_B = "8" *) 
  (* P_WIDTH_ADDR_WRITE_A = "8" *) 
  (* P_WIDTH_ADDR_WRITE_B = "8" *) 
  (* P_WIDTH_COL_WRITE_A = "3" *) 
  (* P_WIDTH_COL_WRITE_B = "3" *) 
  (* RAM_DECOMP = "auto" *) 
  (* READ_DATA_WIDTH_A = "3" *) 
  (* READ_DATA_WIDTH_B = "3" *) 
  (* READ_LATENCY_A = "2" *) 
  (* READ_LATENCY_B = "2" *) 
  (* READ_RESET_VALUE_A = "0" *) 
  (* READ_RESET_VALUE_B = "0" *) 
  (* RST_MODE_A = "SYNC" *) 
  (* RST_MODE_B = "SYNC" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_EMBEDDED_CONSTRAINT = "1" *) 
  (* USE_MEM_INIT = "0" *) 
  (* USE_MEM_INIT_MMI = "0" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH_A = "3" *) 
  (* WRITE_DATA_WIDTH_B = "3" *) 
  (* WRITE_MODE_A = "2" *) 
  (* WRITE_MODE_B = "1" *) 
  (* WRITE_PROTECT = "1" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* rsta_loop_iter = "4" *) 
  (* rstb_loop_iter = "4" *) 
  zynq_bd_C2C2_0_xpm_memory_base__parameterized2 \gen_sdpram.xpm_memory_base_inst 
       (.addra(wr_pntr_ext[7:0]),
        .addrb(rd_pntr_ext),
        .clka(wr_clk),
        .clkb(rd_clk),
        .dbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ),
        .dbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ),
        .dina(din),
        .dinb({1'b0,1'b0,1'b0}),
        .douta(\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED [2:0]),
        .doutb(dout),
        .ena(wr_pntr_plus1_pf_carry),
        .enb(rdp_inst_n_8),
        .injectdbiterra(1'b0),
        .injectdbiterrb(1'b0),
        .injectsbiterra(1'b0),
        .injectsbiterrb(1'b0),
        .regcea(1'b0),
        .regceb(\gen_fwft.ram_regout_en ),
        .rsta(1'b0),
        .rstb(rd_rst_busy),
        .sbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ),
        .sbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ),
        .sleep(sleep),
        .wea(1'b0),
        .web(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair237" *) 
  LUT3 #(
    .INIT(8'h62)) 
    \gen_sdpram.xpm_memory_base_inst_i_3 
       (.I0(curr_fwft_state[0]),
        .I1(curr_fwft_state[1]),
        .I2(rd_en),
        .O(\gen_fwft.ram_regout_en ));
  FDRE #(
    .INIT(1'b0)) 
    \gof.overflow_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(overflow_i0),
        .Q(overflow),
        .R(1'b0));
  FDRE \grdc.rd_data_count_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q(rd_data_count[0]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(rd_data_count[1]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [3]),
        .Q(rd_data_count[2]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [4]),
        .Q(rd_data_count[3]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [5]),
        .Q(rd_data_count[4]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [6]),
        .Q(rd_data_count[5]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [7]),
        .Q(rd_data_count[6]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [8]),
        .Q(rd_data_count[7]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \guf.underflow_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(underflow_i0),
        .Q(underflow),
        .R(1'b0));
  FDRE \gwdc.wr_data_count_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [1]),
        .Q(wr_data_count[0]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [2]),
        .Q(wr_data_count[1]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [3]),
        .Q(wr_data_count[2]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [4]),
        .Q(wr_data_count[3]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [5]),
        .Q(wr_data_count[4]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [6]),
        .Q(wr_data_count[5]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [7]),
        .Q(wr_data_count[6]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [8]),
        .Q(wr_data_count[7]),
        .R(wrst_busy));
  zynq_bd_C2C2_0_xpm_counter_updn__parameterized0 rdp_inst
       (.D(diff_pntr_pe),
        .DI(rdp_inst_n_9),
        .Q(rd_pntr_ext),
        .S({rdp_inst_n_19,rdp_inst_n_20,rdp_inst_n_21,rdp_inst_n_22,rdp_inst_n_23}),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\count_value_i_reg[7]_0 (rdp_inst_n_10),
        .\count_value_i_reg[8]_0 (rd_rst_busy),
        .enb(rdp_inst_n_8),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ({\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .\grdc.rd_data_count_i_reg[7] (count_value_i),
        .\grdc.rd_data_count_i_reg[8] ({\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_15 }),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .src_in_bin({rdp_inst_n_24,rdp_inst_n_25,rdp_inst_n_26,rdp_inst_n_27,rdp_inst_n_28,rdp_inst_n_29,rdp_inst_n_30,rdp_inst_n_31}));
  zynq_bd_C2C2_0_xpm_counter_updn__parameterized1 rdpp1_inst
       (.E(rdp_inst_n_8),
        .Q({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3,rdpp1_inst_n_4,rdpp1_inst_n_5,rdpp1_inst_n_6,rdpp1_inst_n_7}),
        .\count_value_i_reg[0]_0 (rd_rst_busy),
        .\count_value_i_reg[1]_0 (curr_fwft_state),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  zynq_bd_C2C2_0_xpm_fifo_reg_bit_22 rst_d1_inst
       (.Q(diff_pntr_pf_q),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] (rst_d1_inst_n_1),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg (full),
        .overflow_i0(overflow_i0),
        .prog_full(prog_full),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_counter_updn__parameterized0_23 wrp_inst
       (.D(\gwdc.diff_wr_rd_pntr1_out ),
        .Q(wr_pntr_ext),
        .\count_value_i_reg[6]_0 (full),
        .\gwdc.wr_data_count_i_reg[8] ({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 }),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_counter_updn__parameterized1_24 wrpp1_inst
       (.D(diff_pntr_pf_q0),
        .Q(wr_pntr_plus1_pf),
        .\count_value_i_reg[6]_0 (full),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] (rd_pntr_wr),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_counter_updn__parameterized2 wrpp2_inst
       (.Q({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7}),
        .\count_value_i_reg[6]_0 (full),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_fifo_rst__xdcDup__5 xpm_fifo_rst_inst
       (.Q(curr_fwft_state),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[7] (full),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_0 (rd_rst_busy),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_1 (\grdc.rd_data_count_i0 ),
        .\guf.underflow_i_reg (empty),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .rst_d1(rst_d1),
        .underflow_i0(underflow_i0),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wr_rst_busy(wr_rst_busy),
        .wrst_busy(wrst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_DEST_SYNC_FF = "3" *) (* COMMON_CLOCK = "0" *) 
(* DOUT_RESET_VALUE = "0" *) (* ECC_MODE = "0" *) (* ENABLE_ECC = "0" *) 
(* EN_ADV_FEATURE = "16'b0000011100000111" *) (* EN_AE = "1'b0" *) (* EN_AF = "1'b0" *) 
(* EN_DVLD = "1'b0" *) (* EN_OF = "1'b1" *) (* EN_PE = "1'b1" *) 
(* EN_PF = "1'b1" *) (* EN_RDC = "1'b1" *) (* EN_UF = "1'b1" *) 
(* EN_WACK = "1'b0" *) (* EN_WDC = "1'b1" *) (* FG_EQ_ASYM_DOUT = "1'b0" *) 
(* FIFO_MEMORY_TYPE = "1" *) (* FIFO_MEM_TYPE = "1" *) (* FIFO_READ_DEPTH = "16" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_SIZE = "320" *) (* FIFO_WRITE_DEPTH = "16" *) 
(* FULL_RESET_VALUE = "1" *) (* FULL_RST_VAL = "1'b1" *) (* ORIG_REF_NAME = "xpm_fifo_base" *) 
(* PE_THRESH_ADJ = "8" *) (* PE_THRESH_MAX = "11" *) (* PE_THRESH_MIN = "5" *) 
(* PF_THRESH_ADJ = "9" *) (* PF_THRESH_MAX = "11" *) (* PF_THRESH_MIN = "8" *) 
(* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "11" *) (* RD_DATA_COUNT_WIDTH = "4" *) 
(* RD_DC_WIDTH_EXT = "5" *) (* RD_LATENCY = "2" *) (* RD_MODE = "1" *) 
(* RD_PNTR_WIDTH = "4" *) (* READ_DATA_WIDTH = "20" *) (* READ_MODE = "1" *) 
(* READ_MODE_LL = "1" *) (* RELATED_CLOCKS = "0" *) (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WIDTH_RATIO = "1" *) (* WRITE_DATA_WIDTH = "20" *) 
(* WR_DATA_COUNT_WIDTH = "4" *) (* WR_DC_WIDTH_EXT = "5" *) (* WR_DEPTH_LOG = "4" *) 
(* WR_PNTR_WIDTH = "4" *) (* WR_RD_RATIO = "0" *) (* WR_WIDTH_LOG = "5" *) 
(* XPM_MODULE = "TRUE" *) (* both_stages_valid = "3" *) (* invalid = "0" *) 
(* keep_hierarchy = "soft" *) (* stage1_valid = "2" *) (* stage2_valid = "1" *) 
module zynq_bd_C2C2_0_xpm_fifo_base__parameterized3
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    full_n,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [19:0]din;
  output full;
  output full_n;
  output prog_full;
  output [3:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [19:0]dout;
  output empty;
  output prog_empty;
  output [3:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire clr_full;
  wire [1:0]count_value_i;
  wire [1:0]curr_fwft_state;
  wire [3:0]diff_pntr_pe;
  wire [4:1]diff_pntr_pf_q;
  wire [4:1]diff_pntr_pf_q0;
  wire [19:0]din;
  wire [19:0]dout;
  wire empty;
  wire empty_fwft_i0;
  wire full;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_5 ;
  wire \gen_fwft.count_rst ;
  wire \gen_fwft.ram_regout_en ;
  wire \gen_fwft.rdpp1_inst_n_3 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ;
  wire [4:1]\grdc.diff_wr_rd_pntr_rdc ;
  wire \grdc.rd_data_count_i0 ;
  wire [4:1]\gwdc.diff_wr_rd_pntr1_out ;
  wire [1:0]next_fwft_state__0;
  wire overflow;
  wire overflow_i0;
  wire prog_empty;
  wire prog_full;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire [3:0]rd_data_count;
  wire rd_en;
  wire [3:0]rd_pntr_ext;
  wire [3:0]rd_pntr_wr;
  wire [3:0]rd_pntr_wr_cdc;
  wire [4:0]rd_pntr_wr_cdc_dc;
  wire rd_rst_busy;
  wire rdp_inst_n_10;
  wire rdp_inst_n_11;
  wire rdp_inst_n_12;
  wire rdp_inst_n_8;
  wire rdp_inst_n_9;
  wire rdpp1_inst_n_0;
  wire rdpp1_inst_n_1;
  wire rdpp1_inst_n_2;
  wire rdpp1_inst_n_3;
  wire rst;
  wire rst_d1;
  wire rst_d1_inst_n_1;
  wire sleep;
  wire [1:1]src_in_bin00_out;
  wire underflow;
  wire underflow_i0;
  wire wr_clk;
  wire [3:0]wr_data_count;
  wire wr_en;
  wire [4:0]wr_pntr_ext;
  wire [3:1]wr_pntr_plus1_pf;
  wire wr_pntr_plus1_pf_carry;
  wire [3:0]wr_pntr_rd_cdc;
  wire [4:0]wr_pntr_rd_cdc_dc;
  wire wr_rst_busy;
  wire wrpp1_inst_n_4;
  wire wrpp2_inst_n_0;
  wire wrpp2_inst_n_1;
  wire wrpp2_inst_n_2;
  wire wrpp2_inst_n_3;
  wire wrst_busy;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ;
  wire [19:0]\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign full_n = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT4 #(
    .INIT(16'h6A85)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[0]_i_1 
       (.I0(curr_fwft_state[0]),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(ram_empty_i),
        .O(next_fwft_state__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT4 #(
    .INIT(16'h3FF0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[1]_i_1 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(curr_fwft_state[0]),
        .O(next_fwft_state__0[1]));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[0]),
        .Q(curr_fwft_state[0]),
        .R(rd_rst_busy));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[1]),
        .Q(curr_fwft_state[1]),
        .R(rd_rst_busy));
  GND GND
       (.G(\<const0> ));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "5" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_gray__parameterized6 \gen_cdc_pntr.rd_pntr_cdc_dc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc_dc),
        .src_clk(rd_clk),
        .src_in_bin({rdp_inst_n_9,rdp_inst_n_10,rdp_inst_n_11,src_in_bin00_out,rdp_inst_n_12}));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "4" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_gray__parameterized4 \gen_cdc_pntr.rd_pntr_cdc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc),
        .src_clk(rd_clk),
        .src_in_bin(rd_pntr_ext));
  zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized2_54 \gen_cdc_pntr.rpw_gray_reg 
       (.D(diff_pntr_pf_q0[4:3]),
        .E(wr_pntr_plus1_pf_carry),
        .Q({rd_pntr_wr[3],rd_pntr_wr[1:0]}),
        .clr_full(clr_full),
        .\count_value_i_reg[3] (\gen_cdc_pntr.rpw_gray_reg_n_5 ),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ({wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3}),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_0 (wrpp2_inst_n_0),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] (full),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] (wr_pntr_plus1_pf),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 (wrpp1_inst_n_4),
        .\reg_out_i_reg[3]_0 (rd_pntr_wr_cdc),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized3_55 \gen_cdc_pntr.rpw_gray_reg_dc 
       (.D({\gwdc.diff_wr_rd_pntr1_out [4:3],\gwdc.diff_wr_rd_pntr1_out [1]}),
        .Q({\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 }),
        .\gwdc.wr_data_count_i_reg[4] (wr_pntr_ext),
        .\reg_out_i_reg[4]_0 (rd_pntr_wr_cdc_dc),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized2_56 \gen_cdc_pntr.wpr_gray_reg 
       (.D(diff_pntr_pe[1:0]),
        .Q({\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 }),
        .enb(rdp_inst_n_8),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] (curr_fwft_state),
        .\gen_pf_ic_rc.ram_empty_i_reg (rd_pntr_ext),
        .\gen_pf_ic_rc.ram_empty_i_reg_0 ({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3}),
        .ram_empty_i(ram_empty_i),
        .ram_empty_i0(ram_empty_i0),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[0]_0 (rd_rst_busy),
        .\reg_out_i_reg[3]_0 (wr_pntr_rd_cdc));
  zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized3_57 \gen_cdc_pntr.wpr_gray_reg_dc 
       (.D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q({\gen_cdc_pntr.wpr_gray_reg_dc_n_1 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_2 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_5 }),
        .\grdc.rd_data_count_i_reg[1] (count_value_i),
        .\grdc.rd_data_count_i_reg[4] ({rd_pntr_ext[3],rd_pntr_ext[1:0]}),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[3]_0 (\gen_cdc_pntr.wpr_gray_reg_dc_n_6 ),
        .\reg_out_i_reg[4]_0 (rd_rst_busy),
        .\reg_out_i_reg[4]_1 (wr_pntr_rd_cdc_dc));
  (* DEST_SYNC_FF = "5" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "5" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_gray__parameterized5 \gen_cdc_pntr.wr_pntr_cdc_dc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc_dc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "4" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_gray__parameterized4__6 \gen_cdc_pntr.wr_pntr_cdc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext[3:0]));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT4 #(
    .INIT(16'hF380)) 
    \gen_fwft.empty_fwft_i_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .I3(empty),
        .O(empty_fwft_i0));
  FDSE #(
    .INIT(1'b1)) 
    \gen_fwft.empty_fwft_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .Q(empty),
        .S(rd_rst_busy));
  zynq_bd_C2C2_0_xpm_counter_updn_58 \gen_fwft.rdpp1_inst 
       (.D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(count_value_i),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[1]_0 (\gen_fwft.rdpp1_inst_n_3 ),
        .\count_value_i_reg[1]_1 (curr_fwft_state),
        .\grdc.rd_data_count_i_reg[2] ({\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_5 }),
        .\grdc.rd_data_count_i_reg[2]_0 (rd_pntr_ext[2:0]),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .src_in_bin(src_in_bin00_out));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_cdc_pntr.rpw_gray_reg_n_5 ),
        .Q(full),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[0]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[1]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[2]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[3]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .R(rd_rst_busy));
  LUT6 #(
    .INIT(64'h8888888BBBBBBBBB)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1 
       (.I0(prog_empty),
        .I1(empty),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .I4(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .I5(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ),
        .Q(prog_empty),
        .S(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[1]),
        .Q(diff_pntr_pf_q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[2]),
        .Q(diff_pntr_pf_q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[3]),
        .Q(diff_pntr_pf_q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[4]),
        .Q(diff_pntr_pf_q[4]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1_inst_n_1),
        .Q(prog_full),
        .S(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.ram_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i0),
        .Q(ram_empty_i),
        .S(rd_rst_busy));
  (* ADDR_WIDTH_A = "4" *) 
  (* ADDR_WIDTH_B = "4" *) 
  (* AUTO_SLEEP_TIME = "0" *) 
  (* BYTE_WRITE_WIDTH_A = "20" *) 
  (* BYTE_WRITE_WIDTH_B = "20" *) 
  (* CASCADE_HEIGHT = "0" *) 
  (* CLOCKING_MODE = "1" *) 
  (* ECC_BIT_RANGE = "[7:0]" *) 
  (* ECC_MODE = "0" *) 
  (* ECC_TYPE = "NONE" *) 
  (* IGNORE_INIT_SYNTH = "0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* MAX_NUM_CHAR = "0" *) 
  (* MEMORY_INIT_FILE = "none" *) 
  (* MEMORY_INIT_PARAM = "" *) 
  (* MEMORY_OPTIMIZATION = "true" *) 
  (* MEMORY_PRIMITIVE = "1" *) 
  (* MEMORY_SIZE = "320" *) 
  (* MEMORY_TYPE = "1" *) 
  (* MESSAGE_CONTROL = "0" *) 
  (* NUM_CHAR_LOC = "0" *) 
  (* P_ECC_MODE = "no_ecc" *) 
  (* P_ENABLE_BYTE_WRITE_A = "0" *) 
  (* P_ENABLE_BYTE_WRITE_B = "0" *) 
  (* P_MAX_DEPTH_DATA = "16" *) 
  (* P_MEMORY_OPT = "yes" *) 
  (* P_MEMORY_PRIMITIVE = "distributed" *) 
  (* P_MIN_WIDTH_DATA = "20" *) 
  (* P_MIN_WIDTH_DATA_A = "20" *) 
  (* P_MIN_WIDTH_DATA_B = "20" *) 
  (* P_MIN_WIDTH_DATA_ECC = "20" *) 
  (* P_MIN_WIDTH_DATA_LDW = "4" *) 
  (* P_MIN_WIDTH_DATA_SHFT = "20" *) 
  (* P_NUM_COLS_WRITE_A = "1" *) 
  (* P_NUM_COLS_WRITE_B = "1" *) 
  (* P_NUM_ROWS_READ_A = "1" *) 
  (* P_NUM_ROWS_READ_B = "1" *) 
  (* P_NUM_ROWS_WRITE_A = "1" *) 
  (* P_NUM_ROWS_WRITE_B = "1" *) 
  (* P_SDP_WRITE_MODE = "yes" *) 
  (* P_WIDTH_ADDR_LSB_READ_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) 
  (* P_WIDTH_ADDR_READ_A = "4" *) 
  (* P_WIDTH_ADDR_READ_B = "4" *) 
  (* P_WIDTH_ADDR_WRITE_A = "4" *) 
  (* P_WIDTH_ADDR_WRITE_B = "4" *) 
  (* P_WIDTH_COL_WRITE_A = "20" *) 
  (* P_WIDTH_COL_WRITE_B = "20" *) 
  (* RAM_DECOMP = "auto" *) 
  (* READ_DATA_WIDTH_A = "20" *) 
  (* READ_DATA_WIDTH_B = "20" *) 
  (* READ_LATENCY_A = "2" *) 
  (* READ_LATENCY_B = "2" *) 
  (* READ_RESET_VALUE_A = "0" *) 
  (* READ_RESET_VALUE_B = "0" *) 
  (* RST_MODE_A = "SYNC" *) 
  (* RST_MODE_B = "SYNC" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_EMBEDDED_CONSTRAINT = "1" *) 
  (* USE_MEM_INIT = "0" *) 
  (* USE_MEM_INIT_MMI = "0" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH_A = "20" *) 
  (* WRITE_DATA_WIDTH_B = "20" *) 
  (* WRITE_MODE_A = "2" *) 
  (* WRITE_MODE_B = "1" *) 
  (* WRITE_PROTECT = "1" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* rsta_loop_iter = "20" *) 
  (* rstb_loop_iter = "20" *) 
  zynq_bd_C2C2_0_xpm_memory_base__parameterized3 \gen_sdpram.xpm_memory_base_inst 
       (.addra(wr_pntr_ext[3:0]),
        .addrb(rd_pntr_ext),
        .clka(wr_clk),
        .clkb(rd_clk),
        .dbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ),
        .dbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ),
        .dina(din),
        .dinb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .douta(\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED [19:0]),
        .doutb(dout),
        .ena(wr_pntr_plus1_pf_carry),
        .enb(rdp_inst_n_8),
        .injectdbiterra(1'b0),
        .injectdbiterrb(1'b0),
        .injectsbiterra(1'b0),
        .injectsbiterrb(1'b0),
        .regcea(1'b0),
        .regceb(\gen_fwft.ram_regout_en ),
        .rsta(1'b0),
        .rstb(rd_rst_busy),
        .sbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ),
        .sbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ),
        .sleep(sleep),
        .wea(1'b0),
        .web(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT3 #(
    .INIT(8'h62)) 
    \gen_sdpram.xpm_memory_base_inst_i_3 
       (.I0(curr_fwft_state[0]),
        .I1(curr_fwft_state[1]),
        .I2(rd_en),
        .O(\gen_fwft.ram_regout_en ));
  FDRE #(
    .INIT(1'b0)) 
    \gof.overflow_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(overflow_i0),
        .Q(overflow),
        .R(1'b0));
  FDRE \grdc.rd_data_count_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q(rd_data_count[0]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(rd_data_count[1]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [3]),
        .Q(rd_data_count[2]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [4]),
        .Q(rd_data_count[3]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \guf.underflow_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(underflow_i0),
        .Q(underflow),
        .R(1'b0));
  FDRE \gwdc.wr_data_count_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [1]),
        .Q(wr_data_count[0]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [2]),
        .Q(wr_data_count[1]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [3]),
        .Q(wr_data_count[2]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [4]),
        .Q(wr_data_count[3]),
        .R(wrst_busy));
  zynq_bd_C2C2_0_xpm_counter_updn__parameterized6_59 rdp_inst
       (.D(diff_pntr_pe[3:2]),
        .E(rdp_inst_n_8),
        .Q(rd_pntr_ext),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\count_value_i_reg[4]_0 (rd_rst_busy),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] ({\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 }),
        .\grdc.rd_data_count_i_reg[4] (\gen_fwft.rdpp1_inst_n_3 ),
        .\grdc.rd_data_count_i_reg[4]_0 ({\gen_cdc_pntr.wpr_gray_reg_dc_n_1 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_2 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 }),
        .\grdc.rd_data_count_i_reg[4]_1 (\gen_cdc_pntr.wpr_gray_reg_dc_n_6 ),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[2] (\grdc.diff_wr_rd_pntr_rdc [4:3]),
        .\src_gray_ff_reg[4] (count_value_i),
        .src_in_bin({rdp_inst_n_9,rdp_inst_n_10,rdp_inst_n_11,rdp_inst_n_12}));
  zynq_bd_C2C2_0_xpm_counter_updn__parameterized7_60 rdpp1_inst
       (.E(rdp_inst_n_8),
        .Q({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3}),
        .\count_value_i_reg[0]_0 (rd_rst_busy),
        .\count_value_i_reg[1]_0 (curr_fwft_state),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  zynq_bd_C2C2_0_xpm_fifo_reg_bit_61 rst_d1_inst
       (.D(diff_pntr_pf_q0[1]),
        .Q(diff_pntr_pf_q),
        .clr_full(clr_full),
        .d_out_int_reg_0(rst_d1_inst_n_1),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] (rd_pntr_wr[0]),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1]_0 (wr_pntr_plus1_pf[1]),
        .\gof.overflow_i_reg (full),
        .overflow_i0(overflow_i0),
        .prog_full(prog_full),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_counter_updn__parameterized6_62 wrp_inst
       (.D(\gwdc.diff_wr_rd_pntr1_out [2]),
        .E(wr_pntr_plus1_pf_carry),
        .Q(wr_pntr_ext),
        .\gwdc.wr_data_count_i_reg[2] ({\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 }),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_counter_updn__parameterized7_63 wrpp1_inst
       (.D(diff_pntr_pf_q0[2]),
        .E(wr_pntr_plus1_pf_carry),
        .Q(wr_pntr_plus1_pf),
        .\count_value_i_reg[3]_0 (wrpp1_inst_n_4),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ({rd_pntr_wr[3],rd_pntr_wr[1:0]}),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_counter_updn__parameterized8_64 wrpp2_inst
       (.E(wr_pntr_plus1_pf_carry),
        .Q(rd_pntr_wr[3]),
        .\count_value_i_reg[2]_0 ({wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3}),
        .\count_value_i_reg[3]_0 (wrpp2_inst_n_0),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_fifo_rst xpm_fifo_rst_inst
       (.E(wr_pntr_plus1_pf_carry),
        .Q(curr_fwft_state),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[3] (full),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_0 (rd_rst_busy),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_1 (\grdc.rd_data_count_i0 ),
        .\guf.underflow_i_reg (empty),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .rst_d1(rst_d1),
        .underflow_i0(underflow_i0),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy),
        .wrst_busy(wrst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_DEST_SYNC_FF = "3" *) (* COMMON_CLOCK = "0" *) 
(* DOUT_RESET_VALUE = "0" *) (* ECC_MODE = "0" *) (* ENABLE_ECC = "0" *) 
(* EN_ADV_FEATURE = "16'b0000011100000111" *) (* EN_AE = "1'b0" *) (* EN_AF = "1'b0" *) 
(* EN_DVLD = "1'b0" *) (* EN_OF = "1'b1" *) (* EN_PE = "1'b1" *) 
(* EN_PF = "1'b1" *) (* EN_RDC = "1'b1" *) (* EN_UF = "1'b1" *) 
(* EN_WACK = "1'b0" *) (* EN_WDC = "1'b1" *) (* FG_EQ_ASYM_DOUT = "1'b0" *) 
(* FIFO_MEMORY_TYPE = "1" *) (* FIFO_MEM_TYPE = "1" *) (* FIFO_READ_DEPTH = "16" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_SIZE = "320" *) (* FIFO_WRITE_DEPTH = "16" *) 
(* FULL_RESET_VALUE = "1" *) (* FULL_RST_VAL = "1'b1" *) (* ORIG_REF_NAME = "xpm_fifo_base" *) 
(* PE_THRESH_ADJ = "8" *) (* PE_THRESH_MAX = "11" *) (* PE_THRESH_MIN = "5" *) 
(* PF_THRESH_ADJ = "9" *) (* PF_THRESH_MAX = "11" *) (* PF_THRESH_MIN = "8" *) 
(* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "11" *) (* RD_DATA_COUNT_WIDTH = "4" *) 
(* RD_DC_WIDTH_EXT = "5" *) (* RD_LATENCY = "2" *) (* RD_MODE = "1" *) 
(* RD_PNTR_WIDTH = "4" *) (* READ_DATA_WIDTH = "20" *) (* READ_MODE = "1" *) 
(* READ_MODE_LL = "1" *) (* RELATED_CLOCKS = "0" *) (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WIDTH_RATIO = "1" *) (* WRITE_DATA_WIDTH = "20" *) 
(* WR_DATA_COUNT_WIDTH = "4" *) (* WR_DC_WIDTH_EXT = "5" *) (* WR_DEPTH_LOG = "4" *) 
(* WR_PNTR_WIDTH = "4" *) (* WR_RD_RATIO = "0" *) (* WR_WIDTH_LOG = "5" *) 
(* XPM_MODULE = "TRUE" *) (* both_stages_valid = "3" *) (* invalid = "0" *) 
(* keep_hierarchy = "soft" *) (* stage1_valid = "2" *) (* stage2_valid = "1" *) 
module zynq_bd_C2C2_0_xpm_fifo_base__parameterized3__xdcDup__1
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    full_n,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [19:0]din;
  output full;
  output full_n;
  output prog_full;
  output [3:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [19:0]dout;
  output empty;
  output prog_empty;
  output [3:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire clr_full;
  wire [1:0]count_value_i;
  wire [1:0]curr_fwft_state;
  wire [3:0]diff_pntr_pe;
  wire [4:1]diff_pntr_pf_q;
  wire [4:1]diff_pntr_pf_q0;
  wire [19:0]din;
  wire [19:0]dout;
  wire empty;
  wire empty_fwft_i0;
  wire full;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_5 ;
  wire \gen_fwft.count_rst ;
  wire \gen_fwft.ram_regout_en ;
  wire \gen_fwft.rdpp1_inst_n_3 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ;
  wire [4:1]\grdc.diff_wr_rd_pntr_rdc ;
  wire \grdc.rd_data_count_i0 ;
  wire [4:1]\gwdc.diff_wr_rd_pntr1_out ;
  wire [1:0]next_fwft_state__0;
  wire overflow;
  wire overflow_i0;
  wire prog_empty;
  wire prog_full;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire [3:0]rd_data_count;
  wire rd_en;
  wire [3:0]rd_pntr_ext;
  wire [3:0]rd_pntr_wr;
  wire [3:0]rd_pntr_wr_cdc;
  wire [4:0]rd_pntr_wr_cdc_dc;
  wire rd_rst_busy;
  wire rdp_inst_n_10;
  wire rdp_inst_n_11;
  wire rdp_inst_n_12;
  wire rdp_inst_n_8;
  wire rdp_inst_n_9;
  wire rdpp1_inst_n_0;
  wire rdpp1_inst_n_1;
  wire rdpp1_inst_n_2;
  wire rdpp1_inst_n_3;
  wire rst;
  wire rst_d1;
  wire rst_d1_inst_n_1;
  wire sleep;
  wire [1:1]src_in_bin00_out;
  wire underflow;
  wire underflow_i0;
  wire wr_clk;
  wire [3:0]wr_data_count;
  wire wr_en;
  wire [4:0]wr_pntr_ext;
  wire [3:1]wr_pntr_plus1_pf;
  wire wr_pntr_plus1_pf_carry;
  wire [3:0]wr_pntr_rd_cdc;
  wire [4:0]wr_pntr_rd_cdc_dc;
  wire wr_rst_busy;
  wire wrpp1_inst_n_4;
  wire wrpp2_inst_n_0;
  wire wrpp2_inst_n_1;
  wire wrpp2_inst_n_2;
  wire wrpp2_inst_n_3;
  wire wrst_busy;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ;
  wire [19:0]\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign full_n = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT4 #(
    .INIT(16'h6A85)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[0]_i_1 
       (.I0(curr_fwft_state[0]),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(ram_empty_i),
        .O(next_fwft_state__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT4 #(
    .INIT(16'h3FF0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[1]_i_1 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(curr_fwft_state[0]),
        .O(next_fwft_state__0[1]));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[0]),
        .Q(curr_fwft_state[0]),
        .R(rd_rst_busy));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[1]),
        .Q(curr_fwft_state[1]),
        .R(rd_rst_busy));
  GND GND
       (.G(\<const0> ));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "5" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_gray__parameterized6__2 \gen_cdc_pntr.rd_pntr_cdc_dc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc_dc),
        .src_clk(rd_clk),
        .src_in_bin({rdp_inst_n_9,rdp_inst_n_10,rdp_inst_n_11,src_in_bin00_out,rdp_inst_n_12}));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "4" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_gray__parameterized4__5 \gen_cdc_pntr.rd_pntr_cdc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc),
        .src_clk(rd_clk),
        .src_in_bin(rd_pntr_ext));
  zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized2 \gen_cdc_pntr.rpw_gray_reg 
       (.D(diff_pntr_pf_q0[4:3]),
        .E(wr_pntr_plus1_pf_carry),
        .Q({rd_pntr_wr[3],rd_pntr_wr[1:0]}),
        .clr_full(clr_full),
        .\count_value_i_reg[3] (\gen_cdc_pntr.rpw_gray_reg_n_5 ),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ({wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3}),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_0 (wrpp2_inst_n_0),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] (full),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] (wr_pntr_plus1_pf),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 (wrpp1_inst_n_4),
        .\reg_out_i_reg[3]_0 (rd_pntr_wr_cdc),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized3 \gen_cdc_pntr.rpw_gray_reg_dc 
       (.D({\gwdc.diff_wr_rd_pntr1_out [4:3],\gwdc.diff_wr_rd_pntr1_out [1]}),
        .Q({\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 }),
        .\gwdc.wr_data_count_i_reg[4] (wr_pntr_ext),
        .\reg_out_i_reg[4]_0 (rd_pntr_wr_cdc_dc),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized2_48 \gen_cdc_pntr.wpr_gray_reg 
       (.D(diff_pntr_pe[1:0]),
        .Q({\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 }),
        .enb(rdp_inst_n_8),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] (curr_fwft_state),
        .\gen_pf_ic_rc.ram_empty_i_reg (rd_pntr_ext),
        .\gen_pf_ic_rc.ram_empty_i_reg_0 ({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3}),
        .ram_empty_i(ram_empty_i),
        .ram_empty_i0(ram_empty_i0),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[0]_0 (rd_rst_busy),
        .\reg_out_i_reg[3]_0 (wr_pntr_rd_cdc));
  zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized3_49 \gen_cdc_pntr.wpr_gray_reg_dc 
       (.D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q({\gen_cdc_pntr.wpr_gray_reg_dc_n_1 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_2 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_5 }),
        .\grdc.rd_data_count_i_reg[1] (count_value_i),
        .\grdc.rd_data_count_i_reg[4] ({rd_pntr_ext[3],rd_pntr_ext[1:0]}),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[3]_0 (\gen_cdc_pntr.wpr_gray_reg_dc_n_6 ),
        .\reg_out_i_reg[4]_0 (rd_rst_busy),
        .\reg_out_i_reg[4]_1 (wr_pntr_rd_cdc_dc));
  (* DEST_SYNC_FF = "5" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "5" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_gray__parameterized5__2 \gen_cdc_pntr.wr_pntr_cdc_dc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc_dc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "4" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_gray__parameterized4__4 \gen_cdc_pntr.wr_pntr_cdc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext[3:0]));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT4 #(
    .INIT(16'hF380)) 
    \gen_fwft.empty_fwft_i_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .I3(empty),
        .O(empty_fwft_i0));
  FDSE #(
    .INIT(1'b1)) 
    \gen_fwft.empty_fwft_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .Q(empty),
        .S(rd_rst_busy));
  zynq_bd_C2C2_0_xpm_counter_updn_50 \gen_fwft.rdpp1_inst 
       (.D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(count_value_i),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[1]_0 (\gen_fwft.rdpp1_inst_n_3 ),
        .\count_value_i_reg[1]_1 (curr_fwft_state),
        .\grdc.rd_data_count_i_reg[2] ({\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_5 }),
        .\grdc.rd_data_count_i_reg[2]_0 (rd_pntr_ext[2:0]),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .src_in_bin(src_in_bin00_out));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_cdc_pntr.rpw_gray_reg_n_5 ),
        .Q(full),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[0]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[1]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[2]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[3]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .R(rd_rst_busy));
  LUT6 #(
    .INIT(64'h8888888BBBBBBBBB)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1 
       (.I0(prog_empty),
        .I1(empty),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .I4(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .I5(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ),
        .Q(prog_empty),
        .S(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[1]),
        .Q(diff_pntr_pf_q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[2]),
        .Q(diff_pntr_pf_q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[3]),
        .Q(diff_pntr_pf_q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[4]),
        .Q(diff_pntr_pf_q[4]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1_inst_n_1),
        .Q(prog_full),
        .S(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.ram_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i0),
        .Q(ram_empty_i),
        .S(rd_rst_busy));
  (* ADDR_WIDTH_A = "4" *) 
  (* ADDR_WIDTH_B = "4" *) 
  (* AUTO_SLEEP_TIME = "0" *) 
  (* BYTE_WRITE_WIDTH_A = "20" *) 
  (* BYTE_WRITE_WIDTH_B = "20" *) 
  (* CASCADE_HEIGHT = "0" *) 
  (* CLOCKING_MODE = "1" *) 
  (* ECC_BIT_RANGE = "[7:0]" *) 
  (* ECC_MODE = "0" *) 
  (* ECC_TYPE = "NONE" *) 
  (* IGNORE_INIT_SYNTH = "0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* MAX_NUM_CHAR = "0" *) 
  (* MEMORY_INIT_FILE = "none" *) 
  (* MEMORY_INIT_PARAM = "" *) 
  (* MEMORY_OPTIMIZATION = "true" *) 
  (* MEMORY_PRIMITIVE = "1" *) 
  (* MEMORY_SIZE = "320" *) 
  (* MEMORY_TYPE = "1" *) 
  (* MESSAGE_CONTROL = "0" *) 
  (* NUM_CHAR_LOC = "0" *) 
  (* P_ECC_MODE = "no_ecc" *) 
  (* P_ENABLE_BYTE_WRITE_A = "0" *) 
  (* P_ENABLE_BYTE_WRITE_B = "0" *) 
  (* P_MAX_DEPTH_DATA = "16" *) 
  (* P_MEMORY_OPT = "yes" *) 
  (* P_MEMORY_PRIMITIVE = "distributed" *) 
  (* P_MIN_WIDTH_DATA = "20" *) 
  (* P_MIN_WIDTH_DATA_A = "20" *) 
  (* P_MIN_WIDTH_DATA_B = "20" *) 
  (* P_MIN_WIDTH_DATA_ECC = "20" *) 
  (* P_MIN_WIDTH_DATA_LDW = "4" *) 
  (* P_MIN_WIDTH_DATA_SHFT = "20" *) 
  (* P_NUM_COLS_WRITE_A = "1" *) 
  (* P_NUM_COLS_WRITE_B = "1" *) 
  (* P_NUM_ROWS_READ_A = "1" *) 
  (* P_NUM_ROWS_READ_B = "1" *) 
  (* P_NUM_ROWS_WRITE_A = "1" *) 
  (* P_NUM_ROWS_WRITE_B = "1" *) 
  (* P_SDP_WRITE_MODE = "yes" *) 
  (* P_WIDTH_ADDR_LSB_READ_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) 
  (* P_WIDTH_ADDR_READ_A = "4" *) 
  (* P_WIDTH_ADDR_READ_B = "4" *) 
  (* P_WIDTH_ADDR_WRITE_A = "4" *) 
  (* P_WIDTH_ADDR_WRITE_B = "4" *) 
  (* P_WIDTH_COL_WRITE_A = "20" *) 
  (* P_WIDTH_COL_WRITE_B = "20" *) 
  (* RAM_DECOMP = "auto" *) 
  (* READ_DATA_WIDTH_A = "20" *) 
  (* READ_DATA_WIDTH_B = "20" *) 
  (* READ_LATENCY_A = "2" *) 
  (* READ_LATENCY_B = "2" *) 
  (* READ_RESET_VALUE_A = "0" *) 
  (* READ_RESET_VALUE_B = "0" *) 
  (* RST_MODE_A = "SYNC" *) 
  (* RST_MODE_B = "SYNC" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_EMBEDDED_CONSTRAINT = "1" *) 
  (* USE_MEM_INIT = "0" *) 
  (* USE_MEM_INIT_MMI = "0" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH_A = "20" *) 
  (* WRITE_DATA_WIDTH_B = "20" *) 
  (* WRITE_MODE_A = "2" *) 
  (* WRITE_MODE_B = "1" *) 
  (* WRITE_PROTECT = "1" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* rsta_loop_iter = "20" *) 
  (* rstb_loop_iter = "20" *) 
  zynq_bd_C2C2_0_xpm_memory_base__parameterized3__2 \gen_sdpram.xpm_memory_base_inst 
       (.addra(wr_pntr_ext[3:0]),
        .addrb(rd_pntr_ext),
        .clka(wr_clk),
        .clkb(rd_clk),
        .dbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ),
        .dbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ),
        .dina(din),
        .dinb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .douta(\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED [19:0]),
        .doutb(dout),
        .ena(wr_pntr_plus1_pf_carry),
        .enb(rdp_inst_n_8),
        .injectdbiterra(1'b0),
        .injectdbiterrb(1'b0),
        .injectsbiterra(1'b0),
        .injectsbiterrb(1'b0),
        .regcea(1'b0),
        .regceb(\gen_fwft.ram_regout_en ),
        .rsta(1'b0),
        .rstb(rd_rst_busy),
        .sbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ),
        .sbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ),
        .sleep(sleep),
        .wea(1'b0),
        .web(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT3 #(
    .INIT(8'h62)) 
    \gen_sdpram.xpm_memory_base_inst_i_3 
       (.I0(curr_fwft_state[0]),
        .I1(curr_fwft_state[1]),
        .I2(rd_en),
        .O(\gen_fwft.ram_regout_en ));
  FDRE #(
    .INIT(1'b0)) 
    \gof.overflow_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(overflow_i0),
        .Q(overflow),
        .R(1'b0));
  FDRE \grdc.rd_data_count_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q(rd_data_count[0]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(rd_data_count[1]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [3]),
        .Q(rd_data_count[2]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [4]),
        .Q(rd_data_count[3]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \guf.underflow_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(underflow_i0),
        .Q(underflow),
        .R(1'b0));
  FDRE \gwdc.wr_data_count_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [1]),
        .Q(wr_data_count[0]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [2]),
        .Q(wr_data_count[1]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [3]),
        .Q(wr_data_count[2]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [4]),
        .Q(wr_data_count[3]),
        .R(wrst_busy));
  zynq_bd_C2C2_0_xpm_counter_updn__parameterized6 rdp_inst
       (.D(diff_pntr_pe[3:2]),
        .E(rdp_inst_n_8),
        .Q(rd_pntr_ext),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\count_value_i_reg[4]_0 (rd_rst_busy),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] ({\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 }),
        .\grdc.rd_data_count_i_reg[4] (\gen_fwft.rdpp1_inst_n_3 ),
        .\grdc.rd_data_count_i_reg[4]_0 ({\gen_cdc_pntr.wpr_gray_reg_dc_n_1 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_2 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 }),
        .\grdc.rd_data_count_i_reg[4]_1 (\gen_cdc_pntr.wpr_gray_reg_dc_n_6 ),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[2] (\grdc.diff_wr_rd_pntr_rdc [4:3]),
        .\src_gray_ff_reg[4] (count_value_i),
        .src_in_bin({rdp_inst_n_9,rdp_inst_n_10,rdp_inst_n_11,rdp_inst_n_12}));
  zynq_bd_C2C2_0_xpm_counter_updn__parameterized7 rdpp1_inst
       (.E(rdp_inst_n_8),
        .Q({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3}),
        .\count_value_i_reg[0]_0 (rd_rst_busy),
        .\count_value_i_reg[1]_0 (curr_fwft_state),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  zynq_bd_C2C2_0_xpm_fifo_reg_bit_51 rst_d1_inst
       (.D(diff_pntr_pf_q0[1]),
        .Q(diff_pntr_pf_q),
        .clr_full(clr_full),
        .d_out_int_reg_0(rst_d1_inst_n_1),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] (rd_pntr_wr[0]),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1]_0 (wr_pntr_plus1_pf[1]),
        .\gof.overflow_i_reg (full),
        .overflow_i0(overflow_i0),
        .prog_full(prog_full),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_counter_updn__parameterized6_52 wrp_inst
       (.D(\gwdc.diff_wr_rd_pntr1_out [2]),
        .E(wr_pntr_plus1_pf_carry),
        .Q(wr_pntr_ext),
        .\gwdc.wr_data_count_i_reg[2] ({\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 }),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_counter_updn__parameterized7_53 wrpp1_inst
       (.D(diff_pntr_pf_q0[2]),
        .E(wr_pntr_plus1_pf_carry),
        .Q(wr_pntr_plus1_pf),
        .\count_value_i_reg[3]_0 (wrpp1_inst_n_4),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ({rd_pntr_wr[3],rd_pntr_wr[1:0]}),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_counter_updn__parameterized8 wrpp2_inst
       (.E(wr_pntr_plus1_pf_carry),
        .Q(rd_pntr_wr[3]),
        .\count_value_i_reg[2]_0 ({wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3}),
        .\count_value_i_reg[3]_0 (wrpp2_inst_n_0),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_fifo_rst__xdcDup__6 xpm_fifo_rst_inst
       (.E(wr_pntr_plus1_pf_carry),
        .Q(curr_fwft_state),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[3] (full),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_0 (rd_rst_busy),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_1 (\grdc.rd_data_count_i0 ),
        .\guf.underflow_i_reg (empty),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .rst_d1(rst_d1),
        .underflow_i0(underflow_i0),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy),
        .wrst_busy(wrst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_DEST_SYNC_FF = "3" *) (* COMMON_CLOCK = "0" *) 
(* DOUT_RESET_VALUE = "0" *) (* ECC_MODE = "0" *) (* ENABLE_ECC = "0" *) 
(* EN_ADV_FEATURE = "16'b0000011100000111" *) (* EN_AE = "1'b0" *) (* EN_AF = "1'b0" *) 
(* EN_DVLD = "1'b0" *) (* EN_OF = "1'b1" *) (* EN_PE = "1'b1" *) 
(* EN_PF = "1'b1" *) (* EN_RDC = "1'b1" *) (* EN_UF = "1'b1" *) 
(* EN_WACK = "1'b0" *) (* EN_WDC = "1'b1" *) (* FG_EQ_ASYM_DOUT = "1'b0" *) 
(* FIFO_MEMORY_TYPE = "2" *) (* FIFO_MEM_TYPE = "2" *) (* FIFO_READ_DEPTH = "256" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_SIZE = "11520" *) (* FIFO_WRITE_DEPTH = "256" *) 
(* FULL_RESET_VALUE = "1" *) (* FULL_RST_VAL = "1'b1" *) (* ORIG_REF_NAME = "xpm_fifo_base" *) 
(* PE_THRESH_ADJ = "8" *) (* PE_THRESH_MAX = "251" *) (* PE_THRESH_MIN = "5" *) 
(* PF_THRESH_ADJ = "126" *) (* PF_THRESH_MAX = "251" *) (* PF_THRESH_MIN = "8" *) 
(* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "128" *) (* RD_DATA_COUNT_WIDTH = "8" *) 
(* RD_DC_WIDTH_EXT = "9" *) (* RD_LATENCY = "2" *) (* RD_MODE = "1" *) 
(* RD_PNTR_WIDTH = "8" *) (* READ_DATA_WIDTH = "45" *) (* READ_MODE = "1" *) 
(* READ_MODE_LL = "1" *) (* RELATED_CLOCKS = "0" *) (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WIDTH_RATIO = "1" *) (* WRITE_DATA_WIDTH = "45" *) 
(* WR_DATA_COUNT_WIDTH = "8" *) (* WR_DC_WIDTH_EXT = "9" *) (* WR_DEPTH_LOG = "8" *) 
(* WR_PNTR_WIDTH = "8" *) (* WR_RD_RATIO = "0" *) (* WR_WIDTH_LOG = "6" *) 
(* XPM_MODULE = "TRUE" *) (* both_stages_valid = "3" *) (* invalid = "0" *) 
(* keep_hierarchy = "soft" *) (* stage1_valid = "2" *) (* stage2_valid = "1" *) 
module zynq_bd_C2C2_0_xpm_fifo_base__xdcDup__1
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    full_n,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [44:0]din;
  output full;
  output full_n;
  output prog_full;
  output [7:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [44:0]dout;
  output empty;
  output prog_empty;
  output [7:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [1:0]count_value_i;
  wire [1:0]curr_fwft_state;
  wire [7:0]diff_pntr_pe;
  wire [8:2]diff_pntr_pf_q;
  wire [8:2]diff_pntr_pf_q0;
  wire [44:0]din;
  wire [44:0]dout;
  wire empty;
  wire empty_fwft_i0;
  wire full;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_0 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_7 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_10 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_11 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_12 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_13 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_14 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_15 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_16 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_9 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_7 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_8 ;
  wire \gen_fwft.count_rst ;
  wire \gen_fwft.ram_regout_en ;
  wire \gen_fwft.rdpp1_inst_n_3 ;
  wire \gen_fwft.rdpp1_inst_n_4 ;
  wire \gen_fwft.rdpp1_inst_n_5 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ;
  wire [8:1]\grdc.diff_wr_rd_pntr_rdc ;
  wire \grdc.rd_data_count_i0 ;
  wire [8:1]\gwdc.diff_wr_rd_pntr1_out ;
  wire [1:0]next_fwft_state__0;
  wire overflow;
  wire overflow_i0;
  wire prog_empty;
  wire prog_full;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire [7:0]rd_data_count;
  wire rd_en;
  wire [7:0]rd_pntr_ext;
  wire [7:0]rd_pntr_wr;
  wire [7:0]rd_pntr_wr_cdc;
  wire [8:0]rd_pntr_wr_cdc_dc;
  wire rd_rst_busy;
  wire rdp_inst_n_10;
  wire rdp_inst_n_19;
  wire rdp_inst_n_20;
  wire rdp_inst_n_21;
  wire rdp_inst_n_22;
  wire rdp_inst_n_23;
  wire rdp_inst_n_24;
  wire rdp_inst_n_25;
  wire rdp_inst_n_26;
  wire rdp_inst_n_27;
  wire rdp_inst_n_28;
  wire rdp_inst_n_29;
  wire rdp_inst_n_30;
  wire rdp_inst_n_31;
  wire rdp_inst_n_8;
  wire rdp_inst_n_9;
  wire rdpp1_inst_n_0;
  wire rdpp1_inst_n_1;
  wire rdpp1_inst_n_2;
  wire rdpp1_inst_n_3;
  wire rdpp1_inst_n_4;
  wire rdpp1_inst_n_5;
  wire rdpp1_inst_n_6;
  wire rdpp1_inst_n_7;
  wire rst;
  wire rst_d1;
  wire rst_d1_inst_n_1;
  wire sleep;
  wire [1:1]src_in_bin00_out;
  wire underflow;
  wire underflow_i0;
  wire wr_clk;
  wire [7:0]wr_data_count;
  wire wr_en;
  wire [8:0]wr_pntr_ext;
  wire [8:1]wr_pntr_plus1_pf;
  wire wr_pntr_plus1_pf_carry;
  wire [7:0]wr_pntr_rd_cdc;
  wire [8:0]wr_pntr_rd_cdc_dc;
  wire wr_rst_busy;
  wire wrpp2_inst_n_0;
  wire wrpp2_inst_n_1;
  wire wrpp2_inst_n_2;
  wire wrpp2_inst_n_3;
  wire wrpp2_inst_n_4;
  wire wrpp2_inst_n_5;
  wire wrpp2_inst_n_6;
  wire wrpp2_inst_n_7;
  wire wrst_busy;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ;
  wire [44:0]\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign full_n = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  (* SOFT_HLUTNM = "soft_lutpair207" *) 
  LUT4 #(
    .INIT(16'h6A85)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[0]_i_1 
       (.I0(curr_fwft_state[0]),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(ram_empty_i),
        .O(next_fwft_state__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair207" *) 
  LUT4 #(
    .INIT(16'h3FF0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[1]_i_1 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(curr_fwft_state[0]),
        .O(next_fwft_state__0[1]));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[0]),
        .Q(curr_fwft_state[0]),
        .R(rd_rst_busy));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[1]),
        .Q(curr_fwft_state[1]),
        .R(rd_rst_busy));
  GND GND
       (.G(\<const0> ));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_gray__parameterized1__7 \gen_cdc_pntr.rd_pntr_cdc_dc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc_dc),
        .src_clk(rd_clk),
        .src_in_bin({rdp_inst_n_24,rdp_inst_n_25,rdp_inst_n_26,rdp_inst_n_27,rdp_inst_n_28,rdp_inst_n_29,rdp_inst_n_30,src_in_bin00_out,rdp_inst_n_31}));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "8" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_gray__7 \gen_cdc_pntr.rd_pntr_cdc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc),
        .src_clk(rd_clk),
        .src_in_bin(rd_pntr_ext));
  zynq_bd_C2C2_0_xpm_fifo_reg_vec_25 \gen_cdc_pntr.rpw_gray_reg 
       (.D(rd_pntr_wr_cdc),
        .Q(wr_pntr_plus1_pf),
        .d_out_int_reg(\gen_cdc_pntr.rpw_gray_reg_n_8 ),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7}),
        .\reg_out_i_reg[7]_0 (rd_pntr_wr),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized0_26 \gen_cdc_pntr.rpw_gray_reg_dc 
       (.D(rd_pntr_wr_cdc_dc),
        .Q({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 }),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_fifo_reg_vec_27 \gen_cdc_pntr.wpr_gray_reg 
       (.D(wr_pntr_rd_cdc),
        .Q(curr_fwft_state),
        .\gen_pf_ic_rc.ram_empty_i_reg (rd_pntr_ext),
        .\gen_pf_ic_rc.ram_empty_i_reg_0 ({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3,rdpp1_inst_n_4,rdpp1_inst_n_5,rdpp1_inst_n_6,rdpp1_inst_n_7}),
        .ram_empty_i(ram_empty_i),
        .ram_empty_i0(ram_empty_i0),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[0]_0 (rd_rst_busy),
        .\reg_out_i_reg[7]_0 ({\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }));
  zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized0_28 \gen_cdc_pntr.wpr_gray_reg_dc 
       (.D(\grdc.diff_wr_rd_pntr_rdc ),
        .DI({rdp_inst_n_9,\gen_fwft.rdpp1_inst_n_5 }),
        .Q({\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_16 }),
        .S({rdp_inst_n_19,rdp_inst_n_20,rdp_inst_n_21,rdp_inst_n_22,rdp_inst_n_23,\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .\grdc.rd_data_count_i_reg[7] (count_value_i[1]),
        .\grdc.rd_data_count_i_reg[7]_0 (rd_pntr_ext[6:1]),
        .\grdc.rd_data_count_i_reg[8] (rdp_inst_n_10),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[8]_0 (rd_rst_busy),
        .\reg_out_i_reg[8]_1 (wr_pntr_rd_cdc_dc));
  (* DEST_SYNC_FF = "5" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_gray__parameterized0__3 \gen_cdc_pntr.wr_pntr_cdc_dc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc_dc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "8" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_gray__6 \gen_cdc_pntr.wr_pntr_cdc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext[7:0]));
  (* SOFT_HLUTNM = "soft_lutpair206" *) 
  LUT4 #(
    .INIT(16'hF380)) 
    \gen_fwft.empty_fwft_i_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .I3(empty),
        .O(empty_fwft_i0));
  FDSE #(
    .INIT(1'b1)) 
    \gen_fwft.empty_fwft_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .Q(empty),
        .S(rd_rst_busy));
  zynq_bd_C2C2_0_xpm_counter_updn_29 \gen_fwft.rdpp1_inst 
       (.DI(\gen_fwft.rdpp1_inst_n_5 ),
        .Q(count_value_i),
        .S({\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\grdc.rd_data_count_i_reg[7] (rd_pntr_ext[1:0]),
        .\grdc.rd_data_count_i_reg[7]_0 ({\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_16 }),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .src_in_bin(src_in_bin00_out));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_cdc_pntr.rpw_gray_reg_n_8 ),
        .Q(full),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[0]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[1]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[2]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[3]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[4]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[5]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[6]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[7]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .R(rd_rst_busy));
  LUT4 #(
    .INIT(16'h88B8)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1 
       (.I0(prog_empty),
        .I1(empty),
        .I2(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h01FF)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ),
        .Q(prog_empty),
        .S(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[2]),
        .Q(diff_pntr_pf_q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[3]),
        .Q(diff_pntr_pf_q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[4]),
        .Q(diff_pntr_pf_q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[5]),
        .Q(diff_pntr_pf_q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[6]),
        .Q(diff_pntr_pf_q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[7]),
        .Q(diff_pntr_pf_q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[8]),
        .Q(diff_pntr_pf_q[8]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1_inst_n_1),
        .Q(prog_full),
        .S(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.ram_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i0),
        .Q(ram_empty_i),
        .S(rd_rst_busy));
  (* ADDR_WIDTH_A = "8" *) 
  (* ADDR_WIDTH_B = "8" *) 
  (* AUTO_SLEEP_TIME = "0" *) 
  (* BYTE_WRITE_WIDTH_A = "45" *) 
  (* BYTE_WRITE_WIDTH_B = "45" *) 
  (* CASCADE_HEIGHT = "0" *) 
  (* CLOCKING_MODE = "1" *) 
  (* ECC_BIT_RANGE = "[7:0]" *) 
  (* ECC_MODE = "0" *) 
  (* ECC_TYPE = "NONE" *) 
  (* IGNORE_INIT_SYNTH = "0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* MAX_NUM_CHAR = "0" *) 
  (* \MEM.ADDRESS_SPACE  *) 
  (* \MEM.ADDRESS_SPACE_BEGIN  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_LSB  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_MSB  = "44" *) 
  (* \MEM.ADDRESS_SPACE_END  = "511" *) 
  (* \MEM.CORE_MEMORY_WIDTH  = "45" *) 
  (* MEMORY_INIT_FILE = "none" *) 
  (* MEMORY_INIT_PARAM = "" *) 
  (* MEMORY_OPTIMIZATION = "true" *) 
  (* MEMORY_PRIMITIVE = "2" *) 
  (* MEMORY_SIZE = "11520" *) 
  (* MEMORY_TYPE = "1" *) 
  (* MESSAGE_CONTROL = "0" *) 
  (* NUM_CHAR_LOC = "0" *) 
  (* P_ECC_MODE = "no_ecc" *) 
  (* P_ENABLE_BYTE_WRITE_A = "0" *) 
  (* P_ENABLE_BYTE_WRITE_B = "0" *) 
  (* P_MAX_DEPTH_DATA = "256" *) 
  (* P_MEMORY_OPT = "yes" *) 
  (* P_MEMORY_PRIMITIVE = "block" *) 
  (* P_MIN_WIDTH_DATA = "45" *) 
  (* P_MIN_WIDTH_DATA_A = "45" *) 
  (* P_MIN_WIDTH_DATA_B = "45" *) 
  (* P_MIN_WIDTH_DATA_ECC = "45" *) 
  (* P_MIN_WIDTH_DATA_LDW = "4" *) 
  (* P_MIN_WIDTH_DATA_SHFT = "45" *) 
  (* P_NUM_COLS_WRITE_A = "1" *) 
  (* P_NUM_COLS_WRITE_B = "1" *) 
  (* P_NUM_ROWS_READ_A = "1" *) 
  (* P_NUM_ROWS_READ_B = "1" *) 
  (* P_NUM_ROWS_WRITE_A = "1" *) 
  (* P_NUM_ROWS_WRITE_B = "1" *) 
  (* P_SDP_WRITE_MODE = "no" *) 
  (* P_WIDTH_ADDR_LSB_READ_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) 
  (* P_WIDTH_ADDR_READ_A = "8" *) 
  (* P_WIDTH_ADDR_READ_B = "8" *) 
  (* P_WIDTH_ADDR_WRITE_A = "8" *) 
  (* P_WIDTH_ADDR_WRITE_B = "8" *) 
  (* P_WIDTH_COL_WRITE_A = "45" *) 
  (* P_WIDTH_COL_WRITE_B = "45" *) 
  (* RAM_DECOMP = "auto" *) 
  (* READ_DATA_WIDTH_A = "45" *) 
  (* READ_DATA_WIDTH_B = "45" *) 
  (* READ_LATENCY_A = "2" *) 
  (* READ_LATENCY_B = "2" *) 
  (* READ_RESET_VALUE_A = "0" *) 
  (* READ_RESET_VALUE_B = "0" *) 
  (* RST_MODE_A = "SYNC" *) 
  (* RST_MODE_B = "SYNC" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_EMBEDDED_CONSTRAINT = "0" *) 
  (* USE_MEM_INIT = "0" *) 
  (* USE_MEM_INIT_MMI = "0" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH_A = "45" *) 
  (* WRITE_DATA_WIDTH_B = "45" *) 
  (* WRITE_MODE_A = "2" *) 
  (* WRITE_MODE_B = "2" *) 
  (* WRITE_PROTECT = "1" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* rsta_loop_iter = "48" *) 
  (* rstb_loop_iter = "48" *) 
  zynq_bd_C2C2_0_xpm_memory_base__2 \gen_sdpram.xpm_memory_base_inst 
       (.addra(wr_pntr_ext[7:0]),
        .addrb(rd_pntr_ext),
        .clka(wr_clk),
        .clkb(rd_clk),
        .dbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ),
        .dbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ),
        .dina(din),
        .dinb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .douta(\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED [44:0]),
        .doutb(dout),
        .ena(wr_pntr_plus1_pf_carry),
        .enb(rdp_inst_n_8),
        .injectdbiterra(1'b0),
        .injectdbiterrb(1'b0),
        .injectsbiterra(1'b0),
        .injectsbiterrb(1'b0),
        .regcea(1'b0),
        .regceb(\gen_fwft.ram_regout_en ),
        .rsta(1'b0),
        .rstb(rd_rst_busy),
        .sbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ),
        .sbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ),
        .sleep(sleep),
        .wea(1'b0),
        .web(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair206" *) 
  LUT3 #(
    .INIT(8'h62)) 
    \gen_sdpram.xpm_memory_base_inst_i_3 
       (.I0(curr_fwft_state[0]),
        .I1(curr_fwft_state[1]),
        .I2(rd_en),
        .O(\gen_fwft.ram_regout_en ));
  FDRE #(
    .INIT(1'b0)) 
    \gof.overflow_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(overflow_i0),
        .Q(overflow),
        .R(1'b0));
  FDRE \grdc.rd_data_count_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q(rd_data_count[0]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(rd_data_count[1]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [3]),
        .Q(rd_data_count[2]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [4]),
        .Q(rd_data_count[3]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [5]),
        .Q(rd_data_count[4]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [6]),
        .Q(rd_data_count[5]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [7]),
        .Q(rd_data_count[6]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [8]),
        .Q(rd_data_count[7]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \guf.underflow_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(underflow_i0),
        .Q(underflow),
        .R(1'b0));
  FDRE \gwdc.wr_data_count_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [1]),
        .Q(wr_data_count[0]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [2]),
        .Q(wr_data_count[1]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [3]),
        .Q(wr_data_count[2]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [4]),
        .Q(wr_data_count[3]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [5]),
        .Q(wr_data_count[4]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [6]),
        .Q(wr_data_count[5]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [7]),
        .Q(wr_data_count[6]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [8]),
        .Q(wr_data_count[7]),
        .R(wrst_busy));
  zynq_bd_C2C2_0_xpm_counter_updn__parameterized0_30 rdp_inst
       (.D(diff_pntr_pe),
        .DI(rdp_inst_n_9),
        .Q(rd_pntr_ext),
        .S({rdp_inst_n_19,rdp_inst_n_20,rdp_inst_n_21,rdp_inst_n_22,rdp_inst_n_23}),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\count_value_i_reg[7]_0 (rdp_inst_n_10),
        .\count_value_i_reg[8]_0 (rd_rst_busy),
        .enb(rdp_inst_n_8),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ({\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .\grdc.rd_data_count_i_reg[7] (count_value_i),
        .\grdc.rd_data_count_i_reg[8] ({\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_15 }),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .src_in_bin({rdp_inst_n_24,rdp_inst_n_25,rdp_inst_n_26,rdp_inst_n_27,rdp_inst_n_28,rdp_inst_n_29,rdp_inst_n_30,rdp_inst_n_31}));
  zynq_bd_C2C2_0_xpm_counter_updn__parameterized1_31 rdpp1_inst
       (.E(rdp_inst_n_8),
        .Q({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3,rdpp1_inst_n_4,rdpp1_inst_n_5,rdpp1_inst_n_6,rdpp1_inst_n_7}),
        .\count_value_i_reg[0]_0 (rd_rst_busy),
        .\count_value_i_reg[1]_0 (curr_fwft_state),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  zynq_bd_C2C2_0_xpm_fifo_reg_bit_32 rst_d1_inst
       (.Q(diff_pntr_pf_q),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] (rst_d1_inst_n_1),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg (full),
        .overflow_i0(overflow_i0),
        .prog_full(prog_full),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_counter_updn__parameterized0_33 wrp_inst
       (.D(\gwdc.diff_wr_rd_pntr1_out ),
        .Q(wr_pntr_ext),
        .\count_value_i_reg[6]_0 (full),
        .\gwdc.wr_data_count_i_reg[8] ({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 }),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_counter_updn__parameterized1_34 wrpp1_inst
       (.D(diff_pntr_pf_q0),
        .Q(wr_pntr_plus1_pf),
        .\count_value_i_reg[6]_0 (full),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] (rd_pntr_wr),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_counter_updn__parameterized2_35 wrpp2_inst
       (.Q({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7}),
        .\count_value_i_reg[6]_0 (full),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  zynq_bd_C2C2_0_xpm_fifo_rst__xdcDup__1 xpm_fifo_rst_inst
       (.Q(curr_fwft_state),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[7] (full),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_0 (rd_rst_busy),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_1 (\grdc.rd_data_count_i0 ),
        .\guf.underflow_i_reg (empty),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .rst_d1(rst_d1),
        .underflow_i0(underflow_i0),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wr_rst_busy(wr_rst_busy),
        .wrst_busy(wrst_busy));
endmodule

module zynq_bd_C2C2_0_xpm_fifo_reg_bit
   (rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ,
    clr_full,
    overflow_i0,
    wrst_busy,
    wr_clk,
    Q,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ,
    prog_full,
    wr_en,
    rst);
  output rst_d1;
  output \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  output clr_full;
  output overflow_i0;
  input wrst_busy;
  input wr_clk;
  input [7:0]Q;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  input prog_full;
  input wr_en;
  input rst;

  wire [7:0]Q;
  wire clr_full;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  wire overflow_i0;
  wire prog_full;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    d_out_int_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(wrst_busy),
        .Q(rst_d1),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair332" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6 
       (.I0(rst),
        .I1(rst_d1),
        .I2(wrst_busy),
        .O(clr_full));
  LUT6 #(
    .INIT(64'h00FF00E0000000E0)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_1 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ),
        .I2(Q[7]),
        .I3(clr_full),
        .I4(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg ),
        .I5(prog_full),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[4]),
        .I3(Q[5]),
        .I4(Q[2]),
        .I5(Q[3]),
        .O(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair332" *) 
  LUT4 #(
    .INIT(16'hFE00)) 
    \gof.overflow_i_i_1 
       (.I0(rst_d1),
        .I1(wrst_busy),
        .I2(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg ),
        .I3(wr_en),
        .O(overflow_i0));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_bit" *) 
module zynq_bd_C2C2_0_xpm_fifo_reg_bit_12
   (rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ,
    clr_full,
    overflow_i0,
    wrst_busy,
    wr_clk,
    Q,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ,
    prog_full,
    wr_en,
    rst);
  output rst_d1;
  output \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  output clr_full;
  output overflow_i0;
  input wrst_busy;
  input wr_clk;
  input [7:0]Q;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  input prog_full;
  input wr_en;
  input rst;

  wire [7:0]Q;
  wire clr_full;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  wire overflow_i0;
  wire prog_full;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    d_out_int_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(wrst_busy),
        .Q(rst_d1),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair278" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6 
       (.I0(rst),
        .I1(rst_d1),
        .I2(wrst_busy),
        .O(clr_full));
  LUT6 #(
    .INIT(64'h00FF00E0000000E0)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_1 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ),
        .I2(Q[7]),
        .I3(clr_full),
        .I4(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg ),
        .I5(prog_full),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[4]),
        .I3(Q[5]),
        .I4(Q[2]),
        .I5(Q[3]),
        .O(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair278" *) 
  LUT4 #(
    .INIT(16'hFE00)) 
    \gof.overflow_i_i_1 
       (.I0(rst_d1),
        .I1(wrst_busy),
        .I2(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg ),
        .I3(wr_en),
        .O(overflow_i0));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_bit" *) 
module zynq_bd_C2C2_0_xpm_fifo_reg_bit_22
   (rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ,
    overflow_i0,
    wrst_busy,
    wr_clk,
    Q,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ,
    prog_full,
    wr_en,
    rst);
  output rst_d1;
  output \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  output overflow_i0;
  input wrst_busy;
  input wr_clk;
  input [6:0]Q;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  input prog_full;
  input wr_en;
  input rst;

  wire [6:0]Q;
  wire clr_full;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  wire overflow_i0;
  wire prog_full;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    d_out_int_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(wrst_busy),
        .Q(rst_d1),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h0F0E000E)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_1 
       (.I0(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ),
        .I1(Q[6]),
        .I2(clr_full),
        .I3(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg ),
        .I4(prog_full),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[4]),
        .I3(Q[5]),
        .I4(Q[2]),
        .I5(Q[3]),
        .O(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair227" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_3 
       (.I0(rst),
        .I1(rst_d1),
        .I2(wrst_busy),
        .O(clr_full));
  (* SOFT_HLUTNM = "soft_lutpair227" *) 
  LUT4 #(
    .INIT(16'hFE00)) 
    \gof.overflow_i_i_1 
       (.I0(rst_d1),
        .I1(wrst_busy),
        .I2(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg ),
        .I3(wr_en),
        .O(overflow_i0));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_bit" *) 
module zynq_bd_C2C2_0_xpm_fifo_reg_bit_32
   (rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ,
    overflow_i0,
    wrst_busy,
    wr_clk,
    Q,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ,
    prog_full,
    wr_en,
    rst);
  output rst_d1;
  output \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  output overflow_i0;
  input wrst_busy;
  input wr_clk;
  input [6:0]Q;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  input prog_full;
  input wr_en;
  input rst;

  wire [6:0]Q;
  wire clr_full;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  wire overflow_i0;
  wire prog_full;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    d_out_int_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(wrst_busy),
        .Q(rst_d1),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h0F0E000E)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_1 
       (.I0(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ),
        .I1(Q[6]),
        .I2(clr_full),
        .I3(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg ),
        .I4(prog_full),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[4]),
        .I3(Q[5]),
        .I4(Q[2]),
        .I5(Q[3]),
        .O(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair196" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_3 
       (.I0(rst),
        .I1(rst_d1),
        .I2(wrst_busy),
        .O(clr_full));
  (* SOFT_HLUTNM = "soft_lutpair196" *) 
  LUT4 #(
    .INIT(16'hFE00)) 
    \gof.overflow_i_i_1 
       (.I0(rst_d1),
        .I1(wrst_busy),
        .I2(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg ),
        .I3(wr_en),
        .O(overflow_i0));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_bit" *) 
module zynq_bd_C2C2_0_xpm_fifo_reg_bit_43
   (rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ,
    overflow_i0,
    wrst_busy,
    wr_clk,
    Q,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ,
    prog_full,
    wr_en,
    rst);
  output rst_d1;
  output \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  output overflow_i0;
  input wrst_busy;
  input wr_clk;
  input [6:0]Q;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  input prog_full;
  input wr_en;
  input rst;

  wire [6:0]Q;
  wire clr_full;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  wire overflow_i0;
  wire prog_full;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    d_out_int_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(wrst_busy),
        .Q(rst_d1),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h0F0E000E)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_1 
       (.I0(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ),
        .I1(Q[6]),
        .I2(clr_full),
        .I3(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg ),
        .I4(prog_full),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[4]),
        .I3(Q[5]),
        .I4(Q[2]),
        .I5(Q[3]),
        .O(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair164" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_3 
       (.I0(rst),
        .I1(rst_d1),
        .I2(wrst_busy),
        .O(clr_full));
  (* SOFT_HLUTNM = "soft_lutpair164" *) 
  LUT4 #(
    .INIT(16'hFE00)) 
    \gof.overflow_i_i_1 
       (.I0(rst_d1),
        .I1(wrst_busy),
        .I2(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg ),
        .I3(wr_en),
        .O(overflow_i0));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_bit" *) 
module zynq_bd_C2C2_0_xpm_fifo_reg_bit_51
   (rst_d1,
    d_out_int_reg_0,
    overflow_i0,
    clr_full,
    D,
    wrst_busy,
    wr_clk,
    Q,
    rst,
    \gof.overflow_i_reg ,
    prog_full,
    wr_en,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] ,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1]_0 );
  output rst_d1;
  output d_out_int_reg_0;
  output overflow_i0;
  output clr_full;
  output [0:0]D;
  input wrst_busy;
  input wr_clk;
  input [3:0]Q;
  input rst;
  input \gof.overflow_i_reg ;
  input prog_full;
  input wr_en;
  input [0:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] ;
  input [0:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1]_0 ;

  wire [0:0]D;
  wire [3:0]Q;
  wire clr_full;
  wire d_out_int_reg_0;
  wire [0:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] ;
  wire [0:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1]_0 ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ;
  wire \gof.overflow_i_reg ;
  wire overflow_i0;
  wire prog_full;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    d_out_int_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(wrst_busy),
        .Q(rst_d1),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6 
       (.I0(rst),
        .I1(rst_d1),
        .I2(wrst_busy),
        .O(clr_full));
  LUT5 #(
    .INIT(32'hEF1010EF)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[1]_i_1 
       (.I0(rst_d1),
        .I1(\gof.overflow_i_reg ),
        .I2(wr_en),
        .I3(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] ),
        .I4(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1]_0 ),
        .O(D));
  LUT5 #(
    .INIT(32'hF3A200A2)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_1 
       (.I0(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ),
        .I1(rst_d1),
        .I2(rst),
        .I3(\gof.overflow_i_reg ),
        .I4(prog_full),
        .O(d_out_int_reg_0));
  LUT4 #(
    .INIT(16'hAAA8)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2 
       (.I0(Q[3]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(Q[1]),
        .O(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT4 #(
    .INIT(16'hFE00)) 
    \gof.overflow_i_i_1 
       (.I0(rst_d1),
        .I1(wrst_busy),
        .I2(\gof.overflow_i_reg ),
        .I3(wr_en),
        .O(overflow_i0));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_bit" *) 
module zynq_bd_C2C2_0_xpm_fifo_reg_bit_61
   (rst_d1,
    d_out_int_reg_0,
    overflow_i0,
    clr_full,
    D,
    wrst_busy,
    wr_clk,
    Q,
    rst,
    \gof.overflow_i_reg ,
    prog_full,
    wr_en,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] ,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1]_0 );
  output rst_d1;
  output d_out_int_reg_0;
  output overflow_i0;
  output clr_full;
  output [0:0]D;
  input wrst_busy;
  input wr_clk;
  input [3:0]Q;
  input rst;
  input \gof.overflow_i_reg ;
  input prog_full;
  input wr_en;
  input [0:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] ;
  input [0:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1]_0 ;

  wire [0:0]D;
  wire [3:0]Q;
  wire clr_full;
  wire d_out_int_reg_0;
  wire [0:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] ;
  wire [0:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1]_0 ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ;
  wire \gof.overflow_i_reg ;
  wire overflow_i0;
  wire prog_full;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    d_out_int_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(wrst_busy),
        .Q(rst_d1),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6 
       (.I0(rst),
        .I1(rst_d1),
        .I2(wrst_busy),
        .O(clr_full));
  LUT5 #(
    .INIT(32'hEF1010EF)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[1]_i_1 
       (.I0(rst_d1),
        .I1(\gof.overflow_i_reg ),
        .I2(wr_en),
        .I3(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] ),
        .I4(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1]_0 ),
        .O(D));
  LUT5 #(
    .INIT(32'hF3A200A2)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_1 
       (.I0(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ),
        .I1(rst_d1),
        .I2(rst),
        .I3(\gof.overflow_i_reg ),
        .I4(prog_full),
        .O(d_out_int_reg_0));
  LUT4 #(
    .INIT(16'hAAA8)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2 
       (.I0(Q[3]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(Q[1]),
        .O(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT4 #(
    .INIT(16'hFE00)) 
    \gof.overflow_i_i_1 
       (.I0(rst_d1),
        .I1(wrst_busy),
        .I2(\gof.overflow_i_reg ),
        .I3(wr_en),
        .O(overflow_i0));
endmodule

module zynq_bd_C2C2_0_xpm_fifo_reg_vec
   (\reg_out_i_reg[7]_0 ,
    d_out_int_reg,
    Q,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ,
    wr_pntr_plus1_pf_carry,
    rst_d1,
    rst,
    wrst_busy,
    D,
    wr_clk);
  output [7:0]\reg_out_i_reg[7]_0 ;
  output d_out_int_reg;
  input [7:0]Q;
  input [7:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  input wr_pntr_plus1_pf_carry;
  input rst_d1;
  input rst;
  input wrst_busy;
  input [7:0]D;
  input wr_clk;

  wire [7:0]D;
  wire [7:0]Q;
  wire d_out_int_reg;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  wire going_full0;
  wire leaving_full;
  wire [7:0]\reg_out_i_reg[7]_0 ;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'hEAEA00EA)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_1 
       (.I0(leaving_full),
        .I1(going_full0),
        .I2(wr_pntr_plus1_pf_carry),
        .I3(rst_d1),
        .I4(rst),
        .O(d_out_int_reg));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2 
       (.I0(Q[7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(Q[6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ),
        .I5(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ),
        .O(leaving_full));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3 
       (.I0(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ),
        .I5(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ),
        .O(going_full0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(Q[3]),
        .I2(Q[5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(Q[4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(Q[1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [3]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [0]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(\reg_out_i_reg[7]_0 [0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(\reg_out_i_reg[7]_0 [1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(\reg_out_i_reg[7]_0 [2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(\reg_out_i_reg[7]_0 [3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(\reg_out_i_reg[7]_0 [4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(\reg_out_i_reg[7]_0 [5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(\reg_out_i_reg[7]_0 [6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(\reg_out_i_reg[7]_0 [7]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module zynq_bd_C2C2_0_xpm_fifo_reg_vec_19
   (ram_empty_i0,
    \reg_out_i_reg[7]_0 ,
    Q,
    rd_en,
    ram_empty_i,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \gen_pf_ic_rc.ram_empty_i_reg_0 ,
    \reg_out_i_reg[0]_0 ,
    D,
    rd_clk);
  output ram_empty_i0;
  output [7:0]\reg_out_i_reg[7]_0 ;
  input [1:0]Q;
  input rd_en;
  input ram_empty_i;
  input [7:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  input [7:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  input \reg_out_i_reg[0]_0 ;
  input [7:0]D;
  input rd_clk;

  wire [7:0]D;
  wire [1:0]Q;
  wire \gen_pf_ic_rc.ram_empty_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_5_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_6_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_7_n_0 ;
  wire [7:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  wire [7:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  wire going_empty0;
  wire leaving_empty;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire rd_en;
  wire \reg_out_i_reg[0]_0 ;
  wire [7:0]\reg_out_i_reg[7]_0 ;

  LUT6 #(
    .INIT(64'hFFFFFFFF00FD0000)) 
    \gen_pf_ic_rc.ram_empty_i_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .I4(going_empty0),
        .I5(leaving_empty),
        .O(ram_empty_i0));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.ram_empty_i_i_2 
       (.I0(\gen_pf_ic_rc.ram_empty_i_reg_0 [7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ),
        .I5(\gen_pf_ic_rc.ram_empty_i_i_5_n_0 ),
        .O(going_empty0));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.ram_empty_i_i_3 
       (.I0(\gen_pf_ic_rc.ram_empty_i_reg [7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.ram_empty_i_i_6_n_0 ),
        .I5(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ),
        .O(leaving_empty));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_4 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [3]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_0 [4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_5 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_0 [1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_6 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_7 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(\reg_out_i_reg[7]_0 [0]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(\reg_out_i_reg[7]_0 [1]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(\reg_out_i_reg[7]_0 [2]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(\reg_out_i_reg[7]_0 [3]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(\reg_out_i_reg[7]_0 [4]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(\reg_out_i_reg[7]_0 [5]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(\reg_out_i_reg[7]_0 [6]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(\reg_out_i_reg[7]_0 [7]),
        .R(\reg_out_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module zynq_bd_C2C2_0_xpm_fifo_reg_vec_25
   (\reg_out_i_reg[7]_0 ,
    d_out_int_reg,
    Q,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ,
    wr_pntr_plus1_pf_carry,
    rst_d1,
    rst,
    wrst_busy,
    D,
    wr_clk);
  output [7:0]\reg_out_i_reg[7]_0 ;
  output d_out_int_reg;
  input [7:0]Q;
  input [7:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  input wr_pntr_plus1_pf_carry;
  input rst_d1;
  input rst;
  input wrst_busy;
  input [7:0]D;
  input wr_clk;

  wire [7:0]D;
  wire [7:0]Q;
  wire d_out_int_reg;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  wire going_full0;
  wire leaving_full;
  wire [7:0]\reg_out_i_reg[7]_0 ;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'hEAEA00EA)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_1 
       (.I0(leaving_full),
        .I1(going_full0),
        .I2(wr_pntr_plus1_pf_carry),
        .I3(rst_d1),
        .I4(rst),
        .O(d_out_int_reg));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2 
       (.I0(Q[7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(Q[6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ),
        .I5(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ),
        .O(leaving_full));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3 
       (.I0(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ),
        .I5(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ),
        .O(going_full0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(Q[3]),
        .I2(Q[5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(Q[4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(Q[1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [3]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [0]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(\reg_out_i_reg[7]_0 [0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(\reg_out_i_reg[7]_0 [1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(\reg_out_i_reg[7]_0 [2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(\reg_out_i_reg[7]_0 [3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(\reg_out_i_reg[7]_0 [4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(\reg_out_i_reg[7]_0 [5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(\reg_out_i_reg[7]_0 [6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(\reg_out_i_reg[7]_0 [7]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module zynq_bd_C2C2_0_xpm_fifo_reg_vec_27
   (ram_empty_i0,
    \reg_out_i_reg[7]_0 ,
    Q,
    rd_en,
    ram_empty_i,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \gen_pf_ic_rc.ram_empty_i_reg_0 ,
    \reg_out_i_reg[0]_0 ,
    D,
    rd_clk);
  output ram_empty_i0;
  output [7:0]\reg_out_i_reg[7]_0 ;
  input [1:0]Q;
  input rd_en;
  input ram_empty_i;
  input [7:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  input [7:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  input \reg_out_i_reg[0]_0 ;
  input [7:0]D;
  input rd_clk;

  wire [7:0]D;
  wire [1:0]Q;
  wire \gen_pf_ic_rc.ram_empty_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_5_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_6_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_7_n_0 ;
  wire [7:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  wire [7:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  wire going_empty0;
  wire leaving_empty;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire rd_en;
  wire \reg_out_i_reg[0]_0 ;
  wire [7:0]\reg_out_i_reg[7]_0 ;

  LUT6 #(
    .INIT(64'hFFFFFFFF00FD0000)) 
    \gen_pf_ic_rc.ram_empty_i_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .I4(going_empty0),
        .I5(leaving_empty),
        .O(ram_empty_i0));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.ram_empty_i_i_2 
       (.I0(\gen_pf_ic_rc.ram_empty_i_reg_0 [7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ),
        .I5(\gen_pf_ic_rc.ram_empty_i_i_5_n_0 ),
        .O(going_empty0));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.ram_empty_i_i_3 
       (.I0(\gen_pf_ic_rc.ram_empty_i_reg [7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.ram_empty_i_i_6_n_0 ),
        .I5(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ),
        .O(leaving_empty));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_4 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [3]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_0 [4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_5 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_0 [1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_6 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_7 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(\reg_out_i_reg[7]_0 [0]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(\reg_out_i_reg[7]_0 [1]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(\reg_out_i_reg[7]_0 [2]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(\reg_out_i_reg[7]_0 [3]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(\reg_out_i_reg[7]_0 [4]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(\reg_out_i_reg[7]_0 [5]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(\reg_out_i_reg[7]_0 [6]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(\reg_out_i_reg[7]_0 [7]),
        .R(\reg_out_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module zynq_bd_C2C2_0_xpm_fifo_reg_vec_36
   (\reg_out_i_reg[7]_0 ,
    d_out_int_reg,
    Q,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ,
    wr_pntr_plus1_pf_carry,
    rst_d1,
    rst,
    wrst_busy,
    D,
    wr_clk);
  output [7:0]\reg_out_i_reg[7]_0 ;
  output d_out_int_reg;
  input [7:0]Q;
  input [7:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  input wr_pntr_plus1_pf_carry;
  input rst_d1;
  input rst;
  input wrst_busy;
  input [7:0]D;
  input wr_clk;

  wire [7:0]D;
  wire [7:0]Q;
  wire d_out_int_reg;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  wire going_full0;
  wire leaving_full;
  wire [7:0]\reg_out_i_reg[7]_0 ;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'hEAEA00EA)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_1 
       (.I0(leaving_full),
        .I1(going_full0),
        .I2(wr_pntr_plus1_pf_carry),
        .I3(rst_d1),
        .I4(rst),
        .O(d_out_int_reg));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2 
       (.I0(Q[7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(Q[6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ),
        .I5(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ),
        .O(leaving_full));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3 
       (.I0(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ),
        .I5(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ),
        .O(going_full0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(Q[3]),
        .I2(Q[5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(Q[4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(Q[1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [3]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [0]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(\reg_out_i_reg[7]_0 [0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(\reg_out_i_reg[7]_0 [1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(\reg_out_i_reg[7]_0 [2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(\reg_out_i_reg[7]_0 [3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(\reg_out_i_reg[7]_0 [4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(\reg_out_i_reg[7]_0 [5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(\reg_out_i_reg[7]_0 [6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(\reg_out_i_reg[7]_0 [7]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module zynq_bd_C2C2_0_xpm_fifo_reg_vec_38
   (ram_empty_i0,
    \reg_out_i_reg[7]_0 ,
    Q,
    rd_en,
    ram_empty_i,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \gen_pf_ic_rc.ram_empty_i_reg_0 ,
    \reg_out_i_reg[0]_0 ,
    D,
    rd_clk);
  output ram_empty_i0;
  output [7:0]\reg_out_i_reg[7]_0 ;
  input [1:0]Q;
  input rd_en;
  input ram_empty_i;
  input [7:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  input [7:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  input \reg_out_i_reg[0]_0 ;
  input [7:0]D;
  input rd_clk;

  wire [7:0]D;
  wire [1:0]Q;
  wire \gen_pf_ic_rc.ram_empty_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_5_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_6_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_7_n_0 ;
  wire [7:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  wire [7:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  wire going_empty0;
  wire leaving_empty;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire rd_en;
  wire \reg_out_i_reg[0]_0 ;
  wire [7:0]\reg_out_i_reg[7]_0 ;

  LUT6 #(
    .INIT(64'hFFFFFFFF00FD0000)) 
    \gen_pf_ic_rc.ram_empty_i_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .I4(going_empty0),
        .I5(leaving_empty),
        .O(ram_empty_i0));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.ram_empty_i_i_2 
       (.I0(\gen_pf_ic_rc.ram_empty_i_reg_0 [7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ),
        .I5(\gen_pf_ic_rc.ram_empty_i_i_5_n_0 ),
        .O(going_empty0));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.ram_empty_i_i_3 
       (.I0(\gen_pf_ic_rc.ram_empty_i_reg [7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.ram_empty_i_i_6_n_0 ),
        .I5(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ),
        .O(leaving_empty));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_4 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [3]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_0 [4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_5 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_0 [1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_6 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_7 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(\reg_out_i_reg[7]_0 [0]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(\reg_out_i_reg[7]_0 [1]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(\reg_out_i_reg[7]_0 [2]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(\reg_out_i_reg[7]_0 [3]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(\reg_out_i_reg[7]_0 [4]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(\reg_out_i_reg[7]_0 [5]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(\reg_out_i_reg[7]_0 [6]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(\reg_out_i_reg[7]_0 [7]),
        .R(\reg_out_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized0
   (Q,
    \reg_out_i_reg[0]_0 ,
    wr_pntr_plus1_pf_carry,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 ,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ,
    clr_full,
    wrst_busy,
    D,
    wr_clk);
  output [8:0]Q;
  output \reg_out_i_reg[0]_0 ;
  input wr_pntr_plus1_pf_carry;
  input [8:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 ;
  input [8:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  input clr_full;
  input wrst_busy;
  input [8:0]D;
  input wr_clk;

  wire [8:0]D;
  wire [8:0]Q;
  wire clr_full;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ;
  wire [8:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_8_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_9_n_0 ;
  wire [8:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  wire going_full;
  wire \reg_out_i_reg[0]_0 ;
  wire wr_clk;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'h0000FF80)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_1 
       (.I0(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2_n_0 ),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ),
        .I3(going_full),
        .I4(clr_full),
        .O(\reg_out_i_reg[0]_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [0]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [2]),
        .I3(Q[2]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [6]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [8]),
        .I3(Q[8]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [7]),
        .I5(Q[7]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [3]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [5]),
        .I3(Q[5]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [4]),
        .I5(Q[4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h8000)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5 
       (.I0(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_8_n_0 ),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_9_n_0 ),
        .I3(wr_pntr_plus1_pf_carry),
        .O(going_full));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [3]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [5]),
        .I3(Q[5]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [4]),
        .I5(Q[4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_8 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [6]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [8]),
        .I3(Q[8]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [7]),
        .I5(Q[7]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_9 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [0]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [2]),
        .I3(Q[2]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_9_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized0_1
   (\reg_out_i_reg[8]_0 ,
    D,
    ram_empty_i,
    rd_en,
    Q,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ,
    S,
    \reg_out_i_reg[0]_0 ,
    \reg_out_i_reg[8]_1 ,
    rd_clk);
  output [8:0]\reg_out_i_reg[8]_0 ;
  output [8:0]D;
  input ram_empty_i;
  input rd_en;
  input [1:0]Q;
  input [0:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ;
  input [7:0]S;
  input \reg_out_i_reg[0]_0 ;
  input [8:0]\reg_out_i_reg[8]_1 ;
  input rd_clk;

  wire [8:0]D;
  wire [1:0]Q;
  wire [7:0]S;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[8]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 ;
  wire [0:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ;
  wire p_1_in;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire \reg_out_i_reg[0]_0 ;
  wire [8:0]\reg_out_i_reg[8]_0 ;
  wire [8:0]\reg_out_i_reg[8]_1 ;
  wire [7:0]\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1_CO_UNCONNECTED ;
  wire [7:1]\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1_O_UNCONNECTED ;

  LUT4 #(
    .INIT(16'hAABA)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(Q[1]),
        .I3(Q[0]),
        .O(p_1_in));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[8]_i_2 
       (.I0(\reg_out_i_reg[8]_0 [8]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[8]_i_2_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1 
       (.CI(\reg_out_i_reg[8]_0 [0]),
        .CI_TOP(1'b0),
        .CO({\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 }),
        .DI({\reg_out_i_reg[8]_0 [7:1],p_1_in}),
        .O(D[7:0]),
        .S(S));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1 
       (.CI(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1_O_UNCONNECTED [7:1],D[8]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[8]_i_2_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [0]),
        .Q(\reg_out_i_reg[8]_0 [0]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [1]),
        .Q(\reg_out_i_reg[8]_0 [1]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [2]),
        .Q(\reg_out_i_reg[8]_0 [2]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [3]),
        .Q(\reg_out_i_reg[8]_0 [3]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [4]),
        .Q(\reg_out_i_reg[8]_0 [4]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [5]),
        .Q(\reg_out_i_reg[8]_0 [5]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [6]),
        .Q(\reg_out_i_reg[8]_0 [6]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [7]),
        .Q(\reg_out_i_reg[8]_0 [7]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [8]),
        .Q(\reg_out_i_reg[8]_0 [8]),
        .R(\reg_out_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized0_18
   (Q,
    wrst_busy,
    D,
    wr_clk);
  output [8:0]Q;
  input wrst_busy;
  input [8:0]D;
  input wr_clk;

  wire [8:0]D;
  wire [8:0]Q;
  wire wr_clk;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized0_20
   (D,
    Q,
    DI,
    S,
    \grdc.rd_data_count_i_reg[8] ,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[7]_0 ,
    \reg_out_i_reg[8]_0 ,
    \reg_out_i_reg[8]_1 ,
    rd_clk);
  output [7:0]D;
  output [8:0]Q;
  input [1:0]DI;
  input [6:0]S;
  input [0:0]\grdc.rd_data_count_i_reg[8] ;
  input [0:0]\grdc.rd_data_count_i_reg[7] ;
  input [5:0]\grdc.rd_data_count_i_reg[7]_0 ;
  input \reg_out_i_reg[8]_0 ;
  input [8:0]\reg_out_i_reg[8]_1 ;
  input rd_clk;

  wire [7:0]D;
  wire [1:0]DI;
  wire [8:0]Q;
  wire [6:0]S;
  wire \grdc.rd_data_count_i[7]_i_14_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_2_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_3_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_4_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_5_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_6_n_0 ;
  wire [0:0]\grdc.rd_data_count_i_reg[7] ;
  wire [5:0]\grdc.rd_data_count_i_reg[7]_0 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_0 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_1 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_2 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_3 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_4 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_5 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_6 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_7 ;
  wire [0:0]\grdc.rd_data_count_i_reg[8] ;
  wire rd_clk;
  wire \reg_out_i_reg[8]_0 ;
  wire [8:0]\reg_out_i_reg[8]_1 ;
  wire [0:0]\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:0]\NLW_grdc.rd_data_count_i_reg[8]_i_2_CO_UNCONNECTED ;
  wire [7:1]\NLW_grdc.rd_data_count_i_reg[8]_i_2_O_UNCONNECTED ;

  LUT5 #(
    .INIT(32'h718E8E71)) 
    \grdc.rd_data_count_i[7]_i_14 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] ),
        .I2(\grdc.rd_data_count_i_reg[7]_0 [0]),
        .I3(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .I4(Q[2]),
        .O(\grdc.rd_data_count_i[7]_i_14_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_2 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [5]),
        .O(\grdc.rd_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_3 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [4]),
        .O(\grdc.rd_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_4 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [3]),
        .O(\grdc.rd_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_5 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [2]),
        .O(\grdc.rd_data_count_i[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_6 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .O(\grdc.rd_data_count_i[7]_i_6_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[7]_i_1 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\grdc.rd_data_count_i_reg[7]_i_1_n_0 ,\grdc.rd_data_count_i_reg[7]_i_1_n_1 ,\grdc.rd_data_count_i_reg[7]_i_1_n_2 ,\grdc.rd_data_count_i_reg[7]_i_1_n_3 ,\grdc.rd_data_count_i_reg[7]_i_1_n_4 ,\grdc.rd_data_count_i_reg[7]_i_1_n_5 ,\grdc.rd_data_count_i_reg[7]_i_1_n_6 ,\grdc.rd_data_count_i_reg[7]_i_1_n_7 }),
        .DI({\grdc.rd_data_count_i[7]_i_2_n_0 ,\grdc.rd_data_count_i[7]_i_3_n_0 ,\grdc.rd_data_count_i[7]_i_4_n_0 ,\grdc.rd_data_count_i[7]_i_5_n_0 ,\grdc.rd_data_count_i[7]_i_6_n_0 ,DI,Q[0]}),
        .O({D[6:0],\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({S[6:2],\grdc.rd_data_count_i[7]_i_14_n_0 ,S[1:0]}));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[8]_i_2 
       (.CI(\grdc.rd_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_grdc.rd_data_count_i_reg[8]_i_2_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_grdc.rd_data_count_i_reg[8]_i_2_O_UNCONNECTED [7:1],D[7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\grdc.rd_data_count_i_reg[8] }));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [4]),
        .Q(Q[4]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [5]),
        .Q(Q[5]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [6]),
        .Q(Q[6]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [7]),
        .Q(Q[7]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [8]),
        .Q(Q[8]),
        .R(\reg_out_i_reg[8]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized0_26
   (Q,
    wrst_busy,
    D,
    wr_clk);
  output [8:0]Q;
  input wrst_busy;
  input [8:0]D;
  input wr_clk;

  wire [8:0]D;
  wire [8:0]Q;
  wire wr_clk;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized0_28
   (D,
    Q,
    DI,
    S,
    \grdc.rd_data_count_i_reg[8] ,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[7]_0 ,
    \reg_out_i_reg[8]_0 ,
    \reg_out_i_reg[8]_1 ,
    rd_clk);
  output [7:0]D;
  output [8:0]Q;
  input [1:0]DI;
  input [6:0]S;
  input [0:0]\grdc.rd_data_count_i_reg[8] ;
  input [0:0]\grdc.rd_data_count_i_reg[7] ;
  input [5:0]\grdc.rd_data_count_i_reg[7]_0 ;
  input \reg_out_i_reg[8]_0 ;
  input [8:0]\reg_out_i_reg[8]_1 ;
  input rd_clk;

  wire [7:0]D;
  wire [1:0]DI;
  wire [8:0]Q;
  wire [6:0]S;
  wire \grdc.rd_data_count_i[7]_i_14_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_2_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_3_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_4_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_5_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_6_n_0 ;
  wire [0:0]\grdc.rd_data_count_i_reg[7] ;
  wire [5:0]\grdc.rd_data_count_i_reg[7]_0 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_0 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_1 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_2 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_3 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_4 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_5 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_6 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_7 ;
  wire [0:0]\grdc.rd_data_count_i_reg[8] ;
  wire rd_clk;
  wire \reg_out_i_reg[8]_0 ;
  wire [8:0]\reg_out_i_reg[8]_1 ;
  wire [0:0]\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:0]\NLW_grdc.rd_data_count_i_reg[8]_i_2_CO_UNCONNECTED ;
  wire [7:1]\NLW_grdc.rd_data_count_i_reg[8]_i_2_O_UNCONNECTED ;

  LUT5 #(
    .INIT(32'h718E8E71)) 
    \grdc.rd_data_count_i[7]_i_14 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] ),
        .I2(\grdc.rd_data_count_i_reg[7]_0 [0]),
        .I3(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .I4(Q[2]),
        .O(\grdc.rd_data_count_i[7]_i_14_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_2 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [5]),
        .O(\grdc.rd_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_3 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [4]),
        .O(\grdc.rd_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_4 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [3]),
        .O(\grdc.rd_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_5 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [2]),
        .O(\grdc.rd_data_count_i[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_6 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .O(\grdc.rd_data_count_i[7]_i_6_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[7]_i_1 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\grdc.rd_data_count_i_reg[7]_i_1_n_0 ,\grdc.rd_data_count_i_reg[7]_i_1_n_1 ,\grdc.rd_data_count_i_reg[7]_i_1_n_2 ,\grdc.rd_data_count_i_reg[7]_i_1_n_3 ,\grdc.rd_data_count_i_reg[7]_i_1_n_4 ,\grdc.rd_data_count_i_reg[7]_i_1_n_5 ,\grdc.rd_data_count_i_reg[7]_i_1_n_6 ,\grdc.rd_data_count_i_reg[7]_i_1_n_7 }),
        .DI({\grdc.rd_data_count_i[7]_i_2_n_0 ,\grdc.rd_data_count_i[7]_i_3_n_0 ,\grdc.rd_data_count_i[7]_i_4_n_0 ,\grdc.rd_data_count_i[7]_i_5_n_0 ,\grdc.rd_data_count_i[7]_i_6_n_0 ,DI,Q[0]}),
        .O({D[6:0],\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({S[6:2],\grdc.rd_data_count_i[7]_i_14_n_0 ,S[1:0]}));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[8]_i_2 
       (.CI(\grdc.rd_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_grdc.rd_data_count_i_reg[8]_i_2_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_grdc.rd_data_count_i_reg[8]_i_2_O_UNCONNECTED [7:1],D[7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\grdc.rd_data_count_i_reg[8] }));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [4]),
        .Q(Q[4]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [5]),
        .Q(Q[5]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [6]),
        .Q(Q[6]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [7]),
        .Q(Q[7]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [8]),
        .Q(Q[8]),
        .R(\reg_out_i_reg[8]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized0_37
   (Q,
    wrst_busy,
    D,
    wr_clk);
  output [8:0]Q;
  input wrst_busy;
  input [8:0]D;
  input wr_clk;

  wire [8:0]D;
  wire [8:0]Q;
  wire wr_clk;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized0_39
   (D,
    Q,
    DI,
    S,
    \grdc.rd_data_count_i_reg[8] ,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[7]_0 ,
    \reg_out_i_reg[8]_0 ,
    \reg_out_i_reg[8]_1 ,
    rd_clk);
  output [7:0]D;
  output [8:0]Q;
  input [1:0]DI;
  input [6:0]S;
  input [0:0]\grdc.rd_data_count_i_reg[8] ;
  input [0:0]\grdc.rd_data_count_i_reg[7] ;
  input [5:0]\grdc.rd_data_count_i_reg[7]_0 ;
  input \reg_out_i_reg[8]_0 ;
  input [8:0]\reg_out_i_reg[8]_1 ;
  input rd_clk;

  wire [7:0]D;
  wire [1:0]DI;
  wire [8:0]Q;
  wire [6:0]S;
  wire \grdc.rd_data_count_i[7]_i_14_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_2_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_3_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_4_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_5_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_6_n_0 ;
  wire [0:0]\grdc.rd_data_count_i_reg[7] ;
  wire [5:0]\grdc.rd_data_count_i_reg[7]_0 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_0 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_1 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_2 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_3 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_4 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_5 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_6 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_7 ;
  wire [0:0]\grdc.rd_data_count_i_reg[8] ;
  wire rd_clk;
  wire \reg_out_i_reg[8]_0 ;
  wire [8:0]\reg_out_i_reg[8]_1 ;
  wire [0:0]\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:0]\NLW_grdc.rd_data_count_i_reg[8]_i_2_CO_UNCONNECTED ;
  wire [7:1]\NLW_grdc.rd_data_count_i_reg[8]_i_2_O_UNCONNECTED ;

  LUT5 #(
    .INIT(32'h718E8E71)) 
    \grdc.rd_data_count_i[7]_i_14 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] ),
        .I2(\grdc.rd_data_count_i_reg[7]_0 [0]),
        .I3(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .I4(Q[2]),
        .O(\grdc.rd_data_count_i[7]_i_14_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_2 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [5]),
        .O(\grdc.rd_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_3 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [4]),
        .O(\grdc.rd_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_4 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [3]),
        .O(\grdc.rd_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_5 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [2]),
        .O(\grdc.rd_data_count_i[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_6 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .O(\grdc.rd_data_count_i[7]_i_6_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[7]_i_1 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\grdc.rd_data_count_i_reg[7]_i_1_n_0 ,\grdc.rd_data_count_i_reg[7]_i_1_n_1 ,\grdc.rd_data_count_i_reg[7]_i_1_n_2 ,\grdc.rd_data_count_i_reg[7]_i_1_n_3 ,\grdc.rd_data_count_i_reg[7]_i_1_n_4 ,\grdc.rd_data_count_i_reg[7]_i_1_n_5 ,\grdc.rd_data_count_i_reg[7]_i_1_n_6 ,\grdc.rd_data_count_i_reg[7]_i_1_n_7 }),
        .DI({\grdc.rd_data_count_i[7]_i_2_n_0 ,\grdc.rd_data_count_i[7]_i_3_n_0 ,\grdc.rd_data_count_i[7]_i_4_n_0 ,\grdc.rd_data_count_i[7]_i_5_n_0 ,\grdc.rd_data_count_i[7]_i_6_n_0 ,DI,Q[0]}),
        .O({D[6:0],\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({S[6:2],\grdc.rd_data_count_i[7]_i_14_n_0 ,S[1:0]}));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[8]_i_2 
       (.CI(\grdc.rd_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_grdc.rd_data_count_i_reg[8]_i_2_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_grdc.rd_data_count_i_reg[8]_i_2_O_UNCONNECTED [7:1],D[7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\grdc.rd_data_count_i_reg[8] }));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [4]),
        .Q(Q[4]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [5]),
        .Q(Q[5]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [6]),
        .Q(Q[6]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [7]),
        .Q(Q[7]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [8]),
        .Q(Q[8]),
        .R(\reg_out_i_reg[8]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized0_5
   (Q,
    \reg_out_i_reg[0]_0 ,
    wr_pntr_plus1_pf_carry,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 ,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ,
    clr_full,
    wrst_busy,
    D,
    wr_clk);
  output [8:0]Q;
  output \reg_out_i_reg[0]_0 ;
  input wr_pntr_plus1_pf_carry;
  input [8:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 ;
  input [8:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  input clr_full;
  input wrst_busy;
  input [8:0]D;
  input wr_clk;

  wire [8:0]D;
  wire [8:0]Q;
  wire clr_full;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ;
  wire [8:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_8_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_9_n_0 ;
  wire [8:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  wire going_full;
  wire \reg_out_i_reg[0]_0 ;
  wire wr_clk;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'h0000FF80)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_1 
       (.I0(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2_n_0 ),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ),
        .I3(going_full),
        .I4(clr_full),
        .O(\reg_out_i_reg[0]_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [0]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [2]),
        .I3(Q[2]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [6]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [8]),
        .I3(Q[8]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [7]),
        .I5(Q[7]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [3]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [5]),
        .I3(Q[5]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [4]),
        .I5(Q[4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h8000)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5 
       (.I0(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_8_n_0 ),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_9_n_0 ),
        .I3(wr_pntr_plus1_pf_carry),
        .O(going_full));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [3]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [5]),
        .I3(Q[5]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [4]),
        .I5(Q[4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_8 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [6]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [8]),
        .I3(Q[8]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [7]),
        .I5(Q[7]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_9 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [0]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [2]),
        .I3(Q[2]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_9_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized0_7
   (\reg_out_i_reg[8]_0 ,
    D,
    ram_empty_i,
    rd_en,
    Q,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ,
    S,
    \reg_out_i_reg[0]_0 ,
    \reg_out_i_reg[8]_1 ,
    rd_clk);
  output [8:0]\reg_out_i_reg[8]_0 ;
  output [8:0]D;
  input ram_empty_i;
  input rd_en;
  input [1:0]Q;
  input [0:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ;
  input [7:0]S;
  input \reg_out_i_reg[0]_0 ;
  input [8:0]\reg_out_i_reg[8]_1 ;
  input rd_clk;

  wire [8:0]D;
  wire [1:0]Q;
  wire [7:0]S;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[8]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 ;
  wire [0:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ;
  wire p_1_in;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire \reg_out_i_reg[0]_0 ;
  wire [8:0]\reg_out_i_reg[8]_0 ;
  wire [8:0]\reg_out_i_reg[8]_1 ;
  wire [7:0]\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1_CO_UNCONNECTED ;
  wire [7:1]\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1_O_UNCONNECTED ;

  LUT4 #(
    .INIT(16'hAABA)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(Q[1]),
        .I3(Q[0]),
        .O(p_1_in));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[8]_i_2 
       (.I0(\reg_out_i_reg[8]_0 [8]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[8]_i_2_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1 
       (.CI(\reg_out_i_reg[8]_0 [0]),
        .CI_TOP(1'b0),
        .CO({\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 }),
        .DI({\reg_out_i_reg[8]_0 [7:1],p_1_in}),
        .O(D[7:0]),
        .S(S));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1 
       (.CI(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1_O_UNCONNECTED [7:1],D[8]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[8]_i_2_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [0]),
        .Q(\reg_out_i_reg[8]_0 [0]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [1]),
        .Q(\reg_out_i_reg[8]_0 [1]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [2]),
        .Q(\reg_out_i_reg[8]_0 [2]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [3]),
        .Q(\reg_out_i_reg[8]_0 [3]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [4]),
        .Q(\reg_out_i_reg[8]_0 [4]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [5]),
        .Q(\reg_out_i_reg[8]_0 [5]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [6]),
        .Q(\reg_out_i_reg[8]_0 [6]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [7]),
        .Q(\reg_out_i_reg[8]_0 [7]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [8]),
        .Q(\reg_out_i_reg[8]_0 [8]),
        .R(\reg_out_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized1
   (Q,
    wrst_busy,
    D,
    wr_clk);
  output [9:0]Q;
  input wrst_busy;
  input [9:0]D;
  input wr_clk;

  wire [9:0]D;
  wire [9:0]Q;
  wire wr_clk;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[9] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[9]),
        .Q(Q[9]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized1_2
   (DI,
    Q,
    \reg_out_i_reg[7]_0 ,
    S,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[9] ,
    \reg_out_i_reg[9]_0 ,
    D,
    rd_clk);
  output [5:0]DI;
  output [8:0]Q;
  output [0:0]\reg_out_i_reg[7]_0 ;
  output [0:0]S;
  input [0:0]\grdc.rd_data_count_i_reg[7] ;
  input [8:0]\grdc.rd_data_count_i_reg[9] ;
  input \reg_out_i_reg[9]_0 ;
  input [9:0]D;
  input rd_clk;

  wire [9:0]D;
  wire [5:0]DI;
  wire [8:0]Q;
  wire [0:0]S;
  wire [0:0]\grdc.rd_data_count_i_reg[7] ;
  wire [8:0]\grdc.rd_data_count_i_reg[9] ;
  wire rd_clk;
  wire [0:0]\reg_out_i_reg[7]_0 ;
  wire \reg_out_i_reg[9]_0 ;
  wire \reg_out_i_reg_n_0_[9] ;

  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_2 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[9] [5]),
        .O(DI[5]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_3 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[9] [4]),
        .O(DI[4]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_4 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[9] [3]),
        .O(DI[3]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_5 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[9] [2]),
        .O(DI[2]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_6 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[9] [1]),
        .O(DI[1]));
  LUT3 #(
    .INIT(8'h8E)) 
    \grdc.rd_data_count_i[7]_i_7 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] ),
        .I2(\grdc.rd_data_count_i_reg[9] [0]),
        .O(DI[0]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[9]_i_3 
       (.I0(Q[7]),
        .I1(\grdc.rd_data_count_i_reg[9] [6]),
        .O(\reg_out_i_reg[7]_0 ));
  LUT4 #(
    .INIT(16'hD22D)) 
    \grdc.rd_data_count_i[9]_i_4 
       (.I0(Q[8]),
        .I1(\grdc.rd_data_count_i_reg[9] [7]),
        .I2(\grdc.rd_data_count_i_reg[9] [8]),
        .I3(\reg_out_i_reg_n_0_[9] ),
        .O(S));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[9] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[9]),
        .Q(\reg_out_i_reg_n_0_[9] ),
        .R(\reg_out_i_reg[9]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized1_6
   (Q,
    wrst_busy,
    D,
    wr_clk);
  output [9:0]Q;
  input wrst_busy;
  input [9:0]D;
  input wr_clk;

  wire [9:0]D;
  wire [9:0]Q;
  wire wr_clk;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[9] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[9]),
        .Q(Q[9]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized1_8
   (DI,
    Q,
    \reg_out_i_reg[7]_0 ,
    S,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[9] ,
    \reg_out_i_reg[9]_0 ,
    D,
    rd_clk);
  output [5:0]DI;
  output [8:0]Q;
  output [0:0]\reg_out_i_reg[7]_0 ;
  output [0:0]S;
  input [0:0]\grdc.rd_data_count_i_reg[7] ;
  input [8:0]\grdc.rd_data_count_i_reg[9] ;
  input \reg_out_i_reg[9]_0 ;
  input [9:0]D;
  input rd_clk;

  wire [9:0]D;
  wire [5:0]DI;
  wire [8:0]Q;
  wire [0:0]S;
  wire [0:0]\grdc.rd_data_count_i_reg[7] ;
  wire [8:0]\grdc.rd_data_count_i_reg[9] ;
  wire rd_clk;
  wire [0:0]\reg_out_i_reg[7]_0 ;
  wire \reg_out_i_reg[9]_0 ;
  wire \reg_out_i_reg_n_0_[9] ;

  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_2 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[9] [5]),
        .O(DI[5]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_3 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[9] [4]),
        .O(DI[4]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_4 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[9] [3]),
        .O(DI[3]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_5 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[9] [2]),
        .O(DI[2]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_6 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[9] [1]),
        .O(DI[1]));
  LUT3 #(
    .INIT(8'h8E)) 
    \grdc.rd_data_count_i[7]_i_7 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] ),
        .I2(\grdc.rd_data_count_i_reg[9] [0]),
        .O(DI[0]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[9]_i_3 
       (.I0(Q[7]),
        .I1(\grdc.rd_data_count_i_reg[9] [6]),
        .O(\reg_out_i_reg[7]_0 ));
  LUT4 #(
    .INIT(16'hD22D)) 
    \grdc.rd_data_count_i[9]_i_4 
       (.I0(Q[8]),
        .I1(\grdc.rd_data_count_i_reg[9] [7]),
        .I2(\grdc.rd_data_count_i_reg[9] [8]),
        .I3(\reg_out_i_reg_n_0_[9] ),
        .O(S));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[9] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[9]),
        .Q(\reg_out_i_reg_n_0_[9] ),
        .R(\reg_out_i_reg[9]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized2
   (D,
    Q,
    \count_value_i_reg[3] ,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 ,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ,
    rst_d1,
    wrst_busy,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] ,
    wr_en,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_0 ,
    E,
    clr_full,
    \reg_out_i_reg[3]_0 ,
    wr_clk);
  output [1:0]D;
  output [2:0]Q;
  output \count_value_i_reg[3] ;
  input [2:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ;
  input \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 ;
  input [2:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  input rst_d1;
  input wrst_busy;
  input \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] ;
  input wr_en;
  input \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_0 ;
  input [0:0]E;
  input clr_full;
  input [3:0]\reg_out_i_reg[3]_0 ;
  input wr_clk;

  wire [1:0]D;
  wire [0:0]E;
  wire [2:0]Q;
  wire clr_full;
  wire \count_value_i_reg[3] ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ;
  wire [2:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] ;
  wire [2:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 ;
  wire [2:2]rd_pntr_wr;
  wire [3:0]\reg_out_i_reg[3]_0 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wrst_busy;

  LUT6 #(
    .INIT(64'h00000000F8888888)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_1 
       (.I0(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 ),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ),
        .I3(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_0 ),
        .I4(E),
        .I5(clr_full),
        .O(\count_value_i_reg[3] ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [0]),
        .I2(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [2]),
        .I3(rd_pntr_wr),
        .I4(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [0]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [2]),
        .I3(rd_pntr_wr),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h718E8E71)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[3]_i_1 
       (.I0(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2_n_0 ),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [1]),
        .I2(Q[1]),
        .I3(rd_pntr_wr),
        .I4(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [2]),
        .O(D[0]));
  LUT6 #(
    .INIT(64'h2BFF002BD400FFD4)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_1 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [1]),
        .I2(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [2]),
        .I4(rd_pntr_wr),
        .I5(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 ),
        .O(D[1]));
  LUT6 #(
    .INIT(64'h4444444D44444444)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [0]),
        .I2(rst_d1),
        .I3(wrst_busy),
        .I4(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] ),
        .I5(wr_en),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [2]),
        .Q(rd_pntr_wr),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [3]),
        .Q(Q[2]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized2_48
   (D,
    Q,
    ram_empty_i0,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] ,
    rd_en,
    ram_empty_i,
    enb,
    \gen_pf_ic_rc.ram_empty_i_reg_0 ,
    \reg_out_i_reg[0]_0 ,
    \reg_out_i_reg[3]_0 ,
    rd_clk);
  output [1:0]D;
  output [3:0]Q;
  output ram_empty_i0;
  input [3:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  input [1:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] ;
  input rd_en;
  input ram_empty_i;
  input enb;
  input [3:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  input \reg_out_i_reg[0]_0 ;
  input [3:0]\reg_out_i_reg[3]_0 ;
  input rd_clk;

  wire [1:0]D;
  wire [3:0]Q;
  wire enb;
  wire [1:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] ;
  wire \gen_pf_ic_rc.ram_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_3_n_0 ;
  wire [3:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  wire [3:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire rd_en;
  wire \reg_out_i_reg[0]_0 ;
  wire [3:0]\reg_out_i_reg[3]_0 ;

  LUT6 #(
    .INIT(64'h6666666699999969)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[0]_i_1 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] [1]),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] [0]),
        .I4(rd_en),
        .I5(ram_empty_i),
        .O(D[0]));
  LUT5 #(
    .INIT(32'hD42B2BD4)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[1]_i_1 
       (.I0(Q[0]),
        .I1(enb),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I3(Q[1]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hFF8080802020FF20)) 
    \gen_pf_ic_rc.ram_empty_i_i_1 
       (.I0(enb),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [3]),
        .I2(\gen_pf_ic_rc.ram_empty_i_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.ram_empty_i_i_3_n_0 ),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .I5(Q[3]),
        .O(ram_empty_i0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_2 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [2]),
        .I3(Q[2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_0 [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_3 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .I3(Q[2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized2_54
   (D,
    Q,
    \count_value_i_reg[3] ,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 ,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ,
    rst_d1,
    wrst_busy,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] ,
    wr_en,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_0 ,
    E,
    clr_full,
    \reg_out_i_reg[3]_0 ,
    wr_clk);
  output [1:0]D;
  output [2:0]Q;
  output \count_value_i_reg[3] ;
  input [2:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ;
  input \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 ;
  input [2:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  input rst_d1;
  input wrst_busy;
  input \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] ;
  input wr_en;
  input \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_0 ;
  input [0:0]E;
  input clr_full;
  input [3:0]\reg_out_i_reg[3]_0 ;
  input wr_clk;

  wire [1:0]D;
  wire [0:0]E;
  wire [2:0]Q;
  wire clr_full;
  wire \count_value_i_reg[3] ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ;
  wire [2:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] ;
  wire [2:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 ;
  wire [2:2]rd_pntr_wr;
  wire [3:0]\reg_out_i_reg[3]_0 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wrst_busy;

  LUT6 #(
    .INIT(64'h00000000F8888888)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_1 
       (.I0(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 ),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ),
        .I3(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_0 ),
        .I4(E),
        .I5(clr_full),
        .O(\count_value_i_reg[3] ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [0]),
        .I2(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [2]),
        .I3(rd_pntr_wr),
        .I4(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [0]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [2]),
        .I3(rd_pntr_wr),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h718E8E71)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[3]_i_1 
       (.I0(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2_n_0 ),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [1]),
        .I2(Q[1]),
        .I3(rd_pntr_wr),
        .I4(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [2]),
        .O(D[0]));
  LUT6 #(
    .INIT(64'h2BFF002BD400FFD4)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_1 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [1]),
        .I2(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [2]),
        .I4(rd_pntr_wr),
        .I5(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 ),
        .O(D[1]));
  LUT6 #(
    .INIT(64'h4444444D44444444)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [0]),
        .I2(rst_d1),
        .I3(wrst_busy),
        .I4(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] ),
        .I5(wr_en),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [2]),
        .Q(rd_pntr_wr),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [3]),
        .Q(Q[2]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized2_56
   (D,
    Q,
    ram_empty_i0,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] ,
    rd_en,
    ram_empty_i,
    enb,
    \gen_pf_ic_rc.ram_empty_i_reg_0 ,
    \reg_out_i_reg[0]_0 ,
    \reg_out_i_reg[3]_0 ,
    rd_clk);
  output [1:0]D;
  output [3:0]Q;
  output ram_empty_i0;
  input [3:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  input [1:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] ;
  input rd_en;
  input ram_empty_i;
  input enb;
  input [3:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  input \reg_out_i_reg[0]_0 ;
  input [3:0]\reg_out_i_reg[3]_0 ;
  input rd_clk;

  wire [1:0]D;
  wire [3:0]Q;
  wire enb;
  wire [1:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] ;
  wire \gen_pf_ic_rc.ram_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_3_n_0 ;
  wire [3:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  wire [3:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire rd_en;
  wire \reg_out_i_reg[0]_0 ;
  wire [3:0]\reg_out_i_reg[3]_0 ;

  LUT6 #(
    .INIT(64'h6666666699999969)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[0]_i_1 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] [1]),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] [0]),
        .I4(rd_en),
        .I5(ram_empty_i),
        .O(D[0]));
  LUT5 #(
    .INIT(32'hD42B2BD4)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[1]_i_1 
       (.I0(Q[0]),
        .I1(enb),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I3(Q[1]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hFF8080802020FF20)) 
    \gen_pf_ic_rc.ram_empty_i_i_1 
       (.I0(enb),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [3]),
        .I2(\gen_pf_ic_rc.ram_empty_i_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.ram_empty_i_i_3_n_0 ),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .I5(Q[3]),
        .O(ram_empty_i0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_2 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [2]),
        .I3(Q[2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_0 [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_3 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .I3(Q[2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized3
   (D,
    Q,
    \gwdc.wr_data_count_i_reg[4] ,
    wrst_busy,
    \reg_out_i_reg[4]_0 ,
    wr_clk);
  output [2:0]D;
  output [2:0]Q;
  input [4:0]\gwdc.wr_data_count_i_reg[4] ;
  input wrst_busy;
  input [4:0]\reg_out_i_reg[4]_0 ;
  input wr_clk;

  wire [2:0]D;
  wire [2:0]Q;
  wire \gwdc.wr_data_count_i[4]_i_2_n_0 ;
  wire [4:0]\gwdc.wr_data_count_i_reg[4] ;
  wire [4:0]\reg_out_i_reg[4]_0 ;
  wire \reg_out_i_reg_n_0_[3] ;
  wire \reg_out_i_reg_n_0_[4] ;
  wire wr_clk;
  wire wrst_busy;

  LUT4 #(
    .INIT(16'h2DD2)) 
    \gwdc.wr_data_count_i[1]_i_1 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[4] [0]),
        .I2(Q[1]),
        .I3(\gwdc.wr_data_count_i_reg[4] [1]),
        .O(D[0]));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT3 #(
    .INIT(8'h69)) 
    \gwdc.wr_data_count_i[3]_i_1 
       (.I0(\gwdc.wr_data_count_i[4]_i_2_n_0 ),
        .I1(\reg_out_i_reg_n_0_[3] ),
        .I2(\gwdc.wr_data_count_i_reg[4] [3]),
        .O(D[1]));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT5 #(
    .INIT(32'h718E8E71)) 
    \gwdc.wr_data_count_i[4]_i_1 
       (.I0(\gwdc.wr_data_count_i[4]_i_2_n_0 ),
        .I1(\gwdc.wr_data_count_i_reg[4] [3]),
        .I2(\reg_out_i_reg_n_0_[3] ),
        .I3(\reg_out_i_reg_n_0_[4] ),
        .I4(\gwdc.wr_data_count_i_reg[4] [4]),
        .O(D[2]));
  LUT6 #(
    .INIT(64'hD4DD4444DDDDD4DD)) 
    \gwdc.wr_data_count_i[4]_i_2 
       (.I0(Q[2]),
        .I1(\gwdc.wr_data_count_i_reg[4] [2]),
        .I2(\gwdc.wr_data_count_i_reg[4] [0]),
        .I3(Q[0]),
        .I4(\gwdc.wr_data_count_i_reg[4] [1]),
        .I5(Q[1]),
        .O(\gwdc.wr_data_count_i[4]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [3]),
        .Q(\reg_out_i_reg_n_0_[3] ),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [4]),
        .Q(\reg_out_i_reg_n_0_[4] ),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized3_49
   (D,
    Q,
    \reg_out_i_reg[3]_0 ,
    \grdc.rd_data_count_i_reg[4] ,
    \grdc.rd_data_count_i_reg[1] ,
    \reg_out_i_reg[4]_0 ,
    \reg_out_i_reg[4]_1 ,
    rd_clk);
  output [0:0]D;
  output [4:0]Q;
  output \reg_out_i_reg[3]_0 ;
  input [2:0]\grdc.rd_data_count_i_reg[4] ;
  input [1:0]\grdc.rd_data_count_i_reg[1] ;
  input \reg_out_i_reg[4]_0 ;
  input [4:0]\reg_out_i_reg[4]_1 ;
  input rd_clk;

  wire [0:0]D;
  wire [4:0]Q;
  wire [1:0]\grdc.rd_data_count_i_reg[1] ;
  wire [2:0]\grdc.rd_data_count_i_reg[4] ;
  wire rd_clk;
  wire \reg_out_i_reg[3]_0 ;
  wire \reg_out_i_reg[4]_0 ;
  wire [4:0]\reg_out_i_reg[4]_1 ;

  LUT6 #(
    .INIT(64'hC33C96696996C33C)) 
    \grdc.rd_data_count_i[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(\grdc.rd_data_count_i_reg[4] [1]),
        .I3(\grdc.rd_data_count_i_reg[1] [1]),
        .I4(\grdc.rd_data_count_i_reg[1] [0]),
        .I5(\grdc.rd_data_count_i_reg[4] [0]),
        .O(D));
  LUT2 #(
    .INIT(4'h9)) 
    \grdc.rd_data_count_i[4]_i_5 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[4] [2]),
        .O(\reg_out_i_reg[3]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_1 [0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_1 [1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_1 [2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_1 [3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_1 [4]),
        .Q(Q[4]),
        .R(\reg_out_i_reg[4]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized3_55
   (D,
    Q,
    \gwdc.wr_data_count_i_reg[4] ,
    wrst_busy,
    \reg_out_i_reg[4]_0 ,
    wr_clk);
  output [2:0]D;
  output [2:0]Q;
  input [4:0]\gwdc.wr_data_count_i_reg[4] ;
  input wrst_busy;
  input [4:0]\reg_out_i_reg[4]_0 ;
  input wr_clk;

  wire [2:0]D;
  wire [2:0]Q;
  wire \gwdc.wr_data_count_i[4]_i_2_n_0 ;
  wire [4:0]\gwdc.wr_data_count_i_reg[4] ;
  wire [4:0]\reg_out_i_reg[4]_0 ;
  wire \reg_out_i_reg_n_0_[3] ;
  wire \reg_out_i_reg_n_0_[4] ;
  wire wr_clk;
  wire wrst_busy;

  LUT4 #(
    .INIT(16'h2DD2)) 
    \gwdc.wr_data_count_i[1]_i_1 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[4] [0]),
        .I2(Q[1]),
        .I3(\gwdc.wr_data_count_i_reg[4] [1]),
        .O(D[0]));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT3 #(
    .INIT(8'h69)) 
    \gwdc.wr_data_count_i[3]_i_1 
       (.I0(\gwdc.wr_data_count_i[4]_i_2_n_0 ),
        .I1(\reg_out_i_reg_n_0_[3] ),
        .I2(\gwdc.wr_data_count_i_reg[4] [3]),
        .O(D[1]));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT5 #(
    .INIT(32'h718E8E71)) 
    \gwdc.wr_data_count_i[4]_i_1 
       (.I0(\gwdc.wr_data_count_i[4]_i_2_n_0 ),
        .I1(\gwdc.wr_data_count_i_reg[4] [3]),
        .I2(\reg_out_i_reg_n_0_[3] ),
        .I3(\reg_out_i_reg_n_0_[4] ),
        .I4(\gwdc.wr_data_count_i_reg[4] [4]),
        .O(D[2]));
  LUT6 #(
    .INIT(64'hD4DD4444DDDDD4DD)) 
    \gwdc.wr_data_count_i[4]_i_2 
       (.I0(Q[2]),
        .I1(\gwdc.wr_data_count_i_reg[4] [2]),
        .I2(\gwdc.wr_data_count_i_reg[4] [0]),
        .I3(Q[0]),
        .I4(\gwdc.wr_data_count_i_reg[4] [1]),
        .I5(Q[1]),
        .O(\gwdc.wr_data_count_i[4]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [3]),
        .Q(\reg_out_i_reg_n_0_[3] ),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [4]),
        .Q(\reg_out_i_reg_n_0_[4] ),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module zynq_bd_C2C2_0_xpm_fifo_reg_vec__parameterized3_57
   (D,
    Q,
    \reg_out_i_reg[3]_0 ,
    \grdc.rd_data_count_i_reg[4] ,
    \grdc.rd_data_count_i_reg[1] ,
    \reg_out_i_reg[4]_0 ,
    \reg_out_i_reg[4]_1 ,
    rd_clk);
  output [0:0]D;
  output [4:0]Q;
  output \reg_out_i_reg[3]_0 ;
  input [2:0]\grdc.rd_data_count_i_reg[4] ;
  input [1:0]\grdc.rd_data_count_i_reg[1] ;
  input \reg_out_i_reg[4]_0 ;
  input [4:0]\reg_out_i_reg[4]_1 ;
  input rd_clk;

  wire [0:0]D;
  wire [4:0]Q;
  wire [1:0]\grdc.rd_data_count_i_reg[1] ;
  wire [2:0]\grdc.rd_data_count_i_reg[4] ;
  wire rd_clk;
  wire \reg_out_i_reg[3]_0 ;
  wire \reg_out_i_reg[4]_0 ;
  wire [4:0]\reg_out_i_reg[4]_1 ;

  LUT6 #(
    .INIT(64'hC33C96696996C33C)) 
    \grdc.rd_data_count_i[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(\grdc.rd_data_count_i_reg[4] [1]),
        .I3(\grdc.rd_data_count_i_reg[1] [1]),
        .I4(\grdc.rd_data_count_i_reg[1] [0]),
        .I5(\grdc.rd_data_count_i_reg[4] [0]),
        .O(D));
  LUT2 #(
    .INIT(4'h9)) 
    \grdc.rd_data_count_i[4]_i_5 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[4] [2]),
        .O(\reg_out_i_reg[3]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_1 [0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_1 [1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_1 [2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_1 [3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_1 [4]),
        .Q(Q[4]),
        .R(\reg_out_i_reg[4]_0 ));
endmodule

module zynq_bd_C2C2_0_xpm_fifo_rst
   (\gen_rst_ic.fifo_rd_rst_ic_reg_0 ,
    wrst_busy,
    E,
    wr_rst_busy,
    SR,
    \gen_rst_ic.fifo_rd_rst_ic_reg_1 ,
    underflow_i0,
    rd_clk,
    wr_clk,
    rst,
    wr_en,
    \count_value_i_reg[3] ,
    rst_d1,
    ram_empty_i,
    Q,
    rd_en,
    \guf.underflow_i_reg );
  output \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  output wrst_busy;
  output [0:0]E;
  output wr_rst_busy;
  output [0:0]SR;
  output [0:0]\gen_rst_ic.fifo_rd_rst_ic_reg_1 ;
  output underflow_i0;
  input rd_clk;
  input wr_clk;
  input rst;
  input wr_en;
  input \count_value_i_reg[3] ;
  input rst_d1;
  input ram_empty_i;
  input [1:0]Q;
  input rd_en;
  input \guf.underflow_i_reg ;

  wire \/i__n_0 ;
  wire [0:0]E;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i_reg[3] ;
  (* RTL_KEEP = "yes" *) wire [1:0]\gen_rst_ic.curr_rrst_state ;
  wire \gen_rst_ic.fifo_rd_rst_i ;
  wire \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  wire [0:0]\gen_rst_ic.fifo_rd_rst_ic_reg_1 ;
  wire \gen_rst_ic.fifo_rd_rst_wr_i ;
  wire \gen_rst_ic.fifo_wr_rst_ic ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_rd ;
  wire [1:0]\gen_rst_ic.next_rrst_state ;
  wire \gen_rst_ic.rst_seq_reentered_i_1_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_i_2_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_reg_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ;
  wire \guf.underflow_i_reg ;
  wire p_0_in;
  wire \power_on_rst_reg_n_0_[0] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire rst_d1;
  wire rst_i__0;
  wire underflow_i0;
  wire wr_clk;
  wire wr_en;
  wire wr_rst_busy;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'h00010116)) 
    \/i_ 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\/i__n_0 ));
  LUT6 #(
    .INIT(64'h03030200FFFFFFFF)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I5(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFEFEFEEE)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I3(rst),
        .I4(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFF0EEE0FFFFEEE0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I5(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h000C0008)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I1(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000004400000044)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I3(rst),
        .I4(p_0_in),
        .I5(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1 
       (.I0(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0002)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1 
       (.I0(\gen_rst_ic.curr_rrst_state [0]),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .O(\gen_rst_ic.next_rrst_state [1]));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [0]),
        .Q(\gen_rst_ic.curr_rrst_state [0]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [1]),
        .Q(\gen_rst_ic.curr_rrst_state [1]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h06)) 
    \__0/i_ 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.next_rrst_state [0]));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT5 #(
    .INIT(32'hAAAAAEAE)) 
    \count_value_i[1]_i_1__2 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(ram_empty_i),
        .I2(Q[1]),
        .I3(rd_en),
        .I4(Q[0]),
        .O(SR));
  LUT3 #(
    .INIT(8'h3E)) 
    \gen_rst_ic.fifo_rd_rst_ic_i_1 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.fifo_rd_rst_i ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_rd_rst_ic_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_rd_rst_i ),
        .Q(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFEAFFFFFFEA0000)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I2(rst_i__0),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I4(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ),
        .I5(\gen_rst_ic.fifo_wr_rst_ic ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_2 
       (.I0(p_0_in),
        .I1(rst),
        .O(rst_i__0));
  LUT5 #(
    .INIT(32'h00010116)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_3 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_wr_rst_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ),
        .Q(\gen_rst_ic.fifo_wr_rst_ic ),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_sync_rst \gen_rst_ic.rrst_wr_inst 
       (.dest_clk(wr_clk),
        .dest_rst(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .src_rst(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \gen_rst_ic.rst_seq_reentered_i_1 
       (.I0(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ),
        .I1(rst),
        .I2(p_0_in),
        .O(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00010000)) 
    \gen_rst_ic.rst_seq_reentered_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I5(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.rst_seq_reentered_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ),
        .Q(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEFFFEF00)) 
    \gen_rst_ic.wr_rst_busy_ic_i_1 
       (.I0(rst),
        .I1(p_0_in),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I3(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ),
        .I4(wrst_busy),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000116)) 
    \gen_rst_ic.wr_rst_busy_ic_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.wr_rst_busy_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ),
        .Q(wrst_busy),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_sync_rst__26 \gen_rst_ic.wrst_rd_inst 
       (.dest_clk(rd_clk),
        .dest_rst(\gen_rst_ic.fifo_wr_rst_rd ),
        .src_rst(\gen_rst_ic.fifo_wr_rst_ic ));
  LUT4 #(
    .INIT(16'h0002)) 
    \gen_sdpram.xpm_memory_base_inst_i_1 
       (.I0(wr_en),
        .I1(\count_value_i_reg[3] ),
        .I2(wrst_busy),
        .I3(rst_d1),
        .O(E));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT3 #(
    .INIT(8'hAB)) 
    \grdc.rd_data_count_i[4]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(Q[0]),
        .I2(Q[1]),
        .O(\gen_rst_ic.fifo_rd_rst_ic_reg_1 ));
  LUT3 #(
    .INIT(8'hE0)) 
    \guf.underflow_i_i_1 
       (.I0(\guf.underflow_i_reg ),
        .I1(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I2(rd_en),
        .O(underflow_i0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(\power_on_rst_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\power_on_rst_reg_n_0_[0] ),
        .Q(p_0_in),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    wr_rst_busy_INST_0
       (.I0(wrst_busy),
        .I1(rst_d1),
        .O(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_rst" *) 
module zynq_bd_C2C2_0_xpm_fifo_rst__xdcDup__1
   (\gen_rst_ic.fifo_rd_rst_ic_reg_0 ,
    wrst_busy,
    wr_pntr_plus1_pf_carry,
    wr_rst_busy,
    SR,
    \gen_rst_ic.fifo_rd_rst_ic_reg_1 ,
    underflow_i0,
    rd_clk,
    wr_clk,
    rst,
    wr_en,
    \count_value_i_reg[7] ,
    rst_d1,
    ram_empty_i,
    Q,
    rd_en,
    \guf.underflow_i_reg );
  output \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  output wrst_busy;
  output wr_pntr_plus1_pf_carry;
  output wr_rst_busy;
  output [0:0]SR;
  output [0:0]\gen_rst_ic.fifo_rd_rst_ic_reg_1 ;
  output underflow_i0;
  input rd_clk;
  input wr_clk;
  input rst;
  input wr_en;
  input \count_value_i_reg[7] ;
  input rst_d1;
  input ram_empty_i;
  input [1:0]Q;
  input rd_en;
  input \guf.underflow_i_reg ;

  wire \/i__n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i_reg[7] ;
  (* RTL_KEEP = "yes" *) wire [1:0]\gen_rst_ic.curr_rrst_state ;
  wire \gen_rst_ic.fifo_rd_rst_i ;
  wire \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  wire [0:0]\gen_rst_ic.fifo_rd_rst_ic_reg_1 ;
  wire \gen_rst_ic.fifo_rd_rst_wr_i ;
  wire \gen_rst_ic.fifo_wr_rst_ic ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_rd ;
  wire [1:0]\gen_rst_ic.next_rrst_state ;
  wire \gen_rst_ic.rst_seq_reentered_i_1_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_i_2_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_reg_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ;
  wire \guf.underflow_i_reg ;
  wire p_0_in;
  wire \power_on_rst_reg_n_0_[0] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire rst_d1;
  wire rst_i__0;
  wire underflow_i0;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wr_rst_busy;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'h00010116)) 
    \/i_ 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\/i__n_0 ));
  LUT6 #(
    .INIT(64'h03030200FFFFFFFF)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I5(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFEFEFEEE)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I3(rst),
        .I4(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFF0EEE0FFFFEEE0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I5(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h000C0008)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I1(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000004400000044)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I3(rst),
        .I4(p_0_in),
        .I5(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1 
       (.I0(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0002)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1 
       (.I0(\gen_rst_ic.curr_rrst_state [0]),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .O(\gen_rst_ic.next_rrst_state [1]));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [0]),
        .Q(\gen_rst_ic.curr_rrst_state [0]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [1]),
        .Q(\gen_rst_ic.curr_rrst_state [1]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h06)) 
    \__0/i_ 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.next_rrst_state [0]));
  (* SOFT_HLUTNM = "soft_lutpair204" *) 
  LUT5 #(
    .INIT(32'hAAAAAEAE)) 
    \count_value_i[1]_i_1__2 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(ram_empty_i),
        .I2(Q[1]),
        .I3(rd_en),
        .I4(Q[0]),
        .O(SR));
  LUT3 #(
    .INIT(8'h3E)) 
    \gen_rst_ic.fifo_rd_rst_ic_i_1 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.fifo_rd_rst_i ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_rd_rst_ic_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_rd_rst_i ),
        .Q(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFEAFFFFFFEA0000)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I2(rst_i__0),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I4(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ),
        .I5(\gen_rst_ic.fifo_wr_rst_ic ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair205" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_2 
       (.I0(p_0_in),
        .I1(rst),
        .O(rst_i__0));
  LUT5 #(
    .INIT(32'h00010116)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_3 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_wr_rst_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ),
        .Q(\gen_rst_ic.fifo_wr_rst_ic ),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_sync_rst__15 \gen_rst_ic.rrst_wr_inst 
       (.dest_clk(wr_clk),
        .dest_rst(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .src_rst(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ));
  (* SOFT_HLUTNM = "soft_lutpair205" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \gen_rst_ic.rst_seq_reentered_i_1 
       (.I0(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ),
        .I1(rst),
        .I2(p_0_in),
        .O(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00010000)) 
    \gen_rst_ic.rst_seq_reentered_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I5(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.rst_seq_reentered_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ),
        .Q(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEFFFEF00)) 
    \gen_rst_ic.wr_rst_busy_ic_i_1 
       (.I0(rst),
        .I1(p_0_in),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I3(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ),
        .I4(wrst_busy),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000116)) 
    \gen_rst_ic.wr_rst_busy_ic_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.wr_rst_busy_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ),
        .Q(wrst_busy),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_sync_rst__14 \gen_rst_ic.wrst_rd_inst 
       (.dest_clk(rd_clk),
        .dest_rst(\gen_rst_ic.fifo_wr_rst_rd ),
        .src_rst(\gen_rst_ic.fifo_wr_rst_ic ));
  LUT4 #(
    .INIT(16'h0002)) 
    \gen_sdpram.xpm_memory_base_inst_i_1 
       (.I0(wr_en),
        .I1(\count_value_i_reg[7] ),
        .I2(wrst_busy),
        .I3(rst_d1),
        .O(wr_pntr_plus1_pf_carry));
  (* SOFT_HLUTNM = "soft_lutpair204" *) 
  LUT3 #(
    .INIT(8'hAB)) 
    \grdc.rd_data_count_i[8]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(Q[0]),
        .I2(Q[1]),
        .O(\gen_rst_ic.fifo_rd_rst_ic_reg_1 ));
  LUT3 #(
    .INIT(8'hE0)) 
    \guf.underflow_i_i_1 
       (.I0(\guf.underflow_i_reg ),
        .I1(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I2(rd_en),
        .O(underflow_i0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(\power_on_rst_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\power_on_rst_reg_n_0_[0] ),
        .Q(p_0_in),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    wr_rst_busy_INST_0
       (.I0(wrst_busy),
        .I1(rst_d1),
        .O(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_rst" *) 
module zynq_bd_C2C2_0_xpm_fifo_rst__xdcDup__2
   (\gen_rst_ic.fifo_rd_rst_ic_reg_0 ,
    wrst_busy,
    wr_pntr_plus1_pf_carry,
    wr_rst_busy,
    SR,
    \gen_rst_ic.fifo_rd_rst_ic_reg_1 ,
    underflow_i0,
    rd_clk,
    wr_clk,
    rst,
    wr_en,
    \count_value_i_reg[7] ,
    rst_d1,
    ram_empty_i,
    Q,
    rd_en,
    \guf.underflow_i_reg );
  output \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  output wrst_busy;
  output wr_pntr_plus1_pf_carry;
  output wr_rst_busy;
  output [0:0]SR;
  output [0:0]\gen_rst_ic.fifo_rd_rst_ic_reg_1 ;
  output underflow_i0;
  input rd_clk;
  input wr_clk;
  input rst;
  input wr_en;
  input \count_value_i_reg[7] ;
  input rst_d1;
  input ram_empty_i;
  input [1:0]Q;
  input rd_en;
  input \guf.underflow_i_reg ;

  wire \/i__n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i_reg[7] ;
  (* RTL_KEEP = "yes" *) wire [1:0]\gen_rst_ic.curr_rrst_state ;
  wire \gen_rst_ic.fifo_rd_rst_i ;
  wire \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  wire [0:0]\gen_rst_ic.fifo_rd_rst_ic_reg_1 ;
  wire \gen_rst_ic.fifo_rd_rst_wr_i ;
  wire \gen_rst_ic.fifo_wr_rst_ic ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_rd ;
  wire [1:0]\gen_rst_ic.next_rrst_state ;
  wire \gen_rst_ic.rst_seq_reentered_i_1_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_i_2_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_reg_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ;
  wire \guf.underflow_i_reg ;
  wire p_0_in;
  wire \power_on_rst_reg_n_0_[0] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire rst_d1;
  wire rst_i__0;
  wire underflow_i0;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wr_rst_busy;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'h00010116)) 
    \/i_ 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\/i__n_0 ));
  LUT6 #(
    .INIT(64'h03030200FFFFFFFF)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I5(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFEFEFEEE)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I3(rst),
        .I4(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFF0EEE0FFFFEEE0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I5(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h000C0008)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I1(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000004400000044)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I3(rst),
        .I4(p_0_in),
        .I5(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1 
       (.I0(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0002)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1 
       (.I0(\gen_rst_ic.curr_rrst_state [0]),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .O(\gen_rst_ic.next_rrst_state [1]));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [0]),
        .Q(\gen_rst_ic.curr_rrst_state [0]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [1]),
        .Q(\gen_rst_ic.curr_rrst_state [1]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h06)) 
    \__0/i_ 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.next_rrst_state [0]));
  (* SOFT_HLUTNM = "soft_lutpair172" *) 
  LUT5 #(
    .INIT(32'hAAAAAEAE)) 
    \count_value_i[1]_i_1__2 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(ram_empty_i),
        .I2(Q[1]),
        .I3(rd_en),
        .I4(Q[0]),
        .O(SR));
  LUT3 #(
    .INIT(8'h3E)) 
    \gen_rst_ic.fifo_rd_rst_ic_i_1 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.fifo_rd_rst_i ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_rd_rst_ic_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_rd_rst_i ),
        .Q(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFEAFFFFFFEA0000)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I2(rst_i__0),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I4(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ),
        .I5(\gen_rst_ic.fifo_wr_rst_ic ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair173" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_2 
       (.I0(p_0_in),
        .I1(rst),
        .O(rst_i__0));
  LUT5 #(
    .INIT(32'h00010116)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_3 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_wr_rst_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ),
        .Q(\gen_rst_ic.fifo_wr_rst_ic ),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_sync_rst__17 \gen_rst_ic.rrst_wr_inst 
       (.dest_clk(wr_clk),
        .dest_rst(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .src_rst(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ));
  (* SOFT_HLUTNM = "soft_lutpair173" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \gen_rst_ic.rst_seq_reentered_i_1 
       (.I0(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ),
        .I1(rst),
        .I2(p_0_in),
        .O(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00010000)) 
    \gen_rst_ic.rst_seq_reentered_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I5(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.rst_seq_reentered_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ),
        .Q(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEFFFEF00)) 
    \gen_rst_ic.wr_rst_busy_ic_i_1 
       (.I0(rst),
        .I1(p_0_in),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I3(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ),
        .I4(wrst_busy),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000116)) 
    \gen_rst_ic.wr_rst_busy_ic_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.wr_rst_busy_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ),
        .Q(wrst_busy),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_sync_rst__16 \gen_rst_ic.wrst_rd_inst 
       (.dest_clk(rd_clk),
        .dest_rst(\gen_rst_ic.fifo_wr_rst_rd ),
        .src_rst(\gen_rst_ic.fifo_wr_rst_ic ));
  LUT4 #(
    .INIT(16'h0002)) 
    \gen_sdpram.xpm_memory_base_inst_i_1 
       (.I0(wr_en),
        .I1(\count_value_i_reg[7] ),
        .I2(wrst_busy),
        .I3(rst_d1),
        .O(wr_pntr_plus1_pf_carry));
  (* SOFT_HLUTNM = "soft_lutpair172" *) 
  LUT3 #(
    .INIT(8'hAB)) 
    \grdc.rd_data_count_i[8]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(Q[0]),
        .I2(Q[1]),
        .O(\gen_rst_ic.fifo_rd_rst_ic_reg_1 ));
  LUT3 #(
    .INIT(8'hE0)) 
    \guf.underflow_i_i_1 
       (.I0(\guf.underflow_i_reg ),
        .I1(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I2(rd_en),
        .O(underflow_i0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(\power_on_rst_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\power_on_rst_reg_n_0_[0] ),
        .Q(p_0_in),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    wr_rst_busy_INST_0
       (.I0(wrst_busy),
        .I1(rst_d1),
        .O(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_rst" *) 
module zynq_bd_C2C2_0_xpm_fifo_rst__xdcDup__3
   (\gen_rst_ic.fifo_rd_rst_ic_reg_0 ,
    wrst_busy,
    wr_pntr_plus1_pf_carry,
    wr_rst_busy,
    SR,
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ,
    underflow_i0,
    rd_clk,
    wr_clk,
    rst,
    wr_en,
    \count_value_i_reg[8] ,
    rst_d1,
    ram_empty_i,
    rd_en,
    Q,
    \guf.underflow_i_reg );
  output \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  output wrst_busy;
  output wr_pntr_plus1_pf_carry;
  output wr_rst_busy;
  output [0:0]SR;
  output [0:0]\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ;
  output underflow_i0;
  input rd_clk;
  input wr_clk;
  input rst;
  input wr_en;
  input \count_value_i_reg[8] ;
  input rst_d1;
  input ram_empty_i;
  input rd_en;
  input [1:0]Q;
  input \guf.underflow_i_reg ;

  wire \/i__n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ;
  wire [0:0]\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i_reg[8] ;
  (* RTL_KEEP = "yes" *) wire [1:0]\gen_rst_ic.curr_rrst_state ;
  wire \gen_rst_ic.fifo_rd_rst_i ;
  wire \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  wire \gen_rst_ic.fifo_rd_rst_wr_i ;
  wire \gen_rst_ic.fifo_wr_rst_ic ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_rd ;
  wire [1:0]\gen_rst_ic.next_rrst_state ;
  wire \gen_rst_ic.rst_seq_reentered_i_1_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_i_2_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_reg_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ;
  wire \guf.underflow_i_reg ;
  wire p_0_in;
  wire \power_on_rst_reg_n_0_[0] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire rst_d1;
  wire rst_i__0;
  wire underflow_i0;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wr_rst_busy;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'h00010116)) 
    \/i_ 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\/i__n_0 ));
  LUT6 #(
    .INIT(64'h03030200FFFFFFFF)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I5(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFEFEFEEE)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I3(rst),
        .I4(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFF0EEE0FFFFEEE0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I5(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h000C0008)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I1(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000004400000044)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I3(rst),
        .I4(p_0_in),
        .I5(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1 
       (.I0(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0002)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1 
       (.I0(\gen_rst_ic.curr_rrst_state [0]),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .O(\gen_rst_ic.next_rrst_state [1]));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [0]),
        .Q(\gen_rst_ic.curr_rrst_state [0]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [1]),
        .Q(\gen_rst_ic.curr_rrst_state [1]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h06)) 
    \__0/i_ 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.next_rrst_state [0]));
  (* SOFT_HLUTNM = "soft_lutpair342" *) 
  LUT5 #(
    .INIT(32'hFFFF000A)) 
    \count_value_i[1]_i_1__2 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .O(SR));
  LUT3 #(
    .INIT(8'h3E)) 
    \gen_rst_ic.fifo_rd_rst_ic_i_1 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.fifo_rd_rst_i ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_rd_rst_ic_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_rd_rst_i ),
        .Q(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFEAFFFFFFEA0000)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I2(rst_i__0),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I4(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ),
        .I5(\gen_rst_ic.fifo_wr_rst_ic ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair343" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_2 
       (.I0(p_0_in),
        .I1(rst),
        .O(rst_i__0));
  LUT5 #(
    .INIT(32'h00010116)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_3 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_wr_rst_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ),
        .Q(\gen_rst_ic.fifo_wr_rst_ic ),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_sync_rst__19 \gen_rst_ic.rrst_wr_inst 
       (.dest_clk(wr_clk),
        .dest_rst(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .src_rst(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ));
  (* SOFT_HLUTNM = "soft_lutpair343" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \gen_rst_ic.rst_seq_reentered_i_1 
       (.I0(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ),
        .I1(rst),
        .I2(p_0_in),
        .O(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00010000)) 
    \gen_rst_ic.rst_seq_reentered_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I5(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.rst_seq_reentered_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ),
        .Q(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEFFFEF00)) 
    \gen_rst_ic.wr_rst_busy_ic_i_1 
       (.I0(rst),
        .I1(p_0_in),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I3(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ),
        .I4(wrst_busy),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000116)) 
    \gen_rst_ic.wr_rst_busy_ic_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.wr_rst_busy_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ),
        .Q(wrst_busy),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_sync_rst__18 \gen_rst_ic.wrst_rd_inst 
       (.dest_clk(rd_clk),
        .dest_rst(\gen_rst_ic.fifo_wr_rst_rd ),
        .src_rst(\gen_rst_ic.fifo_wr_rst_ic ));
  LUT4 #(
    .INIT(16'h0002)) 
    \gen_sdpram.xpm_memory_base_inst_i_1 
       (.I0(wr_en),
        .I1(\count_value_i_reg[8] ),
        .I2(wrst_busy),
        .I3(rst_d1),
        .O(wr_pntr_plus1_pf_carry));
  (* SOFT_HLUTNM = "soft_lutpair342" *) 
  LUT3 #(
    .INIT(8'hF1)) 
    \grdc.rd_data_count_i[9]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .O(\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ));
  LUT3 #(
    .INIT(8'hE0)) 
    \guf.underflow_i_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(\guf.underflow_i_reg ),
        .I2(rd_en),
        .O(underflow_i0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(\power_on_rst_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\power_on_rst_reg_n_0_[0] ),
        .Q(p_0_in),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    wr_rst_busy_INST_0
       (.I0(wrst_busy),
        .I1(rst_d1),
        .O(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_rst" *) 
module zynq_bd_C2C2_0_xpm_fifo_rst__xdcDup__4
   (\gen_rst_ic.fifo_rd_rst_ic_reg_0 ,
    wrst_busy,
    wr_pntr_plus1_pf_carry,
    wr_rst_busy,
    SR,
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ,
    underflow_i0,
    rd_clk,
    wr_clk,
    rst,
    wr_en,
    \count_value_i_reg[8] ,
    rst_d1,
    ram_empty_i,
    rd_en,
    Q,
    \guf.underflow_i_reg );
  output \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  output wrst_busy;
  output wr_pntr_plus1_pf_carry;
  output wr_rst_busy;
  output [0:0]SR;
  output [0:0]\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ;
  output underflow_i0;
  input rd_clk;
  input wr_clk;
  input rst;
  input wr_en;
  input \count_value_i_reg[8] ;
  input rst_d1;
  input ram_empty_i;
  input rd_en;
  input [1:0]Q;
  input \guf.underflow_i_reg ;

  wire \/i__n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ;
  wire [0:0]\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i_reg[8] ;
  (* RTL_KEEP = "yes" *) wire [1:0]\gen_rst_ic.curr_rrst_state ;
  wire \gen_rst_ic.fifo_rd_rst_i ;
  wire \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  wire \gen_rst_ic.fifo_rd_rst_wr_i ;
  wire \gen_rst_ic.fifo_wr_rst_ic ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_rd ;
  wire [1:0]\gen_rst_ic.next_rrst_state ;
  wire \gen_rst_ic.rst_seq_reentered_i_1_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_i_2_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_reg_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ;
  wire \guf.underflow_i_reg ;
  wire p_0_in;
  wire \power_on_rst_reg_n_0_[0] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire rst_d1;
  wire rst_i__0;
  wire underflow_i0;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wr_rst_busy;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'h00010116)) 
    \/i_ 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\/i__n_0 ));
  LUT6 #(
    .INIT(64'h03030200FFFFFFFF)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I5(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFEFEFEEE)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I3(rst),
        .I4(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFF0EEE0FFFFEEE0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I5(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h000C0008)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I1(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000004400000044)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I3(rst),
        .I4(p_0_in),
        .I5(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1 
       (.I0(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0002)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1 
       (.I0(\gen_rst_ic.curr_rrst_state [0]),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .O(\gen_rst_ic.next_rrst_state [1]));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [0]),
        .Q(\gen_rst_ic.curr_rrst_state [0]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [1]),
        .Q(\gen_rst_ic.curr_rrst_state [1]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h06)) 
    \__0/i_ 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.next_rrst_state [0]));
  (* SOFT_HLUTNM = "soft_lutpair288" *) 
  LUT5 #(
    .INIT(32'hFFFF000A)) 
    \count_value_i[1]_i_1__2 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .O(SR));
  LUT3 #(
    .INIT(8'h3E)) 
    \gen_rst_ic.fifo_rd_rst_ic_i_1 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.fifo_rd_rst_i ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_rd_rst_ic_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_rd_rst_i ),
        .Q(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFEAFFFFFFEA0000)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I2(rst_i__0),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I4(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ),
        .I5(\gen_rst_ic.fifo_wr_rst_ic ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair289" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_2 
       (.I0(p_0_in),
        .I1(rst),
        .O(rst_i__0));
  LUT5 #(
    .INIT(32'h00010116)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_3 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_wr_rst_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ),
        .Q(\gen_rst_ic.fifo_wr_rst_ic ),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_sync_rst__21 \gen_rst_ic.rrst_wr_inst 
       (.dest_clk(wr_clk),
        .dest_rst(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .src_rst(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ));
  (* SOFT_HLUTNM = "soft_lutpair289" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \gen_rst_ic.rst_seq_reentered_i_1 
       (.I0(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ),
        .I1(rst),
        .I2(p_0_in),
        .O(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00010000)) 
    \gen_rst_ic.rst_seq_reentered_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I5(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.rst_seq_reentered_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ),
        .Q(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEFFFEF00)) 
    \gen_rst_ic.wr_rst_busy_ic_i_1 
       (.I0(rst),
        .I1(p_0_in),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I3(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ),
        .I4(wrst_busy),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000116)) 
    \gen_rst_ic.wr_rst_busy_ic_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.wr_rst_busy_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ),
        .Q(wrst_busy),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_sync_rst__20 \gen_rst_ic.wrst_rd_inst 
       (.dest_clk(rd_clk),
        .dest_rst(\gen_rst_ic.fifo_wr_rst_rd ),
        .src_rst(\gen_rst_ic.fifo_wr_rst_ic ));
  LUT4 #(
    .INIT(16'h0002)) 
    \gen_sdpram.xpm_memory_base_inst_i_1 
       (.I0(wr_en),
        .I1(\count_value_i_reg[8] ),
        .I2(wrst_busy),
        .I3(rst_d1),
        .O(wr_pntr_plus1_pf_carry));
  (* SOFT_HLUTNM = "soft_lutpair288" *) 
  LUT3 #(
    .INIT(8'hF1)) 
    \grdc.rd_data_count_i[9]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .O(\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ));
  LUT3 #(
    .INIT(8'hE0)) 
    \guf.underflow_i_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(\guf.underflow_i_reg ),
        .I2(rd_en),
        .O(underflow_i0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(\power_on_rst_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\power_on_rst_reg_n_0_[0] ),
        .Q(p_0_in),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    wr_rst_busy_INST_0
       (.I0(wrst_busy),
        .I1(rst_d1),
        .O(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_rst" *) 
module zynq_bd_C2C2_0_xpm_fifo_rst__xdcDup__5
   (\gen_rst_ic.fifo_rd_rst_ic_reg_0 ,
    wrst_busy,
    wr_pntr_plus1_pf_carry,
    wr_rst_busy,
    SR,
    \gen_rst_ic.fifo_rd_rst_ic_reg_1 ,
    underflow_i0,
    rd_clk,
    wr_clk,
    rst,
    wr_en,
    \count_value_i_reg[7] ,
    rst_d1,
    ram_empty_i,
    Q,
    rd_en,
    \guf.underflow_i_reg );
  output \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  output wrst_busy;
  output wr_pntr_plus1_pf_carry;
  output wr_rst_busy;
  output [0:0]SR;
  output [0:0]\gen_rst_ic.fifo_rd_rst_ic_reg_1 ;
  output underflow_i0;
  input rd_clk;
  input wr_clk;
  input rst;
  input wr_en;
  input \count_value_i_reg[7] ;
  input rst_d1;
  input ram_empty_i;
  input [1:0]Q;
  input rd_en;
  input \guf.underflow_i_reg ;

  wire \/i__n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i_reg[7] ;
  (* RTL_KEEP = "yes" *) wire [1:0]\gen_rst_ic.curr_rrst_state ;
  wire \gen_rst_ic.fifo_rd_rst_i ;
  wire \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  wire [0:0]\gen_rst_ic.fifo_rd_rst_ic_reg_1 ;
  wire \gen_rst_ic.fifo_rd_rst_wr_i ;
  wire \gen_rst_ic.fifo_wr_rst_ic ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_rd ;
  wire [1:0]\gen_rst_ic.next_rrst_state ;
  wire \gen_rst_ic.rst_seq_reentered_i_1_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_i_2_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_reg_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ;
  wire \guf.underflow_i_reg ;
  wire p_0_in;
  wire \power_on_rst_reg_n_0_[0] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire rst_d1;
  wire rst_i__0;
  wire underflow_i0;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wr_rst_busy;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'h00010116)) 
    \/i_ 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\/i__n_0 ));
  LUT6 #(
    .INIT(64'h03030200FFFFFFFF)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I5(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFEFEFEEE)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I3(rst),
        .I4(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFF0EEE0FFFFEEE0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I5(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h000C0008)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I1(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000004400000044)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I3(rst),
        .I4(p_0_in),
        .I5(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1 
       (.I0(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0002)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1 
       (.I0(\gen_rst_ic.curr_rrst_state [0]),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .O(\gen_rst_ic.next_rrst_state [1]));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [0]),
        .Q(\gen_rst_ic.curr_rrst_state [0]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [1]),
        .Q(\gen_rst_ic.curr_rrst_state [1]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h06)) 
    \__0/i_ 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.next_rrst_state [0]));
  (* SOFT_HLUTNM = "soft_lutpair235" *) 
  LUT5 #(
    .INIT(32'hAAAAAEAE)) 
    \count_value_i[1]_i_1__2 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(ram_empty_i),
        .I2(Q[1]),
        .I3(rd_en),
        .I4(Q[0]),
        .O(SR));
  LUT3 #(
    .INIT(8'h3E)) 
    \gen_rst_ic.fifo_rd_rst_ic_i_1 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.fifo_rd_rst_i ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_rd_rst_ic_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_rd_rst_i ),
        .Q(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFEAFFFFFFEA0000)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I2(rst_i__0),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I4(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ),
        .I5(\gen_rst_ic.fifo_wr_rst_ic ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair236" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_2 
       (.I0(p_0_in),
        .I1(rst),
        .O(rst_i__0));
  LUT5 #(
    .INIT(32'h00010116)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_3 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_wr_rst_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ),
        .Q(\gen_rst_ic.fifo_wr_rst_ic ),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_sync_rst__23 \gen_rst_ic.rrst_wr_inst 
       (.dest_clk(wr_clk),
        .dest_rst(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .src_rst(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ));
  (* SOFT_HLUTNM = "soft_lutpair236" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \gen_rst_ic.rst_seq_reentered_i_1 
       (.I0(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ),
        .I1(rst),
        .I2(p_0_in),
        .O(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00010000)) 
    \gen_rst_ic.rst_seq_reentered_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I5(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.rst_seq_reentered_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ),
        .Q(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEFFFEF00)) 
    \gen_rst_ic.wr_rst_busy_ic_i_1 
       (.I0(rst),
        .I1(p_0_in),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I3(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ),
        .I4(wrst_busy),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000116)) 
    \gen_rst_ic.wr_rst_busy_ic_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.wr_rst_busy_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ),
        .Q(wrst_busy),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_sync_rst__22 \gen_rst_ic.wrst_rd_inst 
       (.dest_clk(rd_clk),
        .dest_rst(\gen_rst_ic.fifo_wr_rst_rd ),
        .src_rst(\gen_rst_ic.fifo_wr_rst_ic ));
  LUT4 #(
    .INIT(16'h0002)) 
    \gen_sdpram.xpm_memory_base_inst_i_1 
       (.I0(wr_en),
        .I1(\count_value_i_reg[7] ),
        .I2(wrst_busy),
        .I3(rst_d1),
        .O(wr_pntr_plus1_pf_carry));
  (* SOFT_HLUTNM = "soft_lutpair235" *) 
  LUT3 #(
    .INIT(8'hAB)) 
    \grdc.rd_data_count_i[8]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(Q[0]),
        .I2(Q[1]),
        .O(\gen_rst_ic.fifo_rd_rst_ic_reg_1 ));
  LUT3 #(
    .INIT(8'hE0)) 
    \guf.underflow_i_i_1 
       (.I0(\guf.underflow_i_reg ),
        .I1(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I2(rd_en),
        .O(underflow_i0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(\power_on_rst_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\power_on_rst_reg_n_0_[0] ),
        .Q(p_0_in),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    wr_rst_busy_INST_0
       (.I0(wrst_busy),
        .I1(rst_d1),
        .O(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_rst" *) 
module zynq_bd_C2C2_0_xpm_fifo_rst__xdcDup__6
   (\gen_rst_ic.fifo_rd_rst_ic_reg_0 ,
    wrst_busy,
    E,
    wr_rst_busy,
    SR,
    \gen_rst_ic.fifo_rd_rst_ic_reg_1 ,
    underflow_i0,
    rd_clk,
    wr_clk,
    rst,
    wr_en,
    \count_value_i_reg[3] ,
    rst_d1,
    ram_empty_i,
    Q,
    rd_en,
    \guf.underflow_i_reg );
  output \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  output wrst_busy;
  output [0:0]E;
  output wr_rst_busy;
  output [0:0]SR;
  output [0:0]\gen_rst_ic.fifo_rd_rst_ic_reg_1 ;
  output underflow_i0;
  input rd_clk;
  input wr_clk;
  input rst;
  input wr_en;
  input \count_value_i_reg[3] ;
  input rst_d1;
  input ram_empty_i;
  input [1:0]Q;
  input rd_en;
  input \guf.underflow_i_reg ;

  wire \/i__n_0 ;
  wire [0:0]E;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i_reg[3] ;
  (* RTL_KEEP = "yes" *) wire [1:0]\gen_rst_ic.curr_rrst_state ;
  wire \gen_rst_ic.fifo_rd_rst_i ;
  wire \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  wire [0:0]\gen_rst_ic.fifo_rd_rst_ic_reg_1 ;
  wire \gen_rst_ic.fifo_rd_rst_wr_i ;
  wire \gen_rst_ic.fifo_wr_rst_ic ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_rd ;
  wire [1:0]\gen_rst_ic.next_rrst_state ;
  wire \gen_rst_ic.rst_seq_reentered_i_1_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_i_2_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_reg_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ;
  wire \guf.underflow_i_reg ;
  wire p_0_in;
  wire \power_on_rst_reg_n_0_[0] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire rst_d1;
  wire rst_i__0;
  wire underflow_i0;
  wire wr_clk;
  wire wr_en;
  wire wr_rst_busy;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'h00010116)) 
    \/i_ 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\/i__n_0 ));
  LUT6 #(
    .INIT(64'h03030200FFFFFFFF)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I5(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFEFEFEEE)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I3(rst),
        .I4(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFF0EEE0FFFFEEE0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I5(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h000C0008)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I1(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000004400000044)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I3(rst),
        .I4(p_0_in),
        .I5(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1 
       (.I0(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0002)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1 
       (.I0(\gen_rst_ic.curr_rrst_state [0]),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .O(\gen_rst_ic.next_rrst_state [1]));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [0]),
        .Q(\gen_rst_ic.curr_rrst_state [0]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "RRST_IDLE:00,RRST_IN:01,RRST_OUT:10,RRST_EXIT:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.next_rrst_state [1]),
        .Q(\gen_rst_ic.curr_rrst_state [1]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h06)) 
    \__0/i_ 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.next_rrst_state [0]));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT5 #(
    .INIT(32'hAAAAAEAE)) 
    \count_value_i[1]_i_1__2 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(ram_empty_i),
        .I2(Q[1]),
        .I3(rd_en),
        .I4(Q[0]),
        .O(SR));
  LUT3 #(
    .INIT(8'h3E)) 
    \gen_rst_ic.fifo_rd_rst_ic_i_1 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.fifo_rd_rst_i ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_rd_rst_ic_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_rd_rst_i ),
        .Q(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFEAFFFFFFEA0000)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I2(rst_i__0),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I4(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ),
        .I5(\gen_rst_ic.fifo_wr_rst_ic ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_2 
       (.I0(p_0_in),
        .I1(rst),
        .O(rst_i__0));
  LUT5 #(
    .INIT(32'h00010116)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_3 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_wr_rst_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ),
        .Q(\gen_rst_ic.fifo_wr_rst_ic ),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_sync_rst__25 \gen_rst_ic.rrst_wr_inst 
       (.dest_clk(wr_clk),
        .dest_rst(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .src_rst(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \gen_rst_ic.rst_seq_reentered_i_1 
       (.I0(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ),
        .I1(rst),
        .I2(p_0_in),
        .O(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00010000)) 
    \gen_rst_ic.rst_seq_reentered_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I5(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.rst_seq_reentered_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ),
        .Q(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEFFFEF00)) 
    \gen_rst_ic.wr_rst_busy_ic_i_1 
       (.I0(rst),
        .I1(p_0_in),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I3(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ),
        .I4(wrst_busy),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000116)) 
    \gen_rst_ic.wr_rst_busy_ic_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.wr_rst_busy_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ),
        .Q(wrst_busy),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  zynq_bd_C2C2_0_xpm_cdc_sync_rst__24 \gen_rst_ic.wrst_rd_inst 
       (.dest_clk(rd_clk),
        .dest_rst(\gen_rst_ic.fifo_wr_rst_rd ),
        .src_rst(\gen_rst_ic.fifo_wr_rst_ic ));
  LUT4 #(
    .INIT(16'h0002)) 
    \gen_sdpram.xpm_memory_base_inst_i_1 
       (.I0(wr_en),
        .I1(\count_value_i_reg[3] ),
        .I2(wrst_busy),
        .I3(rst_d1),
        .O(E));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT3 #(
    .INIT(8'hAB)) 
    \grdc.rd_data_count_i[4]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(Q[0]),
        .I2(Q[1]),
        .O(\gen_rst_ic.fifo_rd_rst_ic_reg_1 ));
  LUT3 #(
    .INIT(8'hE0)) 
    \guf.underflow_i_i_1 
       (.I0(\guf.underflow_i_reg ),
        .I1(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I2(rd_en),
        .O(underflow_i0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(\power_on_rst_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\power_on_rst_reg_n_0_[0] ),
        .Q(p_0_in),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    wr_rst_busy_INST_0
       (.I0(wrst_busy),
        .I1(rst_d1),
        .O(wr_rst_busy));
endmodule

(* ADDR_WIDTH_A = "8" *) (* ADDR_WIDTH_B = "8" *) (* AUTO_SLEEP_TIME = "0" *) 
(* BYTE_WRITE_WIDTH_A = "45" *) (* BYTE_WRITE_WIDTH_B = "45" *) (* CASCADE_HEIGHT = "0" *) 
(* CLOCKING_MODE = "1" *) (* ECC_BIT_RANGE = "[7:0]" *) (* ECC_MODE = "0" *) 
(* ECC_TYPE = "NONE" *) (* IGNORE_INIT_SYNTH = "0" *) (* MAX_NUM_CHAR = "0" *) 
(* MEMORY_INIT_FILE = "none" *) (* MEMORY_INIT_PARAM = "" *) (* MEMORY_OPTIMIZATION = "true" *) 
(* MEMORY_PRIMITIVE = "2" *) (* MEMORY_SIZE = "11520" *) (* MEMORY_TYPE = "1" *) 
(* MESSAGE_CONTROL = "0" *) (* NUM_CHAR_LOC = "0" *) (* P_ECC_MODE = "0" *) 
(* P_ENABLE_BYTE_WRITE_A = "0" *) (* P_ENABLE_BYTE_WRITE_B = "0" *) (* P_MAX_DEPTH_DATA = "256" *) 
(* P_MEMORY_OPT = "yes" *) (* P_MEMORY_PRIMITIVE = "block" *) (* P_MIN_WIDTH_DATA = "45" *) 
(* P_MIN_WIDTH_DATA_A = "45" *) (* P_MIN_WIDTH_DATA_B = "45" *) (* P_MIN_WIDTH_DATA_ECC = "45" *) 
(* P_MIN_WIDTH_DATA_LDW = "4" *) (* P_MIN_WIDTH_DATA_SHFT = "45" *) (* P_NUM_COLS_WRITE_A = "1" *) 
(* P_NUM_COLS_WRITE_B = "1" *) (* P_NUM_ROWS_READ_A = "1" *) (* P_NUM_ROWS_READ_B = "1" *) 
(* P_NUM_ROWS_WRITE_A = "1" *) (* P_NUM_ROWS_WRITE_B = "1" *) (* P_SDP_WRITE_MODE = "no" *) 
(* P_WIDTH_ADDR_LSB_READ_A = "0" *) (* P_WIDTH_ADDR_LSB_READ_B = "0" *) (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
(* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) (* P_WIDTH_ADDR_READ_A = "8" *) (* P_WIDTH_ADDR_READ_B = "8" *) 
(* P_WIDTH_ADDR_WRITE_A = "8" *) (* P_WIDTH_ADDR_WRITE_B = "8" *) (* P_WIDTH_COL_WRITE_A = "45" *) 
(* P_WIDTH_COL_WRITE_B = "45" *) (* RAM_DECOMP = "auto" *) (* READ_DATA_WIDTH_A = "45" *) 
(* READ_DATA_WIDTH_B = "45" *) (* READ_LATENCY_A = "2" *) (* READ_LATENCY_B = "2" *) 
(* READ_RESET_VALUE_A = "0" *) (* READ_RESET_VALUE_B = "0" *) (* RST_MODE_A = "SYNC" *) 
(* RST_MODE_B = "SYNC" *) (* SIM_ASSERT_CHK = "0" *) (* USE_EMBEDDED_CONSTRAINT = "0" *) 
(* USE_MEM_INIT = "0" *) (* USE_MEM_INIT_MMI = "0" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH_A = "45" *) (* WRITE_DATA_WIDTH_B = "45" *) 
(* WRITE_MODE_A = "2" *) (* WRITE_MODE_B = "2" *) (* WRITE_PROTECT = "1" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "soft" *) (* rsta_loop_iter = "48" *) 
(* rstb_loop_iter = "48" *) 
module zynq_bd_C2C2_0_xpm_memory_base
   (sleep,
    clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    injectsbiterra,
    injectdbiterra,
    douta,
    sbiterra,
    dbiterra,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    injectsbiterrb,
    injectdbiterrb,
    doutb,
    sbiterrb,
    dbiterrb);
  input sleep;
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [7:0]addra;
  input [44:0]dina;
  input injectsbiterra;
  input injectdbiterra;
  output [44:0]douta;
  output sbiterra;
  output dbiterra;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [7:0]addrb;
  input [44:0]dinb;
  input injectsbiterrb;
  input injectdbiterrb;
  output [44:0]doutb;
  output sbiterrb;
  output dbiterrb;

  wire \<const0> ;
  wire [7:0]addra;
  wire [7:0]addrb;
  wire clka;
  wire clkb;
  wire [44:0]dina;
  wire [44:0]doutb;
  wire ena;
  wire enb;
  wire regceb;
  wire rstb;
  wire sleep;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTDBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTSBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_DBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_SBITERR_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINA_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINB_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPA_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPB_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTA_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTB_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPA_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPB_UNCONNECTED ;
  wire [31:13]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTBDOUT_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPADOUTP_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPBDOUTP_UNCONNECTED ;
  wire [7:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_RDADDRECC_UNCONNECTED ;

  assign dbiterra = \<const0> ;
  assign dbiterrb = \<const0> ;
  assign douta[44] = \<const0> ;
  assign douta[43] = \<const0> ;
  assign douta[42] = \<const0> ;
  assign douta[41] = \<const0> ;
  assign douta[40] = \<const0> ;
  assign douta[39] = \<const0> ;
  assign douta[38] = \<const0> ;
  assign douta[37] = \<const0> ;
  assign douta[36] = \<const0> ;
  assign douta[35] = \<const0> ;
  assign douta[34] = \<const0> ;
  assign douta[33] = \<const0> ;
  assign douta[32] = \<const0> ;
  assign douta[31] = \<const0> ;
  assign douta[30] = \<const0> ;
  assign douta[29] = \<const0> ;
  assign douta[28] = \<const0> ;
  assign douta[27] = \<const0> ;
  assign douta[26] = \<const0> ;
  assign douta[25] = \<const0> ;
  assign douta[24] = \<const0> ;
  assign douta[23] = \<const0> ;
  assign douta[22] = \<const0> ;
  assign douta[21] = \<const0> ;
  assign douta[20] = \<const0> ;
  assign douta[19] = \<const0> ;
  assign douta[18] = \<const0> ;
  assign douta[17] = \<const0> ;
  assign douta[16] = \<const0> ;
  assign douta[15] = \<const0> ;
  assign douta[14] = \<const0> ;
  assign douta[13] = \<const0> ;
  assign douta[12] = \<const0> ;
  assign douta[11] = \<const0> ;
  assign douta[10] = \<const0> ;
  assign douta[9] = \<const0> ;
  assign douta[8] = \<const0> ;
  assign douta[7] = \<const0> ;
  assign douta[6] = \<const0> ;
  assign douta[5] = \<const0> ;
  assign douta[4] = \<const0> ;
  assign douta[3] = \<const0> ;
  assign douta[2] = \<const0> ;
  assign douta[1] = \<const0> ;
  assign douta[0] = \<const0> ;
  assign sbiterra = \<const0> ;
  assign sbiterrb = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* \MEM.PORTA.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTA.ADDRESS_END  = "511" *) 
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d45" *) 
  (* \MEM.PORTA.DATA_LSB  = "0" *) 
  (* \MEM.PORTA.DATA_MSB  = "44" *) 
  (* \MEM.PORTB.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTB.ADDRESS_END  = "511" *) 
  (* \MEM.PORTB.DATA_BIT_LAYOUT  = "p0_d45" *) 
  (* \MEM.PORTB.DATA_LSB  = "0" *) 
  (* \MEM.PORTB.DATA_MSB  = "44" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RDADDR_COLLISION_HWCONFIG = "DELAYED_WRITE" *) 
  (* RTL_RAM_BITS = "11520" *) 
  (* RTL_RAM_NAME = "inst/master_fpga_gen.axi_chip2chip_master_inst/axi_chip2chip_ar_fifo_inst/axi_chip2chip_async_fifo_inst/xpm_fifo_async_inst/gnuram_async_fifo.xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst/gen_wr_a.gen_word_narrow.mem_reg" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "511" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "44" *) 
  RAMB36E2 #(
    .CASCADE_ORDER_A("NONE"),
    .CASCADE_ORDER_B("NONE"),
    .CLOCK_DOMAINS("INDEPENDENT"),
    .DOA_REG(1),
    .DOB_REG(1),
    .ENADDRENA("FALSE"),
    .ENADDRENB("FALSE"),
    .EN_ECC_PIPE("FALSE"),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .RDADDRCHANGEA("FALSE"),
    .RDADDRCHANGEB("FALSE"),
    .READ_WIDTH_A(72),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SLEEP_ASYNC("TRUE"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("NO_CHANGE"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(72)) 
    \gen_wr_a.gen_word_narrow.mem_reg 
       (.ADDRARDADDR({1'b0,addrb,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({1'b0,addra,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRENA(1'b1),
        .ADDRENB(1'b1),
        .CASDIMUXA(1'b0),
        .CASDIMUXB(1'b0),
        .CASDINA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINA_UNCONNECTED [31:0]),
        .CASDINB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINB_UNCONNECTED [31:0]),
        .CASDINPA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPA_UNCONNECTED [3:0]),
        .CASDINPB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPB_UNCONNECTED [3:0]),
        .CASDOMUXA(1'b0),
        .CASDOMUXB(1'b0),
        .CASDOMUXEN_A(1'b1),
        .CASDOMUXEN_B(1'b1),
        .CASDOUTA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTA_UNCONNECTED [31:0]),
        .CASDOUTB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTB_UNCONNECTED [31:0]),
        .CASDOUTPA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPA_UNCONNECTED [3:0]),
        .CASDOUTPB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPB_UNCONNECTED [3:0]),
        .CASINDBITERR(1'b0),
        .CASINSBITERR(1'b0),
        .CASOREGIMUXA(1'b0),
        .CASOREGIMUXB(1'b0),
        .CASOREGIMUXEN_A(1'b1),
        .CASOREGIMUXEN_B(1'b1),
        .CASOUTDBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTDBITERR_UNCONNECTED ),
        .CASOUTSBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTSBITERR_UNCONNECTED ),
        .CLKARDCLK(clkb),
        .CLKBWRCLK(clka),
        .DBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DBITERR_UNCONNECTED ),
        .DINADIN(dina[31:0]),
        .DINBDIN({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,dina[44:32]}),
        .DINPADINP({1'b1,1'b1,1'b1,1'b1}),
        .DINPBDINP({1'b1,1'b1,1'b1,1'b1}),
        .DOUTADOUT(doutb[31:0]),
        .DOUTBDOUT({\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTBDOUT_UNCONNECTED [31:13],doutb[44:32]}),
        .DOUTPADOUTP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPADOUTP_UNCONNECTED [3:0]),
        .DOUTPBDOUTP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPBDOUTP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_gen_wr_a.gen_word_narrow.mem_reg_ECCPARITY_UNCONNECTED [7:0]),
        .ECCPIPECE(1'b1),
        .ENARDEN(enb),
        .ENBWREN(ena),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_gen_wr_a.gen_word_narrow.mem_reg_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(regceb),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(rstb),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_SBITERR_UNCONNECTED ),
        .SLEEP(1'b0),
        .WEA({1'b0,1'b0,1'b0,1'b0}),
        .WEBWE({ena,ena,ena,ena,ena,ena,ena,ena}));
endmodule

(* ADDR_WIDTH_A = "8" *) (* ADDR_WIDTH_B = "8" *) (* AUTO_SLEEP_TIME = "0" *) 
(* BYTE_WRITE_WIDTH_A = "45" *) (* BYTE_WRITE_WIDTH_B = "45" *) (* CASCADE_HEIGHT = "0" *) 
(* CLOCKING_MODE = "1" *) (* ECC_BIT_RANGE = "[7:0]" *) (* ECC_MODE = "0" *) 
(* ECC_TYPE = "NONE" *) (* IGNORE_INIT_SYNTH = "0" *) (* MAX_NUM_CHAR = "0" *) 
(* MEMORY_INIT_FILE = "none" *) (* MEMORY_INIT_PARAM = "" *) (* MEMORY_OPTIMIZATION = "true" *) 
(* MEMORY_PRIMITIVE = "2" *) (* MEMORY_SIZE = "11520" *) (* MEMORY_TYPE = "1" *) 
(* MESSAGE_CONTROL = "0" *) (* NUM_CHAR_LOC = "0" *) (* ORIG_REF_NAME = "xpm_memory_base" *) 
(* P_ECC_MODE = "0" *) (* P_ENABLE_BYTE_WRITE_A = "0" *) (* P_ENABLE_BYTE_WRITE_B = "0" *) 
(* P_MAX_DEPTH_DATA = "256" *) (* P_MEMORY_OPT = "yes" *) (* P_MEMORY_PRIMITIVE = "block" *) 
(* P_MIN_WIDTH_DATA = "45" *) (* P_MIN_WIDTH_DATA_A = "45" *) (* P_MIN_WIDTH_DATA_B = "45" *) 
(* P_MIN_WIDTH_DATA_ECC = "45" *) (* P_MIN_WIDTH_DATA_LDW = "4" *) (* P_MIN_WIDTH_DATA_SHFT = "45" *) 
(* P_NUM_COLS_WRITE_A = "1" *) (* P_NUM_COLS_WRITE_B = "1" *) (* P_NUM_ROWS_READ_A = "1" *) 
(* P_NUM_ROWS_READ_B = "1" *) (* P_NUM_ROWS_WRITE_A = "1" *) (* P_NUM_ROWS_WRITE_B = "1" *) 
(* P_SDP_WRITE_MODE = "no" *) (* P_WIDTH_ADDR_LSB_READ_A = "0" *) (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
(* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) (* P_WIDTH_ADDR_READ_A = "8" *) 
(* P_WIDTH_ADDR_READ_B = "8" *) (* P_WIDTH_ADDR_WRITE_A = "8" *) (* P_WIDTH_ADDR_WRITE_B = "8" *) 
(* P_WIDTH_COL_WRITE_A = "45" *) (* P_WIDTH_COL_WRITE_B = "45" *) (* RAM_DECOMP = "auto" *) 
(* READ_DATA_WIDTH_A = "45" *) (* READ_DATA_WIDTH_B = "45" *) (* READ_LATENCY_A = "2" *) 
(* READ_LATENCY_B = "2" *) (* READ_RESET_VALUE_A = "0" *) (* READ_RESET_VALUE_B = "0" *) 
(* RST_MODE_A = "SYNC" *) (* RST_MODE_B = "SYNC" *) (* SIM_ASSERT_CHK = "0" *) 
(* USE_EMBEDDED_CONSTRAINT = "0" *) (* USE_MEM_INIT = "0" *) (* USE_MEM_INIT_MMI = "0" *) 
(* VERSION = "0" *) (* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH_A = "45" *) 
(* WRITE_DATA_WIDTH_B = "45" *) (* WRITE_MODE_A = "2" *) (* WRITE_MODE_B = "2" *) 
(* WRITE_PROTECT = "1" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "soft" *) 
(* rsta_loop_iter = "48" *) (* rstb_loop_iter = "48" *) 
module zynq_bd_C2C2_0_xpm_memory_base__2
   (sleep,
    clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    injectsbiterra,
    injectdbiterra,
    douta,
    sbiterra,
    dbiterra,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    injectsbiterrb,
    injectdbiterrb,
    doutb,
    sbiterrb,
    dbiterrb);
  input sleep;
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [7:0]addra;
  input [44:0]dina;
  input injectsbiterra;
  input injectdbiterra;
  output [44:0]douta;
  output sbiterra;
  output dbiterra;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [7:0]addrb;
  input [44:0]dinb;
  input injectsbiterrb;
  input injectdbiterrb;
  output [44:0]doutb;
  output sbiterrb;
  output dbiterrb;

  wire \<const0> ;
  wire [7:0]addra;
  wire [7:0]addrb;
  wire clka;
  wire clkb;
  wire [44:0]dina;
  wire [44:0]doutb;
  wire ena;
  wire enb;
  wire regceb;
  wire rstb;
  wire sleep;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTDBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTSBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_DBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_SBITERR_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINA_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINB_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPA_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPB_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTA_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTB_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPA_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPB_UNCONNECTED ;
  wire [31:13]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTBDOUT_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPADOUTP_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPBDOUTP_UNCONNECTED ;
  wire [7:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_RDADDRECC_UNCONNECTED ;

  assign dbiterra = \<const0> ;
  assign dbiterrb = \<const0> ;
  assign douta[44] = \<const0> ;
  assign douta[43] = \<const0> ;
  assign douta[42] = \<const0> ;
  assign douta[41] = \<const0> ;
  assign douta[40] = \<const0> ;
  assign douta[39] = \<const0> ;
  assign douta[38] = \<const0> ;
  assign douta[37] = \<const0> ;
  assign douta[36] = \<const0> ;
  assign douta[35] = \<const0> ;
  assign douta[34] = \<const0> ;
  assign douta[33] = \<const0> ;
  assign douta[32] = \<const0> ;
  assign douta[31] = \<const0> ;
  assign douta[30] = \<const0> ;
  assign douta[29] = \<const0> ;
  assign douta[28] = \<const0> ;
  assign douta[27] = \<const0> ;
  assign douta[26] = \<const0> ;
  assign douta[25] = \<const0> ;
  assign douta[24] = \<const0> ;
  assign douta[23] = \<const0> ;
  assign douta[22] = \<const0> ;
  assign douta[21] = \<const0> ;
  assign douta[20] = \<const0> ;
  assign douta[19] = \<const0> ;
  assign douta[18] = \<const0> ;
  assign douta[17] = \<const0> ;
  assign douta[16] = \<const0> ;
  assign douta[15] = \<const0> ;
  assign douta[14] = \<const0> ;
  assign douta[13] = \<const0> ;
  assign douta[12] = \<const0> ;
  assign douta[11] = \<const0> ;
  assign douta[10] = \<const0> ;
  assign douta[9] = \<const0> ;
  assign douta[8] = \<const0> ;
  assign douta[7] = \<const0> ;
  assign douta[6] = \<const0> ;
  assign douta[5] = \<const0> ;
  assign douta[4] = \<const0> ;
  assign douta[3] = \<const0> ;
  assign douta[2] = \<const0> ;
  assign douta[1] = \<const0> ;
  assign douta[0] = \<const0> ;
  assign sbiterra = \<const0> ;
  assign sbiterrb = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* \MEM.PORTA.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTA.ADDRESS_END  = "511" *) 
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d45" *) 
  (* \MEM.PORTA.DATA_LSB  = "0" *) 
  (* \MEM.PORTA.DATA_MSB  = "44" *) 
  (* \MEM.PORTB.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTB.ADDRESS_END  = "511" *) 
  (* \MEM.PORTB.DATA_BIT_LAYOUT  = "p0_d45" *) 
  (* \MEM.PORTB.DATA_LSB  = "0" *) 
  (* \MEM.PORTB.DATA_MSB  = "44" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RDADDR_COLLISION_HWCONFIG = "DELAYED_WRITE" *) 
  (* RTL_RAM_BITS = "11520" *) 
  (* RTL_RAM_NAME = "inst/master_fpga_gen.axi_chip2chip_master_inst/axi_chip2chip_aw_fifo_inst/axi_chip2chip_async_fifo_inst/xpm_fifo_async_inst/gnuram_async_fifo.xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst/gen_wr_a.gen_word_narrow.mem_reg" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "511" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "44" *) 
  RAMB36E2 #(
    .CASCADE_ORDER_A("NONE"),
    .CASCADE_ORDER_B("NONE"),
    .CLOCK_DOMAINS("INDEPENDENT"),
    .DOA_REG(1),
    .DOB_REG(1),
    .ENADDRENA("FALSE"),
    .ENADDRENB("FALSE"),
    .EN_ECC_PIPE("FALSE"),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .RDADDRCHANGEA("FALSE"),
    .RDADDRCHANGEB("FALSE"),
    .READ_WIDTH_A(72),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SLEEP_ASYNC("TRUE"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("NO_CHANGE"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(72)) 
    \gen_wr_a.gen_word_narrow.mem_reg 
       (.ADDRARDADDR({1'b0,addrb,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({1'b0,addra,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRENA(1'b1),
        .ADDRENB(1'b1),
        .CASDIMUXA(1'b0),
        .CASDIMUXB(1'b0),
        .CASDINA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINA_UNCONNECTED [31:0]),
        .CASDINB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINB_UNCONNECTED [31:0]),
        .CASDINPA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPA_UNCONNECTED [3:0]),
        .CASDINPB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPB_UNCONNECTED [3:0]),
        .CASDOMUXA(1'b0),
        .CASDOMUXB(1'b0),
        .CASDOMUXEN_A(1'b1),
        .CASDOMUXEN_B(1'b1),
        .CASDOUTA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTA_UNCONNECTED [31:0]),
        .CASDOUTB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTB_UNCONNECTED [31:0]),
        .CASDOUTPA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPA_UNCONNECTED [3:0]),
        .CASDOUTPB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPB_UNCONNECTED [3:0]),
        .CASINDBITERR(1'b0),
        .CASINSBITERR(1'b0),
        .CASOREGIMUXA(1'b0),
        .CASOREGIMUXB(1'b0),
        .CASOREGIMUXEN_A(1'b1),
        .CASOREGIMUXEN_B(1'b1),
        .CASOUTDBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTDBITERR_UNCONNECTED ),
        .CASOUTSBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTSBITERR_UNCONNECTED ),
        .CLKARDCLK(clkb),
        .CLKBWRCLK(clka),
        .DBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DBITERR_UNCONNECTED ),
        .DINADIN(dina[31:0]),
        .DINBDIN({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,dina[44:32]}),
        .DINPADINP({1'b1,1'b1,1'b1,1'b1}),
        .DINPBDINP({1'b1,1'b1,1'b1,1'b1}),
        .DOUTADOUT(doutb[31:0]),
        .DOUTBDOUT({\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTBDOUT_UNCONNECTED [31:13],doutb[44:32]}),
        .DOUTPADOUTP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPADOUTP_UNCONNECTED [3:0]),
        .DOUTPBDOUTP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPBDOUTP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_gen_wr_a.gen_word_narrow.mem_reg_ECCPARITY_UNCONNECTED [7:0]),
        .ECCPIPECE(1'b1),
        .ENARDEN(enb),
        .ENBWREN(ena),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_gen_wr_a.gen_word_narrow.mem_reg_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(regceb),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(rstb),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_SBITERR_UNCONNECTED ),
        .SLEEP(1'b0),
        .WEA({1'b0,1'b0,1'b0,1'b0}),
        .WEBWE({ena,ena,ena,ena,ena,ena,ena,ena}));
endmodule

(* ADDR_WIDTH_A = "9" *) (* ADDR_WIDTH_B = "9" *) (* AUTO_SLEEP_TIME = "0" *) 
(* BYTE_WRITE_WIDTH_A = "38" *) (* BYTE_WRITE_WIDTH_B = "38" *) (* CASCADE_HEIGHT = "0" *) 
(* CLOCKING_MODE = "1" *) (* ECC_BIT_RANGE = "[7:0]" *) (* ECC_MODE = "0" *) 
(* ECC_TYPE = "NONE" *) (* IGNORE_INIT_SYNTH = "0" *) (* MAX_NUM_CHAR = "0" *) 
(* MEMORY_INIT_FILE = "none" *) (* MEMORY_INIT_PARAM = "" *) (* MEMORY_OPTIMIZATION = "true" *) 
(* MEMORY_PRIMITIVE = "2" *) (* MEMORY_SIZE = "19456" *) (* MEMORY_TYPE = "1" *) 
(* MESSAGE_CONTROL = "0" *) (* NUM_CHAR_LOC = "0" *) (* ORIG_REF_NAME = "xpm_memory_base" *) 
(* P_ECC_MODE = "0" *) (* P_ENABLE_BYTE_WRITE_A = "0" *) (* P_ENABLE_BYTE_WRITE_B = "0" *) 
(* P_MAX_DEPTH_DATA = "512" *) (* P_MEMORY_OPT = "yes" *) (* P_MEMORY_PRIMITIVE = "block" *) 
(* P_MIN_WIDTH_DATA = "38" *) (* P_MIN_WIDTH_DATA_A = "38" *) (* P_MIN_WIDTH_DATA_B = "38" *) 
(* P_MIN_WIDTH_DATA_ECC = "38" *) (* P_MIN_WIDTH_DATA_LDW = "4" *) (* P_MIN_WIDTH_DATA_SHFT = "38" *) 
(* P_NUM_COLS_WRITE_A = "1" *) (* P_NUM_COLS_WRITE_B = "1" *) (* P_NUM_ROWS_READ_A = "1" *) 
(* P_NUM_ROWS_READ_B = "1" *) (* P_NUM_ROWS_WRITE_A = "1" *) (* P_NUM_ROWS_WRITE_B = "1" *) 
(* P_SDP_WRITE_MODE = "no" *) (* P_WIDTH_ADDR_LSB_READ_A = "0" *) (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
(* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) (* P_WIDTH_ADDR_READ_A = "9" *) 
(* P_WIDTH_ADDR_READ_B = "9" *) (* P_WIDTH_ADDR_WRITE_A = "9" *) (* P_WIDTH_ADDR_WRITE_B = "9" *) 
(* P_WIDTH_COL_WRITE_A = "38" *) (* P_WIDTH_COL_WRITE_B = "38" *) (* RAM_DECOMP = "auto" *) 
(* READ_DATA_WIDTH_A = "38" *) (* READ_DATA_WIDTH_B = "38" *) (* READ_LATENCY_A = "2" *) 
(* READ_LATENCY_B = "2" *) (* READ_RESET_VALUE_A = "0" *) (* READ_RESET_VALUE_B = "0" *) 
(* RST_MODE_A = "SYNC" *) (* RST_MODE_B = "SYNC" *) (* SIM_ASSERT_CHK = "0" *) 
(* USE_EMBEDDED_CONSTRAINT = "0" *) (* USE_MEM_INIT = "0" *) (* USE_MEM_INIT_MMI = "0" *) 
(* VERSION = "0" *) (* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH_A = "38" *) 
(* WRITE_DATA_WIDTH_B = "38" *) (* WRITE_MODE_A = "2" *) (* WRITE_MODE_B = "2" *) 
(* WRITE_PROTECT = "1" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "soft" *) 
(* rsta_loop_iter = "40" *) (* rstb_loop_iter = "40" *) 
module zynq_bd_C2C2_0_xpm_memory_base__parameterized0
   (sleep,
    clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    injectsbiterra,
    injectdbiterra,
    douta,
    sbiterra,
    dbiterra,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    injectsbiterrb,
    injectdbiterrb,
    doutb,
    sbiterrb,
    dbiterrb);
  input sleep;
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [8:0]addra;
  input [37:0]dina;
  input injectsbiterra;
  input injectdbiterra;
  output [37:0]douta;
  output sbiterra;
  output dbiterra;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [8:0]addrb;
  input [37:0]dinb;
  input injectsbiterrb;
  input injectdbiterrb;
  output [37:0]doutb;
  output sbiterrb;
  output dbiterrb;

  wire \<const0> ;
  wire [8:0]addra;
  wire [8:0]addrb;
  wire clka;
  wire clkb;
  wire [37:0]dina;
  wire [37:1]\^doutb ;
  wire enb;
  wire regceb;
  wire rstb;
  wire sleep;
  wire [0:0]wea;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTDBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTSBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_DBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_SBITERR_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINA_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINB_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPA_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPB_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTA_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTB_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPA_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPB_UNCONNECTED ;
  wire [31:5]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTBDOUT_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPADOUTP_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPBDOUTP_UNCONNECTED ;
  wire [7:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_RDADDRECC_UNCONNECTED ;

  assign dbiterra = \<const0> ;
  assign dbiterrb = \<const0> ;
  assign douta[37] = \<const0> ;
  assign douta[36] = \<const0> ;
  assign douta[35] = \<const0> ;
  assign douta[34] = \<const0> ;
  assign douta[33] = \<const0> ;
  assign douta[32] = \<const0> ;
  assign douta[31] = \<const0> ;
  assign douta[30] = \<const0> ;
  assign douta[29] = \<const0> ;
  assign douta[28] = \<const0> ;
  assign douta[27] = \<const0> ;
  assign douta[26] = \<const0> ;
  assign douta[25] = \<const0> ;
  assign douta[24] = \<const0> ;
  assign douta[23] = \<const0> ;
  assign douta[22] = \<const0> ;
  assign douta[21] = \<const0> ;
  assign douta[20] = \<const0> ;
  assign douta[19] = \<const0> ;
  assign douta[18] = \<const0> ;
  assign douta[17] = \<const0> ;
  assign douta[16] = \<const0> ;
  assign douta[15] = \<const0> ;
  assign douta[14] = \<const0> ;
  assign douta[13] = \<const0> ;
  assign douta[12] = \<const0> ;
  assign douta[11] = \<const0> ;
  assign douta[10] = \<const0> ;
  assign douta[9] = \<const0> ;
  assign douta[8] = \<const0> ;
  assign douta[7] = \<const0> ;
  assign douta[6] = \<const0> ;
  assign douta[5] = \<const0> ;
  assign douta[4] = \<const0> ;
  assign douta[3] = \<const0> ;
  assign douta[2] = \<const0> ;
  assign douta[1] = \<const0> ;
  assign douta[0] = \<const0> ;
  assign doutb[37:1] = \^doutb [37:1];
  assign doutb[0] = \<const0> ;
  assign sbiterra = \<const0> ;
  assign sbiterrb = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* \MEM.PORTA.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTA.ADDRESS_END  = "511" *) 
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d37" *) 
  (* \MEM.PORTA.DATA_LSB  = "0" *) 
  (* \MEM.PORTA.DATA_MSB  = "36" *) 
  (* \MEM.PORTB.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTB.ADDRESS_END  = "511" *) 
  (* \MEM.PORTB.DATA_BIT_LAYOUT  = "p0_d37" *) 
  (* \MEM.PORTB.DATA_LSB  = "0" *) 
  (* \MEM.PORTB.DATA_MSB  = "36" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RDADDR_COLLISION_HWCONFIG = "DELAYED_WRITE" *) 
  (* RTL_RAM_BITS = "19456" *) 
  (* RTL_RAM_NAME = "inst/master_fpga_gen.axi_chip2chip_master_inst/axi_chip2chip_w_fifo_inst/axi_chip2chip_async_fifo_inst/xpm_fifo_async_inst/gnuram_async_fifo.xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst/gen_wr_a.gen_word_narrow.mem_reg" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "511" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "36" *) 
  RAMB36E2 #(
    .CASCADE_ORDER_A("NONE"),
    .CASCADE_ORDER_B("NONE"),
    .CLOCK_DOMAINS("INDEPENDENT"),
    .DOA_REG(1),
    .DOB_REG(1),
    .ENADDRENA("FALSE"),
    .ENADDRENB("FALSE"),
    .EN_ECC_PIPE("FALSE"),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .RDADDRCHANGEA("FALSE"),
    .RDADDRCHANGEB("FALSE"),
    .READ_WIDTH_A(72),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SLEEP_ASYNC("TRUE"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("NO_CHANGE"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(72)) 
    \gen_wr_a.gen_word_narrow.mem_reg 
       (.ADDRARDADDR({addrb,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({addra,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRENA(1'b1),
        .ADDRENB(1'b1),
        .CASDIMUXA(1'b0),
        .CASDIMUXB(1'b0),
        .CASDINA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINA_UNCONNECTED [31:0]),
        .CASDINB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINB_UNCONNECTED [31:0]),
        .CASDINPA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPA_UNCONNECTED [3:0]),
        .CASDINPB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPB_UNCONNECTED [3:0]),
        .CASDOMUXA(1'b0),
        .CASDOMUXB(1'b0),
        .CASDOMUXEN_A(1'b1),
        .CASDOMUXEN_B(1'b1),
        .CASDOUTA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTA_UNCONNECTED [31:0]),
        .CASDOUTB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTB_UNCONNECTED [31:0]),
        .CASDOUTPA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPA_UNCONNECTED [3:0]),
        .CASDOUTPB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPB_UNCONNECTED [3:0]),
        .CASINDBITERR(1'b0),
        .CASINSBITERR(1'b0),
        .CASOREGIMUXA(1'b0),
        .CASOREGIMUXB(1'b0),
        .CASOREGIMUXEN_A(1'b1),
        .CASOREGIMUXEN_B(1'b1),
        .CASOUTDBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTDBITERR_UNCONNECTED ),
        .CASOUTSBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTSBITERR_UNCONNECTED ),
        .CLKARDCLK(clkb),
        .CLKBWRCLK(clka),
        .DBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DBITERR_UNCONNECTED ),
        .DINADIN(dina[32:1]),
        .DINBDIN({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,dina[37:33]}),
        .DINPADINP({1'b1,1'b1,1'b1,1'b1}),
        .DINPBDINP({1'b1,1'b1,1'b1,1'b1}),
        .DOUTADOUT(\^doutb [32:1]),
        .DOUTBDOUT({\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTBDOUT_UNCONNECTED [31:5],\^doutb [37:33]}),
        .DOUTPADOUTP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPADOUTP_UNCONNECTED [3:0]),
        .DOUTPBDOUTP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPBDOUTP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_gen_wr_a.gen_word_narrow.mem_reg_ECCPARITY_UNCONNECTED [7:0]),
        .ECCPIPECE(1'b1),
        .ENARDEN(enb),
        .ENBWREN(1'b1),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_gen_wr_a.gen_word_narrow.mem_reg_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(regceb),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(rstb),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_SBITERR_UNCONNECTED ),
        .SLEEP(1'b0),
        .WEA({1'b0,1'b0,1'b0,1'b0}),
        .WEBWE({wea,wea,wea,wea,wea,wea,wea,wea}));
endmodule

(* ADDR_WIDTH_A = "9" *) (* ADDR_WIDTH_B = "9" *) (* AUTO_SLEEP_TIME = "0" *) 
(* BYTE_WRITE_WIDTH_A = "36" *) (* BYTE_WRITE_WIDTH_B = "36" *) (* CASCADE_HEIGHT = "0" *) 
(* CLOCKING_MODE = "1" *) (* ECC_BIT_RANGE = "[7:0]" *) (* ECC_MODE = "0" *) 
(* ECC_TYPE = "NONE" *) (* IGNORE_INIT_SYNTH = "0" *) (* MAX_NUM_CHAR = "0" *) 
(* MEMORY_INIT_FILE = "none" *) (* MEMORY_INIT_PARAM = "" *) (* MEMORY_OPTIMIZATION = "true" *) 
(* MEMORY_PRIMITIVE = "2" *) (* MEMORY_SIZE = "18432" *) (* MEMORY_TYPE = "1" *) 
(* MESSAGE_CONTROL = "0" *) (* NUM_CHAR_LOC = "0" *) (* ORIG_REF_NAME = "xpm_memory_base" *) 
(* P_ECC_MODE = "0" *) (* P_ENABLE_BYTE_WRITE_A = "0" *) (* P_ENABLE_BYTE_WRITE_B = "0" *) 
(* P_MAX_DEPTH_DATA = "512" *) (* P_MEMORY_OPT = "yes" *) (* P_MEMORY_PRIMITIVE = "block" *) 
(* P_MIN_WIDTH_DATA = "36" *) (* P_MIN_WIDTH_DATA_A = "36" *) (* P_MIN_WIDTH_DATA_B = "36" *) 
(* P_MIN_WIDTH_DATA_ECC = "36" *) (* P_MIN_WIDTH_DATA_LDW = "4" *) (* P_MIN_WIDTH_DATA_SHFT = "36" *) 
(* P_NUM_COLS_WRITE_A = "1" *) (* P_NUM_COLS_WRITE_B = "1" *) (* P_NUM_ROWS_READ_A = "1" *) 
(* P_NUM_ROWS_READ_B = "1" *) (* P_NUM_ROWS_WRITE_A = "1" *) (* P_NUM_ROWS_WRITE_B = "1" *) 
(* P_SDP_WRITE_MODE = "no" *) (* P_WIDTH_ADDR_LSB_READ_A = "0" *) (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
(* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) (* P_WIDTH_ADDR_READ_A = "9" *) 
(* P_WIDTH_ADDR_READ_B = "9" *) (* P_WIDTH_ADDR_WRITE_A = "9" *) (* P_WIDTH_ADDR_WRITE_B = "9" *) 
(* P_WIDTH_COL_WRITE_A = "36" *) (* P_WIDTH_COL_WRITE_B = "36" *) (* RAM_DECOMP = "auto" *) 
(* READ_DATA_WIDTH_A = "36" *) (* READ_DATA_WIDTH_B = "36" *) (* READ_LATENCY_A = "2" *) 
(* READ_LATENCY_B = "2" *) (* READ_RESET_VALUE_A = "0" *) (* READ_RESET_VALUE_B = "0" *) 
(* RST_MODE_A = "SYNC" *) (* RST_MODE_B = "SYNC" *) (* SIM_ASSERT_CHK = "0" *) 
(* USE_EMBEDDED_CONSTRAINT = "0" *) (* USE_MEM_INIT = "0" *) (* USE_MEM_INIT_MMI = "0" *) 
(* VERSION = "0" *) (* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH_A = "36" *) 
(* WRITE_DATA_WIDTH_B = "36" *) (* WRITE_MODE_A = "2" *) (* WRITE_MODE_B = "2" *) 
(* WRITE_PROTECT = "1" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "soft" *) 
(* rsta_loop_iter = "36" *) (* rstb_loop_iter = "36" *) 
module zynq_bd_C2C2_0_xpm_memory_base__parameterized1
   (sleep,
    clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    injectsbiterra,
    injectdbiterra,
    douta,
    sbiterra,
    dbiterra,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    injectsbiterrb,
    injectdbiterrb,
    doutb,
    sbiterrb,
    dbiterrb);
  input sleep;
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [8:0]addra;
  input [35:0]dina;
  input injectsbiterra;
  input injectdbiterra;
  output [35:0]douta;
  output sbiterra;
  output dbiterra;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [8:0]addrb;
  input [35:0]dinb;
  input injectsbiterrb;
  input injectdbiterrb;
  output [35:0]doutb;
  output sbiterrb;
  output dbiterrb;

  wire \<const0> ;
  wire [8:0]addra;
  wire [8:0]addrb;
  wire clka;
  wire clkb;
  wire [35:0]dina;
  wire [35:0]doutb;
  wire enb;
  wire regceb;
  wire rstb;
  wire sleep;
  wire [0:0]wea;
  wire [15:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINA_UNCONNECTED ;
  wire [15:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINB_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPA_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPB_UNCONNECTED ;
  wire [15:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTA_UNCONNECTED ;
  wire [15:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTB_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPA_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPB_UNCONNECTED ;

  assign dbiterra = \<const0> ;
  assign dbiterrb = \<const0> ;
  assign douta[35] = \<const0> ;
  assign douta[34] = \<const0> ;
  assign douta[33] = \<const0> ;
  assign douta[32] = \<const0> ;
  assign douta[31] = \<const0> ;
  assign douta[30] = \<const0> ;
  assign douta[29] = \<const0> ;
  assign douta[28] = \<const0> ;
  assign douta[27] = \<const0> ;
  assign douta[26] = \<const0> ;
  assign douta[25] = \<const0> ;
  assign douta[24] = \<const0> ;
  assign douta[23] = \<const0> ;
  assign douta[22] = \<const0> ;
  assign douta[21] = \<const0> ;
  assign douta[20] = \<const0> ;
  assign douta[19] = \<const0> ;
  assign douta[18] = \<const0> ;
  assign douta[17] = \<const0> ;
  assign douta[16] = \<const0> ;
  assign douta[15] = \<const0> ;
  assign douta[14] = \<const0> ;
  assign douta[13] = \<const0> ;
  assign douta[12] = \<const0> ;
  assign douta[11] = \<const0> ;
  assign douta[10] = \<const0> ;
  assign douta[9] = \<const0> ;
  assign douta[8] = \<const0> ;
  assign douta[7] = \<const0> ;
  assign douta[6] = \<const0> ;
  assign douta[5] = \<const0> ;
  assign douta[4] = \<const0> ;
  assign douta[3] = \<const0> ;
  assign douta[2] = \<const0> ;
  assign douta[1] = \<const0> ;
  assign douta[0] = \<const0> ;
  assign sbiterra = \<const0> ;
  assign sbiterrb = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* \MEM.PORTA.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTA.ADDRESS_END  = "511" *) 
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p4_d32" *) 
  (* \MEM.PORTA.DATA_LSB  = "0" *) 
  (* \MEM.PORTA.DATA_MSB  = "35" *) 
  (* \MEM.PORTB.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTB.ADDRESS_END  = "511" *) 
  (* \MEM.PORTB.DATA_BIT_LAYOUT  = "p4_d32" *) 
  (* \MEM.PORTB.DATA_LSB  = "0" *) 
  (* \MEM.PORTB.DATA_MSB  = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RDADDR_COLLISION_HWCONFIG = "DELAYED_WRITE" *) 
  (* RTL_RAM_BITS = "18432" *) 
  (* RTL_RAM_NAME = "inst/master_fpga_gen.axi_chip2chip_master_inst/axi_chip2chip_r_fifo_inst/axi_chip2chip_async_fifo_inst/xpm_fifo_async_inst/gnuram_async_fifo.xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst/gen_wr_a.gen_word_narrow.mem_reg" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "511" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "35" *) 
  RAMB18E2 #(
    .CASCADE_ORDER_A("NONE"),
    .CASCADE_ORDER_B("NONE"),
    .CLOCK_DOMAINS("INDEPENDENT"),
    .DOA_REG(1),
    .DOB_REG(1),
    .ENADDRENA("FALSE"),
    .ENADDRENB("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .RDADDRCHANGEA("FALSE"),
    .RDADDRCHANGEB("FALSE"),
    .READ_WIDTH_A(36),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SLEEP_ASYNC("TRUE"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("NO_CHANGE"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(36)) 
    \gen_wr_a.gen_word_narrow.mem_reg 
       (.ADDRARDADDR({addrb,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({addra,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRENA(1'b1),
        .ADDRENB(1'b1),
        .CASDIMUXA(1'b0),
        .CASDIMUXB(1'b0),
        .CASDINA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINA_UNCONNECTED [15:0]),
        .CASDINB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINB_UNCONNECTED [15:0]),
        .CASDINPA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPA_UNCONNECTED [1:0]),
        .CASDINPB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPB_UNCONNECTED [1:0]),
        .CASDOMUXA(1'b0),
        .CASDOMUXB(1'b0),
        .CASDOMUXEN_A(1'b1),
        .CASDOMUXEN_B(1'b1),
        .CASDOUTA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTA_UNCONNECTED [15:0]),
        .CASDOUTB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTB_UNCONNECTED [15:0]),
        .CASDOUTPA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPA_UNCONNECTED [1:0]),
        .CASDOUTPB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPB_UNCONNECTED [1:0]),
        .CASOREGIMUXA(1'b0),
        .CASOREGIMUXB(1'b0),
        .CASOREGIMUXEN_A(1'b1),
        .CASOREGIMUXEN_B(1'b1),
        .CLKARDCLK(clkb),
        .CLKBWRCLK(clka),
        .DINADIN(dina[15:0]),
        .DINBDIN(dina[31:16]),
        .DINPADINP(dina[33:32]),
        .DINPBDINP(dina[35:34]),
        .DOUTADOUT(doutb[15:0]),
        .DOUTBDOUT(doutb[31:16]),
        .DOUTPADOUTP(doutb[33:32]),
        .DOUTPBDOUTP(doutb[35:34]),
        .ENARDEN(enb),
        .ENBWREN(1'b1),
        .REGCEAREGCE(regceb),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(rstb),
        .RSTREGB(1'b0),
        .SLEEP(1'b0),
        .WEA({1'b0,1'b0}),
        .WEBWE({wea,wea,wea,wea}));
endmodule

(* ADDR_WIDTH_A = "8" *) (* ADDR_WIDTH_B = "8" *) (* AUTO_SLEEP_TIME = "0" *) 
(* BYTE_WRITE_WIDTH_A = "3" *) (* BYTE_WRITE_WIDTH_B = "3" *) (* CASCADE_HEIGHT = "0" *) 
(* CLOCKING_MODE = "1" *) (* ECC_BIT_RANGE = "[7:0]" *) (* ECC_MODE = "0" *) 
(* ECC_TYPE = "NONE" *) (* IGNORE_INIT_SYNTH = "0" *) (* MAX_NUM_CHAR = "0" *) 
(* MEMORY_INIT_FILE = "none" *) (* MEMORY_INIT_PARAM = "" *) (* MEMORY_OPTIMIZATION = "true" *) 
(* MEMORY_PRIMITIVE = "1" *) (* MEMORY_SIZE = "768" *) (* MEMORY_TYPE = "1" *) 
(* MESSAGE_CONTROL = "0" *) (* NUM_CHAR_LOC = "0" *) (* ORIG_REF_NAME = "xpm_memory_base" *) 
(* P_ECC_MODE = "0" *) (* P_ENABLE_BYTE_WRITE_A = "0" *) (* P_ENABLE_BYTE_WRITE_B = "0" *) 
(* P_MAX_DEPTH_DATA = "256" *) (* P_MEMORY_OPT = "yes" *) (* P_MEMORY_PRIMITIVE = "distributed" *) 
(* P_MIN_WIDTH_DATA = "3" *) (* P_MIN_WIDTH_DATA_A = "3" *) (* P_MIN_WIDTH_DATA_B = "3" *) 
(* P_MIN_WIDTH_DATA_ECC = "3" *) (* P_MIN_WIDTH_DATA_LDW = "3" *) (* P_MIN_WIDTH_DATA_SHFT = "5" *) 
(* P_NUM_COLS_WRITE_A = "1" *) (* P_NUM_COLS_WRITE_B = "1" *) (* P_NUM_ROWS_READ_A = "1" *) 
(* P_NUM_ROWS_READ_B = "1" *) (* P_NUM_ROWS_WRITE_A = "1" *) (* P_NUM_ROWS_WRITE_B = "1" *) 
(* P_SDP_WRITE_MODE = "yes" *) (* P_WIDTH_ADDR_LSB_READ_A = "0" *) (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
(* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) (* P_WIDTH_ADDR_READ_A = "8" *) 
(* P_WIDTH_ADDR_READ_B = "8" *) (* P_WIDTH_ADDR_WRITE_A = "8" *) (* P_WIDTH_ADDR_WRITE_B = "8" *) 
(* P_WIDTH_COL_WRITE_A = "3" *) (* P_WIDTH_COL_WRITE_B = "3" *) (* RAM_DECOMP = "auto" *) 
(* READ_DATA_WIDTH_A = "3" *) (* READ_DATA_WIDTH_B = "3" *) (* READ_LATENCY_A = "2" *) 
(* READ_LATENCY_B = "2" *) (* READ_RESET_VALUE_A = "0" *) (* READ_RESET_VALUE_B = "0" *) 
(* RST_MODE_A = "SYNC" *) (* RST_MODE_B = "SYNC" *) (* SIM_ASSERT_CHK = "0" *) 
(* USE_EMBEDDED_CONSTRAINT = "1" *) (* USE_MEM_INIT = "0" *) (* USE_MEM_INIT_MMI = "0" *) 
(* VERSION = "0" *) (* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH_A = "3" *) 
(* WRITE_DATA_WIDTH_B = "3" *) (* WRITE_MODE_A = "2" *) (* WRITE_MODE_B = "1" *) 
(* WRITE_PROTECT = "1" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "soft" *) 
(* rsta_loop_iter = "4" *) (* rstb_loop_iter = "4" *) 
module zynq_bd_C2C2_0_xpm_memory_base__parameterized2
   (sleep,
    clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    injectsbiterra,
    injectdbiterra,
    douta,
    sbiterra,
    dbiterra,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    injectsbiterrb,
    injectdbiterrb,
    doutb,
    sbiterrb,
    dbiterrb);
  input sleep;
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [7:0]addra;
  input [2:0]dina;
  input injectsbiterra;
  input injectdbiterra;
  output [2:0]douta;
  output sbiterra;
  output dbiterra;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [7:0]addrb;
  input [2:0]dinb;
  input injectsbiterrb;
  input injectdbiterrb;
  output [2:0]doutb;
  output sbiterrb;
  output dbiterrb;

  wire \<const0> ;
  wire [7:0]addra;
  wire [7:0]addrb;
  wire clka;
  wire clkb;
  wire [2:0]dina;
  wire [2:0]doutb;
  wire ena;
  wire enb;
  wire [2:0]\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_10_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_11_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_12_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_13_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_14_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_1_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_2_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_3_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_4_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_7_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_8_reg_n_0 ;
  wire \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_9_reg_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_i_1_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_n_1 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_n_2 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_i_1_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_n_1 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_n_2 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_i_1_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_n_1 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_n_2 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_i_1_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_n_1 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_n_2 ;
  wire regceb;
  wire rstb;
  wire select_piped_1_reg_pipe_5_reg_n_0;
  wire select_piped_3_reg_pipe_6_reg_n_0;
  wire sleep;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_DOD_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_DOD_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_DOD_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_DOD_UNCONNECTED ;

  assign dbiterra = \<const0> ;
  assign dbiterrb = \<const0> ;
  assign douta[2] = \<const0> ;
  assign douta[1] = \<const0> ;
  assign douta[0] = \<const0> ;
  assign sbiterra = \<const0> ;
  assign sbiterrb = \<const0> ;
  GND GND
       (.G(\<const0> ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe[0][0]_i_1 
       (.I0(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_14_reg_n_0 ),
        .I1(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_13_reg_n_0 ),
        .I2(select_piped_3_reg_pipe_6_reg_n_0),
        .I3(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_12_reg_n_0 ),
        .I4(select_piped_1_reg_pipe_5_reg_n_0),
        .I5(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_11_reg_n_0 ),
        .O(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [0]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe[0][1]_i_1 
       (.I0(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_10_reg_n_0 ),
        .I1(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_9_reg_n_0 ),
        .I2(select_piped_3_reg_pipe_6_reg_n_0),
        .I3(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_8_reg_n_0 ),
        .I4(select_piped_1_reg_pipe_5_reg_n_0),
        .I5(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_7_reg_n_0 ),
        .O(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [1]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe[0][2]_i_1 
       (.I0(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_4_reg_n_0 ),
        .I1(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_3_reg_n_0 ),
        .I2(select_piped_3_reg_pipe_6_reg_n_0),
        .I3(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_2_reg_n_0 ),
        .I4(select_piped_1_reg_pipe_5_reg_n_0),
        .I5(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_1_reg_n_0 ),
        .O(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [2]));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][0] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [0]),
        .Q(doutb[0]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][1] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [1]),
        .Q(doutb[1]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][2] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [2]),
        .Q(doutb[2]),
        .R(rstb));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_10_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_n_1 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_10_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_11_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_n_0 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_11_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_12_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_n_0 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_12_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_13_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_n_0 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_13_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_14_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_n_0 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_14_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_1_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_n_2 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_1_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_2_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_n_2 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_2_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_3_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_n_2 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_3_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_4_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_n_2 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_4_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_7_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_n_1 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_7_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_8_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_n_1 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_8_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_9_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_n_1 ),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg_pipe_9_reg_n_0 ),
        .R(1'b0));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "768" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "63" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "2" *) 
  RAM64M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2 
       (.ADDRA(addrb[5:0]),
        .ADDRB(addrb[5:0]),
        .ADDRC(addrb[5:0]),
        .ADDRD(addra[5:0]),
        .DIA(dina[0]),
        .DIB(dina[1]),
        .DIC(dina[2]),
        .DID(1'b0),
        .DOA(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_n_0 ),
        .DOB(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_n_1 ),
        .DOC(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_n_2 ),
        .DOD(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_DOD_UNCONNECTED ),
        .WCLK(clka),
        .WE(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h02)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_i_1 
       (.I0(ena),
        .I1(addra[6]),
        .I2(addra[7]),
        .O(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_i_1_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "768" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "128" *) 
  (* ram_addr_end = "191" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "2" *) 
  RAM64M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2 
       (.ADDRA(addrb[5:0]),
        .ADDRB(addrb[5:0]),
        .ADDRC(addrb[5:0]),
        .ADDRD(addra[5:0]),
        .DIA(dina[0]),
        .DIB(dina[1]),
        .DIC(dina[2]),
        .DID(1'b0),
        .DOA(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_n_0 ),
        .DOB(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_n_1 ),
        .DOC(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_n_2 ),
        .DOD(\NLW_gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_DOD_UNCONNECTED ),
        .WCLK(clka),
        .WE(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_i_1 
       (.I0(addra[6]),
        .I1(addra[7]),
        .I2(ena),
        .O(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_i_1_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "768" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "192" *) 
  (* ram_addr_end = "255" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "2" *) 
  RAM64M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2 
       (.ADDRA(addrb[5:0]),
        .ADDRB(addrb[5:0]),
        .ADDRC(addrb[5:0]),
        .ADDRD(addra[5:0]),
        .DIA(dina[0]),
        .DIB(dina[1]),
        .DIC(dina[2]),
        .DID(1'b0),
        .DOA(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_n_0 ),
        .DOB(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_n_1 ),
        .DOC(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_n_2 ),
        .DOD(\NLW_gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_DOD_UNCONNECTED ),
        .WCLK(clka),
        .WE(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h80)) 
    \gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_i_1 
       (.I0(ena),
        .I1(addra[6]),
        .I2(addra[7]),
        .O(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_i_1_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "768" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "64" *) 
  (* ram_addr_end = "127" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "2" *) 
  RAM64M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2 
       (.ADDRA(addrb[5:0]),
        .ADDRB(addrb[5:0]),
        .ADDRC(addrb[5:0]),
        .ADDRD(addra[5:0]),
        .DIA(dina[0]),
        .DIB(dina[1]),
        .DIC(dina[2]),
        .DID(1'b0),
        .DOA(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_n_0 ),
        .DOB(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_n_1 ),
        .DOC(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_n_2 ),
        .DOD(\NLW_gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_DOD_UNCONNECTED ),
        .WCLK(clka),
        .WE(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_i_1 
       (.I0(addra[7]),
        .I1(addra[6]),
        .I2(ena),
        .O(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_i_1_n_0 ));
  FDRE select_piped_1_reg_pipe_5_reg
       (.C(clkb),
        .CE(enb),
        .D(addrb[6]),
        .Q(select_piped_1_reg_pipe_5_reg_n_0),
        .R(1'b0));
  FDRE select_piped_3_reg_pipe_6_reg
       (.C(clkb),
        .CE(enb),
        .D(addrb[7]),
        .Q(select_piped_3_reg_pipe_6_reg_n_0),
        .R(1'b0));
endmodule

(* ADDR_WIDTH_A = "4" *) (* ADDR_WIDTH_B = "4" *) (* AUTO_SLEEP_TIME = "0" *) 
(* BYTE_WRITE_WIDTH_A = "20" *) (* BYTE_WRITE_WIDTH_B = "20" *) (* CASCADE_HEIGHT = "0" *) 
(* CLOCKING_MODE = "1" *) (* ECC_BIT_RANGE = "[7:0]" *) (* ECC_MODE = "0" *) 
(* ECC_TYPE = "NONE" *) (* IGNORE_INIT_SYNTH = "0" *) (* MAX_NUM_CHAR = "0" *) 
(* MEMORY_INIT_FILE = "none" *) (* MEMORY_INIT_PARAM = "" *) (* MEMORY_OPTIMIZATION = "true" *) 
(* MEMORY_PRIMITIVE = "1" *) (* MEMORY_SIZE = "320" *) (* MEMORY_TYPE = "1" *) 
(* MESSAGE_CONTROL = "0" *) (* NUM_CHAR_LOC = "0" *) (* ORIG_REF_NAME = "xpm_memory_base" *) 
(* P_ECC_MODE = "0" *) (* P_ENABLE_BYTE_WRITE_A = "0" *) (* P_ENABLE_BYTE_WRITE_B = "0" *) 
(* P_MAX_DEPTH_DATA = "16" *) (* P_MEMORY_OPT = "yes" *) (* P_MEMORY_PRIMITIVE = "distributed" *) 
(* P_MIN_WIDTH_DATA = "20" *) (* P_MIN_WIDTH_DATA_A = "20" *) (* P_MIN_WIDTH_DATA_B = "20" *) 
(* P_MIN_WIDTH_DATA_ECC = "20" *) (* P_MIN_WIDTH_DATA_LDW = "4" *) (* P_MIN_WIDTH_DATA_SHFT = "20" *) 
(* P_NUM_COLS_WRITE_A = "1" *) (* P_NUM_COLS_WRITE_B = "1" *) (* P_NUM_ROWS_READ_A = "1" *) 
(* P_NUM_ROWS_READ_B = "1" *) (* P_NUM_ROWS_WRITE_A = "1" *) (* P_NUM_ROWS_WRITE_B = "1" *) 
(* P_SDP_WRITE_MODE = "yes" *) (* P_WIDTH_ADDR_LSB_READ_A = "0" *) (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
(* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) (* P_WIDTH_ADDR_READ_A = "4" *) 
(* P_WIDTH_ADDR_READ_B = "4" *) (* P_WIDTH_ADDR_WRITE_A = "4" *) (* P_WIDTH_ADDR_WRITE_B = "4" *) 
(* P_WIDTH_COL_WRITE_A = "20" *) (* P_WIDTH_COL_WRITE_B = "20" *) (* RAM_DECOMP = "auto" *) 
(* READ_DATA_WIDTH_A = "20" *) (* READ_DATA_WIDTH_B = "20" *) (* READ_LATENCY_A = "2" *) 
(* READ_LATENCY_B = "2" *) (* READ_RESET_VALUE_A = "0" *) (* READ_RESET_VALUE_B = "0" *) 
(* RST_MODE_A = "SYNC" *) (* RST_MODE_B = "SYNC" *) (* SIM_ASSERT_CHK = "0" *) 
(* USE_EMBEDDED_CONSTRAINT = "1" *) (* USE_MEM_INIT = "0" *) (* USE_MEM_INIT_MMI = "0" *) 
(* VERSION = "0" *) (* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH_A = "20" *) 
(* WRITE_DATA_WIDTH_B = "20" *) (* WRITE_MODE_A = "2" *) (* WRITE_MODE_B = "1" *) 
(* WRITE_PROTECT = "1" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "soft" *) 
(* rsta_loop_iter = "20" *) (* rstb_loop_iter = "20" *) 
module zynq_bd_C2C2_0_xpm_memory_base__parameterized3
   (sleep,
    clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    injectsbiterra,
    injectdbiterra,
    douta,
    sbiterra,
    dbiterra,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    injectsbiterrb,
    injectdbiterrb,
    doutb,
    sbiterrb,
    dbiterrb);
  input sleep;
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [3:0]addra;
  input [19:0]dina;
  input injectsbiterra;
  input injectdbiterra;
  output [19:0]douta;
  output sbiterra;
  output dbiterra;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [3:0]addrb;
  input [19:0]dinb;
  input injectsbiterrb;
  input injectdbiterrb;
  output [19:0]doutb;
  output sbiterrb;
  output dbiterrb;

  wire \<const0> ;
  wire [3:0]addra;
  wire [3:0]addrb;
  wire clka;
  wire clkb;
  wire [19:0]dina;
  wire [19:0]doutb;
  wire ena;
  wire enb;
  wire [19:0]\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg ;
  wire [19:0]\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 ;
  wire regceb;
  wire rstb;
  wire sleep;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_0_13_DOH_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_14_19_DOD_UNCONNECTED ;

  assign dbiterra = \<const0> ;
  assign dbiterrb = \<const0> ;
  assign douta[19] = \<const0> ;
  assign douta[18] = \<const0> ;
  assign douta[17] = \<const0> ;
  assign douta[16] = \<const0> ;
  assign douta[15] = \<const0> ;
  assign douta[14] = \<const0> ;
  assign douta[13] = \<const0> ;
  assign douta[12] = \<const0> ;
  assign douta[11] = \<const0> ;
  assign douta[10] = \<const0> ;
  assign douta[9] = \<const0> ;
  assign douta[8] = \<const0> ;
  assign douta[7] = \<const0> ;
  assign douta[6] = \<const0> ;
  assign douta[5] = \<const0> ;
  assign douta[4] = \<const0> ;
  assign douta[3] = \<const0> ;
  assign douta[2] = \<const0> ;
  assign douta[1] = \<const0> ;
  assign douta[0] = \<const0> ;
  assign sbiterra = \<const0> ;
  assign sbiterrb = \<const0> ;
  GND GND
       (.G(\<const0> ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][0] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [0]),
        .Q(doutb[0]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][10] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [10]),
        .Q(doutb[10]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][11] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [11]),
        .Q(doutb[11]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][12] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [12]),
        .Q(doutb[12]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][13] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [13]),
        .Q(doutb[13]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][14] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [14]),
        .Q(doutb[14]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][15] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [15]),
        .Q(doutb[15]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][16] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [16]),
        .Q(doutb[16]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][17] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [17]),
        .Q(doutb[17]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][18] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [18]),
        .Q(doutb[18]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][19] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [19]),
        .Q(doutb[19]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][1] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [1]),
        .Q(doutb[1]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][2] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [2]),
        .Q(doutb[2]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][3] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [3]),
        .Q(doutb[3]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][4] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [4]),
        .Q(doutb[4]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][5] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [5]),
        .Q(doutb[5]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][6] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [6]),
        .Q(doutb[6]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][7] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [7]),
        .Q(doutb[7]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][8] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [8]),
        .Q(doutb[8]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][9] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [9]),
        .Q(doutb[9]),
        .R(rstb));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[0] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [0]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [0]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[10] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [10]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [10]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[11] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [11]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [11]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[12] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [12]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [12]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[13] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [13]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [13]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[14] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [14]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [14]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[15] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [15]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [15]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[16] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [16]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [16]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[17] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [17]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [17]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[18] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [18]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [18]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[19] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [19]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [19]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[1] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [1]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [1]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[2] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [2]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [2]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[3] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [3]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [3]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[4] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [4]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [4]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[5] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [5]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [5]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[6] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [6]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [6]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[7] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [7]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [7]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[8] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [8]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [8]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[9] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [9]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [9]),
        .R(1'b0));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "320" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem_reg_0_15_0_13" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "13" *) 
  RAM32M16 #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000),
    .INIT_E(64'h0000000000000000),
    .INIT_F(64'h0000000000000000),
    .INIT_G(64'h0000000000000000),
    .INIT_H(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_15_0_13 
       (.ADDRA({1'b0,addrb}),
        .ADDRB({1'b0,addrb}),
        .ADDRC({1'b0,addrb}),
        .ADDRD({1'b0,addrb}),
        .ADDRE({1'b0,addrb}),
        .ADDRF({1'b0,addrb}),
        .ADDRG({1'b0,addrb}),
        .ADDRH({1'b0,addra}),
        .DIA(dina[1:0]),
        .DIB(dina[3:2]),
        .DIC(dina[5:4]),
        .DID(dina[7:6]),
        .DIE(dina[9:8]),
        .DIF(dina[11:10]),
        .DIG(dina[13:12]),
        .DIH({1'b0,1'b0}),
        .DOA(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [1:0]),
        .DOB(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [3:2]),
        .DOC(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [5:4]),
        .DOD(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [7:6]),
        .DOE(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [9:8]),
        .DOF(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [11:10]),
        .DOG(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [13:12]),
        .DOH(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_0_13_DOH_UNCONNECTED [1:0]),
        .WCLK(clka),
        .WE(ena));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "320" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem_reg_0_15_14_19" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "14" *) 
  (* ram_slice_end = "19" *) 
  RAM32M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_15_14_19 
       (.ADDRA({1'b0,addrb}),
        .ADDRB({1'b0,addrb}),
        .ADDRC({1'b0,addrb}),
        .ADDRD({1'b0,addra}),
        .DIA(dina[15:14]),
        .DIB(dina[17:16]),
        .DIC(dina[19:18]),
        .DID({1'b0,1'b0}),
        .DOA(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [15:14]),
        .DOB(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [17:16]),
        .DOC(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [19:18]),
        .DOD(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_14_19_DOD_UNCONNECTED [1:0]),
        .WCLK(clka),
        .WE(ena));
endmodule

(* ADDR_WIDTH_A = "4" *) (* ADDR_WIDTH_B = "4" *) (* AUTO_SLEEP_TIME = "0" *) 
(* BYTE_WRITE_WIDTH_A = "20" *) (* BYTE_WRITE_WIDTH_B = "20" *) (* CASCADE_HEIGHT = "0" *) 
(* CLOCKING_MODE = "1" *) (* ECC_BIT_RANGE = "[7:0]" *) (* ECC_MODE = "0" *) 
(* ECC_TYPE = "NONE" *) (* IGNORE_INIT_SYNTH = "0" *) (* MAX_NUM_CHAR = "0" *) 
(* MEMORY_INIT_FILE = "none" *) (* MEMORY_INIT_PARAM = "" *) (* MEMORY_OPTIMIZATION = "true" *) 
(* MEMORY_PRIMITIVE = "1" *) (* MEMORY_SIZE = "320" *) (* MEMORY_TYPE = "1" *) 
(* MESSAGE_CONTROL = "0" *) (* NUM_CHAR_LOC = "0" *) (* ORIG_REF_NAME = "xpm_memory_base" *) 
(* P_ECC_MODE = "0" *) (* P_ENABLE_BYTE_WRITE_A = "0" *) (* P_ENABLE_BYTE_WRITE_B = "0" *) 
(* P_MAX_DEPTH_DATA = "16" *) (* P_MEMORY_OPT = "yes" *) (* P_MEMORY_PRIMITIVE = "distributed" *) 
(* P_MIN_WIDTH_DATA = "20" *) (* P_MIN_WIDTH_DATA_A = "20" *) (* P_MIN_WIDTH_DATA_B = "20" *) 
(* P_MIN_WIDTH_DATA_ECC = "20" *) (* P_MIN_WIDTH_DATA_LDW = "4" *) (* P_MIN_WIDTH_DATA_SHFT = "20" *) 
(* P_NUM_COLS_WRITE_A = "1" *) (* P_NUM_COLS_WRITE_B = "1" *) (* P_NUM_ROWS_READ_A = "1" *) 
(* P_NUM_ROWS_READ_B = "1" *) (* P_NUM_ROWS_WRITE_A = "1" *) (* P_NUM_ROWS_WRITE_B = "1" *) 
(* P_SDP_WRITE_MODE = "yes" *) (* P_WIDTH_ADDR_LSB_READ_A = "0" *) (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
(* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) (* P_WIDTH_ADDR_READ_A = "4" *) 
(* P_WIDTH_ADDR_READ_B = "4" *) (* P_WIDTH_ADDR_WRITE_A = "4" *) (* P_WIDTH_ADDR_WRITE_B = "4" *) 
(* P_WIDTH_COL_WRITE_A = "20" *) (* P_WIDTH_COL_WRITE_B = "20" *) (* RAM_DECOMP = "auto" *) 
(* READ_DATA_WIDTH_A = "20" *) (* READ_DATA_WIDTH_B = "20" *) (* READ_LATENCY_A = "2" *) 
(* READ_LATENCY_B = "2" *) (* READ_RESET_VALUE_A = "0" *) (* READ_RESET_VALUE_B = "0" *) 
(* RST_MODE_A = "SYNC" *) (* RST_MODE_B = "SYNC" *) (* SIM_ASSERT_CHK = "0" *) 
(* USE_EMBEDDED_CONSTRAINT = "1" *) (* USE_MEM_INIT = "0" *) (* USE_MEM_INIT_MMI = "0" *) 
(* VERSION = "0" *) (* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH_A = "20" *) 
(* WRITE_DATA_WIDTH_B = "20" *) (* WRITE_MODE_A = "2" *) (* WRITE_MODE_B = "1" *) 
(* WRITE_PROTECT = "1" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "soft" *) 
(* rsta_loop_iter = "20" *) (* rstb_loop_iter = "20" *) 
module zynq_bd_C2C2_0_xpm_memory_base__parameterized3__2
   (sleep,
    clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    injectsbiterra,
    injectdbiterra,
    douta,
    sbiterra,
    dbiterra,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    injectsbiterrb,
    injectdbiterrb,
    doutb,
    sbiterrb,
    dbiterrb);
  input sleep;
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [3:0]addra;
  input [19:0]dina;
  input injectsbiterra;
  input injectdbiterra;
  output [19:0]douta;
  output sbiterra;
  output dbiterra;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [3:0]addrb;
  input [19:0]dinb;
  input injectsbiterrb;
  input injectdbiterrb;
  output [19:0]doutb;
  output sbiterrb;
  output dbiterrb;

  wire \<const0> ;
  wire [3:0]addra;
  wire [3:0]addrb;
  wire clka;
  wire clkb;
  wire [19:0]dina;
  wire [19:0]doutb;
  wire ena;
  wire enb;
  wire [19:0]\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg ;
  wire [19:0]\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 ;
  wire regceb;
  wire rstb;
  wire sleep;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_0_13_DOH_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_14_19_DOD_UNCONNECTED ;

  assign dbiterra = \<const0> ;
  assign dbiterrb = \<const0> ;
  assign douta[19] = \<const0> ;
  assign douta[18] = \<const0> ;
  assign douta[17] = \<const0> ;
  assign douta[16] = \<const0> ;
  assign douta[15] = \<const0> ;
  assign douta[14] = \<const0> ;
  assign douta[13] = \<const0> ;
  assign douta[12] = \<const0> ;
  assign douta[11] = \<const0> ;
  assign douta[10] = \<const0> ;
  assign douta[9] = \<const0> ;
  assign douta[8] = \<const0> ;
  assign douta[7] = \<const0> ;
  assign douta[6] = \<const0> ;
  assign douta[5] = \<const0> ;
  assign douta[4] = \<const0> ;
  assign douta[3] = \<const0> ;
  assign douta[2] = \<const0> ;
  assign douta[1] = \<const0> ;
  assign douta[0] = \<const0> ;
  assign sbiterra = \<const0> ;
  assign sbiterrb = \<const0> ;
  GND GND
       (.G(\<const0> ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][0] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [0]),
        .Q(doutb[0]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][10] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [10]),
        .Q(doutb[10]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][11] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [11]),
        .Q(doutb[11]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][12] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [12]),
        .Q(doutb[12]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][13] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [13]),
        .Q(doutb[13]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][14] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [14]),
        .Q(doutb[14]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][15] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [15]),
        .Q(doutb[15]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][16] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [16]),
        .Q(doutb[16]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][17] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [17]),
        .Q(doutb[17]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][18] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [18]),
        .Q(doutb[18]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][19] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [19]),
        .Q(doutb[19]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][1] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [1]),
        .Q(doutb[1]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][2] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [2]),
        .Q(doutb[2]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][3] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [3]),
        .Q(doutb[3]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][4] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [4]),
        .Q(doutb[4]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][5] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [5]),
        .Q(doutb[5]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][6] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [6]),
        .Q(doutb[6]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][7] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [7]),
        .Q(doutb[7]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][8] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [8]),
        .Q(doutb[8]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.gen_stage.doutb_pipe_reg[0][9] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [9]),
        .Q(doutb[9]),
        .R(rstb));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[0] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [0]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [0]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[10] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [10]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [10]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[11] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [11]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [11]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[12] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [12]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [12]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[13] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [13]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [13]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[14] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [14]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [14]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[15] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [15]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [15]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[16] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [16]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [16]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[17] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [17]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [17]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[18] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [18]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [18]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[19] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [19]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [19]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[1] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [1]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [1]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[2] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [2]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [2]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[3] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [3]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [3]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[4] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [4]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [4]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[5] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [5]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [5]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[6] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [6]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [6]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[7] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [7]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [7]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[8] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [8]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [8]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg[9] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [9]),
        .Q(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg [9]),
        .R(1'b0));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "320" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem_reg_0_15_0_13" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "13" *) 
  RAM32M16 #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000),
    .INIT_E(64'h0000000000000000),
    .INIT_F(64'h0000000000000000),
    .INIT_G(64'h0000000000000000),
    .INIT_H(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_15_0_13 
       (.ADDRA({1'b0,addrb}),
        .ADDRB({1'b0,addrb}),
        .ADDRC({1'b0,addrb}),
        .ADDRD({1'b0,addrb}),
        .ADDRE({1'b0,addrb}),
        .ADDRF({1'b0,addrb}),
        .ADDRG({1'b0,addrb}),
        .ADDRH({1'b0,addra}),
        .DIA(dina[1:0]),
        .DIB(dina[3:2]),
        .DIC(dina[5:4]),
        .DID(dina[7:6]),
        .DIE(dina[9:8]),
        .DIF(dina[11:10]),
        .DIG(dina[13:12]),
        .DIH({1'b0,1'b0}),
        .DOA(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [1:0]),
        .DOB(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [3:2]),
        .DOC(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [5:4]),
        .DOD(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [7:6]),
        .DOE(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [9:8]),
        .DOF(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [11:10]),
        .DOG(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [13:12]),
        .DOH(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_0_13_DOH_UNCONNECTED [1:0]),
        .WCLK(clka),
        .WE(ena));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "320" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem_reg_0_15_14_19" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "14" *) 
  (* ram_slice_end = "19" *) 
  RAM32M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_15_14_19 
       (.ADDRA({1'b0,addrb}),
        .ADDRB({1'b0,addrb}),
        .ADDRC({1'b0,addrb}),
        .ADDRD({1'b0,addra}),
        .DIA(dina[15:14]),
        .DIB(dina[17:16]),
        .DIC(dina[19:18]),
        .DID({1'b0,1'b0}),
        .DOA(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [15:14]),
        .DOB(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [17:16]),
        .DOC(\gen_rd_b.gen_rd_b_synth_template.gen_rf_narrow_pipe.doutb_reg_reg0 [19:18]),
        .DOD(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_14_19_DOD_UNCONNECTED [1:0]),
        .WCLK(clka),
        .WE(ena));
endmodule

(* CHECK_LICENSE_TYPE = "zynq_bd_C2C1_0,axi_chip2chip_v5_0_20,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "axi_chip2chip_v5_0_20,Vivado 2023.2" *) 
(* NotValidForBitStream *)
module zynq_bd_C2C2_0
   (s_aclk,
    s_aresetn,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bresp,
    s_axi_bvalid,
    s_axi_bready,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_rvalid,
    s_axi_rready,
    axi_c2c_m2s_intr_in,
    axi_c2c_s2m_intr_out,
    axi_c2c_phy_clk,
    axi_c2c_aurora_channel_up,
    axi_c2c_aurora_tx_tready,
    axi_c2c_aurora_tx_tdata,
    axi_c2c_aurora_tx_tvalid,
    axi_c2c_aurora_rx_tdata,
    axi_c2c_aurora_rx_tvalid,
    aurora_do_cc,
    aurora_pma_init_in,
    aurora_init_clk,
    aurora_pma_init_out,
    aurora_mmcm_not_locked,
    aurora_reset_pb,
    axi_c2c_config_error_out,
    axi_c2c_link_status_out,
    axi_c2c_multi_bit_error_out,
    axi_c2c_link_error_out,
    s_axi_lite_aclk,
    s_axi_lite_awaddr,
    s_axi_lite_awprot,
    s_axi_lite_awvalid,
    s_axi_lite_awready,
    s_axi_lite_wdata,
    s_axi_lite_wstrb,
    s_axi_lite_wvalid,
    s_axi_lite_wready,
    s_axi_lite_bresp,
    s_axi_lite_bvalid,
    s_axi_lite_bready,
    s_axi_lite_araddr,
    s_axi_lite_arprot,
    s_axi_lite_arvalid,
    s_axi_lite_arready,
    s_axi_lite_rdata,
    s_axi_lite_rresp,
    s_axi_lite_rvalid,
    s_axi_lite_rready);
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 s_aclk CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME s_aclk, ASSOCIATED_BUSIF s_axi, ASSOCIATED_RESET s_aresetn, FREQ_HZ 49999500, FREQ_TOLERANCE_HZ 0, PHASE 0.0, CLK_DOMAIN zynq_bd_ZynqMPSoC_0_pl_clk1, INSERT_VIP 0" *) input s_aclk;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 s_aresetn RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME s_aresetn, POLARITY ACTIVE_LOW, INSERT_VIP 0" *) input s_aresetn;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi AWADDR" *) input [31:0]s_axi_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi AWLEN" *) input [7:0]s_axi_awlen;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi AWSIZE" *) input [2:0]s_axi_awsize;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi AWBURST" *) input [1:0]s_axi_awburst;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi AWVALID" *) input s_axi_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi AWREADY" *) output s_axi_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi WDATA" *) input [31:0]s_axi_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi WSTRB" *) input [3:0]s_axi_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi WLAST" *) input s_axi_wlast;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi WVALID" *) input s_axi_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi WREADY" *) output s_axi_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi BRESP" *) output [1:0]s_axi_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi BVALID" *) output s_axi_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi BREADY" *) input s_axi_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi ARADDR" *) input [31:0]s_axi_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi ARLEN" *) input [7:0]s_axi_arlen;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi ARSIZE" *) input [2:0]s_axi_arsize;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi ARBURST" *) input [1:0]s_axi_arburst;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi ARVALID" *) input s_axi_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi ARREADY" *) output s_axi_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi RDATA" *) output [31:0]s_axi_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi RRESP" *) output [1:0]s_axi_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi RLAST" *) output s_axi_rlast;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi RVALID" *) output s_axi_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi RREADY" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME s_axi, NUM_READ_OUTSTANDING 16, NUM_WRITE_OUTSTANDING 16, DATA_WIDTH 32, PROTOCOL AXI4, FREQ_HZ 49999500, ID_WIDTH 0, ADDR_WIDTH 32, AWUSER_WIDTH 0, ARUSER_WIDTH 0, WUSER_WIDTH 0, RUSER_WIDTH 0, BUSER_WIDTH 0, READ_WRITE_MODE READ_WRITE, HAS_BURST 1, HAS_LOCK 0, HAS_PROT 0, HAS_CACHE 0, HAS_QOS 0, HAS_REGION 0, HAS_WSTRB 1, HAS_BRESP 1, HAS_RRESP 1, SUPPORTS_NARROW_BURST 1, MAX_BURST_LENGTH 256, PHASE 0.0, CLK_DOMAIN zynq_bd_ZynqMPSoC_0_pl_clk1, NUM_READ_THREADS 1, NUM_WRITE_THREADS 1, RUSER_BITS_PER_BYTE 0, WUSER_BITS_PER_BYTE 0, INSERT_VIP 0" *) input s_axi_rready;
  input [3:0]axi_c2c_m2s_intr_in;
  output [3:0]axi_c2c_s2m_intr_out;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 axi_c2c_phy_clk CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME axi_c2c_phy_clk, ASSOCIATED_BUSIF AXIS_TX:AXIS_RX, ASSOCIATED_RESET aurora_reset_pb, FREQ_HZ 78125000, FREQ_TOLERANCE_HZ 0, PHASE 0, CLK_DOMAIN zynq_bd_C2C1_PHY_0_user_clk_out, INSERT_VIP 0" *) input axi_c2c_phy_clk;
  input axi_c2c_aurora_channel_up;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 AXIS_TX TREADY" *) input axi_c2c_aurora_tx_tready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 AXIS_TX TDATA" *) output [63:0]axi_c2c_aurora_tx_tdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 AXIS_TX TVALID" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME AXIS_TX, TDATA_NUM_BYTES 8, TDEST_WIDTH 0, TID_WIDTH 0, TUSER_WIDTH 0, HAS_TREADY 1, HAS_TSTRB 0, HAS_TKEEP 0, HAS_TLAST 0, FREQ_HZ 78125000, PHASE 0, CLK_DOMAIN zynq_bd_C2C1_PHY_0_user_clk_out, LAYERED_METADATA undef, INSERT_VIP 0" *) output axi_c2c_aurora_tx_tvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 AXIS_RX TDATA" *) input [63:0]axi_c2c_aurora_rx_tdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 AXIS_RX TVALID" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME AXIS_RX, TDATA_NUM_BYTES 8, TDEST_WIDTH 0, TID_WIDTH 0, TUSER_WIDTH 0, HAS_TREADY 0, HAS_TSTRB 0, HAS_TKEEP 0, HAS_TLAST 0, FREQ_HZ 78125000, PHASE 0, CLK_DOMAIN zynq_bd_C2C1_PHY_0_user_clk_out, LAYERED_METADATA undef, INSERT_VIP 0" *) input axi_c2c_aurora_rx_tvalid;
  output aurora_do_cc;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 AURORA_PMA_INIT_IN RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME AURORA_PMA_INIT_IN, POLARITY ACTIVE_HIGH, INSERT_VIP 0" *) input aurora_pma_init_in;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 INIT_CLK CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME INIT_CLK, ASSOCIATED_RESET aurora_pma_init_out, FREQ_HZ 50000000, FREQ_TOLERANCE_HZ 0, PHASE 0.0, CLK_DOMAIN zynq_bd_INIT_CLK, INSERT_VIP 0" *) input aurora_init_clk;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 AURORA_PMA_INIT_OUT RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME AURORA_PMA_INIT_OUT, POLARITY ACTIVE_HIGH, INSERT_VIP 0" *) output aurora_pma_init_out;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 AURORA_MMCM_NOT_LOCKED RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME AURORA_MMCM_NOT_LOCKED, POLARITY ACTIVE_HIGH, INSERT_VIP 0" *) input aurora_mmcm_not_locked;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 AURORA_RST_OUT RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME AURORA_RST_OUT, POLARITY ACTIVE_HIGH, INSERT_VIP 0" *) output aurora_reset_pb;
  output axi_c2c_config_error_out;
  output axi_c2c_link_status_out;
  output axi_c2c_multi_bit_error_out;
  output axi_c2c_link_error_out;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 s_axi_lite_aclk CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME s_axi_lite_aclk, ASSOCIATED_BUSIF s_axi_lite, FREQ_HZ 49999500, FREQ_TOLERANCE_HZ 0, PHASE 0.0, CLK_DOMAIN zynq_bd_ZynqMPSoC_0_pl_clk1, INSERT_VIP 0" *) input s_axi_lite_aclk;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite AWADDR" *) input [31:0]s_axi_lite_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite AWPROT" *) input [1:0]s_axi_lite_awprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite AWVALID" *) input s_axi_lite_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite AWREADY" *) output s_axi_lite_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite WDATA" *) input [31:0]s_axi_lite_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite WSTRB" *) input [3:0]s_axi_lite_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite WVALID" *) input s_axi_lite_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite WREADY" *) output s_axi_lite_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite BRESP" *) output [1:0]s_axi_lite_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite BVALID" *) output s_axi_lite_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite BREADY" *) input s_axi_lite_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite ARADDR" *) input [31:0]s_axi_lite_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite ARPROT" *) input [1:0]s_axi_lite_arprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite ARVALID" *) input s_axi_lite_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite ARREADY" *) output s_axi_lite_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite RDATA" *) output [31:0]s_axi_lite_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite RRESP" *) output [1:0]s_axi_lite_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite RVALID" *) output s_axi_lite_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_lite RREADY" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME s_axi_lite, DATA_WIDTH 32, PROTOCOL AXI4LITE, FREQ_HZ 49999500, ID_WIDTH 0, ADDR_WIDTH 32, AWUSER_WIDTH 0, ARUSER_WIDTH 0, WUSER_WIDTH 0, RUSER_WIDTH 0, BUSER_WIDTH 0, READ_WRITE_MODE READ_WRITE, HAS_BURST 0, HAS_LOCK 0, HAS_PROT 1, HAS_CACHE 0, HAS_QOS 0, HAS_REGION 0, HAS_WSTRB 1, HAS_BRESP 1, HAS_RRESP 1, SUPPORTS_NARROW_BURST 0, NUM_READ_OUTSTANDING 1, NUM_WRITE_OUTSTANDING 1, MAX_BURST_LENGTH 1, PHASE 0.0, CLK_DOMAIN zynq_bd_ZynqMPSoC_0_pl_clk1, NUM_READ_THREADS 1, NUM_WRITE_THREADS 1, RUSER_BITS_PER_BYTE 0, WUSER_BITS_PER_BYTE 0, INSERT_VIP 0" *) input s_axi_lite_rready;

  wire \<const0> ;
  wire aurora_do_cc;
  wire aurora_init_clk;
  wire aurora_mmcm_not_locked;
  wire aurora_pma_init_in;
  wire aurora_pma_init_out;
  wire aurora_reset_pb;
  wire axi_c2c_aurora_channel_up;
  wire [63:0]axi_c2c_aurora_rx_tdata;
  wire axi_c2c_aurora_rx_tvalid;
  wire [63:0]\^axi_c2c_aurora_tx_tdata ;
  wire axi_c2c_aurora_tx_tready;
  wire axi_c2c_aurora_tx_tvalid;
  wire axi_c2c_config_error_out;
  wire axi_c2c_link_error_out;
  wire axi_c2c_link_status_out;
  wire [3:0]axi_c2c_m2s_intr_in;
  wire axi_c2c_multi_bit_error_out;
  wire axi_c2c_phy_clk;
  wire [3:0]axi_c2c_s2m_intr_out;
  wire s_aclk;
  wire s_aresetn;
  wire [31:0]s_axi_araddr;
  wire [1:0]s_axi_arburst;
  wire [7:0]s_axi_arlen;
  wire s_axi_arready;
  wire [2:0]s_axi_arsize;
  wire s_axi_arvalid;
  wire [31:0]s_axi_awaddr;
  wire [1:0]s_axi_awburst;
  wire [7:0]s_axi_awlen;
  wire s_axi_awready;
  wire [2:0]s_axi_awsize;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire [1:0]s_axi_bresp;
  wire s_axi_bvalid;
  wire s_axi_lite_aclk;
  wire [31:0]s_axi_lite_araddr;
  wire [1:0]s_axi_lite_arprot;
  wire s_axi_lite_arready;
  wire s_axi_lite_arvalid;
  wire [31:0]s_axi_lite_awaddr;
  wire [1:0]s_axi_lite_awprot;
  wire s_axi_lite_awready;
  wire s_axi_lite_awvalid;
  wire s_axi_lite_bready;
  wire [1:0]s_axi_lite_bresp;
  wire s_axi_lite_bvalid;
  wire [31:0]s_axi_lite_rdata;
  wire s_axi_lite_rready;
  wire [1:0]s_axi_lite_rresp;
  wire s_axi_lite_rvalid;
  wire [31:0]s_axi_lite_wdata;
  wire s_axi_lite_wready;
  wire [3:0]s_axi_lite_wstrb;
  wire s_axi_lite_wvalid;
  wire [31:0]s_axi_rdata;
  wire s_axi_rlast;
  wire s_axi_rready;
  wire [1:0]s_axi_rresp;
  wire s_axi_rvalid;
  wire [31:0]s_axi_wdata;
  wire s_axi_wlast;
  wire s_axi_wready;
  wire [3:0]s_axi_wstrb;
  wire s_axi_wvalid;
  wire NLW_inst_axi_c2c_lnk_hndlr_in_progress_UNCONNECTED;
  wire NLW_inst_axi_c2c_selio_tx_clk_out_UNCONNECTED;
  wire NLW_inst_axi_c2c_selio_tx_diff_clk_out_n_UNCONNECTED;
  wire NLW_inst_axi_c2c_selio_tx_diff_clk_out_p_UNCONNECTED;
  wire NLW_inst_m_aclk_out_UNCONNECTED;
  wire NLW_inst_m_axi_arvalid_UNCONNECTED;
  wire NLW_inst_m_axi_awvalid_UNCONNECTED;
  wire NLW_inst_m_axi_bready_UNCONNECTED;
  wire NLW_inst_m_axi_lite_arvalid_UNCONNECTED;
  wire NLW_inst_m_axi_lite_awvalid_UNCONNECTED;
  wire NLW_inst_m_axi_lite_bready_UNCONNECTED;
  wire NLW_inst_m_axi_lite_rready_UNCONNECTED;
  wire NLW_inst_m_axi_lite_wvalid_UNCONNECTED;
  wire NLW_inst_m_axi_rready_UNCONNECTED;
  wire NLW_inst_m_axi_wlast_UNCONNECTED;
  wire NLW_inst_m_axi_wvalid_UNCONNECTED;
  wire [62:62]NLW_inst_axi_c2c_aurora_tx_tdata_UNCONNECTED;
  wire [3:0]NLW_inst_axi_c2c_m2s_intr_out_UNCONNECTED;
  wire [27:0]NLW_inst_axi_c2c_selio_tx_data_out_UNCONNECTED;
  wire [27:0]NLW_inst_axi_c2c_selio_tx_diff_data_out_n_UNCONNECTED;
  wire [27:0]NLW_inst_axi_c2c_selio_tx_diff_data_out_p_UNCONNECTED;
  wire [31:0]NLW_inst_m_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_inst_m_axi_arburst_UNCONNECTED;
  wire [0:0]NLW_inst_m_axi_arid_UNCONNECTED;
  wire [7:0]NLW_inst_m_axi_arlen_UNCONNECTED;
  wire [2:0]NLW_inst_m_axi_arsize_UNCONNECTED;
  wire [31:0]NLW_inst_m_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_inst_m_axi_awburst_UNCONNECTED;
  wire [0:0]NLW_inst_m_axi_awid_UNCONNECTED;
  wire [7:0]NLW_inst_m_axi_awlen_UNCONNECTED;
  wire [2:0]NLW_inst_m_axi_awsize_UNCONNECTED;
  wire [31:0]NLW_inst_m_axi_lite_araddr_UNCONNECTED;
  wire [1:0]NLW_inst_m_axi_lite_arprot_UNCONNECTED;
  wire [31:0]NLW_inst_m_axi_lite_awaddr_UNCONNECTED;
  wire [1:0]NLW_inst_m_axi_lite_awprot_UNCONNECTED;
  wire [31:0]NLW_inst_m_axi_lite_wdata_UNCONNECTED;
  wire [3:0]NLW_inst_m_axi_lite_wstrb_UNCONNECTED;
  wire [31:0]NLW_inst_m_axi_wdata_UNCONNECTED;
  wire [3:0]NLW_inst_m_axi_wstrb_UNCONNECTED;
  wire [0:0]NLW_inst_m_axi_wuser_UNCONNECTED;
  wire [0:0]NLW_inst_s_axi_bid_UNCONNECTED;
  wire [0:0]NLW_inst_s_axi_rid_UNCONNECTED;

  assign axi_c2c_aurora_tx_tdata[63] = \^axi_c2c_aurora_tx_tdata [63];
  assign axi_c2c_aurora_tx_tdata[62] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[61:0] = \^axi_c2c_aurora_tx_tdata [61:0];
  GND GND
       (.G(\<const0> ));
  (* ADDR_MUX_RATIO = "1" *) 
  (* ADDR_MUX_RATIO_ID_WID_0_TO_12 = "1" *) 
  (* AFIFO_DATA_SIZE = "45" *) 
  (* AFIFO_DATA_SIZE_M2 = "1" *) 
  (* AFIFO_DATA_SIZE_M3 = "0" *) 
  (* AFIFO_DATA_SIZE_M4 = "1" *) 
  (* AFIFO_TIE_WIDTH = "1" *) 
  (* AFIFO_WIDTH = "45" *) 
  (* AR_CH_FC = "128" *) 
  (* AR_CH_FIFO_DEPTH = "256" *) 
  (* AR_CH_PTR_WIDTH = "8" *) 
  (* AWB_FC_WIDTH = "2" *) 
  (* AW_CH_FC = "128" *) 
  (* AW_CH_FIFO_DEPTH = "256" *) 
  (* AW_CH_PTR_WIDTH = "8" *) 
  (* AXILITE_WIDTH = "20" *) 
  (* BFIFO_DATA_SIZE = "3" *) 
  (* BFIFO_WIDTH = "3" *) 
  (* BR_CH_FC = "128" *) 
  (* BR_CH_FIFO_DEPTH = "256" *) 
  (* BR_CH_PTR_WIDTH = "8" *) 
  (* C_AURORA_WIDTH = "64" *) 
  (* C_AXI_ADDR_WIDTH = "32" *) 
  (* C_AXI_BRST_WIDTH = "2" *) 
  (* C_AXI_BUS_TYPE = "0" *) 
  (* C_AXI_DATA_WIDTH = "32" *) 
  (* C_AXI_ID_WIDTH = "1" *) 
  (* C_AXI_LEN_WIDTH = "8" *) 
  (* C_AXI_LITE_ADDR_WIDTH = "32" *) 
  (* C_AXI_LITE_DATA_WIDTH = "32" *) 
  (* C_AXI_LITE_PROT_WIDTH = "2" *) 
  (* C_AXI_LITE_RESP_WIDTH = "2" *) 
  (* C_AXI_LITE_STB_WIDTH = "4" *) 
  (* C_AXI_RESP_WIDTH = "2" *) 
  (* C_AXI_SIZE_WIDTH = "3" *) 
  (* C_AXI_SIZE_WIDTH_INTERNAL = "2" *) 
  (* C_AXI_STB_WIDTH = "4" *) 
  (* C_AXI_WUSER_WIDTH = "1" *) 
  (* C_COMMON_CLK = "0" *) 
  (* C_DISABLE_CLK_SHIFT = "0" *) 
  (* C_DISABLE_DESKEW = "0" *) 
  (* C_ECC_ENABLE = "1" *) 
  (* C_EN_AXI_LINK_HNDLR = "0" *) 
  (* C_EN_LEGACY_MODE = "0" *) 
  (* C_FAMILY = "zynquplus" *) 
  (* C_FIFO_DEPTH_LH = "256" *) 
  (* C_INCLUDE_AXILITE = "1" *) 
  (* C_INSTANCE = "axi_c2c" *) 
  (* C_INTERFACE_MODE = "0" *) 
  (* C_INTERFACE_TYPE = "2" *) 
  (* C_INTERRUPT_WIDTH = "4" *) 
  (* C_MASTER_FPGA = "1" *) 
  (* C_NUM_OF_IO = "58" *) 
  (* C_PHY_SELECT = "1" *) 
  (* C_RD_CNTR_WIDTH = "8" *) 
  (* C_SELECTIO_DDR = "0" *) 
  (* C_SELECTIO_PHY_CLK = "100" *) 
  (* C_SELECTIO_WIDTH = "28" *) 
  (* C_SIMULATION = "0" *) 
  (* C_SYNC_STAGE = "3" *) 
  (* C_USE_DIFF_CLK = "0" *) 
  (* C_USE_DIFF_IO = "0" *) 
  (* C_WIDTH_CONVERSION = "1" *) 
  (* C_WR_CNTR_WIDTH = "8" *) 
  (* DATA_MUX_RATIO = "1" *) 
  (* DATA_MUX_RATIO_ID_WID_0_TO_12 = "1" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* EN_ECC = "1" *) 
  (* PHY_CTRL_WIDTH = "3" *) 
  (* PHY_DATA_WIDTH = "64" *) 
  (* RB_FC_WIDTH = "3" *) 
  (* RFIFO_DATA_SIZE = "36" *) 
  (* RFIFO_DATA_SIZE_M2 = "0" *) 
  (* RFIFO_DATA_SIZE_M3 = "0" *) 
  (* RFIFO_DATA_SIZE_M4 = "0" *) 
  (* RFIFO_TIE_WIDTH = "1" *) 
  (* RFIFO_WIDTH = "36" *) 
  (* TDM_ID_WIDTH = "2" *) 
  (* TDM_VAL_BITS = "1" *) 
  (* WFIFO_DATA_SIZE = "38" *) 
  (* WFIFO_DATA_SIZE_M2 = "0" *) 
  (* WFIFO_DATA_SIZE_M3 = "2" *) 
  (* WFIFO_DATA_SIZE_M4 = "2" *) 
  (* WFIFO_TIE_WIDTH = "1" *) 
  (* WFIFO_WIDTH = "38" *) 
  (* is_du_within_envelope = "true" *) 
  zynq_bd_C2C2_0_axi_chip2chip_v5_0_20 inst
       (.aurora_do_cc(aurora_do_cc),
        .aurora_init_clk(aurora_init_clk),
        .aurora_mmcm_not_locked(aurora_mmcm_not_locked),
        .aurora_pma_init_in(aurora_pma_init_in),
        .aurora_pma_init_out(aurora_pma_init_out),
        .aurora_reset_pb(aurora_reset_pb),
        .axi_c2c_aurora_channel_up(axi_c2c_aurora_channel_up),
        .axi_c2c_aurora_rx_tdata(axi_c2c_aurora_rx_tdata),
        .axi_c2c_aurora_rx_tvalid(axi_c2c_aurora_rx_tvalid),
        .axi_c2c_aurora_tx_tdata(\^axi_c2c_aurora_tx_tdata ),
        .axi_c2c_aurora_tx_tready(axi_c2c_aurora_tx_tready),
        .axi_c2c_aurora_tx_tvalid(axi_c2c_aurora_tx_tvalid),
        .axi_c2c_config_error_out(axi_c2c_config_error_out),
        .axi_c2c_link_error_out(axi_c2c_link_error_out),
        .axi_c2c_link_status_out(axi_c2c_link_status_out),
        .axi_c2c_lnk_hndlr_in_progress(NLW_inst_axi_c2c_lnk_hndlr_in_progress_UNCONNECTED),
        .axi_c2c_m2s_intr_in(axi_c2c_m2s_intr_in),
        .axi_c2c_m2s_intr_out(NLW_inst_axi_c2c_m2s_intr_out_UNCONNECTED[3:0]),
        .axi_c2c_multi_bit_error_out(axi_c2c_multi_bit_error_out),
        .axi_c2c_phy_clk(axi_c2c_phy_clk),
        .axi_c2c_s2m_intr_in({1'b0,1'b0,1'b0,1'b0}),
        .axi_c2c_s2m_intr_out(axi_c2c_s2m_intr_out),
        .axi_c2c_selio_rx_clk_in(1'b0),
        .axi_c2c_selio_rx_data_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_c2c_selio_rx_diff_clk_in_n(1'b0),
        .axi_c2c_selio_rx_diff_clk_in_p(1'b0),
        .axi_c2c_selio_rx_diff_data_in_n({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_c2c_selio_rx_diff_data_in_p({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_c2c_selio_tx_clk_out(NLW_inst_axi_c2c_selio_tx_clk_out_UNCONNECTED),
        .axi_c2c_selio_tx_data_out(NLW_inst_axi_c2c_selio_tx_data_out_UNCONNECTED[27:0]),
        .axi_c2c_selio_tx_diff_clk_out_n(NLW_inst_axi_c2c_selio_tx_diff_clk_out_n_UNCONNECTED),
        .axi_c2c_selio_tx_diff_clk_out_p(NLW_inst_axi_c2c_selio_tx_diff_clk_out_p_UNCONNECTED),
        .axi_c2c_selio_tx_diff_data_out_n(NLW_inst_axi_c2c_selio_tx_diff_data_out_n_UNCONNECTED[27:0]),
        .axi_c2c_selio_tx_diff_data_out_p(NLW_inst_axi_c2c_selio_tx_diff_data_out_p_UNCONNECTED[27:0]),
        .idelay_ref_clk(1'b0),
        .m_aclk(1'b0),
        .m_aclk_out(NLW_inst_m_aclk_out_UNCONNECTED),
        .m_aresetn(1'b1),
        .m_axi_araddr(NLW_inst_m_axi_araddr_UNCONNECTED[31:0]),
        .m_axi_arburst(NLW_inst_m_axi_arburst_UNCONNECTED[1:0]),
        .m_axi_arid(NLW_inst_m_axi_arid_UNCONNECTED[0]),
        .m_axi_arlen(NLW_inst_m_axi_arlen_UNCONNECTED[7:0]),
        .m_axi_arready(1'b0),
        .m_axi_arsize(NLW_inst_m_axi_arsize_UNCONNECTED[2:0]),
        .m_axi_arvalid(NLW_inst_m_axi_arvalid_UNCONNECTED),
        .m_axi_awaddr(NLW_inst_m_axi_awaddr_UNCONNECTED[31:0]),
        .m_axi_awburst(NLW_inst_m_axi_awburst_UNCONNECTED[1:0]),
        .m_axi_awid(NLW_inst_m_axi_awid_UNCONNECTED[0]),
        .m_axi_awlen(NLW_inst_m_axi_awlen_UNCONNECTED[7:0]),
        .m_axi_awready(1'b0),
        .m_axi_awsize(NLW_inst_m_axi_awsize_UNCONNECTED[2:0]),
        .m_axi_awvalid(NLW_inst_m_axi_awvalid_UNCONNECTED),
        .m_axi_bid(1'b0),
        .m_axi_bready(NLW_inst_m_axi_bready_UNCONNECTED),
        .m_axi_bresp({1'b0,1'b0}),
        .m_axi_bvalid(1'b0),
        .m_axi_lite_aclk(1'b0),
        .m_axi_lite_araddr(NLW_inst_m_axi_lite_araddr_UNCONNECTED[31:0]),
        .m_axi_lite_arprot(NLW_inst_m_axi_lite_arprot_UNCONNECTED[1:0]),
        .m_axi_lite_arready(1'b0),
        .m_axi_lite_arvalid(NLW_inst_m_axi_lite_arvalid_UNCONNECTED),
        .m_axi_lite_awaddr(NLW_inst_m_axi_lite_awaddr_UNCONNECTED[31:0]),
        .m_axi_lite_awprot(NLW_inst_m_axi_lite_awprot_UNCONNECTED[1:0]),
        .m_axi_lite_awready(1'b0),
        .m_axi_lite_awvalid(NLW_inst_m_axi_lite_awvalid_UNCONNECTED),
        .m_axi_lite_bready(NLW_inst_m_axi_lite_bready_UNCONNECTED),
        .m_axi_lite_bresp({1'b0,1'b0}),
        .m_axi_lite_bvalid(1'b0),
        .m_axi_lite_rdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .m_axi_lite_rready(NLW_inst_m_axi_lite_rready_UNCONNECTED),
        .m_axi_lite_rresp({1'b0,1'b0}),
        .m_axi_lite_rvalid(1'b0),
        .m_axi_lite_wdata(NLW_inst_m_axi_lite_wdata_UNCONNECTED[31:0]),
        .m_axi_lite_wready(1'b0),
        .m_axi_lite_wstrb(NLW_inst_m_axi_lite_wstrb_UNCONNECTED[3:0]),
        .m_axi_lite_wvalid(NLW_inst_m_axi_lite_wvalid_UNCONNECTED),
        .m_axi_rdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .m_axi_rid(1'b0),
        .m_axi_rlast(1'b0),
        .m_axi_rready(NLW_inst_m_axi_rready_UNCONNECTED),
        .m_axi_rresp({1'b0,1'b0}),
        .m_axi_rvalid(1'b0),
        .m_axi_wdata(NLW_inst_m_axi_wdata_UNCONNECTED[31:0]),
        .m_axi_wlast(NLW_inst_m_axi_wlast_UNCONNECTED),
        .m_axi_wready(1'b0),
        .m_axi_wstrb(NLW_inst_m_axi_wstrb_UNCONNECTED[3:0]),
        .m_axi_wuser(NLW_inst_m_axi_wuser_UNCONNECTED[0]),
        .m_axi_wvalid(NLW_inst_m_axi_wvalid_UNCONNECTED),
        .s_aclk(s_aclk),
        .s_aresetn(s_aresetn),
        .s_axi_araddr(s_axi_araddr),
        .s_axi_arburst(s_axi_arburst),
        .s_axi_arid(1'b0),
        .s_axi_arlen(s_axi_arlen),
        .s_axi_arready(s_axi_arready),
        .s_axi_arsize({1'b0,s_axi_arsize[1:0]}),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awaddr(s_axi_awaddr),
        .s_axi_awburst(s_axi_awburst),
        .s_axi_awid(1'b0),
        .s_axi_awlen(s_axi_awlen),
        .s_axi_awready(s_axi_awready),
        .s_axi_awsize({1'b0,s_axi_awsize[1:0]}),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bid(NLW_inst_s_axi_bid_UNCONNECTED[0]),
        .s_axi_bready(s_axi_bready),
        .s_axi_bresp(s_axi_bresp),
        .s_axi_bvalid(s_axi_bvalid),
        .s_axi_lite_aclk(s_axi_lite_aclk),
        .s_axi_lite_araddr(s_axi_lite_araddr),
        .s_axi_lite_arprot(s_axi_lite_arprot),
        .s_axi_lite_arready(s_axi_lite_arready),
        .s_axi_lite_arvalid(s_axi_lite_arvalid),
        .s_axi_lite_awaddr(s_axi_lite_awaddr),
        .s_axi_lite_awprot(s_axi_lite_awprot),
        .s_axi_lite_awready(s_axi_lite_awready),
        .s_axi_lite_awvalid(s_axi_lite_awvalid),
        .s_axi_lite_bready(s_axi_lite_bready),
        .s_axi_lite_bresp(s_axi_lite_bresp),
        .s_axi_lite_bvalid(s_axi_lite_bvalid),
        .s_axi_lite_rdata(s_axi_lite_rdata),
        .s_axi_lite_rready(s_axi_lite_rready),
        .s_axi_lite_rresp(s_axi_lite_rresp),
        .s_axi_lite_rvalid(s_axi_lite_rvalid),
        .s_axi_lite_wdata(s_axi_lite_wdata),
        .s_axi_lite_wready(s_axi_lite_wready),
        .s_axi_lite_wstrb(s_axi_lite_wstrb),
        .s_axi_lite_wvalid(s_axi_lite_wvalid),
        .s_axi_rdata(s_axi_rdata),
        .s_axi_rid(NLW_inst_s_axi_rid_UNCONNECTED[0]),
        .s_axi_rlast(s_axi_rlast),
        .s_axi_rready(s_axi_rready),
        .s_axi_rresp(s_axi_rresp),
        .s_axi_rvalid(s_axi_rvalid),
        .s_axi_wdata(s_axi_wdata),
        .s_axi_wlast(s_axi_wlast),
        .s_axi_wready(s_axi_wready),
        .s_axi_wstrb(s_axi_wstrb),
        .s_axi_wuser(1'b0),
        .s_axi_wvalid(s_axi_wvalid));
endmodule
`pragma protect begin_protected
`pragma protect version = 1
`pragma protect encrypt_agent = "XILINX"
`pragma protect encrypt_agent_info = "Xilinx Encryption Tool 2023.2"
`pragma protect key_keyowner="Synopsys", key_keyname="SNPS-VCS-RSA-2", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=128)
`pragma protect key_block
dheoa7qy6GoRk6iGRBTcCyKnJw4WEJjXQUofGqUCrTBz9TXbAVyuWPyJ2ZLFLnPZAmbZZC1Jttgt
3sdvH+vCSqcQNzzuIgzkA1hvpVV9ZOAXL5oM3VuRUrz7hnAt3lSLNEpBE6p/6gtJ+w+92f2WwwUC
21rbkp5TyIfkzW065sE=

`pragma protect key_keyowner="Aldec", key_keyname="ALDEC15_001", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
KFbn7tTAdJt5tIuHXM4J1CV/u5oPGCBiZ99rYke40eWUgexxUrV+t0ZAJs8vm2t/6KyPrJ6RzNhd
85vFYVJRpJtzZLGB+iYTXXU42O2ooQreJllQFZGb/aUh+DngKaiR53d7RC3eR62md7GC7YA7Kg2/
koMLbR7YrRJko0/wcNvftUR+doOj512xDuEaJrIAWsviMj/F2TO9fxXGe0HanjHaC/Eij3g5E3d8
q2lVpHFwah8hb0TD12rpE7vS6ZPp/W2GX2uhCE4AHfzii4uEkYoDCmSRTxo27ruqoJLDBK0u997A
Y7PEwQUPVSHwpqHqjexjrUauUjh6XI5w9/nkCg==

`pragma protect key_keyowner="Mentor Graphics Corporation", key_keyname="MGC-VELOCE-RSA", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=128)
`pragma protect key_block
ENaxhv/CPhmdw9dS/ZCpvmkAQ75sW2WjIDmxy3qcEQq9fZ+/Pqca+zGebtobkKK0blL2RH7StPik
kJrfpJ2fwBCZMHHvziLC7t8YGcyF+wXLzOHrc0PGSnvzCEnebbJ9d9qiIr8/QmIa+RNYtdWNne9X
ND0P3GzcTYgNiYsQG/w=

`pragma protect key_keyowner="Mentor Graphics Corporation", key_keyname="MGC-VERIF-SIM-RSA-2", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
syfsvQAbWS4UqtSx023kV/BtyZAf0ag5qNRKpm858vck3W+vsN2lhK0cxVuyDeNlmMl7oy0/W3Af
jU/lbPHSWbIr2sAhtmIPobNuMnEc89wXsVmtKIahmtBvE/q4buiuN/U1miRDpjCYM69XJDFHTjnu
9l9PNIo8Y9f0j+LzFrnJilWXBEnhNNw/EdjUE7WtVrQ5NDnPMveWrbWZYVQb9xPX+kw/RARam6Ar
rWYa1Wk6ZpFazf9y4jKW6Nx5LzWpKhtc0PR5EEiyDOcxSSQz7BjQGBeWjhp9ewNVJRZFg0Ih9/2L
64RbYKHxA86Qe/ffHFYW40e5BCR6+Zy4Oc073A==

`pragma protect key_keyowner="Real Intent", key_keyname="RI-RSA-KEY-1", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
AmVDziCOCiswI//oMKbTwV9Y4cyhGqEhT1JnUisd+4dqLyq1TUFpOLn9mF7li+RfW9W1m4jKYulD
kJA5b4eFJOO/cpHbqrV6KfIF/IkppLiGJ7oNvZ29e8H8LVUigdaawOL7IrW8uXFDn3td4VZ7l/0J
enSZ1q0r/gNcCRQRz80QSsxyjtFvgfK20VeSyoWLHSexf7L+rfes9Phl0ijrOnYt543aCo0gu3AM
GLApxcdXgU4TCuDhraNXQM3zRgNiv4ixC/332IXO05SOkgJve1s0vrAcM5sr63Z04a5ISE0KH8Vk
0UDsukCNzKhC45Qcts/BGTHwSugPzGqfdpfUWQ==

`pragma protect key_keyowner="Metrics Technologies Inc.", key_keyname="DSim", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
iF1nQIMjUmtQOIrD8A87pTN+7ZsiWnz9Xj+r6hwpM6UwgAecu2jUCfftCYO/LLpDtsnrmiy1lg+W
PUXfnW1liM3UzmeeeTZ787pEdodOHGHIFjqahII6nAliVZteg4pXjco+ZZ/Yua0D+E/qX7hXtZ+X
wsXt38YVsjpzpcy+apfzIOfut7McxcGx3nreYhFCJK8isYHJfWlB1OqOYLLcH/pGb4s1f440XSZR
8PsGKoUQWWoucw1zcGD3Ye9Lg1a/Hblay/0LKoYXgoBmBXdjuRUZKj2yB/c1q8uQ2uatHOy03kKp
4LYjRJWz54HZYCv7uv4xitpIi5vgN/YiPqKB5Q==

`pragma protect key_keyowner="Xilinx", key_keyname="xilinxt_2022_10", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
XGpd/hDywwUv3qEUIpSpFU/aGAqGAolbfoqID7yTM63Aw0gYlvUK/0UJU5x/lboCkdq6HcDUvSfM
EtLfDZ8/XxBxevgokJwml+QniFy7PDMvjE0eJeqcG70FZeirS40Zl2KrUA3CjGMj9N34nXLFVVZI
67050hdyYTwKO8KpfxKOF2yDpNYzUZs5HA0dpSkO6mSufNtthQLI1JOXRRvEIuEs0yjOUHxI+Mg0
s2QNxvyBgOqrtiEUWSW2P6GyBgb2KS6CimKcv3HQqmHmD+LSYXyHjnRdZj1nsfvdeuZTprGw8cQA
3eNDO2XG76mTmc1pvu4zd2SKBW8reuxARL7DOQ==

`pragma protect key_keyowner="Atrenta", key_keyname="ATR-SG-RSA-1", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=384)
`pragma protect key_block
txIYBGYclM3WJyFO/GAY6iTCGrnUvaBWMRrewSXZS2VCcKdaSGkooZc1KcOMcdAxduXl2PR88DEi
oA4lOnikzd6dZKQunJbA7p+ze4GUE7VLY2+Ol5+Ts1AmgGAGn8XYwaw+trP4hoeD+VdKRRZCenNU
4/7UnBms41jy1M0TkThv1lqzFnPu4tOX1sUOKas07WQ/6k3CLqv6TQma+HQo1mG/OA1SpsiOQxms
vKoPd7g2sBzHbXc8w2xrvNgMvt97kNSOxS6fWeod/8O+5UYSlU7OCt6ponbgPXJa365II61l3/4a
3sqnka/RMhjkinMs0HpR48Wh1uDgPFzwmI9aHUsvKtP14DDdz+TPqojEgT8pdTCOdoc9H0DnAQN6
9ft2KqjfUJ5YZACEDZ+izfLWob3iuuBJ8YmOjGV/ZMulzINgefeD5awRSjwzx0z4Iy4lLxoC5t65
bnWFxnX10h4H0isknHNdxJ1RPesYSLpI360LHACanMI59GUZ2vApLAtQ

`pragma protect key_keyowner="Cadence Design Systems.", key_keyname="CDS_RSA_KEY_VER_1", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
H/C+3tbi1GTKqCxcSXccD8ddO7CbBTWKEaKQsuXAyRh0UO88wtwBzQOlYtOrF51zB85n6YhsaDcS
J25DMNfjhsnDtTzED+dirm+l1FNsykm8KfwtoQfLSgYZ3onOaOpzSaVy4kMEeTUhTozpWODl32K7
+r62PPCBtKKnaszI26TxhTdfv6oh29UtSy58AAmQXv13nMnFvDMfo3w18e2bzT0+Tw3Mzwe6mrRw
LVkRxSo6Esg8aIpqLuvsEg4xtaSfxrcfPLzcvd6iNkPpw3mzzSpJoQm6ABjBA3DM6RTaghMuDcGg
fM9t2RmTFaJZ5TXN0GGYtNkKAexEtliN/lKhOQ==

`pragma protect data_method = "AES128-CBC"
`pragma protect encoding = (enctype = "BASE64", line_length = 76, bytes = 541264)
`pragma protect data_block
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
`pragma protect end_protected
`ifndef GLBL
`define GLBL
`timescale  1 ps / 1 ps

module glbl ();

    parameter ROC_WIDTH = 100000;
    parameter TOC_WIDTH = 0;
    parameter GRES_WIDTH = 10000;
    parameter GRES_START = 10000;

//--------   STARTUP Globals --------------
    wire GSR;
    wire GTS;
    wire GWE;
    wire PRLD;
    wire GRESTORE;
    tri1 p_up_tmp;
    tri (weak1, strong0) PLL_LOCKG = p_up_tmp;

    wire PROGB_GLBL;
    wire CCLKO_GLBL;
    wire FCSBO_GLBL;
    wire [3:0] DO_GLBL;
    wire [3:0] DI_GLBL;
   
    reg GSR_int;
    reg GTS_int;
    reg PRLD_int;
    reg GRESTORE_int;

//--------   JTAG Globals --------------
    wire JTAG_TDO_GLBL;
    wire JTAG_TCK_GLBL;
    wire JTAG_TDI_GLBL;
    wire JTAG_TMS_GLBL;
    wire JTAG_TRST_GLBL;

    reg JTAG_CAPTURE_GLBL;
    reg JTAG_RESET_GLBL;
    reg JTAG_SHIFT_GLBL;
    reg JTAG_UPDATE_GLBL;
    reg JTAG_RUNTEST_GLBL;

    reg JTAG_SEL1_GLBL = 0;
    reg JTAG_SEL2_GLBL = 0 ;
    reg JTAG_SEL3_GLBL = 0;
    reg JTAG_SEL4_GLBL = 0;

    reg JTAG_USER_TDO1_GLBL = 1'bz;
    reg JTAG_USER_TDO2_GLBL = 1'bz;
    reg JTAG_USER_TDO3_GLBL = 1'bz;
    reg JTAG_USER_TDO4_GLBL = 1'bz;

    assign (strong1, weak0) GSR = GSR_int;
    assign (strong1, weak0) GTS = GTS_int;
    assign (weak1, weak0) PRLD = PRLD_int;
    assign (strong1, weak0) GRESTORE = GRESTORE_int;

    initial begin
	GSR_int = 1'b1;
	PRLD_int = 1'b1;
	#(ROC_WIDTH)
	GSR_int = 1'b0;
	PRLD_int = 1'b0;
    end

    initial begin
	GTS_int = 1'b1;
	#(TOC_WIDTH)
	GTS_int = 1'b0;
    end

    initial begin 
	GRESTORE_int = 1'b0;
	#(GRES_START);
	GRESTORE_int = 1'b1;
	#(GRES_WIDTH);
	GRESTORE_int = 1'b0;
    end

endmodule
`endif
